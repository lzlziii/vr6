using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using Cinemachine;
using Cinemachine.Utility;
using FMOD.Studio;
using FMODUnity;
using Il2CppDummyDll;
using LitJson;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pico.Pvr_UnitySDKAPI;
using Pico.Pvr_UnitySDKAPI.Achievement;
using RootMotion.FinalIK;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ChangeBGMOnTriggerDirection : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string bgm_SideA;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string bgm_SideB;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameTV tvSide;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tagToCheck;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xAAD350", Offset = "0xAAD350", VA = "0xAAD350")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xAAD5C8", Offset = "0xAAD5C8", VA = "0xAAD5C8")]
	private void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xAAD390", Offset = "0xAAD390", VA = "0xAAD390")]
	private void CheckColl(GameObject obj)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xAAD608", Offset = "0xAAD608", VA = "0xAAD608")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xAAD60C", Offset = "0xAAD60C", VA = "0xAAD60C")]
	public ChangeBGMOnTriggerDirection()
	{
	}
}
[Token(Token = "0x2000003")]
public class ChangeGravity : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsBody body;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xAAE1E4", Offset = "0xAAE1E4", VA = "0xAAE1E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xAAE248", Offset = "0xAAE248", VA = "0xAAE248")]
	public void ChangeBodyGravity(int value)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xAAE27C", Offset = "0xAAE27C", VA = "0xAAE27C")]
	public ChangeGravity()
	{
	}
}
[Token(Token = "0x2000004")]
public class ChangeInGameBGMOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string newBGM;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tagToCheck;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xAAE284", Offset = "0xAAE284", VA = "0xAAE284")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xAAE360", Offset = "0xAAE360", VA = "0xAAE360")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xAAE2E4", Offset = "0xAAE2E4", VA = "0xAAE2E4")]
	private void ChangeBGM()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xAAE3C0", Offset = "0xAAE3C0", VA = "0xAAE3C0")]
	public ChangeInGameBGMOnTrigger()
	{
	}
}
[Token(Token = "0x2000005")]
public class CleanupPhase2Save : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD654", Offset = "0x7BD654")]
	public int releasedBuildNumber;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xBE9508", Offset = "0xBE9508", VA = "0xBE9508")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xBE95A8", Offset = "0xBE95A8", VA = "0xBE95A8")]
	private void CleanupSave()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xBE9938", Offset = "0xBE9938", VA = "0xBE9938")]
	public CleanupPhase2Save()
	{
	}
}
[Token(Token = "0x2000006")]
public class ColliderDelayOnEnable : MonoBehaviour
{
	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA04", Offset = "0x7BCA04")]
	private sealed class <EnableCollider>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColliderDelayOnEnable <>4__this;

		[Token(Token = "0x1700032C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600243C")]
			[Address(RVA = "0xBEB8F8", Offset = "0xBEB8F8", VA = "0xBEB8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0xBEB968", Offset = "0xBEB968", VA = "0xBEB968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xBEB60C", Offset = "0xBEB60C", VA = "0xBEB60C")]
		[DebuggerHidden]
		public <EnableCollider>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xBEB6D4", Offset = "0xBEB6D4", VA = "0xBEB6D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xBEB6D8", Offset = "0xBEB6D8", VA = "0xBEB6D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xBEB900", Offset = "0xBEB900", VA = "0xBEB900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider coll;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider2D coll2D;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine enableCollCoroutine;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xBEB500", Offset = "0xBEB500", VA = "0xBEB500")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xBEB58C", Offset = "0xBEB58C", VA = "0xBEB58C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCDA0", Offset = "0x7CCDA0")]
	private IEnumerator EnableCollider()
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xBEB638", Offset = "0xBEB638", VA = "0xBEB638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xBEB678", Offset = "0xBEB678", VA = "0xBEB678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xBEB6C4", Offset = "0xBEB6C4", VA = "0xBEB6C4")]
	public ColliderDelayOnEnable()
	{
	}
}
[Token(Token = "0x2000007")]
public class CreditsItem : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector playable;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator[] animators;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextLocalizing localizing;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CreditsText[] allTexts;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool titleFadedOut;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool nameFadedOut;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xBEE08C", Offset = "0xBEE08C", VA = "0xBEE08C")]
	private CreditsText[] GetAllTexts()
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xBEE0DC", Offset = "0xBEE0DC", VA = "0xBEE0DC")]
	private TextLocalizing GetLocalizing()
	{
		return null;
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xBEE12C", Offset = "0xBEE12C", VA = "0xBEE12C")]
	private PlayableDirector GetPlayable()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xBEE17C", Offset = "0xBEE17C", VA = "0xBEE17C")]
	private Animator[] GetAnimators()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xBEE1CC", Offset = "0xBEE1CC", VA = "0xBEE1CC")]
	private void CheckAllTexts()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xBEE3A4", Offset = "0xBEE3A4", VA = "0xBEE3A4")]
	private void CheckPlayable()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xBEE450", Offset = "0xBEE450", VA = "0xBEE450")]
	private void CheckAnimators()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xBEE4A8", Offset = "0xBEE4A8", VA = "0xBEE4A8")]
	public void StartPlayable(out double duration)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xBEE648", Offset = "0xBEE648", VA = "0xBEE648")]
	public void SetPlayableTimeline(PlayableAsset newTimeline, Transform startLocation, Transform middleLocation, Transform endLocation)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBEE6C0", Offset = "0xBEE6C0", VA = "0xBEE6C0")]
	private void SetPlayableBindings(Transform t1, Transform t2, Transform t3)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBEF088", Offset = "0xBEF088", VA = "0xBEF088")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBEF08C", Offset = "0xBEF08C", VA = "0xBEF08C")]
	public void SetNames(string names)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xBEF180", Offset = "0xBEF180", VA = "0xBEF180")]
	public string GetLocalizingString()
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xBEF2C0", Offset = "0xBEF2C0", VA = "0xBEF2C0")]
	public void SetLocalizingString(string value)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xBEF1C8", Offset = "0xBEF1C8", VA = "0xBEF1C8")]
	private bool CheckLocalizing()
	{
		return default(bool);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xBEE51C", Offset = "0xBEE51C", VA = "0xBEE51C")]
	public void EnableTitle()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xBEE590", Offset = "0xBEE590", VA = "0xBEE590")]
	public void EnableName()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xBEF3D4", Offset = "0xBEF3D4", VA = "0xBEF3D4")]
	public bool GetTitleFadeStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xBEF3E4", Offset = "0xBEF3E4", VA = "0xBEF3E4")]
	public bool GetNameFadeStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xBEF3F4", Offset = "0xBEF3F4", VA = "0xBEF3F4")]
	public void TitleFadeOut()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xBEF494", Offset = "0xBEF494", VA = "0xBEF494")]
	public void NameFadeOut()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xBEF534", Offset = "0xBEF534", VA = "0xBEF534")]
	public void DisableObjects()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xBEF5EC", Offset = "0xBEF5EC", VA = "0xBEF5EC")]
	public CreditsItem()
	{
	}
}
[Token(Token = "0x2000008")]
public class CreditsManager : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	public enum CreditsAnimationType
	{
		[Token(Token = "0x4001B3B")]
		Middle,
		[Token(Token = "0x4001B3C")]
		Bottom
	}

	[Serializable]
	[Token(Token = "0x2000542")]
	public struct CreditsInfo
	{
		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreditsAnimationType type;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string title;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7CC068", Offset = "0x7CC068")]
		public string names;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC080", Offset = "0x7CC080")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC080", Offset = "0x7CC080")]
		public float nextTrigger;
	}

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject creditsItemPrefab;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float afterCreditsTimer;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD68C", Offset = "0x7BD68C")]
	public PlayableAsset[] timelines;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] tweenReferencePositions;

	[Token(Token = "0x4000017")]
	public const string timelineTransformName = "Tween";

	[Token(Token = "0x4000018")]
	public const string timelineTitleName = "Title";

	[Token(Token = "0x4000019")]
	public const string timelineNamesName = "Names";

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD6C4", Offset = "0x7BD6C4")]
	private List<CreditsItem> allItems;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _itemIndex;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double _itemDuration;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _percentage;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _count;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CreditsInfo[] creditsInfo;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xBEF5F4", Offset = "0xBEF5F4", VA = "0xBEF5F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBEF620", Offset = "0xBEF620", VA = "0xBEF620")]
	private void GetItems()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xBEF7BC", Offset = "0xBEF7BC", VA = "0xBEF7BC")]
	public void UpdateItems()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xBEF694", Offset = "0xBEF694", VA = "0xBEF694")]
	public void DisableAllItems()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xBF00B4", Offset = "0xBF00B4", VA = "0xBF00B4")]
	public void StartSequence()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xBF00DC", Offset = "0xBF00DC", VA = "0xBF00DC")]
	private void StartNextTimeline()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBF01B4", Offset = "0xBF01B4", VA = "0xBF01B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBF021C", Offset = "0xBF021C", VA = "0xBF021C")]
	private void CheckIndex()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBF02C4", Offset = "0xBF02C4", VA = "0xBF02C4")]
	private void EndCredits()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xBF033C", Offset = "0xBF033C", VA = "0xBF033C")]
	public CreditsManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class CreditsText : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA14", Offset = "0x7BCA14")]
	private sealed class <FadeIn>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsText <>4__this;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <_time>5__2;

		[Token(Token = "0x1700032E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0xBF07D8", Offset = "0xBF07D8", VA = "0xBF07D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0xBF0848", Offset = "0xBF0848", VA = "0xBF0848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xBF0590", Offset = "0xBF0590", VA = "0xBF0590")]
		[DebuggerHidden]
		public <FadeIn>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xBF06A0", Offset = "0xBF06A0", VA = "0xBF06A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xBF06A4", Offset = "0xBF06A4", VA = "0xBF06A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xBF07E0", Offset = "0xBF07E0", VA = "0xBF07E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA24", Offset = "0x7BCA24")]
	private sealed class <FadeOut>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsText <>4__this;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <_time>5__2;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0xBF0A60", Offset = "0xBF0A60", VA = "0xBF0A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600244A")]
			[Address(RVA = "0xBF0AD0", Offset = "0xBF0AD0", VA = "0xBF0AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0xBF066C", Offset = "0xBF066C", VA = "0xBF066C")]
		[DebuggerHidden]
		public <FadeOut>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xBF0850", Offset = "0xBF0850", VA = "0xBF0850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xBF0854", Offset = "0xBF0854", VA = "0xBF0854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xBF0A68", Offset = "0xBF0A68", VA = "0xBF0A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textComponent;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBEE340", Offset = "0xBEE340", VA = "0xBEE340")]
	public void CheckText()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBF0408", Offset = "0xBF0408", VA = "0xBF0408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBF0588", Offset = "0xBF0588", VA = "0xBF0588")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xBF04D8", Offset = "0xBF04D8", VA = "0xBF04D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCE04", Offset = "0x7CCE04")]
	private IEnumerator FadeIn(float time)
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xBEF458", Offset = "0xBEF458", VA = "0xBEF458")]
	public void StartFadeOut()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xBF05BC", Offset = "0xBF05BC", VA = "0xBF05BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCE68", Offset = "0x7CCE68")]
	private IEnumerator FadeOut(float time)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBF0698", Offset = "0xBF0698", VA = "0xBF0698")]
	public CreditsText()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x9894F0", Offset = "0x9894F0", VA = "0x9894F0")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000001")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x989534", Offset = "0x989534", VA = "0x989534", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x98953C", Offset = "0x98953C", VA = "0x98953C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x9895DC", Offset = "0x9895DC", VA = "0x9895DC")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x200000C")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x98964C", Offset = "0x98964C", VA = "0x98964C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x989AF0", Offset = "0x989AF0", VA = "0x989AF0", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x989C2C", Offset = "0x989C2C", VA = "0x989C2C")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9B64", Offset = "0x7B9B64")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9B64", Offset = "0x7B9B64")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7B9B64", Offset = "0x7B9B64")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000044")]
	[Address(RVA = "0x989C34", Offset = "0x989C34", VA = "0x989C34", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x989CCC", Offset = "0x989CCC", VA = "0x989CCC", Slot = "23")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x989CD4", Offset = "0x989CD4", VA = "0x989CD4")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xA3AB54", Offset = "0xA3AB54", VA = "0xA3AB54", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xA3AB5C", Offset = "0xA3AB5C", VA = "0xA3AB5C")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000002")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xA3AB64", Offset = "0xA3AB64", VA = "0xA3AB64", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xA3AB6C", Offset = "0xA3AB6C", VA = "0xA3AB6C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xA3AC8C", Offset = "0xA3AC8C", VA = "0xA3AC8C")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000010")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x600004C")]
	[Address(RVA = "0xA3AD00", Offset = "0xA3AD00", VA = "0xA3AD00", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xA3AF74", Offset = "0xA3AF74", VA = "0xA3AF74")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9C18", Offset = "0x7B9C18")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9C18", Offset = "0x7B9C18")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7B9C18", Offset = "0x7B9C18")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x600004E")]
	[Address(RVA = "0xA3AF7C", Offset = "0xA3AF7C", VA = "0xA3AF7C", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xA3B014", Offset = "0xA3B014", VA = "0xA3B014")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xA6E400", Offset = "0xA6E400", VA = "0xA6E400")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000003")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xA6E434", Offset = "0xA6E434", VA = "0xA6E434", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA6E43C", Offset = "0xA6E43C", VA = "0xA6E43C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA6E4DC", Offset = "0xA6E4DC", VA = "0xA6E4DC")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x2000014")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xA6E54C", Offset = "0xA6E54C", VA = "0xA6E54C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xA6E8A8", Offset = "0xA6E8A8", VA = "0xA6E8A8", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xA6E980", Offset = "0xA6E980", VA = "0xA6E980")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9CCC", Offset = "0x7B9CCC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9CCC", Offset = "0x7B9CCC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7B9CCC", Offset = "0x7B9CCC")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x6000057")]
	[Address(RVA = "0xA6E988", Offset = "0xA6E988", VA = "0xA6E988", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xA6EA20", Offset = "0xA6EA20", VA = "0xA6EA20", Slot = "23")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xA6EA28", Offset = "0xA6EA28", VA = "0xA6EA28")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xA84DCC", Offset = "0xA84DCC", VA = "0xA84DCC")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0xA84E08", Offset = "0xA84E08", VA = "0xA84E08", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xA84E10", Offset = "0xA84E10", VA = "0xA84E10", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xA84EB0", Offset = "0xA84EB0", VA = "0xA84EB0")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xA84F20", Offset = "0xA84F20", VA = "0xA84F20", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xA853FC", Offset = "0xA853FC", VA = "0xA853FC", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xA85530", Offset = "0xA85530", VA = "0xA85530")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9D7C", Offset = "0x7B9D7C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9D7C", Offset = "0x7B9D7C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7B9D7C", Offset = "0x7B9D7C")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000061")]
	[Address(RVA = "0xA85538", Offset = "0xA85538", VA = "0xA85538", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xA855D0", Offset = "0xA855D0", VA = "0xA855D0", Slot = "23")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xA855D8", Offset = "0xA855D8", VA = "0xA855D8")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xA86B5C", Offset = "0xA86B5C", VA = "0xA86B5C")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xA86B6C", Offset = "0xA86B6C", VA = "0xA86B6C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xA86B74", Offset = "0xA86B74", VA = "0xA86B74", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xA86C14", Offset = "0xA86C14", VA = "0xA86C14")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x200001C")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xA86C90", Offset = "0xA86C90", VA = "0xA86C90", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xA86E60", Offset = "0xA86E60", VA = "0xA86E60", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xA86E6C", Offset = "0xA86E6C", VA = "0xA86E6C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xA86E78", Offset = "0xA86E78", VA = "0xA86E78", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA86E84", Offset = "0xA86E84", VA = "0xA86E84")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9E30", Offset = "0x7B9E30")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9E30", Offset = "0x7B9E30")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA86E94", Offset = "0xA86E94", VA = "0xA86E94", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA86F2C", Offset = "0xA86F2C", VA = "0xA86F2C")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x2000545")]
	public enum TweenType
	{
		[Token(Token = "0x4001B4C")]
		Linear,
		[Token(Token = "0x4001B4D")]
		Deceleration,
		[Token(Token = "0x4001B4E")]
		Harmonic,
		[Token(Token = "0x4001B4F")]
		Custom
	}

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool tweenLocalScale;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 startingLocalScale;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x400004F")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA8EE40", Offset = "0xA8EE40", VA = "0xA8EE40", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA8EF20", Offset = "0xA8EF20", VA = "0xA8EF20")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xA8F024", Offset = "0xA8F024", VA = "0xA8F024")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xA8F2B0", Offset = "0xA8F2B0", VA = "0xA8F2B0")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xA8F518", Offset = "0xA8F518", VA = "0xA8F518", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA8F520", Offset = "0xA8F520", VA = "0xA8F520", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA8F680", Offset = "0xA8F680", VA = "0xA8F680")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000020")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA8F6F0", Offset = "0xA8F6F0", VA = "0xA8F6F0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA90004", Offset = "0xA90004", VA = "0xA90004", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA8FFF0", Offset = "0xA8FFF0", VA = "0xA8FFF0")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA8FFDC", Offset = "0xA8FFDC", VA = "0xA8FFDC")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA9000C", Offset = "0xA9000C", VA = "0xA9000C")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA8FEE0", Offset = "0xA8FEE0", VA = "0xA8FEE0")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA900F8", Offset = "0xA900F8", VA = "0xA900F8")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7B9EBC", Offset = "0x7B9EBC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7B9EBC", Offset = "0x7B9EBC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7B9EBC", Offset = "0x7B9EBC")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA90100", Offset = "0xA90100", VA = "0xA90100", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA90198", Offset = "0xA90198", VA = "0xA90198", Slot = "23")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA901A0", Offset = "0xA901A0", VA = "0xA901A0")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x2000022")]
public class DemoTimedTeleport : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxTimeInSeconds;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spawnPointYOffset;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD70C", Offset = "0x7BD70C")]
	public Transform[] teleportDoors;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CheckpointTrigger lastPossibleCheckpoint;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD744", Offset = "0x7BD744")]
	public Transform roomTeleportDoor;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform roomTeleportPosition;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD77C", Offset = "0x7BD77C")]
	private float <timer>k__BackingField;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool timerActive;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool teleported;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doTeleport;

	[Token(Token = "0x17000007")]
	public float timer
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0xB420AC", Offset = "0xB420AC", VA = "0xB420AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCECC", Offset = "0x7CCECC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000081")]
		[Address(RVA = "0xB424BC", Offset = "0xB424BC", VA = "0xB424BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCEDC", Offset = "0x7CCEDC")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB424C4", Offset = "0xB424C4", VA = "0xB424C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB42604", Offset = "0xB42604", VA = "0xB42604")]
	private void ShowTeleportAtNextCheckpoint()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB420A4", Offset = "0xB420A4", VA = "0xB420A4")]
	public bool GetTimerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB4234C", Offset = "0xB4234C", VA = "0xB4234C")]
	public void SetTimerActive(bool status)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB42384", Offset = "0xB42384", VA = "0xB42384")]
	public void SetTimerValue(float value)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB42888", Offset = "0xB42888", VA = "0xB42888")]
	public DemoTimedTeleport()
	{
	}
}
[Token(Token = "0x2000023")]
public class DisplayCurrentLevelInfo : MonoBehaviour
{
	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB4647C", Offset = "0xB4647C", VA = "0xB4647C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB46544", Offset = "0xB46544", VA = "0xB46544")]
	public DisplayCurrentLevelInfo()
	{
	}
}
[Token(Token = "0x2000024")]
public class LevelClearWindow : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA34", Offset = "0x7BCA34")]
	private sealed class <Animation>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelClearWindow <>4__this;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitPause>5__2;

		[Token(Token = "0x17000332")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x9851EC", Offset = "0x9851EC", VA = "0x9851EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x98525C", Offset = "0x98525C", VA = "0x98525C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x984550", Offset = "0x984550", VA = "0x984550")]
		[DebuggerHidden]
		public <Animation>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x984954", Offset = "0x984954", VA = "0x984954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x984958", Offset = "0x984958", VA = "0x984958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x9851F4", Offset = "0x9851F4", VA = "0x9851F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA44", Offset = "0x7BCA44")]
	private sealed class <RollNumber>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelClearWindow <>4__this;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text text;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string prefix;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int toValue;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <count>5__2;

		[Token(Token = "0x17000334")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002454")]
			[Address(RVA = "0x985508", Offset = "0x985508", VA = "0x985508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002456")]
			[Address(RVA = "0x985578", Offset = "0x985578", VA = "0x985578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x98468C", Offset = "0x98468C", VA = "0x98468C")]
		[DebuggerHidden]
		public <RollNumber>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x985264", Offset = "0x985264", VA = "0x985264", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x985268", Offset = "0x985268", VA = "0x985268", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x985510", Offset = "0x985510", VA = "0x985510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scoreBySecond;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pauseInterval;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text time;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] scoreLine;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text[] scoreNumbers;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text totalScore;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject newBestTime;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject newBestScore;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject continueButton;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string scoreCountEvent;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string continueEvent;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD7AC", Offset = "0x7BD7AC")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BD7AC", Offset = "0x7BD7AC")]
	public string allHardcoreSkin;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD834", Offset = "0x7BD834")]
	private bool <ended>k__BackingField;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance scoreCountInstance;

	[Token(Token = "0x17000008")]
	public bool ended
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x983E88", Offset = "0x983E88", VA = "0x983E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCEEC", Offset = "0x7CCEEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x98438C", Offset = "0x98438C", VA = "0x98438C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCEFC", Offset = "0x7CCEFC")]
		private set
		{
		}
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x984398", Offset = "0x984398", VA = "0x984398")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x984150", Offset = "0x984150", VA = "0x984150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCF0C", Offset = "0x7CCF0C")]
	public IEnumerator Animation()
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x98457C", Offset = "0x98457C", VA = "0x98457C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCF70", Offset = "0x7CCF70")]
	public IEnumerator RollNumber(Text text, int toValue, float speed, string prefix = "")
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x9846B8", Offset = "0x9846B8", VA = "0x9846B8")]
	private void SaveScore()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x984940", Offset = "0x984940", VA = "0x984940")]
	public LevelClearWindow()
	{
	}
}
[Token(Token = "0x2000025")]
public class CallAnimationOnEnble : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool deactiveOnEnable;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string animationName;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xAAA990", Offset = "0xAAA990", VA = "0xAAA990")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xAAA9C8", Offset = "0xAAA9C8", VA = "0xAAA9C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xAAAA20", Offset = "0xAAAA20", VA = "0xAAAA20")]
	public CallAnimationOnEnble()
	{
	}
}
[Token(Token = "0x2000026")]
public class ClothingDressAnimEvents : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotWearable bootsWearable;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DotWearable[] hairWearables;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DotWearable beltWearable;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xBE9940", Offset = "0xBE9940", VA = "0xBE9940")]
	private void Wear(DotWearable wearable)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xBE9970", Offset = "0xBE9970", VA = "0xBE9970")]
	public void WearBoot_Event()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBE99A0", Offset = "0xBE99A0", VA = "0xBE99A0")]
	public void WearHair_Event()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBE9A3C", Offset = "0xBE9A3C", VA = "0xBE9A3C")]
	public void WearBelt_Event()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBE9A6C", Offset = "0xBE9A6C", VA = "0xBE9A6C")]
	public ClothingDressAnimEvents()
	{
	}
}
[Token(Token = "0x2000027")]
public class WearableHelmet : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotWearable helmetWearable;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Interactable interactable;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1851430", Offset = "0x1851430", VA = "0x1851430")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1851494", Offset = "0x1851494", VA = "0x1851494")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1851554", Offset = "0x1851554", VA = "0x1851554")]
	public WearableHelmet()
	{
	}
}
[Token(Token = "0x2000028")]
public class GlassCollider : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dragonhitEffect;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bullethitEffect;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeToReset;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string hitSound;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hit;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAD7938", Offset = "0xAD7938", VA = "0xAD7938")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAD7C1C", Offset = "0xAD7C1C", VA = "0xAD7C1C")]
	private void OnCollisionExit(Collision c)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xAD7CEC", Offset = "0xAD7CEC", VA = "0xAD7CEC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAD7D24", Offset = "0xAD7D24", VA = "0xAD7D24")]
	public GlassCollider()
	{
	}
}
[Token(Token = "0x2000029")]
public class PlayAudioAtAnimation : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string[] audioEventsToPlay;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB8DBB8", Offset = "0xB8DBB8", VA = "0xB8DBB8")]
	public void PlayAudio(int index)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB8DC70", Offset = "0xB8DC70", VA = "0xB8DC70")]
	public PlayAudioAtAnimation()
	{
	}
}
[Token(Token = "0x200002A")]
public class ProgressWithDotShoot : ProgressionState
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool wasShoot;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnShoot;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB98618", Offset = "0xB98618", VA = "0xB98618", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB98650", Offset = "0xB98650", VA = "0xB98650")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB986A0", Offset = "0xB986A0", VA = "0xB986A0")]
	private void ShootEffect()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB986A4", Offset = "0xB986A4", VA = "0xB986A4", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB986DC", Offset = "0xB986DC", VA = "0xB986DC")]
	public ProgressWithDotShoot()
	{
	}
}
[Token(Token = "0x200002B")]
public class DotHandCannon : Interactable
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject content;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public DotItem cannon;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool previousCharge;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool charge;

	[Token(Token = "0x17000009")]
	protected override float grabSmoothness
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xB4BCA0", Offset = "0xB4BCA0", VA = "0xB4BCA0", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB4BCA8", Offset = "0xB4BCA8", VA = "0xB4BCA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB4BD34", Offset = "0xB4BD34", VA = "0xB4BD34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB4BE50", Offset = "0xB4BE50", VA = "0xB4BE50")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB4BF6C", Offset = "0xB4BF6C", VA = "0xB4BF6C")]
	private void OnGrab()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB4BFA0", Offset = "0xB4BFA0", VA = "0xB4BFA0")]
	private void OnRelease()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB4BFE0", Offset = "0xB4BFE0", VA = "0xB4BFE0")]
	private void OnActionPress()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB4BFEC", Offset = "0xB4BFEC", VA = "0xB4BFEC")]
	private void OnActionRelease()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB4BFF4", Offset = "0xB4BFF4", VA = "0xB4BFF4")]
	private new void Update()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB4C128", Offset = "0xB4C128", VA = "0xB4C128")]
	public DotHandCannon()
	{
	}
}
[Token(Token = "0x200002C")]
public class DotWorldHandCannon : Interactable
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ChargeableCannon cannon;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform shootPoint;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float shootOffset;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD864", Offset = "0x7BD864")]
	public SpriteRenderer dotHand;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ReskinDotRig reskinDotRig;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BD89C", Offset = "0x7BD89C")]
	public Sprite cannonHandSprite;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite handSprite;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool isActive;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool previousCharge;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	private bool charge;

	[Token(Token = "0x1700000A")]
	protected override float grabSmoothness
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB51934", Offset = "0xB51934", VA = "0xB51934", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB5193C", Offset = "0xB5193C", VA = "0xB5193C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB519D8", Offset = "0xB519D8", VA = "0xB519D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB51AF4", Offset = "0xB51AF4", VA = "0xB51AF4")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB51C10", Offset = "0xB51C10", VA = "0xB51C10")]
	private void OnGrab()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB51D20", Offset = "0xB51D20", VA = "0xB51D20")]
	private void OnRelease()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB51E58", Offset = "0xB51E58", VA = "0xB51E58")]
	private void OnActionPress()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB51E64", Offset = "0xB51E64", VA = "0xB51E64")]
	private void OnActionRelease()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB51E6C", Offset = "0xB51E6C", VA = "0xB51E6C")]
	private new void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB52124", Offset = "0xB52124", VA = "0xB52124")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB52164", Offset = "0xB52164", VA = "0xB52164")]
	public DotWorldHandCannon()
	{
	}
}
[Token(Token = "0x200002D")]
public class Level2IntroMasterBuild : ProgressionState
{
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA54", Offset = "0x7BCA54")]
	private sealed class <CheckFinalAnimEnd>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level2IntroMasterBuild <>4__this;

		[Token(Token = "0x17000336")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x9734C4", Offset = "0x9734C4", VA = "0x9734C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600245C")]
			[Address(RVA = "0x973534", Offset = "0x973534", VA = "0x973534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x9733C8", Offset = "0x9733C8", VA = "0x9733C8")]
		[DebuggerHidden]
		public <CheckFinalAnimEnd>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x9733FC", Offset = "0x9733FC", VA = "0x9733FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x973400", Offset = "0x973400", VA = "0x973400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x9734CC", Offset = "0x9734CC", VA = "0x9734CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ToolObject[] toolObject;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool checkTools;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentTool;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x97313C", Offset = "0x97313C", VA = "0x97313C", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x973148", Offset = "0x973148", VA = "0x973148")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x9731CC", Offset = "0x9731CC", VA = "0x9731CC")]
	private void AskForNextTool()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x973348", Offset = "0x973348", VA = "0x973348")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CCFD4", Offset = "0x7CCFD4")]
	private IEnumerator CheckFinalAnimEnd()
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x9733F4", Offset = "0x9733F4", VA = "0x9733F4")]
	public Level2IntroMasterBuild()
	{
	}
}
[Token(Token = "0x200002E")]
public class ToolObject : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	public enum toolsTypes
	{
		[Token(Token = "0x4001B5F")]
		tool_1,
		[Token(Token = "0x4001B60")]
		tool_2,
		[Token(Token = "0x4001B61")]
		tool_3,
		[Token(Token = "0x4001B62")]
		tool_4,
		[Token(Token = "0x4001B63")]
		tool_5
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject intemToPick;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite itemSprite;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool delivered;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public toolsTypes myType;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool keepActivateAfterUsed;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA8BBDC", Offset = "0xA8BBDC", VA = "0xA8BBDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA8BCB4", Offset = "0xA8BCB4", VA = "0xA8BCB4")]
	private void GetNewItem()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA8BD8C", Offset = "0xA8BD8C", VA = "0xA8BD8C")]
	public ToolObject()
	{
	}
}
[Token(Token = "0x200002F")]
public class Portalabduction : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA64", Offset = "0x7BCA64")]
	private sealed class <ApplyDelayedForce>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody body;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Portalabduction <>4__this;

		[Token(Token = "0x17000338")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0xB96BE4", Offset = "0xB96BE4", VA = "0xB96BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002462")]
			[Address(RVA = "0xB96C54", Offset = "0xB96C54", VA = "0xB96C54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xB968B8", Offset = "0xB968B8", VA = "0xB968B8")]
		[DebuggerHidden]
		public <ApplyDelayedForce>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xB9697C", Offset = "0xB9697C", VA = "0xB9697C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xB96980", Offset = "0xB96980", VA = "0xB96980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xB96BEC", Offset = "0xB96BEC", VA = "0xB96BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] bodiesToBeAbducted;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Vector3 zeroVelocity;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 force;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool explodeOnEnable;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB96644", Offset = "0xB96644", VA = "0xB96644")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB96690", Offset = "0xB96690", VA = "0xB96690")]
	private void Explode()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB967FC", Offset = "0xB967FC", VA = "0xB967FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD038", Offset = "0x7CD038")]
	private IEnumerator ApplyDelayedForce(Rigidbody body)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB968E4", Offset = "0xB968E4", VA = "0xB968E4")]
	public Portalabduction()
	{
	}
}
[Token(Token = "0x2000030")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA74", Offset = "0x7BCA74")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x1700033A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0xB41198", Offset = "0xB41198", VA = "0xB41198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002468")]
			[Address(RVA = "0xB41208", Offset = "0xB41208", VA = "0xB41208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xB41050", Offset = "0xB41050", VA = "0xB41050")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xB4108C", Offset = "0xB4108C", VA = "0xB4108C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xB41090", Offset = "0xB41090", VA = "0xB41090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xB411A0", Offset = "0xB411A0", VA = "0xB411A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB40FD0", Offset = "0xB40FD0", VA = "0xB40FD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD09C", Offset = "0x7CD09C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB4107C", Offset = "0xB4107C", VA = "0xB4107C")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x2000031")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA84", Offset = "0x7BCA84")]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600246C")]
			[Address(RVA = "0xB58A10", Offset = "0xB58A10", VA = "0xB58A10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0xB58A80", Offset = "0xB58A80", VA = "0xB58A80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xB58630", Offset = "0xB58630", VA = "0xB58630")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xB58690", Offset = "0xB58690", VA = "0xB58690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xB58694", Offset = "0xB58694", VA = "0xB58694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xB58A18", Offset = "0xB58A18", VA = "0xB58A18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCA94", Offset = "0x7BCA94")]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700033E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0xB58D18", Offset = "0xB58D18", VA = "0xB58D18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002474")]
			[Address(RVA = "0xB58D88", Offset = "0xB58D88", VA = "0xB58D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xB5865C", Offset = "0xB5865C", VA = "0xB5865C")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xB58A88", Offset = "0xB58A88", VA = "0xB58A88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xB58A8C", Offset = "0xB58A8C", VA = "0xB58A8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xB58D20", Offset = "0xB58D20", VA = "0xB58D20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_isExtinguished;

	[Token(Token = "0x400009B")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB58474", Offset = "0xB58474", VA = "0xB58474")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB58564", Offset = "0xB58564", VA = "0xB58564")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB585B0", Offset = "0xB585B0", VA = "0xB585B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD100", Offset = "0x7CD100")]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB584E4", Offset = "0xB584E4", VA = "0xB584E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD164", Offset = "0x7CD164")]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB58688", Offset = "0xB58688", VA = "0xB58688")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x2000032")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xC3F200", Offset = "0xC3F200", VA = "0xC3F200")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xC3F264", Offset = "0xC3F264", VA = "0xC3F264")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xC3F3C0", Offset = "0xC3F3C0", VA = "0xC3F3C0")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class ParticleExamples
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7BD8D4", Offset = "0x7BD8D4")]
	public string description;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeaponEffect;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleSystemGO;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 particlePosition;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 particleRotation;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xC3F43C", Offset = "0xC3F43C", VA = "0xC3F43C")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x2000034")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gunGameObject;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGO;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnLocation;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text description;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text navigationDetails;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xC3F444", Offset = "0xC3F444", VA = "0xC3F444")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xC3F46C", Offset = "0xC3F46C", VA = "0xC3F46C")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xC3F958", Offset = "0xC3F958", VA = "0xC3F958")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x2000035")]
public class EnableRandomTimelineOnAwake : MonoBehaviour
{
	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB5448C", Offset = "0xB5448C", VA = "0xB5448C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB54510", Offset = "0xB54510", VA = "0xB54510")]
	public EnableRandomTimelineOnAwake()
	{
	}
}
[Token(Token = "0x2000036")]
public class EpilogueAlternateEndCheck : MonoBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BD8E4", Offset = "0x7BD8E4")]
	public string alternateEndSceneState;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB57740", Offset = "0xB57740", VA = "0xB57740")]
	public void TryAlternateEnd()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB577E8", Offset = "0xB577E8", VA = "0xB577E8")]
	public EpilogueAlternateEndCheck()
	{
	}
}
[Token(Token = "0x2000037")]
public static class zPathHelper
{
	[Token(Token = "0x60000DB")]
	private static int BinarySearch<T>(IList<T> list, T value)
	{
		return default(int);
	}

	[Token(Token = "0x60000DC")]
	public static int FindFirstIndexGreaterThanOrEqualTo<T, U>(this SortedList<T, U> sortedList, T key)
	{
		return default(int);
	}
}
[Token(Token = "0x2000038")]
[ExecuteInEditMode]
public class zPath : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200054E")]
	public class Node
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public zPath conn;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC0D4", Offset = "0x7CC0D4")]
		public float offset;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string state;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 point;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 normal;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 tangent;

		[Token(Token = "0x17000340")]
		public static Node Zero
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x1853E58", Offset = "0x1853E58", VA = "0x1853E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1853CE4", Offset = "0x1853CE4", VA = "0x1853CE4")]
		public Node Clone()
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x18545F0", Offset = "0x18545F0", VA = "0x18545F0")]
		public static Node operator *(float x, Node n)
		{
			return null;
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1854700", Offset = "0x1854700", VA = "0x1854700")]
		public static Node operator +(Node a, Node b)
		{
			return null;
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1853AA0", Offset = "0x1853AA0", VA = "0x1853AA0")]
		public Node()
		{
		}
	}

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float pathMinDist;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float curveMinDist;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BD968", Offset = "0x7BD968")]
	public float curveAlpha;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected List<Node> path;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SortedList<float, Node> curve;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Node[] curveArray;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD990", Offset = "0x7BD990")]
	private float <length>k__BackingField;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD9A0", Offset = "0x7BD9A0")]
	private int <revision>k__BackingField;

	[Token(Token = "0x1700000B")]
	public float minDist
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1852774", Offset = "0x1852774", VA = "0x1852774")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000C")]
	public float length
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x185277C", Offset = "0x185277C", VA = "0x185277C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1D8", Offset = "0x7CD1D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1852784", Offset = "0x1852784", VA = "0x1852784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1E8", Offset = "0x7CD1E8")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public int count
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x185278C", Offset = "0x185278C", VA = "0x185278C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000E")]
	public int revision
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x18527EC", Offset = "0x18527EC", VA = "0x18527EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD1F8", Offset = "0x7CD1F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x18527F4", Offset = "0x18527F4", VA = "0x18527F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD208", Offset = "0x7CD208")]
		protected set
		{
		}
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x18527FC", Offset = "0x18527FC", VA = "0x18527FC")]
	public bool IsConnected(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x18528AC", Offset = "0x18528AC", VA = "0x18528AC")]
	public Vector3 GetPoint(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1852974", Offset = "0x1852974", VA = "0x1852974")]
	public Vector3 GetNormal(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1852A3C", Offset = "0x1852A3C", VA = "0x1852A3C")]
	public bool SetPoint(int index, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1852CF8", Offset = "0x1852CF8", VA = "0x1852CF8")]
	public bool SetNormal(int index, Vector3 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1852E70", Offset = "0x1852E70", VA = "0x1852E70")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1852EE0", Offset = "0x1852EE0", VA = "0x1852EE0")]
	public int FindPoint(Vector3 p)
	{
		return default(int);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1853078", Offset = "0x1853078", VA = "0x1853078")]
	public static float SegmentPointFactor(Vector3 a, Vector3 b, Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x18531BC", Offset = "0x18531BC", VA = "0x18531BC")]
	public static Vector3 SegmentPoint(Vector3 a, Vector3 b, Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1853334", Offset = "0x1853334", VA = "0x1853334")]
	public static float SegmentPointDist(Vector3 a, Vector3 b, Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1853434", Offset = "0x1853434", VA = "0x1853434")]
	public bool AddPoint(Vector3 p, Vector3 n)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1853B00", Offset = "0x1853B00", VA = "0x1853B00")]
	private Node localToWorldClone(int index)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1853D70", Offset = "0x1853D70", VA = "0x1853D70")]
	public Node Interpolate(float f)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1853F58", Offset = "0x1853F58", VA = "0x1853F58")]
	private float GetT(float t, Vector3 p0, Vector3 p1)
	{
		return default(float);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x185404C", Offset = "0x185404C", VA = "0x185404C")]
	private void CatmulRom(int i)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1854840", Offset = "0x1854840", VA = "0x1854840")]
	public void Prepare()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1855034", Offset = "0x1855034", VA = "0x1855034")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1855038", Offset = "0x1855038", VA = "0x1855038")]
	public zPath()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteAlways]
public class zPathAgent : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BD9B0", Offset = "0x7BD9B0")]
	public Vector3 extents;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BD9E8", Offset = "0x7BD9E8")]
	public float elevation;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BDA20", Offset = "0x7BDA20")]
	public LayerMask layerMask;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BDA58", Offset = "0x7BDA58")]
	public float vertical;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BDA90", Offset = "0x7BDA90")]
	public float normal;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool runInPlayMode;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion lastRotation;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1855088", Offset = "0x1855088", VA = "0x1855088")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1855C18", Offset = "0x1855C18", VA = "0x1855C18")]
	public zPathAgent()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteAlways]
public class zPathCableMesh : MonoBehaviour
{
	[Token(Token = "0x200054F")]
	public class V
	{
		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 n;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 fw;

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x1856188", Offset = "0x1856188", VA = "0x1856188")]
		public V()
		{
		}
	}

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rebuildNow;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public zPath path;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BDAC8", Offset = "0x7BDAC8")]
	public int sides;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int segmentBaseCount;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float segmentMinDist;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float segmentPrecision;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject childPrefab;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] childOffset;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> verts;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> norms;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> tris;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector2> uvs;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int revision;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1855F7C", Offset = "0x1855F7C", VA = "0x1855F7C")]
	private V Vertex(int i)
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1856190", Offset = "0x1856190", VA = "0x1856190")]
	private void Face(Vector3 a, Vector3 b, Vector3 c, Vector3 d, Vector3 na, Vector3 nb, Vector3 nc, Vector3 nd, float u0, float u1, float v0, float v1)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x185690C", Offset = "0x185690C", VA = "0x185690C")]
	private void Generate()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1857760", Offset = "0x1857760", VA = "0x1857760")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1857764", Offset = "0x1857764", VA = "0x1857764")]
	public zPathCableMesh()
	{
	}
}
[Token(Token = "0x200003B")]
[ExecuteAlways]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7B9FB0", Offset = "0x7B9FB0")]
public class zPathMesh : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	public class V
	{
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 w;

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1857B00", Offset = "0x1857B00", VA = "0x1857B00")]
		public V()
		{
		}
	}

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rebuildNow;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public zPath path;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh mesh;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float elevation;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float width;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pan;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float extrude;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float biasMin;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float biasMax;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int segmentBaseCount;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float segmentMinDist;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float segmentPrecision;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public LayerMask mask;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> verts;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> norms;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector2> uvs;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> tris;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int revision;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x185792C", Offset = "0x185792C", VA = "0x185792C")]
	private V Vertex(int i)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1857B08", Offset = "0x1857B08", VA = "0x1857B08")]
	private Vector3 Cast(int i, Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1857D14", Offset = "0x1857D14", VA = "0x1857D14")]
	private Vector3 Face(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float u0, float u1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1858538", Offset = "0x1858538", VA = "0x1858538")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x18593A4", Offset = "0x18593A4", VA = "0x18593A4")]
	public zPathMesh()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class zPathBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public zPath path;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve timing;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDAE0", Offset = "0x7BDAE0")]
	private zPath.Node <node>k__BackingField;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BDAF0", Offset = "0x7BDAF0")]
	public float direction;

	[Token(Token = "0x1700000F")]
	public zPath.Node node
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0x1855CEC", Offset = "0x1855CEC", VA = "0x1855CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD218", Offset = "0x7CD218")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x1855CF4", Offset = "0x1855CF4", VA = "0x1855CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD228", Offset = "0x7CD228")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1855CFC", Offset = "0x1855CFC", VA = "0x1855CFC", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1855DE0", Offset = "0x1855DE0", VA = "0x1855DE0")]
	public zPathBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class zPathClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public zPathBehaviour template;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<zPath> Path;

	[Token(Token = "0x17000010")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1857794", Offset = "0x1857794", VA = "0x1857794", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x185779C", Offset = "0x185779C", VA = "0x185779C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x18578BC", Offset = "0x18578BC", VA = "0x18578BC")]
	public zPathClip()
	{
	}
}
[Token(Token = "0x200003E")]
public class zPathMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1859418", Offset = "0x1859418", VA = "0x1859418", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1859A24", Offset = "0x1859A24", VA = "0x1859A24")]
	public zPathMixerBehaviour()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BA024", Offset = "0x7BA024")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BA024", Offset = "0x7BA024")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BA024", Offset = "0x7BA024")]
public class zPathTrack : TrackAsset
{
	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1859A2C", Offset = "0x1859A2C", VA = "0x1859A2C", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1859AC4", Offset = "0x1859AC4", VA = "0x1859AC4")]
	public zPathTrack()
	{
	}
}
[Token(Token = "0x2000040")]
public class FollowIfActive : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reference;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xAD182C", Offset = "0xAD182C", VA = "0xAD182C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xAD18FC", Offset = "0xAD18FC", VA = "0xAD18FC")]
	public FollowIfActive()
	{
	}
}
[Token(Token = "0x2000041")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyRotation;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool justOnX;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xAD2934", Offset = "0xAD2934", VA = "0xAD2934")]
	private void Update()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xAD2AEC", Offset = "0xAD2AEC", VA = "0xAD2AEC")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000042")]
public class HardcoreModeUI : MonoBehaviour
{
	[Token(Token = "0x6000110")]
	[Address(RVA = "0xAE1DD4", Offset = "0xAE1DD4", VA = "0xAE1DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xAE1DD8", Offset = "0xAE1DD8", VA = "0xAE1DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xAE1DDC", Offset = "0xAE1DDC", VA = "0xAE1DDC")]
	public HardcoreModeUI()
	{
	}
}
[Token(Token = "0x2000043")]
public class HealthBar : MonoBehaviour
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform healthbarArt;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Damageable damageable;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xAE341C", Offset = "0xAE341C", VA = "0xAE341C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xAE3660", Offset = "0xAE3660", VA = "0xAE3660")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xAE379C", Offset = "0xAE379C", VA = "0xAE379C")]
	private void DamageableReceivedDamage()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xAE3564", Offset = "0xAE3564", VA = "0xAE3564")]
	public void UpdateHealthPercentage(float healthPercentage)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xAE3808", Offset = "0xAE3808", VA = "0xAE3808")]
	public HealthBar()
	{
	}
}
[Token(Token = "0x2000044")]
public class HighScoreDisplay : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text timeText;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xAE3810", Offset = "0xAE3810", VA = "0xAE3810")]
	public void DisplayLevelScores(int level)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xAE39B4", Offset = "0xAE39B4", VA = "0xAE39B4")]
	public HighScoreDisplay()
	{
	}
}
[Token(Token = "0x2000045")]
public class BEU_LockEnemies : MonoBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraFollow cameraFollow;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BeuEnemyBehaviour[] enemies;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider _collider;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool lockCamera;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xA9CAE8", Offset = "0xA9CAE8", VA = "0xA9CAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xA9CC10", Offset = "0xA9CC10", VA = "0xA9CC10")]
	private void Update()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xA9CE20", Offset = "0xA9CE20", VA = "0xA9CE20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xA9CEC8", Offset = "0xA9CEC8", VA = "0xA9CEC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xA9CF3C", Offset = "0xA9CF3C", VA = "0xA9CF3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xA9CFB0", Offset = "0xA9CFB0", VA = "0xA9CFB0")]
	private void OnDotRespawn()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xA9CFE4", Offset = "0xA9CFE4", VA = "0xA9CFE4")]
	public BEU_LockEnemies()
	{
	}
}
[Token(Token = "0x2000046")]
public class BlinkOnDamage : MonoBehaviour
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDB08", Offset = "0x7BDB08")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer[] additionalSkinnedRenderers;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDB40", Offset = "0x7BDB40")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer[] additionalRenderers;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDB78", Offset = "0x7BDB78")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDBB0", Offset = "0x7BDBB0")]
	public bool tintEmission;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color colorToBlink;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int numberOfFrames;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color originalColor;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool blink;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int frames;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool colorSet;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xAA07CC", Offset = "0xAA07CC", VA = "0xAA07CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xAA0910", Offset = "0xAA0910", VA = "0xAA0910")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xAA0EB4", Offset = "0xAA0EB4", VA = "0xAA0EB4")]
	public void StartBlink()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xAA0930", Offset = "0xAA0930", VA = "0xAA0930")]
	private void EndBlink()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xAA1480", Offset = "0xAA1480", VA = "0xAA1480")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xAA1484", Offset = "0xAA1484", VA = "0xAA1484")]
	public BlinkOnDamage()
	{
	}
}
[Token(Token = "0x2000047")]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float skinWidth;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float floorOffset;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit hit;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xAA14C0", Offset = "0xAA14C0", VA = "0xAA14C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xAA16FC", Offset = "0xAA16FC", VA = "0xAA16FC")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x2000048")]
public class Bullet : MonoBehaviour, IPoolable<Bullet>, IPoolableStandalone<Bullet>
{
	[Token(Token = "0x2000551")]
	public enum SpriteOrientation
	{
		[Token(Token = "0x4001B7F")]
		None,
		[Token(Token = "0x4001B80")]
		FollowDir,
		[Token(Token = "0x4001B81")]
		FlipSpriteOnX,
		[Token(Token = "0x4001B82")]
		FollowDirVerticalPlane
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isPlayer;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool disappearsOnCollision;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool isInGame;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool ignoreTopCulling;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteOrientation spriteOrientation;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float arcSmoothness;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float forceFollowRadius;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDBE8", Offset = "0x7BDBE8")]
	public bool useVFXOnPushToPool;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public InGameVFXManager.VFX_Types vfxType;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDC20", Offset = "0x7BDC20")]
	private ObjectPool<Bullet> <poolComponent>k__BackingField;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDC30", Offset = "0x7BDC30")]
	private ObjectPoolStandalone<Bullet> <pool>k__BackingField;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float lifeTimer;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected bool isAlive;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected PhysicsBody body;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected RippedModeConditionalActivation rippedForm;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer _bulletRenderer;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float invisibleTimer;

	[Token(Token = "0x4000114")]
	protected const float invisibleMax = 0.1f;

	[Token(Token = "0x17000011")]
	public ObjectPool<Bullet> poolComponent
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xAA7CB8", Offset = "0xAA7CB8", VA = "0xAA7CB8", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD238", Offset = "0x7CD238")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xAA7CC0", Offset = "0xAA7CC0", VA = "0xAA7CC0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD248", Offset = "0x7CD248")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public ObjectPoolStandalone<Bullet> pool
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xAA7CC8", Offset = "0xAA7CC8", VA = "0xAA7CC8", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD258", Offset = "0x7CD258")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xAA7CD0", Offset = "0xAA7CD0", VA = "0xAA7CD0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD268", Offset = "0x7CD268")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Renderer bulletRenderer
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xAA1A44", Offset = "0xAA1A44", VA = "0xAA1A44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xAA7CD8", Offset = "0xAA7CD8", VA = "0xAA7CD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xAA6C40", Offset = "0xAA6C40", VA = "0xAA6C40", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xAA1DDC", Offset = "0xAA1DDC", VA = "0xAA1DDC", Slot = "9")]
	protected virtual void ResetSettingsOnEnable()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xAA7D8C", Offset = "0xAA7D8C", VA = "0xAA7D8C", Slot = "10")]
	protected virtual void ResetSettingsOnDisable()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xAA7D90", Offset = "0xAA7D90", VA = "0xAA7D90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xAA7E3C", Offset = "0xAA7E3C", VA = "0xAA7E3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xAA1AE0", Offset = "0xAA1AE0", VA = "0xAA1AE0")]
	public void Shoot(Vector3 origin, Vector3 direction, float speed)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xAA7FF0", Offset = "0xAA7FF0", VA = "0xAA7FF0")]
	private void CollisionEnter(PhysicsBodyCollision col)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xAA8038", Offset = "0xAA8038", VA = "0xAA8038")]
	public void CheckCollision(Transform other)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xAA8188", Offset = "0xAA8188", VA = "0xAA8188")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xAA84E0", Offset = "0xAA84E0", VA = "0xAA84E0", Slot = "11")]
	public virtual void PushToPool()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xAA1E1C", Offset = "0xAA1E1C", VA = "0xAA1E1C")]
	public Bullet()
	{
	}
}
[Token(Token = "0x2000049")]
public class BulletHitbox : MonoBehaviour
{
	[Token(Token = "0x600013A")]
	[Address(RVA = "0xAA86C4", Offset = "0xAA86C4", VA = "0xAA86C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xAA87AC", Offset = "0xAA87AC", VA = "0xAA87AC")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xAA8704", Offset = "0xAA8704", VA = "0xAA8704")]
	private void CheckCollision(Transform other)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xAA87EC", Offset = "0xAA87EC", VA = "0xAA87EC")]
	public BulletHitbox()
	{
	}
}
[Token(Token = "0x200004A")]
public class CameraFollow : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform alternativePosition;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool smoothOffset;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 offset;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 defaultOffset;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalOffset;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 originalForward;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 altOffset;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 altForward;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xAAAA38", Offset = "0xAAAA38", VA = "0xAAAA38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA9CD10", Offset = "0xA9CD10", VA = "0xA9CD10")]
	public void SetOffset()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xAAAC94", Offset = "0xAAAC94", VA = "0xAAAC94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xAAAE7C", Offset = "0xAAAE7C", VA = "0xAAAE7C")]
	public void SetAltPosition(bool alt)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xAAAF74", Offset = "0xAAAF74", VA = "0xAAAF74")]
	public CameraFollow()
	{
	}
}
[Token(Token = "0x200004B")]
public class CameraLocker : MonoBehaviour
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraFollow cameraFollow;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xAAAF84", Offset = "0xAAAF84", VA = "0xAAAF84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xAAB078", Offset = "0xAAB078", VA = "0xAAB078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xAAB0F8", Offset = "0xAAB0F8", VA = "0xAAB0F8")]
	private void OnDotRespawn()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xAAB004", Offset = "0xAAB004", VA = "0xAAB004")]
	private void Lock(bool lockCamera)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xAAB100", Offset = "0xAAB100", VA = "0xAAB100")]
	public CameraLocker()
	{
	}
}
[Token(Token = "0x200004C")]
public class ConfinedCameraRoom : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDC40", Offset = "0x7BDC40")]
	private CompositeCollider2D <boundingCollider>k__BackingField;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameplayCameraManager.GameplayCameraType type;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Bounds boundingBox;

	[Token(Token = "0x17000014")]
	public CompositeCollider2D boundingCollider
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0xBECB14", Offset = "0xBECB14", VA = "0xBECB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD278", Offset = "0x7CD278")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000149")]
		[Address(RVA = "0xBECB1C", Offset = "0xBECB1C", VA = "0xBECB1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD288", Offset = "0x7CD288")]
		private set
		{
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBECB24", Offset = "0xBECB24", VA = "0xBECB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBECBC4", Offset = "0xBECBC4", VA = "0xBECBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBECD40", Offset = "0xBECD40", VA = "0xBECD40")]
	public ConfinedCameraRoom()
	{
	}
}
[Token(Token = "0x200004D")]
public class ForwardFocus : MonoBehaviour
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDistance;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollingSpeed;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BDC50", Offset = "0x7BDC50")]
	public float startValue;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float value;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float targetValue;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CinemachineVirtualCamera virtualCamera;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CinemachineFramingTransposer transposer;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InGameCharacterMovement dot;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xAD3890", Offset = "0xAD3890", VA = "0xAD3890")]
	private void Start()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xAD39C4", Offset = "0xAD39C4", VA = "0xAD39C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xAD3AB8", Offset = "0xAD3AB8", VA = "0xAD3AB8")]
	public ForwardFocus()
	{
	}
}
[Token(Token = "0x200004E")]
public class GameplayCamera : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDC68", Offset = "0x7BDC68")]
	private ConfinedCameraRoom <currentRoom>k__BackingField;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameplayCameraManager.GameplayCameraType type;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CinemachineVirtualCamera virtualCamera;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CinemachineConfiner confiner;

	[Token(Token = "0x17000015")]
	public ConfinedCameraRoom currentRoom
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xAD5FCC", Offset = "0xAD5FCC", VA = "0xAD5FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD298", Offset = "0x7CD298")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xAD5FD4", Offset = "0xAD5FD4", VA = "0xAD5FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2A8", Offset = "0x7CD2A8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xAD5FDC", Offset = "0xAD5FDC", VA = "0xAD5FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xAD6068", Offset = "0xAD6068", VA = "0xAD6068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xAD60F4", Offset = "0xAD60F4", VA = "0xAD60F4")]
	public void OnReachRoom(ConfinedCameraRoom room)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xAD6180", Offset = "0xAD6180", VA = "0xAD6180")]
	public void InstantFocus()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xAD6264", Offset = "0xAD6264", VA = "0xAD6264")]
	public GameplayCamera()
	{
	}
}
[Token(Token = "0x200004F")]
public class GameplayCameraManager : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	public enum GameplayCameraType
	{
		[Token(Token = "0x4001B84")]
		main,
		[Token(Token = "0x4001B85")]
		alt
	}

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameplayCameraManager instance;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameplayCamera gameplayCamera;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameplayCamera gameplayCameraAlt;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xAD626C", Offset = "0xAD626C", VA = "0xAD626C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xAD634C", Offset = "0xAD634C", VA = "0xAD634C")]
	public GameplayCamera GetCamera(GameplayCameraType type)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xAD60E0", Offset = "0xAD60E0", VA = "0xAD60E0")]
	public void RegisterCamera(GameplayCamera camera, GameplayCameraType type)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xAD6364", Offset = "0xAD6364", VA = "0xAD6364")]
	public GameplayCameraManager()
	{
	}
}
[Token(Token = "0x2000050")]
public class InGameRenderer : MonoBehaviour
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xAEF858", Offset = "0xAEF858", VA = "0xAEF858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xAEF8BC", Offset = "0xAEF8BC", VA = "0xAEF8BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xAEF8F0", Offset = "0xAEF8F0", VA = "0xAEF8F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xAEF974", Offset = "0xAEF974", VA = "0xAEF974")]
	public InGameRenderer()
	{
	}
}
[Token(Token = "0x2000051")]
public class ChangeCamOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachineVirtualCameraBase advanceCamera;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachineVirtualCameraBase retreatCamera;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string tagToCheck;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xAAD66C", Offset = "0xAAD66C", VA = "0xAAD66C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xAAD864", Offset = "0xAAD864", VA = "0xAAD864")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xAAD868", Offset = "0xAAD868", VA = "0xAAD868")]
	public ChangeCamOnTrigger()
	{
	}
}
[Token(Token = "0x2000052")]
public class Level6CameraManager : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Level6CameraManager instance;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachineBrain cinemachineBrain;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachineVirtualCameraBase firstCam;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDC78", Offset = "0x7BDC78")]
	private CinemachineVirtualCameraBase <currentCam>k__BackingField;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CinemachineVirtualCameraBase savedCam;

	[Token(Token = "0x17000016")]
	public CinemachineVirtualCameraBase currentCam
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x97F06C", Offset = "0x97F06C", VA = "0x97F06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2B8", Offset = "0x7CD2B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x97F074", Offset = "0x97F074", VA = "0x97F074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD2C8", Offset = "0x7CD2C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x97F07C", Offset = "0x97F07C", VA = "0x97F07C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x97F190", Offset = "0x97F190", VA = "0x97F190")]
	public static void ChangeCameraTo(CinemachineVirtualCameraBase newCam)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x97F308", Offset = "0x97F308", VA = "0x97F308")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x97F3DC", Offset = "0x97F3DC", VA = "0x97F3DC")]
	private void OnCheckpointChange(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x97F3F0", Offset = "0x97F3F0", VA = "0x97F3F0")]
	private void OnReloadedGame()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x97F4BC", Offset = "0x97F4BC", VA = "0x97F4BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x97F590", Offset = "0x97F590", VA = "0x97F590")]
	public Level6CameraManager()
	{
	}
}
[Token(Token = "0x2000053")]
public class TrackedVCamFollowTarget : MonoBehaviour
{
	[Token(Token = "0x2000553")]
	public enum LookMethod
	{
		[Token(Token = "0x4001B87")]
		PathTangent,
		[Token(Token = "0x4001B88")]
		TangentWithTargetY,
		[Token(Token = "0x4001B89")]
		TargetPosition
	}

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 pathOffset;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 lookOffset;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float followSpeed;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lookRotationSpeed;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LookMethod lookMethod;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CinemachinePath path;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int updateEveryNFrames;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CinemachineVirtualCamera vCam;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frame;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool forceStartingPosition;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA8C5C8", Offset = "0xA8C5C8", VA = "0xA8C5C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA8C62C", Offset = "0xA8C62C", VA = "0xA8C62C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA8D1CC", Offset = "0xA8D1CC", VA = "0xA8D1CC")]
	public TrackedVCamFollowTarget()
	{
	}
}
[Token(Token = "0x2000054")]
public class VCamMixingBasedOnPath : MonoBehaviour
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachineMixingCamera mixingCam;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CinemachineSmoothPath smoothPath;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float smoothSpeed;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int updateEveryNFrames;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pos;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int frame;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA9276C", Offset = "0xA9276C", VA = "0xA9276C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA92988", Offset = "0xA92988", VA = "0xA92988")]
	public VCamMixingBasedOnPath()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA0CC", Offset = "0x7BA0CC")]
public class ParallaxLayer : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ingameCamera;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scrollRatio;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 imageSize;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 defaultPosition;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xC3EF3C", Offset = "0xC3EF3C", VA = "0xC3EF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xC3F070", Offset = "0xC3F070", VA = "0xC3F070")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC3F1F8", Offset = "0xC3F1F8", VA = "0xC3F1F8")]
	public ParallaxLayer()
	{
	}
}
[Token(Token = "0x2000056")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAA4", Offset = "0x7BCAA4")]
	private sealed class <CheckFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothFollow <>4__this;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <wfsr>5__2;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0xA740D0", Offset = "0xA740D0", VA = "0xA740D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0xA74140", Offset = "0xA74140", VA = "0xA74140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xA73BC4", Offset = "0xA73BC4", VA = "0xA73BC4")]
		[DebuggerHidden]
		public <CheckFrame>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xA73CD8", Offset = "0xA73CD8", VA = "0xA73CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xA73CDC", Offset = "0xA73CDC", VA = "0xA73CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xA740D8", Offset = "0xA740D8", VA = "0xA740D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BDC88", Offset = "0x7BDC88")]
	public float smoothness;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 offset;

	[Token(Token = "0x4000153")]
	private const float fixedStep = 0.014f;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float f;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool followDot;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DotPivotName;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA739B8", Offset = "0xA739B8", VA = "0xA739B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA73B10", Offset = "0xA73B10", VA = "0xA73B10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA73BBC", Offset = "0xA73BBC", VA = "0xA73BBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA73B3C", Offset = "0xA73B3C", VA = "0xA73B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD2D8", Offset = "0x7CD2D8")]
	private IEnumerator CheckFrame()
	{
		return null;
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA73BF0", Offset = "0xA73BF0", VA = "0xA73BF0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA73C78", Offset = "0xA73C78", VA = "0xA73C78")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x2000057")]
public class CaptainDiesCutscene : TimelineCutscene
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator captainAnimator;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject worm;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xAAB9CC", Offset = "0xAAB9CC", VA = "0xAAB9CC")]
	public new void OnTimelineEnd()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xAABA60", Offset = "0xAABA60", VA = "0xAABA60")]
	public CaptainDiesCutscene()
	{
	}
}
[Token(Token = "0x2000058")]
public class CedricTripsCutscene : MonoBehaviour
{
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAB4", Offset = "0x7BCAB4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InGameCharacterMovement dotCharMov;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CedricTripsCutscene <>4__this;

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xAAC850", Offset = "0xAAC850", VA = "0xAAC850")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xAAC858", Offset = "0xAAC858", VA = "0xAAC858")]
		internal bool <Cutscene>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xAAC888", Offset = "0xAAC888", VA = "0xAAC888")]
		internal bool <Cutscene>b__1()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAC4", Offset = "0x7BCAC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__9_2;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__9_3;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xAAC7C8", Offset = "0xAAC7C8", VA = "0xAAC7C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xAAC7D0", Offset = "0xAAC7D0", VA = "0xAAC7D0")]
		internal bool <Cutscene>b__9_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xAAC810", Offset = "0xAAC810", VA = "0xAAC810")]
		internal bool <Cutscene>b__9_3()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAD4", Offset = "0x7BCAD4")]
	private sealed class <Cutscene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CedricTripsCutscene <>4__this;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass9_0 <>8__1;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xAAD2D8", Offset = "0xAAD2D8", VA = "0xAAD2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0xAAD348", Offset = "0xAAD348", VA = "0xAAD348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xAAC72C", Offset = "0xAAC72C", VA = "0xAAC72C")]
		[DebuggerHidden]
		public <Cutscene>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xAAC970", Offset = "0xAAC970", VA = "0xAAC970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xAAC974", Offset = "0xAAC974", VA = "0xAAC974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xAAD2E0", Offset = "0xAAD2E0", VA = "0xAAD2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cedricFollowFlag;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CompanionCharacterController cedric;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BDCA0", Offset = "0x7BDCA0")]
	public DialogueDropdown beforeTripDialogue;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BDD04", Offset = "0x7BDD04")]
	public DialogueDropdown afterTripDialogue;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rock;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string cedricTripsFMODEvent;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator cedricAnim;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xAAC4C0", Offset = "0xAAC4C0", VA = "0xAAC4C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xAAC534", Offset = "0xAAC534", VA = "0xAAC534")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xAAC6AC", Offset = "0xAAC6AC", VA = "0xAAC6AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD33C", Offset = "0x7CD33C")]
	private IEnumerator Cutscene()
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xAAC758", Offset = "0xAAC758", VA = "0xAAC758")]
	public CedricTripsCutscene()
	{
	}
}
[Token(Token = "0x2000059")]
public class CutsceneTrigger : MonoBehaviour
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tagToCheck;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string flagToCheck;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string flagToAdd;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canTriggerMultipleTimes;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IPlayable cutscene;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canTrigger;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xBF10F0", Offset = "0xBF10F0", VA = "0xBF10F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xBF1154", Offset = "0xBF1154", VA = "0xBF1154")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xBF1330", Offset = "0xBF1330", VA = "0xBF1330")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBF1280", Offset = "0xBF1280", VA = "0xBF1280")]
	private bool CheckFlags()
	{
		return default(bool);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBF145C", Offset = "0xBF145C", VA = "0xBF145C")]
	public CutsceneTrigger()
	{
	}
}
[Token(Token = "0x200005A")]
public class GetPartyMemberCutscene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAE4", Offset = "0x7BCAE4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__5_0;

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xAD7418", Offset = "0xAD7418", VA = "0xAD7418")]
		public <>c()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xAD7420", Offset = "0xAD7420", VA = "0xAD7420")]
		internal bool <Cutscene>b__5_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCAF4", Offset = "0x7BCAF4")]
	private sealed class <Cutscene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetPartyMemberCutscene <>4__this;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0xAD7690", Offset = "0xAD7690", VA = "0xAD7690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002497")]
			[Address(RVA = "0xAD7700", Offset = "0xAD7700", VA = "0xAD7700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xAD72B4", Offset = "0xAD72B4", VA = "0xAD72B4")]
		[DebuggerHidden]
		public <Cutscene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xAD7460", Offset = "0xAD7460", VA = "0xAD7460", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xAD7464", Offset = "0xAD7464", VA = "0xAD7464", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xAD7698", Offset = "0xAD7698", VA = "0xAD7698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompanionCharacterController partyMember;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string partyMemberFlag;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BDD78", Offset = "0x7BDD78")]
	public DialogueDropdown dialogueID;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BalloonType balloonType;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xAD7158", Offset = "0xAD7158", VA = "0xAD7158")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xAD7234", Offset = "0xAD7234", VA = "0xAD7234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD3A0", Offset = "0x7CD3A0")]
	private IEnumerator Cutscene()
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xAD72E0", Offset = "0xAD72E0", VA = "0xAD72E0")]
	private void LockDot(bool shouldLock)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xAD73A8", Offset = "0xAD73A8", VA = "0xAD73A8")]
	public GetPartyMemberCutscene()
	{
	}
}
[Token(Token = "0x200005B")]
public interface IPlayable
{
	[Token(Token = "0x6000188")]
	void Play();
}
[Token(Token = "0x200005C")]
public class Level1TempleCutscene : TimelineCutscene
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CompanionCharacterController master;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string newBgm;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool paused;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB040E4", Offset = "0xB040E4", VA = "0xB040E4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB040EC", Offset = "0xB040EC", VA = "0xB040EC", Slot = "6")]
	protected override void OnCutsceneStart()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB0412C", Offset = "0xB0412C", VA = "0xB0412C")]
	public void SetBGM()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB041A8", Offset = "0xB041A8", VA = "0xB041A8")]
	public void TogglePauseBGM()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB041D0", Offset = "0xB041D0", VA = "0xB041D0")]
	public Level1TempleCutscene()
	{
	}
}
[Token(Token = "0x200005D")]
public class ReleaseDragonCutscene : MonoBehaviour
{
	[Token(Token = "0x200055A")]
	private enum State
	{
		[Token(Token = "0x4001B9D")]
		Restrained,
		[Token(Token = "0x4001B9E")]
		Afraid,
		[Token(Token = "0x4001B9F")]
		Flying
	}

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string flag;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shacklesParent;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject blockingCollider;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator dragon;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Damageable[] shackles;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableDirector director;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State state;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xA5F88C", Offset = "0xA5F88C", VA = "0xA5F88C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xA5FAA8", Offset = "0xA5FAA8", VA = "0xA5FAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xA5FB74", Offset = "0xA5FB74", VA = "0xA5FB74")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA5FC2C", Offset = "0xA5FC2C", VA = "0xA5FC2C")]
	public void OnTimeLineEnd()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA5FAEC", Offset = "0xA5FAEC", VA = "0xA5FAEC")]
	private bool ReleasedFromShackles()
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA5FA68", Offset = "0xA5FA68", VA = "0xA5FA68")]
	private void Init()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA5FCF4", Offset = "0xA5FCF4", VA = "0xA5FCF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA5FE2C", Offset = "0xA5FE2C", VA = "0xA5FE2C")]
	public ReleaseDragonCutscene()
	{
	}
}
[Token(Token = "0x200005E")]
public enum TimelineSource
{
	[Token(Token = "0x4000175")]
	Default,
	[Token(Token = "0x4000176")]
	LeftTV_Level2,
	[Token(Token = "0x4000177")]
	RightTV_Level2
}
[Token(Token = "0x200005F")]
public class TimelineCutscene : MonoBehaviour, IPlayable
{
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB04", Offset = "0x7BCB04")]
	private sealed class <Cutscene>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineCutscene <>4__this;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600249B")]
			[Address(RVA = "0xA878CC", Offset = "0xA878CC", VA = "0xA878CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600249D")]
			[Address(RVA = "0xA8793C", Offset = "0xA8793C", VA = "0xA8793C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xA8735C", Offset = "0xA8735C", VA = "0xA8735C")]
		[DebuggerHidden]
		public <Cutscene>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xA876A4", Offset = "0xA876A4", VA = "0xA876A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xA876A8", Offset = "0xA876A8", VA = "0xA876A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xA878D4", Offset = "0xA878D4", VA = "0xA878D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB14", Offset = "0x7BCB14")]
	private sealed class <OnYourMarks>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimelineCutscene <>4__this;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xA87D14", Offset = "0xA87D14", VA = "0xA87D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0xA87D84", Offset = "0xA87D84", VA = "0xA87D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xA87408", Offset = "0xA87408", VA = "0xA87408")]
		[DebuggerHidden]
		public <OnYourMarks>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xA87944", Offset = "0xA87944", VA = "0xA87944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xA87948", Offset = "0xA87948", VA = "0xA87948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xA87D1C", Offset = "0xA87D1C", VA = "0xA87D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector director;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CutscenePosition> initialPositions;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CutscenePosition> finalPositions;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> objectsToDeactivate;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeToReachInitialPositions;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool advanceState;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool lockDotMovement;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool prePlay;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool setStateAsCutscene;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineSource source;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MonoBehaviour> componentsToDisable;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA86F94", Offset = "0xA86F94", VA = "0xA86F94", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA8712C", Offset = "0xA8712C", VA = "0xA8712C", Slot = "4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA872DC", Offset = "0xA872DC", VA = "0xA872DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD404", Offset = "0x7CD404")]
	private IEnumerator Cutscene()
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA87388", Offset = "0xA87388", VA = "0xA87388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD468", Offset = "0x7CD468")]
	private IEnumerator OnYourMarks()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA87434", Offset = "0xA87434", VA = "0xA87434", Slot = "6")]
	protected virtual void OnCutsceneStart()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA87438", Offset = "0xA87438", VA = "0xA87438")]
	public void OnTimelineEnd()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA871E0", Offset = "0xA871E0", VA = "0xA871E0")]
	public void LockDot(bool shouldLock)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA87694", Offset = "0xA87694", VA = "0xA87694")]
	public TimelineCutscene()
	{
	}
}
[Serializable]
[Token(Token = "0x2000060")]
public class CutscenePosition
{
	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform actor;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mark;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BDDEC", Offset = "0x7BDDEC")]
	private Vector3 <positionBeforeCutscene>k__BackingField;

	[Token(Token = "0x17000017")]
	public Vector3 positionBeforeCutscene
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xBF0AD8", Offset = "0xBF0AD8", VA = "0xBF0AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD4CC", Offset = "0x7CD4CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xBF0AE4", Offset = "0xBF0AE4", VA = "0xBF0AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD4DC", Offset = "0x7CD4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xBF0AF0", Offset = "0xBF0AF0", VA = "0xBF0AF0")]
	public void RecordBeginningPosition()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xBF0B30", Offset = "0xBF0B30", VA = "0xBF0B30")]
	public CutscenePosition()
	{
	}
}
[Token(Token = "0x2000061")]
public class DamageWhenVisibleOnly : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider2D collider_2D;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer spriteRend;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xBF16F8", Offset = "0xBF16F8", VA = "0xBF16F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xBF1748", Offset = "0xBF1748", VA = "0xBF1748")]
	public DamageWhenVisibleOnly()
	{
	}
}
[Token(Token = "0x2000062")]
public class ChargedBulletPool : ObjectPool<Bullet>
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Bullet> spawnedPowerUps;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xAAF3C4", Offset = "0xAAF3C4", VA = "0xAAF3C4", Slot = "5")]
	public override void OnPop(Bullet obj)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xAAF434", Offset = "0xAAF434", VA = "0xAAF434", Slot = "6")]
	public override void OnPush(Bullet obj)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xAAF2D8", Offset = "0xAAF2D8", VA = "0xAAF2D8")]
	public void PushAllBullets()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xAAF4A4", Offset = "0xAAF4A4", VA = "0xAAF4A4")]
	public ChargedBulletPool()
	{
	}
}
[Token(Token = "0x2000063")]
public class DotBulletHitbox : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bullet parentBullet;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB485CC", Offset = "0xB485CC", VA = "0xB485CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB4872C", Offset = "0xB4872C", VA = "0xB4872C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB48798", Offset = "0xB48798", VA = "0xB48798")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB48784", Offset = "0xB48784", VA = "0xB48784")]
	private void CheckCollision(Transform other)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB487F0", Offset = "0xB487F0", VA = "0xB487F0")]
	public DotBulletHitbox()
	{
	}
}
[Token(Token = "0x2000064")]
public class BombPowerUp : Bullet
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ChargedBulletPool bulletPool;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float shockwaveSpeed;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool explode;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float explodeTimer;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xAA1714", Offset = "0xAA1714", VA = "0xAA1714", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xAA1880", Offset = "0xAA1880", VA = "0xAA1880")]
	public void Explode()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xAA1DA4", Offset = "0xAA1DA4", VA = "0xAA1DA4", Slot = "9")]
	protected override void ResetSettingsOnEnable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xAA1DEC", Offset = "0xAA1DEC", VA = "0xAA1DEC")]
	public BombPowerUp()
	{
	}
}
[Token(Token = "0x2000065")]
public class BubbleBullet : Bullet
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDDFC", Offset = "0x7BDDFC")]
	public float deceleration;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float jumpUnitsOnTrigger;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string bounceFMODEvent;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float speedMultiplier;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xAA6AE4", Offset = "0xAA6AE4", VA = "0xAA6AE4", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xAA6DC4", Offset = "0xAA6DC4", VA = "0xAA6DC4")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xAA6FB4", Offset = "0xAA6FB4", VA = "0xAA6FB4", Slot = "9")]
	protected override void ResetSettingsOnEnable()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xAA6FEC", Offset = "0xAA6FEC", VA = "0xAA6FEC")]
	public BubbleBullet()
	{
	}
}
[Token(Token = "0x2000066")]
public class FlamethrowerPowerUp : DotItem
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDE44", Offset = "0x7BDE44")]
	public float rateOfFire;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float spread;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timer;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance flameEventInstance;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xAD053C", Offset = "0xAD053C", VA = "0xAD053C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xAD060C", Offset = "0xAD060C", VA = "0xAD060C", Slot = "9")]
	protected override void Pressed()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xAD0854", Offset = "0xAD0854", VA = "0xAD0854", Slot = "10")]
	protected override void Holding()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xAD09D8", Offset = "0xAD09D8", VA = "0xAD09D8", Slot = "11")]
	protected override void Released()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xAD08B0", Offset = "0xAD08B0", VA = "0xAD08B0")]
	private void ShootSingleFlame()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xAD09F0", Offset = "0xAD09F0", VA = "0xAD09F0", Slot = "14")]
	protected override void RemoveFromCurrentItem()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xAD0A24", Offset = "0xAD0A24", VA = "0xAD0A24")]
	public FlamethrowerPowerUp()
	{
	}
}
[Token(Token = "0x2000067")]
public class GrenadeBullet : Bullet
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDE7C", Offset = "0x7BDE7C")]
	public GrenadeExplosion explosionHitbox;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool explode;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float explodeTimer;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xAD8624", Offset = "0xAD8624", VA = "0xAD8624", Slot = "8")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xAD8794", Offset = "0xAD8794", VA = "0xAD8794")]
	public void StartExplosion()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xAD88B0", Offset = "0xAD88B0", VA = "0xAD88B0", Slot = "9")]
	protected override void ResetSettingsOnEnable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xAD8910", Offset = "0xAD8910", VA = "0xAD8910")]
	public GrenadeBullet()
	{
	}
}
[Token(Token = "0x2000068")]
public class GrenadeExplosion : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteAnimation spriteAnim;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrenadeBullet grenadeBullet;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string explosionFMODEvent;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool play;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xAD8918", Offset = "0xAD8918", VA = "0xAD8918")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xAD87C8", Offset = "0xAD87C8", VA = "0xAD87C8")]
	public void StartExplosion()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xAD896C", Offset = "0xAD896C", VA = "0xAD896C")]
	private void ResetExplosion()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xAD8B3C", Offset = "0xAD8B3C", VA = "0xAD8B3C")]
	public GrenadeExplosion()
	{
	}
}
[Token(Token = "0x2000069")]
public class GrenadeHitbox : MonoBehaviour
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool explodeEarlyOnEnemies;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool explodeEarlyOnBlocks;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xAD8B44", Offset = "0xAD8B44", VA = "0xAD8B44")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xAD8C68", Offset = "0xAD8C68", VA = "0xAD8C68")]
	public GrenadeHitbox()
	{
	}
}
[Token(Token = "0x200006A")]
public class MachineGunPowerUp : DotItem
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDEC4", Offset = "0x7BDEC4")]
	public float rateOfFire;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timer;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA31B24", Offset = "0xA31B24", VA = "0xA31B24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA31B28", Offset = "0xA31B28", VA = "0xA31B28", Slot = "9")]
	protected override void Pressed()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA31BA0", Offset = "0xA31BA0", VA = "0xA31BA0", Slot = "10")]
	protected override void Holding()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xA31D18", Offset = "0xA31D18", VA = "0xA31D18", Slot = "11")]
	protected override void Released()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xA31BFC", Offset = "0xA31BFC", VA = "0xA31BFC")]
	private void ShootSingleFlame()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA31D20", Offset = "0xA31D20", VA = "0xA31D20", Slot = "14")]
	protected override void RemoveFromCurrentItem()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xA31D48", Offset = "0xA31D48", VA = "0xA31D48")]
	public MachineGunPowerUp()
	{
	}
}
[Token(Token = "0x200006B")]
public class GetItem : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotItem item;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BDEFC", Offset = "0x7BDEFC")]
	public float pickupRespawnTime;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pickupContent;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string pickUpFMODEvent;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool audioFromTV;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameTV tvSource;

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xAD6F18", Offset = "0xAD6F18", VA = "0xAD6F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xAD6FF0", Offset = "0xAD6FF0", VA = "0xAD6FF0")]
	private void RespawnPickup()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xAD703C", Offset = "0xAD703C", VA = "0xAD703C")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xAD7140", Offset = "0xAD7140", VA = "0xAD7140")]
	public GetItem()
	{
	}
}
[Token(Token = "0x200006C")]
public class UmbrellaPowerUp : DotItem
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDF44", Offset = "0x7BDF44")]
	public PlayerPlatformerController dotRaccoon;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PlayerPlatformerController dotBionite;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float limitVelocityDownValue;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA90FF8", Offset = "0xA90FF8", VA = "0xA90FF8", Slot = "9")]
	protected override void Pressed()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA91000", Offset = "0xA91000", VA = "0xA91000", Slot = "10")]
	protected override void Holding()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xA91144", Offset = "0xA91144", VA = "0xA91144", Slot = "11")]
	protected override void Released()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA91008", Offset = "0xA91008", VA = "0xA91008")]
	private void SetUmbrella(bool on)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xA9114C", Offset = "0xA9114C", VA = "0xA9114C", Slot = "14")]
	protected override void RemoveFromCurrentItem()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xA91178", Offset = "0xA91178", VA = "0xA91178", Slot = "12")]
	public override void CancelShot(bool dotDied = false)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA911B0", Offset = "0xA911B0", VA = "0xA911B0")]
	public UmbrellaPowerUp()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA130", Offset = "0x7BA130")]
public class ChargeableCannon : DotItem
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BDF7C", Offset = "0x7BDF7C")]
	public bool limitVisibleShots;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float chargedTreshold;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string chargingFMODEvent;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator chargingEffect;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool shootChargedBullet;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float chargeTimer;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ChargedBulletPool ChargedBulletPool;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rb;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EventInstance chargingEventInstance;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PARAMETER_ID chargingEventParameterID;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xAAEA7C", Offset = "0xAAEA7C", VA = "0xAAEA7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xAAEC04", Offset = "0xAAEC04", VA = "0xAAEC04", Slot = "9")]
	protected override void Pressed()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xAAEFE4", Offset = "0xAAEFE4", VA = "0xAAEFE4", Slot = "10")]
	protected override void Holding()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xAAF0E4", Offset = "0xAAF0E4", VA = "0xAAF0E4", Slot = "11")]
	protected override void Released()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xAAEE10", Offset = "0xAAEE10", VA = "0xAAEE10")]
	private void ShootBullet(bool charged)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xAAF174", Offset = "0xAAF174", VA = "0xAAF174")]
	public void ResetCharge(bool resetCannon = false)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xAAF298", Offset = "0xAAF298", VA = "0xAAF298", Slot = "12")]
	public override void CancelShot(bool dotDied = false)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xAAF2A0", Offset = "0xAAF2A0", VA = "0xAAF2A0", Slot = "13")]
	public override void PushAll()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xAAF39C", Offset = "0xAAF39C", VA = "0xAAF39C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xAAF3AC", Offset = "0xAAF3AC", VA = "0xAAF3AC")]
	public ChargeableCannon()
	{
	}
}
[Token(Token = "0x200006E")]
public class PlayerBeatEmUpController : MonoBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string punchFMODEvent;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string dotJumpFMODEvent;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DotController dot;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB8E448", Offset = "0xB8E448", VA = "0xB8E448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB8E4FC", Offset = "0xB8E4FC", VA = "0xB8E4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB8EC98", Offset = "0xB8EC98", VA = "0xB8EC98")]
	public void ForceLookRight(bool force)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB8ED0C", Offset = "0xB8ED0C", VA = "0xB8ED0C")]
	public PlayerBeatEmUpController()
	{
	}
}
[Token(Token = "0x200006F")]
public class PlayerKartController : MonoBehaviour
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float powerUpTime;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string whipAttackFMODEvent;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string chargedFMODEvent;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string batAttackFMODEvent;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string batAttackFMODEvent_alt;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float axisSmoothFactor;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotationMaxAngle;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DotController dot;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator anim;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform dotSprite;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 axisSmooth;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float timeToCharge;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool charge;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool isCharged;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool waitForRelease;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float chargeTimer;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB8ED20", Offset = "0xB8ED20", VA = "0xB8ED20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB8EE14", Offset = "0xB8EE14", VA = "0xB8EE14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB8F000", Offset = "0xB8F000", VA = "0xB8F000")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB8EEE4", Offset = "0xB8EEE4", VA = "0xB8EEE4")]
	private void ClearAttackInput(bool clearAnim)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB8F80C", Offset = "0xB8F80C", VA = "0xB8F80C")]
	public PlayerKartController()
	{
	}
}
[Token(Token = "0x2000070")]
public class DotChangeGameLevel2 : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Interactable gamepadRacoon;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Interactable gamepadBionite;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level2InGameCameraManager inGameCameraManager;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject dotShadow;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string enterGame;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string exitGame;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Level2_ChangeGameVFX changeGameRacoonVFX;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Level2_ChangeGameVFX changeGameBioniteVFX;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Interactable currentGamepad;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Interactable previousGamepad;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canChange;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB487F8", Offset = "0xB487F8", VA = "0xB487F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB4887C", Offset = "0xB4887C", VA = "0xB4887C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB48CD8", Offset = "0xB48CD8", VA = "0xB48CD8")]
	private void UpdateDotShadow()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB48EF4", Offset = "0xB48EF4", VA = "0xB48EF4")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB48DB4", Offset = "0xB48DB4", VA = "0xB48DB4")]
	public void ChangeDot(DotType dotType)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB49168", Offset = "0xB49168", VA = "0xB49168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB49258", Offset = "0xB49258", VA = "0xB49258")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB49348", Offset = "0xB49348", VA = "0xB49348")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB49388", Offset = "0xB49388", VA = "0xB49388")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB493FC", Offset = "0xB493FC", VA = "0xB493FC")]
	public void ForceCanChange(bool value)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB49408", Offset = "0xB49408", VA = "0xB49408")]
	public DotChangeGameLevel2()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA194", Offset = "0x7BA194")]
public class DotConfig : ScriptableObject
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve recoverablePixelsOnDamage;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve recoverablePixelsOnDamageHardcore;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB49410", Offset = "0xB49410", VA = "0xB49410")]
	public DotConfig()
	{
	}
}
[Token(Token = "0x2000072")]
public class DotController : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotType dotType;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float invulnerabilityTimeOnHit;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InGameInput input;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DotItem defaultItem;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform shootTransform;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dotRenderer;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public DotHurtbox hurtBox;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DropPixels dropPixels;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DotConfig config;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool blinkSprite;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool blinkRedOnZeroPixel;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color blinkColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float emissionLevel;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pixelRecoveryDelay;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public DotDeathFx_Controller dotDeathFx;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float deathFxSizeMultiplier;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 deathFxPositionOffset;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE044", Offset = "0x7BE044")]
	[EventRef]
	public string getPixelFMODEvent;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string losePixelsFMODEvent;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string deathFMODEvent;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool inputOnlyChangesFacingDir;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[HideInInspector]
	public bool lockInput;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE0D0", Offset = "0x7BE0D0")]
	private bool <isDead>k__BackingField;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public InGameVFXManager.VFX_Types pixelVFX;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool invulnerable;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float invulnerabilityTimer;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float dotRedLevel;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer[] dotRenderers;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DotKnockback dotKnockback;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float pixelRecoveryTimer;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool canRecoverPixel;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE0E0", Offset = "0x7BE0E0")]
	public RippedSparkleSpawner rippedSparkleSpawner;

	[Token(Token = "0x40001FB")]
	private const float rippedMaxTimeBetweenPresses = 0.1f;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float rippedTimeBetweenPresses;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool waitForRippedBtnsRelease;

	[Token(Token = "0x17000018")]
	public DotItem cannon
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xB49418", Offset = "0xB49418", VA = "0xB49418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public bool isDead
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xB49494", Offset = "0xB49494", VA = "0xB49494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD4EC", Offset = "0x7CD4EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xB4949C", Offset = "0xB4949C", VA = "0xB4949C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD4FC", Offset = "0x7CD4FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool isGrounded
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xB42B6C", Offset = "0xB42B6C", VA = "0xB42B6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB494A8", Offset = "0xB494A8", VA = "0xB494A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB42B9C", Offset = "0xB42B9C", VA = "0xB42B9C")]
	public Vector3 GetDotVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB4976C", Offset = "0xB4976C", VA = "0xB4976C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB49D0C", Offset = "0xB49D0C", VA = "0xB49D0C")]
	private void CheckRippedMode()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB4A118", Offset = "0xB4A118", VA = "0xB4A118")]
	private void StartRippedMode()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB49C14", Offset = "0xB49C14", VA = "0xB49C14")]
	private void SetBlinkColorLevel(float t)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB4A27C", Offset = "0xB4A27C", VA = "0xB4A27C")]
	public void SetDotColor(Color color)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB4A450", Offset = "0xB4A450", VA = "0xB4A450")]
	public void ResetCharMov()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB4A464", Offset = "0xB4A464", VA = "0xB4A464")]
	public void InstaKillDot()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB4AAC8", Offset = "0xB4AAC8", VA = "0xB4AAC8")]
	public void InstaKillDot_Drown()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB4AB50", Offset = "0xB4AB50", VA = "0xB4AB50")]
	public void HurtboxTrigger(Vector3 impact, bool instantDeath = false)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB4A56C", Offset = "0xB4A56C", VA = "0xB4A56C")]
	private void HandleDeath(bool wasInstaKill, bool wasWater = false)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB4B4F4", Offset = "0xB4B4F4", VA = "0xB4B4F4")]
	private void ReloadAfterDeath()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB4B5A4", Offset = "0xB4B5A4", VA = "0xB4B5A4")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB4BA2C", Offset = "0xB4BA2C", VA = "0xB4BA2C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB4B5E4", Offset = "0xB4B5E4", VA = "0xB4B5E4")]
	private void CheckForPixel(GameObject colObj)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB4BAB0", Offset = "0xB4BAB0", VA = "0xB4BAB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB4BABC", Offset = "0xB4BABC", VA = "0xB4BABC")]
	public DotController()
	{
	}
}
[Token(Token = "0x2000073")]
public class DotDeathFx_Controller : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem fx;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnEnable;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB4BB74", Offset = "0xB4BB74", VA = "0xB4BB74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB4BC94", Offset = "0xB4BC94", VA = "0xB4BC94")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB4BC30", Offset = "0xB4BC30", VA = "0xB4BC30")]
	private void GetFx()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB4B3D4", Offset = "0xB4B3D4", VA = "0xB4B3D4")]
	public void ShowFx(Vector3 position, float scaleModifier = 1f)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB4B574", Offset = "0xB4B574", VA = "0xB4B574")]
	public void HideFx()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB4BC98", Offset = "0xB4BC98", VA = "0xB4BC98")]
	public DotDeathFx_Controller()
	{
	}
}
[Token(Token = "0x2000074")]
public class DotHurtbox : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	private const string hitTag = "Player";

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotController dotController;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE118", Offset = "0x7BE118")]
	private bool <allowTrigger>k__BackingField;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider coll3D;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider2D coll2D;

	[Token(Token = "0x1700001B")]
	public bool allowTrigger
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xB4C130", Offset = "0xB4C130", VA = "0xB4C130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD50C", Offset = "0x7CD50C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xB49BA0", Offset = "0xB49BA0", VA = "0xB49BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD51C", Offset = "0x7CD51C")]
		set
		{
		}
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB4C138", Offset = "0xB4C138", VA = "0xB4C138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB4C1C4", Offset = "0xB4C1C4", VA = "0xB4C1C4")]
	public Vector3 GetCollCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB4C2A8", Offset = "0xB4C2A8", VA = "0xB4C2A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB4C5B0", Offset = "0xB4C5B0", VA = "0xB4C5B0")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB4C2E8", Offset = "0xB4C2E8", VA = "0xB4C2E8")]
	private void CheckCollision(GameObject obj)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB4C5F0", Offset = "0xB4C5F0", VA = "0xB4C5F0")]
	public DotHurtbox()
	{
	}
}
[Token(Token = "0x2000075")]
public class DotItem : ObjectPool<Bullet>
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 direction;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform shootTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string shootFMODEvent;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BE148", Offset = "0x7BE148")]
	public float disableAfterSeconds;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BE180", Offset = "0x7BE180")]
	public int maximumOnScreenBullets;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isPowerUp;

	[NonSerialized]
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool press;

	[NonSerialized]
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool charge;

	[NonSerialized]
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool release;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float disableTimer;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected List<Bullet> poppedBullets;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB4CC14", Offset = "0xB4CC14", VA = "0xB4CC14", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB4CD8C", Offset = "0xB4CD8C", VA = "0xB4CD8C", Slot = "8")]
	public virtual void SimpleShot()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB4CF5C", Offset = "0xB4CF5C", VA = "0xB4CF5C")]
	public void PlayShootSound()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB4D040", Offset = "0xB4D040", VA = "0xB4D040", Slot = "9")]
	protected virtual void Pressed()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB4D0D0", Offset = "0xB4D0D0", VA = "0xB4D0D0", Slot = "10")]
	protected virtual void Holding()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB4D0D4", Offset = "0xB4D0D4", VA = "0xB4D0D4", Slot = "11")]
	protected virtual void Released()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB4D0D8", Offset = "0xB4D0D8", VA = "0xB4D0D8", Slot = "12")]
	public virtual void CancelShot(bool dotDied = false)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB4D128", Offset = "0xB4D128", VA = "0xB4D128", Slot = "5")]
	public override void OnPop(Bullet obj)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xB4D198", Offset = "0xB4D198", VA = "0xB4D198", Slot = "6")]
	public override void OnPush(Bullet obj)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xB4D208", Offset = "0xB4D208", VA = "0xB4D208", Slot = "13")]
	public virtual void PushAll()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xB4D2CC", Offset = "0xB4D2CC", VA = "0xB4D2CC")]
	public void SetAsCurrentItem()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xB4D4AC", Offset = "0xB4D4AC", VA = "0xB4D4AC", Slot = "14")]
	protected virtual void RemoveFromCurrentItem()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB4D520", Offset = "0xB4D520", VA = "0xB4D520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB4D5F4", Offset = "0xB4D5F4", VA = "0xB4D5F4")]
	public float GetDisableTimer()
	{
		return default(float);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xB4D5FC", Offset = "0xB4D5FC", VA = "0xB4D5FC")]
	public DotItem()
	{
	}
}
[Token(Token = "0x2000076")]
public class DotKnockback : MonoBehaviour
{
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB24", Offset = "0x7BCB24")]
	private sealed class <DelayedKnockback>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DotKnockback <>4__this;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rawDirection;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xB4E100", Offset = "0xB4E100", VA = "0xB4E100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0xB4E170", Offset = "0xB4E170", VA = "0xB4E170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0xB4DBA8", Offset = "0xB4DBA8", VA = "0xB4DBA8")]
		[DebuggerHidden]
		public <DelayedKnockback>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0xB4DCF0", Offset = "0xB4DCF0", VA = "0xB4DCF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0xB4DCF4", Offset = "0xB4DCF4", VA = "0xB4DCF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xB4E108", Offset = "0xB4E108", VA = "0xB4E108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float stunTime;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float groundSpeed;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isDavid;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE1B8", Offset = "0x7BE1B8")]
	public bool playAnim;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string animBool;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string animStateName;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool waitForAnimState;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DotController dot;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator anim;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool is3D;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isTopDown;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool defaultLookRotationAutomatic;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InGameCharacterMovement.FlipMode defaultFlipMode;

	[Token(Token = "0x4000221")]
	private const float minGroundCheckDelay = 0.2f;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xB4D6B8", Offset = "0xB4D6B8", VA = "0xB4D6B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xB4D86C", Offset = "0xB4D86C", VA = "0xB4D86C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xB4D990", Offset = "0xB4D990", VA = "0xB4D990")]
	private void ResetMovement()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xB4AFA8", Offset = "0xB4AFA8", VA = "0xB4AFA8")]
	public void SetKnockback(Vector3 rawDirection)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xB4DAE4", Offset = "0xB4DAE4", VA = "0xB4DAE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD52C", Offset = "0x7CD52C")]
	private IEnumerator DelayedKnockback(Vector3 rawDirection)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xB4DBD4", Offset = "0xB4DBD4", VA = "0xB4DBD4")]
	public DotKnockback()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xB4DC60", Offset = "0xB4DC60", VA = "0xB4DC60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD590", Offset = "0x7CD590")]
	private bool <DelayedKnockback>b__21_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000077")]
public delegate void ChangedDotEvent(DotType dotType);
[Token(Token = "0x2000078")]
public class DotManager : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE1F0", Offset = "0x7BE1F0")]
	private static DotManager <instance>k__BackingField;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minPixelsForSafety;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChangedDotEvent onChangedDot;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float scale;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DotType startingDotType;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BE200", Offset = "0x7BE200")]
	public bool autoResetDotOnDeath;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE238", Offset = "0x7BE238")]
	private bool <forceLockDotMovement>k__BackingField;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public DotController currentDot;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE258", Offset = "0x7BE258")]
	private DotType <currentDotType>k__BackingField;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE268", Offset = "0x7BE268")]
	private bool <currentDotIsRealWorld>k__BackingField;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<DotController> dotsInScene;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentDotIndex;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE278", Offset = "0x7BE278")]
	private DotItem <currentItem>k__BackingField;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentPixelsF;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE288", Offset = "0x7BE288")]
	public Button rippedButtonA;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button rippedButtonB;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool burstDamageOnStart;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RippedBurstHandler rippedBurstHandler;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float rippedSpeedMultiplier;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float rippedDamageMultiplier;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float holdButtonDuration;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE2F0", Offset = "0x7BE2F0")]
	[SerializeField]
	private bool fanfarreFeedback;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	private string rippedEventSFX;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	private string rippedEventFanfarre;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EventInstance rippedEventInstance;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool rippedEventIsOneShot;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE35C", Offset = "0x7BE35C")]
	private int <minPixelsToActivate>k__BackingField;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE36C", Offset = "0x7BE36C")]
	private int <burnPixelsPerSecond>k__BackingField;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE37C", Offset = "0x7BE37C")]
	private bool <rippedModeActive>k__BackingField;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE38C", Offset = "0x7BE38C")]
	private int <rippedModeStartingPixels>k__BackingField;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE39C", Offset = "0x7BE39C")]
	private float <rippedButtonHoldTimer>k__BackingField;

	[Token(Token = "0x1700001C")]
	public static DotManager instance
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xB42B04", Offset = "0xB42B04", VA = "0xB42B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5A0", Offset = "0x7CD5A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xB4E178", Offset = "0xB4E178", VA = "0xB4E178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5B0", Offset = "0x7CD5B0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static Vector3 dotScale
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xB4CEA0", Offset = "0xB4CEA0", VA = "0xB4CEA0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001E")]
	public bool forceLockDotMovement
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xB4E4B4", Offset = "0xB4E4B4", VA = "0xB4E4B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5C0", Offset = "0x7CD5C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xB4E4BC", Offset = "0xB4E4BC", VA = "0xB4E4BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5D0", Offset = "0x7CD5D0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public DotType currentDotType
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xB48CD0", Offset = "0xB48CD0", VA = "0xB48CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5E0", Offset = "0x7CD5E0")]
		get
		{
			return default(DotType);
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xB4E4C8", Offset = "0xB4E4C8", VA = "0xB4E4C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5F0", Offset = "0x7CD5F0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public bool currentDotIsRealWorld
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xB4D038", Offset = "0xB4D038", VA = "0xB4D038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD600", Offset = "0x7CD600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xB4E4D0", Offset = "0xB4E4D0", VA = "0xB4E4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD610", Offset = "0x7CD610")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public DotItem currentItem
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xB4948C", Offset = "0xB4948C", VA = "0xB4948C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD620", Offset = "0x7CD620")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xB4E4DC", Offset = "0xB4E4DC", VA = "0xB4E4DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD630", Offset = "0x7CD630")]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public int currentPixels
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xB49BAC", Offset = "0xB49BAC", VA = "0xB49BAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xB4E4E4", Offset = "0xB4E4E4", VA = "0xB4E4E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	private string rippedEvent
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xB4E550", Offset = "0xB4E550", VA = "0xB4E550")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public int minPixelsToActivate
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xB4E56C", Offset = "0xB4E56C", VA = "0xB4E56C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD640", Offset = "0x7CD640")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xB4E574", Offset = "0xB4E574", VA = "0xB4E574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD650", Offset = "0x7CD650")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public int burnPixelsPerSecond
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xB4E57C", Offset = "0xB4E57C", VA = "0xB4E57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD660", Offset = "0x7CD660")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xB4E584", Offset = "0xB4E584", VA = "0xB4E584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD670", Offset = "0x7CD670")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool rippedModeAvailable
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xB49CD0", Offset = "0xB49CD0", VA = "0xB49CD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public bool rippedModeActive
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xB4AE5C", Offset = "0xB4AE5C", VA = "0xB4AE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD680", Offset = "0x7CD680")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xB4E58C", Offset = "0xB4E58C", VA = "0xB4E58C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD690", Offset = "0x7CD690")]
		private set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public int rippedModeStartingPixels
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xB4E598", Offset = "0xB4E598", VA = "0xB4E598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6A0", Offset = "0x7CD6A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xB4E5A0", Offset = "0xB4E5A0", VA = "0xB4E5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6B0", Offset = "0x7CD6B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float rippedButtonHoldTimer
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xB4A108", Offset = "0xB4A108", VA = "0xB4A108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6C0", Offset = "0x7CD6C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xB4A100", Offset = "0xB4A100", VA = "0xB4A100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6D0", Offset = "0x7CD6D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float rippedButtonHoldDuration
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xB4A110", Offset = "0xB4A110", VA = "0xB4A110")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public float rippedButtonHoldProgress
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xB4E5A8", Offset = "0xB4E5A8", VA = "0xB4E5A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002C")]
	public static float dotSpeedMultiplier
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xB4E5B8", Offset = "0xB4E5B8", VA = "0xB4E5B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002D")]
	public static float dotDamageMultiplier
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xB4E660", Offset = "0xB4E660", VA = "0xB4E660")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xB4E1E8", Offset = "0xB4E1E8", VA = "0xB4E1E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB4969C", Offset = "0xB4969C", VA = "0xB4969C")]
	public void RegisterDotInScene(DotController dot)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB4E708", Offset = "0xB4E708", VA = "0xB4E708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB4E864", Offset = "0xB4E864", VA = "0xB4E864")]
	public void ForceLockDotMovement(bool lockMovement)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB4E870", Offset = "0xB4E870", VA = "0xB4E870")]
	public void SetDotPosition(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB48E80", Offset = "0xB48E80", VA = "0xB48E80")]
	public Vector3 GetDotPosition(bool pivotPos = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB4AE64", Offset = "0xB4AE64", VA = "0xB4AE64")]
	public bool DotHasGamepadFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB48FF0", Offset = "0xB48FF0", VA = "0xB48FF0")]
	public void SwitchDot(DotType newDotType, bool stayAtPosition = false)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB4EC30", Offset = "0xB4EC30", VA = "0xB4EC30")]
	public void SwitchDot(DotType newDotType, Vector3 position)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB4E970", Offset = "0xB4E970", VA = "0xB4E970")]
	private void ActivateDotByType(DotType type)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB4ED40", Offset = "0xB4ED40", VA = "0xB4ED40")]
	private void SetCurrentDot(DotController dot, bool active, int index)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xB4EDF0", Offset = "0xB4EDF0", VA = "0xB4EDF0")]
	private bool CheckDotRealWorld()
	{
		return default(bool);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB4D378", Offset = "0xB4D378", VA = "0xB4D378")]
	public void SetCurrentItem(DotItem _item)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xB4BA74", Offset = "0xB4BA74", VA = "0xB4BA74")]
	public void AddPixels(int n = 1)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB4EE1C", Offset = "0xB4EE1C", VA = "0xB4EE1C")]
	public void SetNumberOfPixels(int n)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB4A4EC", Offset = "0xB4A4EC", VA = "0xB4A4EC")]
	public bool ReceivedDamage(bool killDot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB4A18C", Offset = "0xB4A18C", VA = "0xB4A18C")]
	public void RippedMode(bool activate)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB4F008", Offset = "0xB4F008", VA = "0xB4F008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB4F130", Offset = "0xB4F130", VA = "0xB4F130")]
	public void RegisterBurstHandler(RippedBurstHandler handler)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB4EE20", Offset = "0xB4EE20", VA = "0xB4EE20")]
	private void HandleRippedModeFMODEvent(bool activating)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB4F1FC", Offset = "0xB4F1FC", VA = "0xB4F1FC")]
	private int GetRippedEventParamByDot()
	{
		return default(int);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB4F224", Offset = "0xB4F224", VA = "0xB4F224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB4F338", Offset = "0xB4F338", VA = "0xB4F338")]
	private void Debug_SubscribeToggleHurtbox()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xB4F420", Offset = "0xB4F420", VA = "0xB4F420")]
	private void ToggleHurtbox()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB4F498", Offset = "0xB4F498", VA = "0xB4F498")]
	private void Add10Pixels()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB4F4D0", Offset = "0xB4F4D0", VA = "0xB4F4D0")]
	private void CycleDotSkinsPlus()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB4F7A8", Offset = "0xB4F7A8", VA = "0xB4F7A8")]
	private void CycleDotSkinsMinus()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB4F808", Offset = "0xB4F808", VA = "0xB4F808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB4F844", Offset = "0xB4F844", VA = "0xB4F844")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB4F860", Offset = "0xB4F860", VA = "0xB4F860")]
	public DotManager()
	{
	}
}
[Token(Token = "0x2000079")]
public enum DotType
{
	[Token(Token = "0x4000242")]
	None,
	[Token(Token = "0x4000243")]
	Platforming_InGame,
	[Token(Token = "0x4000244")]
	Platforming_InGame_Alt,
	[Token(Token = "0x4000245")]
	Platforming_RealWorld,
	[Token(Token = "0x4000246")]
	TopDown_InGame,
	[Token(Token = "0x4000247")]
	TopDown_RealWorld,
	[Token(Token = "0x4000248")]
	BeatEmUp_InGame,
	[Token(Token = "0x4000249")]
	BeatEmUp_RealWorld,
	[Token(Token = "0x400024A")]
	ThirdPerson_InGame,
	[Token(Token = "0x400024B")]
	ThirdPerson_RealWorld,
	[Token(Token = "0x400024C")]
	Kart_RealWorld,
	[Token(Token = "0x400024D")]
	Spaceship_RealWorld,
	[Token(Token = "0x400024E")]
	Davidot_RealWorld
}
[Token(Token = "0x200007A")]
public class DotMultipleCheckpointsLevel2 : MonoBehaviour
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dotRacoon;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dotBionite;

	[Token(Token = "0x4000251")]
	private const string racoonFlag = "racoon";

	[Token(Token = "0x4000252")]
	private const string bioniteFlag = "bionite";

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform racoonTransform;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform bioniteTransform;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB4F9A8", Offset = "0xB4F9A8", VA = "0xB4F9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB4FAF4", Offset = "0xB4FAF4", VA = "0xB4FAF4")]
	private void SaveInfo(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB4FCF8", Offset = "0xB4FCF8", VA = "0xB4FCF8")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB4FE94", Offset = "0xB4FE94", VA = "0xB4FE94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB4FFA8", Offset = "0xB4FFA8", VA = "0xB4FFA8")]
	public DotMultipleCheckpointsLevel2()
	{
	}
}
[Token(Token = "0x200007B")]
public delegate void SkinChangeEvent(string newSkin);
[Token(Token = "0x200007C")]
public class DotSkin
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<string> skinNames;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> skinDisplayNames;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<string> skinUnlockCriterion;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static HashSet<string> unlockedSkins;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE3BC", Offset = "0x7BE3BC")]
	private static int <currentSkinIndex>k__BackingField;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE3CC", Offset = "0x7BE3CC")]
	private static bool <initialized>k__BackingField;

	[Token(Token = "0x400025C")]
	public const string defaultSkin = "default";

	[Token(Token = "0x400025D")]
	private const string dotSkinsAsset = "DotSkins";

	[Token(Token = "0x400025E")]
	public const string skinsSaveKey = "Skins.Unlocked";

	[Token(Token = "0x400025F")]
	public const string currentSkinKey = "Skins.Current";

	[Token(Token = "0x4000260")]
	private const char separator = ',';

	[Token(Token = "0x1700002E")]
	public static string currentSkin
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xB4FFB0", Offset = "0xB4FFB0", VA = "0xB4FFB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	private static int currentSkinIndex
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xB50040", Offset = "0xB50040", VA = "0xB50040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD700", Offset = "0x7CD700")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB50288", Offset = "0xB50288", VA = "0xB50288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD710", Offset = "0x7CD710")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public static bool initialized
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB4E35C", Offset = "0xB4E35C", VA = "0xB4E35C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD720", Offset = "0x7CD720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB502F4", Offset = "0xB502F4", VA = "0xB502F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD730", Offset = "0x7CD730")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event SkinChangeEvent onSkinChange
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xB500A8", Offset = "0xB500A8", VA = "0xB500A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6E0", Offset = "0x7CD6E0")]
		add
		{
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xB50198", Offset = "0xB50198", VA = "0xB50198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD6F0", Offset = "0x7CD6F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xB50364", Offset = "0xB50364", VA = "0xB50364")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xB5097C", Offset = "0xB5097C", VA = "0xB5097C")]
	public static void ForceInitialize_Internal()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xB509D8", Offset = "0xB509D8", VA = "0xB509D8")]
	public static void ChangeSkin(int newSkinIndex)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB4F530", Offset = "0xB4F530", VA = "0xB4F530")]
	public static void CycleSkins(bool increase = true)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB50D6C", Offset = "0xB50D6C", VA = "0xB50D6C")]
	public static bool SkinMenuDisplayInfo(int index, out int newIndex, out string displayName, out string howToUnlock)
	{
		return default(bool);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB507D8", Offset = "0xB507D8", VA = "0xB507D8")]
	private static void PopulateUnlockedSkins()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB50FA0", Offset = "0xB50FA0", VA = "0xB50FA0")]
	public static bool TryUnlockSkin(string skinName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB4E3C4", Offset = "0xB4E3C4", VA = "0xB4E3C4")]
	public static void LoadLastUsedSkin()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB5126C", Offset = "0xB5126C", VA = "0xB5126C")]
	public static int GetCurrentSkinIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB50CB4", Offset = "0xB50CB4", VA = "0xB50CB4")]
	private static void SaveLastUsedSkinIndex()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xB50CB0", Offset = "0xB50CB0", VA = "0xB50CB0")]
	private static void PrintMessage(string message)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB51304", Offset = "0xB51304", VA = "0xB51304")]
	public static List<string> GetAllSkinsList()
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB513A8", Offset = "0xB513A8", VA = "0xB513A8")]
	public DotSkin()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA1D8", Offset = "0x7BA1D8")]
public class DotSkinSettings : ScriptableObject
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	public List<string> skinNames;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[StringsKey]
	public List<string> skinDisplayNames;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BE44C", Offset = "0x7BE44C")]
	[StringsKey]
	public string defaultSkinDisplayName;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE484", Offset = "0x7BE484")]
	[StringsKey]
	public string skinUnlock_Element0;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[StringsKey]
	public string skinUnlock_Element1;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[StringsKey]
	public string skinUnlock_Element2;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[StringsKey]
	public string skinUnlock_Element3;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[StringsKey]
	public string skinUnlock_Element4;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[StringsKey]
	public string skinUnlock_Element5;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[StringsKey]
	public string skinUnlock_Element6;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[StringsKey]
	public string skinUnlock_Element7;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xB5076C", Offset = "0xB5076C", VA = "0xB5076C")]
	public string GetSkinUnlockCriterion(int index)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB51504", Offset = "0xB51504", VA = "0xB51504")]
	public DotSkinSettings()
	{
	}
}
[Token(Token = "0x200007E")]
public class ReskinDotBase : MonoBehaviour
{
	[Token(Token = "0x6000291")]
	[Address(RVA = "0xA60328", Offset = "0xA60328", VA = "0xA60328", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xA603E8", Offset = "0xA603E8", VA = "0xA603E8", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xA60494", Offset = "0xA60494", VA = "0xA60494", Slot = "6")]
	protected virtual void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xA60498", Offset = "0xA60498", VA = "0xA60498")]
	public ReskinDotBase()
	{
	}
}
[Token(Token = "0x200007F")]
public class ReskinDotRig : ReskinDotBase
{
	[Token(Token = "0x200055E")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BAC")]
		DotFirstPerson,
		[Token(Token = "0x4001BAD")]
		DotFirstPerson89
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB34", Offset = "0x7BCB34")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spriteName;

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xA60D88", Offset = "0xA60D88", VA = "0xA60D88")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xA60FEC", Offset = "0xA60FEC", VA = "0xA60FEC")]
		internal bool <UpdateSkins>b__0(Sprite item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB44", Offset = "0x7BCB44")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spriteName;

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xA60F60", Offset = "0xA60F60", VA = "0xA60F60")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xA6102C", Offset = "0xA6102C", VA = "0xA6102C")]
		internal bool <TryGetSkinSprite>b__0(Sprite item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool updateInactiveRenderers;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer[] spriteRenderers;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Sprite[]> skins;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xA604A0", Offset = "0xA604A0", VA = "0xA604A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA60588", Offset = "0xA60588", VA = "0xA60588")]
	private void SaveDefaultSprites()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA60D84", Offset = "0xA60D84", VA = "0xA60D84", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA60800", Offset = "0xA60800", VA = "0xA60800")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA60D90", Offset = "0xA60D90", VA = "0xA60D90")]
	public bool TryGetSkinSprite(string spriteName, out Sprite sprite)
	{
		return default(bool);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA60F68", Offset = "0xA60F68", VA = "0xA60F68")]
	public ReskinDotRig()
	{
	}
}
[Token(Token = "0x2000080")]
public class ReskinDotSprite : ReskinDotBase
{
	[Token(Token = "0x2000561")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BB1")]
		DotTopDown,
		[Token(Token = "0x4001BB2")]
		DotSideScroller,
		[Token(Token = "0x4001BB3")]
		DotBiker,
		[Token(Token = "0x4001BB4")]
		DotBeatEmUp,
		[Token(Token = "0x4001BB5")]
		DotBeatEmUpBoss,
		[Token(Token = "0x4001BB6")]
		DotFirstPerson
	}

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Sprite> skins;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA6106C", Offset = "0xA6106C", VA = "0xA6106C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA613C4", Offset = "0xA613C4", VA = "0xA613C4", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA6119C", Offset = "0xA6119C", VA = "0xA6119C")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA613C8", Offset = "0xA613C8", VA = "0xA613C8")]
	public ReskinDotSprite()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA61444", Offset = "0xA61444", VA = "0xA61444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD740", Offset = "0x7CD740")]
	private bool <UpdateSkins>b__6_0(Sprite item)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000081")]
public class ReskinDotSpriteAnimation : ReskinDotBase
{
	[Token(Token = "0x2000562")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BB8")]
		DotTopDown,
		[Token(Token = "0x4001BB9")]
		DotSideScroller,
		[Token(Token = "0x4001BBA")]
		DotBiker,
		[Token(Token = "0x4001BBB")]
		DotBeatEmUp,
		[Token(Token = "0x4001BBC")]
		DotBeatEmUpBoss
	}

	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB54", Offset = "0x7BCB54")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spriteName;

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xA61924", Offset = "0xA61924", VA = "0xA61924")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xA61A50", Offset = "0xA61A50", VA = "0xA61A50")]
		internal bool <LateUpdate>b__0(Sprite item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DotSpriteType oldSpriteType;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Sprite[]> skins;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA614C0", Offset = "0xA614C0", VA = "0xA614C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA616F0", Offset = "0xA616F0", VA = "0xA616F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA619D0", Offset = "0xA619D0", VA = "0xA619D0", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA61560", Offset = "0xA61560", VA = "0xA61560")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xA6192C", Offset = "0xA6192C", VA = "0xA6192C")]
	private void UpdateDotType()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xA619D4", Offset = "0xA619D4", VA = "0xA619D4")]
	public ReskinDotSpriteAnimation()
	{
	}
}
[Token(Token = "0x2000082")]
public class ReskinDotTexture : ReskinDotBase
{
	[Token(Token = "0x2000564")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BBF")]
		Dot3D
	}

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Texture> skins;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xA61A90", Offset = "0xA61A90", VA = "0xA61A90")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA61DE4", Offset = "0xA61DE4", VA = "0xA61DE4", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA61BE8", Offset = "0xA61BE8", VA = "0xA61BE8")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA61DE8", Offset = "0xA61DE8", VA = "0xA61DE8")]
	public ReskinDotTexture()
	{
	}
}
[Token(Token = "0x2000083")]
public class ReskinDotUIImage : ReskinDotBase
{
	[Token(Token = "0x2000565")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BC1")]
		DotTopDown,
		[Token(Token = "0x4001BC2")]
		DotSideScroller,
		[Token(Token = "0x4001BC3")]
		DotBiker,
		[Token(Token = "0x4001BC4")]
		DotBeatEmUp,
		[Token(Token = "0x4001BC5")]
		DotBeatEmUpBoss
	}

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Sprite> skins;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA61E64", Offset = "0xA61E64", VA = "0xA61E64")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA621BC", Offset = "0xA621BC", VA = "0xA621BC", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA61F94", Offset = "0xA61F94", VA = "0xA61F94")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA621C0", Offset = "0xA621C0", VA = "0xA621C0")]
	public ReskinDotUIImage()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA6223C", Offset = "0xA6223C", VA = "0xA6223C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD750", Offset = "0x7CD750")]
	private bool <UpdateSkins>b__6_0(Sprite item)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000084")]
public class ReskinDotUIImageAnimation : ReskinDotBase
{
	[Token(Token = "0x2000566")]
	public enum DotSpriteType
	{
		[Token(Token = "0x4001BC7")]
		DotTopDown,
		[Token(Token = "0x4001BC8")]
		DotSideScroller,
		[Token(Token = "0x4001BC9")]
		DotBiker,
		[Token(Token = "0x4001BCA")]
		DotBeatEmUp,
		[Token(Token = "0x4001BCB")]
		DotBeatEmUpBoss
	}

	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB64", Offset = "0x7BCB64")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spriteName;

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xA6271C", Offset = "0xA6271C", VA = "0xA6271C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xA62848", Offset = "0xA62848", VA = "0xA62848")]
		internal bool <LateUpdate>b__0(Sprite item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotSpriteType dotSpriteType;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DotSpriteType oldSpriteType;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, Sprite[]> skins;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA622B8", Offset = "0xA622B8", VA = "0xA622B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA624E8", Offset = "0xA624E8", VA = "0xA624E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA627C8", Offset = "0xA627C8", VA = "0xA627C8", Slot = "6")]
	protected override void OnSkinChange(string skinName)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xA62358", Offset = "0xA62358", VA = "0xA62358")]
	private void UpdateSkins(string skinName)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA62724", Offset = "0xA62724", VA = "0xA62724")]
	private void UpdateDotType()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA627CC", Offset = "0xA627CC", VA = "0xA627CC")]
	public ReskinDotUIImageAnimation()
	{
	}
}
[Token(Token = "0x2000085")]
public class SkinsRefSource : StringRefSource
{
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA72764", Offset = "0xA72764", VA = "0xA72764", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA72860", Offset = "0xA72860", VA = "0xA72860")]
	public SkinsRefSource()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA21C", Offset = "0x7BA21C")]
public class PlayerPlatformerConfig : ScriptableObject
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gravity;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float limitVelocityDownValue;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float walkSpeed;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpSpeed;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shortHopMultiplier;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shotHopSpeedLimit;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB926FC", Offset = "0xB926FC", VA = "0xB926FC")]
	public PlayerPlatformerConfig()
	{
	}
}
[Token(Token = "0x2000087")]
public class PlayerPlatformerController : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerPlatformerConfig dotConfig;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float underwaterSurvivalTime;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shootingAnimationDuration;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string dotJumpFMODEvent;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string dotLandFMODEvent;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool waitForCannonRelease;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float shootingTimer;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhysicsBody body;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DotController dot;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DotInteraction dotInteraction;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE560", Offset = "0x7BE560")]
	private bool <isUnderWater>k__BackingField;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool wasUnderWater;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float oldJumpSpeed;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE570", Offset = "0x7BE570")]
	private Animator <animator>k__BackingField;

	[Token(Token = "0x17000031")]
	public bool isUnderWater
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xB92718", Offset = "0xB92718", VA = "0xB92718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD760", Offset = "0x7CD760")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xB92720", Offset = "0xB92720", VA = "0xB92720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD770", Offset = "0x7CD770")]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public Animator animator
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xB9272C", Offset = "0xB9272C", VA = "0xB9272C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD780", Offset = "0x7CD780")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xB92734", Offset = "0xB92734", VA = "0xB92734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD790", Offset = "0x7CD790")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xB9273C", Offset = "0xB9273C", VA = "0xB9273C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xB928A4", Offset = "0xB928A4", VA = "0xB928A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xB92BA0", Offset = "0xB92BA0", VA = "0xB92BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xB92CE0", Offset = "0xB92CE0", VA = "0xB92CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xB929D4", Offset = "0xB929D4", VA = "0xB929D4")]
	private void ClearInputBehaviour()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xB936E0", Offset = "0xB936E0", VA = "0xB936E0")]
	private void UpdateAnim(bool isGrounded, float horizontalSpeed, float verticalSpeed, bool isShooting)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xB9386C", Offset = "0xB9386C", VA = "0xB9386C")]
	public void SetDotConfig(PlayerPlatformerConfig newConfig, bool isWater)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xB93904", Offset = "0xB93904", VA = "0xB93904")]
	public void SetNewLimitVelocityDown(float newValue)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB93958", Offset = "0xB93958", VA = "0xB93958")]
	public void HandleWateryDeath()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xB93988", Offset = "0xB93988", VA = "0xB93988")]
	private void HasJumped(InGameCharacterMovement charMov)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB939B8", Offset = "0xB939B8", VA = "0xB939B8")]
	private void HasLanded(InGameCharacterMovement charMov)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB939E8", Offset = "0xB939E8", VA = "0xB939E8")]
	public PlayerPlatformerController()
	{
	}
}
[Token(Token = "0x2000088")]
public class SidescrollerFollowPoints : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sensor sensorCenter;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sensor sensorNotFlipped;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sensor sensorFlipped;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA71AE8", Offset = "0xA71AE8", VA = "0xA71AE8")]
	public SidescrollerFollowPoints()
	{
	}
}
[Token(Token = "0x2000089")]
public class RandomPosInsideCollider : MonoBehaviour
{
	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE580", Offset = "0x7BE580")]
	public Collider coll3D;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider2D coll2D;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BE5B8", Offset = "0x7BE5B8")]
	public float timeToChangePos;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x17000033")]
	private Bounds collBounds
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xA5EAE4", Offset = "0xA5EAE4", VA = "0xA5EAE4")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA5EBAC", Offset = "0xA5EBAC", VA = "0xA5EBAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA5ED94", Offset = "0xA5ED94", VA = "0xA5ED94")]
	public RandomPosInsideCollider()
	{
	}
}
[Token(Token = "0x200008A")]
public class RippedBurst : MonoBehaviour
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RippedBurstHandler.RippedBurstType type;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string playOnEnable;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pixelAmount;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float radius;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angularSpeed;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pixelScale;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float groupAngle;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pixel;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform direction;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject hitbox;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> pixels;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA6623C", Offset = "0xA6623C", VA = "0xA6623C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA66368", Offset = "0xA66368", VA = "0xA66368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xA66398", Offset = "0xA66398", VA = "0xA66398")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xA66780", Offset = "0xA66780", VA = "0xA66780")]
	public RippedBurst()
	{
	}
}
[Token(Token = "0x200008B")]
public class RippedBurstHandler : MonoBehaviour
{
	[Token(Token = "0x2000568")]
	public enum RippedBurstType
	{
		[Token(Token = "0x4001BCE")]
		InGame_2D,
		[Token(Token = "0x4001BCF")]
		InGame_3D,
		[Token(Token = "0x4001BD0")]
		InGame_BEU,
		[Token(Token = "0x4001BD1")]
		RealWorld,
		[Token(Token = "0x4001BD2")]
		None
	}

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeActive;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RippedBurst[] rippedBurstTypes;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RippedBurst> instantiatedRippedBursts;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentIndex;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rippedBurstEnabled;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xA66804", Offset = "0xA66804", VA = "0xA66804")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA66910", Offset = "0xA66910", VA = "0xA66910")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA66A1C", Offset = "0xA66A1C", VA = "0xA66A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA66A9C", Offset = "0xA66A9C", VA = "0xA66A9C")]
	public void ShowRippedBurst(DotType dotType)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA66E54", Offset = "0xA66E54", VA = "0xA66E54")]
	private void OnChangeDot(DotType dotType)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xA66ACC", Offset = "0xA66ACC", VA = "0xA66ACC")]
	private RippedBurstType GetBurstType(DotType dotType)
	{
		return default(RippedBurstType);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xA66AF0", Offset = "0xA66AF0", VA = "0xA66AF0")]
	private void EnableRippedBurstByType(RippedBurstType type)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xA66E7C", Offset = "0xA66E7C", VA = "0xA66E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xA67050", Offset = "0xA67050", VA = "0xA67050")]
	public RippedBurstHandler()
	{
	}
}
[Token(Token = "0x200008C")]
public class RippedModeConditionalActivation : MonoBehaviour
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject defaultContent;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rippedModeContent;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer defaultRenderer;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rippedRenderer;

	[Token(Token = "0x17000034")]
	public Renderer bulletRenderer
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xA670D4", Offset = "0xA670D4", VA = "0xA670D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xA67168", Offset = "0xA67168", VA = "0xA67168")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xA67218", Offset = "0xA67218", VA = "0xA67218")]
	public void Change()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xA67308", Offset = "0xA67308", VA = "0xA67308")]
	public RippedModeConditionalActivation()
	{
	}
}
[Token(Token = "0x200008D")]
public class RippedSparkle : MonoBehaviour, IPoolable<RippedSparkle>
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE5D8", Offset = "0x7BE5D8")]
	private ObjectPool<RippedSparkle> <poolComponent>k__BackingField;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteAnimation spriteAnimation;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float originalSize;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 originalEulerAngles;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isAlive;

	[Token(Token = "0x17000035")]
	public ObjectPool<RippedSparkle> poolComponent
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xA67310", Offset = "0xA67310", VA = "0xA67310", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD7A0", Offset = "0x7CD7A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xA67318", Offset = "0xA67318", VA = "0xA67318", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD7B0", Offset = "0x7CD7B0")]
		set
		{
		}
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA67320", Offset = "0xA67320", VA = "0xA67320")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA67360", Offset = "0xA67360", VA = "0xA67360")]
	public void Prepare(Vector3 rotationOffset, Vector2 sizeVariation)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA67570", Offset = "0xA67570", VA = "0xA67570")]
	private void PushToPool()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA675EC", Offset = "0xA675EC", VA = "0xA675EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA675F0", Offset = "0xA675F0", VA = "0xA675F0")]
	public RippedSparkle()
	{
	}
}
[Token(Token = "0x200008E")]
public class RippedSparkleSpawner : ObjectPool<RippedSparkle>
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BE5E8", Offset = "0x7BE5E8")]
	public float timeBetweenSpawns;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 sizePercentageMinMax;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotationOffset;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE5F8", Offset = "0x7BE5F8")]
	public Collider coll3D;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider2D coll2D;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timer;

	[Token(Token = "0x17000036")]
	private Bounds collBounds
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xA675F8", Offset = "0xA675F8", VA = "0xA675F8")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA676C0", Offset = "0xA676C0", VA = "0xA676C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA679C8", Offset = "0xA679C8", VA = "0xA679C8")]
	public RippedSparkleSpawner()
	{
	}
}
[Token(Token = "0x200008F")]
public class ScaleToDot : MonoBehaviour
{
	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB74", Offset = "0x7BCB74")]
	private sealed class <UpdateSizeDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleToDot <>4__this;

		[Token(Token = "0x1700034D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xA6BE68", Offset = "0xA6BE68", VA = "0xA6BE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xA6BED8", Offset = "0xA6BED8", VA = "0xA6BED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xA6BC34", Offset = "0xA6BC34", VA = "0xA6BC34")]
		[DebuggerHidden]
		public <UpdateSizeDelayed>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xA6BDF0", Offset = "0xA6BDF0", VA = "0xA6BDF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xA6BDF4", Offset = "0xA6BDF4", VA = "0xA6BDF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xA6BE70", Offset = "0xA6BE70", VA = "0xA6BE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool existsWhenLevelStarts;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ignoreOriginalScale;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 originalScale;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA6BB48", Offset = "0xA6BB48", VA = "0xA6BB48")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA6BBB4", Offset = "0xA6BBB4", VA = "0xA6BBB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD7C0", Offset = "0x7CD7C0")]
	private IEnumerator UpdateSizeDelayed()
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA6BC60", Offset = "0xA6BC60", VA = "0xA6BC60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA6BC64", Offset = "0xA6BC64", VA = "0xA6BC64")]
	private void UpdateSize()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA6BDE0", Offset = "0xA6BDE0", VA = "0xA6BDE0")]
	public ScaleToDot()
	{
	}
}
[Token(Token = "0x2000090")]
public class ActivateSpaceShip : ProgressionState
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject spaceShipAtDavidHands;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject spaceShipAtToy;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject grabShipCollider;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject gazeGrabShipCollider;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string bgmParamName;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float bgmParamValue;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool endOfGame;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool wasGrab;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool showTrigger;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA95674", Offset = "0xA95674", VA = "0xA95674")]
	private void Start()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA956F8", Offset = "0xA956F8", VA = "0xA956F8", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA95748", Offset = "0xA95748", VA = "0xA95748", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA957A0", Offset = "0xA957A0", VA = "0xA957A0")]
	public void ActivateTrigger()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA95838", Offset = "0xA95838", VA = "0xA95838")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA9593C", Offset = "0xA9593C", VA = "0xA9593C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA95AEC", Offset = "0xA95AEC", VA = "0xA95AEC")]
	public ActivateSpaceShip()
	{
	}
}
[Token(Token = "0x2000091")]
public class PlayerSpaceshipController : MonoBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform content;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform fallbackPosition;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float velocity;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float axisSmoothFactor;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationMaxAngle;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float handYOffset;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator davidHand;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string davidAnimParameter;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DotController dot;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 axisSmooth;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool usingTracked;

	[Token(Token = "0x40002D4")]
	private const float minAxis = 0.3f;

	[Token(Token = "0x40002D5")]
	private const float maxAxis = 0.8f;

	[Token(Token = "0x40002D6")]
	private const string interactableParameterPrefix = "int_";

	[Token(Token = "0x40002D7")]
	private const string suffix = "_R";

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform handPosFollow;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB93A00", Offset = "0xB93A00", VA = "0xB93A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB93A64", Offset = "0xB93A64", VA = "0xB93A64")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB94478", Offset = "0xB94478", VA = "0xB94478")]
	private void TrackObject(Transform obj)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB94618", Offset = "0xB94618", VA = "0xB94618")]
	public PlayerSpaceshipController()
	{
	}
}
[Token(Token = "0x2000092")]
public class PlayerThirdPersonController : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shortHopMultiplier;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shotHopSpeedLimit;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shootingAnimationDuration;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string dotJumpFMODEvent;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool waitForCannonRelease;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float shootingTimer;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicsBody body;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DotController dot;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DotInteraction dotInteraction;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB946A8", Offset = "0xB946A8", VA = "0xB946A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB94788", Offset = "0xB94788", VA = "0xB94788")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB9501C", Offset = "0xB9501C", VA = "0xB9501C")]
	private void ClearInputBehaviour()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB951E8", Offset = "0xB951E8", VA = "0xB951E8")]
	private void UpdateAnim(bool isGrounded, float horizontalSpeed, float verticalSpeed, bool isShooting)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB953A8", Offset = "0xB953A8", VA = "0xB953A8")]
	public PlayerThirdPersonController()
	{
	}
}
[Token(Token = "0x2000093")]
public class PlayerTopDownController : MonoBehaviour
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float chargingWalkSpeed;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotController dot;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DotInteraction dotInteraction;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool waitForCannonRelease;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB953C8", Offset = "0xB953C8", VA = "0xB953C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB954A8", Offset = "0xB954A8", VA = "0xB954A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB95E04", Offset = "0xB95E04", VA = "0xB95E04")]
	private void ClearInputBehaviour()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB95FE4", Offset = "0xB95FE4", VA = "0xB95FE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB95FE8", Offset = "0xB95FE8", VA = "0xB95FE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB95FEC", Offset = "0xB95FEC", VA = "0xB95FEC")]
	public PlayerTopDownController()
	{
	}
}
[Token(Token = "0x2000094")]
public class DropPixels : ObjectPool<DynamicPixel>
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pixelSpeed;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float secondRingSpeedMultiplier;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7BE640", Offset = "0x7BE640")]
	public float initialVelocityUp;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float recoveryDelay;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxPixelsToDrop;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BE678", Offset = "0x7BE678")]
	public float arc;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool distributeEqually;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool randomizeSpawnPlane;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool randomizeDirection;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float anglePerPixel;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 rotationAxis;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 spawnAxis;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion originalRot;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB530E4", Offset = "0xB530E4", VA = "0xB530E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB53140", Offset = "0xB53140", VA = "0xB53140")]
	public void DropPixelFromTimeline(int numberOfPixels)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB4B0BC", Offset = "0xB4B0BC", VA = "0xB4B0BC")]
	public void Drop(int numberOfPixels, [Optional] Vector3 direction, bool giveScore = true, bool allowCollect = true)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB53158", Offset = "0xB53158", VA = "0xB53158")]
	private void SpawnPixel(Vector3 dir, float angle, ref int angleMultiplier, float angleOffset, ref bool pair, int rings, bool oddNumber, bool giveScore = true, bool allowCollect = true)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB53940", Offset = "0xB53940", VA = "0xB53940")]
	public DropPixels()
	{
	}
}
[Token(Token = "0x2000095")]
public class Content2D_InformationContent : MonoBehaviour
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool muteRotation;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationMultiplier;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ignoreFlip;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xBED8F8", Offset = "0xBED8F8", VA = "0xBED8F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xBED9AC", Offset = "0xBED9AC", VA = "0xBED9AC")]
	public void GetInformation(out Vector3 rotation, out Vector3 position, out SpriteRenderer sprite, out bool ignoreFlip)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xBEDC24", Offset = "0xBEDC24", VA = "0xBEDC24")]
	public Content2D_InformationContent()
	{
	}
}
[Token(Token = "0x2000096")]
public class InGameVFX : MonoBehaviour, IPoolableStandalone<InGameVFX>
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE694", Offset = "0x7BE694")]
	private ObjectPoolStandalone<InGameVFX> <pool>k__BackingField;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lifetime;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE6A4", Offset = "0x7BE6A4")]
	public SpriteAnimation spriteAnim;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE6DC", Offset = "0x7BE6DC")]
	public Animation anim;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float timer;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected SpriteRenderer sRend;

	[Token(Token = "0x17000037")]
	public ObjectPoolStandalone<InGameVFX> pool
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xAEFDE0", Offset = "0xAEFDE0", VA = "0xAEFDE0", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD824", Offset = "0x7CD824")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xAEFDE8", Offset = "0xAEFDE8", VA = "0xAEFDE8", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD834", Offset = "0x7CD834")]
		set
		{
		}
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xAEFDF0", Offset = "0xAEFDF0", VA = "0xAEFDF0", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xAEFF54", Offset = "0xAEFF54", VA = "0xAEFF54", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xAEFFF4", Offset = "0xAEFFF4", VA = "0xAEFFF4", Slot = "8")]
	public virtual void PlayVFX()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xAF00EC", Offset = "0xAF00EC", VA = "0xAF00EC", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xAF00F4", Offset = "0xAF00F4", VA = "0xAF00F4", Slot = "10")]
	public virtual SpriteRenderer Renderer()
	{
		return null;
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xAF0188", Offset = "0xAF0188", VA = "0xAF0188")]
	public InGameVFX()
	{
	}
}
[Token(Token = "0x2000097")]
public class InGameVFXManager : MonoBehaviour
{
	[Token(Token = "0x200056A")]
	public enum VFX_Types
	{
		[Token(Token = "0x4001BD7")]
		Smoke,
		[Token(Token = "0x4001BD8")]
		Fire,
		[Token(Token = "0x4001BD9")]
		Pixel,
		[Token(Token = "0x4001BDA")]
		SmokeRW,
		[Token(Token = "0x4001BDB")]
		FireRW,
		[Token(Token = "0x4001BDC")]
		PixelRW,
		[Token(Token = "0x4001BDD")]
		WaffleExp,
		[Token(Token = "0x4001BDE")]
		mashmallow,
		[Token(Token = "0x4001BDF")]
		Explosion,
		[Token(Token = "0x4001BE0")]
		AlienExplode,
		[Token(Token = "0x4001BE1")]
		bulletHitRW,
		[Token(Token = "0x4001BE2")]
		BulletHit,
		[Token(Token = "0x4001BE3")]
		BossBulletHit,
		[Token(Token = "0x4001BE4")]
		DWBulletHit,
		[Token(Token = "0x4001BE5")]
		GoonDeath,
		[Token(Token = "0x4001BE6")]
		Barrel,
		[Token(Token = "0x4001BE7")]
		Collectable_InGame,
		[Token(Token = "0x4001BE8")]
		Collectable_RealDotWorld,
		[Token(Token = "0x4001BE9")]
		Collectable_InGame_Bionite,
		[Token(Token = "0x4001BEA")]
		Collectable_Disapear
	}

	[Serializable]
	[Token(Token = "0x200056B")]
	public struct VFX
	{
		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VFX_Types vfxType;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject prefab;
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB84", Offset = "0x7BCB84")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VFX_Types vfxType;

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xAF097C", Offset = "0xAF097C", VA = "0xAF097C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xAF0A34", Offset = "0xAF0A34", VA = "0xAF0A34")]
		internal bool <ShowVFX>b__0(VFX x)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xAF0A44", Offset = "0xAF0A44", VA = "0xAF0A44")]
		internal bool <ShowVFX>b__1(VFX x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<VFX> effectsList;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InGameVFXPool> effects_pool;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE714", Offset = "0x7BE714")]
	private static InGameVFXManager <instance>k__BackingField;

	[Token(Token = "0x17000038")]
	public static InGameVFXManager instance
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xAF0190", Offset = "0xAF0190", VA = "0xAF0190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD844", Offset = "0x7CD844")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xAF01E0", Offset = "0xAF01E0", VA = "0xAF01E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD854", Offset = "0x7CD854")]
		private set
		{
		}
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xAF0238", Offset = "0xAF0238", VA = "0xAF0238")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xAF0510", Offset = "0xAF0510", VA = "0xAF0510")]
	public void ShowVFX(Vector3 position, VFX_Types vfxType, Vector2 posOffset, Vector3 posRotation, SpriteRenderer spriteInfo, bool ignoreFlip = false)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xAF0984", Offset = "0xAF0984", VA = "0xAF0984")]
	public InGameVFXManager()
	{
	}
}
[Token(Token = "0x2000098")]
public class InGameVFXPool : ObjectPoolStandalone<InGameVFX>
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<InGameVFX> spawnedFX;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xAF0A54", Offset = "0xAF0A54", VA = "0xAF0A54", Slot = "5")]
	public override void OnPop(InGameVFX obj)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xAF0AE0", Offset = "0xAF0AE0", VA = "0xAF0AE0", Slot = "6")]
	public override void OnPush(InGameVFX obj)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xAF0B50", Offset = "0xAF0B50", VA = "0xAF0B50")]
	public void PushAll()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xAF048C", Offset = "0xAF048C", VA = "0xAF048C")]
	public InGameVFXPool()
	{
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA260", Offset = "0x7BA260")]
public class FlyAround : EnemyBase
{
	[Token(Token = "0x200056D")]
	private enum State
	{
		[Token(Token = "0x4001BEF")]
		FollowTarget,
		[Token(Token = "0x4001BF0")]
		RandomFly
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 originalPos;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private State state;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SteeringMovement sm;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xAD0A3C", Offset = "0xAD0A3C", VA = "0xAD0A3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xAD0C14", Offset = "0xAD0C14", VA = "0xAD0C14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xAD0DAC", Offset = "0xAD0DAC", VA = "0xAD0DAC")]
	private void RandomTarget()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xAD0F14", Offset = "0xAD0F14", VA = "0xAD0F14")]
	private void ChangeState(State s)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xAD0AD4", Offset = "0xAD0AD4", VA = "0xAD0AD4")]
	public void InitializeMovement()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xAD0FF0", Offset = "0xAD0FF0", VA = "0xAD0FF0")]
	private bool CheckDotIsInRange(out Vector2 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xAD1138", Offset = "0xAD1138", VA = "0xAD1138")]
	public FlyAround()
	{
	}
}
[Token(Token = "0x200009A")]
public class PursuePlayer : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxSpeed;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float acceleration;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxGroundTime;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpSpeed;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string jumpFMODEvent;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameTV gameTV;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isInRealWorld;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EnemyBase enemy;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion verticalToHorizontal;

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB9BB2C", Offset = "0xB9BB2C", VA = "0xB9BB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB9BBB8", Offset = "0xB9BBB8", VA = "0xB9BBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB9BFC8", Offset = "0xB9BFC8", VA = "0xB9BFC8")]
	public PursuePlayer()
	{
	}
}
[Token(Token = "0x200009B")]
public class RevolvingShooterEnemy : EnemyBase
{
	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCB94", Offset = "0x7BCB94")]
	private sealed class <ShootRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RevolvingShooterEnemy <>4__this;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700034F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xA64280", Offset = "0xA64280", VA = "0xA64280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xA642F0", Offset = "0xA642F0", VA = "0xA642F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xA640B8", Offset = "0xA640B8", VA = "0xA640B8")]
		[DebuggerHidden]
		public <ShootRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xA641D4", Offset = "0xA641D4", VA = "0xA641D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xA641D8", Offset = "0xA641D8", VA = "0xA641D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0xA64288", Offset = "0xA64288", VA = "0xA64288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE734", Offset = "0x7BE734")]
	public float speed;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float movementRadius;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float shootEverySecs;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float burstSize;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float burstInterval;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2 startingPos;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timer;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitBurstInterval;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA63BF8", Offset = "0xA63BF8", VA = "0xA63BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xA63CF0", Offset = "0xA63CF0", VA = "0xA63CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xA64038", Offset = "0xA64038", VA = "0xA64038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD864", Offset = "0x7CD864")]
	private IEnumerator ShootRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xA63E9C", Offset = "0xA63E9C", VA = "0xA63E9C")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xA640E4", Offset = "0xA640E4", VA = "0xA640E4", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xA641B4", Offset = "0xA641B4", VA = "0xA641B4")]
	public RevolvingShooterEnemy()
	{
	}
}
[Token(Token = "0x200009C")]
public class ShootConstantly : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float interval;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Cannon cannon;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnemyBase enemyBase;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xA71334", Offset = "0xA71334", VA = "0xA71334")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xA713C0", Offset = "0xA713C0", VA = "0xA713C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA71444", Offset = "0xA71444", VA = "0xA71444")]
	public ShootConstantly()
	{
	}
}
[Token(Token = "0x200009D")]
public class WanderBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveTimeMin;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveTimeMax;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float stopTimeMin;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stopTimeMax;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 direction;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sensor frontSensor;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sensor gapSensor;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool startRandomly;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool wanderRandomly;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startDelay;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isWaiting;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timer;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float stateDuration;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool waiting;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool canChangeDirection;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 initialDirection;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EnemyBase enemyBase;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1850FB4", Offset = "0x1850FB4", VA = "0x1850FB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1851048", Offset = "0x1851048", VA = "0x1851048")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x18510A0", Offset = "0x18510A0", VA = "0x18510A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x18510A8", Offset = "0x18510A8", VA = "0x18510A8")]
	private void StartBehaviour()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x185119C", Offset = "0x185119C", VA = "0x185119C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x18513B0", Offset = "0x18513B0", VA = "0x18513B0")]
	private void RestoreChangeDirection()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x18513BC", Offset = "0x18513BC", VA = "0x18513BC")]
	public WanderBehaviour()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA2C4", Offset = "0x7BA2C4")]
public class AimCannonAtPlayer : MonoBehaviour
{
	[Token(Token = "0x6000335")]
	[Address(RVA = "0xA95C6C", Offset = "0xA95C6C", VA = "0xA95C6C")]
	public void AimAtPlayer(Cannon cannon)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xA95DD4", Offset = "0xA95DD4", VA = "0xA95DD4")]
	public AimCannonAtPlayer()
	{
	}
}
[Token(Token = "0x200009F")]
public class BEUEnemiesManager : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxEnemiesInQueue;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isRetroMedley;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BeuEnemyBehaviour rightSlotOccupiedBy;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BeuEnemyBehaviour leftSlotOccupiedBy;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<BeuEnemyBehaviour> queue;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<BeuEnemyBehaviour> attackingEnemies;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool updatingQueue;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE76C", Offset = "0x7BE76C")]
	private static BEUEnemiesManager <instance>k__BackingField;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpawnWave[] allWaves;

	[Token(Token = "0x17000039")]
	public bool slotsFull
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xA9A238", Offset = "0xA9A238", VA = "0xA9A238")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public static BEUEnemiesManager instance
	{
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xA9A2EC", Offset = "0xA9A2EC", VA = "0xA9A2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8C8", Offset = "0x7CD8C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000339")]
		[Address(RVA = "0xA9A33C", Offset = "0xA9A33C", VA = "0xA9A33C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8D8", Offset = "0x7CD8D8")]
		private set
		{
		}
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xA9A394", Offset = "0xA9A394", VA = "0xA9A394")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xA9A4A8", Offset = "0xA9A4A8", VA = "0xA9A4A8")]
	public void KillAllWaves()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xA9A52C", Offset = "0xA9A52C", VA = "0xA9A52C")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xA9A5AC", Offset = "0xA9A5AC", VA = "0xA9A5AC")]
	private void UpdatedRetroMedleySpots()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xA9A8B0", Offset = "0xA9A8B0", VA = "0xA9A8B0")]
	private void UpdateSpots()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xA9ABAC", Offset = "0xA9ABAC", VA = "0xA9ABAC")]
	public bool AddToQueue(BeuEnemyBehaviour beuEnemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xA9ACA4", Offset = "0xA9ACA4", VA = "0xA9ACA4")]
	public void RemoveFromQueue(BeuEnemyBehaviour beuEnemy)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA9AEA0", Offset = "0xA9AEA0", VA = "0xA9AEA0")]
	public BEUEnemiesManager()
	{
	}
}
[Token(Token = "0x20000A0")]
public class BeuEnemyBehaviour : MonoBehaviour, IKOable
{
	[Token(Token = "0x200056F")]
	private enum State
	{
		[Token(Token = "0x4001BF6")]
		Idle,
		[Token(Token = "0x4001BF7")]
		Watching,
		[Token(Token = "0x4001BF8")]
		Surrounding,
		[Token(Token = "0x4001BF9")]
		Seeking,
		[Token(Token = "0x4001BFA")]
		Fighting,
		[Token(Token = "0x4001BFB")]
		Baiting
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float seekPlayerDistance;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stareAtPlayerDistance;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool waitForPlayerApproach;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minDistanceToTarget;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float punchInterval;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool firstPunchImmediately;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BE77C", Offset = "0x7BE77C")]
	public float baitChance;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float baitSpeedMultiplier;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float baitMaxCooldown;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float baitMaxDistance;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float surroundingMaxMovementRadius;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float farFromDotTolerance;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool canAttackWhileMoving;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string attackFMODEvent;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator anim;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isRetroMedley;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Damageable damageable;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float punchTempo;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private State state;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float stateTimer;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timer;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int attackingSide;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool onAttackingQueue;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2 randomTarget;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool baited;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float baitAttemptCooldown;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float nearDotTimer;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA9EE68", Offset = "0xA9EE68", VA = "0xA9EE68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA9EFA8", Offset = "0xA9EFA8", VA = "0xA9EFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA9FED0", Offset = "0xA9FED0", VA = "0xA9FED0")]
	private void LookAtTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA9FBC4", Offset = "0xA9FBC4", VA = "0xA9FBC4")]
	private void MoveToTarget(Vector3 dotPos, float speedMultiplier = 1f, [Optional] Vector2 newTarget)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA9AB98", Offset = "0xA9AB98", VA = "0xA9AB98")]
	public void AllowPursueDot(int side)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA9FA5C", Offset = "0xA9FA5C", VA = "0xA9FA5C")]
	private bool AddToAttackingQueue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xAA0020", Offset = "0xAA0020", VA = "0xAA0020")]
	private void RemoveFromAttackingQueue()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xAA008C", Offset = "0xAA008C", VA = "0xAA008C")]
	private bool AttemptBait()
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA9EF64", Offset = "0xA9EF64", VA = "0xA9EF64")]
	public void Reset()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA9FB70", Offset = "0xA9FB70", VA = "0xA9FB70")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xAA011C", Offset = "0xAA011C", VA = "0xAA011C", Slot = "4")]
	public void OnFlinch()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xAA0120", Offset = "0xAA0120", VA = "0xAA0120", Slot = "6")]
	public void OnKO()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xAA0124", Offset = "0xAA0124", VA = "0xAA0124", Slot = "5")]
	public void OnFlinchRecovery()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xAA0130", Offset = "0xAA0130", VA = "0xAA0130", Slot = "7")]
	public void OnKORecovery()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xAA01BC", Offset = "0xAA01BC", VA = "0xAA01BC", Slot = "8")]
	public void AllowBehaviour(bool allow)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xAA01C8", Offset = "0xAA01C8", VA = "0xAA01C8", Slot = "9")]
	public bool AllowStatusEffect(HitBox.Type damageType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xAA01D0", Offset = "0xAA01D0", VA = "0xAA01D0")]
	public BeuEnemyBehaviour()
	{
	}
}
[Token(Token = "0x20000A1")]
public class BEURoundCleared : MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BEUInGameProgression beuProgression;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemySpawnZone[] roundEnemies;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA9C970", Offset = "0xA9C970", VA = "0xA9C970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA9C9D8", Offset = "0xA9C9D8", VA = "0xA9C9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA9CAD8", Offset = "0xA9CAD8", VA = "0xA9CAD8")]
	public BEURoundCleared()
	{
	}
}
[Token(Token = "0x20000A2")]
public interface IKOable
{
	[Token(Token = "0x6000356")]
	void OnFlinch();

	[Token(Token = "0x6000357")]
	void OnFlinchRecovery();

	[Token(Token = "0x6000358")]
	void OnKO();

	[Token(Token = "0x6000359")]
	void OnKORecovery();

	[Token(Token = "0x600035A")]
	void AllowBehaviour(bool allow);

	[Token(Token = "0x600035B")]
	bool AllowStatusEffect(HitBox.Type damageType);
}
[Token(Token = "0x20000A3")]
public class FighterCharacter : MonoBehaviour, IDamageable
{
	[Token(Token = "0x2000570")]
	private enum State
	{
		[Token(Token = "0x4001BFD")]
		Fighting,
		[Token(Token = "0x4001BFE")]
		Flinch,
		[Token(Token = "0x4001BFF")]
		KnockedOut
	}

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flinchTime;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float knockOutTime;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool knockOutBeforeDeath;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool superArmor;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IKOable fightingBehaviour;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State state;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Damageable damageable;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float nerfGunFlinchCooldown;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Hurtbox hurtbox;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float stateTimer;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool initialized;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string knockedOutFMODEvent;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xB5BE34", Offset = "0xB5BE34", VA = "0xB5BE34")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xB5BF84", Offset = "0xB5BF84", VA = "0xB5BF84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xB5BF94", Offset = "0xB5BF94", VA = "0xB5BF94", Slot = "4")]
	public void ProcessDamage(float damage, HitBox.Type type, out float newDamage)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xB5C658", Offset = "0xB5C658", VA = "0xB5C658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xB5C110", Offset = "0xB5C110", VA = "0xB5C110")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xB5C7C8", Offset = "0xB5C7C8", VA = "0xB5C7C8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xB5C7FC", Offset = "0xB5C7FC", VA = "0xB5C7FC")]
	public FighterCharacter()
	{
	}
}
[Token(Token = "0x20000A4")]
public class FighterEnemy : EnemyBase
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FighterCharacter fighterCharacter;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BeuEnemyBehaviour fightingBehaviour;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xB5C818", Offset = "0xB5C818", VA = "0xB5C818", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB5C8AC", Offset = "0xB5C8AC", VA = "0xB5C8AC", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB5C8F8", Offset = "0xB5C8F8", VA = "0xB5C8F8")]
	public FighterEnemy()
	{
	}
}
[Token(Token = "0x20000A5")]
public class EnemyBeetleController : EnemyBase
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE7B4", Offset = "0x7BE7B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BE7B4", Offset = "0x7BE7B4")]
	public float speed;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float dashSpeed;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float restTime;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sensor dashSensor;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform dotSensor;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentSpeed;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 originalPos;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 dir;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool rest;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool updateVelocity;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float timer;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentDir;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB54E00", Offset = "0xB54E00", VA = "0xB54E00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB54F80", Offset = "0xB54F80", VA = "0xB54F80", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB54F84", Offset = "0xB54F84", VA = "0xB54F84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB553A8", Offset = "0xB553A8", VA = "0xB553A8")]
	private void ChangeDir()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB54E50", Offset = "0xB54E50", VA = "0xB54E50")]
	public void InitializeMovement()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB55774", Offset = "0xB55774", VA = "0xB55774")]
	private void OnCollisionEnter2D(Collision2D col)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB55778", Offset = "0xB55778", VA = "0xB55778")]
	public EnemyBeetleController()
	{
	}
}
[Token(Token = "0x20000A6")]
public class BioniteAlien : EnemyBase
{
	[Token(Token = "0x2000571")]
	private enum State
	{
		[Token(Token = "0x4001C01")]
		Ceiling,
		[Token(Token = "0x4001C02")]
		Falling,
		[Token(Token = "0x4001C03")]
		Pursuing
	}

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sensor dotSensor;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float resetAfterSecondsOffScreen;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private State state;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WanderBehaviour wanderBehavior;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PursuePlayer pursueBehaviour;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float originalGravity;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 originalPos;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float offScreenTimer;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[EventRef]
	public string bioniteFallingFMODEvent;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EventInstance bioniteContactAttackInstance;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xAA0220", Offset = "0xAA0220", VA = "0xAA0220", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xAA0334", Offset = "0xAA0334", VA = "0xAA0334")]
	private void Update()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xAA0490", Offset = "0xAA0490", VA = "0xAA0490")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xAA06A4", Offset = "0xAA06A4", VA = "0xAA06A4", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xAA0730", Offset = "0xAA0730", VA = "0xAA0730")]
	public BioniteAlien()
	{
	}
}
[Token(Token = "0x20000A7")]
public class BossBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool bossIsActive;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Damageable damageable;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xAA1E44", Offset = "0xAA1E44", VA = "0xAA1E44", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xAA1F7C", Offset = "0xAA1F7C", VA = "0xAA1F7C", Slot = "5")]
	public virtual void BossIdle()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xAA1F80", Offset = "0xAA1F80", VA = "0xAA1F80", Slot = "6")]
	public virtual void StartBehaviour()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xAA1EE4", Offset = "0xAA1EE4", VA = "0xAA1EE4")]
	public void CheckZeroPixels()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xAA1F8C", Offset = "0xAA1F8C", VA = "0xAA1F8C")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xAA2024", Offset = "0xAA2024", VA = "0xAA2024", Slot = "7")]
	public virtual void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xAA2034", Offset = "0xAA2034", VA = "0xAA2034", Slot = "8")]
	public virtual void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xAA2038", Offset = "0xAA2038", VA = "0xAA2038", Slot = "9")]
	public virtual void StopBehaviour()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xAA2040", Offset = "0xAA2040", VA = "0xAA2040", Slot = "10")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xAA20B4", Offset = "0xAA20B4", VA = "0xAA20B4")]
	internal void KilledDot()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xAA211C", Offset = "0xAA211C", VA = "0xAA211C")]
	public BossBehaviour()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ArcingProjectile : MonoBehaviour, IPoolableStandalone<ArcingProjectile>
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float arcHeight;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float explosionDiameter;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 target;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Vector3 origin;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE838", Offset = "0x7BE838")]
	private ObjectPoolStandalone<ArcingProjectile> <pool>k__BackingField;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicsBody body;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lerpTime;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x1700003B")]
	public ObjectPoolStandalone<ArcingProjectile> pool
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xA97AB4", Offset = "0xA97AB4", VA = "0xA97AB4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8E8", Offset = "0x7CD8E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xA97ABC", Offset = "0xA97ABC", VA = "0xA97ABC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD8F8", Offset = "0x7CD8F8")]
		set
		{
		}
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA97AC4", Offset = "0xA97AC4", VA = "0xA97AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xA97B58", Offset = "0xA97B58", VA = "0xA97B58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA97D14", Offset = "0xA97D14", VA = "0xA97D14")]
	private void OnImpact()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA97D18", Offset = "0xA97D18", VA = "0xA97D18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA97DF4", Offset = "0xA97DF4", VA = "0xA97DF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA97E84", Offset = "0xA97E84", VA = "0xA97E84")]
	private void CollisionEnter(PhysicsBodyCollision col)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xA97EC4", Offset = "0xA97EC4", VA = "0xA97EC4")]
	public void CheckCollision(Transform other)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xA98004", Offset = "0xA98004", VA = "0xA98004")]
	public void PushToPool()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xA9806C", Offset = "0xA9806C", VA = "0xA9806C")]
	public ArcingProjectile()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ArcingProjectilePool : ObjectPoolStandalone<ArcingProjectile>
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ArcingProjectile> spawnedPowerUps;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform origin;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExplosionPool explosionPool;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float explosionDiameter;

	[Token(Token = "0x1700003C")]
	public Transform target
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xA98080", Offset = "0xA98080", VA = "0xA98080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xA98108", Offset = "0xA98108", VA = "0xA98108", Slot = "5")]
	public override void OnPop(ArcingProjectile obj)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xA98220", Offset = "0xA98220", VA = "0xA98220", Slot = "6")]
	public override void OnPush(ArcingProjectile obj)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xA983BC", Offset = "0xA983BC", VA = "0xA983BC")]
	public void PushAllBullets()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xA9849C", Offset = "0xA9849C", VA = "0xA9849C")]
	public ArcingProjectilePool()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Level1Boss : BossBehaviour
{
	[Token(Token = "0x2000572")]
	public enum State
	{
		[Token(Token = "0x4001C05")]
		Idle,
		[Token(Token = "0x4001C06")]
		HurricaneAttack,
		[Token(Token = "0x4001C07")]
		ThrowBomb,
		[Token(Token = "0x4001C08")]
		ClimbJenga,
		[Token(Token = "0x4001C09")]
		VulnerableAfterFall
	}

	[Serializable]
	[Token(Token = "0x2000573")]
	public struct BossSettingsByHealth
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Level1BossSettings settingsToUse;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int healthThreshold;
	}

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform startingTransform;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider hurtbox;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform bombShootPos;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bombPrefab;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Level1BossJengaTower[] jengaTowers;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string bombFMODEvent;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string roarFMODEvent;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string hurricaneFMODEvent;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventInstance hurricaneEventInstance;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody rb;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BossSettingsByHealth[] bossProgressionSettings;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentSettingsIndex;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float stateTimer;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PhysicsBody body;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PursuePlayer pursueBehavior;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ArcingProjectilePool bombCannon;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ExplosionPool explosionPool;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Animator animator;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private State state;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 startingPos;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform currentPerchingPoint;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int bombCount;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int salvoCount;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float bombIntervalCounter;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float salvoIntervalCounter;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int currentJengaIndex;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float defaultGravityValue;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lerpTime;

	[Token(Token = "0x1700003D")]
	private Level1BossSettings settings
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xAFFA6C", Offset = "0xAFFA6C", VA = "0xAFFA6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xAFFABC", Offset = "0xAFFABC", VA = "0xAFFABC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xAFFD64", Offset = "0xAFFD64", VA = "0xAFFD64")]
	public void ActivateGravity()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xAFFD94", Offset = "0xAFFD94", VA = "0xAFFD94", Slot = "5")]
	public override void BossIdle()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xAFFE20", Offset = "0xAFFE20", VA = "0xAFFE20", Slot = "6")]
	public override void StartBehaviour()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xB003DC", Offset = "0xB003DC", VA = "0xB003DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xAFFE4C", Offset = "0xAFFE4C", VA = "0xAFFE4C")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xB00B2C", Offset = "0xB00B2C", VA = "0xB00B2C")]
	private void ThrowBomb()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xB00A00", Offset = "0xB00A00", VA = "0xB00A00")]
	private bool FindNewPerchingPoint()
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB00BD4", Offset = "0xB00BD4", VA = "0xB00BD4")]
	private bool MoveTo(Vector3 origin, Transform destination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB00DEC", Offset = "0xB00DEC", VA = "0xB00DEC", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB00F14", Offset = "0xB00F14", VA = "0xB00F14", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xB00F5C", Offset = "0xB00F5C", VA = "0xB00F5C")]
	public Level1Boss()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Level1BossJengaTower : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform perchPoint;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NerfGunObstacle obstacle;

	[Token(Token = "0x1700003E")]
	public bool isPercheable
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xB009D4", Offset = "0xB009D4", VA = "0xB009D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xB00F64", Offset = "0xB00F64", VA = "0xB00F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB00EE4", Offset = "0xB00EE4", VA = "0xB00EE4")]
	public void ResetJengaTower()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB00FC8", Offset = "0xB00FC8", VA = "0xB00FC8")]
	public Level1BossJengaTower()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA328", Offset = "0x7BA328")]
public class Level1BossSettings : ScriptableObject
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE878", Offset = "0x7BE878")]
	public float rollMaxSpeed;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rollAcceleration;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE8B0", Offset = "0x7BE8B0")]
	public bool allowClimbTower;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool climbAllAvailableTowers;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float flySpeed;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE8E8", Offset = "0x7BE8E8")]
	public int salvoBombCount;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxSalvoCount;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float salvoBombInterval;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float intervalBetweenSalvos;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE920", Offset = "0x7BE920")]
	public float pursueDuration;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float idleDuration;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vulnerableStateDuration;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB00FD0", Offset = "0xB00FD0", VA = "0xB00FD0")]
	public Level1BossSettings()
	{
	}
}
[Token(Token = "0x20000AD")]
public class Level2Boss : BossBehaviour
{
	[Token(Token = "0x2000574")]
	private enum State
	{
		[Token(Token = "0x4001C0D")]
		Bikers,
		[Token(Token = "0x4001C0E")]
		OpenDoor,
		[Token(Token = "0x4001C0F")]
		Banana,
		[Token(Token = "0x4001C10")]
		CloseDoor,
		[Token(Token = "0x4001C11")]
		Defeat,
		[Token(Token = "0x4001C12")]
		Idle
	}

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossFightState bossFightState;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator backDoorAnimator;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpawnObjectBag spawnObjectBag;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExplosionPool explosionPool;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayableDirector hitSpriteTimeline;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float doorStateDuration;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float defeatDuration;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float defeatExplosionInterval;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float explosionMidSize;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float explosionFinalSize;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 explosionFinalRange;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Level2HealthBar healthBar;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RWCharacterReactionController dadReactionController;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CharacterReaction dadDoorReaction;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string midHitFMODEvent;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string finalHitFMODEvent;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Level2BossPhaseSettings[] phases;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Level2BossEnemyPool enemyPool;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Level2BossCarMovement carMovement;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Level2BossMissilePool missilePool;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Level2BossPotholePool potholePool;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private State state;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float stateTimer;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int phaseIndex;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int waveIndex;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float waveTimeRemaining;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool doorWasOpened;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float defeatExplosionTimer;

	[Token(Token = "0x1700003F")]
	private Level2BossPhaseSettings phase
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xB04484", Offset = "0xB04484", VA = "0xB04484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xB044D4", Offset = "0xB044D4", VA = "0xB044D4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xB04D18", Offset = "0xB04D18", VA = "0xB04D18")]
	private void StartBoss()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xB04DB0", Offset = "0xB04DB0", VA = "0xB04DB0")]
	private void ResetBehaviours()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xB05224", Offset = "0xB05224", VA = "0xB05224", Slot = "5")]
	public override void BossIdle()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xB05258", Offset = "0xB05258", VA = "0xB05258", Slot = "6")]
	public override void StartBehaviour()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xB052A8", Offset = "0xB052A8", VA = "0xB052A8", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xB052D4", Offset = "0xB052D4", VA = "0xB052D4", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB052D8", Offset = "0xB052D8", VA = "0xB052D8", Slot = "9")]
	public override void StopBehaviour()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB05328", Offset = "0xB05328", VA = "0xB05328")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xB05ACC", Offset = "0xB05ACC", VA = "0xB05ACC")]
	private Explosion ShowExplosionOnCar()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xB058E0", Offset = "0xB058E0", VA = "0xB058E0")]
	private void AdvancePhase()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xB04E50", Offset = "0xB04E50", VA = "0xB04E50")]
	private void ChangeState(State state)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xB05DDC", Offset = "0xB05DDC", VA = "0xB05DDC")]
	private void PlayHitSound()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xB05F8C", Offset = "0xB05F8C", VA = "0xB05F8C")]
	public Level2Boss()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Level2BossCarMovement : MonoBehaviour
{
	[Token(Token = "0x2000575")]
	public enum HorizontalMode
	{
		[Token(Token = "0x4001C14")]
		Idle,
		[Token(Token = "0x4001C15")]
		FollowDot,
		[Token(Token = "0x4001C16")]
		ZigZag,
		[Token(Token = "0x4001C17")]
		LeftIdle,
		[Token(Token = "0x4001C18")]
		RightIdle
	}

	[Token(Token = "0x2000576")]
	private enum State
	{
		[Token(Token = "0x4001C1A")]
		None,
		[Token(Token = "0x4001C1B")]
		Charge,
		[Token(Token = "0x4001C1C")]
		Dash,
		[Token(Token = "0x4001C1D")]
		Wait,
		[Token(Token = "0x4001C1E")]
		Return
	}

	[NonSerialized]
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dashRoutine;

	[NonSerialized]
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool allowDashing;

	[NonSerialized]
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dashInterval;

	[NonSerialized]
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HorizontalMode horizontalMode;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string chargeFMODEvent;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string dashFMODEvent;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string waitFMODEvent;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform car;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dashDistance;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float movementRange;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float horizontalVelocity;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float chargeTime;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float dashTime;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float waitTime;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float returnTime;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 startPosition;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentX;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float currentZ;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int zigZagDesired;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator animator;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private State state;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float stateTimer;

	[Token(Token = "0x17000040")]
	public bool dashing
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xB05870", Offset = "0xB05870", VA = "0xB05870")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB0513C", Offset = "0xB0513C", VA = "0xB0513C")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB05FE8", Offset = "0xB05FE8", VA = "0xB05FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB06078", Offset = "0xB06078", VA = "0xB06078")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB063F8", Offset = "0xB063F8", VA = "0xB063F8")]
	private void ChangeState(State state)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB06678", Offset = "0xB06678", VA = "0xB06678")]
	private Vector3 GetCarPosition(float xt, float zt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB065A4", Offset = "0xB065A4", VA = "0xB065A4")]
	private float GetDotCurrentX()
	{
		return default(float);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB06750", Offset = "0xB06750", VA = "0xB06750")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB068FC", Offset = "0xB068FC", VA = "0xB068FC")]
	public Level2BossCarMovement()
	{
	}
}
[Token(Token = "0x20000AF")]
public class Level2BossEnemyPool : MonoBehaviour
{
	[Token(Token = "0x2000577")]
	private class PrefabPool : ObjectPoolStandalone<EnemyKartController>
	{
		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level2BossEnemyPool pool;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<EnemyKartController> spawnedEnemies;

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xB071AC", Offset = "0xB071AC", VA = "0xB071AC", Slot = "5")]
		public override void OnPop(EnemyKartController obj)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xB07250", Offset = "0xB07250", VA = "0xB07250", Slot = "6")]
		public override void OnPush(EnemyKartController obj)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xB06C44", Offset = "0xB06C44", VA = "0xB06C44")]
		public void PushAll()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xB06BC0", Offset = "0xB06BC0", VA = "0xB06BC0")]
		public PrefabPool()
		{
		}
	}

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spawnWidth;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string spawnFMODEvent;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Dictionary<GameObject, PrefabPool> prefabPools;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE9B8", Offset = "0x7BE9B8")]
	private int <spawnedCount>k__BackingField;

	[Token(Token = "0x17000041")]
	public int spawnedCount
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xB05750", Offset = "0xB05750", VA = "0xB05750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD908", Offset = "0x7CD908")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xB06A24", Offset = "0xB06A24", VA = "0xB06A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD918", Offset = "0x7CD918")]
		private set
		{
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB05138", Offset = "0xB05138", VA = "0xB05138")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB06B7C", Offset = "0xB06B7C", VA = "0xB06B7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xB04640", Offset = "0xB04640", VA = "0xB04640")]
	public void AllocateEnemyPools(Level2BossPhaseSettings[] phases)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xB06A2C", Offset = "0xB06A2C", VA = "0xB06A2C")]
	public void PushAll()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB06D0C", Offset = "0xB06D0C", VA = "0xB06D0C")]
	public EnemyKartController Pop(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xB06E2C", Offset = "0xB06E2C", VA = "0xB06E2C")]
	public void SpawnEnemy(GameObject prefab, float position)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xB05758", Offset = "0xB05758", VA = "0xB05758")]
	public void SpawnEnemies(GameObject[] prefabs)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xB06F7C", Offset = "0xB06F7C", VA = "0xB06F7C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB07130", Offset = "0xB07130", VA = "0xB07130")]
	public Level2BossEnemyPool()
	{
	}
}
[Token(Token = "0x20000B0")]
public class Level2BossMissile : MonoBehaviour, IPoolable<Level2BossMissile>
{
	[Serializable]
	[Token(Token = "0x2000578")]
	public class Curve
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curveUp;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curveRight;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float multiplierUp;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiplierRight;

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xB07784", Offset = "0xB07784", VA = "0xB07784")]
		public Vector2 Evaluate(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xB07828", Offset = "0xB07828", VA = "0xB07828")]
		public Curve()
		{
		}
	}

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BE9C8", Offset = "0x7BE9C8")]
	private ObjectPool<Level2BossMissile> <poolComponent>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Curve curve;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 start;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 end;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 planarDirection;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x4000401")]
	private const float rotationSmoothing = 0.05f;

	[Token(Token = "0x17000042")]
	public ObjectPool<Level2BossMissile> poolComponent
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xB072F4", Offset = "0xB072F4", VA = "0xB072F4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD928", Offset = "0x7CD928")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xB072FC", Offset = "0xB072FC", VA = "0xB072FC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD938", Offset = "0x7CD938")]
		set
		{
		}
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB07304", Offset = "0xB07304", VA = "0xB07304")]
	public void Shoot(Curve curve, float duration, Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB07590", Offset = "0xB07590", VA = "0xB07590")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB073B8", Offset = "0xB073B8", VA = "0xB073B8")]
	private void UpdateTransform()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB07630", Offset = "0xB07630", VA = "0xB07630")]
	private Vector3 GetPositionAt(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB07820", Offset = "0xB07820", VA = "0xB07820")]
	public Level2BossMissile()
	{
	}
}
[Token(Token = "0x20000B1")]
public class Level2BossMissilePool : ObjectPool<Level2BossMissile>
{
	[Serializable]
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBA4", Offset = "0x7BCBA4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Transform> <>9__36_0;

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xB086C0", Offset = "0xB086C0", VA = "0xB086C0")]
		public <>c()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xB086C8", Offset = "0xB086C8", VA = "0xB086C8")]
		internal int <BeginBurst>b__36_0(Transform x, Transform y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject targetPrefab;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float areaWidth;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float areaStart;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float areaEnd;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startPosition;

	[NonSerialized]
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool shootRoutine;

	[NonSerialized]
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool allowShooting;

	[NonSerialized]
	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Level2BossPhaseSettings.Missiles settings;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] leftShootPositions;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] rightShootPositions;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform doorPosition;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ExplosionPool explosionPool;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float explosionDiameter;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float burstInterval;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float durationRanged;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float durationDoor;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Level2BossMissile.Curve curveRanged;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Level2BossMissile.Curve curveDoor;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string shootFMODEvent;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string explosionFMODEvent;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float shootTimer;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool leftPriority;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly List<Transform> burstList;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int burstIndex;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float burstTimer;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int burstHitDotIndex;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly List<Level2BossMissile> missiles;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly ObjectPoolStandalone<Transform> targetPool;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly Dictionary<Level2BossMissile, Transform> targets;

	[Token(Token = "0x17000043")]
	public int spawnedCount
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xB05880", Offset = "0xB05880", VA = "0xB05880")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB0515C", Offset = "0xB0515C", VA = "0xB0515C")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB078B0", Offset = "0xB078B0", VA = "0xB078B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB0791C", Offset = "0xB0791C", VA = "0xB0791C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB07EB8", Offset = "0xB07EB8", VA = "0xB07EB8")]
	private Level2BossMissile Shoot(Level2BossMissile.Curve curve, float duration, Transform origin, Vector3 goal)
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB05D18", Offset = "0xB05D18", VA = "0xB05D18")]
	public void ShootDoor()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB07C88", Offset = "0xB07C88", VA = "0xB07C88")]
	private void BeginBurst(int count)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB08010", Offset = "0xB08010", VA = "0xB08010")]
	private void AddToBurst(Transform[] positions, int count)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB080E8", Offset = "0xB080E8", VA = "0xB080E8", Slot = "5")]
	public override void OnPop(Level2BossMissile obj)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB08158", Offset = "0xB08158", VA = "0xB08158", Slot = "6")]
	public override void OnPush(Level2BossMissile obj)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB05C34", Offset = "0xB05C34", VA = "0xB05C34")]
	public void PushAll()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB08394", Offset = "0xB08394", VA = "0xB08394")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xB08520", Offset = "0xB08520", VA = "0xB08520")]
	public Level2BossMissilePool()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA36C", Offset = "0x7BA36C")]
public class Level2BossPhaseSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200057A")]
	public struct Wave
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float maxDuration;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject[] bikerPrefabs;
	}

	[Serializable]
	[Token(Token = "0x200057B")]
	public struct Missiles
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float interval;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int count;
	}

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BE9F8", Offset = "0x7BE9F8")]
	public Wave[] waves;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dashInterval;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Missiles bikersMissiles;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEA30", Offset = "0x7BEA30")]
	public float maxDuration;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int health;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Missiles bananaMissiles;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xB0873C", Offset = "0xB0873C", VA = "0xB0873C")]
	public Level2BossPhaseSettings()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Level2BossPothole : MonoBehaviour, IPoolable<Level2BossPothole>
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BEA68", Offset = "0x7BEA68")]
	private ObjectPool<Level2BossPothole> <poolComponent>k__BackingField;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BEA78", Offset = "0x7BEA78")]
	private bool <leftSide>k__BackingField;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform content;

	[Token(Token = "0x4000428")]
	private const float sidePosition = 2.5f;

	[Token(Token = "0x4000429")]
	private const float duration = 10f;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x17000044")]
	public ObjectPool<Level2BossPothole> poolComponent
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xB08744", Offset = "0xB08744", VA = "0xB08744", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD948", Offset = "0x7CD948")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xB0874C", Offset = "0xB0874C", VA = "0xB0874C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD958", Offset = "0x7CD958")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public bool leftSide
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xB08754", Offset = "0xB08754", VA = "0xB08754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD968", Offset = "0x7CD968")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xB0875C", Offset = "0xB0875C", VA = "0xB0875C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD978", Offset = "0x7CD978")]
		private set
		{
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xB08768", Offset = "0xB08768", VA = "0xB08768")]
	public void SetLeftSide(bool leftSide)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xB087E0", Offset = "0xB087E0", VA = "0xB087E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xB087E8", Offset = "0xB087E8", VA = "0xB087E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xB08884", Offset = "0xB08884", VA = "0xB08884")]
	public Level2BossPothole()
	{
	}
}
[Token(Token = "0x20000B4")]
public class Level2BossPotholePool : ObjectPool<Level2BossPothole>
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform scroll;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spawnOffset;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minInterval;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxInterval;

	[NonSerialized]
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool allowSpawning;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly List<Level2BossPothole> potholes;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPosition;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float spawnTimer;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xB051F4", Offset = "0xB051F4", VA = "0xB051F4")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xB0895C", Offset = "0xB0895C", VA = "0xB0895C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xB089DC", Offset = "0xB089DC", VA = "0xB089DC")]
	private void SpawnPothole()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xB08A10", Offset = "0xB08A10", VA = "0xB08A10")]
	private void SpawnPothole(bool leftSide)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xB08950", Offset = "0xB08950", VA = "0xB08950")]
	private float GetInterval()
	{
		return default(float);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xB08B18", Offset = "0xB08B18", VA = "0xB08B18", Slot = "5")]
	public override void OnPop(Level2BossPothole obj)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xB08B88", Offset = "0xB08B88", VA = "0xB08B88", Slot = "6")]
	public override void OnPush(Level2BossPothole obj)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB0888C", Offset = "0xB0888C", VA = "0xB0888C")]
	public void PushAll()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB08BF8", Offset = "0xB08BF8", VA = "0xB08BF8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB08DA4", Offset = "0xB08DA4", VA = "0xB08DA4")]
	public Level2BossPotholePool()
	{
	}
}
[Token(Token = "0x20000B5")]
public class Level2BossPotholeTrigger : MonoBehaviour
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator carAnimator;

	[Token(Token = "0x4000434")]
	private const float cooldownDuration = 1f;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool carHit;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float cooldownTimer;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string hitSoundEvent;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x971000", Offset = "0x971000", VA = "0x971000")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x971180", Offset = "0x971180", VA = "0x971180")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x9711CC", Offset = "0x9711CC", VA = "0x9711CC")]
	public Level2BossPotholeTrigger()
	{
	}
}
[Token(Token = "0x20000B6")]
public class EnemyKartController : MonoBehaviour, IPoolableStandalone<EnemyKartController>
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BEA98", Offset = "0x7BEA98")]
	private ObjectPoolStandalone<EnemyKartController> <pool>k__BackingField;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BEAA8", Offset = "0x7BEAA8")]
	private Damageable <enemyBase>k__BackingField;

	[Token(Token = "0x17000046")]
	public ObjectPoolStandalone<EnemyKartController> pool
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xB55D08", Offset = "0xB55D08", VA = "0xB55D08", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD988", Offset = "0x7CD988")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xB55D10", Offset = "0xB55D10", VA = "0xB55D10", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD998", Offset = "0x7CD998")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public Damageable enemyBase
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xB55D18", Offset = "0xB55D18", VA = "0xB55D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9A8", Offset = "0x7CD9A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xB55D20", Offset = "0xB55D20", VA = "0xB55D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD9B8", Offset = "0x7CD9B8")]
		private set
		{
		}
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB55D28", Offset = "0xB55D28", VA = "0xB55D28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB55D8C", Offset = "0xB55D8C", VA = "0xB55D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB55E38", Offset = "0xB55E38", VA = "0xB55E38")]
	public EnemyKartController()
	{
	}
}
[Token(Token = "0x20000B7")]
public class BossLevel3 : BossBehaviour
{
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBB4", Offset = "0x7BCBB4")]
	private sealed class <SpawnMeteor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator spawnPoint;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BossLevel3 <>4__this;

		[Token(Token = "0x17000351")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xAA3828", Offset = "0xAA3828", VA = "0xAA3828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xAA3898", Offset = "0xAA3898", VA = "0xAA3898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xAA3174", Offset = "0xAA3174", VA = "0xAA3174")]
		[DebuggerHidden]
		public <SpawnMeteor>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xAA33A4", Offset = "0xAA33A4", VA = "0xAA33A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xAA33A8", Offset = "0xAA33A8", VA = "0xAA33A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xAA3830", Offset = "0xAA3830", VA = "0xAA3830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Cannon cannon;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string shootFMODEvent;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float shootCounter;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int burst;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hitAnimationDuration;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animator;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] meteorPrefabs;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftMeteorSpawn;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rightMeteorSpawn;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator leftPortal;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator rightPortal;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BossLevel3PhaseSettings[] settingsByHealth;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentSettings;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Level3BossMeteorPool[] meteorPools;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float meteorCounter;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEAC8", Offset = "0x7BEAC8")]
	public float floatWaveAmount;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float floatWaveVelocity;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 defaultPos;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAA2864", Offset = "0xAA2864", VA = "0xAA2864")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAA2A38", Offset = "0xAA2A38", VA = "0xAA2A38")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAA3078", Offset = "0xAA3078", VA = "0xAA3078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD9C8", Offset = "0x7CD9C8")]
	private IEnumerator SpawnMeteor(Animator spawnPoint, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAA31A0", Offset = "0xAA31A0", VA = "0xAA31A0", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAA3384", Offset = "0xAA3384", VA = "0xAA3384")]
	public BossLevel3()
	{
	}
}
[Token(Token = "0x20000B8")]
public class Level3BossMeteorPool : ObjectPoolStandalone<Level3BossMeteorBullet>
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Level3BossMeteorBullet> spawnedPowerUps;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x973FC4", Offset = "0x973FC4", VA = "0x973FC4", Slot = "5")]
	public override void OnPop(Level3BossMeteorBullet obj)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x974034", Offset = "0x974034", VA = "0x974034", Slot = "6")]
	public override void OnPush(Level3BossMeteorBullet obj)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x9740A4", Offset = "0x9740A4", VA = "0x9740A4")]
	public void PushAll()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x97416C", Offset = "0x97416C", VA = "0x97416C")]
	public Level3BossMeteorPool()
	{
	}
}
[Token(Token = "0x20000B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA3B0", Offset = "0x7BA3B0")]
public class BossLevel3PhaseSettings : ScriptableObject
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float healthPercentage;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEB00", Offset = "0x7BEB00")]
	public float bulletSpeed;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int burstCount;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float burstInterval;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reloadInterval;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spread;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEB38", Offset = "0x7BEB38")]
	public float meteorSpeed;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float meteorInterval;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xAA38A0", Offset = "0xAA38A0", VA = "0xAA38A0")]
	public BossLevel3PhaseSettings()
	{
	}
}
[Token(Token = "0x20000BA")]
public class Level3BossMeteorBullet : MonoBehaviour, IPoolableStandalone<Level3BossMeteorBullet>
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BEB70", Offset = "0x7BEB70")]
	private ObjectPoolStandalone<Level3BossMeteorBullet> <pool>k__BackingField;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lifeTime;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PixelRespawn pixel;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lifeTimer;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhysicsBody body;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject content;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject spawnFx;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string PlayerPassThruSound;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string spawnSound;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x17000048")]
	public ObjectPoolStandalone<Level3BossMeteorBullet> pool
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x9738F4", Offset = "0x9738F4", VA = "0x9738F4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA2C", Offset = "0x7CDA2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x9738FC", Offset = "0x9738FC", VA = "0x9738FC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDA3C", Offset = "0x7CDA3C")]
		set
		{
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x973904", Offset = "0x973904", VA = "0x973904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x973A00", Offset = "0x973A00", VA = "0x973A00")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x973BB4", Offset = "0x973BB4", VA = "0x973BB4", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x973B18", Offset = "0x973B18", VA = "0x973B18")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x973C0C", Offset = "0x973C0C", VA = "0x973C0C")]
	public void Shoot(Vector3 origin, Vector3 direction, float speed)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x973DA0", Offset = "0x973DA0", VA = "0x973DA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x973F18", Offset = "0x973F18", VA = "0x973F18")]
	public void PushToPool()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x973F80", Offset = "0x973F80", VA = "0x973F80")]
	private void ResetFX()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x973FB4", Offset = "0x973FB4", VA = "0x973FB4")]
	public Level3BossMeteorBullet()
	{
	}
}
[Token(Token = "0x20000BB")]
public class Level4Boss : BossBehaviour
{
	[Serializable]
	[Token(Token = "0x200057D")]
	public struct BossParametersByHealth
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Level4BossSettings bossParameters;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int untilHealthReaches;
	}

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pixelDropOnParamChange;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BossParametersByHealth[] changeParamsOnHealth;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentIndex;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Level4BossBehaviour aiBehaviour;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DropPixels dropPixels;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x977B74", Offset = "0x977B74", VA = "0x977B74", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x977C10", Offset = "0x977C10", VA = "0x977C10")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x977D08", Offset = "0x977D08", VA = "0x977D08")]
	public Level4BossSettings GetCurrentParams()
	{
		return null;
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x977D58", Offset = "0x977D58", VA = "0x977D58", Slot = "6")]
	public override void StartBehaviour()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x977DA0", Offset = "0x977DA0", VA = "0x977DA0", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x977E6C", Offset = "0x977E6C", VA = "0x977E6C", Slot = "5")]
	public override void BossIdle()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x977EA4", Offset = "0x977EA4", VA = "0x977EA4", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x977FA4", Offset = "0x977FA4", VA = "0x977FA4")]
	public Level4Boss()
	{
	}
}
[Token(Token = "0x20000BC")]
public class Level4BossBehaviour : MonoBehaviour, IKOable
{
	[Token(Token = "0x200057E")]
	private enum BossStates
	{
		[Token(Token = "0x4001C33")]
		Idle,
		[Token(Token = "0x4001C34")]
		BasicAttack,
		[Token(Token = "0x4001C35")]
		StrongAttack,
		[Token(Token = "0x4001C36")]
		RangedAttack,
		[Token(Token = "0x4001C37")]
		BullyGrab,
		[Token(Token = "0x4001C38")]
		AfterGrab,
		[Token(Token = "0x4001C39")]
		Seeking
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cannon earthquakeCannon;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sensor grabSensor;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform grabbedDotPosition;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxMeleeDistance;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int flinchesInARowTolerance;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeInvulnerableFlinch;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int earthquakeStepInterval;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string tantrumFMODEvent;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string basicAttackFMODEvent;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string strongAttackFMODEvent;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string tantrumScreamFMODEvent;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string bullyGrabFMODEvent;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string nerfFirstFMODEvent;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string nerfFMODEvent;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RWCharacterReactionController kimReactionController;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterReaction kimPositiveReaction;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CharacterReaction kimNegativeReaction;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RWCharacterReactionController andyReactionController;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CharacterReaction andyPositiveReaction;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CharacterReaction andyNegativeReaction;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public RWCharacterReactionController nicolaReactionController;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CharacterReaction nicolaNegativeReaction;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RWCharacterReactionController ericReactionController;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public CharacterReaction ericPositiveReaction;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CharacterReaction ericNegativeReaction;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RWCharacterReactionController kidsReactionController;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CharacterReaction kidsPositiveReaction;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Level4Boss bossBase;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Damageable damageable;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PhysicsBody body;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Animator anim;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private BossStates currentState;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float stateTimer;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool dotClose;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float earthquakeTempo;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int earthquakeWaveCount;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float grabCooldown;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool grabbedDot;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool allowBehaviour;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool hasStatusEffect;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int flinchesInARow;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float resetFlinchesTimer;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool hadFirstNerfDamage;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int earthquakeStepCount;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SpriteAnimation dizzyEffect;

	[Token(Token = "0x17000049")]
	private Level4BossSettings settings
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x977FB4", Offset = "0x977FB4", VA = "0x977FB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x977FE0", Offset = "0x977FE0", VA = "0x977FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x9780E4", Offset = "0x9780E4", VA = "0x9780E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x9789B8", Offset = "0x9789B8", VA = "0x9789B8")]
	public void DoEarthquake_AnimEvent()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x978B28", Offset = "0x978B28", VA = "0x978B28")]
	public void FaceStartingPos()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x977EDC", Offset = "0x977EDC", VA = "0x977EDC")]
	public void KilledDot()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x9789A8", Offset = "0x9789A8", VA = "0x9789A8")]
	private bool CanGrab()
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x9787E8", Offset = "0x9787E8", VA = "0x9787E8")]
	private void ChangeState(BossStates _newState)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x977E08", Offset = "0x977E08", VA = "0x977E08")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x978B74", Offset = "0x978B74", VA = "0x978B74")]
	private void ResetAnims()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x978CB4", Offset = "0x978CB4", VA = "0x978CB4", Slot = "4")]
	public void OnFlinch()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x978CE8", Offset = "0x978CE8", VA = "0x978CE8", Slot = "5")]
	public void OnFlinchRecovery()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x978E0C", Offset = "0x978E0C", VA = "0x978E0C", Slot = "6")]
	public void OnKO()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x978ECC", Offset = "0x978ECC", VA = "0x978ECC", Slot = "7")]
	public void OnKORecovery()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x977D94", Offset = "0x977D94", VA = "0x977D94", Slot = "8")]
	public void AllowBehaviour(bool allow)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x978F18", Offset = "0x978F18", VA = "0x978F18", Slot = "9")]
	public bool AllowStatusEffect(HitBox.Type damageType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x979158", Offset = "0x979158", VA = "0x979158")]
	public Level4BossBehaviour()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA3F4", Offset = "0x7BA3F4")]
public class Level4BossSettings : ScriptableObject
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEC10", Offset = "0x7BEC10")]
	public float walkSpeed;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEC48", Offset = "0x7BEC48")]
	public int earthquakeWaves;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intervalBetweenWaves;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float grabDuration;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxGrabCooldown;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEC80", Offset = "0x7BEC80")]
	public float idleToRangedDelay;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float idleToBasicAtkDelay;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float grabToIdleDelay;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x979174", Offset = "0x979174", VA = "0x979174")]
	public Level4BossSettings()
	{
	}
}
[Token(Token = "0x20000BE")]
public class DragonBulletColor : MonoBehaviour
{
	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer[] allRenderers;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Color> bulletColors;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Color> emissionColors;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB52914", Offset = "0xB52914", VA = "0xB52914")]
	public DragonBulletColor()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Level5Boss : BossBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] spots;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform content;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Cannon cannon;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string shootFMODEvent;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int attacksPerSpot;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float attackInterval;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float attackAngleDelta;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float floatDuration;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float floatWaveAmount;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float floatWaveVelocity;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentSpot;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool goingToSpot;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float goingToSpotTempo;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int attackCount;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float attackTempo;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x979844", Offset = "0x979844", VA = "0x979844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x979860", Offset = "0x979860", VA = "0x979860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x979CC4", Offset = "0x979CC4", VA = "0x979CC4")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x979FD8", Offset = "0x979FD8", VA = "0x979FD8", Slot = "5")]
	public override void BossIdle()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x97A124", Offset = "0x97A124", VA = "0x97A124", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x97A160", Offset = "0x97A160", VA = "0x97A160", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x97A1C8", Offset = "0x97A1C8", VA = "0x97A1C8")]
	public Level5Boss()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Level5BossBehaviour : BossBehaviour
{
	[Token(Token = "0x200057F")]
	public enum Action
	{
		[Token(Token = "0x4001C3B")]
		Idle,
		[Token(Token = "0x4001C3C")]
		Switch_Side,
		[Token(Token = "0x4001C3D")]
		TripleShot,
		[Token(Token = "0x4001C3E")]
		NapalmShot,
		[Token(Token = "0x4001C3F")]
		MeteorStrike_Par,
		[Token(Token = "0x4001C40")]
		MeteorStrike_Impar,
		[Token(Token = "0x4001C41")]
		Enter_Tv
	}

	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBC4", Offset = "0x7BCBC4")]
	private sealed class <IdleState>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTimer;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level5BossBehaviour <>4__this;

		[Token(Token = "0x17000353")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x97CDD0", Offset = "0x97CDD0", VA = "0x97CDD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x97CE40", Offset = "0x97CE40", VA = "0x97CE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x97B4F0", Offset = "0x97B4F0", VA = "0x97B4F0")]
		[DebuggerHidden]
		public <IdleState>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x97CCEC", Offset = "0x97CCEC", VA = "0x97CCEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x97CCF0", Offset = "0x97CCF0", VA = "0x97CCF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x97CDD8", Offset = "0x97CDD8", VA = "0x97CDD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBD4", Offset = "0x7BCBD4")]
	private sealed class <EnterTv_MiddleLerp>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level5BossBehaviour <>4__this;

		[Token(Token = "0x17000355")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x97CC74", Offset = "0x97CC74", VA = "0x97CC74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x97CCE4", Offset = "0x97CCE4", VA = "0x97CCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x97BA98", Offset = "0x97BA98", VA = "0x97BA98")]
		[DebuggerHidden]
		public <EnterTv_MiddleLerp>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x97C860", Offset = "0x97C860", VA = "0x97C860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x97C864", Offset = "0x97C864", VA = "0x97C864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x97CC7C", Offset = "0x97CC7C", VA = "0x97CC7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBE4", Offset = "0x7BCBE4")]
	private sealed class <PolygonSpawnTimer>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level5BossBehaviour <>4__this;

		[Token(Token = "0x17000357")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x97CF70", Offset = "0x97CF70", VA = "0x97CF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x97CFE0", Offset = "0x97CFE0", VA = "0x97CFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x97C0EC", Offset = "0x97C0EC", VA = "0x97C0EC")]
		[DebuggerHidden]
		public <PolygonSpawnTimer>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x97CE48", Offset = "0x97CE48", VA = "0x97CE48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x97CE4C", Offset = "0x97CE4C", VA = "0x97CE4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x97CF78", Offset = "0x97CF78", VA = "0x97CF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bossStarted;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DropPixels dropPixels;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dragonTransform;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dragonCannon;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator dragonAnimator;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideHitAnimation;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Level5BossPhaseSettings[] allPhases;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentPhaseIndex;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentActionIndex;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool switchedPhase;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float initialHealth;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BECC8", Offset = "0x7BECC8")]
	public Transform[] sides;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentSideIndex;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distanceToSnap;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BED00", Offset = "0x7BED00")]
	public Transform middlePosition;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform tvPosition;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayableDirector enterTvTimeline;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool enteringTv;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool showIcon;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BED38", Offset = "0x7BED38")]
	public PlayableDirector idleTimeline;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BED70", Offset = "0x7BED70")]
	public GameObject tripleShotBullet;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public PlayableDirector tripleShotTimeline;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TripleShotCannon tripleShotCannon;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[EventRef]
	public string TS_shootSound;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject TS_fireHitVFX;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[EventRef]
	public string TS_firehitVFXSound;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GenericPool TS_vfxpool;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEDC8", Offset = "0x7BEDC8")]
	public GameObject napalmShotBullet;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public PlayableDirector napalmTimeline;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private NapalmShotCannon napalmShotCannon;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private NapalmFirePool napalmFirePool;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject napalmFire_manager;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject napalmFire;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[EventRef]
	public string NS_shootSound;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[EventRef]
	public string NS_flameSound;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEE20", Offset = "0x7BEE20")]
	public GameObject meteorStrikeBullet;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public PlayableDirector meteorTimeline;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public MeteorFallPoints_Manager par_manager;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeteorFallPoints_Manager impar_manager;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MeteorStrikeCannon meteorSrikeCannon;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[EventRef]
	public string MS_shootSound;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject MS_fireHitVFX;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[EventRef]
	public string MS_firehitVFXSound;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GenericPool MS_vfxpool;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEE78", Offset = "0x7BEE78")]
	public int maxPolygons;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject evilPolygonPrefab;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform[] evilPolygon_spawnPoints;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PolygonPool polygonPool;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Coroutine evilPolygon_coroutine;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[EventRef]
	public string P_spawnSound;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject polygonDeathFX;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GenericPool polygonFXpool;

	[Token(Token = "0x1700004A")]
	private Level5BossPhaseSettings currentPhase
	{
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x97A1EC", Offset = "0x97A1EC", VA = "0x97A1EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	private Transform currentSide
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x97A254", Offset = "0x97A254", VA = "0x97A254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x97A2A4", Offset = "0x97A2A4", VA = "0x97A2A4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x97A6B8", Offset = "0x97A6B8", VA = "0x97A6B8")]
	public void PlayFmodEvent(string fmodEvent, GameObject source)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x97A790", Offset = "0x97A790", VA = "0x97A790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x97A830", Offset = "0x97A830", VA = "0x97A830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x97A8F4", Offset = "0x97A8F4", VA = "0x97A8F4", Slot = "6")]
	public override void StartBehaviour()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x97A924", Offset = "0x97A924", VA = "0x97A924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x97B0F8", Offset = "0x97B0F8", VA = "0x97B0F8")]
	private float GetHealthPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x97AB40", Offset = "0x97AB40", VA = "0x97AB40")]
	private void CheckHealth()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x97AAAC", Offset = "0x97AAAC", VA = "0x97AAAC")]
	private void BossStarted()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x97B144", Offset = "0x97B144", VA = "0x97B144")]
	private void IncrementPhase()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x97B3FC", Offset = "0x97B3FC", VA = "0x97B3FC")]
	private void IncrementActionIndex()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x97B4A4", Offset = "0x97B4A4", VA = "0x97B4A4")]
	private void IncrementCurrentSideIndex()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x97B2B0", Offset = "0x97B2B0", VA = "0x97B2B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDA4C", Offset = "0x7CDA4C")]
	private IEnumerator IdleState(float waitTimer)
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x97B51C", Offset = "0x97B51C", VA = "0x97B51C")]
	private void DoAction()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x97B6A4", Offset = "0x97B6A4", VA = "0x97B6A4")]
	public void OnActionEnded()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x97B3E0", Offset = "0x97B3E0", VA = "0x97B3E0")]
	private void ResetEnterTv()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x97B978", Offset = "0x97B978", VA = "0x97B978")]
	private void EnterTv_Action()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x97BA18", Offset = "0x97BA18", VA = "0x97BA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDAB0", Offset = "0x7CDAB0")]
	private IEnumerator EnterTv_MiddleLerp()
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x97B86C", Offset = "0x97B86C", VA = "0x97B86C")]
	private void SwitchSides_Action(bool goToNextAction = true)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x97B724", Offset = "0x97B724", VA = "0x97B724")]
	private void TripleShot_Action()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x97B7C8", Offset = "0x97B7C8", VA = "0x97B7C8")]
	private void NapalmShot_Action()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x97B8D4", Offset = "0x97B8D4", VA = "0x97B8D4")]
	private void MeteorStrike_Action()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x97BAC4", Offset = "0x97BAC4", VA = "0x97BAC4")]
	public void Dragon_Shoot()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x97BB98", Offset = "0x97BB98", VA = "0x97BB98")]
	private void TripleShot_Shoot()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x97BC10", Offset = "0x97BC10", VA = "0x97BC10")]
	private void NapalmShot_Shoot()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x97BCC0", Offset = "0x97BCC0", VA = "0x97BCC0")]
	private void MeteorStrike_Shoot(MeteorFallPoints_Manager currentManager)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x97BD40", Offset = "0x97BD40", VA = "0x97BD40")]
	public void NapalmShot_Fire(Vector3 origin, int count)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x97AC44", Offset = "0x97AC44", VA = "0x97AC44")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x97BF84", Offset = "0x97BF84", VA = "0x97BF84")]
	private bool AnimatorParameterExists(string name, Animator anim)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x97C040", Offset = "0x97C040", VA = "0x97C040")]
	public void HitTrigger()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x97B360", Offset = "0x97B360", VA = "0x97B360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDB14", Offset = "0x7CDB14")]
	private IEnumerator PolygonSpawnTimer()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x97C118", Offset = "0x97C118", VA = "0x97C118")]
	private void SpawnPolygon(int amount)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x97C39C", Offset = "0x97C39C", VA = "0x97C39C", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x97C4D8", Offset = "0x97C4D8", VA = "0x97C4D8")]
	private void ResetAllTimelines()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x97C63C", Offset = "0x97C63C", VA = "0x97C63C", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x97C66C", Offset = "0x97C66C", VA = "0x97C66C", Slot = "9")]
	public override void StopBehaviour()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x97C834", Offset = "0x97C834", VA = "0x97C834")]
	public Level5BossBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C1")]
public class DragonCannon : ObjectPoolStandalone<Bullet>
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform origin;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level5BossBehaviour bossScript;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericPool vfxPool;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly List<Bullet> spawnedBullets;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB529BC", Offset = "0xB529BC", VA = "0xB529BC")]
	public DragonCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB52AA0", Offset = "0xB52AA0", VA = "0xB52AA0")]
	public DragonCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss, GenericPool vfxPool)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB52BA0", Offset = "0xB52BA0", VA = "0xB52BA0", Slot = "5")]
	public override void OnPop(Bullet bullet)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB52C10", Offset = "0xB52C10", VA = "0xB52C10", Slot = "6")]
	public override void OnPush(Bullet bullet)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB52C80", Offset = "0xB52C80", VA = "0xB52C80", Slot = "7")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB52D48", Offset = "0xB52D48", VA = "0xB52D48")]
	protected Bullet Shoot(Vector3 direction, float speed)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000C2")]
public class TripleShotCannon : DragonCannon
{
	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA909F0", Offset = "0xA909F0", VA = "0xA909F0")]
	public TripleShotCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xA909F8", Offset = "0xA909F8", VA = "0xA909F8")]
	public TripleShotCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss, GenericPool pool)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xA90A00", Offset = "0xA90A00", VA = "0xA90A00")]
	public void Shoot(float speed, float angleDelta)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xA90DA8", Offset = "0xA90DA8", VA = "0xA90DA8", Slot = "6")]
	public override void OnPush(Bullet bullet)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C3")]
public class NapalmShotCannon : DragonCannon
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NapalmPool napalmPool;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA3A264", Offset = "0xA3A264", VA = "0xA3A264")]
	public NapalmShotCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA3A26C", Offset = "0xA3A26C", VA = "0xA3A26C")]
	public void InitNapalmPool(GameObject firePrefab, Level5BossBehaviour thisBoss)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA3A300", Offset = "0xA3A300", VA = "0xA3A300")]
	public void UpdateNapalmPoolVariables(float ns_time, float ns_spawnRate)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA3A33C", Offset = "0xA3A33C", VA = "0xA3A33C")]
	public void Shoot(float speed)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA3A5F4", Offset = "0xA3A5F4", VA = "0xA3A5F4", Slot = "6")]
	public override void OnPush(Bullet bullet)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C4")]
public class NapalmPool : ObjectPoolStandalone<NapalmFire_Manager>
{
	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform origin;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level5BossBehaviour boss;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float ns_time;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ns_spawnRate;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly List<NapalmFire_Manager> spawnedFire;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA39F88", Offset = "0xA39F88", VA = "0xA39F88")]
	public NapalmPool(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA3A06C", Offset = "0xA3A06C", VA = "0xA3A06C")]
	public void UpdateVariables(float ns_time, float ns_spawnRate)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA3A074", Offset = "0xA3A074", VA = "0xA3A074", Slot = "5")]
	public override void OnPop(NapalmFire_Manager fire)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA3A0E4", Offset = "0xA3A0E4", VA = "0xA3A0E4", Slot = "6")]
	public override void OnPush(NapalmFire_Manager fire)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA3A154", Offset = "0xA3A154", VA = "0xA3A154", Slot = "7")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA3A21C", Offset = "0xA3A21C", VA = "0xA3A21C")]
	public void StartFire(NapalmFire_Manager manager)
	{
	}
}
[Serializable]
[Token(Token = "0x20000C5")]
public class NapalmFirePool : ObjectPoolStandalone<NapalmFire>
{
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform origin;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<NapalmFire> spawnedFire;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA39954", Offset = "0xA39954", VA = "0xA39954")]
	public NapalmFirePool(Transform parent, Transform origin, GameObject prefab)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA39A24", Offset = "0xA39A24", VA = "0xA39A24", Slot = "5")]
	public override void OnPop(NapalmFire fire)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA39A94", Offset = "0xA39A94", VA = "0xA39A94", Slot = "6")]
	public override void OnPush(NapalmFire fire)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA39B04", Offset = "0xA39B04", VA = "0xA39B04", Slot = "7")]
	public virtual void Clear()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C6")]
public class PolygonPool : ObjectPoolStandalone<PoolableComponent>
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Level5BossBehaviour bossScript;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PoolableComponent> spawnedPolygons;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xB9600C", Offset = "0xB9600C", VA = "0xB9600C")]
	public PolygonPool(Transform parent, GameObject prefab, Level5BossBehaviour boss, GameObject FXprefab)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xB960DC", Offset = "0xB960DC", VA = "0xB960DC", Slot = "5")]
	public override void OnPop(PoolableComponent obj)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xB9618C", Offset = "0xB9618C", VA = "0xB9618C", Slot = "6")]
	public override void OnPush(PoolableComponent obj)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xB962F4", Offset = "0xB962F4", VA = "0xB962F4", Slot = "7")]
	public virtual void Clear()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C7")]
public class MeteorStrikeCannon : ObjectPoolStandalone<MeteorBullet>
{
	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform origin;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Level5BossBehaviour bossScript;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GenericPool vfxPool;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<MeteorBullet> spawnedMeteors;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA345E0", Offset = "0xA345E0", VA = "0xA345E0")]
	public MeteorStrikeCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA346C4", Offset = "0xA346C4", VA = "0xA346C4")]
	public MeteorStrikeCannon(Transform parent, Transform origin, GameObject prefab, Level5BossBehaviour boss, GenericPool pool)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA347C4", Offset = "0xA347C4", VA = "0xA347C4")]
	public void Shoot(MeteorFallPoints_Manager meteorManager, float speed, float lSpeed)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA34B14", Offset = "0xA34B14", VA = "0xA34B14", Slot = "5")]
	public override void OnPop(MeteorBullet obj)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA34B84", Offset = "0xA34B84", VA = "0xA34B84", Slot = "6")]
	public override void OnPush(MeteorBullet obj)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA34D1C", Offset = "0xA34D1C", VA = "0xA34D1C", Slot = "7")]
	public virtual void Clear()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA438", Offset = "0x7BA438")]
public class Level5BossPhaseSettings : ScriptableObject
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEEC0", Offset = "0x7BEEC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BEEC0", Offset = "0x7BEEC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BEEC0", Offset = "0x7BEEC0")]
	public float healthThreshold;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BEF44", Offset = "0x7BEF44")]
	public float cooldown_Actions;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BEF7C", Offset = "0x7BEF7C")]
	public float cooldown_Initial;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BEFB4", Offset = "0x7BEFB4")]
	public float switchSpeed;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BEFEC", Offset = "0x7BEFEC")]
	public int pixels;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BF024", Offset = "0x7BF024")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF024", Offset = "0x7BF024")]
	public Level5BossBehaviour.Action[] bossActions;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF070", Offset = "0x7BF070")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF070", Offset = "0x7BF070")]
	public float TS_bulletSpeed;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF0D0", Offset = "0x7BF0D0")]
	public float TS_angleDelta;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF108", Offset = "0x7BF108")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF108", Offset = "0x7BF108")]
	public float NS_bulletSpeed;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF168", Offset = "0x7BF168")]
	public float NS_spawnRate;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF1A0", Offset = "0x7BF1A0")]
	public float NS_groundTime;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF1D8", Offset = "0x7BF1D8")]
	public float NS_groundSpacing;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF210", Offset = "0x7BF210")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF210", Offset = "0x7BF210")]
	public float MS_lerpSpeed;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF270", Offset = "0x7BF270")]
	public float MS_bulletSpeed;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF2A8", Offset = "0x7BF2A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF2A8", Offset = "0x7BF2A8")]
	public float evilPolygon_spawnRate;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF308", Offset = "0x7BF308")]
	public int evilPolygon_spawnAmount;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x97CFE8", Offset = "0x97CFE8", VA = "0x97CFE8")]
	public Level5BossPhaseSettings()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MeteorBullet : MonoBehaviour, IPoolableStandalone<MeteorBullet>
{
	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCBF4", Offset = "0x7BCBF4")]
	private sealed class <MoveToTarget>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorBullet <>4__this;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <originalPosition>5__3;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <originalRotation>5__4;

		[Token(Token = "0x17000359")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xA3429C", Offset = "0xA3429C", VA = "0xA3429C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xA3430C", Offset = "0xA3430C", VA = "0xA3430C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0xA33C00", Offset = "0xA33C00", VA = "0xA33C00")]
		[DebuggerHidden]
		public <MoveToTarget>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0xA33F64", Offset = "0xA33F64", VA = "0xA33F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0xA33F68", Offset = "0xA33F68", VA = "0xA33F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xA342A4", Offset = "0xA342A4", VA = "0xA342A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform meteorTarget;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speed;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lerpTimer;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF340", Offset = "0x7BF340")]
	private ObjectPoolStandalone<MeteorBullet> <pool>k__BackingField;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected PhysicsBody body;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine targetCoroutine;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isAlive;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string fallingSound;

	[Token(Token = "0x1700004C")]
	public ObjectPoolStandalone<MeteorBullet> pool
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xA33884", Offset = "0xA33884", VA = "0xA33884", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB78", Offset = "0x7CDB78")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xA3388C", Offset = "0xA3388C", VA = "0xA3388C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDB88", Offset = "0x7CDB88")]
		set
		{
		}
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xA33894", Offset = "0xA33894", VA = "0xA33894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA338F8", Offset = "0xA338F8", VA = "0xA338F8")]
	public void ShootMeteor(Vector3 origin, Transform target, float speed, float lerpTimer)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xA33AC8", Offset = "0xA33AC8", VA = "0xA33AC8")]
	private void Fall()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA33BFC", Offset = "0xA33BFC", VA = "0xA33BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xA33A48", Offset = "0xA33A48", VA = "0xA33A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDB98", Offset = "0x7CDB98")]
	private IEnumerator MoveToTarget()
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xA33C2C", Offset = "0xA33C2C", VA = "0xA33C2C")]
	public void PushToPool()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xA33CA8", Offset = "0xA33CA8", VA = "0xA33CA8")]
	private void CollisionEnter(PhysicsBodyCollision col)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xA33CE8", Offset = "0xA33CE8", VA = "0xA33CE8")]
	public void CheckCollision(Transform other)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xA33E34", Offset = "0xA33E34", VA = "0xA33E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA33ECC", Offset = "0xA33ECC", VA = "0xA33ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xA33F5C", Offset = "0xA33F5C", VA = "0xA33F5C")]
	public MeteorBullet()
	{
	}
}
[Token(Token = "0x20000CA")]
[ExecuteAlways]
public class MeteorFallPoints_Manager : MonoBehaviour
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> fallPoints;

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xA34314", Offset = "0xA34314", VA = "0xA34314")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xA343B4", Offset = "0xA343B4", VA = "0xA343B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA34318", Offset = "0xA34318", VA = "0xA34318")]
	private void UpdateList()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA343B8", Offset = "0xA343B8", VA = "0xA343B8")]
	private void UpdateListNames()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA34564", Offset = "0xA34564", VA = "0xA34564")]
	public MeteorFallPoints_Manager()
	{
	}
}
[Token(Token = "0x20000CB")]
public class NapalmFire : MonoBehaviour, IPoolableStandalone<NapalmFire>
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF360", Offset = "0x7BF360")]
	private ObjectPoolStandalone<NapalmFire> <pool>k__BackingField;

	[Token(Token = "0x1700004D")]
	public ObjectPoolStandalone<NapalmFire> pool
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xA398D4", Offset = "0xA398D4", VA = "0xA398D4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDBFC", Offset = "0x7CDBFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xA398DC", Offset = "0xA398DC", VA = "0xA398DC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC0C", Offset = "0x7CDC0C")]
		set
		{
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA398E4", Offset = "0xA398E4", VA = "0xA398E4")]
	public void OnTimelineEnd()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA3994C", Offset = "0xA3994C", VA = "0xA3994C")]
	public NapalmFire()
	{
	}
}
[Token(Token = "0x20000CC")]
public class NapalmFire_Manager : MonoBehaviour, IPoolableStandalone<NapalmFire_Manager>
{
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC04", Offset = "0x7BCC04")]
	private sealed class <SpawnFire>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NapalmFire_Manager <>4__this;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x1700035B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xA39F10", Offset = "0xA39F10", VA = "0xA39F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xA39F80", Offset = "0xA39F80", VA = "0xA39F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0xA39D84", Offset = "0xA39D84", VA = "0xA39D84")]
		[DebuggerHidden]
		public <SpawnFire>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0xA39DC0", Offset = "0xA39DC0", VA = "0xA39DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0xA39DC4", Offset = "0xA39DC4", VA = "0xA39DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0xA39F18", Offset = "0xA39F18", VA = "0xA39F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lifeTimer;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lifetime;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float spawnRate;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool managerIsActive;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefab;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Level5BossBehaviour dragonBoss;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF370", Offset = "0x7BF370")]
	private ObjectPoolStandalone<NapalmFire_Manager> <pool>k__BackingField;

	[Token(Token = "0x1700004E")]
	public ObjectPoolStandalone<NapalmFire_Manager> pool
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xA39BCC", Offset = "0xA39BCC", VA = "0xA39BCC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC1C", Offset = "0x7CDC1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xA39BD4", Offset = "0xA39BD4", VA = "0xA39BD4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDC2C", Offset = "0x7CDC2C")]
		set
		{
		}
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA39BDC", Offset = "0xA39BDC", VA = "0xA39BDC")]
	public void FireStart(float lifetime, Level5BossBehaviour dragonBoss, float spawnSpeed)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA39CB4", Offset = "0xA39CB4", VA = "0xA39CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA39D0C", Offset = "0xA39D0C", VA = "0xA39D0C")]
	private void EndLife()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA39C34", Offset = "0xA39C34", VA = "0xA39C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDC3C", Offset = "0x7CDC3C")]
	private IEnumerator SpawnFire()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA39DB0", Offset = "0xA39DB0", VA = "0xA39DB0")]
	public NapalmFire_Manager()
	{
	}
}
[Token(Token = "0x20000CD")]
public class PoolableComponent : MonoBehaviour, IPoolableStandalone<PoolableComponent>, IPoolable<PoolableComponent>
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF380", Offset = "0x7BF380")]
	private ObjectPoolStandalone<PoolableComponent> <pool>k__BackingField;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF390", Offset = "0x7BF390")]
	private ObjectPool<PoolableComponent> <poolComponent>k__BackingField;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isAlive;

	[Token(Token = "0x1700004F")]
	public ObjectPoolStandalone<PoolableComponent> pool
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xB96404", Offset = "0xB96404", VA = "0xB96404", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCA0", Offset = "0x7CDCA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xB9640C", Offset = "0xB9640C", VA = "0xB9640C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCB0", Offset = "0x7CDCB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public ObjectPool<PoolableComponent> poolComponent
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xB96414", Offset = "0xB96414", VA = "0xB96414", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCC0", Offset = "0x7CDCC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xB9641C", Offset = "0xB9641C", VA = "0xB9641C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCD0", Offset = "0x7CDCD0")]
		set
		{
		}
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xB96424", Offset = "0xB96424", VA = "0xB96424")]
	public void TemporaryLife(float timer)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xB96488", Offset = "0xB96488", VA = "0xB96488", Slot = "8")]
	public virtual void Push()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xB9661C", Offset = "0xB9661C", VA = "0xB9661C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xB96628", Offset = "0xB96628", VA = "0xB96628", Slot = "9")]
	public virtual void EnableFunction()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xB96490", Offset = "0xB96490", VA = "0xB96490")]
	private void PushToPool(bool overrideActive = false)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xB96634", Offset = "0xB96634", VA = "0xB96634")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xB9663C", Offset = "0xB9663C", VA = "0xB9663C")]
	public PoolableComponent()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BulletTargetPool : ObjectPool<Transform>
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite defaultSprite;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite chargedSprite;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> transforms;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xAA87F4", Offset = "0xAA87F4", VA = "0xAA87F4")]
	public void UpdateTransforms(List<Transform> targets, bool charged)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xAA8E64", Offset = "0xAA8E64", VA = "0xAA8E64")]
	public void Clear()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xAA8C78", Offset = "0xAA8C78", VA = "0xAA8C78")]
	private void EnsureCount(int count)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xAA8E6C", Offset = "0xAA8E6C", VA = "0xAA8E6C")]
	public BulletTargetPool()
	{
	}
}
[Token(Token = "0x20000CF")]
public class BossLevel6FinalBattle : BossBehaviour
{
	[Token(Token = "0x2000585")]
	private enum State
	{
		[Token(Token = "0x4001C57")]
		PhaseStart,
		[Token(Token = "0x4001C58")]
		RangedWaveSequence,
		[Token(Token = "0x4001C59")]
		RangedToCastle,
		[Token(Token = "0x4001C5A")]
		SummonCastle,
		[Token(Token = "0x4001C5B")]
		CastleToRanged
	}

	[Token(Token = "0x2000586")]
	private enum MeleeAttackMode
	{
		[Token(Token = "0x4001C5D")]
		LeftHand,
		[Token(Token = "0x4001C5E")]
		RightHand,
		[Token(Token = "0x4001C5F")]
		HeadLaser
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC14", Offset = "0x7BCC14")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BossLevel6FinalBattle <>4__this;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string anim;

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xAA4AA0", Offset = "0xAA4AA0", VA = "0xAA4AA0")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xAA4AA8", Offset = "0xAA4AA8", VA = "0xAA4AA8")]
		internal bool <ThrowCastle>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC24", Offset = "0x7BCC24")]
	private sealed class <ThrowCastle>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossLevel6FinalBattle <>4__this;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeleeAttackMode attackHand;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass55_0 <>8__1;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform spawnPoint;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <animTrigger>5__2;

		[Token(Token = "0x1700035D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xAA5454", Offset = "0xAA5454", VA = "0xAA5454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xAA54C4", Offset = "0xAA54C4", VA = "0xAA54C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xAA4A2C", Offset = "0xAA4A2C", VA = "0xAA4A2C")]
		[DebuggerHidden]
		public <ThrowCastle>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xAA4DBC", Offset = "0xAA4DBC", VA = "0xAA4DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xAA4DC0", Offset = "0xAA4DC0", VA = "0xAA4DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xAA545C", Offset = "0xAA545C", VA = "0xAA545C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC34", Offset = "0x7BCC34")]
	private sealed class <ShowLaser>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossLevel6FinalBattle <>4__this;

		[Token(Token = "0x1700035F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xAA4D44", Offset = "0xAA4D44", VA = "0xAA4D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xAA4DB4", Offset = "0xAA4DB4", VA = "0xAA4DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xAA4A58", Offset = "0xAA4A58", VA = "0xAA4A58")]
		[DebuggerHidden]
		public <ShowLaser>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xAA4B48", Offset = "0xAA4B48", VA = "0xAA4B48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xAA4B4C", Offset = "0xAA4B4C", VA = "0xAA4B4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xAA4D4C", Offset = "0xAA4D4C", VA = "0xAA4D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF3A0", Offset = "0x7BF3A0")]
	public BossFightState bossFightState;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DotController dotController;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dragon;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF3D8", Offset = "0x7BF3D8")]
	public Transform rangedPosition;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform meleePosition;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF410", Offset = "0x7BF410")]
	public BossLevel6FinalBattlePhase phaseHand1;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BossLevel6FinalBattlePhase phaseHand2;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BossLevel6FinalBattlePhase phaseHead;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF448", Offset = "0x7BF448")]
	public float rangedToMeleeTime;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float meleeChargeTime;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float meleeAttackTime;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float meleeToRangedTime;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF480", Offset = "0x7BF480")]
	public Cannon cannon;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Cannon castleCannon;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Animator bossAnimator;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF4B8", Offset = "0x7BF4B8")]
	public GameObject cyblinMagic;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LaserFight laser;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float laserSpeed;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF4F0", Offset = "0x7BF4F0")]
	public string bulletAttackAnimation;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string leftHandAnimation;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string leftAnimTrigger;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string rightHandAnimation;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string rightAnimTrigger;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string headAnimation;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string headAttackTrigger;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string idleAnimation;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string damageAnimation;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF528", Offset = "0x7BF528")]
	public Transform leftHandPortal;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform rightHandPortal;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Animator cyblinPortalRW;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 meleeOffset;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 meleePositionSmooth;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private State state;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float stateTimer;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int phaseIndex;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private BossLevel6FinalBattleRangedWave[] rangedWaves;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int rangedWaveIndex;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float rangedWaveTimeRemaining;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float waitForRangedAnimTimer;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private MeleeAttackMode meleeAttack;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeleeAttackMode meleeDeadHand;

	[Token(Token = "0x17000051")]
	private BossLevel6FinalBattlePhase phase
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xAA38C8", Offset = "0xAA38C8", VA = "0xAA38C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xAA38F4", Offset = "0xAA38F4", VA = "0xAA38F4")]
	private void StartBoss()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xAA3B18", Offset = "0xAA3B18", VA = "0xAA3B18", Slot = "6")]
	public override void StartBehaviour()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xAA3B6C", Offset = "0xAA3B6C", VA = "0xAA3B6C", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xAA3C44", Offset = "0xAA3C44", VA = "0xAA3C44", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xAA3CE8", Offset = "0xAA3CE8", VA = "0xAA3CE8", Slot = "9")]
	public override void StopBehaviour()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xAA3DAC", Offset = "0xAA3DAC", VA = "0xAA3DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xAA3F0C", Offset = "0xAA3F0C", VA = "0xAA3F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xAA46A4", Offset = "0xAA46A4", VA = "0xAA46A4")]
	private void AdvancePhase()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xAA39D8", Offset = "0xAA39D8", VA = "0xAA39D8")]
	private void ChangeState(State state)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xAA45A8", Offset = "0xAA45A8", VA = "0xAA45A8")]
	private void Shoot(Vector3 direction, float speed)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xAA48CC", Offset = "0xAA48CC", VA = "0xAA48CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDCE0", Offset = "0x7CDCE0")]
	private IEnumerator ThrowCastle(Transform spawnPoint, MeleeAttackMode attackHand)
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xAA49AC", Offset = "0xAA49AC", VA = "0xAA49AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDD44", Offset = "0x7CDD44")]
	private IEnumerator ShowLaser()
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xAA4A84", Offset = "0xAA4A84", VA = "0xAA4A84")]
	public BossLevel6FinalBattle()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA48C", Offset = "0x7BA48C")]
public class BossLevel6FinalBattlePhase : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startTime;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF560", Offset = "0x7BF560")]
	private Damageable <damageable>k__BackingField;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Bullet currentDamageableBullet;

	[Token(Token = "0x17000052")]
	public Damageable damageable
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xAA39D0", Offset = "0xAA39D0", VA = "0xAA39D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDA8", Offset = "0x7CDDA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xAA54CC", Offset = "0xAA54CC", VA = "0xAA54CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDB8", Offset = "0x7CDDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xAA54D4", Offset = "0xAA54D4", VA = "0xAA54D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xAA5538", Offset = "0xAA5538", VA = "0xAA5538")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xAA5394", Offset = "0xAA5394", VA = "0xAA5394")]
	public void LinkBulletWithDamageable(Bullet bullet)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xAA4748", Offset = "0xAA4748", VA = "0xAA4748")]
	public BossLevel6FinalBattleRangedWave[] GetRangedWaves()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xAA55B0", Offset = "0xAA55B0", VA = "0xAA55B0")]
	public BossLevel6FinalBattlePhase()
	{
	}
}
[Token(Token = "0x20000D1")]
public class BossLevel6FinalBattleRangedWave : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bulletSpeed;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xAA43A4", Offset = "0xAA43A4", VA = "0xAA43A4")]
	public Vector3[] GetBulletDirections()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xAA55C0", Offset = "0xAA55C0", VA = "0xAA55C0")]
	public BossLevel6FinalBattleRangedWave()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CastleBullet : MonoBehaviour, IHitboxTrigger
{
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC44", Offset = "0x7BCC44")]
	private sealed class <Push>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CastleBullet <>4__this;

		[Token(Token = "0x17000361")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xAABE94", Offset = "0xAABE94", VA = "0xAABE94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002501")]
			[Address(RVA = "0xAABF04", Offset = "0xAABF04", VA = "0xAABF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xAABC68", Offset = "0xAABC68", VA = "0xAABC68")]
		[DebuggerHidden]
		public <Push>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xAABD0C", Offset = "0xAABD0C", VA = "0xAABD0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xAABD10", Offset = "0xAABD10", VA = "0xAABD10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xAABE9C", Offset = "0xAABE9C", VA = "0xAABE9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitBox hitbox;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bullet bullet;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion hitRotation;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xAABA68", Offset = "0xAABA68", VA = "0xAABA68", Slot = "4")]
	public void Hit(Transform obj)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xAABBE8", Offset = "0xAABBE8", VA = "0xAABBE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDDC8", Offset = "0x7CDDC8")]
	private IEnumerator Push()
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xAABC94", Offset = "0xAABC94", VA = "0xAABC94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xAABD04", Offset = "0xAABD04", VA = "0xAABD04")]
	public CastleBullet()
	{
	}
}
[Token(Token = "0x20000D3")]
public class FriendsShootEffect : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bullethitEffect;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToReset;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string hitSound;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hit;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xAD4BD0", Offset = "0xAD4BD0", VA = "0xAD4BD0")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xAD4DBC", Offset = "0xAD4DBC", VA = "0xAD4DBC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xAD4DF4", Offset = "0xAD4DF4", VA = "0xAD4DF4")]
	public FriendsShootEffect()
	{
	}
}
[Token(Token = "0x20000D4")]
public class BossLevel6Intro : BossBehaviour
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject laserPrefab;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reloadTime;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeBeforeEnraged;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform laserSpawnPoint;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ringOfFireCenter;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string prepareLaserFMODEvent;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventInstance lazor;

	[Token(Token = "0x4000557")]
	private const int initialEnragedLaserCount = 5;

	[Token(Token = "0x4000558")]
	private const int maxEnragedLaserCount = 30;

	[Token(Token = "0x4000559")]
	private const float enragedLaserArea = 0.8f;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int enragedLaserCount;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float laserTempo;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MolochLaserPool laserPool;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isEnraged;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float rageCounter;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float laserSpeedMultiplier;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xAA55D4", Offset = "0xAA55D4", VA = "0xAA55D4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xAA5718", Offset = "0xAA5718", VA = "0xAA5718")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xAA5B38", Offset = "0xAA5B38", VA = "0xAA5B38")]
	private Vector3 GetRandomPos(float maxRange, Vector3 center)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xAA5BCC", Offset = "0xAA5BCC", VA = "0xAA5BCC", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xAA5CB0", Offset = "0xAA5CB0", VA = "0xAA5CB0", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xAA5CEC", Offset = "0xAA5CEC", VA = "0xAA5CEC")]
	public BossLevel6Intro()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MolochLaser : MonoBehaviour, IPoolableStandalone<MolochLaser>
{
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC54", Offset = "0x7BCC54")]
	private sealed class <ShootLaser>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MolochLaser <>4__this;

		[Token(Token = "0x17000363")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0xA375C4", Offset = "0xA375C4", VA = "0xA375C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0xA37634", Offset = "0xA37634", VA = "0xA37634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xA371A0", Offset = "0xA371A0", VA = "0xA371A0")]
		[DebuggerHidden]
		public <ShootLaser>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xA37310", Offset = "0xA37310", VA = "0xA37310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xA37314", Offset = "0xA37314", VA = "0xA37314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xA375CC", Offset = "0xA375CC", VA = "0xA375CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitBox hitbox;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayActiveTime;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Animator anim;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string cylochLaserFMODEvent;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance laserEventInstance;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF5B0", Offset = "0x7BF5B0")]
	private ObjectPoolStandalone<MolochLaser> <pool>k__BackingField;

	[Token(Token = "0x17000053")]
	public ObjectPoolStandalone<MolochLaser> pool
	{
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xA36F18", Offset = "0xA36F18", VA = "0xA36F18", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE2C", Offset = "0x7CDE2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xA36F20", Offset = "0xA36F20", VA = "0xA36F20", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE3C", Offset = "0x7CDE3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	private bool isLaserEventAbscent
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xA36F28", Offset = "0xA36F28", VA = "0xA36F28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA36F34", Offset = "0xA36F34", VA = "0xA36F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA37050", Offset = "0xA37050", VA = "0xA37050")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA37120", Offset = "0xA37120", VA = "0xA37120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDE4C", Offset = "0x7CDE4C")]
	private IEnumerator ShootLaser()
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xA371CC", Offset = "0xA371CC", VA = "0xA371CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA37244", Offset = "0xA37244", VA = "0xA37244")]
	private void ActivateHitbox()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA3729C", Offset = "0xA3729C", VA = "0xA3729C")]
	private void DeactivateHitbox()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA3724C", Offset = "0xA3724C", VA = "0xA3724C")]
	public void SetHitbox(bool on)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA372A4", Offset = "0xA372A4", VA = "0xA372A4")]
	public MolochLaser()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA372AC", Offset = "0xA372AC", VA = "0xA372AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEB0", Offset = "0x7CDEB0")]
	private bool <ShootLaser>b__13_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D6")]
public class MolochLaserPool : ObjectPoolStandalone<MolochLaser>
{
	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform molochTransform;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 target;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly List<MolochLaser> spawnedLasers;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA3763C", Offset = "0xA3763C", VA = "0xA3763C", Slot = "5")]
	public override void OnPop(MolochLaser obj)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA37768", Offset = "0xA37768", VA = "0xA37768", Slot = "6")]
	public override void OnPush(MolochLaser obj)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA377D8", Offset = "0xA377D8", VA = "0xA377D8")]
	public void PushAll()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA378A0", Offset = "0xA378A0", VA = "0xA378A0")]
	public void DisableAllHitboxes()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA37968", Offset = "0xA37968", VA = "0xA37968")]
	public MolochLaserPool()
	{
	}
}
[Token(Token = "0x20000D7")]
public class MoveBetweenSpots : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform movingTarget;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] positions;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startingPositionIndex;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float movementTime;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitTime;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool flipToFaceMovingDirection;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool StopMoving;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Bounds bounds;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool dirt;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool cull;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EnemyTerritory territory;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA38B00", Offset = "0xA38B00", VA = "0xA38B00")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA38BC0", Offset = "0xA38BC0", VA = "0xA38BC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA38D94", Offset = "0xA38D94", VA = "0xA38D94")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA3914C", Offset = "0xA3914C", VA = "0xA3914C")]
	public MoveBetweenSpots()
	{
	}
}
[Token(Token = "0x20000D8")]
public class NerfGunObstacle : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Droppable droppableObj;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cooldownTime;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ready;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string distractionActivatedSoundEvent;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string distractionResetSoundEvent;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject resetEffect;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeToDeactEffect;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA3C004", Offset = "0xA3C004", VA = "0xA3C004")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA3C0C4", Offset = "0xA3C0C4", VA = "0xA3C0C4")]
	private void ObstacleHit(Vector3 pointOfContact)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA3C1A8", Offset = "0xA3C1A8", VA = "0xA3C1A8")]
	public void ResetObstacle()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA3C338", Offset = "0xA3C338", VA = "0xA3C338")]
	private void DeactivateEffect()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA3C380", Offset = "0xA3C380", VA = "0xA3C380")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA3C55C", Offset = "0xA3C55C", VA = "0xA3C55C")]
	public NerfGunObstacle()
	{
	}
}
[Token(Token = "0x20000D9")]
public class BossLevel6RetroMedley : BossBehaviour
{
	[Token(Token = "0x200058C")]
	private enum MolochStates
	{
		[Token(Token = "0x4001C73")]
		Idle,
		[Token(Token = "0x4001C74")]
		AttackLaser,
		[Token(Token = "0x4001C75")]
		MeteorShower,
		[Token(Token = "0x4001C76")]
		Punching
	}

	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC64", Offset = "0x7BCC64")]
	private sealed class <MeteorShowerAttack>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossLevel6RetroMedley <>4__this;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000365")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600250B")]
			[Address(RVA = "0xAA6A6C", Offset = "0xAA6A6C", VA = "0xAA6A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xAA6ADC", Offset = "0xAA6ADC", VA = "0xAA6ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xAA6664", Offset = "0xAA6664", VA = "0xAA6664")]
		[DebuggerHidden]
		public <MeteorShowerAttack>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xAA67E4", Offset = "0xAA67E4", VA = "0xAA67E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xAA67E8", Offset = "0xAA67E8", VA = "0xAA67E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xAA6A74", Offset = "0xAA6A74", VA = "0xAA6A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject laserPrefab;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform laserSpawnPoint;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Cannon cannon;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 meteorSpread;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MolochMedleySettings[] molochSettings;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string laserAttackFMODEvent;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string prepareAttackFMODEvent;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EventInstance lazor;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentSettings;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MolochLaserPool laserPool;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MolochLaser currentLaser;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MolochStates currentState;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool laserActive;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int meteorsToThrow;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float meteorCooldown;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timer;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float laserTime;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Animator cylochAnimator;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xAA5D7C", Offset = "0xAA5D7C", VA = "0xAA5D7C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xAA5E5C", Offset = "0xAA5E5C", VA = "0xAA5E5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xAA60EC", Offset = "0xAA60EC", VA = "0xAA60EC")]
	public void ChangeMolochSettings(MedleyStates medleyState)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xAA60FC", Offset = "0xAA60FC", VA = "0xAA60FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xAA5E64", Offset = "0xAA5E64", VA = "0xAA5E64")]
	private void ChangeState(MolochStates newState)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xAA65CC", Offset = "0xAA65CC", VA = "0xAA65CC")]
	public void StartMeteorShower(int numberOfMeteors)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xAA654C", Offset = "0xAA654C", VA = "0xAA654C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDEC0", Offset = "0x7CDEC0")]
	private IEnumerator MeteorShowerAttack()
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xAA6690", Offset = "0xAA6690", VA = "0xAA6690", Slot = "7")]
	public override void KilledDot(out bool resetGame)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xAA66A8", Offset = "0xAA66A8", VA = "0xAA66A8", Slot = "8")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xAA66FC", Offset = "0xAA66FC", VA = "0xAA66FC")]
	public BossLevel6RetroMedley()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ChangeDotOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotType nextDotType;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DotType previousDotType;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string change3DDotFMODEvent;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string change2DDotFMODEvent;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tagToCheck;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject transformationEffect;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showingEffect;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xAADB6C", Offset = "0xAADB6C", VA = "0xAADB6C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xAADE70", Offset = "0xAADE70", VA = "0xAADE70")]
	private void ShowEffect()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xAADEF0", Offset = "0xAADEF0", VA = "0xAADEF0")]
	private void ResetEffect()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xAADF28", Offset = "0xAADF28", VA = "0xAADF28")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xAAE028", Offset = "0xAAE028", VA = "0xAAE028")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xAAE02C", Offset = "0xAAE02C", VA = "0xAAE02C")]
	public ChangeDotOnTrigger()
	{
	}
}
[Token(Token = "0x20000DB")]
public class Hotwheels_FX : MonoBehaviour
{
	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC74", Offset = "0x7BCC74")]
	private sealed class <AnimateMesh>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hotwheels_FX <>4__this;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetScale;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float targetTime;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__2;

		[Token(Token = "0x17000367")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0xAE4448", Offset = "0xAE4448", VA = "0xAE4448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0xAE44B8", Offset = "0xAE44B8", VA = "0xAE44B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xAE41F4", Offset = "0xAE41F4", VA = "0xAE41F4")]
		[DebuggerHidden]
		public <AnimateMesh>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xAE4228", Offset = "0xAE4228", VA = "0xAE4228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xAE422C", Offset = "0xAE422C", VA = "0xAE422C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xAE4450", Offset = "0xAE4450", VA = "0xAE4450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform mesh;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem pSystem;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startMeshScale;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hasPlayed;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xAE3EC4", Offset = "0xAE3EC4", VA = "0xAE3EC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xAE3FB4", Offset = "0xAE3FB4", VA = "0xAE3FB4")]
	public void Action(bool explode, bool overrideActiveCheck = false)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xAE4110", Offset = "0xAE4110", VA = "0xAE4110")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDF24", Offset = "0x7CDF24")]
	private IEnumerator AnimateMesh(float targetTime, Vector3 targetScale)
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xAE4220", Offset = "0xAE4220", VA = "0xAE4220")]
	public Hotwheels_FX()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Hotwheels_FX_Manager : MonoBehaviour
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hotwheels_FX[] children;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int childIndex;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xAE44C0", Offset = "0xAE44C0", VA = "0xAE44C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xAE4524", Offset = "0xAE4524", VA = "0xAE4524")]
	public void ChildrenAction(bool value)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xAE45C0", Offset = "0xAE45C0", VA = "0xAE45C0")]
	public Hotwheels_FX_Manager()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Level6GamepadChangeDot : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC84", Offset = "0x7BCC84")]
	private sealed class <AutoFixWaiter>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level6GamepadChangeDot <>4__this;

		[Token(Token = "0x17000369")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0x980168", Offset = "0x980168", VA = "0x980168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0x9801D8", Offset = "0x9801D8", VA = "0x9801D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x980060", Offset = "0x980060", VA = "0x980060")]
		[DebuggerHidden]
		public <AutoFixWaiter>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x980094", Offset = "0x980094", VA = "0x980094", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x980098", Offset = "0x980098", VA = "0x980098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x980170", Offset = "0x980170", VA = "0x980170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotType dotType;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandsController autoFix;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactable gamepad;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool changed;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeToWait;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x97FB9C", Offset = "0x97FB9C", VA = "0x97FB9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x97FC00", Offset = "0x97FC00", VA = "0x97FC00")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x97FCE4", Offset = "0x97FCE4", VA = "0x97FCE4")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x97FD90", Offset = "0x97FD90", VA = "0x97FD90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x97FE9C", Offset = "0x97FE9C", VA = "0x97FE9C")]
	private void AutoFix()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x97FF3C", Offset = "0x97FF3C", VA = "0x97FF3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x97FE1C", Offset = "0x97FE1C", VA = "0x97FE1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDF88", Offset = "0x7CDF88")]
	private IEnumerator AutoFixWaiter()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x98008C", Offset = "0x98008C", VA = "0x98008C")]
	public Level6GamepadChangeDot()
	{
	}
}
[Token(Token = "0x20000DE")]
public enum MedleyStates
{
	[Token(Token = "0x40005A3")]
	Phase1,
	[Token(Token = "0x40005A4")]
	Phase2,
	[Token(Token = "0x40005A5")]
	Phase3Idle,
	[Token(Token = "0x40005A6")]
	Phase3Attack,
	[Token(Token = "0x40005A7")]
	Phase3DotInRange,
	[Token(Token = "0x40005A8")]
	Phase3NearDeath,
	[Token(Token = "0x40005A9")]
	LevelDisabled
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA4F0", Offset = "0x7BA4F0")]
public class Level6MedleyProgression : MonoBehaviour
{
	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Interactable gamepad1Platforming;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Interactable gamepad2BeatEmUp;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gamepadTopDown;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gamepadThirdPerson;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF620", Offset = "0x7BF620")]
	public MedleyPhase[] medleyPhases;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BossFightState bossFightState;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BossLevel6RetroMedley bossBehaviour;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MedleyStates currentPhase;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool bossStarted;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x980B88", Offset = "0x980B88", VA = "0x980B88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x980E68", Offset = "0x980E68", VA = "0x980E68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x980F98", Offset = "0x980F98", VA = "0x980F98")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x980FFC", Offset = "0x980FFC", VA = "0x980FFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x98107C", Offset = "0x98107C", VA = "0x98107C")]
	public void EndMedleyBoss()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9810AC", Offset = "0x9810AC", VA = "0x9810AC")]
	public void AdvanceMedleyPhase()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x980C68", Offset = "0x980C68", VA = "0x980C68")]
	private void ChangeMedleyPhase(MedleyStates phase)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9810B8", Offset = "0x9810B8", VA = "0x9810B8")]
	private void ChangeAvailableController(MedleyStates phase)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x981484", Offset = "0x981484", VA = "0x981484")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9814E8", Offset = "0x9814E8", VA = "0x9814E8")]
	public Level6MedleyProgression()
	{
	}
}
[Token(Token = "0x20000E0")]
public class Level6MedleySaveFriends : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Damageable prison;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Level6MedleyProgression bossProgression;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF658", Offset = "0x7BF658")]
	public bool endBoss;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool startedCutscene;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool canPlayCutscene;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector timelineSavedFriend;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent extras;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9814F0", Offset = "0x9814F0", VA = "0x9814F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x98161C", Offset = "0x98161C", VA = "0x98161C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x98157C", Offset = "0x98157C", VA = "0x98157C")]
	private void StartCutscene()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x981628", Offset = "0x981628", VA = "0x981628")]
	public void OntimelineEnd()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x98162C", Offset = "0x98162C", VA = "0x98162C")]
	private void AdvanceBossStage()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x981710", Offset = "0x981710", VA = "0x981710")]
	public Level6MedleySaveFriends()
	{
	}
}
[Token(Token = "0x20000E1")]
public class Level6TriggerMeteors : MonoBehaviour
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BossLevel6RetroMedley boss;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfMeteors;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x982188", Offset = "0x982188", VA = "0x982188")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x98225C", Offset = "0x98225C", VA = "0x98225C")]
	public Level6TriggerMeteors()
	{
	}
}
[Token(Token = "0x20000E2")]
public class MedleyPhase : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject saveFriends;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CheckpointTrigger dotStart;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform goal;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xA31DC4", Offset = "0xA31DC4", VA = "0xA31DC4")]
	public void BeginPhase()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xA31F28", Offset = "0xA31F28", VA = "0xA31F28")]
	public MedleyPhase()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BA554", Offset = "0x7BA554")]
public class MolochMedleySettings : ScriptableObject
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stayIdle;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float laserCooldown;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float laserFollowTime;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayActiveLaserTime;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float meteorShowerMaxCooldown;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xA379EC", Offset = "0xA379EC", VA = "0xA379EC")]
	public MolochMedleySettings()
	{
	}
}
[Token(Token = "0x20000E4")]
public class PlatformHotwheels_ColliderCaller : MonoBehaviour
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlatformHotwheelsActivator hotwheels;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string side;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB8DA14", Offset = "0xB8DA14", VA = "0xB8DA14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB8DA78", Offset = "0xB8DA78", VA = "0xB8DA78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xB8DB08", Offset = "0xB8DB08", VA = "0xB8DB08")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xB8DBB0", Offset = "0xB8DBB0", VA = "0xB8DBB0")]
	public PlatformHotwheels_ColliderCaller()
	{
	}
}
[Token(Token = "0x20000E5")]
public class PlatformHotwheelsActivator : MonoBehaviour
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector AE_timeline;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector EA_timeline;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector currentTimeline;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform emptyBike;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform exitPoint;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] points;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] dots;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DotController currentDot;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF690", Offset = "0x7BF690")]
	[EventRef]
	public string dotDisappear;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string dotReappear;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF6EC", Offset = "0x7BF6EC")]
	public string checkpointFlag;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xB8D088", Offset = "0xB8D088", VA = "0xB8D088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xB8D1BC", Offset = "0xB8D1BC", VA = "0xB8D1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xB8D208", Offset = "0xB8D208", VA = "0xB8D208")]
	public void TriggerAction(DotController ctrl, string side)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xB8D588", Offset = "0xB8D588", VA = "0xB8D588")]
	private void TimelineEnded(PlayableDirector t)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xB8D774", Offset = "0xB8D774", VA = "0xB8D774")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xB8D8A8", Offset = "0xB8D8A8", VA = "0xB8D8A8")]
	private void RepositionBike(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB8DA0C", Offset = "0xB8DA0C", VA = "0xB8DA0C")]
	public PlatformHotwheelsActivator()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ProgressMedleyOnTrigger : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level6MedleyProgression bossBattleProgression;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggered;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB9837C", Offset = "0xB9837C", VA = "0xB9837C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB9841C", Offset = "0xB9841C", VA = "0xB9841C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB984F0", Offset = "0xB984F0", VA = "0xB984F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB985C4", Offset = "0xB985C4", VA = "0xB985C4")]
	private void SaveInfo(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB98608", Offset = "0xB98608", VA = "0xB98608")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB98610", Offset = "0xB98610", VA = "0xB98610")]
	public ProgressMedleyOnTrigger()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA598", Offset = "0x7BA598")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA598", Offset = "0x7BA598")]
public class TargetedCannon : DotItem
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float chargeDuration;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform[] shootTransforms;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject targetAim;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator chargingEffect;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string chargedShootFMODEvent;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string SpotTargetFMODEvent;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string lockTargetFMODEvent;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string chargingFMODEvent;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EventInstance chargingEventInstance;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PARAMETER_ID chargingEventParameterID;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float chargeTimer;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool bulletCharged;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly List<Transform> targets;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ChargedBulletPool bulletPool;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BulletTargetPool targetPool;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody rb;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] raycastResults;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xA7DD58", Offset = "0xA7DD58", VA = "0xA7DD58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xA7DEA4", Offset = "0xA7DEA4", VA = "0xA7DEA4", Slot = "9")]
	protected override void Pressed()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xA7E46C", Offset = "0xA7E46C", VA = "0xA7E46C", Slot = "10")]
	protected override void Holding()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA7E510", Offset = "0xA7E510", VA = "0xA7E510", Slot = "11")]
	protected override void Released()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA7DFDC", Offset = "0xA7DFDC", VA = "0xA7DFDC")]
	private void ShootBullet(Transform pos, bool charged, [Optional] Transform target)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA7E6F0", Offset = "0xA7E6F0", VA = "0xA7E6F0", Slot = "13")]
	public override void PushAll()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA7E260", Offset = "0xA7E260", VA = "0xA7E260")]
	private void UpdateTargets()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA7E72C", Offset = "0xA7E72C", VA = "0xA7E72C")]
	private Transform FindTarget()
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA7E1B0", Offset = "0xA7E1B0", VA = "0xA7E1B0")]
	private void ClearTargets()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA7EA1C", Offset = "0xA7EA1C", VA = "0xA7EA1C")]
	public TargetedCannon()
	{
	}
}
[Token(Token = "0x20000E8")]
public class CandySnail : EnemyBase
{
	[Token(Token = "0x6000530")]
	[Address(RVA = "0xAAB698", Offset = "0xAAB698", VA = "0xAAB698")]
	public CandySnail()
	{
	}
}
[Token(Token = "0x20000E9")]
public class Cannon : ObjectPool<Bullet>
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 direction;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Bullet> poppedBullets;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useTransformXInstead;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AimCannonAtPlayer aim;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xAAB6A0", Offset = "0xAAB6A0", VA = "0xAAB6A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA96B58", Offset = "0xA96B58", VA = "0xA96B58")]
	public Bullet Shoot()
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xAAB704", Offset = "0xAAB704", VA = "0xAAB704")]
	public Bullet Shoot(Vector3 dir, float spe)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAAB830", Offset = "0xAAB830", VA = "0xAAB830", Slot = "5")]
	public override void OnPop(Bullet obj)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xAAB8A0", Offset = "0xAAB8A0", VA = "0xAAB8A0", Slot = "6")]
	public override void OnPush(Bullet obj)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xAA32C0", Offset = "0xAA32C0", VA = "0xAA32C0")]
	public void PushAll()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xAAB910", Offset = "0xAAB910", VA = "0xAAB910")]
	public Cannon()
	{
	}
}
[Token(Token = "0x20000EA")]
public class CheckEnemyVisible : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool neverCull;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyBase enemy;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool invisible;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float invisibleTimer;

	[Token(Token = "0x40005ED")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xAAF6A0", Offset = "0xAAF6A0", VA = "0xAAF6A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xAAF750", Offset = "0xAAF750", VA = "0xAAF750")]
	private void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xAAF7D8", Offset = "0xAAF7D8", VA = "0xAAF7D8")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xAAF818", Offset = "0xAAF818", VA = "0xAAF818")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xAAF824", Offset = "0xAAF824", VA = "0xAAF824")]
	public CheckEnemyVisible()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Damageable : MonoBehaviour
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF764", Offset = "0x7BF764")]
	public int maxHealth;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hardcoreModeMultiplier;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableOnZeroHealth;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool moveOnZeroHealth;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool checkpointRespawn;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool returnToOriginalPos;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform respawnPos;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int score;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int pixelsToDrop;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7BF79C", Offset = "0x7BF79C")]
	public GameObject contentToReveal;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF7D4", Offset = "0x7BF7D4")]
	[EventRef]
	public string deathFMODEvent;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string hitFMODEvent;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool audioFromTV;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameTV tvSource;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool playHitSoundIfZeroDamage;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BF830", Offset = "0x7BF830")]
	public GameObject objectToDisable;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 zeroHealth_Position;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<MonoBehaviour> zeroHealth_disableComponents;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BF868", Offset = "0x7BF868")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF868", Offset = "0x7BF868")]
	public SpriteAnimation spriteAnimation;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF8B4", Offset = "0x7BF8B4")]
	public bool showDeathFX;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF8EC", Offset = "0x7BF8EC")]
	public Content2D_InformationContent contentInfo;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF924", Offset = "0x7BF924")]
	public Vector2 deathFX_offset;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF95C", Offset = "0x7BF95C")]
	public Transform deathFX_transform;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BF994", Offset = "0x7BF994")]
	public InGameVFXManager.VFX_Types deathFX_Type;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BF9CC", Offset = "0x7BF9CC")]
	private float <health>k__BackingField;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private DropPixels dropPixels;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BlinkOnDamage blink;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 originalPos;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IDamageable damageReceiver;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public bool isDead;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	[HideInInspector]
	public bool awaitingRespawn;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public UnityEvent hurtboxEvent;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public UnityEvent healthReset;

	[Token(Token = "0x17000055")]
	public float health
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xBF1750", Offset = "0xBF1750", VA = "0xBF1750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFEC", Offset = "0x7CDFEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xBF1758", Offset = "0xBF1758", VA = "0xBF1758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFFC", Offset = "0x7CDFFC")]
		private set
		{
		}
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xBF1760", Offset = "0xBF1760", VA = "0xBF1760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xBF18FC", Offset = "0xBF18FC", VA = "0xBF18FC")]
	public void HurtboxTrigger(float damage, HitBox.Type type)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xBF1BC0", Offset = "0xBF1BC0", VA = "0xBF1BC0")]
	public void Die(bool moveOverride = false)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xBF2104", Offset = "0xBF2104", VA = "0xBF2104")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xBF22F8", Offset = "0xBF22F8", VA = "0xBF22F8")]
	public void ResetHealth()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xBF1F94", Offset = "0xBF1F94", VA = "0xBF1F94")]
	private void ToggleComponents(bool toEnable)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xBF2320", Offset = "0xBF2320", VA = "0xBF2320")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xBF241C", Offset = "0xBF241C", VA = "0xBF241C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xBF24A4", Offset = "0xBF24A4", VA = "0xBF24A4")]
	public Damageable()
	{
	}
}
[Token(Token = "0x20000EC")]
public class EnemyPlantController : EnemyBase
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFA1C", Offset = "0x7BFA1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7BFA1C", Offset = "0x7BFA1C")]
	public float speed;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float shootEverySecs;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool diagonal;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Collider2D hitbox;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 originalPos;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector2 dir;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timer;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool updateVelocity;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentDir;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB55E40", Offset = "0xB55E40", VA = "0xB55E40", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB55FC0", Offset = "0xB55FC0", VA = "0xB55FC0", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xB55FC4", Offset = "0xB55FC4", VA = "0xB55FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB5647C", Offset = "0xB5647C", VA = "0xB5647C")]
	private void Shoot()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB56248", Offset = "0xB56248", VA = "0xB56248")]
	private void ChangeDir()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xB55E90", Offset = "0xB55E90", VA = "0xB55E90")]
	public void InitializeMovement()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xB56820", Offset = "0xB56820", VA = "0xB56820")]
	private void OnCollisionEnter2D(Collision2D col)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xB56824", Offset = "0xB56824", VA = "0xB56824")]
	public EnemyPlantController()
	{
	}
}
[Token(Token = "0x20000ED")]
public class EnemyEelController : EnemyBase
{
	[Token(Token = "0x2000590")]
	private enum States
	{
		[Token(Token = "0x4001C85")]
		Idle,
		[Token(Token = "0x4001C86")]
		Attacking,
		[Token(Token = "0x4001C87")]
		Out,
		[Token(Token = "0x4001C88")]
		Retreating
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform eelTransform;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform endPoint;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sensor jumpSensor;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sensor atkSensor;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float attackSpeed;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float retreatSpeed;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float outTime;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private States currentState;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 restPos;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 startingPos;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float timer;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xB5579C", Offset = "0xB5579C", VA = "0xB5579C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xB55840", Offset = "0xB55840", VA = "0xB55840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xB557E4", Offset = "0xB557E4", VA = "0xB557E4")]
	private void ChangeState(States newState)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xB55C9C", Offset = "0xB55C9C", VA = "0xB55C9C", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xB55CF8", Offset = "0xB55CF8", VA = "0xB55CF8")]
	public EnemyEelController()
	{
	}
}
[Token(Token = "0x20000EE")]
public class EnemyBase : MonoBehaviour
{
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string shootFMODEvent;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Cannon cannon;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFA80", Offset = "0x7BFA80")]
	public Transform topLeft;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bottomRight;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector2 topLeftPos;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 bottomRightPos;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected PhysicsBody body;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected EnemyTerritory territory;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool isBeingRendered;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Damageable damageable;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Animator animator;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HitBox[] hitboxes;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask dotLayer;

	[Token(Token = "0x17000056")]
	public bool isVisible
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xB54518", Offset = "0xB54518", VA = "0xB54518")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xB546AC", Offset = "0xB546AC", VA = "0xB546AC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xB54938", Offset = "0xB54938", VA = "0xB54938")]
	protected bool CheckDotInRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xB54A50", Offset = "0xB54A50", VA = "0xB54A50", Slot = "5")]
	public virtual void PauseBehaviour(bool pause)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xB5452C", Offset = "0xB5452C", VA = "0xB5452C")]
	protected bool GetActiveGameplayStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xB54ADC", Offset = "0xB54ADC", VA = "0xB54ADC")]
	private void GameReloaded()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xB54BF8", Offset = "0xB54BF8", VA = "0xB54BF8", Slot = "6")]
	protected virtual void EnemyReset()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xB54BFC", Offset = "0xB54BFC", VA = "0xB54BFC", Slot = "7")]
	protected virtual void EnemyDisabled()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB54C08", Offset = "0xB54C08", VA = "0xB54C08", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB54C14", Offset = "0xB54C14", VA = "0xB54C14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB54C88", Offset = "0xB54C88", VA = "0xB54C88")]
	public void ActivateHitBoxes(bool value)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB54D54", Offset = "0xB54D54", VA = "0xB54D54")]
	public void SelfKill()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB54DF8", Offset = "0xB54DF8", VA = "0xB54DF8")]
	public EnemyBase()
	{
	}
}
[Token(Token = "0x20000EF")]
public class EnemySpawnZone : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sensor playerSensor;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFAB8", Offset = "0x7BFAB8")]
	private bool <ended>k__BackingField;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool running;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SpawnWave> waves;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentWave;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool forceEnd;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string enemySpawnFMODEvent;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool audioFromTV;

	[Token(Token = "0x17000057")]
	public bool ended
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xB5683C", Offset = "0xB5683C", VA = "0xB5683C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE00C", Offset = "0x7CE00C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0xB56844", Offset = "0xB56844", VA = "0xB56844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE01C", Offset = "0x7CE01C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB56850", Offset = "0xB56850", VA = "0xB56850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xB56B4C", Offset = "0xB56B4C", VA = "0xB56B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB56D0C", Offset = "0xB56D0C", VA = "0xB56D0C")]
	private bool DefeatedAllSpawnedEnemies()
	{
		return default(bool);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xB569DC", Offset = "0xB569DC", VA = "0xB569DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xB56EA4", Offset = "0xB56EA4", VA = "0xB56EA4")]
	private void ActivateWave(int waveIndex)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xB56DC0", Offset = "0xB56DC0", VA = "0xB56DC0")]
	public void NextWave()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xB5702C", Offset = "0xB5702C", VA = "0xB5702C")]
	private void Finish()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xB571B8", Offset = "0xB571B8", VA = "0xB571B8")]
	public void ForceEnd()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xB571C4", Offset = "0xB571C4", VA = "0xB571C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xB57238", Offset = "0xB57238", VA = "0xB57238")]
	public EnemySpawnZone()
	{
	}
}
[Token(Token = "0x20000F0")]
[ExecuteInEditMode]
public class EnemyTerritory : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bounds bounds;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color boundsColor;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool movableInPlayMode;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool is2D;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 oldPos;

	[Token(Token = "0x17000058")]
	public bool dotIsInRange
	{
		[Token(Token = "0x600056E")]
		[Address(RVA = "0xB556F4", Offset = "0xB556F4", VA = "0xB556F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xB572BC", Offset = "0xB572BC", VA = "0xB572BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB55294", Offset = "0xB55294", VA = "0xB55294")]
	public bool CheckInsideBoundingBox(Vector3 posToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xB57410", Offset = "0xB57410", VA = "0xB57410")]
	public void CenterBounds()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xB575BC", Offset = "0xB575BC", VA = "0xB575BC")]
	public void ResetSize()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xB57440", Offset = "0xB57440", VA = "0xB57440")]
	private void ForceHandleDrawOnInspector()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xB57638", Offset = "0xB57638", VA = "0xB57638")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xB57644", Offset = "0xB57644", VA = "0xB57644")]
	public EnemyTerritory()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ExplodeInBullets : MonoBehaviour
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Cannon cannon;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xB57B70", Offset = "0xB57B70", VA = "0xB57B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xB57BD4", Offset = "0xB57BD4", VA = "0xB57BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xB57BD8", Offset = "0xB57BD8", VA = "0xB57BD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB57BDC", Offset = "0xB57BDC", VA = "0xB57BDC")]
	private void Explode()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB57D7C", Offset = "0xB57D7C", VA = "0xB57D7C")]
	public ExplodeInBullets()
	{
	}
}
[Token(Token = "0x20000F2")]
public class FakeCyblinBoss : EnemyBase
{
	[Token(Token = "0x2000591")]
	private enum State
	{
		[Token(Token = "0x4001C8A")]
		Idle,
		[Token(Token = "0x4001C8B")]
		FlyAndShoot,
		[Token(Token = "0x4001C8C")]
		LowFly,
		[Token(Token = "0x4001C8D")]
		BulletRain,
		[Token(Token = "0x4001C8E")]
		Dead
	}

	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCC94", Offset = "0x7BCC94")]
	private sealed class <ShootSequence>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FakeCyblinBoss <>4__this;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float interval;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int times;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x1700036B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0xB5BDBC", Offset = "0xB5BDBC", VA = "0xB5BDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0xB5BE2C", Offset = "0xB5BE2C", VA = "0xB5BE2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xB5B890", Offset = "0xB5B890", VA = "0xB5B890")]
		[DebuggerHidden]
		public <ShootSequence>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xB5BCD4", Offset = "0xB5BCD4", VA = "0xB5BCD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xB5BCD8", Offset = "0xB5BCD8", VA = "0xB5BCD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xB5BDC4", Offset = "0xB5BDC4", VA = "0xB5BDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7BFAE8", Offset = "0x7BFAE8")]
	public float movementSpeed;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFAF8", Offset = "0x7BFAF8")]
	public int phaseHealth;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int numberOfPhases;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFB30", Offset = "0x7BFB30")]
	public float timeBeforeChangeSide;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int flySalvoShotCount;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float flyIntervalBetweenSalvos;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float flyIntervalBetweenShots;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFB68", Offset = "0x7BFB68")]
	public float floatWaveMagnitude;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float floatWaveFrequency;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFBA0", Offset = "0x7BFBA0")]
	public Transform flyHeight;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform floorHeight;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform leftPos;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform rightPos;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve lowFlightPath;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFBD8", Offset = "0x7BFBD8")]
	[EventRef]
	public string defeatFMODEvent;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[EventRef]
	public string jumpFMODEvent;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFC34", Offset = "0x7BFC34")]
	private bool <fightEnded>k__BackingField;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private State state;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 stateStartingPos;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float stateTimer;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float lerpTime;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float shotTimer;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float floatingTime;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float timeToShootSalvo;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool reachedMoveDestination;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentPhase;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int side;

	[Token(Token = "0x17000059")]
	public bool fightEnded
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xB5AB1C", Offset = "0xB5AB1C", VA = "0xB5AB1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE02C", Offset = "0x7CE02C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xB5AB24", Offset = "0xB5AB24", VA = "0xB5AB24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE03C", Offset = "0x7CE03C")]
		private set
		{
		}
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB5AB30", Offset = "0xB5AB30", VA = "0xB5AB30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB5ABB4", Offset = "0xB5ABB4", VA = "0xB5ABB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB5B2AC", Offset = "0xB5B2AC", VA = "0xB5B2AC")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB5B420", Offset = "0xB5B420", VA = "0xB5B420")]
	private void ResetPhaseHealth()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB5B778", Offset = "0xB5B778", VA = "0xB5B778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE04C", Offset = "0x7CE04C")]
	private IEnumerator ShootSequence(int times, float interval)
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB5B8BC", Offset = "0xB5B8BC", VA = "0xB5B8BC")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xB5B424", Offset = "0xB5B424", VA = "0xB5B424")]
	private void MoveTo(Vector2 destination, float speedMultiplier = 1f)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB5B688", Offset = "0xB5B688", VA = "0xB5B688")]
	private Vector3 FloatingMovement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB5B848", Offset = "0xB5B848", VA = "0xB5B848")]
	private float EaseInOutQuad(float k)
	{
		return default(float);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB5BA50", Offset = "0xB5BA50", VA = "0xB5BA50", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xB5BAE8", Offset = "0xB5BAE8", VA = "0xB5BAE8")]
	public void Defeat()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xB5BB68", Offset = "0xB5BB68", VA = "0xB5BB68")]
	public void AllowBehaviour(bool allow)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB5BB74", Offset = "0xB5BB74", VA = "0xB5BB74")]
	public void ResetBehaviour()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xB5BB80", Offset = "0xB5BB80", VA = "0xB5BB80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xB5BC10", Offset = "0xB5BC10", VA = "0xB5BC10", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xB5BC4C", Offset = "0xB5BC4C", VA = "0xB5BC4C")]
	private void Debug_EndBoss()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xB5BC98", Offset = "0xB5BC98", VA = "0xB5BC98")]
	public FakeCyblinBoss()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Level3FakeBossState : ProgressionState
{
	[Token(Token = "0x2000593")]
	private enum SubState
	{
		[Token(Token = "0x4001C96")]
		inactive,
		[Token(Token = "0x4001C97")]
		intro,
		[Token(Token = "0x4001C98")]
		fight,
		[Token(Token = "0x4001C99")]
		afterFight
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCA4", Offset = "0x7BCCA4")]
	private sealed class <LateBGM>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level3FakeBossState <>4__this;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InGameBGM <bgm>5__2;

		[Token(Token = "0x1700036D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x97564C", Offset = "0x97564C", VA = "0x97564C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x9756BC", Offset = "0x9756BC", VA = "0x9756BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x9751C8", Offset = "0x9751C8", VA = "0x9751C8")]
		[DebuggerHidden]
		public <LateBGM>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x975520", Offset = "0x975520", VA = "0x975520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x975524", Offset = "0x975524", VA = "0x975524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x975654", Offset = "0x975654", VA = "0x975654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCB4", Offset = "0x7BCCB4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__16_0;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__17_0;

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x975498", Offset = "0x975498", VA = "0x975498")]
		public <>c()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x9754A0", Offset = "0x9754A0", VA = "0x9754A0")]
		internal bool <PlayIntroduction>b__16_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x9754E0", Offset = "0x9754E0", VA = "0x9754E0")]
		internal bool <PlayEnding>b__17_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCC4", Offset = "0x7BCCC4")]
	private sealed class <PlayIntroduction>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level3FakeBossState <>4__this;

		[Token(Token = "0x1700036F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x975E10", Offset = "0x975E10", VA = "0x975E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0x975E80", Offset = "0x975E80", VA = "0x975E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x975274", Offset = "0x975274", VA = "0x975274")]
		[DebuggerHidden]
		public <PlayIntroduction>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x975AE0", Offset = "0x975AE0", VA = "0x975AE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x975AE4", Offset = "0x975AE4", VA = "0x975AE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x975E18", Offset = "0x975E18", VA = "0x975E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCD4", Offset = "0x7BCCD4")]
	private sealed class <PlayEnding>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level3FakeBossState <>4__this;

		[Token(Token = "0x17000371")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x975A68", Offset = "0x975A68", VA = "0x975A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002535")]
			[Address(RVA = "0x975AD8", Offset = "0x975AD8", VA = "0x975AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x975320", Offset = "0x975320", VA = "0x975320")]
		[DebuggerHidden]
		public <PlayEnding>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x9756C4", Offset = "0x9756C4", VA = "0x9756C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x9756C8", Offset = "0x9756C8", VA = "0x9756C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x975A70", Offset = "0x975A70", VA = "0x975A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BFC44", Offset = "0x7BFC44")]
	public DialogueDropdown startingDialogue;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7BFCA8", Offset = "0x7BFCA8")]
	public DialogueDropdown endingDialogue;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FakeCyblinBoss boss;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator door;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator credits;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CheckpointTrigger startingCheckpoint;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string bossThemeFMODEvent;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[EventRef]
	public string levelClearFMODEvent;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string CLLaughFMODEvent;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string doorClosesFMODEvent;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SubState currentSubState;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator bossAnimator;

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x974DFC", Offset = "0x974DFC", VA = "0x974DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x974F50", Offset = "0x974F50", VA = "0x974F50", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x975148", Offset = "0x975148", VA = "0x975148")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE0B0", Offset = "0x7CE0B0")]
	private IEnumerator LateBGM()
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9751F4", Offset = "0x9751F4", VA = "0x9751F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE114", Offset = "0x7CE114")]
	private IEnumerator PlayIntroduction()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x9752A0", Offset = "0x9752A0", VA = "0x9752A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE178", Offset = "0x7CE178")]
	private IEnumerator PlayEnding()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x97534C", Offset = "0x97534C", VA = "0x97534C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x975074", Offset = "0x975074", VA = "0x975074")]
	private void StartSubstate(SubState newSubstate)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x974F20", Offset = "0x974F20", VA = "0x974F20")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x9753B4", Offset = "0x9753B4", VA = "0x9753B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x975428", Offset = "0x975428", VA = "0x975428")]
	public Level3FakeBossState()
	{
	}
}
[Token(Token = "0x20000F4")]
public class FreakoFroggo : EnemyBase
{
	[Token(Token = "0x2000598")]
	private enum State
	{
		[Token(Token = "0x4001CA8")]
		Waiting,
		[Token(Token = "0x4001CA9")]
		Following,
		[Token(Token = "0x4001CAA")]
		Attacking,
		[Token(Token = "0x4001CAB")]
		Returning
	}

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sensor dotSensor;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnemyTerritory followTerritory;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speed;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float jumpSpeed;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float groundTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float attackCooldown;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float groundTimer;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float stateTimer;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private State state;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentSpeed;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float cooldownCounter;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 originalPos;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[EventRef]
	public string jumpFMODEvent;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[EventRef]
	public string lickFMODEvent;

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xAD3AD4", Offset = "0xAD3AD4", VA = "0xAD3AD4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xAD3B9C", Offset = "0xAD3B9C", VA = "0xAD3B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xAD4388", Offset = "0xAD4388", VA = "0xAD4388")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xAD4908", Offset = "0xAD4908", VA = "0xAD4908")]
	public FreakoFroggo()
	{
	}
}
[Token(Token = "0x20000F5")]
public class WeirdoFroggo : EnemyBase
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float groundInterval;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float jumpSpeed;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string jumpFMODEvent;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string animJumpBool;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float groundTempo;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x185155C", Offset = "0x185155C", VA = "0x185155C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x18515D8", Offset = "0x18515D8", VA = "0x18515D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x18517C8", Offset = "0x18517C8", VA = "0x18517C8")]
	public void Shoot_AnimEvent()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x185180C", Offset = "0x185180C", VA = "0x185180C")]
	public WeirdoFroggo()
	{
	}
}
[Token(Token = "0x20000F6")]
public class WeirdoFroggo_AnimShootEvent : MonoBehaviour
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WeirdoFroggo froggoController;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1851878", Offset = "0x1851878", VA = "0x1851878")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x18518DC", Offset = "0x18518DC", VA = "0x18518DC")]
	public void Shoot_AnimEvent()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1851908", Offset = "0x1851908", VA = "0x1851908")]
	public WeirdoFroggo_AnimShootEvent()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Hurtbox : MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7BFD7C", Offset = "0x7BFD7C")]
	public Damageable damageable;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bullet bullet;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HitBox.Type hitByType;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool allowHitByDavid;

	[Token(Token = "0x4000681")]
	protected const string hitTag = "PlayerAttack";

	[Token(Token = "0x4000682")]
	protected const string davidHitTag = "DavidAttack";

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xAE4E18", Offset = "0xAE4E18", VA = "0xAE4E18")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xAE4EC8", Offset = "0xAE4EC8", VA = "0xAE4EC8")]
	protected void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xAE4F10", Offset = "0xAE4F10", VA = "0xAE4F10")]
	protected void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xAE4F58", Offset = "0xAE4F58", VA = "0xAE4F58", Slot = "4")]
	protected virtual void CheckCollision(GameObject obj)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xAE5250", Offset = "0xAE5250", VA = "0xAE5250")]
	public Hurtbox()
	{
	}
}
[Token(Token = "0x20000F8")]
public class JumpingCrab : EnemyBase
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sensor dotSensor;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float jumpSpeed;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WanderBehaviour wanderBehaviour;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool jumping;

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xAFDA08", Offset = "0xAFDA08", VA = "0xAFDA08", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xAFDA78", Offset = "0xAFDA78", VA = "0xAFDA78")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xAFDB6C", Offset = "0xAFDB6C", VA = "0xAFDB6C")]
	public JumpingCrab()
	{
	}
}
[Token(Token = "0x20000F9")]
public class MolochMinion : EnemyBase
{
	[Token(Token = "0x2000599")]
	private enum State
	{
		[Token(Token = "0x4001CAD")]
		Waiting,
		[Token(Token = "0x4001CAE")]
		Following,
		[Token(Token = "0x4001CAF")]
		Attacking,
		[Token(Token = "0x4001CB0")]
		Returning
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCE4", Offset = "0x7BCCE4")]
	private sealed class <Attack>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MolochMinion <>4__this;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000373")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0xA38A88", Offset = "0xA38A88", VA = "0xA38A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0xA38AF8", Offset = "0xA38AF8", VA = "0xA38AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xA38308", Offset = "0xA38308", VA = "0xA38308")]
		[DebuggerHidden]
		public <Attack>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xA386BC", Offset = "0xA386BC", VA = "0xA386BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xA386C0", Offset = "0xA386C0", VA = "0xA386C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xA38A90", Offset = "0xA38A90", VA = "0xA38A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sensor dotSensor;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EnemyTerritory followTerritory;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float speed;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float minimumDistanceToDot;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float vomitSpread;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int vomitCount;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float vomitRecharge;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool stayAtPosition;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool isInRealWorld;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public new Animator animator;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float stateTimer;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private State state;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion originalCannonRotation;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float vomitCooldownCounter;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[EventRef]
	public string vomitFMODEvent;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 originalPos;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA37A00", Offset = "0xA37A00", VA = "0xA37A00", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA37ADC", Offset = "0xA37ADC", VA = "0xA37ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA38100", Offset = "0xA38100", VA = "0xA38100")]
	private void CalculateTargetPosition(out Vector3 targetDir, out Vector2 targetDir2D)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA38288", Offset = "0xA38288", VA = "0xA38288")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE1DC", Offset = "0x7CE1DC")]
	private IEnumerator Attack()
	{
		return null;
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xA38334", Offset = "0xA38334", VA = "0xA38334", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA380BC", Offset = "0xA380BC", VA = "0xA380BC")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA3840C", Offset = "0xA3840C", VA = "0xA3840C")]
	private void HitTrigger()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA38470", Offset = "0xA38470", VA = "0xA38470")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA38510", Offset = "0xA38510", VA = "0xA38510", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xA385BC", Offset = "0xA385BC", VA = "0xA385BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xA38694", Offset = "0xA38694", VA = "0xA38694")]
	public MolochMinion()
	{
	}
}
[Token(Token = "0x20000FA")]
public class MuffinEnemy : EnemyBase
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float shootingInterval;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Cannon[] cannons;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA39518", Offset = "0xA39518", VA = "0xA39518")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA39588", Offset = "0xA39588", VA = "0xA39588")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA3964C", Offset = "0xA3964C", VA = "0xA3964C")]
	public void MuffinShoot()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA396E4", Offset = "0xA396E4", VA = "0xA396E4")]
	public MuffinEnemy()
	{
	}
}
[Token(Token = "0x20000FB")]
public class RotatingCannonEnemy : EnemyBase
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float shootingInterval;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool diagonal;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA68DD0", Offset = "0xA68DD0", VA = "0xA68DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA68FBC", Offset = "0xA68FBC", VA = "0xA68FBC")]
	public RotatingCannonEnemy()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ThrowingSkeleton : EnemyBase
{
	[Token(Token = "0x200059B")]
	private enum State
	{
		[Token(Token = "0x4001CB6")]
		idle,
		[Token(Token = "0x4001CB7")]
		preparing,
		[Token(Token = "0x4001CB8")]
		throwing
	}

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform content2D;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float shootIntervalMin;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float shootIntervalMax;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float anticipationDuration;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timer;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float nextShot;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform target;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float lowestAngle;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float highestAngle;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float dotGravity;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float maxDistance;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float debugSphereRadius;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float h;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private State state;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float stateTimer;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA86128", Offset = "0xA86128", VA = "0xA86128")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA86208", Offset = "0xA86208", VA = "0xA86208", Slot = "6")]
	protected override void EnemyReset()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA862D0", Offset = "0xA862D0", VA = "0xA862D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xA8650C", Offset = "0xA8650C", VA = "0xA8650C")]
	private void ThrowAnimationEvent()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xA86160", Offset = "0xA86160", VA = "0xA86160")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xA8660C", Offset = "0xA8660C", VA = "0xA8660C")]
	private void RotateGun()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xA8675C", Offset = "0xA8675C", VA = "0xA8675C")]
	private void CalculateAngleToHitTarget(out float? theta1)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xA86988", Offset = "0xA86988", VA = "0xA86988")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA86B34", Offset = "0xA86B34", VA = "0xA86B34")]
	public ThrowingSkeleton()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SpawnWave : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool waitForDefeatAll;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool skippable;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool hardcoreOnly;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFDC4", Offset = "0x7BFDC4")]
	private bool <defeatedAll>k__BackingField;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyBase[] enemies;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EnemySpawnZone waveController;

	[Token(Token = "0x1700005A")]
	public bool defeatedAll
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xA745D8", Offset = "0xA745D8", VA = "0xA745D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE240", Offset = "0x7CE240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xA745E0", Offset = "0xA745E0", VA = "0xA745E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE250", Offset = "0x7CE250")]
		private set
		{
		}
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xA745EC", Offset = "0xA745EC", VA = "0xA745EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xA7467C", Offset = "0xA7467C", VA = "0xA7467C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xA74764", Offset = "0xA74764", VA = "0xA74764")]
	public void ResetWave()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA746A4", Offset = "0xA746A4", VA = "0xA746A4")]
	public bool DefeatedAll()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA7476C", Offset = "0xA7476C", VA = "0xA7476C")]
	public void KillEverybody()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA7482C", Offset = "0xA7482C", VA = "0xA7482C")]
	public SpawnWave()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SteeringMovement : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angularSpeed;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _pauseMovement;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _target;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFDD4", Offset = "0x7BFDD4")]
	private bool <reachedTarget>k__BackingField;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhysicsBody body;

	[Token(Token = "0x1700005B")]
	public bool pauseMovement
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xA77CE8", Offset = "0xA77CE8", VA = "0xA77CE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xA77CF0", Offset = "0xA77CF0", VA = "0xA77CF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Vector3 target
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xA77E68", Offset = "0xA77E68", VA = "0xA77E68")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xA77E74", Offset = "0xA77E74", VA = "0xA77E74")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public bool reachedTarget
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xA77E90", Offset = "0xA77E90", VA = "0xA77E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE260", Offset = "0x7CE260")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xA77E84", Offset = "0xA77E84", VA = "0xA77E84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE270", Offset = "0x7CE270")]
		private set
		{
		}
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA77E98", Offset = "0xA77E98", VA = "0xA77E98")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA77EFC", Offset = "0xA77EFC", VA = "0xA77EFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA78234", Offset = "0xA78234", VA = "0xA78234")]
	public float TimeUntilArrival()
	{
		return default(float);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xA78364", Offset = "0xA78364", VA = "0xA78364")]
	public SteeringMovement()
	{
	}
}
[Token(Token = "0x20000FF")]
public class BeatEmUpPlayerResults : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RivalController rival;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text scoreDisplay;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pile;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform minHeight;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform maxHeight;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject position;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int targetScore;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetHeight;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xA9E4D0", Offset = "0xA9E4D0", VA = "0xA9E4D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xA9E5E0", Offset = "0xA9E5E0", VA = "0xA9E5E0")]
	public void UpdateBar(float transition, float bestScore)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xA9E7B0", Offset = "0xA9E7B0", VA = "0xA9E7B0")]
	public void ShowPosition()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xA9E7E4", Offset = "0xA9E7E4", VA = "0xA9E7E4")]
	public BeatEmUpPlayerResults()
	{
	}
}
[Token(Token = "0x2000100")]
public class BeatEmUpResultsScreen : MonoBehaviour
{
	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCCF4", Offset = "0x7BCCF4")]
	private sealed class <RollScore>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeatEmUpResultsScreen <>4__this;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <transition>5__2;

		[Token(Token = "0x17000375")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0xA9EBEC", Offset = "0xA9EBEC", VA = "0xA9EBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0xA9EC5C", Offset = "0xA9EC5C", VA = "0xA9EC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xA9E924", Offset = "0xA9E924", VA = "0xA9E924")]
		[DebuggerHidden]
		public <RollScore>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xA9E964", Offset = "0xA9E964", VA = "0xA9E964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xA9E968", Offset = "0xA9E968", VA = "0xA9E968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xA9EBF4", Offset = "0xA9EBF4", VA = "0xA9EBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int bestScore;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BeatEmUpPlayerResults[] playerResults;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xA9E7EC", Offset = "0xA9E7EC", VA = "0xA9E7EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xA9E850", Offset = "0xA9E850", VA = "0xA9E850")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xA9E8A4", Offset = "0xA9E8A4", VA = "0xA9E8A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE280", Offset = "0x7CE280")]
	private IEnumerator RollScore()
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xA9E950", Offset = "0xA9E950", VA = "0xA9E950")]
	public BeatEmUpResultsScreen()
	{
	}
}
[Token(Token = "0x2000101")]
public class Pendulum : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform content;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve angleByTime;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float period;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float amplitude;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float periodOffset;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CheckBeingRendered checkRendered;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastVisibleTime;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC40478", Offset = "0xC40478", VA = "0xC40478")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC40504", Offset = "0xC40504", VA = "0xC40504")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC405E8", Offset = "0xC405E8", VA = "0xC405E8")]
	public Pendulum()
	{
	}
}
[Token(Token = "0x2000102")]
public class Shackle : MonoBehaviour
{
	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xA7129C", Offset = "0xA7129C", VA = "0xA7129C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xA712A0", Offset = "0xA712A0", VA = "0xA712A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xA712A4", Offset = "0xA712A4", VA = "0xA712A4")]
	public Shackle()
	{
	}
}
[Token(Token = "0x2000103")]
public class LostWoodsMaze : MonoBehaviour
{
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Teleport entryTeleport;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Teleport[] crossroadExits;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] crossroadDestinations;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform outside;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform finalDestination;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] solution;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int progress;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xA31690", Offset = "0xA31690", VA = "0xA31690")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xA317BC", Offset = "0xA317BC", VA = "0xA317BC")]
	private void EnterMaze(int id)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xA3195C", Offset = "0xA3195C", VA = "0xA3195C")]
	private void GoThroughDoor(int id)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xA317C8", Offset = "0xA317C8", VA = "0xA317C8")]
	private void UpdateExits(int progress)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xA31AA0", Offset = "0xA31AA0", VA = "0xA31AA0")]
	public LostWoodsMaze()
	{
	}
}
[Token(Token = "0x2000104")]
public class BiscuitFlammableBlock : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xAA0740", Offset = "0xAA0740", VA = "0xAA0740")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xAA07A4", Offset = "0xAA07A4", VA = "0xAA07A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xAA07A8", Offset = "0xAA07A8", VA = "0xAA07A8")]
	public BiscuitFlammableBlock()
	{
	}
}
[Token(Token = "0x2000105")]
public class DreamSlideshowManager : MonoBehaviour
{
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DreamSlideshowManager instance;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject activeSlide;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xB52E30", Offset = "0xB52E30", VA = "0xB52E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xB52F10", Offset = "0xB52F10", VA = "0xB52F10")]
	public void SetCurrentSlide(GameObject newSlide)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xB52F70", Offset = "0xB52F70", VA = "0xB52F70")]
	public DreamSlideshowManager()
	{
	}
}
[Token(Token = "0x2000106")]
public class DreamSlideshowTrigger : MonoBehaviour
{
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject slide;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool oneUse;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider2D trigger;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xB52F78", Offset = "0xB52F78", VA = "0xB52F78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xB52FFC", Offset = "0xB52FFC", VA = "0xB52FFC")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xB530D4", Offset = "0xB530D4", VA = "0xB530D4")]
	public DreamSlideshowTrigger()
	{
	}
}
[Token(Token = "0x2000107")]
public class TutorialCyblinLord : MonoBehaviour
{
	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineCutscene cutscene;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Damageable damageable;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xA90F28", Offset = "0xA90F28", VA = "0xA90F28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xA90F8C", Offset = "0xA90F8C", VA = "0xA90F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xA90FF0", Offset = "0xA90FF0", VA = "0xA90FF0")]
	public TutorialCyblinLord()
	{
	}
}
[Token(Token = "0x2000108")]
public class Explosion : MonoBehaviour, IPoolable<Explosion>
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFDE4", Offset = "0x7BFDE4")]
	private ObjectPool<Explosion> <poolComponent>k__BackingField;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer sprite;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] frames;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fps;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x1700005E")]
	public ObjectPool<Explosion> poolComponent
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xB57D84", Offset = "0xB57D84", VA = "0xB57D84", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2E4", Offset = "0x7CE2E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xB57D8C", Offset = "0xB57D8C", VA = "0xB57D8C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE2F4", Offset = "0x7CE2F4")]
		set
		{
		}
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB57D94", Offset = "0xB57D94", VA = "0xB57D94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB57E30", Offset = "0xB57E30", VA = "0xB57E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB57DBC", Offset = "0xB57DBC", VA = "0xB57DBC")]
	private void SetFrame(int n)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB57F28", Offset = "0xB57F28", VA = "0xB57F28")]
	public Explosion()
	{
	}
}
[Token(Token = "0x2000109")]
public class ExplosionPool : ObjectPool<Explosion>
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasDefaultScale;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 defaultScale;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Explosion> spawnedExplosions;

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB57F38", Offset = "0xB57F38", VA = "0xB57F38")]
	public Explosion Explode(Vector3 position, float scale = 1f)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB580D8", Offset = "0xB580D8", VA = "0xB580D8")]
	public Explosion Explode(Vector3 position, Vector3 scale, [Optional] Vector3 rotation)
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB5821C", Offset = "0xB5821C", VA = "0xB5821C", Slot = "5")]
	public override void OnPop(Explosion obj)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB5828C", Offset = "0xB5828C", VA = "0xB5828C", Slot = "6")]
	public override void OnPush(Explosion obj)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB582FC", Offset = "0xB582FC", VA = "0xB582FC")]
	public void PushAllExplosions()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB583C0", Offset = "0xB583C0", VA = "0xB583C0")]
	public ExplosionPool()
	{
	}
}
[Token(Token = "0x200010A")]
public class FollowWithDelay : MonoBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int frameDataLength;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] positions;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xAD2AF4", Offset = "0xAD2AF4", VA = "0xAD2AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xAD2B58", Offset = "0xAD2B58", VA = "0xAD2B58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xAD2D38", Offset = "0xAD2D38", VA = "0xAD2D38")]
	public FollowWithDelay()
	{
	}
}
[Token(Token = "0x200010B")]
public class HazardShot : MonoBehaviour, IPoolableStandalone<HazardShot>
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BFDF4", Offset = "0x7BFDF4")]
	private ObjectPoolStandalone<HazardShot> <pool>k__BackingField;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask hurtboxLayer;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lifeTime;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 forwardDir;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string dropFMODEvent;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameTV gameTV;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject coll;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delayCollActiveBy;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhysicsBody body;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timer;

	[Token(Token = "0x1700005F")]
	public ObjectPoolStandalone<HazardShot> pool
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0xAE1DE4", Offset = "0xAE1DE4", VA = "0xAE1DE4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE304", Offset = "0x7CE304")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000606")]
		[Address(RVA = "0xAE1DEC", Offset = "0xAE1DEC", VA = "0xAE1DEC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE314", Offset = "0x7CE314")]
		set
		{
		}
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xAE1DF4", Offset = "0xAE1DF4", VA = "0xAE1DF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xAE1E58", Offset = "0xAE1E58", VA = "0xAE1E58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xAE1F88", Offset = "0xAE1F88", VA = "0xAE1F88")]
	public void Shoot(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xAE21AC", Offset = "0xAE21AC", VA = "0xAE21AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xAE2240", Offset = "0xAE2240", VA = "0xAE2240")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xAE2324", Offset = "0xAE2324", VA = "0xAE2324")]
	private void CollisionEnter(PhysicsBodyCollision col)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xAE2390", Offset = "0xAE2390", VA = "0xAE2390")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xAE2328", Offset = "0xAE2328", VA = "0xAE2328")]
	public void PushToPool()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xAE2438", Offset = "0xAE2438", VA = "0xAE2438")]
	public HazardShot()
	{
	}
}
[Token(Token = "0x200010C")]
public class ShootingHazard : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7BFE14", Offset = "0x7BFE14")]
	public GameObject shotPrefab;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dropPoint;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedMultiplier;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delayFirstDropBy;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float dropInterval;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 direction;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObjectPoolStandalone<HazardShot> shotPool;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyTerritory groupTerritory;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float shootTempo;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float invisibleTimer;

	[Token(Token = "0x40006FF")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xA71454", Offset = "0xA71454", VA = "0xA71454")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xA71548", Offset = "0xA71548", VA = "0xA71548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xA7179C", Offset = "0xA7179C", VA = "0xA7179C")]
	public ShootingHazard()
	{
	}
}
[Token(Token = "0x200010D")]
public class Spike3D : MonoBehaviour
{
	[Token(Token = "0x200059D")]
	private enum SpikeStates
	{
		[Token(Token = "0x4001CBE")]
		Hidden,
		[Token(Token = "0x4001CBF")]
		Activating,
		[Token(Token = "0x4001CC0")]
		Active,
		[Token(Token = "0x4001CC1")]
		Returning,
		[Token(Token = "0x4001CC2")]
		Triggered
	}

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spikeObj;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform activePoint;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform hiddenPoint;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve smoothingCurve;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float idleTime;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeToTrigger;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float showSpeed;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float hideSpeed;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isTimed;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string triggeredSoundEvent;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string spikeUpSoundEvent;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SpikeStates currentState;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float counter;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool invisible;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float invisibleTimer;

	[Token(Token = "0x4000710")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xA75264", Offset = "0xA75264", VA = "0xA75264")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA752A8", Offset = "0xA752A8", VA = "0xA752A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xA7526C", Offset = "0xA7526C", VA = "0xA7526C")]
	private void ChangeState(SpikeStates newState)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xA756E8", Offset = "0xA756E8", VA = "0xA756E8")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xA75790", Offset = "0xA75790", VA = "0xA75790")]
	public Spike3D()
	{
	}
}
[Token(Token = "0x200010E")]
public class SpikeTopDown : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] spikeSprites;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D hitbox;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeUp;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFE6C", Offset = "0x7BFE6C")]
	public bool isTimed;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeDown;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFEA4", Offset = "0x7BFEA4")]
	public float delayAfterTrigger;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string triggeredSoundEvent;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string spikeUpSoundEvent;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isActive;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool wasTriggered;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool invisible;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float invisibleTimer;

	[Token(Token = "0x400071F")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xA757A4", Offset = "0xA757A4", VA = "0xA757A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xA759C8", Offset = "0xA759C8", VA = "0xA759C8")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA75A7C", Offset = "0xA75A7C", VA = "0xA75A7C")]
	private void TriggerSpike()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xA758C4", Offset = "0xA758C4", VA = "0xA758C4")]
	private void SetSpikeActive(bool activate)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xA75A84", Offset = "0xA75A84", VA = "0xA75A84")]
	public SpikeTopDown()
	{
	}
}
[Token(Token = "0x200010F")]
public class HitBox : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	public enum Type
	{
		[Token(Token = "0x4001CC4")]
		Any,
		[Token(Token = "0x4001CC5")]
		Normal,
		[Token(Token = "0x4001CC6")]
		Real,
		[Token(Token = "0x4001CC7")]
		LaserGun,
		[Token(Token = "0x4001CC8")]
		MachineGun,
		[Token(Token = "0x4001CC9")]
		Flame,
		[Token(Token = "0x4001CCA")]
		Explosion,
		[Token(Token = "0x4001CCB")]
		Bubble,
		[Token(Token = "0x4001CCC")]
		Knockout,
		[Token(Token = "0x4001CCD")]
		Banana
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Type type;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool instaKill;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isIngame;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameTV gameTV;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string hitFMODEvent;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xAE39BC", Offset = "0xAE39BC", VA = "0xAE39BC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xAE3B40", Offset = "0xAE3B40", VA = "0xAE3B40")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xAE39FC", Offset = "0xAE39FC", VA = "0xAE39FC")]
	private void Hit(Transform obj)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xAE3B80", Offset = "0xAE3B80", VA = "0xAE3B80")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xAE3C20", Offset = "0xAE3C20", VA = "0xAE3C20")]
	public HitBox()
	{
	}
}
[Token(Token = "0x2000110")]
public interface IDamageable
{
	[Token(Token = "0x6000622")]
	void ProcessDamage(float damage, HitBox.Type type, out float newDamage);
}
[Token(Token = "0x2000111")]
public interface IHitboxTrigger
{
	[Token(Token = "0x6000623")]
	void Hit(Transform obj);
}
[Token(Token = "0x2000112")]
public class InGameAudioManager : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD04", Offset = "0x7BCD04")]
	private sealed class <MoveToRealWorld_Coroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000377")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xAE92E0", Offset = "0xAE92E0", VA = "0xAE92E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xAE9350", Offset = "0xAE9350", VA = "0xAE9350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xAE7F34", Offset = "0xAE7F34", VA = "0xAE7F34")]
		[DebuggerHidden]
		public <MoveToRealWorld_Coroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xAE91F0", Offset = "0xAE91F0", VA = "0xAE91F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xAE91F4", Offset = "0xAE91F4", VA = "0xAE91F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xAE92E8", Offset = "0xAE92E8", VA = "0xAE92E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD14", Offset = "0x7BCD14")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__48_0;

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xAE8FCC", Offset = "0xAE8FCC", VA = "0xAE8FCC")]
		public <>c()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xAE8FD4", Offset = "0xAE8FD4", VA = "0xAE8FD4")]
		internal bool <UnpauseGameBGM>b__48_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD24", Offset = "0x7BCD24")]
	private sealed class <UnpauseGameBGM>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameTV tv;

		[Token(Token = "0x17000379")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xAE94AC", Offset = "0xAE94AC", VA = "0xAE94AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xAE951C", Offset = "0xAE951C", VA = "0xAE951C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xAE84F4", Offset = "0xAE84F4", VA = "0xAE84F4")]
		[DebuggerHidden]
		public <UnpauseGameBGM>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xAE9358", Offset = "0xAE9358", VA = "0xAE9358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xAE935C", Offset = "0xAE935C", VA = "0xAE935C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xAE94B4", Offset = "0xAE94B4", VA = "0xAE94B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD34", Offset = "0x7BCD34")]
	private sealed class <DelayedStopBGMEnumerator>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameTV tv;

		[Token(Token = "0x1700037B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xAE9178", Offset = "0xAE9178", VA = "0xAE9178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xAE91E8", Offset = "0xAE91E8", VA = "0xAE91E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xAE8624", Offset = "0xAE8624", VA = "0xAE8624")]
		[DebuggerHidden]
		public <DelayedStopBGMEnumerator>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xAE9110", Offset = "0xAE9110", VA = "0xAE9110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xAE9114", Offset = "0xAE9114", VA = "0xAE9114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xAE9180", Offset = "0xAE9180", VA = "0xAE9180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD44", Offset = "0x7BCD44")]
	private sealed class <DelayedStopAllBGM>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InGameAudioManager <>4__this;

		[Token(Token = "0x1700037D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xAE9098", Offset = "0xAE9098", VA = "0xAE9098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0xAE9108", Offset = "0xAE9108", VA = "0xAE9108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xAE86EC", Offset = "0xAE86EC", VA = "0xAE86EC")]
		[DebuggerHidden]
		public <DelayedStopAllBGM>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xAE8FD8", Offset = "0xAE8FD8", VA = "0xAE8FD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xAE8FDC", Offset = "0xAE8FDC", VA = "0xAE8FDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xAE90A0", Offset = "0xAE90A0", VA = "0xAE90A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InGameAudioManager instance;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TVController tvController;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delaySoundAfterTVTurnedOn;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volume;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string inGameSFXBusPath;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFF0C", Offset = "0x7BFF0C")]
	public GameObject tv;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform source;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFF44", Offset = "0x7BFF44")]
	public GameObject tv_Alt;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform altSource;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFF7C", Offset = "0x7BFF7C")]
	public bool restoreBGMOnRespawn;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ProgressionTracker allowBGMAtStates;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventInstance currentBGM;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InGameBGM currentBGMInfo;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance currentBGM_Alt;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InGameBGM currentBGMAltInfo;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Bus inGameSFXBus;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool canEmit;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool forceEmit;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timer;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool becameRW;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private InGameBGM desiredBGM;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private InGameBGM desiredBGMAlt;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool updateBGM;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private InGameBGM savedBGM;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private InGameBGM savedBGM_alt;

	[Token(Token = "0x17000060")]
	private bool tvOn
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xAE7168", Offset = "0xAE7168", VA = "0xAE7168")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xAE7230", Offset = "0xAE7230", VA = "0xAE7230")]
	public static bool CanEmitFullVolume()
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xAE72C0", Offset = "0xAE72C0", VA = "0xAE72C0")]
	public static bool BecameRealWorld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xAE7320", Offset = "0xAE7320", VA = "0xAE7320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xAE7680", Offset = "0xAE7680", VA = "0xAE7680")]
	private void OnChangeState(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xAE782C", Offset = "0xAE782C", VA = "0xAE782C")]
	private void Update()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xAE7A40", Offset = "0xAE7A40", VA = "0xAE7A40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xAE7E44", Offset = "0xAE7E44", VA = "0xAE7E44")]
	public void OverrideCanEmit(bool value = true)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xAE7E50", Offset = "0xAE7E50", VA = "0xAE7E50")]
	public static void MoveToRealWorld()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xAE7ED4", Offset = "0xAE7ED4", VA = "0xAE7ED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE324", Offset = "0x7CE324")]
	private IEnumerator MoveToRealWorld_Coroutine()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xAE7F60", Offset = "0xAE7F60", VA = "0xAE7F60")]
	public static bool HasInstanceInScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xAD8A8C", Offset = "0xAD8A8C", VA = "0xAD8A8C")]
	public static void PlayDotOneShot(string fmodEventPath, GameObject dot)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xAE7FDC", Offset = "0xAE7FDC", VA = "0xAE7FDC")]
	public static GameObject GetDotSource(GameObject fallbackDot)
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xAD4778", Offset = "0xAD4778", VA = "0xAD4778")]
	public static void PlayOneShot(string fmodEventPath, GameTV tvSource = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xAD9820", Offset = "0xAD9820", VA = "0xAD9820")]
	public static EventInstance PlayEventInstance(string fmodEventPath, GameTV tvSource = GameTV.LeftTV)
	{
		return default(EventInstance);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xAD0704", Offset = "0xAD0704", VA = "0xAD0704")]
	public static void PlayEventInstance(EventInstance fmodEventInstance, GameTV tvSource = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xAD9980", Offset = "0xAD9980", VA = "0xAD9980")]
	public static void StopEventInstance(EventInstance fmodEventInstance, FMOD.Studio.STOP_MODE stopMode = FMOD.Studio.STOP_MODE.IMMEDIATE)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xAE80F0", Offset = "0xAE80F0", VA = "0xAE80F0")]
	public static void PlayBGM(InGameBGM desiredBGM, GameTV tvSource = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xAE7BFC", Offset = "0xAE7BFC", VA = "0xAE7BFC")]
	private static void SetNewBGM(ref EventInstance currentBGM, ref InGameBGM newBGMInfo, GameTV gameTV)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xAE8298", Offset = "0xAE8298", VA = "0xAE8298")]
	private static bool CanChangeBGM(InGameBGM newBGM, GameTV gameTV)
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xAE8394", Offset = "0xAE8394", VA = "0xAE8394")]
	public static void SetBGMVolume(float newVolume01, GameTV tvSource = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xAE7910", Offset = "0xAE7910", VA = "0xAE7910")]
	public static void PauseBGM(bool paused, GameTV tvSource = GameTV.LeftTV, bool unpauseImmediately = false)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xAE8480", Offset = "0xAE8480", VA = "0xAE8480")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE388", Offset = "0x7CE388")]
	private IEnumerator UnpauseGameBGM(GameTV tv)
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xAE76E8", Offset = "0xAE76E8", VA = "0xAE76E8")]
	public static void StopBGM(GameTV tvSource = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xAE8520", Offset = "0xAE8520", VA = "0xAE8520")]
	public static void DelayedStopBGM(GameTV tv = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xAE85B0", Offset = "0xAE85B0", VA = "0xAE85B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE3EC", Offset = "0x7CE3EC")]
	private IEnumerator DelayedStopBGMEnumerator(GameTV tv)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xAE8650", Offset = "0xAE8650", VA = "0xAE8650")]
	public void StopAllBGM()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xAE866C", Offset = "0xAE866C", VA = "0xAE866C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE450", Offset = "0x7CE450")]
	private IEnumerator DelayedStopAllBGM()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xAE8718", Offset = "0xAE8718", VA = "0xAE8718")]
	public static EventInstance GetCurrentBGM(GameTV tv)
	{
		return default(EventInstance);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xAE878C", Offset = "0xAE878C", VA = "0xAE878C")]
	public static void StopInGameSFX()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xAE87F4", Offset = "0xAE87F4", VA = "0xAE87F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xAE8998", Offset = "0xAE8998", VA = "0xAE8998")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xAE8B3C", Offset = "0xAE8B3C", VA = "0xAE8B3C")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xAE8B98", Offset = "0xAE8B98", VA = "0xAE8B98")]
	private void SaveCurrentBGM(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xAE8BFC", Offset = "0xAE8BFC", VA = "0xAE8BFC")]
	public static void OverrideSavedBGM(InGameBGM bgm, GameTV tv = GameTV.LeftTV)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xAE8CB8", Offset = "0xAE8CB8", VA = "0xAE8CB8")]
	public static void LoadSavedBGM()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xAE8EB4", Offset = "0xAE8EB4", VA = "0xAE8EB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xAE8EEC", Offset = "0xAE8EEC", VA = "0xAE8EEC")]
	public InGameAudioManager()
	{
	}
}
[Token(Token = "0x2000113")]
public enum GameTV
{
	[Token(Token = "0x4000740")]
	LeftTV,
	[Token(Token = "0x4000741")]
	RightTV
}
[Serializable]
[Token(Token = "0x2000114")]
public class InGameBGM
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[EventRef]
	public string eventPath;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7BFFC4", Offset = "0x7BFFC4")]
	public int priority;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volume01;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool startedPaused;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool save;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool saved;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xAE9524", Offset = "0xAE9524", VA = "0xAE9524")]
	public InGameBGM(string eventPath, int priority, float volume01 = -1f, bool save = true)
	{
	}
}
[Token(Token = "0x2000115")]
public class InGameCharacterMovement : MonoBehaviour
{
	[Token(Token = "0x20005A4")]
	public enum MovementMode
	{
		[Token(Token = "0x4001CDC")]
		NormalPlane,
		[Token(Token = "0x4001CDD")]
		VerticalPlane,
		[Token(Token = "0x4001CDE")]
		AroundFirstPerson
	}

	[Token(Token = "0x20005A5")]
	public enum FlipMode
	{
		[Token(Token = "0x4001CE0")]
		NotFlipped,
		[Token(Token = "0x4001CE1")]
		Flipped,
		[Token(Token = "0x4001CE2")]
		Automatic
	}

	[Token(Token = "0x20005A6")]
	public delegate void Event(InGameCharacterMovement charMov);

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7BFFFC", Offset = "0x7BFFFC")]
	public MovementMode movementMode;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ignorePhysics;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform referenceCamera;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C0034", Offset = "0x7C0034")]
	public int movementDirections;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxSlopeAngle;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C006C", Offset = "0x7C006C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C006C", Offset = "0x7C006C")]
	public Transform content2d;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C00CC", Offset = "0x7C00CC")]
	public Transform content3d;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C0104", Offset = "0x7C0104")]
	public InGameCharacterMovementGroundSensor groundSensor;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C013C", Offset = "0x7C013C")]
	public FlipMode flipMode;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool lookRotationAutomatic;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 lookRotation;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0174", Offset = "0x7C0174")]
	public Collider2D colliderFriction2d;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider colliderFriction3d;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C01AC", Offset = "0x7C01AC")]
	public LayerMask floorMask;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float floorRaycastLength;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C01E4", Offset = "0x7C01E4")]
	private Vector2 <direction>k__BackingField;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C01F4", Offset = "0x7C01F4")]
	private float <speed>k__BackingField;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0204", Offset = "0x7C0204")]
	private bool <isGrounded>k__BackingField;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0214", Offset = "0x7C0214")]
	private Vector3 <groundNormal>k__BackingField;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0224", Offset = "0x7C0224")]
	private Transform <groundAnchorable>k__BackingField;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool wasGrounded;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float groundTolerance;

	[Token(Token = "0x4000760")]
	private const float groundToleranceTotal = 0.1f;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float groundAnchorableTolerance;

	[Token(Token = "0x4000762")]
	private const float groundAnchorableToleranceTotal = 0.1f;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool groundCollision;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 groundCollisionNormal;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform groundCollisionAnchorable;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float jumpTolerance;

	[Token(Token = "0x4000767")]
	private const float jumpToleranceTotal = 0.1f;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public bool lockRotation;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool jumpOnFixedUpdate;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float jumpOnFixedUpdateSpeed;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool slopeChanged;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool jumped;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0264", Offset = "0x7C0264")]
	private bool <flipped>k__BackingField;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector2 forward;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector2 right;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 spacialDirection;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform groundAnchor;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 previousAnchorPoint;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PhysicsBody body;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PhysicsMaterial2D colliderFriction2dOff;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PhysicsMaterial2D colliderFriction2dOn;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PhysicMaterial colliderFriction3dOff;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PhysicMaterial colliderFriction3dOn;

	[Token(Token = "0x4000778")]
	private const float colliderFrictionOffValue = 0f;

	[Token(Token = "0x4000779")]
	private const float colliderFrictionOnValue = 100000f;

	[Token(Token = "0x17000061")]
	public Vector2 direction
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xAD3AB0", Offset = "0xAD3AB0", VA = "0xAD3AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4B4", Offset = "0x7CE4B4")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xAE9588", Offset = "0xAE9588", VA = "0xAE9588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4C4", Offset = "0x7CE4C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float speed
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xAE9590", Offset = "0xAE9590", VA = "0xAE9590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4D4", Offset = "0x7CE4D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xAE9598", Offset = "0xAE9598", VA = "0xAE9598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4E4", Offset = "0x7CE4E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool isGrounded
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xAD2100", Offset = "0xAD2100", VA = "0xAD2100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE4F4", Offset = "0x7CE4F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000650")]
		[Address(RVA = "0xAE95A0", Offset = "0xAE95A0", VA = "0xAE95A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE504", Offset = "0x7CE504")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public Vector3 groundNormal
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0xAE95AC", Offset = "0xAE95AC", VA = "0xAE95AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE514", Offset = "0x7CE514")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xAE95B8", Offset = "0xAE95B8", VA = "0xAE95B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE524", Offset = "0x7CE524")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public Transform groundAnchorable
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0xAE95C4", Offset = "0xAE95C4", VA = "0xAE95C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE534", Offset = "0x7CE534")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000654")]
		[Address(RVA = "0xAE95CC", Offset = "0xAE95CC", VA = "0xAE95CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE544", Offset = "0x7CE544")]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public bool flipped
	{
		[Token(Token = "0x6000659")]
		[Address(RVA = "0xAD20F8", Offset = "0xAD20F8", VA = "0xAD20F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE594", Offset = "0x7CE594")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600065A")]
		[Address(RVA = "0xAE9874", Offset = "0xAE9874", VA = "0xAE9874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5A4", Offset = "0x7CE5A4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Event hasJumped
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xAE95D4", Offset = "0xAE95D4", VA = "0xAE95D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE554", Offset = "0x7CE554")]
		add
		{
		}
		[Token(Token = "0x6000656")]
		[Address(RVA = "0xAE967C", Offset = "0xAE967C", VA = "0xAE967C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE564", Offset = "0x7CE564")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Event hasLanded
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xAE9724", Offset = "0xAE9724", VA = "0xAE9724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE574", Offset = "0x7CE574")]
		add
		{
		}
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xAE97CC", Offset = "0xAE97CC", VA = "0xAE97CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE584", Offset = "0x7CE584")]
		remove
		{
		}
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xAE9880", Offset = "0xAE9880", VA = "0xAE9880")]
	public void ResetMovement()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xAE9A58", Offset = "0xAE9A58", VA = "0xAE9A58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xAE9FA8", Offset = "0xAE9FA8", VA = "0xAE9FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xAEA038", Offset = "0xAEA038", VA = "0xAEA038")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xAEA0C8", Offset = "0xAEA0C8", VA = "0xAEA0C8")]
	public Vector3 GetBodyVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xAEA0F8", Offset = "0xAEA0F8", VA = "0xAEA0F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xAD44EC", Offset = "0xAD44EC", VA = "0xAD44EC")]
	public void UpdateContentRotation()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xAEACD0", Offset = "0xAEACD0", VA = "0xAEACD0")]
	private void ResetGroundCollision()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xAEAD64", Offset = "0xAEAD64", VA = "0xAEAD64")]
	private void CheckGroundCollision(PhysicsBodyCollision col)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xAEA88C", Offset = "0xAEA88C", VA = "0xAEA88C")]
	private bool CheckFrontCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xAEAF24", Offset = "0xAEAF24", VA = "0xAEAF24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xAE99AC", Offset = "0xAE99AC", VA = "0xAE99AC")]
	private void ResetGroundedState(bool grounded)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xAEB54C", Offset = "0xAEB54C", VA = "0xAEB54C")]
	private void CheckSlopeChange()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xAD4414", Offset = "0xAD4414", VA = "0xAD4414")]
	public void Move(Vector2 direction, float speed)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAEBA64", Offset = "0xAEBA64", VA = "0xAEBA64")]
	public void Accelerate(Vector2 direction, float acceleration, float clampMagnitude)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAE99A4", Offset = "0xAE99A4", VA = "0xAE99A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAEBBD8", Offset = "0xAEBBD8", VA = "0xAEBBD8")]
	public void ShortHop(float multiplier, float maxSpeed)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAD4768", Offset = "0xAD4768", VA = "0xAD4768")]
	public void Jump(float speed)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAEBC90", Offset = "0xAEBC90", VA = "0xAEBC90")]
	public void JumpUnits(float units)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAEBD38", Offset = "0xAEBD38", VA = "0xAEBD38")]
	public Vector2 GetRandomDirection()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAEBEA8", Offset = "0xAEBEA8", VA = "0xAEBEA8")]
	public InGameCharacterMovement()
	{
	}
}
[Token(Token = "0x2000116")]
public class InGameCharacterMovementGroundSensor : MonoBehaviour
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0274", Offset = "0x7C0274")]
	private bool <active>k__BackingField;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0284", Offset = "0x7C0284")]
	private Transform <anchorableGround>k__BackingField;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x17000067")]
	public bool active
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xAED338", Offset = "0xAED338", VA = "0xAED338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5B4", Offset = "0x7CE5B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xAED340", Offset = "0xAED340", VA = "0xAED340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5C4", Offset = "0x7CE5C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public Transform anchorableGround
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xAED34C", Offset = "0xAED34C", VA = "0xAED34C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5D4", Offset = "0x7CE5D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xAED354", Offset = "0xAED354", VA = "0xAED354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5E4", Offset = "0x7CE5E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAED35C", Offset = "0xAED35C", VA = "0xAED35C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xAED3A0", Offset = "0xAED3A0", VA = "0xAED3A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xAED51C", Offset = "0xAED51C", VA = "0xAED51C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xAED638", Offset = "0xAED638", VA = "0xAED638")]
	private void OnTriggerStay2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xAED584", Offset = "0xAED584", VA = "0xAED584")]
	private void Solve(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xAED50C", Offset = "0xAED50C", VA = "0xAED50C")]
	public void ResetSensor()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xAED6A0", Offset = "0xAED6A0", VA = "0xAED6A0")]
	public InGameCharacterMovementGroundSensor()
	{
	}
}
[Token(Token = "0x2000117")]
public class InGameFrameStep : MonoBehaviour
{
	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C0294", Offset = "0x7C0294")]
	public int frameRate;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InGameFrameStep instance;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int step;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool forceNewFrame;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _newFrame;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _frameCount;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _deltaTime;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _time;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int shaderFrameCount;

	[Token(Token = "0x17000069")]
	public static bool newFrame
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xAED6A8", Offset = "0xAED6A8", VA = "0xAED6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public static int frameCount
	{
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xAED834", Offset = "0xAED834", VA = "0xAED834")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006B")]
	public static float deltaTime
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xAED8DC", Offset = "0xAED8DC", VA = "0xAED8DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006C")]
	public static float time
	{
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xAED984", Offset = "0xAED984", VA = "0xAED984")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006D")]
	private static bool useInstance
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xAED750", Offset = "0xAED750", VA = "0xAED750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xAEDA2C", Offset = "0xAEDA2C", VA = "0xAEDA2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xAEDB64", Offset = "0xAEDB64", VA = "0xAEDB64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xAEDCB4", Offset = "0xAEDCB4", VA = "0xAEDCB4")]
	public static void ForceNewFrame()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xAEDD88", Offset = "0xAEDD88", VA = "0xAEDD88")]
	public InGameFrameStep()
	{
	}
}
[Token(Token = "0x2000118")]
public abstract class InGameInput : MonoBehaviour, IKeyPoll<Button>
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected readonly InputKeyPoll<Button> keyPoll;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly InputAxis axis;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xAEDDFC", Offset = "0xAEDDFC", VA = "0xAEDDFC", Slot = "4")]
	public bool Press(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xAEDE6C", Offset = "0xAEDE6C", VA = "0xAEDE6C", Slot = "5")]
	public bool Hold(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xAEDEDC", Offset = "0xAEDEDC", VA = "0xAEDEDC", Slot = "6")]
	public bool Release(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xAEDF4C", Offset = "0xAEDF4C", VA = "0xAEDF4C", Slot = "7")]
	public float Magnitude(Button button)
	{
		return default(float);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xAEDFBC", Offset = "0xAEDFBC", VA = "0xAEDFBC", Slot = "8")]
	public Vector2 Normal(Button button)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xAEE02C", Offset = "0xAEE02C", VA = "0xAEE02C", Slot = "9")]
	public Vector2 Axis(Button button)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xAEE09C", Offset = "0xAEE09C", VA = "0xAEE09C")]
	protected void UpdateAxisLegacy()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xAEE338", Offset = "0xAEE338", VA = "0xAEE338")]
	protected InGameInput()
	{
	}
}
[Token(Token = "0x2000119")]
public class DotInteraction : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HighlightArrow;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C02B0", Offset = "0x7C02B0")]
	private IngameInteractable <highlightedInteractable>k__BackingField;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float interactionCooldown;

	[Token(Token = "0x1700006E")]
	public IngameInteractable highlightedInteractable
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xB4C600", Offset = "0xB4C600", VA = "0xB4C600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE5F4", Offset = "0x7CE5F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB4C608", Offset = "0xB4C608", VA = "0xB4C608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE604", Offset = "0x7CE604")]
		private set
		{
		}
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB4C610", Offset = "0xB4C610", VA = "0xB4C610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB4C7F4", Offset = "0xB4C7F4", VA = "0xB4C7F4")]
	private void CheckForInteractable(GameObject colObj)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB4C8B0", Offset = "0xB4C8B0", VA = "0xB4C8B0")]
	private void LeaveInteractable(GameObject colObj)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB4C618", Offset = "0xB4C618", VA = "0xB4C618")]
	public void HighlightInteractable(IngameInteractable inter)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB4C95C", Offset = "0xB4C95C", VA = "0xB4C95C")]
	public void Interact()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB4C9B0", Offset = "0xB4C9B0", VA = "0xB4C9B0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB4CA44", Offset = "0xB4CA44", VA = "0xB4CA44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB4CAE8", Offset = "0xB4CAE8", VA = "0xB4CAE8")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB4CB8C", Offset = "0xB4CB8C", VA = "0xB4CB8C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB4CBCC", Offset = "0xB4CBCC", VA = "0xB4CBCC")]
	private void OnTriggerExit2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xB4CC0C", Offset = "0xB4CC0C", VA = "0xB4CC0C")]
	public DotInteraction()
	{
	}
}
[Token(Token = "0x200011A")]
public abstract class IngameInteractable : MonoBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform arrowPosition;

	[Token(Token = "0x600069A")]
	public abstract void Interact();

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xAF0C18", Offset = "0xAF0C18", VA = "0xAF0C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xAF0C6C", Offset = "0xAF0C6C", VA = "0xAF0C6C")]
	protected IngameInteractable()
	{
	}
}
[Token(Token = "0x200011B")]
public class IngameInteractableDialogue : IngameInteractable
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C02C0", Offset = "0x7C02C0")]
	public DialogueDropdown DialogueID;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BalloonType balloonType;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0324", Offset = "0x7C0324")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0324", Offset = "0x7C0324")]
	public DialogueDropdown DialogueID_alt;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C03AC", Offset = "0x7C03AC")]
	public string stateToChange;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool useAlt;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xAF0C74", Offset = "0xAF0C74", VA = "0xAF0C74", Slot = "4")]
	public override void Interact()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAF0CEC", Offset = "0xAF0CEC", VA = "0xAF0CEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xAF0D80", Offset = "0xAF0D80", VA = "0xAF0D80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xAF0E14", Offset = "0xAF0E14", VA = "0xAF0E14")]
	private void OnChangedState(int stateIndex, string stateName)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xAF0E6C", Offset = "0xAF0E6C", VA = "0xAF0E6C")]
	public IngameInteractableDialogue()
	{
	}
}
[Token(Token = "0x200011C")]
public class InGameMainMenu : MonoBehaviour
{
	[Token(Token = "0x20005A7")]
	private enum MenuScreen
	{
		[Token(Token = "0x4001CE4")]
		Disabled,
		[Token(Token = "0x4001CE5")]
		SplashScreen,
		[Token(Token = "0x4001CE6")]
		TitleScreen,
		[Token(Token = "0x4001CE7")]
		SelectionScreen,
		[Token(Token = "0x4001CE8")]
		GameOver
	}

	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD54", Offset = "0x7BCD54")]
	private sealed class <InitializeGame>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700037F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002564")]
			[Address(RVA = "0xAEF068", Offset = "0xAEF068", VA = "0xAEF068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002566")]
			[Address(RVA = "0xAEF0D8", Offset = "0xAEF0D8", VA = "0xAEF0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xAEEEE0", Offset = "0xAEEEE0", VA = "0xAEEEE0")]
		[DebuggerHidden]
		public <InitializeGame>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xAEF000", Offset = "0xAEF000", VA = "0xAEF000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xAEF004", Offset = "0xAEF004", VA = "0xAEF004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xAEF070", Offset = "0xAEF070", VA = "0xAEF070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MenuScreen currentScreen;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool bypassMenu;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool allowAdvancingMenu;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InGameInput gamepadInput;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject splashScreen;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject titleScreen;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject selectionScreen;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject gameOverScreen;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject titleScreenContinueTxt;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float splashScreenTime;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float titleScreenDelayTime;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float gameOverTime;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0410", Offset = "0x7C0410")]
	[EventRef]
	public string selectFMODEvent;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C045C", Offset = "0x7C045C")]
	[EventRef]
	public string gameOverFMODEvent;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent menuClosedEvent;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timer;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xAEE49C", Offset = "0xAEE49C", VA = "0xAEE49C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xAEE5E8", Offset = "0xAEE5E8", VA = "0xAEE5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xAEE4A4", Offset = "0xAEE4A4", VA = "0xAEE4A4")]
	private void ChangeScreen(MenuScreen newScreen)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xAEEC84", Offset = "0xAEEC84", VA = "0xAEEC84")]
	public void ShowGameOver()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xAEECF4", Offset = "0xAEECF4", VA = "0xAEECF4")]
	public void ShowMainMenu(bool show)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xAEEE80", Offset = "0xAEEE80", VA = "0xAEEE80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE614", Offset = "0x7CE614")]
	private IEnumerator InitializeGame()
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xAEEF0C", Offset = "0xAEEF0C", VA = "0xAEEF0C")]
	public void AllowAdvancingMenu()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xAEEF18", Offset = "0xAEEF18", VA = "0xAEEF18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xAEEFF0", Offset = "0xAEEFF0", VA = "0xAEEFF0")]
	public InGameMainMenu()
	{
	}
}
[Token(Token = "0x200011D")]
public class InGameManager : MonoBehaviour
{
	[Token(Token = "0x20005A9")]
	public enum GamepadFocusType
	{
		[Token(Token = "0x4001CEC")]
		Dot,
		[Token(Token = "0x4001CED")]
		Cutscene,
		[Token(Token = "0x4001CEE")]
		Menu
	}

	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD64", Offset = "0x7BCD64")]
	private sealed class <PlayBGM>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string bgm;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool save;

		[Token(Token = "0x17000381")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600256A")]
			[Address(RVA = "0xAEF7E0", Offset = "0xAEF7E0", VA = "0xAEF7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600256C")]
			[Address(RVA = "0xAEF850", Offset = "0xAEF850", VA = "0xAEF850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xAEF5F0", Offset = "0xAEF5F0", VA = "0xAEF5F0")]
		[DebuggerHidden]
		public <PlayBGM>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xAEF700", Offset = "0xAEF700", VA = "0xAEF700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xAEF704", Offset = "0xAEF704", VA = "0xAEF704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xAEF7E8", Offset = "0xAEF7E8", VA = "0xAEF7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C04A8", Offset = "0x7C04A8")]
	private static InGameManager <instance>k__BackingField;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TVController tv;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InGameMainMenu inGameMenu;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool startOn;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C04B8", Offset = "0x7C04B8")]
	private bool <consoleActive>k__BackingField;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConsolePowerController consolePower;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C04C8", Offset = "0x7C04C8")]
	[EventRef]
	public string gameThemeEvent;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string titleBGMEvent;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string unplugConsoleEvent;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0534", Offset = "0x7C0534")]
	private bool <activeRWCutscene>k__BackingField;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0544", Offset = "0x7C0544")]
	private bool <activeInGameCutscene>k__BackingField;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0554", Offset = "0x7C0554")]
	private bool <activeInGameMenu>k__BackingField;

	[Token(Token = "0x1700006F")]
	public static InGameManager instance
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xAEEA38", Offset = "0xAEEA38", VA = "0xAEEA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE678", Offset = "0x7CE678")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xAEF0E0", Offset = "0xAEF0E0", VA = "0xAEF0E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE688", Offset = "0x7CE688")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public bool consoleActive
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xAEF138", Offset = "0xAEF138", VA = "0xAEF138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE698", Offset = "0x7CE698")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xAEF140", Offset = "0xAEF140", VA = "0xAEF140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE6A8", Offset = "0x7CE6A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public bool activeRWCutscene
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xAEF6A8", Offset = "0xAEF6A8", VA = "0xAEF6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE71C", Offset = "0x7CE71C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xAEF6B0", Offset = "0xAEF6B0", VA = "0xAEF6B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE72C", Offset = "0x7CE72C")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public bool activeInGameCutscene
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xAEF6BC", Offset = "0xAEF6BC", VA = "0xAEF6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE73C", Offset = "0x7CE73C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xAEF6C4", Offset = "0xAEF6C4", VA = "0xAEF6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE74C", Offset = "0x7CE74C")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public bool activeInGameMenu
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xAEF6D0", Offset = "0xAEF6D0", VA = "0xAEF6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE75C", Offset = "0x7CE75C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xAEEC10", Offset = "0xAEEC10", VA = "0xAEEC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE76C", Offset = "0x7CE76C")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool activeGameplay
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xAEF6D8", Offset = "0xAEF6D8", VA = "0xAEF6D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xAEF14C", Offset = "0xAEF14C", VA = "0xAEF14C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xAEF2E0", Offset = "0xAEF2E0", VA = "0xAEF2E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xAEF2E4", Offset = "0xAEF2E4", VA = "0xAEF2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xAEF3E8", Offset = "0xAEF3E8", VA = "0xAEF3E8")]
	public void DotDiedInGame()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xAEF30C", Offset = "0xAEF30C", VA = "0xAEF30C")]
	public void SetConsolePower(bool on)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xAEF574", Offset = "0xAEF574", VA = "0xAEF574")]
	public void TurnOffForBoss()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xAEEC1C", Offset = "0xAEEC1C", VA = "0xAEEC1C")]
	public void PlayThemeBGM()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xAEF4C0", Offset = "0xAEF4C0", VA = "0xAEF4C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE6B8", Offset = "0x7CE6B8")]
	private IEnumerator PlayBGM(string bgm, bool save = false)
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xAEF61C", Offset = "0xAEF61C", VA = "0xAEF61C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xAEEA88", Offset = "0xAEEA88", VA = "0xAEEA88")]
	public bool CanFocus(GamepadFocusType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xAEF6F8", Offset = "0xAEF6F8", VA = "0xAEF6F8")]
	public InGameManager()
	{
	}
}
[Token(Token = "0x200011E")]
public class InGameSaveSelection : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject newGameModeElements;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject continueModeElements;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text dateText;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string savedDate;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string currentDate;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xAEF97C", Offset = "0xAEF97C", VA = "0xAEF97C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xAEFAA8", Offset = "0xAEFAA8", VA = "0xAEFAA8")]
	public InGameSaveSelection()
	{
	}
}
[Token(Token = "0x200011F")]
public class AchievmentGeneric : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievements achievement;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool attachSound;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string onCompleted;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string overrideSound;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string[] otherSounds;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xA9386C", Offset = "0xA9386C", VA = "0xA9386C")]
	public void GiveAchievment()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xA93C2C", Offset = "0xA93C2C", VA = "0xA93C2C")]
	public AchievmentGeneric()
	{
	}
}
[Token(Token = "0x2000120")]
public class ItemPickup : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string addFlag;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0594", Offset = "0x7C0594")]
	public DialogueDropdown dialogueID;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BalloonType balloonType;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool gotItem;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onPickup;

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xAF79AC", Offset = "0xAF79AC", VA = "0xAF79AC")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xAF7ADC", Offset = "0xAF7ADC", VA = "0xAF7ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xAF7B54", Offset = "0xAF7B54", VA = "0xAF7B54")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xAF7BC8", Offset = "0xAF7BC8", VA = "0xAF7BC8")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xAF7C48", Offset = "0xAF7C48", VA = "0xAF7C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xAF7CBC", Offset = "0xAF7CBC", VA = "0xAF7CBC")]
	public ItemPickup()
	{
	}
}
[Token(Token = "0x2000121")]
public class Level2DiamondPickup : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level2DiamondProgression diamondProgression;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameTV gameTV;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string sfx;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AchievmentGeneric achievScript;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x971560", Offset = "0x971560", VA = "0x971560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x9715F0", Offset = "0x9715F0", VA = "0x9715F0")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x971A00", Offset = "0x971A00", VA = "0x971A00")]
	public void GetDiamond_NoProgression_Event()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x971B48", Offset = "0x971B48", VA = "0x971B48")]
	public Level2DiamondPickup()
	{
	}
}
[Token(Token = "0x2000122")]
public class Level2DiamondProgression : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0608", Offset = "0x7C0608")]
	public StateDropdown changeStateTo;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DotChangeGameLevel2 gameChanger;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image[] raccoonDiamondIcons;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] bioniteDiamondIcons;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int diamondCount;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool gotAllDiamonds;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x971760", Offset = "0x971760", VA = "0x971760")]
	public void AddDiamond(Sprite diamondSprite)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x971B50", Offset = "0x971B50", VA = "0x971B50")]
	public Level2DiamondProgression()
	{
	}
}
[Token(Token = "0x2000123")]
public class DynamicPixel : MonoBehaviour, IPoolable<DynamicPixel>
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C066C", Offset = "0x7C066C")]
	private ObjectPool<DynamicPixel> <poolComponent>k__BackingField;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pixelSprite;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool is3D;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool addScore;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float activeTime;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float startBlinkAfter;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C067C", Offset = "0x7C067C")]
	public float startBlinkAtPercentage;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float deceleration;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0694", Offset = "0x7C0694")]
	public float hardcore_VelocityMultiplier;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hardcore_Deceleration;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject objectToDisable;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float internalDeceleration;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 velocity;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PhysicsBody physicsBody;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider2D coll2D;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider coll3D;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool unrecoverable;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timer;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float speedMultiplier;

	[Token(Token = "0x17000075")]
	public ObjectPool<DynamicPixel> poolComponent
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xB4BA6C", Offset = "0xB4BA6C", VA = "0xB4BA6C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE77C", Offset = "0x7CE77C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xB53F44", Offset = "0xB53F44", VA = "0xB53F44", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE78C", Offset = "0x7CE78C")]
		set
		{
		}
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xB53F4C", Offset = "0xB53F4C", VA = "0xB53F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xB540DC", Offset = "0xB540DC", VA = "0xB540DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB542DC", Offset = "0xB542DC", VA = "0xB542DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB534D8", Offset = "0xB534D8", VA = "0xB534D8")]
	public void StartDynamicBehaviour(Vector3 velocity, Vector3 initialForceUp, float timeBeforeAllowRecovery)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB536BC", Offset = "0xB536BC", VA = "0xB536BC")]
	public void StartDynamicBehaviour_Hardcore(Vector3 velocity, Vector3 initialForceUp)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB5441C", Offset = "0xB5441C", VA = "0xB5441C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB54458", Offset = "0xB54458", VA = "0xB54458")]
	public DynamicPixel()
	{
	}
}
[Token(Token = "0x2000124")]
public class PixelRespawn : MonoBehaviour
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isDynamic;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB8C5F0", Offset = "0xB8C5F0", VA = "0xB8C5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB8C6B8", Offset = "0xB8C6B8", VA = "0xB8C6B8")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xB8C6FC", Offset = "0xB8C6FC", VA = "0xB8C6FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xB8C770", Offset = "0xB8C770", VA = "0xB8C770")]
	public PixelRespawn()
	{
	}
}
[Token(Token = "0x2000125")]
public class Level1UnlockPathOnTimer : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject activeBefore;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject activeAfter;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float unlockAfterSeconds;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnemySpawnZone gauntlet;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float currentTime;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xB041D8", Offset = "0xB041D8", VA = "0xB041D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xB042D4", Offset = "0xB042D4", VA = "0xB042D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xB04474", Offset = "0xB04474", VA = "0xB04474")]
	public Level1UnlockPathOnTimer()
	{
	}
}
[Token(Token = "0x2000126")]
public class Level2InGameCameraManager : MonoBehaviour
{
	[Token(Token = "0x20005AB")]
	public enum Level2TV
	{
		[Token(Token = "0x4001CF4")]
		None,
		[Token(Token = "0x4001CF5")]
		Left,
		[Token(Token = "0x4001CF6")]
		Right
	}

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera raccoonCamera;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera bioniteCamera;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int offGameUpdateEveryNFrames;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Level2TV currentUnplayedGame;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frame;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x971DD8", Offset = "0x971DD8", VA = "0x971DD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x971E0C", Offset = "0x971E0C", VA = "0x971E0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x971FA8", Offset = "0x971FA8", VA = "0x971FA8")]
	public void SetPlayedGame(DotType dotType)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x972014", Offset = "0x972014", VA = "0x972014")]
	public Level2InGameCameraManager()
	{
	}
}
[Token(Token = "0x2000127")]
public class Level2InGameMainMenu : MonoBehaviour
{
	[Token(Token = "0x20005AC")]
	private enum MenuScreen
	{
		[Token(Token = "0x4001CF8")]
		Disabled,
		[Token(Token = "0x4001CF9")]
		TitleScreen,
		[Token(Token = "0x4001CFA")]
		GameOver
	}

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MenuScreen currentScreen;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DotType gameDot;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InGameInput gamepadInput;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject titleScreen;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gameOverScreen;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject titleScreenContinueTxt;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float titleScreenDelayTime;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float gameOverTime;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Canvas hud;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C06CC", Offset = "0x7C06CC")]
	[EventRef]
	public string gameBGM;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string selectFMODEvent;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string gameOverFMODEvent;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isFocused;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool menuActive;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timer;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x972024", Offset = "0x972024", VA = "0x972024")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x972234", Offset = "0x972234", VA = "0x972234")]
	private void ChangeScreen(MenuScreen newScreen)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x972394", Offset = "0x972394", VA = "0x972394")]
	public void ShowGameOver()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x9723D4", Offset = "0x9723D4", VA = "0x9723D4")]
	public void ShowMainMenu(bool show, bool allowAdvance)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x97245C", Offset = "0x97245C", VA = "0x97245C")]
	public void SetFocused(bool focused)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x9724B4", Offset = "0x9724B4", VA = "0x9724B4")]
	public Level2InGameMainMenu()
	{
	}
}
[Token(Token = "0x2000128")]
public class Level2InGameManager : MonoBehaviour
{
	[Token(Token = "0x20005AD")]
	public enum GamepadFocusType
	{
		[Token(Token = "0x4001CFC")]
		Dot,
		[Token(Token = "0x4001CFD")]
		Cutscene,
		[Token(Token = "0x4001CFE")]
		Menu
	}

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0738", Offset = "0x7C0738")]
	private static Level2InGameManager <instance>k__BackingField;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TVController raccoonTV;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TVController bioniteTV;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Level2InGameMainMenu raccoonMenu;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level2InGameMainMenu bioniteMenu;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string raccoonTitleBGM;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string bioniteTitleBGM;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C0768", Offset = "0x7C0768")]
	public bool raccoonTVStartOn;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool bioniteTVStartOn;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0778", Offset = "0x7C0778")]
	public StateDropdown raccoonPlayableAtState;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C07DC", Offset = "0x7C07DC")]
	public StateDropdown bionitePlayableAtState;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0840", Offset = "0x7C0840")]
	private bool <raccoonPlayable>k__BackingField;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0850", Offset = "0x7C0850")]
	private bool <bionitePlayable>k__BackingField;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool raccoonFocused;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool bioniteFocused;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0860", Offset = "0x7C0860")]
	private bool <activeRWCutscene>k__BackingField;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0870", Offset = "0x7C0870")]
	private bool <activeRaccoonCutscene>k__BackingField;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0880", Offset = "0x7C0880")]
	private bool <activeBioniteCutscene>k__BackingField;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0890", Offset = "0x7C0890")]
	private bool <activeRaccoonMenu>k__BackingField;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C08A0", Offset = "0x7C08A0")]
	private bool <activeBioniteMenu>k__BackingField;

	[Token(Token = "0x17000076")]
	public static Level2InGameManager instance
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x971F48", Offset = "0x971F48", VA = "0x971F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE79C", Offset = "0x7CE79C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x9724BC", Offset = "0x9724BC", VA = "0x9724BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7AC", Offset = "0x7CE7AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool raccoonPlayable
	{
		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x971FA0", Offset = "0x971FA0", VA = "0x971FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7BC", Offset = "0x7CE7BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x972514", Offset = "0x972514", VA = "0x972514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7CC", Offset = "0x7CE7CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool bionitePlayable
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x971F98", Offset = "0x971F98", VA = "0x971F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7DC", Offset = "0x7CE7DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x972520", Offset = "0x972520", VA = "0x972520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7EC", Offset = "0x7CE7EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public bool activeRWCutscene
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x972E4C", Offset = "0x972E4C", VA = "0x972E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE7FC", Offset = "0x7CE7FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x972E54", Offset = "0x972E54", VA = "0x972E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE80C", Offset = "0x7CE80C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public bool activeRaccoonCutscene
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x972E60", Offset = "0x972E60", VA = "0x972E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE81C", Offset = "0x7CE81C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x972E68", Offset = "0x972E68", VA = "0x972E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE82C", Offset = "0x7CE82C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public bool activeBioniteCutscene
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x972E74", Offset = "0x972E74", VA = "0x972E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE83C", Offset = "0x7CE83C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x972E7C", Offset = "0x972E7C", VA = "0x972E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE84C", Offset = "0x7CE84C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool activeRaccoonMenu
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x972E88", Offset = "0x972E88", VA = "0x972E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE85C", Offset = "0x7CE85C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x97237C", Offset = "0x97237C", VA = "0x97237C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE86C", Offset = "0x7CE86C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public bool activeBioniteMenu
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x972E90", Offset = "0x972E90", VA = "0x972E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE87C", Offset = "0x7CE87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x972388", Offset = "0x972388", VA = "0x972388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE88C", Offset = "0x7CE88C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool activeRaccoonGame
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x972E98", Offset = "0x972E98", VA = "0x972E98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public bool activeBioniteGame
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x972EC0", Offset = "0x972EC0", VA = "0x972EC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x97252C", Offset = "0x97252C", VA = "0x97252C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x9725C0", Offset = "0x9725C0", VA = "0x9725C0")]
	private void OnChangedState(int stateIndex, string stateName)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x97288C", Offset = "0x97288C", VA = "0x97288C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x972920", Offset = "0x972920", VA = "0x972920")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x972A88", Offset = "0x972A88", VA = "0x972A88")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x972AE4", Offset = "0x972AE4", VA = "0x972AE4")]
	public void DotDiedInGame(DotType dotType)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x9726E8", Offset = "0x9726E8", VA = "0x9726E8")]
	public void ShowScreen(GameTV tvSide, bool allowAdvance, bool forceFullVolume = false)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x972BFC", Offset = "0x972BFC", VA = "0x972BFC")]
	public void RaccoonTVOn_TimelineEvent()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x972C54", Offset = "0x972C54", VA = "0x972C54")]
	public void BioniteTVOff_TimelineEvent()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x972C58", Offset = "0x972C58", VA = "0x972C58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x972CE4", Offset = "0x972CE4", VA = "0x972CE4")]
	public void SetFocusTo(DotType gameDot)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x972EE8", Offset = "0x972EE8", VA = "0x972EE8")]
	public bool CanFocus(GamepadFocusType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x973134", Offset = "0x973134", VA = "0x973134")]
	public Level2InGameManager()
	{
	}
}
[Token(Token = "0x2000129")]
public class CastleMirrorNoiseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cedricTag;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggered;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xAABF0C", Offset = "0xAABF0C", VA = "0xAABF0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xAABF5C", Offset = "0xAABF5C", VA = "0xAABF5C")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xAAC034", Offset = "0xAAC034", VA = "0xAAC034")]
	public CastleMirrorNoiseTrigger()
	{
	}
}
[Token(Token = "0x200012A")]
public class Level3MomSpeedTrigger : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float newSuspiciousDuration;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Level3Mom mom;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x9779B8", Offset = "0x9779B8", VA = "0x9779B8")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x9779E8", Offset = "0x9779E8", VA = "0x9779E8")]
	public Level3MomSpeedTrigger()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA634", Offset = "0x7BA634")]
public class NoiseOnCollision : MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NoiseEmitter noiseEmitter;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tagToCheck;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA3CED4", Offset = "0xA3CED4", VA = "0xA3CED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xA3CF38", Offset = "0xA3CF38", VA = "0xA3CF38")]
	private void OnCollisionEnter2D(Collision2D col)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA3CFC0", Offset = "0xA3CFC0", VA = "0xA3CFC0")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA3D030", Offset = "0xA3D030", VA = "0xA3D030")]
	public NoiseOnCollision()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA698", Offset = "0x7BA698")]
public class NoiseOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tagToCheck;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NoiseEmitter noiseEmitter;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xA3D090", Offset = "0xA3D090", VA = "0xA3D090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA3D0F4", Offset = "0xA3D0F4", VA = "0xA3D0F4")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xA3D164", Offset = "0xA3D164", VA = "0xA3D164")]
	public NoiseOnTrigger()
	{
	}
}
[Token(Token = "0x200012D")]
public class BEUCameraLocker : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BEUCameraManager vCam;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xA996BC", Offset = "0xA996BC", VA = "0xA996BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA99790", Offset = "0xA99790", VA = "0xA99790")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xA99810", Offset = "0xA99810", VA = "0xA99810")]
	private void OnDotRespawn()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xA9973C", Offset = "0xA9973C", VA = "0xA9973C")]
	private void Lock(bool lockCamera)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xA99850", Offset = "0xA99850", VA = "0xA99850")]
	public BEUCameraLocker()
	{
	}
}
[Token(Token = "0x200012E")]
public class BEUCameraManager : MonoBehaviour
{
	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD74", Offset = "0x7BCD74")]
	private sealed class <GoArrowStart>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BEUCameraManager <>4__this;

		[Token(Token = "0x17000383")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002570")]
			[Address(RVA = "0xA9A1C0", Offset = "0xA9A1C0", VA = "0xA9A1C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002572")]
			[Address(RVA = "0xA9A230", Offset = "0xA9A230", VA = "0xA9A230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xA99DF4", Offset = "0xA99DF4", VA = "0xA99DF4")]
		[DebuggerHidden]
		public <GoArrowStart>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xA9A0D4", Offset = "0xA9A0D4", VA = "0xA9A0D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xA9A0D8", Offset = "0xA9A0D8", VA = "0xA9A0D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xA9A1C8", Offset = "0xA9A1C8", VA = "0xA9A1C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachineSmoothPath part1Track;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CinemachineSmoothPath part2Track;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CinemachineSmoothPath part3Track;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CinemachineSmoothPath part4Track;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CinemachineVirtualCamera vCam;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CinemachineTrackedDolly trackedDolly;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool allowLeftMovement;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool trackPaused;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float maxPathPosition;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator goArrow;

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA99858", Offset = "0xA99858", VA = "0xA99858")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xA9997C", Offset = "0xA9997C", VA = "0xA9997C")]
	private void Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA99A90", Offset = "0xA99A90", VA = "0xA99A90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA99D74", Offset = "0xA99D74", VA = "0xA99D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE89C", Offset = "0x7CE89C")]
	private IEnumerator GoArrowStart()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xA99E20", Offset = "0xA99E20", VA = "0xA99E20")]
	public void ChangeTrack(int round)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA99818", Offset = "0xA99818", VA = "0xA99818")]
	public void PauseCameraTrack(bool pause)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA99F84", Offset = "0xA99F84", VA = "0xA99F84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xA99FF8", Offset = "0xA99FF8", VA = "0xA99FF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA9A06C", Offset = "0xA9A06C", VA = "0xA9A06C")]
	private void OnFinishedReloadingGame()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xA99974", Offset = "0xA99974", VA = "0xA99974")]
	private void ResetLeftMovement()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xA9A0CC", Offset = "0xA9A0CC", VA = "0xA9A0CC")]
	public BEUCameraManager()
	{
	}
}
[Token(Token = "0x200012F")]
public class BEUFakeDotScore : MonoBehaviour
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotController dot;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RivalController[] rivals;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text scoreTxt;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float score;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xA9AF50", Offset = "0xA9AF50", VA = "0xA9AF50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA9B130", Offset = "0xA9B130", VA = "0xA9B130")]
	public BEUFakeDotScore()
	{
	}
}
[Token(Token = "0x2000130")]
public class BEUInGameProgression : MonoBehaviour
{
	[Token(Token = "0x20005AF")]
	public enum CompetitionRound
	{
		[Token(Token = "0x4001D03")]
		None,
		[Token(Token = "0x4001D04")]
		Round1,
		[Token(Token = "0x4001D05")]
		Round2,
		[Token(Token = "0x4001D06")]
		Round3,
		[Token(Token = "0x4001D07")]
		Round4,
		[Token(Token = "0x4001D08")]
		End
	}

	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD84", Offset = "0x7BCD84")]
	private sealed class <SetCheckpointOnNextFrame>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BEUInGameProgression <>4__this;

		[Token(Token = "0x17000385")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0xA9C8F8", Offset = "0xA9C8F8", VA = "0xA9C8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002578")]
			[Address(RVA = "0xA9C968", Offset = "0xA9C968", VA = "0xA9C968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xA9C218", Offset = "0xA9C218", VA = "0xA9C218")]
		[DebuggerHidden]
		public <SetCheckpointOnNextFrame>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xA9C354", Offset = "0xA9C354", VA = "0xA9C354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xA9C358", Offset = "0xA9C358", VA = "0xA9C358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xA9C900", Offset = "0xA9C900", VA = "0xA9C900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C08B0", Offset = "0x7C08B0")]
	public PlayableDirector genericStartingTimeline;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string timelineRoundTrackName;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject round1;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject round2;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject round3;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject round4;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject getReady;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C08E8", Offset = "0x7C08E8")]
	public PlayableDirector round1End;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayableDirector round2End;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayableDirector round3End;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayableDirector round4End;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0920", Offset = "0x7C0920")]
	[EventRef]
	public string round1BGM;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string round2BGM;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string round3BGM;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string round4BGM;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C099C", Offset = "0x7C099C")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C099C", Offset = "0x7C099C")]
	public string round2State;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0A24", Offset = "0x7C0A24")]
	public string round3State;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0A88", Offset = "0x7C0A88")]
	public string round4State;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0AEC", Offset = "0x7C0AEC")]
	public string endState;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0B50", Offset = "0x7C0B50")]
	public RivalController[] rivals;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0B88", Offset = "0x7C0B88")]
	public BEUCameraManager cameraManager;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PlayerBeatEmUpController dot;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LimitPositionToViewWidth dotLimiter;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ScrollChildren round3Elevator;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool ready;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int rivalsReady;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CompetitionRound compState;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xA9B138", Offset = "0xA9B138", VA = "0xA9B138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA9B20C", Offset = "0xA9B20C", VA = "0xA9B20C")]
	private void Update()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA9B440", Offset = "0xA9B440", VA = "0xA9B440")]
	private void PrepareCharsToCutscene()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xA9B564", Offset = "0xA9B564", VA = "0xA9B564")]
	private void ResetChars()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xA9B24C", Offset = "0xA9B24C", VA = "0xA9B24C")]
	public void AdvanceCompetitionState()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xA9B6DC", Offset = "0xA9B6DC", VA = "0xA9B6DC")]
	private void SetStartingTimeline(int round, bool play = false)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xA9BA98", Offset = "0xA9BA98", VA = "0xA9BA98")]
	public void PlayGenericStartTimeline()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xA9BAC8", Offset = "0xA9BAC8", VA = "0xA9BAC8")]
	public void EnterRival_TimelineEvent()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xA9BC58", Offset = "0xA9BC58", VA = "0xA9BC58")]
	public void OnTimelineEnd_RoundStart()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xA9BE4C", Offset = "0xA9BE4C", VA = "0xA9BE4C")]
	public void OnTimelineEnd_RoundEnd()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xA9C034", Offset = "0xA9C034", VA = "0xA9C034")]
	private void OnTimelineEnd_BetweenRounds()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xA9C210", Offset = "0xA9C210", VA = "0xA9C210")]
	public void OnRivalDies_TimelineEvent()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xA9BFB4", Offset = "0xA9BFB4", VA = "0xA9BFB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CE900", Offset = "0x7CE900")]
	private IEnumerator SetCheckpointOnNextFrame()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xA9C244", Offset = "0xA9C244", VA = "0xA9C244")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xA9BD18", Offset = "0xA9BD18", VA = "0xA9BD18")]
	private void SetBGM(CompetitionRound state)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA9C12C", Offset = "0xA9C12C", VA = "0xA9C12C")]
	private void ChangeProgressionState(int currentRound)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA9C2BC", Offset = "0xA9C2BC", VA = "0xA9C2BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA9C340", Offset = "0xA9C340", VA = "0xA9C340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA9C34C", Offset = "0xA9C34C", VA = "0xA9C34C")]
	public BEUInGameProgression()
	{
	}
}
[Token(Token = "0x2000131")]
public class AirPocket : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform topLeft;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bottomRight;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA95DDC", Offset = "0xA95DDC", VA = "0xA95DDC")]
	public bool CheckInsidePocket(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA95EA0", Offset = "0xA95EA0", VA = "0xA95EA0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA961B0", Offset = "0xA961B0", VA = "0xA961B0")]
	public AirPocket()
	{
	}
}
[Token(Token = "0x2000132")]
public class Level5UnderwaterDetection : MonoBehaviour
{
	[Token(Token = "0x20005B1")]
	public enum UnderwaterState
	{
		[Token(Token = "0x4001D0D")]
		NotUnderwater,
		[Token(Token = "0x4001D0E")]
		Underwater,
		[Token(Token = "0x4001D0F")]
		Drowning,
		[Token(Token = "0x4001D10")]
		Drowned
	}

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0BC0", Offset = "0x7C0BC0")]
	private static Level5UnderwaterDetection <instance>k__BackingField;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerPlatformerController dotPlatformer;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerPlatformerConfig defaultConfig;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerPlatformerConfig waterConfig;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0BD0", Offset = "0x7C0BD0")]
	private float <underwaterTime>k__BackingField;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform waterLevel;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AirPocket> pockets;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0BE0", Offset = "0x7C0BE0")]
	public float safeTime;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float drowningTime;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float delayRWWaterStart;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string drowningFMODEvent;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string waterFMODEvent;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[EventRef]
	public string DotHitWaterFMODEvent;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventInstance waterSoundEventInstance;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance drowningEventInstance;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EventInstance waterHitEventInstance;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0C48", Offset = "0x7C0C48")]
	public float displayHeight;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro DrowningTimerDisplay;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float timerDisplayInterval;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0C80", Offset = "0x7C0C80")]
	public RWCharacterReactionController momReactionController;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CharacterReaction isDrowningReaction;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CharacterReaction isSafeReaction;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform rwWater;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform rwWaterMaxHeight;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 rwWaterStartingPos;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 rwWaterMaxPos;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float displayTimer;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int numberToDisplay;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float waterLerpTime;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool waterStart;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0CB8", Offset = "0x7C0CB8")]
	private UnderwaterState <underwaterStatus>k__BackingField;

	[Token(Token = "0x17000080")]
	public static Level5UnderwaterDetection instance
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x97D644", Offset = "0x97D644", VA = "0x97D644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE964", Offset = "0x7CE964")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x97D694", Offset = "0x97D694", VA = "0x97D694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE974", Offset = "0x7CE974")]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float underwaterTime
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x97D6EC", Offset = "0x97D6EC", VA = "0x97D6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE984", Offset = "0x7CE984")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x97D6F4", Offset = "0x97D6F4", VA = "0x97D6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE994", Offset = "0x7CE994")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public UnderwaterState underwaterStatus
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x97D6FC", Offset = "0x97D6FC", VA = "0x97D6FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9A4", Offset = "0x7CE9A4")]
		get
		{
			return default(UnderwaterState);
		}
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x97D704", Offset = "0x97D704", VA = "0x97D704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9B4", Offset = "0x7CE9B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x97D70C", Offset = "0x97D70C", VA = "0x97D70C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x97D914", Offset = "0x97D914", VA = "0x97D914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x97DEF4", Offset = "0x97DEF4", VA = "0x97DEF4")]
	private bool CheckDotInsidePocket()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x97E0A0", Offset = "0x97E0A0", VA = "0x97E0A0")]
	public void ResetWaterTime(bool gotBubble = false, bool fromRespawn = false)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x97E1CC", Offset = "0x97E1CC", VA = "0x97E1CC")]
	private void DrownDot()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x97E204", Offset = "0x97E204", VA = "0x97E204")]
	private void ResetConfig()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x97E258", Offset = "0x97E258", VA = "0x97E258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x97E2CC", Offset = "0x97E2CC", VA = "0x97E2CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x97E340", Offset = "0x97E340", VA = "0x97E340")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x97E4F8", Offset = "0x97E4F8", VA = "0x97E4F8")]
	public Level5UnderwaterDetection()
	{
	}
}
[Token(Token = "0x2000133")]
public class Level5WaterBubble : MonoBehaviour, IPoolableStandalone<Level5WaterBubble>
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0CC8", Offset = "0x7C0CC8")]
	private bool <triggeredByPlayer>k__BackingField;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0CD8", Offset = "0x7C0CD8")]
	private ObjectPoolStandalone<Level5WaterBubble> <pool>k__BackingField;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0CE8", Offset = "0x7C0CE8")]
	private float <lifetime>k__BackingField;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0CF8", Offset = "0x7C0CF8")]
	private float <speed>k__BackingField;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string dotBreathesFMODEvent;

	[Token(Token = "0x17000083")]
	public bool triggeredByPlayer
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x97E524", Offset = "0x97E524", VA = "0x97E524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9C4", Offset = "0x7CE9C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x97E52C", Offset = "0x97E52C", VA = "0x97E52C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9D4", Offset = "0x7CE9D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public ObjectPoolStandalone<Level5WaterBubble> pool
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x97E538", Offset = "0x97E538", VA = "0x97E538", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9E4", Offset = "0x7CE9E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x97E540", Offset = "0x97E540", VA = "0x97E540", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CE9F4", Offset = "0x7CE9F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public float lifetime
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x97E548", Offset = "0x97E548", VA = "0x97E548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA04", Offset = "0x7CEA04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x97E550", Offset = "0x97E550", VA = "0x97E550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA14", Offset = "0x7CEA14")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float speed
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x97E558", Offset = "0x97E558", VA = "0x97E558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA24", Offset = "0x7CEA24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x97E560", Offset = "0x97E560", VA = "0x97E560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA34", Offset = "0x7CEA34")]
		set
		{
		}
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x97E568", Offset = "0x97E568", VA = "0x97E568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x97E574", Offset = "0x97E574", VA = "0x97E574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x97E6C4", Offset = "0x97E6C4", VA = "0x97E6C4")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x97E798", Offset = "0x97E798", VA = "0x97E798")]
	public Level5WaterBubble()
	{
	}
}
[Token(Token = "0x2000134")]
public class Level5WaterBubblePool : ObjectPoolStandalone<Level5WaterBubble>
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Level5WaterBubble> spawnedBubbles;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x97E7A0", Offset = "0x97E7A0", VA = "0x97E7A0")]
	public void ShootBubble(float speed, float lifetime, Vector3 origin)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x97E880", Offset = "0x97E880", VA = "0x97E880", Slot = "5")]
	public override void OnPop(Level5WaterBubble obj)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x97E8F0", Offset = "0x97E8F0", VA = "0x97E8F0", Slot = "6")]
	public override void OnPush(Level5WaterBubble obj)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x97E9CC", Offset = "0x97E9CC", VA = "0x97E9CC")]
	public void PushAll()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x97EAB4", Offset = "0x97EAB4", VA = "0x97EAB4")]
	public Level5WaterBubblePool()
	{
	}
}
[Token(Token = "0x2000135")]
public class Level5WaterBubbleSpawner : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bubblePrefab;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPoint;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bubbleLifetime;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float bubbleSpeed;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bubbleInterval;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Level5WaterBubblePool bubblePool;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float invisibleTimer;

	[Token(Token = "0x400086D")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x97EB38", Offset = "0x97EB38", VA = "0x97EB38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x97EBA0", Offset = "0x97EBA0", VA = "0x97EBA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x97ECDC", Offset = "0x97ECDC", VA = "0x97ECDC")]
	public Level5WaterBubbleSpawner()
	{
	}
}
[Token(Token = "0x2000136")]
public class Level6SegmentCulling : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> segments;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> startingSegments;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> activeSegments;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> savedActiveSegments;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x981718", Offset = "0x981718", VA = "0x981718")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x98186C", Offset = "0x98186C", VA = "0x98186C")]
	public void EnableSegment(int segmentIndex)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x98195C", Offset = "0x98195C", VA = "0x98195C")]
	public void DisableSegment(int segmentIndex)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x981A4C", Offset = "0x981A4C", VA = "0x981A4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x981B20", Offset = "0x981B20", VA = "0x981B20")]
	private void OnCheckpointTrigger(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x981C9C", Offset = "0x981C9C", VA = "0x981C9C")]
	private void OnReload()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x981DE0", Offset = "0x981DE0", VA = "0x981DE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x981E54", Offset = "0x981E54", VA = "0x981E54")]
	public Level6SegmentCulling()
	{
	}
}
[Token(Token = "0x2000137")]
public class MoveToPosition : MonoBehaviour
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 target;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0D18", Offset = "0x7C0D18")]
	private InGameCharacterMovement <charMov>k__BackingField;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0D28", Offset = "0x7C0D28")]
	private bool <reached>k__BackingField;

	[Token(Token = "0x17000087")]
	public InGameCharacterMovement charMov
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xA39164", Offset = "0xA39164", VA = "0xA39164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA44", Offset = "0x7CEA44")]
		get
		{
			return null;
		}
		[Token(Token = "0x600076B")]
		[Address(RVA = "0xA3916C", Offset = "0xA3916C", VA = "0xA3916C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA54", Offset = "0x7CEA54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public bool reached
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0xA39174", Offset = "0xA39174", VA = "0xA39174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA64", Offset = "0x7CEA64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600076D")]
		[Address(RVA = "0xA3917C", Offset = "0xA3917C", VA = "0xA3917C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA74", Offset = "0x7CEA74")]
		private set
		{
		}
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA39188", Offset = "0xA39188", VA = "0xA39188")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA391EC", Offset = "0xA391EC", VA = "0xA391EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA394E0", Offset = "0xA394E0", VA = "0xA394E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA39510", Offset = "0xA39510", VA = "0xA39510")]
	public MoveToPosition()
	{
	}
}
[Token(Token = "0x2000138")]
public class AllySpaceship : MonoBehaviour
{
	[Token(Token = "0x20005B2")]
	private enum State
	{
		[Token(Token = "0x4001D12")]
		Idle,
		[Token(Token = "0x4001D13")]
		Attacking,
		[Token(Token = "0x4001D14")]
		UTurn,
		[Token(Token = "0x4001D15")]
		Returning
	}

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform defaultPosition;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float uTurnPitch;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shootingInterval;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve attackingSlerpByDistance;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve returningSlerpByDistance;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody body;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Cannon cannon;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State state;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform targetPosition;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float shootingTimer;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA961C0", Offset = "0xA961C0", VA = "0xA961C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA96260", Offset = "0xA96260", VA = "0xA96260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA96AF0", Offset = "0xA96AF0", VA = "0xA96AF0")]
	private void Shoot()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xA96C94", Offset = "0xA96C94", VA = "0xA96C94")]
	private void ReceiveAttackOrder(Transform target)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA96B1C", Offset = "0xA96B1C", VA = "0xA96B1C")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA96CC4", Offset = "0xA96CC4", VA = "0xA96CC4")]
	public AllySpaceship()
	{
	}
}
[Token(Token = "0x2000139")]
public class RivalController : MonoBehaviour
{
	[Token(Token = "0x20005B3")]
	public enum State
	{
		[Token(Token = "0x4001D17")]
		Wandering,
		[Token(Token = "0x4001D18")]
		Fighting,
		[Token(Token = "0x4001D19")]
		Dead,
		[Token(Token = "0x4001D1A")]
		Cutscene
	}

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera gameCamera;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject insertCoin;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rivalIcon;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image healthBar;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text scoreTxt;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0D38", Offset = "0x7C0D38")]
	private int <score>k__BackingField;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0D48", Offset = "0x7C0D48")]
	private State <state>k__BackingField;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int scoreCap;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MoveToPosition move;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animator;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 originalPos;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 currentTarget;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float punchCooldown;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timer;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool rivalActivated;

	[Token(Token = "0x17000089")]
	public int score
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xA67A88", Offset = "0xA67A88", VA = "0xA67A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA84", Offset = "0x7CEA84")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000779")]
		[Address(RVA = "0xA67A90", Offset = "0xA67A90", VA = "0xA67A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEA94", Offset = "0x7CEA94")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public State state
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0xA67A98", Offset = "0xA67A98", VA = "0xA67A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEAA4", Offset = "0x7CEAA4")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x600077B")]
		[Address(RVA = "0xA67AA0", Offset = "0xA67AA0", VA = "0xA67AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEAB4", Offset = "0x7CEAB4")]
		private set
		{
		}
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xA67AA8", Offset = "0xA67AA8", VA = "0xA67AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA67B64", Offset = "0xA67B64", VA = "0xA67B64")]
	private void Update()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA67DF4", Offset = "0xA67DF4", VA = "0xA67DF4")]
	public void ChangeStateTo(State newState)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA68024", Offset = "0xA68024", VA = "0xA68024")]
	private void SetTarget()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA68190", Offset = "0xA68190", VA = "0xA68190")]
	public void OnDamage(float damage, HitBox.Type type)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA681F8", Offset = "0xA681F8", VA = "0xA681F8")]
	public void ResetRival()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA68420", Offset = "0xA68420", VA = "0xA68420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA68520", Offset = "0xA68520", VA = "0xA68520")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA685FC", Offset = "0xA685FC", VA = "0xA685FC")]
	public RivalController()
	{
	}
}
[Token(Token = "0x200013A")]
public class CedricHitDetector_Level3Intro : CyblinHitDetector
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string extraSound;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xAAC418", Offset = "0xAAC418", VA = "0xAAC418", Slot = "4")]
	protected override void OnAchievementAction()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xAAC4B8", Offset = "0xAAC4B8", VA = "0xAAC4B8")]
	public CedricHitDetector_Level3Intro()
	{
	}
}
[Token(Token = "0x200013B")]
public class CompanionCharacterController : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	public enum State
	{
		[Token(Token = "0x4001D1C")]
		Idle,
		[Token(Token = "0x4001D1D")]
		Following,
		[Token(Token = "0x4001D1E")]
		Cutscene
	}

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string followFlag;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FollowBehaviour followBehaviour;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform content2D;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Animator animator;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State state;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xBEC4B8", Offset = "0xBEC4B8", VA = "0xBEC4B8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xBEC624", Offset = "0xBEC624", VA = "0xBEC624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xBEC630", Offset = "0xBEC630", VA = "0xBEC630")]
	private void GameReloaded()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xBEC674", Offset = "0xBEC674", VA = "0xBEC674")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xBEC7B8", Offset = "0xBEC7B8", VA = "0xBEC7B8")]
	private void OnChangeDot(DotType type)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xBEC8F0", Offset = "0xBEC8F0", VA = "0xBEC8F0", Slot = "5")]
	public virtual void ReadFlags()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xBEC954", Offset = "0xBEC954", VA = "0xBEC954")]
	public void ChangeState(State newState)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xBEC9D0", Offset = "0xBEC9D0", VA = "0xBEC9D0")]
	public CompanionCharacterController()
	{
	}
}
[Token(Token = "0x200013C")]
public class Level2Cedric : CompanionCharacterController
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FollowSidescrollerCharacter followSidescrollerBehaviour;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 originalPosition;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9711D4", Offset = "0x9711D4", VA = "0x9711D4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x971298", Offset = "0x971298", VA = "0x971298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x97143C", Offset = "0x97143C", VA = "0x97143C", Slot = "5")]
	public override void ReadFlags()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x971558", Offset = "0x971558", VA = "0x971558")]
	public Level2Cedric()
	{
	}
}
[Token(Token = "0x200013D")]
public class Level3Cedric : CompanionCharacterController
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FollowSidescrollerCharacter followSidescrollerBehaviour;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform mirror;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mirrorOffset;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float time;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 mirrorStartPosition;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float mirrorEnterDuration;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float mirrorStayDuration;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float mirrorExitDuration;

	[Token(Token = "0x40008A1")]
	private const float mirrorOffsetAmount = 0.65f;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x9741F0", Offset = "0x9741F0", VA = "0x9741F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x974288", Offset = "0x974288", VA = "0x974288")]
	private void Update()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x97442C", Offset = "0x97442C", VA = "0x97442C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x974790", Offset = "0x974790", VA = "0x974790")]
	public void StopAtMirror(Transform mirror)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x9746B4", Offset = "0x9746B4", VA = "0x9746B4")]
	private Vector3 GetMirrorPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x9748CC", Offset = "0x9748CC", VA = "0x9748CC", Slot = "5")]
	public override void ReadFlags()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x9749E8", Offset = "0x9749E8", VA = "0x9749E8")]
	public Level3Cedric()
	{
	}
}
[Token(Token = "0x200013E")]
public class CyblinHitDetector : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] tags;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievements achievement;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string onCompleted;

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBF14C8", Offset = "0xBF14C8", VA = "0xBF14C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBF166C", Offset = "0xBF166C", VA = "0xBF166C")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xBF16AC", Offset = "0xBF16AC", VA = "0xBF16AC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xBF1508", Offset = "0xBF1508", VA = "0xBF1508")]
	private void CheckTrigger(GameObject obj)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBF16EC", Offset = "0xBF16EC", VA = "0xBF16EC", Slot = "4")]
	protected virtual void OnAchievementAction()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBF16F0", Offset = "0xBF16F0", VA = "0xBF16F0")]
	public CyblinHitDetector()
	{
	}
}
[Token(Token = "0x200013F")]
public class Level6Dragon : MonoBehaviour
{
	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 movementArea;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocity;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float axisSmoothFactor;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x40008A9")]
	private const float minAxis = 0.3f;

	[Token(Token = "0x40008AA")]
	private const float maxAxis = 0.8f;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x97F598", Offset = "0x97F598", VA = "0x97F598")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x97F5DC", Offset = "0x97F5DC", VA = "0x97F5DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x97F8E4", Offset = "0x97F8E4", VA = "0x97F8E4")]
	private Vector2 GetInputAxis()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x97FAC4", Offset = "0x97FAC4", VA = "0x97FAC4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x97FB88", Offset = "0x97FB88", VA = "0x97FB88")]
	public Level6Dragon()
	{
	}
}
[Token(Token = "0x2000140")]
public class DrDentist : IngameInteractable
{
	[Serializable]
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCD94", Offset = "0x7BCD94")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__11_0;

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xB525C8", Offset = "0xB525C8", VA = "0xB525C8")]
		public <>c()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xB525D0", Offset = "0xB525D0", VA = "0xB525D0")]
		internal bool <StartDentistPassCutscene>b__11_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDA4", Offset = "0x7BCDA4")]
	private sealed class <StartDentistPassCutscene>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrDentist <>4__this;

		[Token(Token = "0x17000387")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0xB5289C", Offset = "0xB5289C", VA = "0xB5289C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0xB5290C", Offset = "0xB5290C", VA = "0xB5290C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xB52344", Offset = "0xB52344", VA = "0xB52344")]
		[DebuggerHidden]
		public <StartDentistPassCutscene>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xB5263C", Offset = "0xB5263C", VA = "0xB5263C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xB52640", Offset = "0xB52640", VA = "0xB52640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xB528A4", Offset = "0xB528A4", VA = "0xB528A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TimelineCutscene cedricCutscene;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string dentistBGM;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0D88", Offset = "0x7C0D88")]
	public DialogueDropdown beforeCedricDialogue;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0DEC", Offset = "0x7C0DEC")]
	public DialogueDropdown beforeCedricDialogueShort;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0E50", Offset = "0x7C0E50")]
	public DialogueDropdown DentistPass;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0EB4", Offset = "0x7C0EB4")]
	public DialogueDropdown DentistPassAlternative;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C0F18", Offset = "0x7C0F18")]
	public DialogueDropdown afterCedricDialogue;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasTalkedOnce;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool hasMoved;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool allowInteraction;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB52178", Offset = "0xB52178", VA = "0xB52178")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xB522C4", Offset = "0xB522C4", VA = "0xB522C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEAC4", Offset = "0x7CEAC4")]
	private IEnumerator StartDentistPassCutscene()
	{
		return null;
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xB52370", Offset = "0xB52370", VA = "0xB52370")]
	public void ToggleAllowInteraction()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xB52380", Offset = "0xB52380", VA = "0xB52380", Slot = "4")]
	public override void Interact()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB52550", Offset = "0xB52550", VA = "0xB52550")]
	public DrDentist()
	{
	}
}
[Token(Token = "0x2000141")]
public class FollowBehaviour : MonoBehaviour
{
	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xAD1484", Offset = "0xAD1484", VA = "0xAD1484", Slot = "4")]
	public virtual void SetFollowTarget(GameObject target)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xAD1488", Offset = "0xAD1488", VA = "0xAD1488", Slot = "5")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xAD148C", Offset = "0xAD148C", VA = "0xAD148C")]
	public FollowBehaviour()
	{
	}
}
[Token(Token = "0x2000142")]
public class FollowSidescrollerCharacter : FollowBehaviour
{
	[Token(Token = "0x20005B7")]
	private struct CharacterState : IRecordableValue<CharacterState>
	{
		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC10C", Offset = "0x7CC10C")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector2 position;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float walkingTempo;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool flipped;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool grounded;

		[Token(Token = "0x17000389")]
		public float time
		{
			[Token(Token = "0x6002582")]
			[Address(RVA = "0x861FC0", Offset = "0x861FC0", VA = "0x861FC0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D3A3C", Offset = "0x7D3A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002583")]
			[Address(RVA = "0x861FC8", Offset = "0x861FC8", VA = "0x861FC8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D3A4C", Offset = "0x7D3A4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public bool walking
		{
			[Token(Token = "0x6002584")]
			[Address(RVA = "0x861FD0", Offset = "0x861FD0", VA = "0x861FD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x861FE0", Offset = "0x861FE0", VA = "0x861FE0", Slot = "6")]
		public CharacterState Interpolate(CharacterState other, float t)
		{
			return default(CharacterState);
		}
	}

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InGameCharacterMovement followCharMov;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SidescrollerFollowPoints followPoints;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followPointDuration;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator characterAnim;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0F7C", Offset = "0x7C0F7C")]
	private bool <isWalking>k__BackingField;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0F8C", Offset = "0x7C0F8C")]
	private bool <isGrounded>k__BackingField;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C0F9C", Offset = "0x7C0F9C")]
	private bool <isFlipped>k__BackingField;

	[Token(Token = "0x40008BD")]
	private const float movingTolerance = 0.1f;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ValueRecorder<CharacterState> recorder;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int followPoint;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float followPointSmooth;

	[Token(Token = "0x1700008B")]
	public bool isWalking
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAD1904", Offset = "0xAD1904", VA = "0xAD1904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB28", Offset = "0x7CEB28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAD190C", Offset = "0xAD190C", VA = "0xAD190C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB38", Offset = "0x7CEB38")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool isGrounded
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xAD1918", Offset = "0xAD1918", VA = "0xAD1918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB48", Offset = "0x7CEB48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xAD1920", Offset = "0xAD1920", VA = "0xAD1920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB58", Offset = "0x7CEB58")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public bool isFlipped
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xAD192C", Offset = "0xAD192C", VA = "0xAD192C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB68", Offset = "0x7CEB68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xAD1934", Offset = "0xAD1934", VA = "0xAD1934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB78", Offset = "0x7CEB78")]
		private set
		{
		}
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xAD1940", Offset = "0xAD1940", VA = "0xAD1940")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xAD206C", Offset = "0xAD206C", VA = "0xAD206C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xAD1EA8", Offset = "0xAD1EA8", VA = "0xAD1EA8")]
	private void AdjustFollowPointFactor(float delta)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xAD1F78", Offset = "0xAD1F78", VA = "0xAD1F78")]
	private float GetSensorOffset(Sensor sensor)
	{
		return default(float);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xAD1CA0", Offset = "0xAD1CA0", VA = "0xAD1CA0")]
	private CharacterState GetCurrentState()
	{
		return default(CharacterState);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xAD2110", Offset = "0xAD2110", VA = "0xAD2110", Slot = "4")]
	public override void SetFollowTarget(GameObject target)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xAD21E8", Offset = "0xAD21E8", VA = "0xAD21E8", Slot = "5")]
	public override void Clear()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xAD2248", Offset = "0xAD2248", VA = "0xAD2248")]
	public FollowSidescrollerCharacter()
	{
	}
}
[Token(Token = "0x2000143")]
public class FollowTopDownCharacter : FollowBehaviour
{
	[Token(Token = "0x20005B8")]
	private struct Position : IRecordableValue<Position>
	{
		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC11C", Offset = "0x7CC11C")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x1700038B")]
		public float time
		{
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x862014", Offset = "0x862014", VA = "0x862014", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D3A5C", Offset = "0x7D3A5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x86201C", Offset = "0x86201C", VA = "0x86201C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D3A6C", Offset = "0x7D3A6C")]
			set
			{
			}
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x862024", Offset = "0x862024", VA = "0x862024")]
		public Position(Vector3 position)
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x862034", Offset = "0x862034", VA = "0x862034", Slot = "6")]
		public Position Interpolate(Position other, float t)
		{
			return default(Position);
		}
	}

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ValueRecorder<Position> recorder;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool moving;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xAD241C", Offset = "0xAD241C", VA = "0xAD241C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xAD25E4", Offset = "0xAD25E4", VA = "0xAD25E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xAD275C", Offset = "0xAD275C", VA = "0xAD275C", Slot = "4")]
	public override void SetFollowTarget(GameObject target)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xAD2760", Offset = "0xAD2760", VA = "0xAD2760", Slot = "5")]
	public override void Clear()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xAD27C8", Offset = "0xAD27C8", VA = "0xAD27C8")]
	public FollowTopDownCharacter()
	{
	}
}
[Token(Token = "0x2000144")]
public class Level5IngameDavid : CompanionCharacterController
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 originalPosition;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FollowSidescrollerCharacter followSidescrollerBehaviour;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x97CFF0", Offset = "0x97CFF0", VA = "0x97CFF0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x97D124", Offset = "0x97D124", VA = "0x97D124")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x97D2E0", Offset = "0x97D2E0", VA = "0x97D2E0", Slot = "5")]
	public override void ReadFlags()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x97D3E4", Offset = "0x97D3E4", VA = "0x97D3E4")]
	public Level5IngameDavid()
	{
	}
}
[Token(Token = "0x2000145")]
public class Level1Master : CompanionCharacterController
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 originalPosition;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xB01160", Offset = "0xB01160", VA = "0xB01160")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xB011B0", Offset = "0xB011B0", VA = "0xB011B0", Slot = "5")]
	public override void ReadFlags()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xB012B4", Offset = "0xB012B4", VA = "0xB012B4")]
	public Level1Master()
	{
	}
}
[Token(Token = "0x2000146")]
public class ObsoleteInGameInput : InGameInput
{
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA3D68C", Offset = "0xA3D68C", VA = "0xA3D68C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA3D844", Offset = "0xA3D844", VA = "0xA3D844")]
	public ObsoleteInGameInput()
	{
	}
}
[Token(Token = "0x2000147")]
public class PhysicsLayerCheck : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onEnterLayer;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onLeaveLayer;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radius;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool entered;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xBF45F4", Offset = "0xBF45F4", VA = "0xBF45F4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xBF464C", Offset = "0xBF464C", VA = "0xBF464C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xBF4730", Offset = "0xBF4730", VA = "0xBF4730")]
	public PhysicsLayerCheck()
	{
	}
}
[Token(Token = "0x2000148")]
public class PixelDoor : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toll;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text pixelText;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool resetOnCheckpoint;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool open;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool audioFromTV;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameTV tvSource;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string openDoorSound;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB8C0BC", Offset = "0xB8C0BC", VA = "0xB8C0BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB8C198", Offset = "0xB8C198", VA = "0xB8C198")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB8C20C", Offset = "0xB8C20C", VA = "0xB8C20C")]
	private void Respawn()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB8C28C", Offset = "0xB8C28C", VA = "0xB8C28C")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB8C45C", Offset = "0xB8C45C", VA = "0xB8C45C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB8C314", Offset = "0xB8C314", VA = "0xB8C314")]
	private void Open()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB8C4E4", Offset = "0xB8C4E4", VA = "0xB8C4E4")]
	private void LoadInfo()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB8C5E0", Offset = "0xB8C5E0", VA = "0xB8C5E0")]
	public PixelDoor()
	{
	}
}
[Token(Token = "0x2000149")]
public class DestructablePlatform : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	private const float timeToTrigger = 0.3f;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToReset;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToDisable;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string destroyFMODEvent;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool wasTriggered;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xB428FC", Offset = "0xB428FC", VA = "0xB428FC")]
	private void OnTriggerStay2D(Collider2D c)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xB42BCC", Offset = "0xB42BCC", VA = "0xB42BCC")]
	private void TriggerAnimation()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xB42C80", Offset = "0xB42C80", VA = "0xB42C80")]
	private void Reset()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xB42D40", Offset = "0xB42D40", VA = "0xB42D40")]
	public DestructablePlatform()
	{
	}
}
[Token(Token = "0x200014A")]
public class RotatingPlatforms : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform platformsGroup;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float angularSpeed;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CheckBeingRendered checkRendered;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] platforms;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationAmount;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastVisibleTime;

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA68FC4", Offset = "0xA68FC4", VA = "0xA68FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA69154", Offset = "0xA69154", VA = "0xA69154")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA694D8", Offset = "0xA694D8", VA = "0xA694D8")]
	public RotatingPlatforms()
	{
	}
}
[Token(Token = "0x200014B")]
public class Teleport : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	public delegate void TeleportAction(int teleportId);

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetPosition;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C0FCC", Offset = "0x7C0FCC")]
	[EventRef]
	public string changeBGMTo;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameTV tvSide;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int id;

	[Token(Token = "0x14000004")]
	public event TeleportAction OnTeleport
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xA7EC20", Offset = "0xA7EC20", VA = "0xA7EC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB88", Offset = "0x7CEB88")]
		add
		{
		}
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xA7ECC8", Offset = "0xA7ECC8", VA = "0xA7ECC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEB98", Offset = "0x7CEB98")]
		remove
		{
		}
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xA7EB10", Offset = "0xA7EB10", VA = "0xA7EB10")]
	private void OnTriggerEnter2D(Collider2D c)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xA7EBE0", Offset = "0xA7EBE0", VA = "0xA7EBE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xA7EB50", Offset = "0xA7EB50", VA = "0xA7EB50")]
	private void CheckTrigger(GameObject obj)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA7ED70", Offset = "0xA7ED70", VA = "0xA7ED70")]
	private void TeleportPlayer()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA7EE64", Offset = "0xA7EE64", VA = "0xA7EE64")]
	private void ChangeBGM()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA7F14C", Offset = "0xA7F14C", VA = "0xA7F14C")]
	public Teleport()
	{
	}
}
[Token(Token = "0x200014C")]
public class ProgressionTrigger : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C1028", Offset = "0x7C1028")]
	public StateDropdown stateToGo;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xB9AE4C", Offset = "0xB9AE4C", VA = "0xB9AE4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xB9B10C", Offset = "0xB9B10C", VA = "0xB9B10C")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xB9AEEC", Offset = "0xB9AEEC", VA = "0xB9AEEC")]
	private void TestProgress()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xB9B1AC", Offset = "0xB9B1AC", VA = "0xB9B1AC")]
	public ProgressionTrigger()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA6FC", Offset = "0x7BA6FC")]
public class SwitchTVOnState : MonoBehaviour
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TVController tv;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProgressionWatcher watcher;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool oldActive;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xA7CB50", Offset = "0xA7CB50", VA = "0xA7CB50")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xA7CFA0", Offset = "0xA7CFA0", VA = "0xA7CFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xA7D058", Offset = "0xA7D058", VA = "0xA7D058")]
	public SwitchTVOnState()
	{
	}
}
[Token(Token = "0x200014E")]
public class InGameToRealWorldBGMOnState : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string newBGM;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string newBGM_Demo;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVController tv;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ProgressionState state;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xAEFB18", Offset = "0xAEFB18", VA = "0xAEFB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xAEFB7C", Offset = "0xAEFB7C", VA = "0xAEFB7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xAEFC10", Offset = "0xAEFC10", VA = "0xAEFC10")]
	private void OnChangedState(int stateIndex, string stateName)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xAEFD44", Offset = "0xAEFD44", VA = "0xAEFD44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xAEFDD8", Offset = "0xAEFDD8", VA = "0xAEFDD8")]
	public InGameToRealWorldBGMOnState()
	{
	}
}
[Token(Token = "0x200014F")]
public class Jumping : MonoBehaviour
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] jumpSpeeds;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float interval;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float groundTimer;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentJumpIndex;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InGameCharacterMovement charMov;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EnemyBase enemyBase;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xAFD884", Offset = "0xAFD884", VA = "0xAFD884")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xAFD910", Offset = "0xAFD910", VA = "0xAFD910")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xAFDA00", Offset = "0xAFDA00", VA = "0xAFDA00")]
	public Jumping()
	{
	}
}
[Token(Token = "0x2000150")]
[ExecuteInEditMode]
public class LaserFight : MonoBehaviour
{
	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform goodBeam;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform evilBeam;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float goodPower;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float evilPower;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform encounterBurst;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform evilBeamSource;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xAFF4C4", Offset = "0xAFF4C4", VA = "0xAFF4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xAFF864", Offset = "0xAFF864", VA = "0xAFF864")]
	public LaserFight()
	{
	}
}
[Token(Token = "0x2000151")]
public class Level2HealthBar : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HealthBar[] healthBar;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool deactivateIfLastBarIsEmpty;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentBar;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x971B58", Offset = "0x971B58", VA = "0x971B58")]
	public void SetNextBar()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x971CEC", Offset = "0x971CEC", VA = "0x971CEC")]
	public void ResetCurrentBar()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x971DB4", Offset = "0x971DB4", VA = "0x971DB4")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x971DC0", Offset = "0x971DC0", VA = "0x971DC0")]
	public Level2HealthBar()
	{
	}
}
[Token(Token = "0x2000152")]
public class Level5MomDialogue : MonoBehaviour
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RWVoiceEmitter momDialogueInstance;

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x97D3EC", Offset = "0x97D3EC", VA = "0x97D3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x97D450", Offset = "0x97D450", VA = "0x97D450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x97D500", Offset = "0x97D500", VA = "0x97D500")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x97D58C", Offset = "0x97D58C", VA = "0x97D58C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x97D63C", Offset = "0x97D63C", VA = "0x97D63C")]
	public Level5MomDialogue()
	{
	}
}
[Token(Token = "0x2000153")]
public class Level6ShootCylochState : ProgressionState
{
	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector waitingLoopTimeline;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject cyblinHitEffect;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float health;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool hit;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x981EF4", Offset = "0x981EF4", VA = "0x981EF4", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x981F88", Offset = "0x981F88", VA = "0x981F88")]
	public void OnStateTimelineEnd_Event()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x981F90", Offset = "0x981F90", VA = "0x981F90")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x982028", Offset = "0x982028", VA = "0x982028")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x982140", Offset = "0x982140", VA = "0x982140")]
	private void CollDown()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x9820EC", Offset = "0x9820EC", VA = "0x9820EC")]
	private void CyblinEsbagacated()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x982178", Offset = "0x982178", VA = "0x982178")]
	public Level6ShootCylochState()
	{
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA770", Offset = "0x7BA770")]
public class LoopFMODEventsOnState : MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool overwriteCurrentEvent;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string[] eventList;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float startWithInterval;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C10BC", Offset = "0x7C10BC")]
	public float defaultInterval;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] intervalByEvent;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance eventInstance;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentEventIndex;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x1700008E")]
	private bool indexIsValid
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xA310F4", Offset = "0xA310F4", VA = "0xA310F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	private bool canPlay
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xA31138", Offset = "0xA31138", VA = "0xA31138")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA31208", Offset = "0xA31208", VA = "0xA31208")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA312B8", Offset = "0xA312B8", VA = "0xA312B8")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA31324", Offset = "0xA31324", VA = "0xA31324")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA313D4", Offset = "0xA313D4", VA = "0xA313D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA31444", Offset = "0xA31444", VA = "0xA31444")]
	private void Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA31570", Offset = "0xA31570", VA = "0xA31570")]
	private void PlayEvent(string _event)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA31680", Offset = "0xA31680", VA = "0xA31680")]
	public LoopFMODEventsOnState()
	{
	}
}
[Token(Token = "0x2000155")]
public class MusicTrigger : MonoBehaviour
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string bossThemeFMODEvent;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xA396EC", Offset = "0xA396EC", VA = "0xA396EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xA396F0", Offset = "0xA396F0", VA = "0xA396F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA39844", Offset = "0xA39844", VA = "0xA39844")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA39778", Offset = "0xA39778", VA = "0xA39778")]
	private void ChangeMusic()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xA398CC", Offset = "0xA398CC", VA = "0xA398CC")]
	public MusicTrigger()
	{
	}
}
[Token(Token = "0x2000156")]
public class NextSceneOnStart : MonoBehaviour
{
	[Token(Token = "0x6000812")]
	[Address(RVA = "0xA3C914", Offset = "0xA3C914", VA = "0xA3C914")]
	private void Start()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xA3C974", Offset = "0xA3C974", VA = "0xA3C974")]
	public NextSceneOnStart()
	{
	}
}
[Token(Token = "0x2000157")]
public class BufferedAudioStream
{
	[Token(Token = "0x400090D")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000911")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000912")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000913")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000914")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xAA702C", Offset = "0xAA702C", VA = "0xAA702C")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xAA7184", Offset = "0xAA7184", VA = "0xAA7184")]
	public void Update()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xAA7120", Offset = "0xAA7120", VA = "0xAA7120")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xAA7388", Offset = "0xAA7388", VA = "0xAA7388")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000158")]
public class OptOutHandlerMenuItem : MonoBehaviour
{
	[Token(Token = "0x6000818")]
	[Address(RVA = "0xC3D76C", Offset = "0xC3D76C", VA = "0xC3D76C")]
	private static void OnFailure(string reason)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xC3D7F4", Offset = "0xC3D7F4", VA = "0xC3D7F4")]
	private void OnURLReceived(string url)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xC3D800", Offset = "0xC3D800", VA = "0xC3D800")]
	public void OpenDataURL()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xC3D8AC", Offset = "0xC3D8AC", VA = "0xC3D8AC")]
	public void ShowBrowserConfirmationScreen()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xC3D944", Offset = "0xC3D944", VA = "0xC3D944")]
	public OptOutHandlerMenuItem()
	{
	}
}
[Token(Token = "0x2000159")]
public class OutfitMenuItem : MonoBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextLocalizing skinName;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextLocalizing selectTxt;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1104", Offset = "0x7C1104")]
	public Image skinImage;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image lockImage;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Sprite> skinIcons;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1114", Offset = "0x7C1114")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C1114", Offset = "0x7C1114")]
	public string selectKey;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C1188", Offset = "0x7C1188")]
	public string selectedKey;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Button left;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly Button right;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MenuSelectable menuSelectable;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentDisplayIndex;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xC3D94C", Offset = "0xC3D94C", VA = "0xC3D94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC3D9B0", Offset = "0xC3D9B0", VA = "0xC3D9B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC3D9BC", Offset = "0xC3D9BC", VA = "0xC3D9BC")]
	private void ChangeDisplayedTo(int index, bool playEvent = true)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC3DC38", Offset = "0xC3DC38", VA = "0xC3DC38")]
	private bool CheckButtonPressed(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC3DE08", Offset = "0xC3DE08", VA = "0xC3DE08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC3DE64", Offset = "0xC3DE64", VA = "0xC3DE64")]
	public void SelectCurrentSkin()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xC3DF18", Offset = "0xC3DF18", VA = "0xC3DF18")]
	public OutfitMenuItem()
	{
	}
}
[Token(Token = "0x200015A")]
public class PaperRap : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Interactable interactable;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rippedPaperRap;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject intactPaperRap;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xC3EA54", Offset = "0xC3EA54", VA = "0xC3EA54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xC3EAF8", Offset = "0xC3EAF8", VA = "0xC3EAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC3EBF0", Offset = "0xC3EBF0", VA = "0xC3EBF0")]
	public PaperRap()
	{
	}
}
[Token(Token = "0x200015B")]
public class PicoOffsetController : MonoBehaviour
{
	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB8C0AC", Offset = "0xB8C0AC", VA = "0xB8C0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB8C0B0", Offset = "0xB8C0B0", VA = "0xB8C0B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xB8C0B4", Offset = "0xB8C0B4", VA = "0xB8C0B4")]
	public PicoOffsetController()
	{
	}
}
[Token(Token = "0x200015C")]
public class ProgressableObject : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string watchFlag;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject affectedObject;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool activate;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xB98818", Offset = "0xB98818", VA = "0xB98818")]
	private void WatchForFlag(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xB988C0", Offset = "0xB988C0", VA = "0xB988C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xB9895C", Offset = "0xB9895C", VA = "0xB9895C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xB989F8", Offset = "0xB989F8", VA = "0xB989F8")]
	public ProgressableObject()
	{
	}
}
[Token(Token = "0x200015D")]
public class SpriteAnimationShader : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C11EC", Offset = "0x7C11EC")]
	public Shader shader;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C1224", Offset = "0x7C1224")]
	public Sprite[] sprites;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C125C", Offset = "0x7C125C")]
	public float fps;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C1294", Offset = "0x7C1294")]
	public float wave;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Texture2D> cache;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA75D9C", Offset = "0xA75D9C", VA = "0xA75D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA76838", Offset = "0xA76838", VA = "0xA76838")]
	public SpriteAnimationShader()
	{
	}
}
[Token(Token = "0x200015E")]
public class StartDialogue : MonoBehaviour
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C12CC", Offset = "0x7C12CC")]
	public string DialogueID;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BalloonType balloonType;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool advanceProgressionState;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA76AD8", Offset = "0xA76AD8", VA = "0xA76AD8")]
	public StartDialogue()
	{
	}
}
[Token(Token = "0x200015F")]
public class PlayAudioOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inGame;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameTV tv;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string fmodEvent;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerOnce;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tagToCheck;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggered;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xB8DC78", Offset = "0xB8DC78", VA = "0xB8DC78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xB8DE18", Offset = "0xB8DE18", VA = "0xB8DE18")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xB8DCB8", Offset = "0xB8DCB8", VA = "0xB8DCB8")]
	private void CheckTrigger(GameObject obj)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xB8DE58", Offset = "0xB8DE58", VA = "0xB8DE58")]
	public PlayAudioOnTrigger()
	{
	}
}
[Token(Token = "0x2000160")]
public class ArvoreLogoVFX : MonoBehaviour
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arvoreLogo;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer[] arvoreLogoRenderers;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arvoreLogoFadeSpeed;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float showLogoTime;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem horizonParticles;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fadeTime;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float logoTime;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA99014", Offset = "0xA99014", VA = "0xA99014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA991B8", Offset = "0xA991B8", VA = "0xA991B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA992C8", Offset = "0xA992C8", VA = "0xA992C8")]
	public ArvoreLogoVFX()
	{
	}
}
[Token(Token = "0x2000161")]
public class InputDetectionMessage : MonoBehaviour
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject defaultText;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject anykeyText;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputDevice currentDevice;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool showDefault;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xAF137C", Offset = "0xAF137C", VA = "0xAF137C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xAF14C8", Offset = "0xAF14C8", VA = "0xAF14C8")]
	public InputDetectionMessage()
	{
	}
}
[Token(Token = "0x2000162")]
public class SettingsLoader : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1314", Offset = "0x7C1314")]
	public string[] busPaths;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xA70FEC", Offset = "0xA70FEC", VA = "0xA70FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xA71000", Offset = "0xA71000", VA = "0xA71000")]
	private void LoadAudioSettings()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xA711AC", Offset = "0xA711AC", VA = "0xA711AC")]
	private void LoadSubtitleSettings()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA71294", Offset = "0xA71294", VA = "0xA71294")]
	public SettingsLoader()
	{
	}
}
[Token(Token = "0x2000163")]
public class StepByStepRecenter : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	private enum State
	{
		[Token(Token = "0x4001D2C")]
		BeforeRecenter,
		[Token(Token = "0x4001D2D")]
		AfterRecenter,
		[Token(Token = "0x4001D2E")]
		FadeOut,
		[Token(Token = "0x4001D2F")]
		Logos
	}

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C134C", Offset = "0x7C134C")]
	public GameObject beforeRecenter;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject afterRecenter;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector logosTimeline;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fadeOut;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1384", Offset = "0x7C1384")]
	public Transform headFollowObject;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform headFollowTarget;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C13BC", Offset = "0x7C13BC")]
	public float beforeRecenterDelay;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float afterRecenterDurationBuild;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float afterRecenterDurationDemo;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float logosDuration;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fadeOutDuration;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector4 fmodLogoColor;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float afterRecenterDuration;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private State state;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float time;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 followVelocity;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float followSmoothness;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xA78378", Offset = "0xA78378", VA = "0xA78378")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA78418", Offset = "0xA78418", VA = "0xA78418")]
	private void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xA786A0", Offset = "0xA786A0", VA = "0xA786A0")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xA787D8", Offset = "0xA787D8", VA = "0xA787D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xA78388", Offset = "0xA78388", VA = "0xA78388")]
	private void UpdateActiveObjects()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xA78934", Offset = "0xA78934", VA = "0xA78934")]
	public StepByStepRecenter()
	{
	}
}
[Token(Token = "0x2000164")]
public class PlayFMODEventsSequentially : MonoBehaviour
{
	[Token(Token = "0x20005BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDB4", Offset = "0x7BCDB4")]
	private sealed class <Playlist>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayFMODEventsSequentially <>4__this;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0xB8E2F0", Offset = "0xB8E2F0", VA = "0xB8E2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0xB8E360", Offset = "0xB8E360", VA = "0xB8E360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xB8DFB4", Offset = "0xB8DFB4", VA = "0xB8DFB4")]
		[DebuggerHidden]
		public <Playlist>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xB8E0A4", Offset = "0xB8E0A4", VA = "0xB8E0A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xB8E0A8", Offset = "0xB8E0A8", VA = "0xB8E0A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xB8E2F8", Offset = "0xB8E2F8", VA = "0xB8E2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playOnAwake;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intervalBetweenEvents;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string[] eventList;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventInstance eventInstance;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xB8DEC4", Offset = "0xB8DEC4", VA = "0xB8DEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xB8DF08", Offset = "0xB8DF08", VA = "0xB8DF08")]
	public void StartPlaylist()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xB8DF34", Offset = "0xB8DF34", VA = "0xB8DF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEBA8", Offset = "0x7CEBA8")]
	private IEnumerator Playlist()
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xB8DFE0", Offset = "0xB8DFE0", VA = "0xB8DFE0")]
	private PLAYBACK_STATE GetInstancePlaybackState(EventInstance instance)
	{
		return default(PLAYBACK_STATE);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xB8E014", Offset = "0xB8E014", VA = "0xB8E014")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xB8E054", Offset = "0xB8E054", VA = "0xB8E054")]
	public PlayFMODEventsSequentially()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xB8E064", Offset = "0xB8E064", VA = "0xB8E064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC0C", Offset = "0x7CEC0C")]
	private bool <Playlist>b__6_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000165")]
public enum Achievements
{
	[Token(Token = "0x4000959")]
	PLATINUM,
	[Token(Token = "0x400095A")]
	TIME_TRAVELLER,
	[Token(Token = "0x400095B")]
	PLAY_LIKE_A_PRO,
	[Token(Token = "0x400095C")]
	FEELING_DOWN,
	[Token(Token = "0x400095D")]
	SOME_RESPECT,
	[Token(Token = "0x400095E")]
	I_AM_NOT_YOUR_PRINCESS,
	[Token(Token = "0x400095F")]
	SURPRISINGLY_FRESH,
	[Token(Token = "0x4000960")]
	CHRISTMAS_FREAKOUT,
	[Token(Token = "0x4000961")]
	FINISH_LVL_1,
	[Token(Token = "0x4000962")]
	FINISH_LVL_2,
	[Token(Token = "0x4000963")]
	FINISH_LVL_3,
	[Token(Token = "0x4000964")]
	FINISH_LVL_4,
	[Token(Token = "0x4000965")]
	FINISH_LVL_5,
	[Token(Token = "0x4000966")]
	FINISH_GAME,
	[Token(Token = "0x4000967")]
	USE_ALL_DISTRACTIONS,
	[Token(Token = "0x4000968")]
	HONEYPIE,
	[Token(Token = "0x4000969")]
	GAME_COMPLETE_ONE_SESSION,
	[Token(Token = "0x400096A")]
	TRUE_HARDCORE_OLDSCHOOL,
	[Token(Token = "0x400096B")]
	SO_THERE_WAS_A_DIAMOND,
	[Token(Token = "0x400096C")]
	count
}
[Token(Token = "0x2000166")]
public class AchievmentManager : MonoBehaviour
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1404", Offset = "0x7C1404")]
	private static AchievmentManager <Instance>k__BackingField;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] m_Achievements;

	[Token(Token = "0x17000090")]
	public static AchievmentManager Instance
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xA93C8C", Offset = "0xA93C8C", VA = "0xA93C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC1C", Offset = "0x7CEC1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xA93CDC", Offset = "0xA93CDC", VA = "0xA93CDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC2C", Offset = "0x7CEC2C")]
		private set
		{
		}
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA93D34", Offset = "0xA93D34", VA = "0xA93D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA93DE8", Offset = "0xA93DE8", VA = "0xA93DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA93F10", Offset = "0xA93F10", VA = "0xA93F10")]
	private void Init()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA93F7C", Offset = "0xA93F7C", VA = "0xA93F7C")]
	private void GetOculusAchievements()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA94028", Offset = "0xA94028", VA = "0xA94028")]
	private void OnOculusAchievementStored(Message<AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA9468C", Offset = "0xA9468C", VA = "0xA9468C")]
	private void UnlockOculusAchievement(Achievements achiev)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xA93F14", Offset = "0xA93F14", VA = "0xA93F14")]
	public void LoadAchievements()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA94730", Offset = "0xA94730", VA = "0xA94730")]
	public void SetAchievement(Achievements achiev)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA94958", Offset = "0xA94958", VA = "0xA94958")]
	public void SetAchievement(int achiev)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA94B00", Offset = "0xA94B00", VA = "0xA94B00")]
	public AchievmentManager()
	{
	}
}
[Token(Token = "0x2000167")]
public static class AchievmentUnlocker
{
	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA94B08", Offset = "0xA94B08", VA = "0xA94B08")]
	public static void RewardAchievment(int index)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA93B2C", Offset = "0xA93B2C", VA = "0xA93B2C")]
	public static void RewardAchievment(Achievements achievEnum)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA94C08", Offset = "0xA94C08", VA = "0xA94C08")]
	public static bool GetAchievmentState(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA939FC", Offset = "0xA939FC", VA = "0xA939FC")]
	public static bool GetAchievmentState(Achievements achievEnum)
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA94D38", Offset = "0xA94D38", VA = "0xA94D38")]
	public static int AchievmentsCount()
	{
		return default(int);
	}
}
[Token(Token = "0x2000168")]
public class Call_AchievmentUnlocker : MonoBehaviour
{
	[Token(Token = "0x600085D")]
	[Address(RVA = "0xAAAA28", Offset = "0xAAAA28", VA = "0xAAAA28")]
	public void UnlockAchievment(int index)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xAAAA30", Offset = "0xAAAA30", VA = "0xAAAA30")]
	public Call_AchievmentUnlocker()
	{
	}
}
[Token(Token = "0x2000169")]
public class OculusPlatformConfig : MonoBehaviour
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool usingOculusPlatform;

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC3D710", Offset = "0xC3D710", VA = "0xC3D710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC3D764", Offset = "0xC3D764", VA = "0xC3D764")]
	public OculusPlatformConfig()
	{
	}
}
[Token(Token = "0x200016A")]
public class SteamPlatformConfig : MonoBehaviour
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool usingSteamPlatform;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA77848", Offset = "0xA77848", VA = "0xA77848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA7789C", Offset = "0xA7789C", VA = "0xA7789C")]
	public SteamPlatformConfig()
	{
	}
}
[Token(Token = "0x200016B")]
public class ViveportPlatformConfig : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool usingViveportPlatform;

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x115E6C0", Offset = "0x115E6C0", VA = "0x115E6C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x115E714", Offset = "0x115E714", VA = "0x115E714")]
	public ViveportPlatformConfig()
	{
	}
}
[Token(Token = "0x200016C")]
public class ArcadeJoystick : MonoBehaviour
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gamepad gamepad;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxAngle;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA977B4", Offset = "0xA977B4", VA = "0xA977B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA97840", Offset = "0xA97840", VA = "0xA97840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA979A8", Offset = "0xA979A8", VA = "0xA979A8")]
	public ArcadeJoystick()
	{
	}
}
[Token(Token = "0x200016D")]
public class ArcadePossessed : MonoBehaviour
{
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PossessedKid kid;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particleFeedback;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA979B8", Offset = "0xA979B8", VA = "0xA979B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA97AAC", Offset = "0xA97AAC", VA = "0xA97AAC")]
	public ArcadePossessed()
	{
	}
}
[Token(Token = "0x200016E")]
public class KidsPossessionController : MonoBehaviour
{
	[Token(Token = "0x20005BC")]
	public enum PossessionBehaviour
	{
		[Token(Token = "0x4001D35")]
		None,
		[Token(Token = "0x4001D36")]
		Kim,
		[Token(Token = "0x4001D37")]
		Andy,
		[Token(Token = "0x4001D38")]
		EitherKid,
		[Token(Token = "0x4001D39")]
		EitherOrBothKidsRnd
	}

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1414", Offset = "0x7C1414")]
	public PossessedKid[] kids;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float oneKid_interval;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float eitherKid_interval;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eitherOrBoth_interval;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C144C", Offset = "0x7C144C")]
	public Level4KidsReactToPossessed kidsReaction;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool playersCanReact;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastKid;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private PossessionBehaviour currentBehaviour;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool allowBehaviour;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject staticScreen;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int maximumRecoverableAttacks;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentAttacks;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool allKidsExorcised;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xAFE43C", Offset = "0xAFE43C", VA = "0xAFE43C")]
	public void OnArcadeAttacked()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xAFE534", Offset = "0xAFE534", VA = "0xAFE534")]
	private void ResetStaticScreen()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xAFE568", Offset = "0xAFE568", VA = "0xAFE568")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xAFE574", Offset = "0xAFE574", VA = "0xAFE574")]
	private void Update()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xAFEB0C", Offset = "0xAFEB0C", VA = "0xAFEB0C")]
	private bool CheckExorcision()
	{
		return default(bool);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xAFE810", Offset = "0xAFE810", VA = "0xAFE810")]
	private void StartPossession()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xAFEBC8", Offset = "0xAFEBC8", VA = "0xAFEBC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xAFEC78", Offset = "0xAFEC78", VA = "0xAFEC78")]
	private void GetDesiredBehaviour(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xAFEDC8", Offset = "0xAFEDC8", VA = "0xAFEDC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xAFECB8", Offset = "0xAFECB8", VA = "0xAFECB8")]
	private void ChangePossessionBehaviour(PossessionBehaviour newBehaviour)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xAFEE78", Offset = "0xAFEE78", VA = "0xAFEE78")]
	public KidsPossessionController()
	{
	}
}
[Token(Token = "0x200016F")]
public class PossessedKid : MonoBehaviour
{
	[Token(Token = "0x20005BD")]
	public enum PossessionState
	{
		[Token(Token = "0x4001D3B")]
		Playing,
		[Token(Token = "0x4001D3C")]
		BeingPossessed,
		[Token(Token = "0x4001D3D")]
		WalkingToMachine,
		[Token(Token = "0x4001D3E")]
		Attacking,
		[Token(Token = "0x4001D3F")]
		BeingExorcised,
		[Token(Token = "0x4001D40")]
		Returning
	}

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator kidAnimator;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playingPos;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform attackingPos;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineRandomizer possessionTimelines;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimelineRandomizer exorcismTimelines;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float possessedCooldown;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RWCharacterAgent rwCharMovement;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string walkLaugh;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1494", Offset = "0x7C1494")]
	private PossessionState <currentState>k__BackingField;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RWCharacterReactionController rwCharReaction;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeToReachTarget;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timer;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float possessedCooldownTimer;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x17000091")]
	public PossessionState currentState
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xB96E98", Offset = "0xB96E98", VA = "0xB96E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC3C", Offset = "0x7CEC3C")]
		get
		{
			return default(PossessionState);
		}
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xB96EA0", Offset = "0xB96EA0", VA = "0xB96EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC4C", Offset = "0x7CEC4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public bool canBePossessed
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xB96EA8", Offset = "0xB96EA8", VA = "0xB96EA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000093")]
	public bool canBeExorcised
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xB96EC8", Offset = "0xB96EC8", VA = "0xB96EC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xB96EEC", Offset = "0xB96EEC", VA = "0xB96EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xB96F70", Offset = "0xB96F70", VA = "0xB96F70")]
	public bool IsPossessed()
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB96F94", Offset = "0xB96F94", VA = "0xB96F94")]
	private void Update()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xB9712C", Offset = "0xB9712C", VA = "0xB9712C")]
	private void ChangeState(PossessionState newState)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xB974A0", Offset = "0xB974A0", VA = "0xB974A0")]
	public void Possess()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB974A8", Offset = "0xB974A8", VA = "0xB974A8")]
	public bool TryExorcise(bool force = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xB97524", Offset = "0xB97524", VA = "0xB97524")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB97590", Offset = "0xB97590", VA = "0xB97590")]
	public void UseRootMotion_TimelineEvent()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB97614", Offset = "0xB97614", VA = "0xB97614")]
	public void StopRootMotion_TimelineEvent()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xB973CC", Offset = "0xB973CC", VA = "0xB973CC")]
	public float MoveKidTo(Transform newPos, bool possessed)
	{
		return default(float);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xB97774", Offset = "0xB97774", VA = "0xB97774")]
	public PossessedKid()
	{
	}
}
[Token(Token = "0x2000170")]
public class ShakeArcade : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KidsPossessionController possessionController;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator arcadeAnim;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xA712AC", Offset = "0xA712AC", VA = "0xA712AC")]
	public void ShakeArcade_AnimationEvent()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xA7132C", Offset = "0xA7132C", VA = "0xA7132C")]
	public ShakeArcade()
	{
	}
}
[Token(Token = "0x2000171")]
public class Level4KidsReactionController : MonoBehaviour
{
	[Token(Token = "0x20005BE")]
	public enum ReactionType
	{
		[Token(Token = "0x4001D42")]
		None,
		[Token(Token = "0x4001D43")]
		KidsPossessed,
		[Token(Token = "0x4001D44")]
		DavidLosing
	}

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ReactionType currentReaction;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x9797EC", Offset = "0x9797EC", VA = "0x9797EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x9792F4", Offset = "0x9792F4", VA = "0x9792F4")]
	public static bool TryReact(ReactionType reaction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x979408", Offset = "0x979408", VA = "0x979408")]
	public static void OnReactionEnd(ReactionType reaction)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x97983C", Offset = "0x97983C", VA = "0x97983C")]
	public Level4KidsReactionController()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA7D4", Offset = "0x7BA7D4")]
public class Level4KidsReactToDavidLosing : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] playersReactions;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProgressionTracker pt;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x9791A0", Offset = "0x9791A0", VA = "0x9791A0")]
	private void RespawnManager_onReloadedGame()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x979360", Offset = "0x979360", VA = "0x979360")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x979500", Offset = "0x979500", VA = "0x979500")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x97959C", Offset = "0x97959C", VA = "0x97959C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x979610", Offset = "0x979610", VA = "0x979610")]
	public Level4KidsReactToDavidLosing()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA838", Offset = "0x7BA838")]
public class Level4KidsReactToPossessed : MonoBehaviour
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineRandomizer[] playersReactions;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProgressionTracker pt;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x979618", Offset = "0x979618", VA = "0x979618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x97967C", Offset = "0x97967C", VA = "0x97967C")]
	public void TryReact()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x9797DC", Offset = "0x9797DC", VA = "0x9797DC")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x9797E4", Offset = "0x9797E4", VA = "0x9797E4")]
	public Level4KidsReactToPossessed()
	{
	}
}
[Token(Token = "0x2000174")]
public class RWCharacterAgent_TargetingExperiments : MonoBehaviour
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RWCharacterAgent agent;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float interpolate;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float velocity;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useNavMesh;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA5BFA4", Offset = "0xA5BFA4", VA = "0xA5BFA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA5C2A0", Offset = "0xA5C2A0", VA = "0xA5C2A0")]
	private bool RaycastMouse(out Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA5C470", Offset = "0xA5C470", VA = "0xA5C470")]
	private void DebugPaths()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA5C66C", Offset = "0xA5C66C", VA = "0xA5C66C")]
	public RWCharacterAgent_TargetingExperiments()
	{
	}
}
[Token(Token = "0x2000175")]
public class RWCharacterAgent : MonoBehaviour
{
	[Token(Token = "0x20005BF")]
	public class Path
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Corners corners;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useNavMeshHeight;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion startRotation;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion endRotation;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float time;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float duration;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Path previousPath;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float weight;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float weightVelocity;

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xA5A250", Offset = "0xA5A250", VA = "0xA5A250")]
		public void Solve(out Vector3 position, out Quaternion? rotation, float timeOffset = 0f)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xA5A494", Offset = "0xA5A494", VA = "0xA5A494")]
		private Vector3 PositionAt(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xA5A564", Offset = "0xA5A564", VA = "0xA5A564")]
		private Quaternion? RotationAt(float time)
		{
			return null;
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xA5A82C", Offset = "0xA5A82C", VA = "0xA5A82C")]
		public Path()
		{
		}
	}

	[Token(Token = "0x20005C0")]
	public class Corners
	{
		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Vector3[] corners;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float length;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float[] cornerLength;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float[] segmentInvLength;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int segment;

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xB9D1DC", Offset = "0xB9D1DC", VA = "0xB9D1DC")]
		public Corners(Vector3 corner)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xB9D5F4", Offset = "0xB9D5F4", VA = "0xB9D5F4")]
		public Corners(Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xB9D280", Offset = "0xB9D280", VA = "0xB9D280")]
		public Corners(Vector3[] corners)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xB9D6E0", Offset = "0xB9D6E0", VA = "0xB9D6E0")]
		public Vector3 Solve(float x)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPosition;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Path currentPath;

	[NonSerialized]
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 restPosition;

	[NonSerialized]
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Quaternion restRotation;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool skipFrame;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool skipUpdate;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool moveRotation;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetPosition;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion targetRotation;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector4 smoothDampDeriv;

	[Token(Token = "0x40009A8")]
	private const float maxDegreesPerSecond = 270f;

	[Token(Token = "0x40009A9")]
	private const float preRotateTime = 0.25f;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB9C110", Offset = "0xB9C110", VA = "0xB9C110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB9C270", Offset = "0xB9C270", VA = "0xB9C270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB9C358", Offset = "0xB9C358", VA = "0xB9C358")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB9C83C", Offset = "0xB9C83C", VA = "0xB9C83C")]
	public void UpdateFromTimeline()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xB9C3E8", Offset = "0xB9C3E8", VA = "0xB9C3E8")]
	private void StepTime(float t, ref Path path)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB9C5F4", Offset = "0xB9C5F4", VA = "0xB9C5F4")]
	private void UpdateTargetValues()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB9C740", Offset = "0xB9C740", VA = "0xB9C740")]
	private void UpdateTransform(float t)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xB9CAB8", Offset = "0xB9CAB8", VA = "0xB9CAB8")]
	public void Set(Transform end)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xB9CB54", Offset = "0xB9CB54", VA = "0xB9CB54")]
	public void Set(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xB9769C", Offset = "0xB9769C", VA = "0xB9769C")]
	public float Move(Transform end, float velocity, float interpolate = 0f, bool useNavMesh = false, bool moveRotation = true)
	{
		return default(float);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xB9CC58", Offset = "0xB9CC58", VA = "0xB9CC58")]
	public float Move(Vector3 position, Quaternion rotation, float velocity, float interpolate = 0f, bool useNavMesh = false, bool moveRotation = true)
	{
		return default(float);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xB9737C", Offset = "0xB9737C", VA = "0xB9737C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xB9C870", Offset = "0xB9C870", VA = "0xB9C870")]
	public static Quaternion SmoothDamp(Quaternion current, Quaternion target, ref Vector4 deriv, float smoothTime, float maxSpeed = float.PositiveInfinity)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xB9D6D0", Offset = "0xB9D6D0", VA = "0xB9D6D0")]
	public RWCharacterAgent()
	{
	}
}
[Token(Token = "0x2000176")]
public class RWCharacterAgentBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform start;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform end;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useNavMesh;

	[NonSerialized]
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimelineClip clip;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C14A4", Offset = "0x7C14A4")]
	private float <time>k__BackingField;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C14B4", Offset = "0x7C14B4")]
	private float <duration>k__BackingField;

	[Token(Token = "0x17000094")]
	public float time
	{
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xA5A8B4", Offset = "0xA5A8B4", VA = "0xA5A8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC5C", Offset = "0x7CEC5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xA5A8BC", Offset = "0xA5A8BC", VA = "0xA5A8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC6C", Offset = "0x7CEC6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float duration
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xA5A8C4", Offset = "0xA5A8C4", VA = "0xA5A8C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC7C", Offset = "0x7CEC7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xA5A8CC", Offset = "0xA5A8CC", VA = "0xA5A8CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEC8C", Offset = "0x7CEC8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA5A8D4", Offset = "0xA5A8D4", VA = "0xA5A8D4", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA5A964", Offset = "0xA5A964", VA = "0xA5A964")]
	public RWCharacterAgentBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000177")]
public class RWCharacterAgentClip : PlayableAsset, ITimelineClipAsset
{
	[NonSerialized]
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineClip clip;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> start;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> end;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useNavMesh;

	[Token(Token = "0x17000096")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xA5A96C", Offset = "0xA5A96C", VA = "0xA5A96C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xA5A974", Offset = "0xA5A974", VA = "0xA5A974", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xA5AB64", Offset = "0xA5AB64", VA = "0xA5AB64")]
	public RWCharacterAgentClip()
	{
	}
}
[Token(Token = "0x2000178")]
public class RWCharacterAgentMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20005C1")]
	private struct NavMeshPath
	{
		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 start;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 end;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] corners;
	}

	[Serializable]
	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDC4", Offset = "0x7BCDC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RWCharacterAgent.Path> <>9__2_0;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xA5BB58", Offset = "0xA5BB58", VA = "0xA5BB58")]
		public <>c()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xA5BB60", Offset = "0xA5BB60", VA = "0xA5BB60")]
		internal int <ProcessFrame>b__2_0(RWCharacterAgent.Path x, RWCharacterAgent.Path y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<RWCharacterAgent.Path> paths;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool skipFrame;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<NavMeshPath> navMeshPaths;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<NavMeshPath> navMeshPathsCache;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xA5AB6C", Offset = "0xA5AB6C", VA = "0xA5AB6C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xA5B5D0", Offset = "0xA5B5D0", VA = "0xA5B5D0")]
	private bool GetNavMeshPath(Vector3 start, Vector3 end, out Vector3[] corners)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xA5B984", Offset = "0xA5B984", VA = "0xA5B984")]
	private void CacheNavMeshPaths()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xA5BA14", Offset = "0xA5BA14", VA = "0xA5BA14")]
	public RWCharacterAgentMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000179")]
public class RWCharacterAgentPositionVisualizer : MonoBehaviour
{
	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xA5BBF4", Offset = "0xA5BBF4", VA = "0xA5BBF4")]
	public RWCharacterAgentPositionVisualizer()
	{
	}
}
[Token(Token = "0x200017A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BA89C", Offset = "0x7BA89C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BA89C", Offset = "0x7BA89C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BA89C", Offset = "0x7BA89C")]
public class RWCharacterAgentTrack : TrackAsset
{
	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xA5BBFC", Offset = "0xA5BBFC", VA = "0xA5BBFC", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xA5BF3C", Offset = "0xA5BF3C", VA = "0xA5BF3C")]
	public RWCharacterAgentTrack()
	{
	}
}
[Token(Token = "0x200017B")]
public class Level2BossDad : MonoBehaviour
{
	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string hitbyBananaFMODEvent;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool firstBananaChecker;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xB06910", Offset = "0xB06910", VA = "0xB06910")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xB06974", Offset = "0xB06974", VA = "0xB06974")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xB06A1C", Offset = "0xB06A1C", VA = "0xB06A1C")]
	public Level2BossDad()
	{
	}
}
[Token(Token = "0x200017C")]
public class HeadLook : MonoBehaviour
{
	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDD4", Offset = "0x7BCDD4")]
	private sealed class <Fade>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadLook <>4__this;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lerpTime>5__2;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <b>5__3;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <h>5__4;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0xAE33A4", Offset = "0xAE33A4", VA = "0xAE33A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xAE3414", Offset = "0xAE3414", VA = "0xAE3414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xAE2754", Offset = "0xAE2754", VA = "0xAE2754")]
		[DebuggerHidden]
		public <Fade>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xAE30D4", Offset = "0xAE30D4", VA = "0xAE30D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xAE30D8", Offset = "0xAE30D8", VA = "0xAE30D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xAE33AC", Offset = "0xAE33AC", VA = "0xAE33AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float headWeight;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bodyWeight;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float clampWeight;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C14D4", Offset = "0x7C14D4")]
	public Transform head;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform eyeLeft;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform eyeRight;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform eyeLeftRecNeutral;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform eyeRightRecNeutral;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform eyeLeftProperNeutral;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform eyeRightProperNeutral;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve eyeHeadAngleFocus;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool startActive;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine fadeCoroutine;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currHeadWeight;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currBodyWeight;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xAE24C0", Offset = "0xAE24C0", VA = "0xAE24C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xAE25F4", Offset = "0xAE25F4", VA = "0xAE25F4")]
	public void SetHeadLook(bool active)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xAE272C", Offset = "0xAE272C", VA = "0xAE272C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xAE2740", Offset = "0xAE2740", VA = "0xAE2740")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xAE2664", Offset = "0xAE2664", VA = "0xAE2664")]
	private void StopFade()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xAE2678", Offset = "0xAE2678", VA = "0xAE2678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEC9C", Offset = "0x7CEC9C")]
	private IEnumerator Fade(bool active)
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xAE2780", Offset = "0xAE2780", VA = "0xAE2780")]
	private void OnAnimatorIK(int layerIndexi)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xAE282C", Offset = "0xAE282C", VA = "0xAE282C")]
	private void RotateEye(Transform eye, Transform rec, Transform proper, float angle)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xAE2F64", Offset = "0xAE2F64", VA = "0xAE2F64")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xAE30B4", Offset = "0xAE30B4", VA = "0xAE30B4")]
	public HeadLook()
	{
	}
}
[Token(Token = "0x200017D")]
public class FreakoutDetector : MonoBehaviour
{
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftHand;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rightHand;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistance;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AchievmentGeneric achievment;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool shouldCheck;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xAD491C", Offset = "0xAD491C", VA = "0xAD491C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xAD4980", Offset = "0xAD4980", VA = "0xAD4980")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xAD4AA8", Offset = "0xAD4AA8", VA = "0xAD4AA8")]
	private bool CheckHand(Transform obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xAD4BA8", Offset = "0xAD4BA8", VA = "0xAD4BA8")]
	public void EnableChecking()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xAD4BB4", Offset = "0xAD4BB4", VA = "0xAD4BB4")]
	public void DisableChecking()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xAD4BBC", Offset = "0xAD4BBC", VA = "0xAD4BBC")]
	public FreakoutDetector()
	{
	}
}
[Token(Token = "0x200017E")]
public class Level3BakeController : MonoBehaviour
{
	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public zLightRig lightRig;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hallwayLight;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVController tv;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Level3EnvironmentController lightningStrike;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x973834", Offset = "0x973834", VA = "0x973834")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x9738EC", Offset = "0x9738EC", VA = "0x9738EC")]
	public Level3BakeController()
	{
	}
}
[Token(Token = "0x200017F")]
public class Level3EnvironmentController : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C150C", Offset = "0x7C150C")]
	public float speedMultiplier;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AnimationCurve> lightningPatterns;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1544", Offset = "0x7C1544")]
	[EventRef]
	public string lightningSFX;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minTimeBeforeNext;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxTimeBeforeNext;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lightningModel;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lightningSkyExposure;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1590", Offset = "0x7C1590")]
	private bool <showLightningBake>k__BackingField;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultSkyExposure;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool startLightning;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timeBeforeNext;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float strikeTimer;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float curveTimer;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentCurve;

	[Token(Token = "0x17000097")]
	public bool showLightningBake
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x9738E4", Offset = "0x9738E4", VA = "0x9738E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CED00", Offset = "0x7CED00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x974A0C", Offset = "0x974A0C", VA = "0x974A0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CED10", Offset = "0x7CED10")]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	private int randomPattern
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x974A18", Offset = "0x974A18", VA = "0x974A18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x974A88", Offset = "0x974A88", VA = "0x974A88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x974AB4", Offset = "0x974AB4", VA = "0x974AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x974C9C", Offset = "0x974C9C", VA = "0x974C9C")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x974C24", Offset = "0x974C24", VA = "0x974C24")]
	private void StartLightningStrike()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x974BF0", Offset = "0x974BF0", VA = "0x974BF0")]
	private void ResetLightning()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x974D64", Offset = "0x974D64", VA = "0x974D64")]
	public Level3EnvironmentController()
	{
	}
}
[Token(Token = "0x2000180")]
public class DelaySetFixedInteractable : MonoBehaviour
{
	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDE4", Offset = "0x7BCDE4")]
	private sealed class <AutoFixWaiter>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelaySetFixedInteractable <>4__this;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0xB415C0", Offset = "0xB415C0", VA = "0xB415C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xB41630", Offset = "0xB41630", VA = "0xB41630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xB414AC", Offset = "0xB414AC", VA = "0xB414AC")]
		[DebuggerHidden]
		public <AutoFixWaiter>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xB414EC", Offset = "0xB414EC", VA = "0xB414EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xB414F0", Offset = "0xB414F0", VA = "0xB414F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xB415C8", Offset = "0xB415C8", VA = "0xB415C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToWait;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandsController hands;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Interactable gamepad;

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xB41210", Offset = "0xB41210", VA = "0xB41210")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xB41274", Offset = "0xB41274", VA = "0xB41274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xB41320", Offset = "0xB41320", VA = "0xB41320")]
	private void AutoFix()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xB413C0", Offset = "0xB413C0", VA = "0xB413C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xB412A0", Offset = "0xB412A0", VA = "0xB412A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CED20", Offset = "0x7CED20")]
	private IEnumerator AutoFixWaiter()
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xB414D8", Offset = "0xB414D8", VA = "0xB414D8")]
	public DelaySetFixedInteractable()
	{
	}
}
[Token(Token = "0x2000181")]
public class DistractableCharacter : MonoBehaviour
{
	[Token(Token = "0x20005C5")]
	public enum State
	{
		[Token(Token = "0x4001D64")]
		Cutscene,
		[Token(Token = "0x4001D65")]
		Wandering,
		[Token(Token = "0x4001D66")]
		Distracted,
		[Token(Token = "0x4001D67")]
		Warning,
		[Token(Token = "0x4001D68")]
		TurningOff
	}

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wanderTime;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float warningTime;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnOffConsoleTime;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector distractablePlayable;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform consolePosition;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string cutscenePath;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string WanderingPath;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string distractedPath;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string WarningPath;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string turningOffGamePath;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventInstance fmodEventInstance;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C15F0", Offset = "0x7C15F0")]
	private bool <tutorialStarted>k__BackingField;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1600", Offset = "0x7C1600")]
	private State <state>k__BackingField;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isDistractable;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Distraction currentDistraction;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float stateTimer;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 initialPosition;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator mumAnimator;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ProgressionWatcher progressionWatcher;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody rb;

	[Token(Token = "0x17000099")]
	public bool tutorialStarted
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB46840", Offset = "0xB46840", VA = "0xB46840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CED84", Offset = "0x7CED84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB46848", Offset = "0xB46848", VA = "0xB46848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CED94", Offset = "0x7CED94")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public State state
	{
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB46854", Offset = "0xB46854", VA = "0xB46854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDA4", Offset = "0x7CEDA4")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB4685C", Offset = "0xB4685C", VA = "0xB4685C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDB4", Offset = "0x7CEDB4")]
		private set
		{
		}
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xB46864", Offset = "0xB46864", VA = "0xB46864")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xB46918", Offset = "0xB46918", VA = "0xB46918")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xB46D08", Offset = "0xB46D08", VA = "0xB46D08")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xB46C98", Offset = "0xB46C98", VA = "0xB46C98")]
	public void SetDistractable(bool isActive)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xB46FA8", Offset = "0xB46FA8", VA = "0xB46FA8")]
	public bool Distract(Distraction distraction)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xB46FE4", Offset = "0xB46FE4", VA = "0xB46FE4")]
	public void DistractionEnded()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xB46EEC", Offset = "0xB46EEC", VA = "0xB46EEC")]
	private void PlayFMODEvent(string eventPath)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xB46FFC", Offset = "0xB46FFC", VA = "0xB46FFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xB47004", Offset = "0xB47004", VA = "0xB47004")]
	public DistractableCharacter()
	{
	}
}
[Token(Token = "0x2000182")]
public class Distraction : MonoBehaviour
{
	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level1MomStateMachine mom;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Droppable droppableObj;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distractionDuration;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float cooldownTime;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform momTarget;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool ready;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1610", Offset = "0x7C1610")]
	private bool <momWasDistracted>k__BackingField;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1620", Offset = "0x7C1620")]
	private bool <cooldownStarted>k__BackingField;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitEffect;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject resetEffect;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject avaliableEffect;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string distractionActivatedSoundEvent;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string distractionResetSoundEvent;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool used;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1650", Offset = "0x7C1650")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x1700009B")]
	public bool momWasDistracted
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xB47020", Offset = "0xB47020", VA = "0xB47020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDC4", Offset = "0x7CEDC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xB47028", Offset = "0xB47028", VA = "0xB47028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDD4", Offset = "0x7CEDD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public bool cooldownStarted
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xB47034", Offset = "0xB47034", VA = "0xB47034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDE4", Offset = "0x7CEDE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xB4703C", Offset = "0xB4703C", VA = "0xB4703C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEDF4", Offset = "0x7CEDF4")]
		private set
		{
		}
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xB47048", Offset = "0xB47048", VA = "0xB47048")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xB4718C", Offset = "0xB4718C", VA = "0xB4718C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xB47638", Offset = "0xB47638", VA = "0xB47638")]
	public void StartDistractionCooldown()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xB472B8", Offset = "0xB472B8", VA = "0xB472B8")]
	private void ActivateDistraction(Vector3 pointOfContact)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB47AD0", Offset = "0xB47AD0", VA = "0xB47AD0")]
	private void ResetMomDistracted()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB47B18", Offset = "0xB47B18", VA = "0xB47B18")]
	private void ResetDistraction()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xB4814C", Offset = "0xB4814C", VA = "0xB4814C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB48334", Offset = "0xB48334", VA = "0xB48334")]
	public Distraction()
	{
	}
}
[Token(Token = "0x2000183")]
public class DistractionManager : MonoBehaviour
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DistractionManager Instance;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Distraction> allDistractions;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Distraction[] ignore;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AchievmentGeneric achievment;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB48344", Offset = "0xB48344", VA = "0xB48344")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xB4839C", Offset = "0xB4839C", VA = "0xB4839C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB474DC", Offset = "0xB474DC", VA = "0xB474DC")]
	public void CheckDistractions()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB484CC", Offset = "0xB484CC", VA = "0xB484CC")]
	public DistractionManager()
	{
	}
}
[Token(Token = "0x2000184")]
public class Level1DadCutsceneTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level1MomStateMachine mom;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xB0100C", Offset = "0xB0100C", VA = "0xB0100C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xB0110C", Offset = "0xB0110C", VA = "0xB0110C")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xB0104C", Offset = "0xB0104C", VA = "0xB0104C")]
	private void CheckTrigger(GameObject o)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xB01158", Offset = "0xB01158", VA = "0xB01158")]
	public Level1DadCutsceneTrigger()
	{
	}
}
[Token(Token = "0x2000185")]
public class Level1MomStateMachine : MonoBehaviour, IRWCharacterHittable
{
	[Token(Token = "0x20005C6")]
	public enum State
	{
		[Token(Token = "0x4001D6A")]
		None,
		[Token(Token = "0x4001D6B")]
		Intro,
		[Token(Token = "0x4001D6C")]
		PhoneIntro,
		[Token(Token = "0x4001D6D")]
		NerfGunIntro,
		[Token(Token = "0x4001D6E")]
		Behaviour,
		[Token(Token = "0x4001D6F")]
		Leave,
		[Token(Token = "0x4001D70")]
		Cutscene
	}

	[Token(Token = "0x20005C7")]
	public enum BehaviourState
	{
		[Token(Token = "0x4001D72")]
		None,
		[Token(Token = "0x4001D73")]
		Telephone,
		[Token(Token = "0x4001D74")]
		Distracted,
		[Token(Token = "0x4001D75")]
		NoticeDavid,
		[Token(Token = "0x4001D76")]
		ShuttingOff_UNUSED,
		[Token(Token = "0x4001D77")]
		AngryShuttingOff,
		[Token(Token = "0x4001D78")]
		Confused
	}

	[Token(Token = "0x20005C8")]
	private enum TimelineType
	{
		[Token(Token = "0x4001D7A")]
		Behaviour,
		[Token(Token = "0x4001D7B")]
		Cutscene
	}

	[Serializable]
	[Token(Token = "0x20005C9")]
	private class MomTimeline
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector timeline;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineType type;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool playing;

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xB030E0", Offset = "0xB030E0", VA = "0xB030E0")]
		public MomTimeline(PlayableDirector timeline, TimelineType type)
		{
		}
	}

	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCDF4", Offset = "0x7BCDF4")]
	private sealed class <MoveToTransformCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level1MomStateMachine <>4__this;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform t;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool endLookingAgainstPlayer;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <step>5__2;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000392")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xB0406C", Offset = "0xB0406C", VA = "0xB0406C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xB040DC", Offset = "0xB040DC", VA = "0xB040DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xB03098", Offset = "0xB03098", VA = "0xB03098")]
		[DebuggerHidden]
		public <MoveToTransformCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xB03A48", Offset = "0xB03A48", VA = "0xB03A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xB03A4C", Offset = "0xB03A4C", VA = "0xB03A4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xB04074", Offset = "0xB04074", VA = "0xB04074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE04", Offset = "0x7BCE04")]
	private sealed class <GuaranteeEndDistraction>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Level1MomStateMachine <>4__this;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distractionDuration;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Distraction <oldDistraction>5__2;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0xB039D0", Offset = "0xB039D0", VA = "0xB039D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0xB03A40", Offset = "0xB03A40", VA = "0xB03A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xB03574", Offset = "0xB03574", VA = "0xB03574")]
		[DebuggerHidden]
		public <GuaranteeEndDistraction>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xB03884", Offset = "0xB03884", VA = "0xB03884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xB03888", Offset = "0xB03888", VA = "0xB03888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xB039D8", Offset = "0xB039D8", VA = "0xB039D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1688", Offset = "0x7C1688")]
	public PlayableDirector timelineIntro;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector timelinePhoneIntro;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector timelineTurningOffConsole;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector timelineLeave;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C16C0", Offset = "0x7C16C0")]
	public TimelineRandomizer timelinesSeesMess;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineRandomizer timelinesLetsDavidPlay;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimelineRandomizer timelinesNoticesDavid;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimelineRandomizer timelinesWalksToTurnOff;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimelineRandomizer timelinesTurnsOffAndComplains;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimelineRandomizer timelineTurningOffAfterHit;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimelineRandomizer timelinesHitIndignant;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C16F8", Offset = "0x7C16F8")]
	public PlayableDirector timelineNerfgunNotices;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimelineRandomizer timelineNerfgunLoop;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlayableDirector timelineNerfgunGoes;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1730", Offset = "0x7C1730")]
	public PlayableDirector timelineCutsceneDad;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TimelinesLoopOnState mikeTimelines;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1768", Offset = "0x7C1768")]
	[EventRef]
	public string randomSarahFMODEvent;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string randomClientCallFMODEvent;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string randomClientDialogueFMODEvent;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string hitNerfBackwardsFMODEvent;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	public string distractedPhoneFMODEvent;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[EventRef]
	public string backToPhoneFMODEvent;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[EventRef]
	public string cleaningMessFMODEvent;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1814", Offset = "0x7C1814")]
	public Transform phoneT;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform davidT;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform lookAtDavidT;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform videogameT;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform middlePointT;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C184C", Offset = "0x7C184C")]
	public float randIsabelaInterval;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float maxTelephoneTime;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float speed;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1884", Offset = "0x7C1884")]
	public Animator anim;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1894", Offset = "0x7C1894")]
	public RWCharacterReactionController dadReactionController;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RWCharacterAgent movementAgent;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private RootMotionForward rootMotion;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private HeadLook headLook;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private State state;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C18A4", Offset = "0x7C18A4")]
	private BehaviourState <behaviourState>k__BackingField;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<MomTimeline> timelineQueue;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Distraction currentDistraction;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float momStateTimer;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float behaviourStateTimer;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int statePhase;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int oldStatePhase;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool endDistraction;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float timeToReachTarget;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool isWalking;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool startDadCutscene;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool nerfTutorialLoop;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 moveTarget;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int cutsceneQueued;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Coroutine guaranteeEndDistractionRoutine;

	[Token(Token = "0x1700009D")]
	public BehaviourState behaviourState
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xB012BC", Offset = "0xB012BC", VA = "0xB012BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEE04", Offset = "0x7CEE04")]
		get
		{
			return default(BehaviourState);
		}
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xB012C4", Offset = "0xB012C4", VA = "0xB012C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEE14", Offset = "0x7CEE14")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	private MomTimeline currentTimeline
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xB012CC", Offset = "0xB012CC", VA = "0xB012CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	private bool timelinePlaying
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xB01368", Offset = "0xB01368", VA = "0xB01368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	private bool isPlayingCutscene
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB0138C", Offset = "0xB0138C", VA = "0xB0138C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	private bool isTimelineQueued
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB013D0", Offset = "0xB013D0", VA = "0xB013D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xB013F4", Offset = "0xB013F4", VA = "0xB013F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xB0159C", Offset = "0xB0159C", VA = "0xB0159C")]
	private void OnStateChange(ProgressionTracker tracker)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xB01740", Offset = "0xB01740", VA = "0xB01740")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xB017F0", Offset = "0xB017F0", VA = "0xB017F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xB01EA8", Offset = "0xB01EA8", VA = "0xB01EA8")]
	private void UpdateBehaviour()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xB015DC", Offset = "0xB015DC", VA = "0xB015DC")]
	private void ChangeState(State newState)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xB02538", Offset = "0xB02538", VA = "0xB02538")]
	private void ChangeBehaviourState(BehaviourState newState, bool force = false, bool revertToOldStatePhase = false)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xB024D0", Offset = "0xB024D0", VA = "0xB024D0")]
	private bool CanAdvance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xB02D70", Offset = "0xB02D70", VA = "0xB02D70")]
	private void MoveToTransform(Transform target, bool endLookingAgainstPlayer = false)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xB02FB4", Offset = "0xB02FB4", VA = "0xB02FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEE24", Offset = "0x7CEE24")]
	private IEnumerator MoveToTransformCoroutine(Transform t, bool endLookingAgainstPlayer)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xB030C4", Offset = "0xB030C4", VA = "0xB030C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xB02D60", Offset = "0xB02D60", VA = "0xB02D60")]
	private bool MoveTargetWasSet()
	{
		return default(bool);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xB02CB4", Offset = "0xB02CB4", VA = "0xB02CB4")]
	private void StopMovement()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xB02F0C", Offset = "0xB02F0C", VA = "0xB02F0C")]
	private void RotateTowardsPosition(Vector3 target)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xB02960", Offset = "0xB02960", VA = "0xB02960")]
	private void Rotate_LookAgainstPlayer()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xB01D98", Offset = "0xB01D98", VA = "0xB01D98")]
	public void SetHeadLook(bool active)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xB02B28", Offset = "0xB02B28", VA = "0xB02B28")]
	private void SetIdleAnimParam(string parameter)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xB01D5C", Offset = "0xB01D5C", VA = "0xB01D5C")]
	private void PlayFMODEvent(string eventPath)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xB01D2C", Offset = "0xB01D2C", VA = "0xB01D2C")]
	private bool CheckFMODEventPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xB01A24", Offset = "0xB01A24", VA = "0xB01A24")]
	private void QueueTimeline(PlayableDirector timeline, TimelineType type = TimelineType.Behaviour, bool stopDialogue = true, bool forceStopOld = false)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xB02528", Offset = "0xB02528", VA = "0xB02528")]
	private void QueueCutscene(PlayableDirector timeline)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xB02EF8", Offset = "0xB02EF8", VA = "0xB02EF8")]
	private void StopCurrentTimeline(bool forceStop = false)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xB01DD0", Offset = "0xB01DD0", VA = "0xB01DD0")]
	private void StopAndClearTimelineQueue()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xB0114C", Offset = "0xB0114C", VA = "0xB0114C")]
	public void QueueDadCutscene()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xB03128", Offset = "0xB03128", VA = "0xB03128")]
	public void EndNerfTutorialLoop()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xB0313C", Offset = "0xB0313C", VA = "0xB0313C")]
	public void TimelineEnded_Event()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xB032BC", Offset = "0xB032BC", VA = "0xB032BC")]
	public void UseRootMotion_TimelineEvent(bool allow)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xB03328", Offset = "0xB03328", VA = "0xB03328")]
	public void UseRootMotion_RotationOnly_TimelineEvent()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xB03384", Offset = "0xB03384", VA = "0xB03384")]
	public void LookAtDavid_TimelineEvent()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xB033C0", Offset = "0xB033C0", VA = "0xB033C0")]
	public void TurnOffConsole_Event()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xB03430", Offset = "0xB03430", VA = "0xB03430")]
	public bool StartDistraction(Distraction distraction)
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xB02DA0", Offset = "0xB02DA0", VA = "0xB02DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEE88", Offset = "0x7CEE88")]
	private IEnumerator GuaranteeEndDistraction(float distractionDuration)
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xB035A0", Offset = "0xB035A0", VA = "0xB035A0")]
	public void EndDistraction()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xB02E50", Offset = "0xB02E50", VA = "0xB02E50")]
	private void ResetDistractionEarly(Distraction distraction, bool endMomDistracted = false)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xB036C4", Offset = "0xB036C4", VA = "0xB036C4", Slot = "4")]
	public void HitByObject(bool isNerfGunBullet, bool frontHit)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xB037EC", Offset = "0xB037EC", VA = "0xB037EC")]
	public Level1MomStateMachine()
	{
	}
}
[Token(Token = "0x2000186")]
public class AppearEffect : MonoBehaviour
{
	[Token(Token = "0x6000924")]
	[Address(RVA = "0xA977A4", Offset = "0xA977A4", VA = "0xA977A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xA977A8", Offset = "0xA977A8", VA = "0xA977A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xA977AC", Offset = "0xA977AC", VA = "0xA977AC")]
	public AppearEffect()
	{
	}
}
[Token(Token = "0x2000187")]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Camera, Camera> m_ReflectionCameras;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTextureLeft;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture m_ReflectionTextureRight;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xA34DE4", Offset = "0xA34DE4", VA = "0xA34DE4")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xA3502C", Offset = "0xA3502C", VA = "0xA3502C")]
	private void RenderCamera(Camera cam, Renderer rend, Camera.StereoscopicEye eye, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xA36BCC", Offset = "0xA36BCC", VA = "0xA36BCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xA360CC", Offset = "0xA360CC", VA = "0xA360CC")]
	private void CopyCameraProperties(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xA358F0", Offset = "0xA358F0", VA = "0xA358F0")]
	private void CreateMirrorObjects(Camera currentCamera, Camera.StereoscopicEye eye, out Camera reflectionCamera, ref RenderTexture reflectionTexture)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xA36E50", Offset = "0xA36E50", VA = "0xA36E50")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xA367CC", Offset = "0xA367CC", VA = "0xA367CC")]
	private Vector4 CameraSpacePlane(Matrix4x4 worldToCameraMatrix, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xA36528", Offset = "0xA36528", VA = "0xA36528")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xA36964", Offset = "0xA36964", VA = "0xA36964")]
	private static void MakeProjectionMatrixOblique(ref Matrix4x4 matrix, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xA36E70", Offset = "0xA36E70", VA = "0xA36E70")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000188")]
public class Scale : MonoBehaviour
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startScale;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 newScale;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve curve;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lerpDuration;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpTime;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool scale;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xA6B70C", Offset = "0xA6B70C", VA = "0xA6B70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xA6B778", Offset = "0xA6B778", VA = "0xA6B778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xA6B99C", Offset = "0xA6B99C", VA = "0xA6B99C")]
	public Scale()
	{
	}
}
[Token(Token = "0x2000189")]
public class Banana : Interactable, IPoolable<Banana>, IHitboxTrigger
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C18B4", Offset = "0x7C18B4")]
	public float pushDelaySmashed;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float pushDelayUnsmashed;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject bananaIntact;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject bananaSmashed;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C18C4", Offset = "0x7C18C4")]
	private bool <smashed>k__BackingField;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Rigidbody body;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool startPushTimer;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float pushTimer;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C18D4", Offset = "0x7C18D4")]
	private ObjectPool<Banana> <poolComponent>k__BackingField;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool forceOnSmash;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float smashVelocity;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[EventRef]
	public string smashFMODEvent;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Throwable throwableComponent;

	[Token(Token = "0x170000A2")]
	public bool smashed
	{
		[Token(Token = "0x6000935")]
		[Address(RVA = "0xA9D764", Offset = "0xA9D764", VA = "0xA9D764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEEEC", Offset = "0x7CEEEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000936")]
		[Address(RVA = "0xA9D76C", Offset = "0xA9D76C", VA = "0xA9D76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEEFC", Offset = "0x7CEEFC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public ObjectPool<Banana> poolComponent
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xA9D778", Offset = "0xA9D778", VA = "0xA9D778", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF0C", Offset = "0x7CEF0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xA9D780", Offset = "0xA9D780", VA = "0xA9D780", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF1C", Offset = "0x7CEF1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	private bool allowSmash
	{
		[Token(Token = "0x6000939")]
		[Address(RVA = "0xA9D790", Offset = "0xA9D790", VA = "0xA9D790")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xA9D830", Offset = "0xA9D830", VA = "0xA9D830")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xA9D910", Offset = "0xA9D910", VA = "0xA9D910", Slot = "9")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xA9D9F0", Offset = "0xA9D9F0", VA = "0xA9D9F0")]
	private void ResetBanana()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xA9DA74", Offset = "0xA9DA74", VA = "0xA9DA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xA9DA78", Offset = "0xA9DA78", VA = "0xA9DA78", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xA9DAA0", Offset = "0xA9DAA0", VA = "0xA9DAA0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xA9DD40", Offset = "0xA9DD40", VA = "0xA9DD40", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xA9DB70", Offset = "0xA9DB70", VA = "0xA9DB70")]
	public void BananaSmash()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xA9DF24", Offset = "0xA9DF24", VA = "0xA9DF24")]
	public void StartPushTimer()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xA9DF30", Offset = "0xA9DF30", VA = "0xA9DF30", Slot = "12")]
	public void Hit(Transform obj)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xA9DFB0", Offset = "0xA9DFB0", VA = "0xA9DFB0")]
	private void OnThrowBanana()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xA9E078", Offset = "0xA9E078", VA = "0xA9E078")]
	public Banana()
	{
	}
}
[Token(Token = "0x200018A")]
public class BugSpray : Interactable
{
	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform firePosition;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float shootCooldown;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject sprayBullet;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float cooldown;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private EventInstance spraySoundEvent;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[EventRef]
	public string sprayFMODEvent;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xAA754C", Offset = "0xAA754C", VA = "0xAA754C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xAA763C", Offset = "0xAA763C", VA = "0xAA763C", Slot = "10")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xAA7708", Offset = "0xAA7708", VA = "0xAA7708", Slot = "11")]
	public new virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xAA77D4", Offset = "0xAA77D4", VA = "0xAA77D4", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xAA781C", Offset = "0xAA781C", VA = "0xAA781C", Slot = "12")]
	public virtual void OnActionPress()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xAA78F4", Offset = "0xAA78F4", VA = "0xAA78F4", Slot = "13")]
	public virtual void OnActionRelease()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xAA7838", Offset = "0xAA7838", VA = "0xAA7838")]
	private void Shoot()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xAA793C", Offset = "0xAA793C", VA = "0xAA793C")]
	public BugSpray()
	{
	}
}
[Token(Token = "0x200018B")]
public class ComicInteractable : Interactable
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1904", Offset = "0x7C1904")]
	public float changePageCooldown;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool cyclePagesOnEnd;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject[] pages;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject openPages;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public InputIconDisplaying previousIcon;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public InputIconDisplaying nextIcon;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C193C", Offset = "0x7C193C")]
	public Button left_Previous;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Button left_Next;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1974", Offset = "0x7C1974")]
	public Button right_Previous;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Button right_Next;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C19AC", Offset = "0x7C19AC")]
	public Animator anim;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string animBoolParam_Grabbing;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float timer;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int currentPage;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool old_isGrabbed;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[EventRef]
	public string changePageEvent;

	[Token(Token = "0x170000A5")]
	private Button previousActionButton
	{
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xBEBE48", Offset = "0xBEBE48", VA = "0xBEBE48")]
		get
		{
			return default(Button);
		}
	}

	[Token(Token = "0x170000A6")]
	private Button nextActionButton
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xBEBE84", Offset = "0xBEBE84", VA = "0xBEBE84")]
		get
		{
			return default(Button);
		}
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xBEBEC0", Offset = "0xBEBEC0", VA = "0xBEBEC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xBEBF90", Offset = "0xBEBF90", VA = "0xBEBF90", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xBEC224", Offset = "0xBEC224", VA = "0xBEC224")]
	private void ChangePage(bool next)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xBEBEC4", Offset = "0xBEBEC4", VA = "0xBEBEC4")]
	private void ShowCurrentPage()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xBEC438", Offset = "0xBEC438", VA = "0xBEC438")]
	public ComicInteractable()
	{
	}
}
[Token(Token = "0x200018C")]
[ExecuteAlways]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA950", Offset = "0x7BA950")]
public class CableProc : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C19F4", Offset = "0x7C19F4")]
	public Transform joint;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tension;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody pendulum;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tail;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float length;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve impulse;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve headWeight;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve tailWeight;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C1A2C", Offset = "0x7C1A2C")]
	public float jointTension;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C1A44", Offset = "0x7C1A44")]
	public float jointFactor;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C1A5C", Offset = "0x7C1A5C")]
	public int segments;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C1A78", Offset = "0x7C1A78")]
	public int sections;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float thickness;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int updateEveryNFrames;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int frame;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] center;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] tangent;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] right;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] vertex;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] normal;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] tris;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Mesh mesh;

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xAA945C", Offset = "0xAA945C", VA = "0xAA945C")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xAAA478", Offset = "0xAAA478", VA = "0xAAA478")]
	private void UpdatePendulum()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xAAA7A4", Offset = "0xAAA7A4", VA = "0xAAA7A4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xAAA8AC", Offset = "0xAAA8AC", VA = "0xAAA8AC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xAAA954", Offset = "0xAAA954", VA = "0xAAA954")]
	public CableProc()
	{
	}
}
[Token(Token = "0x200018D")]
public class CatridgeBlowDetector : MonoBehaviour
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Interactable interactableObject;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasBlown;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string blowSound;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string blowSoundAchievment;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool rewardAchievment;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Achievements achievmentIndex;

	[Token(Token = "0x170000A7")]
	public bool canBlow
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xAAC094", Offset = "0xAAC094", VA = "0xAAC094")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xAAC0C4", Offset = "0xAAC0C4", VA = "0xAAC0C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xAAC1B4", Offset = "0xAAC1B4", VA = "0xAAC1B4")]
	private void InteractableObject_onActionPress()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xAAC288", Offset = "0xAAC288", VA = "0xAAC288")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xAAC318", Offset = "0xAAC318", VA = "0xAAC318")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xAAC1C4", Offset = "0xAAC1C4", VA = "0xAAC1C4")]
	private void Blow()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xAAC400", Offset = "0xAAC400", VA = "0xAAC400")]
	public CatridgeBlowDetector()
	{
	}
}
[Token(Token = "0x200018E")]
public class ConsolePowerController : MonoBehaviour
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1AB0", Offset = "0x7C1AB0")]
	public Interactable cartridge;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1AE8", Offset = "0x7C1AE8")]
	public Transform cartridgeDock;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Interactable powerButton;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1B20", Offset = "0x7C1B20")]
	public MeshRenderer powerLightRenderer;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color powerOnColor;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1B30", Offset = "0x7C1B30")]
	public ProgressionTracker allowAtStates;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasCartridge;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float powerButtonDelayTempo;

	[Token(Token = "0x4000A9C")]
	private const float powerButtonDelayDuration = 0.5f;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool powerButtonWasGrabbed;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool allowStart;

	[Token(Token = "0x4000A9F")]
	private const float cartridgeAnimationDuration = 0.15f;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float cartridgeAnimationTempo;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 cartridgeStartPosition;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion cartridgeStartRotation;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1B68", Offset = "0x7C1B68")]
	[EventRef]
	public string cartridgeFMODEvent;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string powerButtonFMODEvent;

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xBECD48", Offset = "0xBECD48", VA = "0xBECD48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xBECD7C", Offset = "0xBECD7C", VA = "0xBECD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xBED274", Offset = "0xBED274", VA = "0xBED274")]
	public void AllowStartConsole(bool allow)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xBED280", Offset = "0xBED280", VA = "0xBED280")]
	public void SetPowerLight(bool on)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xBED384", Offset = "0xBED384", VA = "0xBED384")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xBED5B8", Offset = "0xBED5B8", VA = "0xBED5B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xBED6E0", Offset = "0xBED6E0", VA = "0xBED6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xBED7C0", Offset = "0xBED7C0", VA = "0xBED7C0")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xBED800", Offset = "0xBED800", VA = "0xBED800")]
	private void Debug_StartConsole()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xBED8E8", Offset = "0xBED8E8", VA = "0xBED8E8")]
	public ConsolePowerController()
	{
	}
}
[Token(Token = "0x200018F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BA9C4", Offset = "0x7BA9C4")]
public class Gamepad : InGameInput
{
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1BC4", Offset = "0x7C1BC4")]
	public bool flippedControls;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1BFC", Offset = "0x7C1BFC")]
	[EventRef]
	public string buttonPressFMODEvent;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string buttonReleaseFMODEvent;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Interactable interactable;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xAD552C", Offset = "0xAD552C", VA = "0xAD552C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xAD5590", Offset = "0xAD5590", VA = "0xAD5590")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xAD5CC8", Offset = "0xAD5CC8", VA = "0xAD5CC8")]
	public Gamepad()
	{
	}
}
[Token(Token = "0x2000190")]
public class GamepadFlip : MonoBehaviour
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gamepad input;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mesh;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shouldFlip;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float normalDuration;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flippedDuration;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationDuration;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delayBeforeFlip;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string rotationSoundEvent;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RWCharacterReactionController momReactionController;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CharacterReaction momReaction;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int reactEveryNFlips;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int flippedIndex;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool flipped;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool rotating;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float remainingTempo;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float delayTimer;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xAD5CD0", Offset = "0xAD5CD0", VA = "0xAD5CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xAD5CE4", Offset = "0xAD5CE4", VA = "0xAD5CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xAD5FA8", Offset = "0xAD5FA8", VA = "0xAD5FA8")]
	public GamepadFlip()
	{
	}
}
[Token(Token = "0x2000191")]
public class BReakableObjectBoss : MonoBehaviour
{
	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mesh;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject effect;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int health;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hit;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool destroyed;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string destroySound;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA9CFEC", Offset = "0xA9CFEC", VA = "0xA9CFEC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA9D1A4", Offset = "0xA9D1A4", VA = "0xA9D1A4")]
	private void Colldown()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA9D1AC", Offset = "0xA9D1AC", VA = "0xA9D1AC")]
	public BReakableObjectBoss()
	{
	}
}
[Token(Token = "0x2000192")]
public class FoodDetector : MonoBehaviour
{
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Interactable interactable;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string eatSound;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasplayedsound;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xAD33A0", Offset = "0xAD33A0", VA = "0xAD33A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xAD3404", Offset = "0xAD3404", VA = "0xAD3404")]
	private void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xAD35A0", Offset = "0xAD35A0", VA = "0xAD35A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xAD34C8", Offset = "0xAD34C8", VA = "0xAD34C8")]
	private void Eat()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xAD3628", Offset = "0xAD3628", VA = "0xAD3628")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xAD3630", Offset = "0xAD3630", VA = "0xAD3630")]
	public FoodDetector()
	{
	}
}
[Token(Token = "0x2000193")]
public class GiftUnwrap : TimelineMarkerReceiver
{
	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PaperWrap> wraps;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool check;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Playable currentPlayable;

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xAD7708", Offset = "0xAD7708", VA = "0xAD7708")]
	private void Update()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xAD7834", Offset = "0xAD7834", VA = "0xAD7834", Slot = "5")]
	protected override void OnMarkerNotification(Playable timelinePlayable)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xAD78BC", Offset = "0xAD78BC", VA = "0xAD78BC")]
	public GiftUnwrap()
	{
	}
}
[Token(Token = "0x2000194")]
public class PaperWrap : Interactable
{
	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1C88", Offset = "0x7C1C88")]
	private bool <ripped>k__BackingField;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1C98", Offset = "0x7C1C98")]
	public GameObject intactPaper;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject rippedPaper;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float hideAfterSeconds;

	[Token(Token = "0x170000A8")]
	public bool ripped
	{
		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC3EBF8", Offset = "0xC3EBF8", VA = "0xC3EBF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF2C", Offset = "0x7CEF2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600097E")]
		[Address(RVA = "0xC3EC00", Offset = "0xC3EC00", VA = "0xC3EC00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF3C", Offset = "0x7CEF3C")]
		private set
		{
		}
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xC3EC0C", Offset = "0xC3EC0C", VA = "0xC3EC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xC3EC64", Offset = "0xC3EC64", VA = "0xC3EC64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xC3ED18", Offset = "0xC3ED18", VA = "0xC3ED18", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xC3EDCC", Offset = "0xC3EDCC", VA = "0xC3EDCC")]
	private void OnGrab()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xC3EE9C", Offset = "0xC3EE9C", VA = "0xC3EE9C")]
	private void OnRelease()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xC3EEF4", Offset = "0xC3EEF4", VA = "0xC3EEF4")]
	private void DisableAndHideWrap()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xC3EF2C", Offset = "0xC3EF2C", VA = "0xC3EF2C")]
	public PaperWrap()
	{
	}
}
[Token(Token = "0x2000195")]
public class PhoneAudioTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector CalledPowerLine;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasCalled;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string TurnOffCallSound;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToCoolDown;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable interactable;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xC405FC", Offset = "0xC405FC", VA = "0xC405FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xC406B4", Offset = "0xC406B4", VA = "0xC406B4")]
	private void Interactable_onRelease()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xC40864", Offset = "0xC40864", VA = "0xC40864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xC40934", Offset = "0xC40934", VA = "0xC40934")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xC409D0", Offset = "0xC409D0", VA = "0xC409D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC40740", Offset = "0xC40740", VA = "0xC40740")]
	private void StartVoice(bool start)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xC40A64", Offset = "0xC40A64", VA = "0xC40A64")]
	private void Reset()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xC40A6C", Offset = "0xC40A6C", VA = "0xC40A6C")]
	public PhoneAudioTrigger()
	{
	}
}
[Token(Token = "0x2000196")]
public class PringlesCollectable : MonoBehaviour
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Interactable interactable;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasGotCollectable;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isCounting;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform posToSpawn;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int counter;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numberToSpawnCollectable;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector SpawnCartridgeTimeline;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string spawnSound;

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xB980B4", Offset = "0xB980B4", VA = "0xB980B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xB98118", Offset = "0xB98118", VA = "0xB98118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xB982E4", Offset = "0xB982E4", VA = "0xB982E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xB981DC", Offset = "0xB981DC", VA = "0xB981DC")]
	private void Eat()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xB9836C", Offset = "0xB9836C", VA = "0xB9836C")]
	private void Colldown()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xB98374", Offset = "0xB98374", VA = "0xB98374")]
	public PringlesCollectable()
	{
	}
}
[Token(Token = "0x2000197")]
public class IceCreamSpoon : MonoBehaviour
{
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Interactable spoonInteractable;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bowl;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string onCompleted;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject iceCream;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string onEat;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int eaten;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int target;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeLimit;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Achievements achievement;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xAE5258", Offset = "0xAE5258", VA = "0xAE5258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xAE5310", Offset = "0xAE5310", VA = "0xAE5310")]
	private void InteractableObject_onActionPress()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xAE5428", Offset = "0xAE5428", VA = "0xAE5428")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xAE54B8", Offset = "0xAE54B8", VA = "0xAE54B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xAE535C", Offset = "0xAE535C", VA = "0xAE535C")]
	private void Eat()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xAE55DC", Offset = "0xAE55DC", VA = "0xAE55DC")]
	private void CheckAmountEaten()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xAE56D8", Offset = "0xAE56D8", VA = "0xAE56D8")]
	private void ResetAmount()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xAE56EC", Offset = "0xAE56EC", VA = "0xAE56EC")]
	public IceCreamSpoon()
	{
	}
}
[Token(Token = "0x2000198")]
public class Icon_GenericController : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activateOnEnable;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isActive;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xAE5708", Offset = "0xAE5708", VA = "0xAE5708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xAE571C", Offset = "0xAE571C", VA = "0xAE571C")]
	public void Activate()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xAE5728", Offset = "0xAE5728", VA = "0xAE5728")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xAE5730", Offset = "0xAE5730", VA = "0xAE5730")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xAE5B0C", Offset = "0xAE5B0C", VA = "0xAE5B0C")]
	public Icon_GenericController()
	{
	}
}
[Token(Token = "0x2000199")]
public class Icon_RealWorld : PoolableComponent
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayableDirector timelineDirector;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableAsset introTimeline;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayableAsset outroTimeline;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SpriteRenderer iconSprite;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xAE5B14", Offset = "0xAE5B14", VA = "0xAE5B14")]
	private void GetDirector()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xAE5BD8", Offset = "0xAE5BD8", VA = "0xAE5BD8")]
	private void GetSprite()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xAE5C8C", Offset = "0xAE5C8C", VA = "0xAE5C8C", Slot = "9")]
	public override void EnableFunction()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xAE5E94", Offset = "0xAE5E94", VA = "0xAE5E94", Slot = "8")]
	public override void Push()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xAE5F84", Offset = "0xAE5F84", VA = "0xAE5F84")]
	public void OnTimelineEnd(bool push)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xAE5D6C", Offset = "0xAE5D6C", VA = "0xAE5D6C")]
	private void SetTimeline(PlayableAsset newTimeline, float customStartTime = 0f)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xAE5F94", Offset = "0xAE5F94", VA = "0xAE5F94")]
	public void Recolor(Color newColor)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xAE6078", Offset = "0xAE6078", VA = "0xAE6078")]
	public Icon_RealWorld()
	{
	}
}
[Token(Token = "0x200019A")]
public class NerfBullet : MonoBehaviour, IPoolable<NerfBullet>
{
	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE14", Offset = "0x7BCE14")]
	private sealed class <TrailEnable_Coroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NerfBullet <>4__this;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0xA3BA50", Offset = "0xA3BA50", VA = "0xA3BA50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0xA3BAC0", Offset = "0xA3BAC0", VA = "0xA3BAC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xA3B88C", Offset = "0xA3B88C", VA = "0xA3B88C")]
		[DebuggerHidden]
		public <TrailEnable_Coroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xA3B954", Offset = "0xA3B954", VA = "0xA3B954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xA3B958", Offset = "0xA3B958", VA = "0xA3B958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xA3BA58", Offset = "0xA3BA58", VA = "0xA3BA58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useInPool;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1CE8", Offset = "0x7C1CE8")]
	private ObjectPool<NerfBullet> <poolComponent>k__BackingField;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1CF8", Offset = "0x7C1CF8")]
	private Rigidbody <rb>k__BackingField;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TrailRenderer trail;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float despawnTime;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float trailWaitTime;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool disableOnTrigger;

	[Token(Token = "0x170000A9")]
	public ObjectPool<NerfBullet> poolComponent
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xA3B560", Offset = "0xA3B560", VA = "0xA3B560", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF4C", Offset = "0x7CEF4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xA3B568", Offset = "0xA3B568", VA = "0xA3B568", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF5C", Offset = "0x7CEF5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public Rigidbody rb
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xA3B570", Offset = "0xA3B570", VA = "0xA3B570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF6C", Offset = "0x7CEF6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xA3B578", Offset = "0xA3B578", VA = "0xA3B578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CEF7C", Offset = "0x7CEF7C")]
		private set
		{
		}
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xA3B580", Offset = "0xA3B580", VA = "0xA3B580")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xA3B5E4", Offset = "0xA3B5E4", VA = "0xA3B5E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xA3B73C", Offset = "0xA3B73C", VA = "0xA3B73C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xA3B80C", Offset = "0xA3B80C", VA = "0xA3B80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEF8C", Offset = "0x7CEF8C")]
	private IEnumerator TrailEnable_Coroutine()
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xA3B690", Offset = "0xA3B690", VA = "0xA3B690")]
	private void TrailEnable(bool value)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xA3B8B8", Offset = "0xA3B8B8", VA = "0xA3B8B8")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xA3B930", Offset = "0xA3B930", VA = "0xA3B930")]
	public NerfBullet()
	{
	}
}
[Token(Token = "0x200019B")]
public class NerfBulletPool : ObjectPool<NerfBullet>
{
	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xA3BAC8", Offset = "0xA3BAC8", VA = "0xA3BAC8")]
	public NerfBulletPool()
	{
	}
}
[Token(Token = "0x200019C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAA28", Offset = "0x7BAA28")]
public class NerfGun : Interactable
{
	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform firePosition;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float bulletForce;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float shootCooldown;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected NerfBulletPool bulletPool;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float cooldown;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[EventRef]
	public string shootNerfGunSoundEvent;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NerfGun instance;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xA3BB18", Offset = "0xA3BB18", VA = "0xA3BB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xA3BB98", Offset = "0xA3BB98", VA = "0xA3BB98", Slot = "10")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xA3BC1C", Offset = "0xA3BC1C", VA = "0xA3BC1C", Slot = "11")]
	public new virtual void OnDisable()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xA3BCA0", Offset = "0xA3BCA0", VA = "0xA3BCA0", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xA3BCE8", Offset = "0xA3BCE8", VA = "0xA3BCE8", Slot = "12")]
	public virtual void OnActionPress()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xA3BD74", Offset = "0xA3BD74", VA = "0xA3BD74")]
	private void Shoot(NerfBullet _bullet)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xA3BFF0", Offset = "0xA3BFF0", VA = "0xA3BFF0")]
	public NerfGun()
	{
	}
}
[Token(Token = "0x200019D")]
public class NerfGunSpawnCheck : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C1D18", Offset = "0x7C1D18")]
	public string refString;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject nerfSpawner;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xA3C574", Offset = "0xA3C574", VA = "0xA3C574")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xA3C64C", Offset = "0xA3C64C", VA = "0xA3C64C")]
	public NerfGunSpawnCheck()
	{
	}
}
[Token(Token = "0x200019E")]
public class NerfGunTutorialState : ProgressionState
{
	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Interactable nerfGun;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Level1MomStateMachine mom;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject guide;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool checkNow;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayableDirector tutorialTimelineLoop;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xA3C654", Offset = "0xA3C654", VA = "0xA3C654", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xA3C7E4", Offset = "0xA3C7E4", VA = "0xA3C7E4", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xA3C7EC", Offset = "0xA3C7EC", VA = "0xA3C7EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xA3C698", Offset = "0xA3C698", VA = "0xA3C698")]
	private void SetTutorial(bool activate)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xA3C898", Offset = "0xA3C898", VA = "0xA3C898")]
	public void AllowGrabNerfGun()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xA3C90C", Offset = "0xA3C90C", VA = "0xA3C90C")]
	public NerfGunTutorialState()
	{
	}
}
[Token(Token = "0x200019F")]
public class ProgressWithNerfShoot : MonoBehaviour
{
	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xB98750", Offset = "0xB98750", VA = "0xB98750")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xB98754", Offset = "0xB98754", VA = "0xB98754")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xB98758", Offset = "0xB98758", VA = "0xB98758")]
	public ProgressWithNerfShoot()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ProgressWithShoot : ProgressionState
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool wasShoot;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string bulletName;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xB98760", Offset = "0xB98760", VA = "0xB98760", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xB98764", Offset = "0xB98764", VA = "0xB98764")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xB987F4", Offset = "0xB987F4", VA = "0xB987F4")]
	private void ShootEffect()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xB987F8", Offset = "0xB987F8", VA = "0xB987F8")]
	public ProgressWithShoot()
	{
	}
}
[Token(Token = "0x20001A1")]
public class VoxelGun : NerfGun
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public VoxelLaser currentBullet;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x115EBC4", Offset = "0x115EBC4", VA = "0x115EBC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x115EDBC", Offset = "0x115EDBC", VA = "0x115EDBC", Slot = "10")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x115EE74", Offset = "0x115EE74", VA = "0x115EE74", Slot = "11")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x115EF2C", Offset = "0x115EF2C", VA = "0x115EF2C", Slot = "12")]
	public override void OnActionPress()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x115F0D0", Offset = "0x115F0D0", VA = "0x115F0D0")]
	private void OnActionRelease()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x115F1A8", Offset = "0x115F1A8", VA = "0x115F1A8")]
	public VoxelGun()
	{
	}
}
[Token(Token = "0x20001A2")]
public class VoxelLaser : MonoBehaviour
{
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE24", Offset = "0x7BCE24")]
	private sealed class <ShootCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoxelLaser <>4__this;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <scale>5__3;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x1160908", Offset = "0x1160908", VA = "0x1160908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x1160978", Offset = "0x1160978", VA = "0x1160978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x115FB9C", Offset = "0x115FB9C", VA = "0x115FB9C")]
		[DebuggerHidden]
		public <ShootCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x11600F4", Offset = "0x11600F4", VA = "0x11600F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x11600F8", Offset = "0x11600F8", VA = "0x11600F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x1160910", Offset = "0x1160910", VA = "0x1160910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE34", Offset = "0x7BCE34")]
	private sealed class <UnShootCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoxelLaser <>4__this;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <scale>5__3;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x1850F3C", Offset = "0x1850F3C", VA = "0x1850F3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x1850FAC", Offset = "0x1850FAC", VA = "0x1850FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x1850B8C", Offset = "0x1850B8C", VA = "0x1850B8C")]
		[DebuggerHidden]
		public <UnShootCoroutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1850BB8", Offset = "0x1850BB8", VA = "0x1850BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1850BBC", Offset = "0x1850BBC", VA = "0x1850BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x1850F44", Offset = "0x1850F44", VA = "0x1850F44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float currentRotationSpeed;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1D7C", Offset = "0x7C1D7C")]
	public float chargeTime;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 chargeSize;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float chargeRotationSpeed;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve chargeScaleModifier;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem chargeEffect;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] chargeObjsToEnable;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string[] chargedSounds;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1DC4", Offset = "0x7C1DC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1DC4", Offset = "0x7C1DC4")]
	public float waitTime;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float shootTime;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 shootSize;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float shootRotationSpeed;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve shootScaleModifier;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] shootObjsToEnable;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[EventRef]
	public string[] shootSounds;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1E20", Offset = "0x7C1E20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1E20", Offset = "0x7C1E20")]
	public float sinVariation;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float sinMultiplier;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool infiniteShooting;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] infiniteObjsToEnable;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string[] infiniteSound;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LayerMask laserHitLayer;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool enableRaycast;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 raycastFinalPos;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject hitPoint;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 hitPointSize;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Level6ShootCylochState cyblinManager;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool hitActive;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float hitLerp;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshRenderer[] meshes;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<EventInstance> audiosToPlay;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody rb;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x115F1B0", Offset = "0x115F1B0", VA = "0x115F1B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x115EBF0", Offset = "0x115EBF0", VA = "0x115EBF0")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x115F3C8", Offset = "0x115F3C8", VA = "0x115F3C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x115EF58", Offset = "0x115EF58", VA = "0x115EF58")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x115F144", Offset = "0x115F144", VA = "0x115F144")]
	public void UnShoot()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x115FA9C", Offset = "0x115FA9C", VA = "0x115FA9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CEFF0", Offset = "0x7CEFF0")]
	private IEnumerator ShootCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x115FBC8", Offset = "0x115FBC8", VA = "0x115FBC8")]
	private void ChangeValues(Vector3 startSize, Vector3 targetSize, float lerp, AnimationCurve weight)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x115FD9C", Offset = "0x115FD9C", VA = "0x115FD9C")]
	private void ChangeValues(Vector3 target, AnimationCurve curve, float lerp)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x115FB1C", Offset = "0x115FB1C", VA = "0x115FB1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF054", Offset = "0x7CF054")]
	private IEnumerator UnShootCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x115FE9C", Offset = "0x115FE9C", VA = "0x115FE9C")]
	public void PlaySounds(string[] audios)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x115F270", Offset = "0x115F270", VA = "0x115F270")]
	public void StopSounds()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x115FFD0", Offset = "0x115FFD0", VA = "0x115FFD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x115FFD4", Offset = "0x115FFD4", VA = "0x115FFD4")]
	public VoxelLaser()
	{
	}
}
[Token(Token = "0x20001A3")]
public class RemoteController : Interactable
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TVController TVController;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xA60090", Offset = "0xA60090", VA = "0xA60090")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xA60108", Offset = "0xA60108", VA = "0xA60108")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xA60180", Offset = "0xA60180", VA = "0xA60180")]
	private void OnActionPress()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xA60194", Offset = "0xA60194", VA = "0xA60194")]
	public RemoteController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class AnnoyableCharacter : MonoBehaviour
{
	[Token(Token = "0x20005CF")]
	public enum State
	{
		[Token(Token = "0x4001D99")]
		Cutscene,
		[Token(Token = "0x4001D9A")]
		Waiting,
		[Token(Token = "0x4001D9B")]
		Warning,
		[Token(Token = "0x4001D9C")]
		NoticedPlayer,
		[Token(Token = "0x4001D9D")]
		Returning
	}

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float warningTime;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float noticedTime;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float returningTime;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hallwayLight;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform waiting;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform door;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ConsolePowerController console;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TVController tv;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 initialMovementPos;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State state;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float stateTimer;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 waitingPos;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 doorPos;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 consolePos;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EventInstance fmodEventInstance;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string snoringEvent;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string warningWalkEvent;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string returningWalkEvent;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string failedToNoticeEvent;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string noticedPlayerEvent;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody rb;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xA96E18", Offset = "0xA96E18", VA = "0xA96E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xA97270", Offset = "0xA97270", VA = "0xA97270")]
	public void Trigger()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xA9728C", Offset = "0xA9728C", VA = "0xA9728C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xA96F88", Offset = "0xA96F88", VA = "0xA96F88")]
	public void ChangeState(State newState, bool force = false)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xA97704", Offset = "0xA97704", VA = "0xA97704")]
	private void PlayFMODEvent(string eventPath)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xA9779C", Offset = "0xA9779C", VA = "0xA9779C")]
	public AnnoyableCharacter()
	{
	}
}
[Token(Token = "0x20001A5")]
public class FootstepsPerUnit : MonoBehaviour
{
	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float footstepEveryUnits;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string footstepFMODEvent;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 newPos;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 oldPos;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distanceCovered;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xAD3638", Offset = "0xAD3638", VA = "0xAD3638")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xAD3804", Offset = "0xAD3804", VA = "0xAD3804")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xAD387C", Offset = "0xAD387C", VA = "0xAD387C")]
	public FootstepsPerUnit()
	{
	}
}
[Token(Token = "0x20001A6")]
public class Level3Mom : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	public enum State
	{
		[Token(Token = "0x4001D9F")]
		None,
		[Token(Token = "0x4001DA0")]
		Intro,
		[Token(Token = "0x4001DA1")]
		Alert
	}

	[Token(Token = "0x20005D1")]
	public enum AlertState
	{
		[Token(Token = "0x4001DA3")]
		None,
		[Token(Token = "0x4001DA4")]
		Suspicious,
		[Token(Token = "0x4001DA5")]
		Peek,
		[Token(Token = "0x4001DA6")]
		Returning,
		[Token(Token = "0x4001DA7")]
		Noticed,
		[Token(Token = "0x4001DA8")]
		ReturnBeforePeek
	}

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startingSuspiciousDuration;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float suspicionIgnoredDuration;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tvOffWhileSuspiciousDuration;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1EDC", Offset = "0x7C1EDC")]
	private float <suspiciousDuration>k__BackingField;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector timelineIntro;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector timelineReturning;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimelineRandomizer randomNoticedTimelines;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableDirector currentTimeline;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TVController tv;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lights;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConsolePowerController console;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform suspiciousStartPosition;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform suspiciousEndPosition;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ProgressionTracker states;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EventInstance fmodEventInstance;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string snoringFMODEvent;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[EventRef]
	public string walkingFMODEvent;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string awakenFMODEvent;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string peekTutorialFMODEvent;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string peekRandomFMODEvent;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string suspicionIgnoredFMODEvent;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string secondSoundReactionFMODEvent;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1F5C", Offset = "0x7C1F5C")]
	[EventRef]
	public string lightOnFMODEvent;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[EventRef]
	public string lightOffFMODEvent;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rigidbody body;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RWCharacterAgent agent;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private State state;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private AlertState alertState;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isAngry;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool suspiciousWalking;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float suspiciousTempo;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float tvOffWhileSuspiciousTempo;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float suspicionIgnoredTempo;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float timeToReturn;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float returnTimer;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool peekTutorial;

	[Token(Token = "0x4000B5E")]
	private const float angrySpeedMultiplier = 2f;

	[Token(Token = "0x170000AB")]
	public float suspiciousDuration
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x9767D4", Offset = "0x9767D4", VA = "0x9767D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0B8", Offset = "0x7CF0B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x9767DC", Offset = "0x9767DC", VA = "0x9767DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0C8", Offset = "0x7CF0C8")]
		private set
		{
		}
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9767E4", Offset = "0x9767E4", VA = "0x9767E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x9768A0", Offset = "0x9768A0", VA = "0x9768A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x977120", Offset = "0x977120", VA = "0x977120")]
	public void ChangeState(State newState)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x976E94", Offset = "0x976E94", VA = "0x976E94")]
	private void ChangeAlertState(AlertState newState, bool force = false)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x977394", Offset = "0x977394", VA = "0x977394")]
	private void SetTimeline(PlayableDirector timeline)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x977254", Offset = "0x977254", VA = "0x977254")]
	private void SetLights(bool on)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x976DC4", Offset = "0x976DC4", VA = "0x976DC4")]
	private void PlayFMODEvent(string eventPath)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x9774C4", Offset = "0x9774C4", VA = "0x9774C4")]
	public void NoticedAction()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x97775C", Offset = "0x97775C", VA = "0x97775C")]
	public void SetSuspiciousDuration(float newDuration)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x977764", Offset = "0x977764", VA = "0x977764")]
	public void TriggerNoiseLevel()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x977810", Offset = "0x977810", VA = "0x977810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x9778A8", Offset = "0x9778A8", VA = "0x9778A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x97794C", Offset = "0x97794C", VA = "0x97794C")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x97798C", Offset = "0x97798C", VA = "0x97798C")]
	public void ChangeStateToNone()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x977994", Offset = "0x977994", VA = "0x977994")]
	public Level3Mom()
	{
	}
}
[Token(Token = "0x20001A7")]
public class NoiseEmitter : MonoBehaviour
{
	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int noiseLevel;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string noiseEvent;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xA3C97C", Offset = "0xA3C97C", VA = "0xA3C97C")]
	public void Emit()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xA3CC04", Offset = "0xA3CC04", VA = "0xA3CC04")]
	public NoiseEmitter()
	{
	}
}
[Token(Token = "0x20001A8")]
public class NoiseMeter : MonoBehaviour
{
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C1FB4", Offset = "0x7C1FB4")]
	private static NoiseMeter <instance>k__BackingField;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator tvAnimator;

	[Token(Token = "0x4000B64")]
	private const float noiseCooldown = 0.5f;

	[Token(Token = "0x4000B65")]
	private const float triggerNoiseLevelDelay = 0.4f;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float noiseTimer;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int momSleeping;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Achievements momSleepingAchievment;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string onCompletedAchievment;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Level3Mom mom;

	[Token(Token = "0x170000AC")]
	public static NoiseMeter instance
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xA3CAFC", Offset = "0xA3CAFC", VA = "0xA3CAFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0D8", Offset = "0x7CF0D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xA3CC14", Offset = "0xA3CC14", VA = "0xA3CC14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0E8", Offset = "0x7CF0E8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xA3CC6C", Offset = "0xA3CC6C", VA = "0xA3CC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xA3CD70", Offset = "0xA3CD70", VA = "0xA3CD70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xA3CB4C", Offset = "0xA3CB4C", VA = "0xA3CB4C")]
	public bool AddNoise(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xA3CDBC", Offset = "0xA3CDBC", VA = "0xA3CDBC")]
	private void TriggerNoiseLevel()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xA3CDF4", Offset = "0xA3CDF4", VA = "0xA3CDF4")]
	public void CheckAchievment()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xA3CEBC", Offset = "0xA3CEBC", VA = "0xA3CEBC")]
	public void ForceMomSleepingValue(int value)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xA3CEC4", Offset = "0xA3CEC4", VA = "0xA3CEC4")]
	public NoiseMeter()
	{
	}
}
[Token(Token = "0x20001A9")]
public class CheckBananaExit : MonoBehaviour
{
	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xAAF528", Offset = "0xAAF528", VA = "0xAAF528")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xAAF604", Offset = "0xAAF604", VA = "0xAAF604")]
	public CheckBananaExit()
	{
	}
}
[Token(Token = "0x20001AA")]
public class SpawnObjectBag : ObjectPool<Banana>
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE44", Offset = "0x7BCE44")]
	private sealed class <RespawnBanana>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnObjectBag <>4__this;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xA74560", Offset = "0xA74560", VA = "0xA74560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xA745D0", Offset = "0xA745D0", VA = "0xA745D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0xA74464", Offset = "0xA74464", VA = "0xA74464")]
		[DebuggerHidden]
		public <RespawnBanana>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xA744E8", Offset = "0xA744E8", VA = "0xA744E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xA744EC", Offset = "0xA744EC", VA = "0xA744EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xA74568", Offset = "0xA74568", VA = "0xA74568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxBananas;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool allowSmash;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider box;

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xA74148", Offset = "0xA74148", VA = "0xA74148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xA743B8", Offset = "0xA743B8", VA = "0xA743B8", Slot = "6")]
	public override void OnPush(Banana obj)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xA743E4", Offset = "0xA743E4", VA = "0xA743E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF0F8", Offset = "0x7CF0F8")]
	private IEnumerator RespawnBanana()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xA741D8", Offset = "0xA741D8", VA = "0xA741D8")]
	private void SpawnObject()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xA74490", Offset = "0xA74490", VA = "0xA74490")]
	public SpawnObjectBag()
	{
	}
}
[Token(Token = "0x20001AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAA8C", Offset = "0x7BAA8C")]
public class RealWorldBGMManager : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RealWorldBGMManager instance;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EventInstance rwBGM;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C1FD4", Offset = "0x7C1FD4")]
	public float volume;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7C1FE4", Offset = "0x7C1FE4")]
	public string tips;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C1FF4", Offset = "0x7C1FF4")]
	[EventRef]
	public string eventNameFinder;

	[Token(Token = "0x4000B73")]
	private const string stopBGMText = "Stop";

	[Token(Token = "0x4000B74")]
	private const string pauseBGMText = "Pause";

	[Token(Token = "0x4000B75")]
	private const string resumeBGMText = "Resume";

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xA5EDA8", Offset = "0xA5EDA8", VA = "0xA5EDA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xA5EEAC", Offset = "0xA5EEAC", VA = "0xA5EEAC")]
	public static void InGameToRW(EventInstance eventInstance)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xA5F088", Offset = "0xA5F088", VA = "0xA5F088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xA5F138", Offset = "0xA5F138", VA = "0xA5F138")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xA5F3C4", Offset = "0xA5F3C4", VA = "0xA5F3C4")]
	public void JustPlay(string fmodEvent)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xA5F4E4", Offset = "0xA5F4E4", VA = "0xA5F4E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xA5F5A4", Offset = "0xA5F5A4", VA = "0xA5F5A4", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xA5E9EC", Offset = "0xA5E9EC", VA = "0xA5E9EC")]
	public static void SetBGMParameter(string paramName, float paramValue)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xA5F694", Offset = "0xA5F694", VA = "0xA5F694")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xA5F6E8", Offset = "0xA5F6E8", VA = "0xA5F6E8")]
	public RealWorldBGMManager()
	{
	}
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAAF0", Offset = "0x7BAAF0")]
public class ShowGameScreenOnState : MonoBehaviour
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer tvScreenRenderer;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material gameScreen;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material blankScreen;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material menuScreen;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProgressionWatcher watcher;

	[Token(Token = "0x170000AD")]
	private bool showGame
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA71854", Offset = "0xA71854", VA = "0xA71854")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xA71884", Offset = "0xA71884", VA = "0xA71884")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xA71924", Offset = "0xA71924", VA = "0xA71924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xA71990", Offset = "0xA71990", VA = "0xA71990")]
	public void EnterGameScreen()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xA719C4", Offset = "0xA719C4", VA = "0xA719C4")]
	public ShowGameScreenOnState()
	{
	}
}
[Token(Token = "0x20001AD")]
public class Level2_ChangeGameVFX : MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem enterParticles;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem exitParticles;

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x97353C", Offset = "0x97353C", VA = "0x97353C")]
	public void playEnterGame()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x97356C", Offset = "0x97356C", VA = "0x97356C")]
	public void playExitGame()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x97359C", Offset = "0x97359C", VA = "0x97359C")]
	public Level2_ChangeGameVFX()
	{
	}
}
[Token(Token = "0x20001AE")]
public class RW_FMOD_ParameterChange : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE54", Offset = "0x7BCE54")]
	private sealed class <ChangeParameter_Routine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RW_FMOD_ParameterChange <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xA5EA6C", Offset = "0xA5EA6C", VA = "0xA5EA6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xA5EADC", Offset = "0xA5EADC", VA = "0xA5EADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xA5E8C8", Offset = "0xA5E8C8", VA = "0xA5E8C8")]
		[DebuggerHidden]
		public <ChangeParameter_Routine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xA5E8FC", Offset = "0xA5E8FC", VA = "0xA5E8FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xA5E900", Offset = "0xA5E900", VA = "0xA5E900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0xA5EA74", Offset = "0xA5EA74", VA = "0xA5EA74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string paramenter;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float value;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C2040", Offset = "0x7C2040")]
	public bool changeOnStart;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xA5E7D8", Offset = "0xA5E7D8", VA = "0xA5E7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xA5E81C", Offset = "0xA5E81C", VA = "0xA5E81C")]
	public void ChangeParameter()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xA5E848", Offset = "0xA5E848", VA = "0xA5E848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF15C", Offset = "0x7CF15C")]
	public IEnumerator ChangeParameter_Routine()
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA5E8F4", Offset = "0xA5E8F4", VA = "0xA5E8F4")]
	public RW_FMOD_ParameterChange()
	{
	}
}
[Token(Token = "0x20001AF")]
public class RWCharacterHitReaction : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x20005D4")]
	public enum Reaction
	{
		[Token(Token = "0x4001DB0")]
		Reaction_1,
		[Token(Token = "0x4001DB1")]
		Reaction_2,
		[Token(Token = "0x4001DB2")]
		Reaction_3
	}

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hitCenterRef;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2050", Offset = "0x7C2050")]
	public bool queryThrowables;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nerfGunBulletTag;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IRWCharacterHittable character;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2088", Offset = "0x7C2088")]
	public RWCharacterReactionController characterReactions;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterReaction frontHitReaction;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterReaction backHitReaction;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C20C0", Offset = "0x7C20C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C20C0", Offset = "0x7C20C0")]
	public CharacterReaction frontHitReaction_2;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CharacterReaction backHitReaction_2;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C210C", Offset = "0x7C210C")]
	public CharacterReaction frontHitReaction_3;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CharacterReaction backHitReaction_3;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Reaction reactionToUse;

	[Token(Token = "0x170000AE")]
	private Transform refDir
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xA5C684", Offset = "0xA5C684", VA = "0xA5C684")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xA5C714", Offset = "0xA5C714", VA = "0xA5C714")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xA5CAA4", Offset = "0xA5CAA4", VA = "0xA5CAA4")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xA5CAE4", Offset = "0xA5CAE4", VA = "0xA5CAE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xA5C754", Offset = "0xA5C754", VA = "0xA5C754")]
	private void CheckTrigger(GameObject obj)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xA5CE10", Offset = "0xA5CE10", VA = "0xA5CE10")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xA5CE14", Offset = "0xA5CE14", VA = "0xA5CE14", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xA5CEB8", Offset = "0xA5CEB8", VA = "0xA5CEB8")]
	public RWCharacterHitReaction()
	{
	}
}
[Token(Token = "0x20001B0")]
public interface IRWCharacterHittable
{
	[Token(Token = "0x6000A2C")]
	void HitByObject(bool isNerfGunBullet, bool frontHit);
}
[Token(Token = "0x20001B1")]
public class RWCharacterReactionController : MonoBehaviour
{
	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RWVoiceEmitter voiceEmitter;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowReaction;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool shouldOverwriteCurrentVoice;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProgressionTracker progressionTracker;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool progressionAllowReaction;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterReaction currentReaction;

	[Token(Token = "0x170000AF")]
	public bool canReact
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA5CF20", Offset = "0xA5CF20", VA = "0xA5CF20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	public bool isReacting
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA5CFBC", Offset = "0xA5CFBC", VA = "0xA5CFBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xA5CFCC", Offset = "0xA5CFCC", VA = "0xA5CFCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xA5D0A8", Offset = "0xA5D0A8", VA = "0xA5D0A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA5D184", Offset = "0xA5D184", VA = "0xA5D184")]
	private void ProgressionTracker_onStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xA5D1C4", Offset = "0xA5D1C4", VA = "0xA5D1C4")]
	public void AllowReaction(bool allow)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA5CC14", Offset = "0xA5CC14", VA = "0xA5CC14")]
	public bool StartNewReaction(CharacterReaction reaction, bool forceOverride = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA5D1DC", Offset = "0xA5D1DC", VA = "0xA5D1DC")]
	private void StopCurrentReaction(bool stopVoiceEmitter = true)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA5D524", Offset = "0xA5D524", VA = "0xA5D524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA5D6F0", Offset = "0xA5D6F0", VA = "0xA5D6F0")]
	public RWCharacterReactionController()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B2")]
public class CharacterReaction
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayableDirector timeline;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineRandomizer timelineRandomizer;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string fmodEvent;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xAAEA74", Offset = "0xAAEA74", VA = "0xAAEA74")]
	public CharacterReaction()
	{
	}
}
[Token(Token = "0x20001B3")]
public class TriggerRWCharacterReaction : MonoBehaviour
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RWCharacterReactionController character;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterReaction reaction;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerOnce;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string tagToCheck;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xA90864", Offset = "0xA90864", VA = "0xA90864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xA90868", Offset = "0xA90868", VA = "0xA90868")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xA90948", Offset = "0xA90948", VA = "0xA90948")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xA908A8", Offset = "0xA908A8", VA = "0xA908A8")]
	private void CheckTrigger(GameObject obj)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xA90988", Offset = "0xA90988", VA = "0xA90988")]
	public TriggerRWCharacterReaction()
	{
	}
}
[Token(Token = "0x20001B4")]
public class CRTPostProcess : MonoBehaviour
{
	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bend;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scanlineSize1;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scanlineSpeed1;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scanlineSize2;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scanlineSpeed2;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scanlineAmount;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float vignetteSize;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float vignetteSmoothness;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vignetteEdgeRound;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseSize;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseAmount;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 redOffset;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 blueOffset;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector2 greenOffset;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material material;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xAA8EF0", Offset = "0xAA8EF0", VA = "0xAA8EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xAA8F68", Offset = "0xAA8F68", VA = "0xAA8F68")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xAA9368", Offset = "0xAA9368", VA = "0xAA9368")]
	public CRTPostProcess()
	{
	}
}
[Token(Token = "0x20001B5")]
public class TVController : MonoBehaviour
{
	[Token(Token = "0x20005D5")]
	public enum TVStates
	{
		[Token(Token = "0x4001DB4")]
		Off,
		[Token(Token = "0x4001DB5")]
		Static,
		[Token(Token = "0x4001DB6")]
		Game
	}

	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE64", Offset = "0x7BCE64")]
	private sealed class <TVPowerEffect>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool on;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVController <>4__this;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool quietly;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationCurve <curve>5__2;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__3;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0xA7DCE0", Offset = "0xA7DCE0", VA = "0xA7DCE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xA7DD50", Offset = "0xA7DD50", VA = "0xA7DD50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xA7D764", Offset = "0xA7D764", VA = "0xA7D764")]
		[DebuggerHidden]
		public <TVPowerEffect>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xA7DA24", Offset = "0xA7DA24", VA = "0xA7DA24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xA7DA28", Offset = "0xA7DA28", VA = "0xA7DA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xA7DCE8", Offset = "0xA7DCE8", VA = "0xA7DCE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C212C", Offset = "0x7C212C")]
	public Material gameScreen;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material staticScreen;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material blankScreen;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C2164", Offset = "0x7C2164")]
	public GameObject screen;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture gameTexture;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture staticTexture;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera gameCamera;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera staticCamera;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StudioEventEmitter staticEmitter;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TVStates startOn;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ProgressionTracker workingStates;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2174", Offset = "0x7C2174")]
	private bool <on>k__BackingField;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C2184", Offset = "0x7C2184")]
	public AnimationCurve turnOnExposureCurve;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EventRef]
	public string turnOnTvSoundEvent;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C21A4", Offset = "0x7C21A4")]
	public AnimationCurve turnOffExposureCurve;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[EventRef]
	public string turnOffTvSoundEvent;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C21C4", Offset = "0x7C21C4")]
	public GameObject[] objectsToDeactivate;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C21D4", Offset = "0x7C21D4")]
	private bool <canChangeToGame>k__BackingField;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshRenderer rend;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine powerEffectCoroutine;

	[Token(Token = "0x170000B1")]
	public bool allowTVOn
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xA7D0F8", Offset = "0xA7D0F8", VA = "0xA7D0F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B2")]
	public bool on
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xA7D194", Offset = "0xA7D194", VA = "0xA7D194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1C0", Offset = "0x7CF1C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA7D19C", Offset = "0xA7D19C", VA = "0xA7D19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1D0", Offset = "0x7CF1D0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool canChangeToGame
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xA7D1A8", Offset = "0xA7D1A8", VA = "0xA7D1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1E0", Offset = "0x7CF1E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xA7D1B0", Offset = "0xA7D1B0", VA = "0xA7D1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1F0", Offset = "0x7CF1F0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xA7D1BC", Offset = "0xA7D1BC", VA = "0xA7D1BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xA7D03C", Offset = "0xA7D03C", VA = "0xA7D03C")]
	public void ToggleActive()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xA7CC4C", Offset = "0xA7CC4C", VA = "0xA7CC4C")]
	public void TurnOn(bool force = false, bool quietly = false)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xA7CDE8", Offset = "0xA7CDE8", VA = "0xA7CDE8")]
	public void TurnOff(bool quietly = false)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xA7D290", Offset = "0xA7D290", VA = "0xA7D290")]
	public void TurnToStatic()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xA7D2D4", Offset = "0xA7D2D4", VA = "0xA7D2D4")]
	public void TurnToGameScreen()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xA7D554", Offset = "0xA7D554", VA = "0xA7D554")]
	public void TurnToStaticForBoss()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xA7D548", Offset = "0xA7D548", VA = "0xA7D548")]
	public void AllowChangeGame(bool allow)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xA7D314", Offset = "0xA7D314", VA = "0xA7D314")]
	private void SetVisibleScreen()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xA7D624", Offset = "0xA7D624", VA = "0xA7D624")]
	public void SetCameraRender(bool showGame, bool turnOff = false)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xA7D468", Offset = "0xA7D468", VA = "0xA7D468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF200", Offset = "0x7CF200")]
	private IEnumerator TVPowerEffect(bool on, bool quietly = false)
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xA7D790", Offset = "0xA7D790", VA = "0xA7D790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xA7D8A4", Offset = "0xA7D8A4", VA = "0xA7D8A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xA7D9DC", Offset = "0xA7D9DC", VA = "0xA7D9DC")]
	private void OnValueUpdate(ProgressionTracker tracker)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xA7DA1C", Offset = "0xA7DA1C", VA = "0xA7DA1C")]
	public TVController()
	{
	}
}
[Token(Token = "0x20001B6")]
public class TexturePanner : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScrollX;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ScrollY;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xA8581C", Offset = "0xA8581C", VA = "0xA8581C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xA85880", Offset = "0xA85880", VA = "0xA85880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xA85978", Offset = "0xA85978", VA = "0xA85978")]
	public TexturePanner()
	{
	}
}
[Token(Token = "0x20001B7")]
public class VFX_Component : PoolableComponent
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lifetime;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1140EC8", Offset = "0x1140EC8", VA = "0x1140EC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1140F28", Offset = "0x1140F28", VA = "0x1140F28")]
	private void Die()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1140F34", Offset = "0x1140F34", VA = "0x1140F34")]
	public VFX_Component()
	{
	}
}
[Token(Token = "0x20001B8")]
[ExecuteInEditMode]
public class zLightRig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D7")]
	public struct LightmapData
	{
		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D color;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D dir;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D mask;
	}

	[Serializable]
	[Token(Token = "0x20005D8")]
	public struct LightBakingData
	{
		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int probeOcclusionLightIndex;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int occlusionMaskChannel;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LightmapBakeType lightmapBakeType;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public MixedLightingMode mixedLightingMode;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isBaked;
	}

	[Serializable]
	[Token(Token = "0x20005D9")]
	public struct Setup
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material skybox;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool[] shadows;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool[] lights;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7CC12C", Offset = "0x7CC12C")]
		public UnityEngine.Object asset;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightmapData[] data;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LightBakingData[] output;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SphericalHarmonicsL2[] probe;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture[] reflect;
	}

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bakeIndex;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int actualIndex;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C21E4", Offset = "0x7C21E4")]
	public Material defaultSkybox;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C221C", Offset = "0x7C221C")]
	public GameObject[] shadows;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C2254", Offset = "0x7C2254")]
	public Light[] lights;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C228C", Offset = "0x7C228C")]
	public ReflectionProbe[] reflectionProbes;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C22C4", Offset = "0x7C22C4")]
	public LightProbeGroup[] lightProbes;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C22FC", Offset = "0x7C22FC")]
	public Setup[] setups;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1851E1C", Offset = "0x1851E1C", VA = "0x1851E1C")]
	public void SetupLight(int i, bool baking)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x18520B0", Offset = "0x18520B0", VA = "0x18520B0")]
	public void FullSetupSwitch(int index)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1852750", Offset = "0x1852750", VA = "0x1852750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1852758", Offset = "0x1852758", VA = "0x1852758")]
	private void BakeSetup()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x185275C", Offset = "0x185275C", VA = "0x185275C")]
	private void AssetRename(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1852760", Offset = "0x1852760", VA = "0x1852760")]
	private void BakeComplete()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1852764", Offset = "0x1852764", VA = "0x1852764")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7CF264", Offset = "0x7CF264")]
	private void BakeAll()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1852768", Offset = "0x1852768", VA = "0x1852768")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7CF29C", Offset = "0x7CF29C")]
	private void BakeFinish()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x185276C", Offset = "0x185276C", VA = "0x185276C")]
	public zLightRig()
	{
	}
}
[Token(Token = "0x20001B9")]
public class RWVoiceEmitter : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE74", Offset = "0x7BCE74")]
	private sealed class <DelayedDialogue>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RWVoiceEmitter <>4__this;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string eventPath;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025DF")]
			[Address(RVA = "0xA5E100", Offset = "0xA5E100", VA = "0xA5E100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xA5E170", Offset = "0xA5E170", VA = "0xA5E170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xA5DCC4", Offset = "0xA5DCC4", VA = "0xA5DCC4")]
		[DebuggerHidden]
		public <DelayedDialogue>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xA5DFA0", Offset = "0xA5DFA0", VA = "0xA5DFA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xA5DFA4", Offset = "0xA5DFA4", VA = "0xA5DFA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xA5E108", Offset = "0xA5E108", VA = "0xA5E108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string characterName;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color subtitleColor;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2334", Offset = "0x7C2334")]
	private string <currentEventPath>k__BackingField;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance eventInstance;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody body;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool skipUpdate;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int parameterValue;

	[Token(Token = "0x4000BD1")]
	private const string shuffleParameter = "escolha_fala";

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, List<int>> availableShuffleIndexesByEvent;

	[Token(Token = "0x170000B4")]
	public bool isPlaying
	{
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xA5CFA4", Offset = "0xA5CFA4", VA = "0xA5CFA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public string currentEventPath
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xA5D510", Offset = "0xA5D510", VA = "0xA5D510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF2D4", Offset = "0x7CF2D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xA5D704", Offset = "0xA5D704", VA = "0xA5D704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF2E4", Offset = "0x7CF2E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public bool activeInTimeline
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xA5CFB4", Offset = "0xA5CFB4", VA = "0xA5CFB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA5D70C", Offset = "0xA5D70C", VA = "0xA5D70C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA5D770", Offset = "0xA5D770", VA = "0xA5D770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA5D7DC", Offset = "0xA5D7DC", VA = "0xA5D7DC")]
	public void UpdateFromTimeline()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA5D784", Offset = "0xA5D784", VA = "0xA5D784")]
	private void EnsureCurrentEventPath()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA5D370", Offset = "0xA5D370", VA = "0xA5D370")]
	public void Play(string eventPath, bool skipSubtitle = false)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA5DB2C", Offset = "0xA5DB2C", VA = "0xA5DB2C")]
	public void Internal_SeekTime(double time)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA5D518", Offset = "0xA5D518", VA = "0xA5D518")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA5DB48", Offset = "0xA5DB48", VA = "0xA5DB48")]
	public void Stop(string eventPath)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA5DA98", Offset = "0xA5DA98", VA = "0xA5DA98")]
	private void AttachEvent()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA5D7E8", Offset = "0xA5D7E8", VA = "0xA5D7E8")]
	private int ShuffleParamenterValue(string eventPath)
	{
		return default(int);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA5DB8C", Offset = "0xA5DB8C", VA = "0xA5DB8C")]
	private void ResetEventShuffle(string eventPath, bool alreadyExists)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA5D9B0", Offset = "0xA5D9B0", VA = "0xA5D9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF2F4", Offset = "0x7CF2F4")]
	private IEnumerator DelayedDialogue(string eventPath, float length)
	{
		return null;
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA5DCF0", Offset = "0xA5DCF0", VA = "0xA5DCF0", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA5DED8", Offset = "0xA5DED8", VA = "0xA5DED8")]
	public RWVoiceEmitter()
	{
	}
}
[Token(Token = "0x20001BA")]
public class RWVoiceEmitterBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventPath;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineClip clip;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xA5E178", Offset = "0xA5E178", VA = "0xA5E178")]
	public RWVoiceEmitterBehaviour()
	{
	}
}
[Token(Token = "0x20001BB")]
public class RWVoiceEmitterClip : PlayableAsset
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string eventPath;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double? eventDuration;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TimelineClip clip;

	[Token(Token = "0x170000B7")]
	public override double duration
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xA5E180", Offset = "0xA5E180", VA = "0xA5E180", Slot = "7")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xA5E20C", Offset = "0xA5E20C", VA = "0xA5E20C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xA5E314", Offset = "0xA5E314", VA = "0xA5E314")]
	public RWVoiceEmitterClip()
	{
	}
}
[Token(Token = "0x20001BC")]
public class RWVoiceEmitterMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RWVoiceEmitter emitter;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstFrame;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string previousEventPath;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool skipping;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xA5E31C", Offset = "0xA5E31C", VA = "0xA5E31C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xA5E680", Offset = "0xA5E680", VA = "0xA5E680", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xA5E694", Offset = "0xA5E694", VA = "0xA5E694", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xA5E6D0", Offset = "0xA5E6D0", VA = "0xA5E6D0")]
	public RWVoiceEmitterMixerBehaviour()
	{
	}
}
[Token(Token = "0x20001BD")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BAB64", Offset = "0x7BAB64")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BAB64", Offset = "0x7BAB64")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BAB64", Offset = "0x7BAB64")]
public class RWVoiceEmitterTrack : TrackAsset
{
	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xA5E6D8", Offset = "0xA5E6D8", VA = "0xA5E6D8", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xA5E770", Offset = "0xA5E770", VA = "0xA5E770")]
	public RWVoiceEmitterTrack()
	{
	}
}
[Token(Token = "0x20001BE")]
public class RendererToggler_PlatformDependent : MonoBehaviour
{
	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xA6019C", Offset = "0xA6019C", VA = "0xA6019C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xA60320", Offset = "0xA60320", VA = "0xA60320")]
	public RendererToggler_PlatformDependent()
	{
	}
}
[Token(Token = "0x20001BF")]
[ExecuteAlways]
public class RootMotionForward : MonoBehaviour
{
	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startingPoint;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fallbackApplyLocalRootMotion;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDegreesDelta;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2354", Offset = "0x7C2354")]
	private Vector3? <rotateTargetPos>k__BackingField;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool allowed;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool allowRotationOnly;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool lerp;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lerpTime;

	[Token(Token = "0x4000BE5")]
	private const float lerpSmoothness = 0.5f;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x170000B8")]
	public Vector3? rotateTargetPos
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xA6860C", Offset = "0xA6860C", VA = "0xA6860C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF358", Offset = "0x7CF358")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xA68618", Offset = "0xA68618", VA = "0xA68618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF368", Offset = "0x7CF368")]
		set
		{
		}
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xA68620", Offset = "0xA68620", VA = "0xA68620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xA68684", Offset = "0xA68684", VA = "0xA68684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xA68938", Offset = "0xA68938", VA = "0xA68938")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xA68710", Offset = "0xA68710", VA = "0xA68710")]
	private void RotateTowards(Vector3 t)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xA68C08", Offset = "0xA68C08", VA = "0xA68C08")]
	public void Allow(bool allow, bool rotationOnly = false)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xA68C28", Offset = "0xA68C28", VA = "0xA68C28")]
	public RootMotionForward()
	{
	}
}
[Token(Token = "0x20001C0")]
public class SaveBuildInfo : MonoBehaviour
{
	[Token(Token = "0x4000BE7")]
	private const string buildKey = "BuildVersion";

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int previousVersion;

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xA694E8", Offset = "0xA694E8", VA = "0xA694E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xA69548", Offset = "0xA69548", VA = "0xA69548")]
	public static int GetSavedVersion()
	{
		return default(int);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xA6967C", Offset = "0xA6967C", VA = "0xA6967C")]
	public static void SaveCurrentBuildInfo()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA6989C", Offset = "0xA6989C", VA = "0xA6989C")]
	public SaveBuildInfo()
	{
	}
}
[Token(Token = "0x20001C1")]
public class SetInGameBGMHelper : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string musicToChangeTo;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameTV tvSide;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA70270", Offset = "0xA70270", VA = "0xA70270")]
	public void ChangeMusic()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA702F4", Offset = "0xA702F4", VA = "0xA702F4")]
	public SetInGameBGMHelper()
	{
	}
}
[Token(Token = "0x20001C2")]
public class SetInGameBGMOnAwake : MonoBehaviour
{
	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string newBGM;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA702FC", Offset = "0xA702FC", VA = "0xA702FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA70390", Offset = "0xA70390", VA = "0xA70390")]
	public SetInGameBGMOnAwake()
	{
	}
}
[Token(Token = "0x20001C3")]
public class SetInitialPosition : MonoBehaviour
{
	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform initialPosition;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool matchRotation;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA70398", Offset = "0xA70398", VA = "0xA70398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA704A4", Offset = "0xA704A4", VA = "0xA704A4")]
	public SetInitialPosition()
	{
	}
}
[Token(Token = "0x20001C4")]
public class billboard : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inGame;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cam;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 freeRotation;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 eangles;

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x18519A8", Offset = "0x18519A8", VA = "0x18519A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1851AC8", Offset = "0x1851AC8", VA = "0x1851AC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1851BCC", Offset = "0x1851BCC", VA = "0x1851BCC")]
	public billboard()
	{
	}
}
[Token(Token = "0x20001C5")]
[ExecuteInEditMode]
public class cPrecision : MonoBehaviour
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int colorPrecision;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usePalette;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D palette;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1851C54", Offset = "0x1851C54", VA = "0x1851C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1851CE4", Offset = "0x1851CE4", VA = "0x1851CE4")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1851E0C", Offset = "0x1851E0C", VA = "0x1851E0C")]
	public cPrecision()
	{
	}
}
[Token(Token = "0x20001C6")]
public class SetU32FogMultiplier : MonoBehaviour
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float globalFogMultiplier;

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA70664", Offset = "0xA70664", VA = "0xA70664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xA706B8", Offset = "0xA706B8", VA = "0xA706B8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA706BC", Offset = "0xA706BC", VA = "0xA706BC")]
	public SetU32FogMultiplier()
	{
	}
}
[Token(Token = "0x20001C7")]
public class SineMovement : MonoBehaviour
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float period;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeOffset;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 amplitude;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalLocalPosition;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA71AF0", Offset = "0xA71AF0", VA = "0xA71AF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA71B34", Offset = "0xA71B34", VA = "0xA71B34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xA71CBC", Offset = "0xA71CBC", VA = "0xA71CBC")]
	public SineMovement()
	{
	}
}
[Token(Token = "0x20001C8")]
public class StayInPlaceEvent : MonoBehaviour
{
	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sensor sensor;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToTrigger;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent eventToTrigger;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool checkpointRestart;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string FMODEvent;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xA7767C", Offset = "0xA7767C", VA = "0xA7767C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xA776F0", Offset = "0xA776F0", VA = "0xA776F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xA77764", Offset = "0xA77764", VA = "0xA77764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xA77814", Offset = "0xA77814", VA = "0xA77814")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xA77840", Offset = "0xA77840", VA = "0xA77840")]
	public StayInPlaceEvent()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Achievment_OnState : AchievmentGeneric
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ProgressionState progress;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xA94DA8", Offset = "0xA94DA8", VA = "0xA94DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xA94E0C", Offset = "0xA94E0C", VA = "0xA94E0C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xA94EB0", Offset = "0xA94EB0", VA = "0xA94EB0")]
	public Achievment_OnState()
	{
	}
}
[Token(Token = "0x20001CA")]
public static class Achievment_Static
{
	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string failureKey;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool oneSitting;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xA94EB4", Offset = "0xA94EB4", VA = "0xA94EB4")]
	public static int GetFailures()
	{
		return default(int);
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xA94F64", Offset = "0xA94F64", VA = "0xA94F64")]
	public static void AddFailures(bool decrement = false)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xA950AC", Offset = "0xA950AC", VA = "0xA950AC")]
	public static void ResetFailures()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xA95160", Offset = "0xA95160", VA = "0xA95160")]
	public static void ResetOneSitting()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xA951CC", Offset = "0xA951CC", VA = "0xA951CC")]
	public static void DisableOneSitting()
	{
	}
}
[Token(Token = "0x20001CB")]
public class Level3_AchievmentMom : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressionState progress;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x9779F8", Offset = "0x9779F8", VA = "0x9779F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x977A5C", Offset = "0x977A5C", VA = "0x977A5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x977B6C", Offset = "0x977B6C", VA = "0x977B6C")]
	public Level3_AchievmentMom()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Level6Achievment_Check : MonoBehaviour
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string voxelPlaced_State;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Achievements levelClear;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Achievements beatOneSitting;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Achievements beatNoFailure;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string onCompleted;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string overrideSound;

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x97ED60", Offset = "0x97ED60", VA = "0x97ED60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x97EDF4", Offset = "0x97EDF4", VA = "0x97EDF4")]
	private void CheckProgress(int stateIndex, string stateName)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x97F00C", Offset = "0x97F00C", VA = "0x97F00C")]
	public Level6Achievment_Check()
	{
	}
}
[Token(Token = "0x20001CD")]
public class BuildDemoConditionalActivation : MonoBehaviour
{
	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activeDuringDemo;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xAA794C", Offset = "0xAA794C", VA = "0xAA794C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xAA79E4", Offset = "0xAA79E4", VA = "0xAA79E4")]
	public BuildDemoConditionalActivation()
	{
	}
}
[Token(Token = "0x20001CE")]
public class BuildPlatformConditionalActivation : MonoBehaviour
{
	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C23A4", Offset = "0x7C23A4")]
	public bool quest;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pico;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool pico3;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool ps4;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pc;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C23DC", Offset = "0x7C23DC")]
	public bool activeInSelectedPlatforms;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2414", Offset = "0x7C2414")]
	public MonoBehaviour[] componentsToDisable;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C244C", Offset = "0x7C244C")]
	public GameObject[] objectsToDisable;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xAA7A9C", Offset = "0xAA7A9C", VA = "0xAA7A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xAA7B60", Offset = "0xAA7B60", VA = "0xAA7B60")]
	private void SolveForPlatform(bool isActive)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xAA7CB0", Offset = "0xAA7CB0", VA = "0xAA7CB0")]
	public BuildPlatformConditionalActivation()
	{
	}
}
[Token(Token = "0x20001CF")]
public class BuildPS4ConditionalActivation : MonoBehaviour
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activeInPS4;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xAA79F4", Offset = "0xAA79F4", VA = "0xAA79F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xAA7A8C", Offset = "0xAA7A8C", VA = "0xAA7A8C")]
	public BuildPS4ConditionalActivation()
	{
	}
}
[Token(Token = "0x20001D0")]
public class GraphicsQuality : MonoBehaviour
{
	[Token(Token = "0x20005DB")]
	public enum Level
	{
		[Token(Token = "0x4001DD5")]
		Quest,
		[Token(Token = "0x4001DD6")]
		PS4,
		[Token(Token = "0x4001DD7")]
		Standalone
	}

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2494", Offset = "0x7C2494")]
	private static Level <level>k__BackingField;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int currentQuality;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initialized;

	[Token(Token = "0x170000B9")]
	public static Level level
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xAD820C", Offset = "0xAD820C", VA = "0xAD820C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF398", Offset = "0x7CF398")]
		get
		{
			return default(Level);
		}
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xAD8274", Offset = "0xAD8274", VA = "0xAD8274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF3A8", Offset = "0x7CF3A8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action<Level> onQualityChange
	{
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xAD802C", Offset = "0xAD802C", VA = "0xAD802C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF378", Offset = "0x7CF378")]
		add
		{
		}
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xAD811C", Offset = "0xAD811C", VA = "0xAD811C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF388", Offset = "0x7CF388")]
		remove
		{
		}
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xAD82E0", Offset = "0xAD82E0", VA = "0xAD82E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xAD8514", Offset = "0xAD8514", VA = "0xAD8514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xAD8384", Offset = "0xAD8384", VA = "0xAD8384")]
	private static bool UpdateQuality(int quality)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xAD8618", Offset = "0xAD8618", VA = "0xAD8618")]
	public GraphicsQuality()
	{
	}
}
[Token(Token = "0x20001D1")]
public class OculusEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xC3CF20", Offset = "0xC3CF20", VA = "0xC3CF20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xC3D15C", Offset = "0xC3D15C", VA = "0xC3D15C")]
	private void EntitlementCheckCallback(Message msg)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xC3D0B4", Offset = "0xC3D0B4", VA = "0xC3D0B4")]
	private void HandleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC3D198", Offset = "0xC3D198", VA = "0xC3D198")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC3D1A4", Offset = "0xC3D1A4", VA = "0xC3D1A4")]
	public OculusEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001D2")]
public class OculusHMDHandling : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bus masterBus;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oldPaused;

	[Token(Token = "0x4000C1B")]
	private const string masterBus_Path = "bus:/";

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool recenter;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int recenterFrame;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC3D1AC", Offset = "0xC3D1AC", VA = "0xC3D1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xC3D2A0", Offset = "0xC3D2A0", VA = "0xC3D2A0")]
	private void Display_RecenteredPose()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xC3D2D0", Offset = "0xC3D2D0", VA = "0xC3D2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xC3D64C", Offset = "0xC3D64C", VA = "0xC3D64C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xC3D708", Offset = "0xC3D708", VA = "0xC3D708")]
	public OculusHMDHandling()
	{
	}
}
[Token(Token = "0x20001D3")]
public class PcSuperSampling : MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float superSampling;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xC40468", Offset = "0xC40468", VA = "0xC40468")]
	public PcSuperSampling()
	{
	}
}
[Token(Token = "0x20001D4")]
public class PicoEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appId;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string appKey;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string appSecret;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool performEntitlementCheck;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB8B47C", Offset = "0xB8B47C", VA = "0xB8B47C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB8B59C", Offset = "0xB8B59C", VA = "0xB8B59C")]
	public PicoEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001D5")]
public class PostProcessingToggler : MonoBehaviour
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PostProcessLayer ppLayer;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PostProcessVolume ppVolume;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MonoBehaviour> other;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB97B24", Offset = "0xB97B24", VA = "0xB97B24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xB97C30", Offset = "0xB97C30", VA = "0xB97C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xB97CF0", Offset = "0xB97CF0", VA = "0xB97CF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xB97CE4", Offset = "0xB97CE4", VA = "0xB97CE4")]
	private void OnQualityChange(GraphicsQuality.Level level)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xB97D8C", Offset = "0xB97D8C", VA = "0xB97D8C")]
	public void Toggle(bool status)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xB97F04", Offset = "0xB97F04", VA = "0xB97F04")]
	public PostProcessingToggler()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SetFMODAudioOutput : MonoBehaviour
{
	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xA700E0", Offset = "0xA700E0", VA = "0xA700E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xA70268", Offset = "0xA70268", VA = "0xA70268")]
	public SetFMODAudioOutput()
	{
	}
}
[Token(Token = "0x20001D7")]
public class SteamVR_HMDHandling : MonoBehaviour
{
	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bus masterBus;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oldPaused;

	[Token(Token = "0x4000C28")]
	private const string masterBus_Path = "bus:/";

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool steamVrHasFocus;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool hasFocus;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool isUsingOculus;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xA778A4", Offset = "0xA778A4", VA = "0xA778A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xA779D8", Offset = "0xA779D8", VA = "0xA779D8")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xA77A70", Offset = "0xA77A70", VA = "0xA77A70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xA77C10", Offset = "0xA77C10", VA = "0xA77C10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xA77CD8", Offset = "0xA77CD8", VA = "0xA77CD8")]
	public SteamVR_HMDHandling()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ViveportEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x20005DC")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD568", Offset = "0x7BD568")]
		private sealed class <SuccessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000493")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029AF")]
				[Address(RVA = "0x115E648", Offset = "0x115E648", VA = "0x115E648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B1")]
				[Address(RVA = "0x115E6B8", Offset = "0x115E6B8", VA = "0x115E6B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x115E4B0", Offset = "0x115E4B0", VA = "0x115E4B0")]
			[DebuggerHidden]
			public <SuccessAction>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x115E5E8", Offset = "0x115E5E8", VA = "0x115E5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x115E5EC", Offset = "0x115E5EC", VA = "0x115E5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x115E650", Offset = "0x115E650", VA = "0x115E650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD578", Offset = "0x7BD578")]
		private sealed class <FailAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000495")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029B5")]
				[Address(RVA = "0x115E570", Offset = "0x115E570", VA = "0x115E570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B7")]
				[Address(RVA = "0x115E5E0", Offset = "0x115E5E0", VA = "0x115E5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x115E4DC", Offset = "0x115E4DC", VA = "0x115E4DC")]
			[DebuggerHidden]
			public <FailAction>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x115E508", Offset = "0x115E508", VA = "0x115E508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x115E50C", Offset = "0x115E50C", VA = "0x115E50C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x115E578", Offset = "0x115E578", VA = "0x115E578", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x115E034", Offset = "0x115E034", VA = "0x115E034", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x115E1D4", Offset = "0x115E1D4", VA = "0x115E1D4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x115E174", Offset = "0x115E174", VA = "0x115E174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D3E3C", Offset = "0x7D3E3C")]
		private IEnumerator SuccessAction()
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x115E450", Offset = "0x115E450", VA = "0x115E450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D3EA0", Offset = "0x7D3EA0")]
		private IEnumerator FailAction()
		{
			return null;
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x115DEBC", Offset = "0x115DEBC", VA = "0x115DEBC")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x4000C2E")]
	private const int SUCCESS = 0;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x115DACC", Offset = "0x115DACC", VA = "0x115DACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x115DB8C", Offset = "0x115DB8C", VA = "0x115DB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x115DC80", Offset = "0x115DC80", VA = "0x115DC80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x115DD18", Offset = "0x115DD18", VA = "0x115DD18")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x115DEC4", Offset = "0x115DEC4", VA = "0x115DEC4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x115DED4", Offset = "0x115DED4", VA = "0x115DED4")]
	private void CheckInitStatus()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x115DFA4", Offset = "0x115DFA4", VA = "0x115DFA4")]
	public ViveportEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001D9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAC38", Offset = "0x7BAC38")]
public class AutoCollect : MonoBehaviour
{
	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE84", Offset = "0x7BCE84")]
	private sealed class <AutoCollectAnimation>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoCollect <>4__this;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xA99644", Offset = "0xA99644", VA = "0xA99644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xA996B4", Offset = "0xA996B4", VA = "0xA996B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xA99460", Offset = "0xA99460", VA = "0xA99460")]
		[DebuggerHidden]
		public <AutoCollectAnimation>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xA9949C", Offset = "0xA9949C", VA = "0xA9949C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xA994A0", Offset = "0xA994A0", VA = "0xA994A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xA9964C", Offset = "0xA9964C", VA = "0xA9964C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float autoCollectionTime;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve verticalMovementCurve;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform animateGroup;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collectable collectable;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xA99350", Offset = "0xA99350", VA = "0xA99350")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xA993B4", Offset = "0xA993B4", VA = "0xA993B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xA993E0", Offset = "0xA993E0", VA = "0xA993E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF3B8", Offset = "0x7CF3B8")]
	private IEnumerator AutoCollectAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xA9948C", Offset = "0xA9948C", VA = "0xA9948C")]
	public AutoCollect()
	{
	}
}
[Token(Token = "0x20001DA")]
public class Collectable : MonoBehaviour
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkpointRespawn;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string tagToCheck;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform content;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform contentCollected;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playVfx;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public InGameVFXManager.VFX_Types collectVFX;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InGameVFXManager.VFX_Types pickupVFX;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string pickUpFMODEvent;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool audioFromTV;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameTV tvSource;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool canCollect;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool previouslyCollected;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xBE9E74", Offset = "0xBE9E74", VA = "0xBE9E74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xBEA180", Offset = "0xBEA180", VA = "0xBEA180")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xBEA0D4", Offset = "0xBEA0D4", VA = "0xBEA0D4")]
	private void RespawnCollectable()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xBEA208", Offset = "0xBEA208", VA = "0xBEA208")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xBEA66C", Offset = "0xBEA66C", VA = "0xBEA66C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xBEA268", Offset = "0xBEA268", VA = "0xBEA268")]
	public void Collect()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xBEA9F8", Offset = "0xBEA9F8", VA = "0xBEA9F8")]
	public Collectable()
	{
	}
}
[Token(Token = "0x20001DB")]
public class CollectableAlert : InGameVFX
{
	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C24B4", Offset = "0x7C24B4")]
	public Animator animator;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string skinTriggerName;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string sceneTriggerName;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float skinAlertLifetime;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float sceneAlertLifetime;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float alertLifetime;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xBEAA68", Offset = "0xBEAA68", VA = "0xBEAA68", Slot = "6")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xBEAA94", Offset = "0xBEAA94", VA = "0xBEAA94", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xBEAB3C", Offset = "0xBEAB3C", VA = "0xBEAB3C", Slot = "8")]
	public override void PlayVFX()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xBEAD04", Offset = "0xBEAD04", VA = "0xBEAD04")]
	public CollectableAlert()
	{
	}
}
[Token(Token = "0x20001DC")]
public class CollectableManager
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CollectablesSettings _settings;

	[Token(Token = "0x4000C48")]
	private const string collectablesAssetPath = "Collectables";

	[Token(Token = "0x4000C49")]
	public const string collectablesKey = "Collectables";

	[Token(Token = "0x4000C4A")]
	private const char separator = ',';

	[Token(Token = "0x170000BA")]
	public static CollectablesSettings settings
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xBEAD0C", Offset = "0xBEAD0C", VA = "0xBEAD0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xBE9F40", Offset = "0xBE9F40", VA = "0xBE9F40")]
	public static bool CheckCollected(int level, string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xBEADD0", Offset = "0xBEADD0", VA = "0xBEADD0")]
	public static int GetSavedCollectablesCount(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xBEA6CC", Offset = "0xBEA6CC", VA = "0xBEA6CC")]
	public static void SaveCollectable(int level, string ID)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xBEAF68", Offset = "0xBEAF68", VA = "0xBEAF68")]
	public static int GetCountByLevel(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xBEACA0", Offset = "0xBEACA0", VA = "0xBEACA0")]
	public static bool AllCollected(int knownCompletedLevel = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xBEAC6C", Offset = "0xBEAC6C", VA = "0xBEAC6C")]
	public static bool AllCollectedInLevel(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xBEAFF4", Offset = "0xBEAFF4", VA = "0xBEAFF4")]
	public static int GetTotalCollectedCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xBEB030", Offset = "0xBEB030", VA = "0xBEB030")]
	public CollectableManager()
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BAC9C", Offset = "0x7BAC9C")]
public class CollectablesSettings : ScriptableObject
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] collectablesByLevel;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C24EC", Offset = "0x7C24EC")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C24EC", Offset = "0x7C24EC")]
	public string level1Skin;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C2560", Offset = "0x7C2560")]
	public string level2Skin;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C25C4", Offset = "0x7C25C4")]
	public string level3Skin;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C2628", Offset = "0x7C2628")]
	public string level4Skin;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C268C", Offset = "0x7C268C")]
	public string level5Skin;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C26F0", Offset = "0x7C26F0")]
	public string level6Skin;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C2754", Offset = "0x7C2754")]
	public string allCollectedSkin;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xBEAF9C", Offset = "0xBEAF9C", VA = "0xBEAF9C")]
	public int GetCountByLevel(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xBEAF0C", Offset = "0xBEAF0C", VA = "0xBEAF0C")]
	public string GetLevelSkin(int level)
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xBEB490", Offset = "0xBEB490", VA = "0xBEB490")]
	public CollectablesSettings()
	{
	}
}
[Token(Token = "0x20001DE")]
public class CollectableUI : MonoBehaviour
{
	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text collectableCountTxt;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoDetectCurrentLevel;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] collectedByLevel;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xBEB038", Offset = "0xBEB038", VA = "0xBEB038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xBEB104", Offset = "0xBEB104", VA = "0xBEB104")]
	public void UpdateCollectedListByLevel(int level)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xBEB2BC", Offset = "0xBEB2BC", VA = "0xBEB2BC")]
	public void UpdateCollectedList()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xBEB238", Offset = "0xBEB238", VA = "0xBEB238")]
	public void DisplayCollectedInLevel(int level)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xBEB420", Offset = "0xBEB420", VA = "0xBEB420")]
	public CollectableUI()
	{
	}
}
[Token(Token = "0x20001DF")]
public class GrabbableCollectable : Interactable
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C27B8", Offset = "0x7C27B8")]
	public float timeToGetCollectable;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject cartridge;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C27F0", Offset = "0x7C27F0")]
	public GameObject instantCollectable;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool collectsItself;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Damageable damageable;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float grabTime;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Rigidbody rb;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Collectable selfCollectable;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xAD7D34", Offset = "0xAD7D34", VA = "0xAD7D34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xAD7DFC", Offset = "0xAD7DFC", VA = "0xAD7DFC", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xAD7E8C", Offset = "0xAD7E8C", VA = "0xAD7E8C")]
	private void GetCollectable()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xAD801C", Offset = "0xAD801C", VA = "0xAD801C")]
	public GrabbableCollectable()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Data : MonoBehaviour
{
	[Token(Token = "0x20005DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCE94", Offset = "0x7BCE94")]
	private sealed class <InitializeFMODVolumes>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xBF2E74", Offset = "0xBF2E74", VA = "0xBF2E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025F2")]
			[Address(RVA = "0xBF2EE4", Offset = "0xBF2EE4", VA = "0xBF2EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xBF2A98", Offset = "0xBF2A98", VA = "0xBF2A98")]
		[DebuggerHidden]
		public <InitializeFMODVolumes>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xBF2E0C", Offset = "0xBF2E0C", VA = "0xBF2E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xBF2E10", Offset = "0xBF2E10", VA = "0xBF2E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xBF2E7C", Offset = "0xBF2E7C", VA = "0xBF2E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2828", Offset = "0x7C2828")]
	private static SaveFile <saveFile>k__BackingField;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ISaveFileIO saveFileIO;

	[Token(Token = "0x4000C60")]
	private const float autoFlush = 2f;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float timeUntilFlush;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool dirty;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool initialized;

	[Token(Token = "0x170000BB")]
	public static SaveFile saveFile
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xBE98D0", Offset = "0xBE98D0", VA = "0xBE98D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF41C", Offset = "0x7CF41C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xBF2610", Offset = "0xBF2610", VA = "0xBF2610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF42C", Offset = "0x7CF42C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xBF2680", Offset = "0xBF2680", VA = "0xBF2680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xBF29F8", Offset = "0xBF29F8", VA = "0xBF29F8")]
	private static void OnSaveFileModify()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xBF2998", Offset = "0xBF2998", VA = "0xBF2998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF43C", Offset = "0x7CF43C")]
	private IEnumerator InitializeFMODVolumes()
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xBF2AC4", Offset = "0xBF2AC4", VA = "0xBF2AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xBF27E8", Offset = "0xBF27E8", VA = "0xBF27E8")]
	public static void Reload()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xBF2BCC", Offset = "0xBF2BCC", VA = "0xBF2BCC")]
	public static void Flush()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xBF2DA4", Offset = "0xBF2DA4", VA = "0xBF2DA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xBF2E00", Offset = "0xBF2E00", VA = "0xBF2E00")]
	public Data()
	{
	}
}
[Token(Token = "0x20001E1")]
public class DataExperiments : MonoBehaviour
{
	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xBF2EEC", Offset = "0xBF2EEC", VA = "0xBF2EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xBF2FE8", Offset = "0xBF2FE8", VA = "0xBF2FE8")]
	public DataExperiments()
	{
	}
}
[Token(Token = "0x20001E2")]
public interface ISaveFileIO
{
	[Token(Token = "0x6000B17")]
	bool Save(SaveFile saveFile);

	[Token(Token = "0x6000B18")]
	bool Load(SaveFile saveFile);

	[Token(Token = "0x6000B19")]
	void Delete(SaveFile saveFile);
}
[Token(Token = "0x20001E3")]
public class SaveFile
{
	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly Dictionary<string, string> rawValues;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static byte[] header;

	[Token(Token = "0x14000006")]
	public event Action onUpdate
	{
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xA698F8", Offset = "0xA698F8", VA = "0xA698F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4A0", Offset = "0x7CF4A0")]
		add
		{
		}
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xA699A0", Offset = "0xA699A0", VA = "0xA699A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4B0", Offset = "0x7CF4B0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA69A48", Offset = "0xA69A48", VA = "0xA69A48")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xA69A5C", Offset = "0xA69A5C", VA = "0xA69A5C")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xA69B04", Offset = "0xA69B04", VA = "0xA69B04")]
	public void Add(string key, string value)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xA69C88", Offset = "0xA69C88", VA = "0xA69C88")]
	public void Add(string key, float value)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xA697D8", Offset = "0xA697D8", VA = "0xA697D8")]
	public void Add(string key, int value)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xA69D5C", Offset = "0xA69D5C", VA = "0xA69D5C")]
	public void Add(string key, bool value)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xA69DDC", Offset = "0xA69DDC", VA = "0xA69DDC")]
	public string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xA69E64", Offset = "0xA69E64", VA = "0xA69E64")]
	public float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xA69F48", Offset = "0xA69F48", VA = "0xA69F48")]
	public bool TryGetFloat(string key, out float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xA69728", Offset = "0xA69728", VA = "0xA69728")]
	public int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xA6A030", Offset = "0xA6A030", VA = "0xA6A030")]
	public bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xA69BF4", Offset = "0xA69BF4", VA = "0xA69BF4")]
	public void Remove(string key)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xA6A0A0", Offset = "0xA6A0A0", VA = "0xA6A0A0")]
	public bool SerializeToStream(Stream stream)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xA6A4E4", Offset = "0xA6A4E4", VA = "0xA6A4E4")]
	public bool DeserializeFromStream(Stream stream)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xA6A8BC", Offset = "0xA6A8BC", VA = "0xA6A8BC")]
	public SaveFile()
	{
	}
}
[Token(Token = "0x20001E4")]
public class SaveFileIO_Dummy : ISaveFileIO
{
	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xA6A9B8", Offset = "0xA6A9B8", VA = "0xA6A9B8", Slot = "5")]
	public bool Load(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xA6AA2C", Offset = "0xA6AA2C", VA = "0xA6AA2C", Slot = "4")]
	public bool Save(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA6AA34", Offset = "0xA6AA34", VA = "0xA6AA34", Slot = "6")]
	public void Delete(SaveFile saveFile)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA6AAA0", Offset = "0xA6AAA0", VA = "0xA6AAA0")]
	public SaveFileIO_Dummy()
	{
	}
}
[Token(Token = "0x20001E5")]
public class SaveFileIO_FileStream : ISaveFileIO
{
	[StructLayout(3)]
	[Token(Token = "0x20005DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCEA4", Offset = "0x7BCEA4")]
	private struct <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SaveFile saveFile;
	}

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string path;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string pathBackup;

	[Token(Token = "0x4000C69")]
	private const string fileName = "Save.pr95";

	[Token(Token = "0x4000C6A")]
	private const string fileBackup = ".bak";

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA6AAA8", Offset = "0xA6AAA8", VA = "0xA6AAA8")]
	public SaveFileIO_FileStream()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA6ABC4", Offset = "0xA6ABC4", VA = "0xA6ABC4", Slot = "5")]
	public bool Load(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA6AED8", Offset = "0xA6AED8", VA = "0xA6AED8", Slot = "4")]
	public bool Save(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA6B1A0", Offset = "0xA6B1A0", VA = "0xA6B1A0", Slot = "6")]
	public void Delete(SaveFile saveFile)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xA6AC7C", Offset = "0xA6AC7C", VA = "0xA6AC7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4C0", Offset = "0x7CF4C0")]
	internal static bool <Load>g__TryRead|5_0(string path, ref <>c__DisplayClass5_0 P_1)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001E6")]
public class SaveFileIO_PlayerPrefs : ISaveFileIO
{
	[Token(Token = "0x4000C6B")]
	private const string stringCount = "c";

	[Token(Token = "0x4000C6C")]
	private const char charKey = 'k';

	[Token(Token = "0x4000C6D")]
	private const char charValue = 'v';

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xA6B2C4", Offset = "0xA6B2C4", VA = "0xA6B2C4", Slot = "5")]
	public bool Load(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xA6B478", Offset = "0xA6B478", VA = "0xA6B478", Slot = "4")]
	public bool Save(SaveFile saveFile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xA6B6FC", Offset = "0xA6B6FC", VA = "0xA6B6FC", Slot = "6")]
	public void Delete(SaveFile saveFile)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xA6B704", Offset = "0xA6B704", VA = "0xA6B704")]
	public SaveFileIO_PlayerPrefs()
	{
	}
}
[Token(Token = "0x20001E7")]
public static class SettingsData
{
	[Token(Token = "0x4000C6E")]
	private const string musicVCAPath = "vca:/music";

	[Token(Token = "0x4000C6F")]
	private const string sfxVCAPath = "vca:/sfx";

	[Token(Token = "0x4000C70")]
	private const string voVCAPath = "vca:/vo";

	[Token(Token = "0x4000C71")]
	public const string timerKey = "Settings.Timer.Enabled";

	[Token(Token = "0x4000C72")]
	public const string skipKey = "Settings.Skip.Enabled";

	[Token(Token = "0x170000BC")]
	public static string audioKey
	{
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xA706D0", Offset = "0xA706D0", VA = "0xA706D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public static string voSaveKey
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA70718", Offset = "0xA70718", VA = "0xA70718")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public static string subtitleKey
	{
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xA70CD8", Offset = "0xA70CD8", VA = "0xA70CD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xA70794", Offset = "0xA70794", VA = "0xA70794")]
	public static void SetVolume(bool increase, VCA vca, string path, ref float currentVolume, bool overrideIncrease = false)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xA70988", Offset = "0xA70988", VA = "0xA70988")]
	public static void InitializeVolumes()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xA70874", Offset = "0xA70874", VA = "0xA70874")]
	public static void SaveVCA(string path, float volume)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xA70D20", Offset = "0xA70D20", VA = "0xA70D20")]
	public static void SaveSubtitle(bool value)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xA70DDC", Offset = "0xA70DDC", VA = "0xA70DDC")]
	public static void SaveTimerDisplay(bool value)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xA70E64", Offset = "0xA70E64", VA = "0xA70E64")]
	public static bool GetTimerDisplay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xA70EE4", Offset = "0xA70EE4", VA = "0xA70EE4")]
	public static void SaveSkipDisplay(bool value)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xA70F6C", Offset = "0xA70F6C", VA = "0xA70F6C")]
	public static bool GetSkipDisplay()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001E8")]
public class FirstPersonPlayer : MonoBehaviour
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2848", Offset = "0x7C2848")]
	private static FirstPersonPlayer <instance>k__BackingField;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hasRecenterInfo;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 recenterPosition;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Quaternion recenterRotation;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform offset;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform controller;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftHand;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightHand;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2858", Offset = "0x7C2858")]
	private VelocityInfo <leftHandVelocity>k__BackingField;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2868", Offset = "0x7C2868")]
	private VelocityInfo <rightHandVelocity>k__BackingField;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject saveIcon;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool recenterOnPress;

	[Token(Token = "0x170000BF")]
	public static FirstPersonPlayer instance
	{
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB5C900", Offset = "0xB5C900", VA = "0xB5C900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4D0", Offset = "0x7CF4D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB5C968", Offset = "0xB5C968", VA = "0xB5C968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4E0", Offset = "0x7CF4E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public VelocityInfo leftHandVelocity
	{
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB5C9D8", Offset = "0xB5C9D8", VA = "0xB5C9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4F0", Offset = "0x7CF4F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xB5C9E0", Offset = "0xB5C9E0", VA = "0xB5C9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF500", Offset = "0x7CF500")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public VelocityInfo rightHandVelocity
	{
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xB5C9E8", Offset = "0xB5C9E8", VA = "0xB5C9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF510", Offset = "0x7CF510")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xB5C9F0", Offset = "0xB5C9F0", VA = "0xB5C9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF520", Offset = "0x7CF520")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xB5C9F8", Offset = "0xB5C9F8", VA = "0xB5C9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xB5CC3C", Offset = "0xB5CC3C", VA = "0xB5CC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xB5CE80", Offset = "0xB5CE80", VA = "0xB5CE80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xB5CD74", Offset = "0xB5CD74", VA = "0xB5CD74")]
	private void TrackObject(Transform obj, TrackingInfo info)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xB5CD70", Offset = "0xB5CD70", VA = "0xB5CD70")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xB5CF80", Offset = "0xB5CF80", VA = "0xB5CF80")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xB5CFB4", Offset = "0xB5CFB4", VA = "0xB5CFB4")]
	public float HeadDot(Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xB5D0F4", Offset = "0xB5D0F4", VA = "0xB5D0F4")]
	public FirstPersonPlayer()
	{
	}
}
[Token(Token = "0x20001E9")]
public class FollowHead : MonoBehaviour
{
	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localOffset;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xAD1494", Offset = "0xAD1494", VA = "0xAD1494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xAD1508", Offset = "0xAD1508", VA = "0xAD1508")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xAD157C", Offset = "0xAD157C", VA = "0xAD157C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xAD1580", Offset = "0xAD1580", VA = "0xAD1580")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xAD1824", Offset = "0xAD1824", VA = "0xAD1824")]
	public FollowHead()
	{
	}
}
[Token(Token = "0x20001EA")]
public class HitInTheFace : MonoBehaviour
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector Blink;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool wasHit;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xAE3C38", Offset = "0xAE3C38", VA = "0xAE3C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xAE3C9C", Offset = "0xAE3C9C", VA = "0xAE3C9C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xAE3D94", Offset = "0xAE3D94", VA = "0xAE3D94")]
	private void Colldown()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xAE3D9C", Offset = "0xAE3D9C", VA = "0xAE3D9C")]
	public HitInTheFace()
	{
	}
}
[Token(Token = "0x20001EB")]
public class IconsController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E0")]
	public struct IconInformation
	{
		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool hideIcon;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IconType iconType;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float maxAngle;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC164", Offset = "0x7CC164")]
		public float scaleModifier;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC19C", Offset = "0x7CC19C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC19C", Offset = "0x7CC19C")]
		public float distance;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform customPosition;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color customColor;
	}

	[Serializable]
	[Token(Token = "0x20005E1")]
	public struct Pool_Tracking
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IconInformation info;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MonoBehaviour owner;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PoolableComponent poolable;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Icon_RealWorld iconComponent;

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x8623EC", Offset = "0x8623EC", VA = "0x8623EC")]
		public void Reposition()
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x8623F4", Offset = "0x8623F4", VA = "0x8623F4")]
		public void Resize()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x8623FC", Offset = "0x8623FC", VA = "0x8623FC")]
		public void Recolor()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x862404", Offset = "0x862404", VA = "0x862404")]
		private void TryGetIconComponent()
		{
		}
	}

	[Token(Token = "0x20005E2")]
	public enum IconType
	{
		[Token(Token = "0x4001DEB")]
		Grab,
		[Token(Token = "0x4001DEC")]
		Shoot
	}

	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCEB4", Offset = "0x7BCEB4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour caller;

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xAE632C", Offset = "0xAE632C", VA = "0xAE632C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xAE6E20", Offset = "0xAE6E20", VA = "0xAE6E20")]
		internal bool <SearchIcon>b__0(Pool_Tracking x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCEC4", Offset = "0x7BCEC4")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour caller;

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xAE6364", Offset = "0xAE6364", VA = "0xAE6364")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xAE6EA0", Offset = "0xAE6EA0", VA = "0xAE6EA0")]
		internal bool <CheckIcon>b__0(Pool_Tracking x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCED4", Offset = "0x7BCED4")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour interactable;

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xAE6D68", Offset = "0xAE6D68", VA = "0xAE6D68")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xAE6F20", Offset = "0xAE6F20", VA = "0xAE6F20")]
		internal bool <ShowIcon>b__0(Pool_Tracking x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCEE4", Offset = "0x7BCEE4")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour interactable;

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xAE6D70", Offset = "0xAE6D70", VA = "0xAE6D70")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xAE6FA0", Offset = "0xAE6FA0", VA = "0xAE6FA0")]
		internal bool <HideIcon>b__0(Pool_Tracking x)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xAE7020", Offset = "0xAE7020", VA = "0xAE7020")]
		internal bool <HideIcon>b__1(Pool_Tracking x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static IconsController instance;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2878", Offset = "0x7C2878")]
	public Transform mainCamera;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pool_Tracking> genericTracking;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GenericPool genericPool;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject grabIcon_prefab;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GenericPool grabPool;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Pool_Tracking> grabTracking;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject targetIcon_prefab;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GenericPool targetPool;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Pool_Tracking> targetTracking;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xAE6080", Offset = "0xAE6080", VA = "0xAE6080")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xAE6220", Offset = "0xAE6220", VA = "0xAE6220")]
	public bool SearchIcon(IconInformation info, MonoBehaviour caller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xAE5820", Offset = "0xAE5820", VA = "0xAE5820")]
	public void CheckIcon(IconInformation info, MonoBehaviour caller, bool available)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xAE6334", Offset = "0xAE6334", VA = "0xAE6334")]
	private void SetGenericTracking(IconInformation info)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xAE67E8", Offset = "0xAE67E8", VA = "0xAE67E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xAE6814", Offset = "0xAE6814", VA = "0xAE6814")]
	private void UpdateIconsPosition(List<Pool_Tracking> targetList)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xAE65A0", Offset = "0xAE65A0", VA = "0xAE65A0")]
	private void ShowIcon(IconType type, MonoBehaviour interactable, IconInformation info)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xAE636C", Offset = "0xAE636C", VA = "0xAE636C")]
	private void HideIcon(IconType type, MonoBehaviour interactable)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xAE6D78", Offset = "0xAE6D78", VA = "0xAE6D78")]
	public IconsController()
	{
	}
}
[Token(Token = "0x20001EC")]
public class PS4_HmdEnabling : MonoBehaviour
{
	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xC3EA4C", Offset = "0xC3EA4C", VA = "0xC3EA4C")]
	public PS4_HmdEnabling()
	{
	}
}
[Token(Token = "0x20001ED")]
public class HarcoreModeConditionalActivation : MonoBehaviour
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hardcoreExclusive;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool destroy;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xAE1640", Offset = "0xAE1640", VA = "0xAE1640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xAE1790", Offset = "0xAE1790", VA = "0xAE1790")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xAE181C", Offset = "0xAE181C", VA = "0xAE181C")]
	public HarcoreModeConditionalActivation()
	{
	}
}
[Token(Token = "0x20001EE")]
public class HardcoreMode : MonoBehaviour
{
	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C28B0", Offset = "0x7C28B0")]
	private static bool <hardcoreActive>k__BackingField;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C28C0", Offset = "0x7C28C0")]
	private static bool <temp_hardcoreOnNextLevel>k__BackingField;

	[Token(Token = "0x4000C91")]
	public const string hardcoreKey = "Hardcore.Level";

	[Token(Token = "0x170000C2")]
	public static bool hardcoreActive
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xAE1728", Offset = "0xAE1728", VA = "0xAE1728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF530", Offset = "0x7CF530")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xAE182C", Offset = "0xAE182C", VA = "0xAE182C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF540", Offset = "0x7CF540")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public static bool temp_hardcoreOnNextLevel
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xAD4FE8", Offset = "0xAD4FE8", VA = "0xAD4FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF550", Offset = "0x7CF550")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xAE189C", Offset = "0xAE189C", VA = "0xAE189C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF560", Offset = "0x7CF560")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xAE190C", Offset = "0xAE190C", VA = "0xAE190C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xAE1968", Offset = "0xAE1968", VA = "0xAE1968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xAE196C", Offset = "0xAE196C", VA = "0xAE196C")]
	private void Debug_SubscribeToggleHardcoreMode()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xAE1A58", Offset = "0xAE1A58", VA = "0xAE1A58")]
	private void Debug_ToggleHardcoreMode()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xAE1ACC", Offset = "0xAE1ACC", VA = "0xAE1ACC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xAD4F84", Offset = "0xAD4F84", VA = "0xAD4F84")]
	public static void ResetNextLevelDifficulty()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xAE1AD8", Offset = "0xAE1AD8", VA = "0xAE1AD8")]
	public static void SetHardcoreMode(bool useHardcore)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xAD5374", Offset = "0xAD5374", VA = "0xAD5374")]
	public static bool ToggleHarcoreMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xAE1B3C", Offset = "0xAE1B3C", VA = "0xAE1B3C")]
	public static void ConfirmDifficultyForNextLevel()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xAE1BA0", Offset = "0xAE1BA0", VA = "0xAE1BA0")]
	public static void SaveLevelClearedWithHardcore(int level)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xAE1C6C", Offset = "0xAE1C6C", VA = "0xAE1C6C")]
	public static bool GetLevelClearedWithHardcore(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xAE1D38", Offset = "0xAE1D38", VA = "0xAE1D38")]
	public static bool GetAllLevelsClearedWithHardcore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xAE1DC8", Offset = "0xAE1DC8", VA = "0xAE1DC8")]
	public HardcoreMode()
	{
	}
}
[Token(Token = "0x20001EF")]
public abstract class BaseInputDisplaying : MonoBehaviour
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputIconList currentIconList;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xA9E09C", Offset = "0xA9E09C", VA = "0xA9E09C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xA9E248", Offset = "0xA9E248", VA = "0xA9E248", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xA9E1C0", Offset = "0xA9E1C0", VA = "0xA9E1C0")]
	private void OnProfileUpdate(InputProfile profile)
	{
	}

	[Token(Token = "0x6000B7E")]
	protected abstract void UpdateValues();

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xA9E2E4", Offset = "0xA9E2E4", VA = "0xA9E2E4")]
	protected BaseInputDisplaying()
	{
	}
}
[Token(Token = "0x20001F0")]
public class HapticTest : MonoBehaviour
{
	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float leftPrev;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float rightPrev;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xAE1464", Offset = "0xAE1464", VA = "0xAE1464")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xAE14F0", Offset = "0xAE14F0", VA = "0xAE14F0")]
	private static void Vibrate(bool isLeftHand, Button press, Button axis, ref float prev)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xAE1634", Offset = "0xAE1634", VA = "0xAE1634")]
	public HapticTest()
	{
	}
}
[Token(Token = "0x20001F1")]
public class InputManagerLog : MonoBehaviour
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh left;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh right;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button[] allButtons;

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xAF30B4", Offset = "0xAF30B4", VA = "0xAF30B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xAF32E8", Offset = "0xAF32E8", VA = "0xAF32E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xAF3548", Offset = "0xAF3548", VA = "0xAF3548")]
	private string LogState()
	{
		return null;
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xAF335C", Offset = "0xAF335C", VA = "0xAF335C")]
	private static string LogDevices()
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xAF3720", Offset = "0xAF3720", VA = "0xAF3720")]
	public InputManagerLog()
	{
	}
}
[Token(Token = "0x20001F2")]
public class PS4InputTests : MonoBehaviour
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh left;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh right;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform axisHandle;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform axisHandle2;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int item;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xC3E0CC", Offset = "0xC3E0CC", VA = "0xC3E0CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC3E340", Offset = "0xC3E340", VA = "0xC3E340")]
	private static string LogMoveGyro()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC3E834", Offset = "0xC3E834", VA = "0xC3E834")]
	public PS4InputTests()
	{
	}
}
[Token(Token = "0x20001F3")]
public abstract class InputFinder : MonoBehaviour
{
	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly List<InputDevice> devices;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C28D0", Offset = "0x7C28D0")]
	private bool <updatedListFlag>k__BackingField;

	[Token(Token = "0x170000C4")]
	public bool updatedListFlag
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xAF14D8", Offset = "0xAF14D8", VA = "0xAF14D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF570", Offset = "0x7CF570")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xAF14E0", Offset = "0xAF14E0", VA = "0xAF14E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF580", Offset = "0x7CF580")]
		set
		{
		}
	}

	[Token(Token = "0x6000B8F")]
	public abstract void UpdateList();

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xAF14EC", Offset = "0xAF14EC", VA = "0xAF14EC")]
	protected InputFinder()
	{
	}
}
[Token(Token = "0x20001F4")]
public abstract class InputSolver
{
	[Token(Token = "0x6000B91")]
	public abstract void Solve(InputKeyPoll<Button> keyPoll);

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xAF3F98", Offset = "0xAF3F98", VA = "0xAF3F98")]
	public InputValue Axis(InputValue up, InputValue down, InputValue left, InputValue right)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xAF4020", Offset = "0xAF4020", VA = "0xAF4020")]
	protected InputSolver()
	{
	}
}
[Token(Token = "0x20001F5")]
public class JoystickInputFinder : InputFinder
{
	[Token(Token = "0x20005E7")]
	private struct JoystickDevice
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputProfile profile;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int left;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int right;
	}

	[Token(Token = "0x20005E8")]
	private enum ControllerSide
	{
		[Token(Token = "0x4001DF5")]
		Left,
		[Token(Token = "0x4001DF6")]
		Right,
		[Token(Token = "0x4001DF7")]
		Both
	}

	[Token(Token = "0x4000C9F")]
	private const float updateInterval = 3f;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float updateTempo;

	[Token(Token = "0x4000CA1")]
	private const int maxJoysticks = 8;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Regex matchXbox;

	[Token(Token = "0x4000CA3")]
	private const string matchGeneric = "usb joystick";

	[Token(Token = "0x4000CA4")]
	private const string matchDualshockPC = "wireless controller";

	[Token(Token = "0x4000CA5")]
	private const string matchTouch = "oculus";

	[Token(Token = "0x4000CA6")]
	private const string matchOpenVR = "openvr controller";

	[Token(Token = "0x4000CA7")]
	private const string matchVive = "vive";

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Regex matchIndex;

	[Token(Token = "0x4000CA9")]
	private const string matchLeft = "left";

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xAF7CC4", Offset = "0xAF7CC4", VA = "0xAF7CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xAF7D80", Offset = "0xAF7D80", VA = "0xAF7D80", Slot = "4")]
	public override void UpdateList()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xAF8298", Offset = "0xAF8298", VA = "0xAF8298")]
	private static void MatchJoystickNameWithProfile(string name, out InputProfile profile, out ControllerSide side)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xAF8B54", Offset = "0xAF8B54", VA = "0xAF8B54")]
	public JoystickInputFinder()
	{
	}
}
[Token(Token = "0x20001F6")]
public abstract class JoystickInputSolver : InputSolver
{
	[Token(Token = "0x20005E9")]
	public abstract class Gamepad : JoystickInputSolver
	{
		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x170003A8")]
		protected virtual InputValue ADown
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xAF9E94", Offset = "0xAF9E94", VA = "0xAF9E94", Slot = "5")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003A9")]
		protected virtual InputValue ARight
		{
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xAF9EC8", Offset = "0xAF9EC8", VA = "0xAF9EC8", Slot = "6")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AA")]
		protected virtual InputValue ALeft
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0xAF9EFC", Offset = "0xAF9EFC", VA = "0xAF9EFC", Slot = "7")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AB")]
		protected virtual InputValue AUp
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xAF9F30", Offset = "0xAF9F30", VA = "0xAF9F30", Slot = "8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AC")]
		protected virtual InputValue LBumper
		{
			[Token(Token = "0x6002605")]
			[Address(RVA = "0xAF9F64", Offset = "0xAF9F64", VA = "0xAF9F64", Slot = "9")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AD")]
		protected virtual InputValue RBumper
		{
			[Token(Token = "0x6002606")]
			[Address(RVA = "0xAF9F98", Offset = "0xAF9F98", VA = "0xAF9F98", Slot = "10")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AE")]
		protected virtual InputValue LTrigger
		{
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xAF9FCC", Offset = "0xAF9FCC", VA = "0xAF9FCC", Slot = "11")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003AF")]
		protected virtual InputValue RTrigger
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0xAFA000", Offset = "0xAFA000", VA = "0xAFA000", Slot = "12")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B0")]
		protected virtual InputValue LClick
		{
			[Token(Token = "0x6002609")]
			[Address(RVA = "0xAFA034", Offset = "0xAFA034", VA = "0xAFA034", Slot = "13")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B1")]
		protected virtual InputValue RClick
		{
			[Token(Token = "0x600260A")]
			[Address(RVA = "0xAFA068", Offset = "0xAFA068", VA = "0xAFA068", Slot = "14")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B2")]
		protected virtual InputValue LStick
		{
			[Token(Token = "0x600260B")]
			[Address(RVA = "0xAFA09C", Offset = "0xAFA09C", VA = "0xAFA09C", Slot = "15")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B3")]
		protected virtual InputValue RStick
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0xAFA0D0", Offset = "0xAFA0D0", VA = "0xAFA0D0", Slot = "16")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B4")]
		protected virtual InputValue DPad
		{
			[Token(Token = "0x600260D")]
			[Address(RVA = "0xAFA104", Offset = "0xAFA104", VA = "0xAFA104", Slot = "17")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xAF8F48", Offset = "0xAF8F48", VA = "0xAF8F48")]
		public Gamepad(int i)
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xAF995C", Offset = "0xAF995C", VA = "0xAF995C", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005EA")]
	public class Generic : Gamepad
	{
		[Token(Token = "0x170003B5")]
		protected override InputValue AUp
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0xAFA138", Offset = "0xAFA138", VA = "0xAFA138", Slot = "8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B6")]
		protected override InputValue ARight
		{
			[Token(Token = "0x6002611")]
			[Address(RVA = "0xAFA1CC", Offset = "0xAFA1CC", VA = "0xAFA1CC", Slot = "6")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B7")]
		protected override InputValue ADown
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0xAFA260", Offset = "0xAFA260", VA = "0xAFA260", Slot = "5")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B8")]
		protected override InputValue ALeft
		{
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xAFA2F4", Offset = "0xAFA2F4", VA = "0xAFA2F4", Slot = "7")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003B9")]
		protected override InputValue LBumper
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xAFA388", Offset = "0xAFA388", VA = "0xAFA388", Slot = "9")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BA")]
		protected override InputValue RBumper
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xAFA41C", Offset = "0xAFA41C", VA = "0xAFA41C", Slot = "10")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BB")]
		protected override InputValue LTrigger
		{
			[Token(Token = "0x6002616")]
			[Address(RVA = "0xAFA4B0", Offset = "0xAFA4B0", VA = "0xAFA4B0", Slot = "11")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BC")]
		protected override InputValue RTrigger
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0xAFA544", Offset = "0xAFA544", VA = "0xAFA544", Slot = "12")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BD")]
		protected override InputValue LClick
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0xAFA5D8", Offset = "0xAFA5D8", VA = "0xAFA5D8", Slot = "13")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BE")]
		protected override InputValue RClick
		{
			[Token(Token = "0x6002619")]
			[Address(RVA = "0xAFA66C", Offset = "0xAFA66C", VA = "0xAFA66C", Slot = "14")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003BF")]
		protected override InputValue LStick
		{
			[Token(Token = "0x600261A")]
			[Address(RVA = "0xAFA700", Offset = "0xAFA700", VA = "0xAFA700", Slot = "15")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C0")]
		protected override InputValue RStick
		{
			[Token(Token = "0x600261B")]
			[Address(RVA = "0xAFA7C4", Offset = "0xAFA7C4", VA = "0xAFA7C4", Slot = "16")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C1")]
		protected override InputValue DPad
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0xAFA888", Offset = "0xAFA888", VA = "0xAFA888", Slot = "17")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C2")]
		private bool Select
		{
			[Token(Token = "0x600261D")]
			[Address(RVA = "0xAFA94C", Offset = "0xAFA94C", VA = "0xAFA94C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C3")]
		private bool Start
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0xAFA9B8", Offset = "0xAFA9B8", VA = "0xAFA9B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xAF8508", Offset = "0xAF8508", VA = "0xAF8508")]
		public Generic(int i)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xAFAA24", Offset = "0xAFAA24", VA = "0xAFAA24", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005EB")]
	public class Xbox : Gamepad
	{
		[Token(Token = "0x170003C4")]
		protected override InputValue ADown
		{
			[Token(Token = "0x6002621")]
			[Address(RVA = "0xAFCF84", Offset = "0xAFCF84", VA = "0xAFCF84", Slot = "5")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C5")]
		protected override InputValue ARight
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0xAFD018", Offset = "0xAFD018", VA = "0xAFD018", Slot = "6")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C6")]
		protected override InputValue ALeft
		{
			[Token(Token = "0x6002623")]
			[Address(RVA = "0xAFD0AC", Offset = "0xAFD0AC", VA = "0xAFD0AC", Slot = "7")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C7")]
		protected override InputValue AUp
		{
			[Token(Token = "0x6002624")]
			[Address(RVA = "0xAFD140", Offset = "0xAFD140", VA = "0xAFD140", Slot = "8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C8")]
		protected override InputValue LBumper
		{
			[Token(Token = "0x6002625")]
			[Address(RVA = "0xAFD1D4", Offset = "0xAFD1D4", VA = "0xAFD1D4", Slot = "9")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003C9")]
		protected override InputValue RBumper
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0xAFD268", Offset = "0xAFD268", VA = "0xAFD268", Slot = "10")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CA")]
		protected override InputValue LTrigger
		{
			[Token(Token = "0x6002627")]
			[Address(RVA = "0xAFD2FC", Offset = "0xAFD2FC", VA = "0xAFD2FC", Slot = "11")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CB")]
		protected override InputValue RTrigger
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0xAFD38C", Offset = "0xAFD38C", VA = "0xAFD38C", Slot = "12")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CC")]
		protected override InputValue LClick
		{
			[Token(Token = "0x6002629")]
			[Address(RVA = "0xAFD41C", Offset = "0xAFD41C", VA = "0xAFD41C", Slot = "13")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CD")]
		protected override InputValue RClick
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0xAFD4B0", Offset = "0xAFD4B0", VA = "0xAFD4B0", Slot = "14")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CE")]
		protected override InputValue LStick
		{
			[Token(Token = "0x600262B")]
			[Address(RVA = "0xAFD544", Offset = "0xAFD544", VA = "0xAFD544", Slot = "15")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003CF")]
		protected override InputValue RStick
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0xAFD608", Offset = "0xAFD608", VA = "0xAFD608", Slot = "16")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D0")]
		protected override InputValue DPad
		{
			[Token(Token = "0x600262D")]
			[Address(RVA = "0xAFD6CC", Offset = "0xAFD6CC", VA = "0xAFD6CC", Slot = "17")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D1")]
		private bool Menu
		{
			[Token(Token = "0x600262E")]
			[Address(RVA = "0xAFD790", Offset = "0xAFD790", VA = "0xAFD790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xAF850C", Offset = "0xAF850C", VA = "0xAF850C")]
		public Xbox(int i)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xAFD7FC", Offset = "0xAFD7FC", VA = "0xAFD7FC", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005EC")]
	public class Dualshock : Gamepad
	{
		[Token(Token = "0x170003D2")]
		protected override InputValue ADown
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0xAF8FC4", Offset = "0xAF8FC4", VA = "0xAF8FC4", Slot = "5")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D3")]
		protected override InputValue ARight
		{
			[Token(Token = "0x6002632")]
			[Address(RVA = "0xAF9058", Offset = "0xAF9058", VA = "0xAF9058", Slot = "6")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D4")]
		protected override InputValue ALeft
		{
			[Token(Token = "0x6002633")]
			[Address(RVA = "0xAF90EC", Offset = "0xAF90EC", VA = "0xAF90EC", Slot = "7")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D5")]
		protected override InputValue AUp
		{
			[Token(Token = "0x6002634")]
			[Address(RVA = "0xAF9180", Offset = "0xAF9180", VA = "0xAF9180", Slot = "8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D6")]
		protected override InputValue LBumper
		{
			[Token(Token = "0x6002635")]
			[Address(RVA = "0xAF9214", Offset = "0xAF9214", VA = "0xAF9214", Slot = "9")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D7")]
		protected override InputValue RBumper
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0xAF92A8", Offset = "0xAF92A8", VA = "0xAF92A8", Slot = "10")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D8")]
		protected override InputValue LTrigger
		{
			[Token(Token = "0x6002637")]
			[Address(RVA = "0xAF933C", Offset = "0xAF933C", VA = "0xAF933C", Slot = "11")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003D9")]
		protected override InputValue RTrigger
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0xAF93CC", Offset = "0xAF93CC", VA = "0xAF93CC", Slot = "12")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DA")]
		protected override InputValue LClick
		{
			[Token(Token = "0x6002639")]
			[Address(RVA = "0xAF945C", Offset = "0xAF945C", VA = "0xAF945C", Slot = "13")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DB")]
		protected override InputValue RClick
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xAF94F0", Offset = "0xAF94F0", VA = "0xAF94F0", Slot = "14")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DC")]
		protected override InputValue LStick
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xAF9584", Offset = "0xAF9584", VA = "0xAF9584", Slot = "15")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DD")]
		protected override InputValue RStick
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xAF9648", Offset = "0xAF9648", VA = "0xAF9648", Slot = "16")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DE")]
		protected override InputValue DPad
		{
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xAF970C", Offset = "0xAF970C", VA = "0xAF970C", Slot = "17")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003DF")]
		private bool Touchpad
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0xAF97D0", Offset = "0xAF97D0", VA = "0xAF97D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E0")]
		private bool Options
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xAF983C", Offset = "0xAF983C", VA = "0xAF983C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xAF8510", Offset = "0xAF8510", VA = "0xAF8510")]
		public Dualshock(int i)
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xAF98A8", Offset = "0xAF98A8", VA = "0xAF98A8", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005ED")]
	public class Touch : JoystickInputSolver
	{
		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int left;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right;

		[Token(Token = "0x170003E1")]
		private InputValue A
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xAFB158", Offset = "0xAFB158", VA = "0xAFB158")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E2")]
		private InputValue B
		{
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xAFB1E8", Offset = "0xAFB1E8", VA = "0xAFB1E8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E3")]
		private InputValue X
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xAFB278", Offset = "0xAFB278", VA = "0xAFB278")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E4")]
		private InputValue Y
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xAFB308", Offset = "0xAFB308", VA = "0xAFB308")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E5")]
		private InputValue LTrigger
		{
			[Token(Token = "0x6002646")]
			[Address(RVA = "0xAFB398", Offset = "0xAFB398", VA = "0xAFB398")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E6")]
		private InputValue RTrigger
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0xAFB424", Offset = "0xAFB424", VA = "0xAFB424")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E7")]
		private InputValue LGrip
		{
			[Token(Token = "0x6002648")]
			[Address(RVA = "0xAFB4B0", Offset = "0xAFB4B0", VA = "0xAFB4B0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E8")]
		private InputValue RGrip
		{
			[Token(Token = "0x6002649")]
			[Address(RVA = "0xAFB53C", Offset = "0xAFB53C", VA = "0xAFB53C")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003E9")]
		private InputValue LClick
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0xAFB5C8", Offset = "0xAFB5C8", VA = "0xAFB5C8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003EA")]
		private InputValue RClick
		{
			[Token(Token = "0x600264B")]
			[Address(RVA = "0xAFB658", Offset = "0xAFB658", VA = "0xAFB658")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003EB")]
		private InputValue Menu
		{
			[Token(Token = "0x600264C")]
			[Address(RVA = "0xAFB6E8", Offset = "0xAFB6E8", VA = "0xAFB6E8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003EC")]
		private InputValue LStick
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0xAFB778", Offset = "0xAFB778", VA = "0xAFB778")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003ED")]
		private InputValue RStick
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0xAFB804", Offset = "0xAFB804", VA = "0xAFB804")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xAF8514", Offset = "0xAF8514", VA = "0xAF8514")]
		public Touch(int left, int right)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xAFB890", Offset = "0xAFB890", VA = "0xAFB890", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005EE")]
	public class Vive : JoystickInputSolver
	{
		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int left;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SteamVR_Action_Boolean jumpAccept_Action;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_Action_Boolean attackReturn_Action;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SteamVR_Action_Boolean leftTrigger_Action;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SteamVR_Action_Boolean rightTrigger_Action;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Action_Boolean leftGrip_Action;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Action_Boolean rightGrip_Action;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SteamVR_Action_Boolean recenter_Action;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Action_Boolean leftTrackpad_Action;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SteamVR_Action_Boolean rightTrackpad_Action;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SteamVR_Action_Boolean pause_Action;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SteamVR_Action_Vector2 movement_Action;

		[Token(Token = "0x4001E08")]
		private const float touchMultiplier = 1.5f;

		[Token(Token = "0x170003EE")]
		private InputValue JumpAccept
		{
			[Token(Token = "0x6002651")]
			[Address(RVA = "0xAFBC40", Offset = "0xAFBC40", VA = "0xAFBC40")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003EF")]
		private InputValue AttackReturn
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0xAFBC98", Offset = "0xAFBC98", VA = "0xAFBC98")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F0")]
		private InputValue LeftAction
		{
			[Token(Token = "0x6002653")]
			[Address(RVA = "0xAFBCF0", Offset = "0xAFBCF0", VA = "0xAFBCF0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F1")]
		private InputValue RightAction
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0xAFBD48", Offset = "0xAFBD48", VA = "0xAFBD48")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F2")]
		private InputValue LeftGrip
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0xAFBDA0", Offset = "0xAFBDA0", VA = "0xAFBDA0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F3")]
		private InputValue RightGrip
		{
			[Token(Token = "0x6002656")]
			[Address(RVA = "0xAFBDF8", Offset = "0xAFBDF8", VA = "0xAFBDF8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F4")]
		private InputValue Recenter
		{
			[Token(Token = "0x6002657")]
			[Address(RVA = "0xAFBE50", Offset = "0xAFBE50", VA = "0xAFBE50")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F5")]
		private InputValue LeftTrackpad
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xAFBEA8", Offset = "0xAFBEA8", VA = "0xAFBEA8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F6")]
		private InputValue RightTrackpad
		{
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xAFBF00", Offset = "0xAFBF00", VA = "0xAFBF00")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F7")]
		private InputValue Pause
		{
			[Token(Token = "0x600265A")]
			[Address(RVA = "0xAFBF58", Offset = "0xAFBF58", VA = "0xAFBF58")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003F8")]
		private InputValue Movement
		{
			[Token(Token = "0x600265B")]
			[Address(RVA = "0xAFBFB0", Offset = "0xAFBFB0", VA = "0xAFBFB0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xAF859C", Offset = "0xAF859C", VA = "0xAF859C")]
		public Vive(int left, int right)
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xAFC070", Offset = "0xAFC070", VA = "0xAFC070", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005EF")]
	public class Index : JoystickInputSolver
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int left;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SteamVR_Action_Boolean jumpAccept_Action;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_Action_Boolean attackReturn_Action;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SteamVR_Action_Boolean leftTrigger_Action;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SteamVR_Action_Boolean rightTrigger_Action;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Action_Boolean leftGrip_Action;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Action_Boolean rightGrip_Action;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SteamVR_Action_Boolean recenter_Action;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Action_Boolean pause_Action;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SteamVR_Action_Vector2 movement_Action;

		[Token(Token = "0x170003F9")]
		private InputValue JumpAccept
		{
			[Token(Token = "0x600265E")]
			[Address(RVA = "0xAFAAD8", Offset = "0xAFAAD8", VA = "0xAFAAD8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FA")]
		private InputValue AttackReturn
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0xAFAB30", Offset = "0xAFAB30", VA = "0xAFAB30")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FB")]
		private InputValue LeftAction
		{
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xAFAB88", Offset = "0xAFAB88", VA = "0xAFAB88")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FC")]
		private InputValue RightAction
		{
			[Token(Token = "0x6002661")]
			[Address(RVA = "0xAFABE0", Offset = "0xAFABE0", VA = "0xAFABE0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FD")]
		private InputValue LeftGrip
		{
			[Token(Token = "0x6002662")]
			[Address(RVA = "0xAFAC38", Offset = "0xAFAC38", VA = "0xAFAC38")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FE")]
		private InputValue RightGrip
		{
			[Token(Token = "0x6002663")]
			[Address(RVA = "0xAFAC90", Offset = "0xAFAC90", VA = "0xAFAC90")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x170003FF")]
		private InputValue Recenter
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0xAFACE8", Offset = "0xAFACE8", VA = "0xAFACE8")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000400")]
		private InputValue Pause
		{
			[Token(Token = "0x6002665")]
			[Address(RVA = "0xAFAD40", Offset = "0xAFAD40", VA = "0xAFAD40")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000401")]
		private InputValue Movement
		{
			[Token(Token = "0x6002666")]
			[Address(RVA = "0xAFAD98", Offset = "0xAFAD98", VA = "0xAFAD98")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xAF8864", Offset = "0xAF8864", VA = "0xAF8864")]
		public Index(int left, int right)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xAFADEC", Offset = "0xAFADEC", VA = "0xAFADEC", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x20005F0")]
	public class Wmr : JoystickInputSolver
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int left;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right;

		[Token(Token = "0x17000402")]
		private InputValue LMenu
		{
			[Token(Token = "0x6002669")]
			[Address(RVA = "0xAFC408", Offset = "0xAFC408", VA = "0xAFC408")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000403")]
		private InputValue RMenu
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0xAFC49C", Offset = "0xAFC49C", VA = "0xAFC49C")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000404")]
		private InputValue LTrigger
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0xAFC530", Offset = "0xAFC530", VA = "0xAFC530")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000405")]
		private InputValue RTrigger
		{
			[Token(Token = "0x600266C")]
			[Address(RVA = "0xAFC5C0", Offset = "0xAFC5C0", VA = "0xAFC5C0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000406")]
		private InputValue LGrip
		{
			[Token(Token = "0x600266D")]
			[Address(RVA = "0xAFC650", Offset = "0xAFC650", VA = "0xAFC650")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000407")]
		private InputValue RGrip
		{
			[Token(Token = "0x600266E")]
			[Address(RVA = "0xAFC6E4", Offset = "0xAFC6E4", VA = "0xAFC6E4")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000408")]
		private InputValue LPress
		{
			[Token(Token = "0x600266F")]
			[Address(RVA = "0xAFC778", Offset = "0xAFC778", VA = "0xAFC778")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x17000409")]
		private InputValue RPress
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0xAFC80C", Offset = "0xAFC80C", VA = "0xAFC80C")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x1700040A")]
		private InputValue LTouch
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0xAFC8A0", Offset = "0xAFC8A0", VA = "0xAFC8A0")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x1700040B")]
		private InputValue RTouch
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0xAFC964", Offset = "0xAFC964", VA = "0xAFC964")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x1700040C")]
		private InputValue LStick
		{
			[Token(Token = "0x6002673")]
			[Address(RVA = "0xAFCA28", Offset = "0xAFCA28", VA = "0xAFCA28")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x1700040D")]
		private InputValue RStick
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0xAFCAEC", Offset = "0xAFCAEC", VA = "0xAFCAEC")]
			get
			{
				return default(InputValue);
			}
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xAF8AD4", Offset = "0xAF8AD4", VA = "0xAF8AD4")]
		public Wmr(int left, int right)
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xAFCBB0", Offset = "0xAFCBB0", VA = "0xAFCBB0", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}
	}

	[Token(Token = "0x4000CAA")]
	private const int buttonCount = 20;

	[Token(Token = "0x4000CAB")]
	private const int axisCount = 28;

	[Token(Token = "0x4000CAC")]
	private const int joystickCount = 8;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[,] axisNames;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xAF8C1C", Offset = "0xAF8C1C", VA = "0xAF8C1C")]
	private static string[,] GenerateAxisNames()
	{
		return null;
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xAF8D74", Offset = "0xAF8D74", VA = "0xAF8D74")]
	protected static bool GetButton(int button, int joystick = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xAF8DC0", Offset = "0xAF8DC0", VA = "0xAF8DC0")]
	protected static float GetAxis(int axis, int joystick = -1)
	{
		return default(float);
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xAF8EE0", Offset = "0xAF8EE0", VA = "0xAF8EE0")]
	protected JoystickInputSolver()
	{
	}
}
[Token(Token = "0x20001F7")]
public class KeyboardInputFinder : InputFinder
{
	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xAFDB74", Offset = "0xAFDB74", VA = "0xAFDB74", Slot = "4")]
	public override void UpdateList()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xAFDBE0", Offset = "0xAFDBE0", VA = "0xAFDBE0")]
	public KeyboardInputFinder()
	{
	}
}
[Token(Token = "0x20001F8")]
public class KeyboardInputSolver : InputSolver
{
	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xAFDBE4", Offset = "0xAFDBE4", VA = "0xAFDBE4", Slot = "4")]
	public override void Solve(InputKeyPoll<Button> keyPoll)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xAFE2F0", Offset = "0xAFE2F0", VA = "0xAFE2F0")]
	private static bool KeyButton(KeyCode key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xAFE25C", Offset = "0xAFE25C", VA = "0xAFE25C")]
	private static bool KeyButton(params KeyCode[] keys)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xAFE330", Offset = "0xAFE330", VA = "0xAFE330")]
	private static Vector2 KeyAxis(KeyCode up, KeyCode down, KeyCode left, KeyCode right)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xAFE434", Offset = "0xAFE434", VA = "0xAFE434")]
	public KeyboardInputSolver()
	{
	}
}
[Token(Token = "0x20001F9")]
public class PicoNeo2InputFinder : InputFinder
{
	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xB8B7C8", Offset = "0xB8B7C8", VA = "0xB8B7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xB8B7D4", Offset = "0xB8B7D4", VA = "0xB8B7D4", Slot = "4")]
	public override void UpdateList()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xB8B8F8", Offset = "0xB8B8F8", VA = "0xB8B8F8")]
	public PicoNeo2InputFinder()
	{
	}
}
[Token(Token = "0x20001FA")]
public class PicoNeo2InputSolver : InputSolver
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int left;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int right;

	[Token(Token = "0x170000C5")]
	private InputValue A
	{
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xB8B900", Offset = "0xB8B900", VA = "0xB8B900")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000C6")]
	private InputValue B
	{
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xB8B928", Offset = "0xB8B928", VA = "0xB8B928")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000C7")]
	private InputValue X
	{
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB8B950", Offset = "0xB8B950", VA = "0xB8B950")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000C8")]
	private InputValue Y
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB8B978", Offset = "0xB8B978", VA = "0xB8B978")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000C9")]
	private InputValue LGrip
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xB8B9A0", Offset = "0xB8B9A0", VA = "0xB8B9A0")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CA")]
	private InputValue RGrip
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xB8B9C8", Offset = "0xB8B9C8", VA = "0xB8B9C8")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CB")]
	private InputValue LTrigger
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xB8B9F0", Offset = "0xB8B9F0", VA = "0xB8B9F0")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CC")]
	private InputValue RTrigger
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xB8BA18", Offset = "0xB8BA18", VA = "0xB8BA18")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CD")]
	private InputValue LClick
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xB8BA40", Offset = "0xB8BA40", VA = "0xB8BA40")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CE")]
	private InputValue RClick
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xB8BA68", Offset = "0xB8BA68", VA = "0xB8BA68")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000CF")]
	private InputValue MenuL
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xB8BA90", Offset = "0xB8BA90", VA = "0xB8BA90")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000D0")]
	private InputValue MenuR
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xB8BAB8", Offset = "0xB8BAB8", VA = "0xB8BAB8")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000D1")]
	private InputValue LStick
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB8BAE0", Offset = "0xB8BAE0", VA = "0xB8BAE0")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000D2")]
	private InputValue RStick
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xB8BB00", Offset = "0xB8BB00", VA = "0xB8BB00")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000D3")]
	private InputValue RecenterL
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xB8BB20", Offset = "0xB8BB20", VA = "0xB8BB20")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x170000D4")]
	private InputValue RecenterR
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xB8BB48", Offset = "0xB8BB48", VA = "0xB8BB48")]
		get
		{
			return default(InputValue);
		}
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xB8B8C0", Offset = "0xB8B8C0", VA = "0xB8B8C0")]
	public PicoNeo2InputSolver(int left, int right)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xB8BB70", Offset = "0xB8BB70", VA = "0xB8BB70", Slot = "4")]
	public override void Solve(InputKeyPoll<Button> keyPoll)
	{
	}
}
[Token(Token = "0x20001FB")]
public class PS4InputFinder : MonoBehaviour
{
	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xC3DFF4", Offset = "0xC3DFF4", VA = "0xC3DFF4")]
	public PS4InputFinder()
	{
	}
}
[Token(Token = "0x20001FC")]
public abstract class PS4InputSolver
{
	[Token(Token = "0x20005F1")]
	public class Dualshock : JoystickInputSolver.Gamepad
	{
		[Token(Token = "0x6002676")]
		[Address(RVA = "0xC3E004", Offset = "0xC3E004", VA = "0xC3E004")]
		public Dualshock(int i)
		{
		}
	}

	[Token(Token = "0x20005F2")]
	public class Move : InputSolver
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float multiplierX;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float multiplierY;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int lerp;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float gyroX;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float gyroY;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static Vector2 gyroCenter;

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xC3E00C", Offset = "0xC3E00C", VA = "0xC3E00C", Slot = "4")]
		public override void Solve(InputKeyPoll<Button> keyPoll)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xC3E010", Offset = "0xC3E010", VA = "0xC3E010")]
		public Move()
		{
		}
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xC3DFFC", Offset = "0xC3DFFC", VA = "0xC3DFFC")]
	protected PS4InputSolver()
	{
	}
}
[Token(Token = "0x20001FD")]
public enum HapticProfile
{
	[Token(Token = "0x4000CB1")]
	None,
	[Token(Token = "0x4000CB2")]
	PS4,
	[Token(Token = "0x4000CB3")]
	TouchNative,
	[Token(Token = "0x4000CB4")]
	Native,
	[Token(Token = "0x4000CB5")]
	PicoNeo2
}
[Token(Token = "0x20001FE")]
public static class HapticLinker
{
	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xAE0EC4", Offset = "0xAE0EC4", VA = "0xAE0EC4")]
	public static HapticProfile GetHapticProfileFromInputProfile(InputProfile profile)
	{
		return default(HapticProfile);
	}
}
[Token(Token = "0x20001FF")]
public class HapticManager : MonoBehaviour
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<HapticProfile, HapticSolver> solvers;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HapticSolver currentSolver;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xAE0F08", Offset = "0xAE0F08", VA = "0xAE0F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xAE1030", Offset = "0xAE1030", VA = "0xAE1030")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xAE10F4", Offset = "0xAE10F4", VA = "0xAE10F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xAE0F0C", Offset = "0xAE0F0C", VA = "0xAE0F0C")]
	private void MapSolvers()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xAE11A0", Offset = "0xAE11A0", VA = "0xAE11A0")]
	private void UpdateSolver(HapticProfile profile)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xADD4E8", Offset = "0xADD4E8", VA = "0xADD4E8")]
	public static void Vibrate(bool isLeftHand, float duration, float amplitude = 1f)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xAE12F4", Offset = "0xAE12F4", VA = "0xAE12F4")]
	public static void VibrateBoth(float duration, float amplitude = 1f)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xADD7C0", Offset = "0xADD7C0", VA = "0xADD7C0")]
	public static void StopVibrating(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xAE1378", Offset = "0xAE1378", VA = "0xAE1378")]
	public static void StopVibratingBoth()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xAE13E0", Offset = "0xAE13E0", VA = "0xAE13E0")]
	public HapticManager()
	{
	}
}
[Token(Token = "0x2000200")]
public abstract class HapticSolver : MonoBehaviour
{
	[Token(Token = "0x170000D5")]
	public abstract HapticProfile profile
	{
		[Token(Token = "0x6000BC7")]
		get;
	}

	[Token(Token = "0x6000BC8")]
	public abstract void Vibrate(bool isLeftHand, float duration, float amplitude);

	[Token(Token = "0x6000BC9")]
	public abstract void VibrateBoth(float duration, float amplitude);

	[Token(Token = "0x6000BCA")]
	public abstract void StopVibrating(bool isLeftHand);

	[Token(Token = "0x6000BCB")]
	public abstract void StopVibratingBoth();

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xAE145C", Offset = "0xAE145C", VA = "0xAE145C")]
	protected HapticSolver()
	{
	}
}
[Token(Token = "0x2000201")]
public class NativeHapticSolver : HapticSolver
{
	[Token(Token = "0x20005F3")]
	private struct Hand
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SteamVR_Input_Sources steamVR_Source;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.XR.InputDevice device;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool vibrating;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeRemaining;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;
	}

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hand leftHand;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Hand rightHand;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Action_Vibration vibrationAction;

	[Token(Token = "0x170000D6")]
	public override HapticProfile profile
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xA3A754", Offset = "0xA3A754", VA = "0xA3A754", Slot = "4")]
		get
		{
			return default(HapticProfile);
		}
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xA3A75C", Offset = "0xA3A75C", VA = "0xA3A75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xA3A770", Offset = "0xA3A770", VA = "0xA3A770", Slot = "5")]
	public override void Vibrate(bool isLeftHand, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xA3A834", Offset = "0xA3A834", VA = "0xA3A834", Slot = "6")]
	public override void VibrateBoth(float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA3A888", Offset = "0xA3A888", VA = "0xA3A888", Slot = "7")]
	public override void StopVibrating(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA3A920", Offset = "0xA3A920", VA = "0xA3A920", Slot = "8")]
	public override void StopVibratingBoth()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xA3A78C", Offset = "0xA3A78C", VA = "0xA3A78C")]
	private void Vibrate(ref Hand hand, XRNode node, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xA3A95C", Offset = "0xA3A95C", VA = "0xA3A95C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA3A988", Offset = "0xA3A988", VA = "0xA3A988")]
	private void UpdateHand(ref Hand hand)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA3A89C", Offset = "0xA3A89C", VA = "0xA3A89C")]
	private void Stop(ref Hand hand)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA3AAB8", Offset = "0xA3AAB8", VA = "0xA3AAB8")]
	public NativeHapticSolver()
	{
	}
}
[Token(Token = "0x2000202")]
public class PicoNeo2HapticSolver : HapticSolver
{
	[Token(Token = "0x170000D7")]
	public override HapticProfile profile
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xB8B634", Offset = "0xB8B634", VA = "0xB8B634", Slot = "4")]
		get
		{
			return default(HapticProfile);
		}
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xB8B63C", Offset = "0xB8B63C", VA = "0xB8B63C", Slot = "7")]
	public override void StopVibrating(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xB8B640", Offset = "0xB8B640", VA = "0xB8B640", Slot = "8")]
	public override void StopVibratingBoth()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xB8B644", Offset = "0xB8B644", VA = "0xB8B644", Slot = "5")]
	public override void Vibrate(bool isLeftHand, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xB8B6F4", Offset = "0xB8B6F4", VA = "0xB8B6F4", Slot = "6")]
	public override void VibrateBoth(float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xB8B7C0", Offset = "0xB8B7C0", VA = "0xB8B7C0")]
	public PicoNeo2HapticSolver()
	{
	}
}
[Token(Token = "0x2000203")]
public class PS4HapticSolver : HapticSolver
{
	[Token(Token = "0x170000D8")]
	public override HapticProfile profile
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC3DFD4", Offset = "0xC3DFD4", VA = "0xC3DFD4", Slot = "4")]
		get
		{
			return default(HapticProfile);
		}
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xC3DFDC", Offset = "0xC3DFDC", VA = "0xC3DFDC", Slot = "5")]
	public override void Vibrate(bool isLeftHand, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xC3DFE0", Offset = "0xC3DFE0", VA = "0xC3DFE0", Slot = "6")]
	public override void VibrateBoth(float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xC3DFE4", Offset = "0xC3DFE4", VA = "0xC3DFE4", Slot = "7")]
	public override void StopVibrating(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xC3DFE8", Offset = "0xC3DFE8", VA = "0xC3DFE8", Slot = "8")]
	public override void StopVibratingBoth()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xC3DFEC", Offset = "0xC3DFEC", VA = "0xC3DFEC")]
	public PS4HapticSolver()
	{
	}
}
[Token(Token = "0x2000204")]
public class TouchNativeHapticSolver : HapticSolver
{
	[Token(Token = "0x170000D9")]
	public override HapticProfile profile
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xA8BD94", Offset = "0xA8BD94", VA = "0xA8BD94", Slot = "4")]
		get
		{
			return default(HapticProfile);
		}
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xA8BD9C", Offset = "0xA8BD9C", VA = "0xA8BD9C", Slot = "5")]
	public override void Vibrate(bool isLeftHand, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xA8BE84", Offset = "0xA8BE84", VA = "0xA8BE84", Slot = "6")]
	public override void VibrateBoth(float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xA8BED8", Offset = "0xA8BED8", VA = "0xA8BED8", Slot = "7")]
	public override void StopVibrating(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xA8BF68", Offset = "0xA8BF68", VA = "0xA8BF68", Slot = "8")]
	public override void StopVibratingBoth()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xA8BDEC", Offset = "0xA8BDEC", VA = "0xA8BDEC")]
	private void Vibrate(XRNode node, float duration, float amplitude)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xA8BF08", Offset = "0xA8BF08", VA = "0xA8BF08")]
	private void Stop(XRNode node)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xA8BFA4", Offset = "0xA8BFA4", VA = "0xA8BFA4")]
	public TouchNativeHapticSolver()
	{
	}
}
[Token(Token = "0x2000205")]
public interface IKeyPoll<T>
{
	[Token(Token = "0x6000BEC")]
	bool Press(T key);

	[Token(Token = "0x6000BED")]
	bool Hold(T key);

	[Token(Token = "0x6000BEE")]
	bool Release(T key);

	[Token(Token = "0x6000BEF")]
	float Magnitude(T key);

	[Token(Token = "0x6000BF0")]
	Vector2 Normal(T key);

	[Token(Token = "0x6000BF1")]
	Vector2 Axis(T key);
}
[Token(Token = "0x2000206")]
public enum AxisButton
{
	[Token(Token = "0x4000CBC")]
	Up,
	[Token(Token = "0x4000CBD")]
	Down,
	[Token(Token = "0x4000CBE")]
	Left,
	[Token(Token = "0x4000CBF")]
	Right
}
[Token(Token = "0x2000207")]
public class InputAxis
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float activeDeadzone;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C28E0", Offset = "0x7C28E0")]
	private Vector2 <normal>k__BackingField;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C28F0", Offset = "0x7C28F0")]
	private float <magnitude>k__BackingField;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly InputKeyPoll<AxisButton> buttons;

	[Token(Token = "0x170000DA")]
	public Vector2 value
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xAF0EA0", Offset = "0xAF0EA0", VA = "0xAF0EA0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000DB")]
	public Vector2 normal
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xAF0F28", Offset = "0xAF0F28", VA = "0xAF0F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF590", Offset = "0x7CF590")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xAF0FF0", Offset = "0xAF0FF0", VA = "0xAF0FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5A0", Offset = "0x7CF5A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public float magnitude
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xAF0F30", Offset = "0xAF0F30", VA = "0xAF0F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5B0", Offset = "0x7CF5B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xAF0FF8", Offset = "0xAF0FF8", VA = "0xAF0FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5C0", Offset = "0x7CF5C0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xAF0F38", Offset = "0xAF0F38", VA = "0xAF0F38")]
	public static implicit operator Vector2(InputAxis a)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xAF0F60", Offset = "0xAF0F60", VA = "0xAF0F60")]
	public static implicit operator Vector3(InputAxis a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xAF1000", Offset = "0xAF1000", VA = "0xAF1000")]
	public bool Press(AxisButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xAF1070", Offset = "0xAF1070", VA = "0xAF1070")]
	public bool Hold(AxisButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xAF10E0", Offset = "0xAF10E0", VA = "0xAF10E0")]
	public bool Release(AxisButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xAEE3E0", Offset = "0xAEE3E0", VA = "0xAEE3E0")]
	public InputAxis(float activeDeadzone = 0.5f)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xAEE164", Offset = "0xAEE164", VA = "0xAEE164")]
	public void BeginUpdate()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xAEE1CC", Offset = "0xAEE1CC", VA = "0xAEE1CC")]
	public bool Set(Vector2 value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xAF1150", Offset = "0xAF1150", VA = "0xAF1150")]
	public bool Set(float x, float y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xAEE1D0", Offset = "0xAEE1D0", VA = "0xAEE1D0")]
	public void EndUpdate()
	{
	}
}
[Token(Token = "0x2000208")]
public enum InputProfile
{
	[Token(Token = "0x4000CC5")]
	None,
	[Token(Token = "0x4000CC6")]
	Keyboard,
	[Token(Token = "0x4000CC7")]
	Generic,
	[Token(Token = "0x4000CC8")]
	Xbox,
	[Token(Token = "0x4000CC9")]
	DualshockPC,
	[Token(Token = "0x4000CCA")]
	DualshockPS4,
	[Token(Token = "0x4000CCB")]
	Move,
	[Token(Token = "0x4000CCC")]
	Touch,
	[Token(Token = "0x4000CCD")]
	Vive,
	[Token(Token = "0x4000CCE")]
	Index,
	[Token(Token = "0x4000CCF")]
	Wmr,
	[Token(Token = "0x4000CD0")]
	PicoNeo2
}
[Token(Token = "0x2000209")]
public enum Button
{
	[Token(Token = "0x4000CD2")]
	Accept = 0,
	[Token(Token = "0x4000CD3")]
	Back = 1,
	[Token(Token = "0x4000CD4")]
	Jump = 2,
	[Token(Token = "0x4000CD5")]
	Fire = 3,
	[Token(Token = "0x4000CD6")]
	LeftGrip = 10,
	[Token(Token = "0x4000CD7")]
	RightGrip = 11,
	[Token(Token = "0x4000CD8")]
	LeftActionTrigger = 12,
	[Token(Token = "0x4000CD9")]
	RightActionTrigger = 13,
	[Token(Token = "0x4000CDA")]
	LeftActionFace = 14,
	[Token(Token = "0x4000CDB")]
	RightActionFace = 15,
	[Token(Token = "0x4000CDC")]
	Pause = 20,
	[Token(Token = "0x4000CDD")]
	PlayerSync = 21,
	[Token(Token = "0x4000CDE")]
	Recenter = 22,
	[Token(Token = "0x4000CDF")]
	Axis = 30,
	[Token(Token = "0x4000CE0")]
	Up = 31,
	[Token(Token = "0x4000CE1")]
	Down = 32,
	[Token(Token = "0x4000CE2")]
	Left = 33,
	[Token(Token = "0x4000CE3")]
	Right = 34
}
[Token(Token = "0x200020A")]
public static class InputDefinitions
{
	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xAF127C", Offset = "0xAF127C", VA = "0xAF127C")]
	public static int GetProfilePriority(InputProfile profile)
	{
		return default(int);
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xAF12A0", Offset = "0xAF12A0", VA = "0xAF12A0")]
	public static string GetProfileIconList(InputProfile profile)
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAF1374", Offset = "0xAF1374", VA = "0xAF1374")]
	public static InputProfile GetDefaultProfile()
	{
		return default(InputProfile);
	}
}
[Token(Token = "0x200020B")]
public class InputIconDisplaying : BaseInputDisplaying
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button button;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer[] sprites;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image[] images;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAF1568", Offset = "0xAF1568", VA = "0xAF1568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAF15F4", Offset = "0xAF15F4", VA = "0xAF15F4")]
	public void ChangeIcon(Button newButton)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAF1614", Offset = "0xAF1614", VA = "0xAF1614", Slot = "6")]
	protected override void UpdateValues()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAF19D4", Offset = "0xAF19D4", VA = "0xAF19D4")]
	public InputIconDisplaying()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BACE0", Offset = "0x7BACE0")]
public class InputIconList : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005F4")]
	public struct Entry
	{
		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button button;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite sprite;
	}

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Entry> entries;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Button, Sprite> spriteByButton;

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xAF19DC", Offset = "0xAF19DC", VA = "0xAF19DC")]
	public Sprite GetIcon(Button button)
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xAF1BCC", Offset = "0xAF1BCC", VA = "0xAF1BCC")]
	public InputIconList()
	{
	}
}
[Token(Token = "0x200020D")]
public class InputKeyPoll<T> : IKeyPoll<T>
{
	[Token(Token = "0x20005F5")]
	private struct AxisDirectionals
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T axis;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T up;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T down;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T left;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T right;
	}

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float activeDeadzone;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly List<AxisDirectionals> axisDirectionals;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> activeKeys;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private HashSet<T> previousKeys;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<T, float> magnitudes;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<T, Vector2> normals;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool setFlag;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool setSilently;

	[Token(Token = "0x6000C0A")]
	public bool Press(T key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0B")]
	public bool Hold(T key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0C")]
	public bool Release(T key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0D")]
	public float Magnitude(T key)
	{
		return default(float);
	}

	[Token(Token = "0x6000C0E")]
	public Vector2 Normal(T key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C0F")]
	public Vector2 Axis(T key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C10")]
	public void AddAxisDirectionals(T axis, T up, T down, T left, T right)
	{
	}

	[Token(Token = "0x6000C11")]
	public void BeginUpdate()
	{
	}

	[Token(Token = "0x6000C12")]
	public void EndUpdate()
	{
	}

	[Token(Token = "0x6000C13")]
	public void FlipFrame()
	{
	}

	[Token(Token = "0x6000C14")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C15")]
	public void AssignAxisKeys()
	{
	}

	[Token(Token = "0x6000C16")]
	public bool Set(T key, bool active)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C17")]
	public bool Set(T key, float magnitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C18")]
	public bool Set(T key, Vector2 axis)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C19")]
	public bool Set(T key, InputValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1A")]
	public bool Set(T key, float magnitude, Vector2 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1B")]
	public bool Set(T key, IKeyPoll<T> keyPoll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1C")]
	public bool Set(T key, IKeyPoll<T> keyPoll, T otherKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1D")]
	public InputKeyPoll()
	{
	}
}
[Token(Token = "0x200020E")]
public struct InputDevice
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InputProfile profile;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public InputSolver solver;
}
[Token(Token = "0x200020F")]
public class InputManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCEF4", Offset = "0x7BCEF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<InputDevice> <>9__35_0;

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xAF3044", Offset = "0xAF3044", VA = "0xAF3044")]
		public <>c()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xAF304C", Offset = "0xAF304C", VA = "0xAF304C")]
		internal int <UpdateDeviceList>b__35_0(InputDevice y, InputDevice x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputIconList[] iconLists;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject iconPrefab;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputFinder[] finders;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, InputIconList> iconListByName;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly List<InputDevice> allDevices;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2910", Offset = "0x7C2910")]
	private static InputDevice <device>k__BackingField;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2920", Offset = "0x7C2920")]
	private static InputIconList <iconList>k__BackingField;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly InputKeyPoll<Button> keyPoll;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2940", Offset = "0x7C2940")]
	private static ObjectPoolStandalone<Image> <inputIconPool>k__BackingField;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool hasInputFocus;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private static bool initialized;

	[Token(Token = "0x170000DD")]
	public static InputDevice device
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xAF1460", Offset = "0xAF1460", VA = "0xAF1460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5D0", Offset = "0x7CF5D0")]
		get
		{
			return default(InputDevice);
		}
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xAF1BD4", Offset = "0xAF1BD4", VA = "0xAF1BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5E0", Offset = "0x7CF5E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public static InputProfile profile
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xAF1C54", Offset = "0xAF1C54", VA = "0xAF1C54")]
		get
		{
			return default(InputProfile);
		}
	}

	[Token(Token = "0x170000DF")]
	public static InputIconList iconList
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xAF1CB4", Offset = "0xAF1CB4", VA = "0xAF1CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5F0", Offset = "0x7CF5F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xAF1D1C", Offset = "0xAF1D1C", VA = "0xAF1D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF600", Offset = "0x7CF600")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public static ObjectPoolStandalone<Image> inputIconPool
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xAF2230", Offset = "0xAF2230", VA = "0xAF2230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF630", Offset = "0x7CF630")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xAF2298", Offset = "0xAF2298", VA = "0xAF2298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF640", Offset = "0x7CF640")]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event Action<InputProfile> onProfileUpdate
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xAF1D8C", Offset = "0xAF1D8C", VA = "0xAF1D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF610", Offset = "0x7CF610")]
		add
		{
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xAF1E80", Offset = "0xAF1E80", VA = "0xAF1E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF620", Offset = "0x7CF620")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xAEEB84", Offset = "0xAEEB84", VA = "0xAEEB84")]
	public static bool Press(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xAF1F74", Offset = "0xAF1F74", VA = "0xAF1F74")]
	public static bool Hold(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xAF2000", Offset = "0xAF2000", VA = "0xAF2000")]
	public static bool Release(Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xAF208C", Offset = "0xAF208C", VA = "0xAF208C")]
	public static float Magnitude(Button button)
	{
		return default(float);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xAF2118", Offset = "0xAF2118", VA = "0xAF2118")]
	public static Vector2 Normal(Button button)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xAF21A4", Offset = "0xAF21A4", VA = "0xAF21A4")]
	public static Vector2 Axis(Button button)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xAF195C", Offset = "0xAF195C", VA = "0xAF195C")]
	public static Sprite GetIcon(Button button)
	{
		return null;
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xAF2308", Offset = "0xAF2308", VA = "0xAF2308")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xAF2B48", Offset = "0xAF2B48", VA = "0xAF2B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xAF2A00", Offset = "0xAF2A00", VA = "0xAF2A00")]
	private void UpdateProfile()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xAF2680", Offset = "0xAF2680", VA = "0xAF2680")]
	private void UpdateDeviceList(bool force)
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xAF2C88", Offset = "0xAF2C88", VA = "0xAF2C88")]
	private static void SolveDevices()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xAF2ED0", Offset = "0xAF2ED0", VA = "0xAF2ED0")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000210")]
public class InputObjectDisplaying : BaseInputDisplaying
{
	[Token(Token = "0x20005F7")]
	public struct InputObject
	{
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HashSet<InputProfile> profiles;
	}

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputObject[] objects;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] nameSplit;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xAF3728", Offset = "0xAF3728", VA = "0xAF3728")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xAF3D70", Offset = "0xAF3D70", VA = "0xAF3D70", Slot = "6")]
	protected override void UpdateValues()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xAF375C", Offset = "0xAF375C", VA = "0xAF375C")]
	public InputObject[] GetProfileObjects(bool warnAboutMissingPrefabs = true)
	{
		return null;
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xAF3ED8", Offset = "0xAF3ED8", VA = "0xAF3ED8")]
	public InputObjectDisplaying()
	{
	}
}
[Token(Token = "0x2000211")]
public struct InputValue
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float magnitude;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector2 normal;

	[Token(Token = "0x170000E1")]
	public bool active
	{
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x86253C", Offset = "0x86253C", VA = "0x86253C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x862550", Offset = "0x862550", VA = "0x862550")]
	public InputValue(bool active)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x86255C", Offset = "0x86255C", VA = "0x86255C")]
	public InputValue(float magnitude)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x862564", Offset = "0x862564", VA = "0x862564")]
	public InputValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xAF42A0", Offset = "0xAF42A0", VA = "0xAF42A0")]
	public static InputValue And(InputValue a, InputValue b)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xAF439C", Offset = "0xAF439C", VA = "0xAF439C")]
	public static InputValue Or(InputValue a, InputValue b)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xAF4498", Offset = "0xAF4498", VA = "0xAF4498")]
	public static implicit operator InputValue(bool active)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xAF44CC", Offset = "0xAF44CC", VA = "0xAF44CC")]
	public static implicit operator InputValue(float magnitude)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xAF3FF0", Offset = "0xAF3FF0", VA = "0xAF3FF0")]
	public static implicit operator InputValue(Vector2 axis)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xAF44FC", Offset = "0xAF44FC", VA = "0xAF44FC")]
	public static implicit operator bool(InputValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xAF450C", Offset = "0xAF450C", VA = "0xAF450C")]
	public static implicit operator float(InputValue value)
	{
		return default(float);
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xAF4510", Offset = "0xAF4510", VA = "0xAF4510")]
	public static implicit operator Vector2(InputValue value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xAF4598", Offset = "0xAF4598", VA = "0xAF4598")]
	public static InputValue operator &(InputValue a, InputValue b)
	{
		return default(InputValue);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xAF459C", Offset = "0xAF459C", VA = "0xAF459C")]
	public static InputValue operator |(InputValue a, InputValue b)
	{
		return default(InputValue);
	}
}
[Token(Token = "0x2000212")]
public class OVRInputUpdate : MonoBehaviour
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool shouldUpdate;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xA3D4BC", Offset = "0xA3D4BC", VA = "0xA3D4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xA3D5A8", Offset = "0xA3D5A8", VA = "0xA3D5A8")]
	public static void EnableUpdate(bool enable = true)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xA3D600", Offset = "0xA3D600", VA = "0xA3D600")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xA3D684", Offset = "0xA3D684", VA = "0xA3D684")]
	public OVRInputUpdate()
	{
	}
}
[Token(Token = "0x2000213")]
public class GenericHandTrackingSolver : TrackingSolver
{
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRNodeState> states;

	[Token(Token = "0x170000E2")]
	public override TrackingProfile profile
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xAD636C", Offset = "0xAD636C", VA = "0xAD636C", Slot = "4")]
		get
		{
			return default(TrackingProfile);
		}
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xAD6374", Offset = "0xAD6374", VA = "0xAD6374", Slot = "5")]
	public override TrackingResult Solve()
	{
		return default(TrackingResult);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xAD63D8", Offset = "0xAD63D8", VA = "0xAD63D8")]
	public static TrackingResult SolveNodes()
	{
		return default(TrackingResult);
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xAD66AC", Offset = "0xAD66AC", VA = "0xAD66AC")]
	public static TrackingInfo SolveForNode(XRNodeState state)
	{
		return default(TrackingInfo);
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xAD67A8", Offset = "0xAD67A8", VA = "0xAD67A8")]
	public GenericHandTrackingSolver()
	{
	}
}
[Token(Token = "0x2000214")]
public class PicoNeo2TrackingSolver : TrackingSolver
{
	[Token(Token = "0x170000E3")]
	public override TrackingProfile profile
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xB8BF7C", Offset = "0xB8BF7C", VA = "0xB8BF7C", Slot = "4")]
		get
		{
			return default(TrackingProfile);
		}
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xB8BF84", Offset = "0xB8BF84", VA = "0xB8BF84", Slot = "5")]
	public override TrackingResult Solve()
	{
		return default(TrackingResult);
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xB8BF88", Offset = "0xB8BF88", VA = "0xB8BF88")]
	public static TrackingResult SolveNodes()
	{
		return default(TrackingResult);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xB8C024", Offset = "0xB8C024", VA = "0xB8C024")]
	public static TrackingInfo SolveForHand(int handIndex)
	{
		return default(TrackingInfo);
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xB8C0A4", Offset = "0xB8C0A4", VA = "0xB8C0A4")]
	public PicoNeo2TrackingSolver()
	{
	}
}
[Token(Token = "0x2000215")]
public class PS4TrackingSolver : TrackingSolver
{
	[Token(Token = "0x170000E4")]
	public override TrackingProfile profile
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xC3EA1C", Offset = "0xC3EA1C", VA = "0xC3EA1C", Slot = "4")]
		get
		{
			return default(TrackingProfile);
		}
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xC3EA24", Offset = "0xC3EA24", VA = "0xC3EA24", Slot = "5")]
	public override TrackingResult Solve()
	{
		return default(TrackingResult);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xC3EA44", Offset = "0xC3EA44", VA = "0xC3EA44")]
	public PS4TrackingSolver()
	{
	}
}
[Token(Token = "0x2000216")]
public class TrackedObject : MonoBehaviour
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackerType type;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xA8BFAC", Offset = "0xA8BFAC", VA = "0xA8BFAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xA8C130", Offset = "0xA8C130", VA = "0xA8C130")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xA8C2B4", Offset = "0xA8C2B4", VA = "0xA8C2B4")]
	private void UpdateTrackingPosition()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xA8C5C0", Offset = "0xA8C5C0", VA = "0xA8C5C0")]
	public TrackedObject()
	{
	}
}
[Token(Token = "0x2000217")]
public enum TrackerType
{
	[Token(Token = "0x4000D07")]
	Controller,
	[Token(Token = "0x4000D08")]
	LeftHand,
	[Token(Token = "0x4000D09")]
	RightHand
}
[Token(Token = "0x2000218")]
public struct TrackingInfo
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool positionTracked;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 position;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool rotationTracked;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quaternion rotation;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool hasValue;
}
[Token(Token = "0x2000219")]
public enum TrackingProfile
{
	[Token(Token = "0x4000D10")]
	None,
	[Token(Token = "0x4000D11")]
	PS4,
	[Token(Token = "0x4000D12")]
	GenericHand,
	[Token(Token = "0x4000D13")]
	PicoNeo2
}
[Token(Token = "0x200021A")]
public static class TrackingLinker
{
	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xA8D1E8", Offset = "0xA8D1E8", VA = "0xA8D1E8")]
	public static TrackingProfile GetTrackingProfileFromInputProfile(InputProfile profile)
	{
		return default(TrackingProfile);
	}
}
[Token(Token = "0x200021B")]
public enum TrackingMode
{
	[Token(Token = "0x4000D15")]
	None,
	[Token(Token = "0x4000D16")]
	Controller,
	[Token(Token = "0x4000D17")]
	Hands
}
[Token(Token = "0x200021C")]
public class TrackingManager : MonoBehaviour
{
	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackingOffsets offsets;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<TrackingProfile, TrackingSolver> solvers;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrackingSolver currentSolver;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TrackingProfile profile;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2950", Offset = "0x7C2950")]
	private static TrackingMode <mode>k__BackingField;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2960", Offset = "0x7C2960")]
	private static TrackingInfo <controller>k__BackingField;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2970", Offset = "0x7C2970")]
	private static TrackingInfo <leftHand>k__BackingField;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2980", Offset = "0x7C2980")]
	private static TrackingInfo <rightHand>k__BackingField;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static bool disableDualshockTracking;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static bool hasFocus;

	[Token(Token = "0x170000E5")]
	public static TrackingMode mode
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xA8D298", Offset = "0xA8D298", VA = "0xA8D298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF650", Offset = "0x7CF650")]
		get
		{
			return default(TrackingMode);
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xA8D300", Offset = "0xA8D300", VA = "0xA8D300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF660", Offset = "0x7CF660")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public static int trackerCount
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xA8D36C", Offset = "0xA8D36C", VA = "0xA8D36C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E7")]
	public static TrackingInfo controller
	{
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xA8C440", Offset = "0xA8C440", VA = "0xA8C440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF670", Offset = "0x7CF670")]
		get
		{
			return default(TrackingInfo);
		}
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xA8D3C8", Offset = "0xA8D3C8", VA = "0xA8D3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF680", Offset = "0x7CF680")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public static TrackingInfo leftHand
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xA8C4C0", Offset = "0xA8C4C0", VA = "0xA8C4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF690", Offset = "0x7CF690")]
		get
		{
			return default(TrackingInfo);
		}
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xA8D468", Offset = "0xA8D468", VA = "0xA8D468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6A0", Offset = "0x7CF6A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public static TrackingInfo rightHand
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xA8C540", Offset = "0xA8C540", VA = "0xA8C540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6B0", Offset = "0x7CF6B0")]
		get
		{
			return default(TrackingInfo);
		}
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xA8D508", Offset = "0xA8D508", VA = "0xA8D508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6C0", Offset = "0x7CF6C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public static bool isStable
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xA8D5A8", Offset = "0xA8D5A8", VA = "0xA8D5A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000008")]
	public static event Action onTrackingUpdate
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xA8C03C", Offset = "0xA8C03C", VA = "0xA8C03C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6D0", Offset = "0x7CF6D0")]
		add
		{
		}
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xA8C1C0", Offset = "0xA8C1C0", VA = "0xA8C1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6E0", Offset = "0x7CF6E0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xA8D6C4", Offset = "0xA8D6C4", VA = "0xA8D6C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xA8D8D0", Offset = "0xA8D8D0", VA = "0xA8D8D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xA8DB70", Offset = "0xA8DB70", VA = "0xA8DB70")]
	private void UpdateTrackingInfo()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xA8E6C8", Offset = "0xA8E6C8", VA = "0xA8E6C8")]
	private static TrackingInfo AddTrackingInfo(TrackingInfo original, TrackingInfo info)
	{
		return default(TrackingInfo);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xA8E748", Offset = "0xA8E748", VA = "0xA8E748")]
	private static TrackingInfo ResetTrackingInfo(TrackingInfo info)
	{
		return default(TrackingInfo);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xA8D6E8", Offset = "0xA8D6E8", VA = "0xA8D6E8")]
	private void MapSolvers()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xA8D80C", Offset = "0xA8D80C", VA = "0xA8D80C")]
	private void FindSolver()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xA8D9BC", Offset = "0xA8D9BC", VA = "0xA8D9BC")]
	private void UpdateSolver()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xA8E9E8", Offset = "0xA8E9E8", VA = "0xA8E9E8")]
	public TrackingManager()
	{
	}
}
[Token(Token = "0x200021D")]
public class TrackingOffsets : MonoBehaviour
{
	[Token(Token = "0x20005F8")]
	public struct Offsets
	{
		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x861AE4", Offset = "0x861AE4", VA = "0x861AE4")]
		public TrackingInfo Apply(TrackingInfo info)
		{
			return default(TrackingInfo);
		}
	}

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<InputProfile, Transform> transforms;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xA8EAC4", Offset = "0xA8EAC4", VA = "0xA8EAC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xA8EACC", Offset = "0xA8EACC", VA = "0xA8EACC")]
	public void MapOffsets(Dictionary<InputProfile, Transform> transforms)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xA8E770", Offset = "0xA8E770", VA = "0xA8E770")]
	public bool TryGetOffsets(InputProfile profile, out Offsets value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xA8E96C", Offset = "0xA8E96C", VA = "0xA8E96C")]
	public bool TryGetOffsets(InputProfile profile, out Offsets left, out Offsets right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xA8EC20", Offset = "0xA8EC20", VA = "0xA8EC20")]
	public Offsets GetOffsets(Transform t)
	{
		return default(Offsets);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xA8EC9C", Offset = "0xA8EC9C", VA = "0xA8EC9C")]
	public Offsets FlipOffsets(Offsets value)
	{
		return default(Offsets);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xA8ECF4", Offset = "0xA8ECF4", VA = "0xA8ECF4")]
	public TrackingOffsets()
	{
	}
}
[Token(Token = "0x200021E")]
public abstract class TrackingSolver : MonoBehaviour
{
	[Token(Token = "0x170000EB")]
	public abstract TrackingProfile profile
	{
		[Token(Token = "0x6000C7C")]
		get;
	}

	[Token(Token = "0x6000C7D")]
	public abstract TrackingResult Solve();

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xA8ED70", Offset = "0xA8ED70", VA = "0xA8ED70", Slot = "6")]
	public virtual void BeginTracking()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xA8ED74", Offset = "0xA8ED74", VA = "0xA8ED74", Slot = "7")]
	public virtual void EndTracking()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xA8ED78", Offset = "0xA8ED78", VA = "0xA8ED78")]
	protected TrackingSolver()
	{
	}
}
[Token(Token = "0x200021F")]
public struct TrackingResult
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TrackingMode mode;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public TrackingInfo controller;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TrackingInfo leftHand;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TrackingInfo rightHand;
}
[Token(Token = "0x2000220")]
public class CollidingEffect : MonoBehaviour
{
	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string fmodEvent;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float cooldownTempo;

	[Token(Token = "0x4000D2A")]
	private const float cooldownDuration = 0.2f;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool canPlayEvent;

	[Token(Token = "0x4000D2D")]
	private const float moveTolerance = 0.01f;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xBEB970", Offset = "0xBEB970", VA = "0xBEB970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xBEB9D4", Offset = "0xBEB9D4", VA = "0xBEB9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xBEBA24", Offset = "0xBEBA24", VA = "0xBEBA24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xBEBB74", Offset = "0xBEBB74", VA = "0xBEBB74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xBEBE40", Offset = "0xBEBE40", VA = "0xBEBE40")]
	public CollidingEffect()
	{
	}
}
[Token(Token = "0x2000221")]
public class Droppable : MonoBehaviour
{
	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startDropping;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useRigidBody;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool disableMesh;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject disableObject;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float force;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody[] childrenRB;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] childrenOriginalPos;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] ChildrenOriginalRot;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MeshRenderer> childrenMesh;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fallType;

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xB539B8", Offset = "0xB539B8", VA = "0xB539B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xB47CB4", Offset = "0xB47CB4", VA = "0xB47CB4")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xB53DFC", Offset = "0xB53DFC", VA = "0xB53DFC")]
	private void DropStart()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xB476C0", Offset = "0xB476C0", VA = "0xB476C0")]
	public void Drop(Vector3 direction)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xB53EB8", Offset = "0xB53EB8", VA = "0xB53EB8")]
	public Droppable()
	{
	}
}
[Token(Token = "0x2000222")]
public class DebugHandsController : MonoBehaviour
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandsController handsController;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Interactable[] fixedInteractables;

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xBF30EC", Offset = "0xBF30EC", VA = "0xBF30EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xBF31B0", Offset = "0xBF31B0", VA = "0xBF31B0")]
	public DebugHandsController()
	{
	}
}
[Token(Token = "0x2000223")]
public static class HandHeuristics
{
	[Token(Token = "0x20005F9")]
	public struct HandsResult
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 leftPosition;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion leftRotation;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 rightPosition;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion rightRotation;
	}

	[Token(Token = "0x20005FA")]
	public struct FoundInteractable
	{
		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Interactable interactable;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool insideCollider;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float score;
	}

	[StructLayout(3)]
	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF04", Offset = "0x7BCF04")]
	private struct <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float posX;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float posY;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rotZ;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform head;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion headYaw;
	}

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 restPosition;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Quaternion restRotation;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly Vector3 wavePosition;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Quaternion waveRotation;

	[Token(Token = "0x4000D40")]
	private const float restHeight = -0.5f;

	[Token(Token = "0x4000D41")]
	private const float waveWidth = -0.1f;

	[Token(Token = "0x4000D42")]
	private const float waveHeight = -0.15f;

	[Token(Token = "0x4000D43")]
	private const float horizontalFade = 0.4f;

	[Token(Token = "0x4000D44")]
	private const float movementMultiplier = 0.75f;

	[Token(Token = "0x4000D45")]
	private const float joinDistance = 1f;

	[Token(Token = "0x4000D46")]
	private const float separateDistance = 1.75f;

	[Token(Token = "0x4000D47")]
	private const float joinDot = 0.5f;

	[Token(Token = "0x4000D48")]
	private const float separateDot = 0.05f;

	[Token(Token = "0x4000D49")]
	private const float headHandDotMax = 0.65f;

	[Token(Token = "0x4000D4A")]
	private const float headHandDotMin = 0.45f;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Vector2 gazeBoxSize;

	[Token(Token = "0x4000D4C")]
	private const float gazeDistance = 1f;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xADA150", Offset = "0xADA150", VA = "0xADA150")]
	public static HandsResult EstimateNaturalHands(Transform obj)
	{
		return default(HandsResult);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xADA9C0", Offset = "0xADA9C0", VA = "0xADA9C0")]
	public static HandsResult GetFittingHands(Transform obj, Interactable interactable)
	{
		return default(HandsResult);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xADACA8", Offset = "0xADACA8", VA = "0xADACA8")]
	public static bool IsItWorthTestingInteractableInRange()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xADACB0", Offset = "0xADACB0", VA = "0xADACB0")]
	public static bool IsInteractableInRange(Interactable interactable, bool isHolding)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xADB27C", Offset = "0xADB27C", VA = "0xADB27C")]
	public static Handedness DecideRestingHand()
	{
		return default(Handedness);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xADB3A8", Offset = "0xADB3A8", VA = "0xADB3A8")]
	private static float GetHandLeavingScore(Transform hand, VelocityInfo velocity)
	{
		return default(float);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xADB4C0", Offset = "0xADB4C0", VA = "0xADB4C0")]
	public static void AddGazingInteractables(List<FoundInteractable> list)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xADB8B4", Offset = "0xADB8B4", VA = "0xADB8B4")]
	public static void AddCollidingInteractable(List<FoundInteractable> list, HandInteraction hand, Collider collider)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xADA5D4", Offset = "0xADA5D4", VA = "0xADA5D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF6F0", Offset = "0x7CF6F0")]
	internal static void <EstimateNaturalHands>g__SetHand|17_0(float t, bool flip, out Vector3 position, out Quaternion rotation, ref <>c__DisplayClass17_0 P_4)
	{
	}
}
[Token(Token = "0x2000224")]
public class HandInteraction : MonoBehaviour
{
	[Token(Token = "0x20005FC")]
	public enum AnimationMode
	{
		[Token(Token = "0x4001E3B")]
		None,
		[Token(Token = "0x4001E3C")]
		Grip,
		[Token(Token = "0x4001E3D")]
		Ready
	}

	[Serializable]
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF14", Offset = "0x7BCF14")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HandHeuristics.FoundInteractable> <>9__57_0;

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xADDA5C", Offset = "0xADDA5C", VA = "0xADDA5C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xADDA64", Offset = "0xADDA64", VA = "0xADDA64")]
		internal int <Update>b__57_0(HandHeuristics.FoundInteractable y, HandHeuristics.FoundInteractable x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF24", Offset = "0x7BCF24")]
	private sealed class <VibrationTimer>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandInteraction <>4__this;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x1700040E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0xADDB80", Offset = "0xADDB80", VA = "0xADDB80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0xADDBF0", Offset = "0xADDBF0", VA = "0xADDBF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xADD940", Offset = "0xADD940", VA = "0xADD940")]
		[DebuggerHidden]
		public <VibrationTimer>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xADDA98", Offset = "0xADDA98", VA = "0xADDA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xADDA9C", Offset = "0xADDA9C", VA = "0xADDA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xADDB88", Offset = "0xADDB88", VA = "0xADDB88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C29B0", Offset = "0x7C29B0")]
	public Handedness handedness;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C29E8", Offset = "0x7C29E8")]
	public Transform handPoint;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform elbowPoint;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2A20", Offset = "0x7C2A20")]
	public Collider sensorNormal;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider sensorJoint;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2A58", Offset = "0x7C2A58")]
	private Interactable <activeObject>k__BackingField;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform grabReference;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2A68", Offset = "0x7C2A68")]
	private bool <wantsToGrab>k__BackingField;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2A78", Offset = "0x7C2A78")]
	private Interactable <potentialObject>k__BackingField;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Interactable fallbackObject;

	[NonSerialized]
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HandGrabMode grabMode;

	[NonSerialized]
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public AnimationMode animationMode;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly List<HandHeuristics.FoundInteractable> foundInteractables;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool foundInteractablesNeedSorting;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Button gripButton;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Button actionTriggerButton;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Button actionFaceButton;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool grabCancelled;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float throwCooldown;

	[Token(Token = "0x4000D60")]
	private const float throwCooldownDuration = 0.5f;

	[Token(Token = "0x4000D61")]
	private const float throwVelocity = 3f;

	[Token(Token = "0x4000D62")]
	private const float grabHapticDuration = 0.1f;

	[Token(Token = "0x4000D63")]
	private const float grabHapticAmplitude = 2f;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float emptyHandVibrationFrequency;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isVibrating;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform handPointTarget;

	[Token(Token = "0x4000D67")]
	private const float handPointSmoothness = 0.1f;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float handPointSmoothnessFactor;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform handPointTargetPrevious;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 handPointStartPosition;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion handPointStartRotation;

	[Token(Token = "0x170000EC")]
	public Interactable activeObject
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xADBC8C", Offset = "0xADBC8C", VA = "0xADBC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF700", Offset = "0x7CF700")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xADBC94", Offset = "0xADBC94", VA = "0xADBC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF710", Offset = "0x7CF710")]
		private set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public Transform activePivot
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xADBC9C", Offset = "0xADBC9C", VA = "0xADBC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	public Vector3 grabPos
	{
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xADBCD4", Offset = "0xADBCD4", VA = "0xADBCD4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000EF")]
	public Quaternion grabRot
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xADBD70", Offset = "0xADBD70", VA = "0xADBD70")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000F0")]
	public bool wantsToGrab
	{
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xADBE0C", Offset = "0xADBE0C", VA = "0xADBE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF720", Offset = "0x7CF720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xADBE14", Offset = "0xADBE14", VA = "0xADBE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF730", Offset = "0x7CF730")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public Interactable potentialObject
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xADBE20", Offset = "0xADBE20", VA = "0xADBE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF740", Offset = "0x7CF740")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xADBE28", Offset = "0xADBE28", VA = "0xADBE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF750", Offset = "0x7CF750")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public bool gripHold
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xADBE30", Offset = "0xADBE30", VA = "0xADBE30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F3")]
	public bool gripPress
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xADBE9C", Offset = "0xADBE9C", VA = "0xADBE9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F4")]
	private bool actionPress
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xADBF08", Offset = "0xADBF08", VA = "0xADBF08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F5")]
	private bool actionRelease
	{
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xADBFBC", Offset = "0xADBFBC", VA = "0xADBFBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xADC070", Offset = "0xADC070", VA = "0xADC070")]
	public void SetGrab(Transform point)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xADC078", Offset = "0xADC078", VA = "0xADC078")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xADC0A4", Offset = "0xADC0A4", VA = "0xADC0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xADCA34", Offset = "0xADCA34", VA = "0xADCA34")]
	public void UpdateHandPointInterpolation(Vector3 elbowOffset)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xADC784", Offset = "0xADC784", VA = "0xADC784")]
	private bool GetExpectedGrab(out Interactable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xADD100", Offset = "0xADD100", VA = "0xADD100")]
	private bool CanBeIndependentlyGrabbed(Interactable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xADD2B4", Offset = "0xADD2B4", VA = "0xADD2B4")]
	public bool TouchingFixed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xADD158", Offset = "0xADD158", VA = "0xADD158")]
	private Interactable GetNearestGrabbableInteractable()
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xADD380", Offset = "0xADD380", VA = "0xADD380")]
	public void ShouldGrabObject(Interactable obj)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xADC41C", Offset = "0xADC41C", VA = "0xADC41C")]
	public void ShouldReleaseObject([Optional] Vector3 velocity, [Optional] Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xADD574", Offset = "0xADD574", VA = "0xADD574")]
	public void CancelGrab()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xADD5A0", Offset = "0xADD5A0", VA = "0xADD5A0")]
	public void ResetHandPointTarget()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xADD5AC", Offset = "0xADD5AC", VA = "0xADD5AC")]
	public void SetHandPointTarget(Transform target)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xADD5B4", Offset = "0xADD5B4", VA = "0xADD5B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xADD68C", Offset = "0xADD68C", VA = "0xADD68C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xADD754", Offset = "0xADD754", VA = "0xADD754")]
	public void StopVibrate()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xADD830", Offset = "0xADD830", VA = "0xADD830")]
	public void Vibrate(float duration = 0.1f, float amplitude = 2f)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xADD890", Offset = "0xADD890", VA = "0xADD890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF760", Offset = "0x7CF760")]
	private IEnumerator VibrationTimer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xADD888", Offset = "0xADD888", VA = "0xADD888")]
	private bool CurrentlyVibrating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xADD96C", Offset = "0xADD96C", VA = "0xADD96C")]
	public HandInteraction()
	{
	}
}
[Token(Token = "0x2000225")]
public enum Handedness
{
	[Token(Token = "0x4000D6D")]
	Left,
	[Token(Token = "0x4000D6E")]
	Right
}
[Token(Token = "0x2000226")]
public static class HandednessExtensions
{
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xADDBF8", Offset = "0xADDBF8", VA = "0xADDBF8")]
	public static Handedness Other(this Handedness handedness)
	{
		return default(Handedness);
	}
}
[Token(Token = "0x2000227")]
public enum HandGrabMode
{
	[Token(Token = "0x4000D70")]
	Natural,
	[Token(Token = "0x4000D71")]
	Joint,
	[Token(Token = "0x4000D72")]
	Gaze
}
[Token(Token = "0x2000228")]
public class HandsController : MonoBehaviour
{
	[Token(Token = "0x20005FF")]
	private enum FixedSide
	{
		[Token(Token = "0x4001E45")]
		None,
		[Token(Token = "0x4001E46")]
		Left,
		[Token(Token = "0x4001E47")]
		Right,
		[Token(Token = "0x4001E48")]
		Both
	}

	[Token(Token = "0x2000600")]
	private struct GrabState
	{
		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool shouldBeGrabbable;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float amount;

		[Token(Token = "0x17000410")]
		public bool isFixed
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x8621A0", Offset = "0x8621A0", VA = "0x8621A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000411")]
		public bool isGrabbable
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x8621A8", Offset = "0x8621A8", VA = "0x8621A8")]
			get
			{
				return default(bool);
			}
		}
	}

	[Token(Token = "0x2000601")]
	private struct Tracking
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string id;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 prevPosition;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion prevRotation;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string prevId;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 lerpPosition;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion lerpRotation;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lerpTempo;
	}

	[Token(Token = "0x2000602")]
	public delegate void HandAwayFeedback(Handedness handedness);

	[StructLayout(3)]
	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF34", Offset = "0x7BCF34")]
	private struct <>c__DisplayClass50_0
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HandsController <>4__this;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform controller;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandHeuristics.HandsResult result;
	}

	[StructLayout(3)]
	[Token(Token = "0x2000604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF44", Offset = "0x7BCF44")]
	private struct <>c__DisplayClass51_0
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HandsController <>4__this;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string id;
	}

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2A88", Offset = "0x7C2A88")]
	public HandInteraction leftHand;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandInteraction rightHand;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2AC0", Offset = "0x7C2AC0")]
	public Interactable fixedInteractable;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2AF8", Offset = "0x7C2AF8")]
	private Interactable <activeFixedInteractable>k__BackingField;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable previousFixedInteractable;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2B08", Offset = "0x7C2B08")]
	public Transform fallbackHandsPosition;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 elbowOffset;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2B40", Offset = "0x7C2B40")]
	public Vector3 jointGrabHandPosition;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 jointGrabHandRotation;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 jointGrabDualHandOffset;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2B78", Offset = "0x7C2B78")]
	public Vector3 gazeGrabHandPosition;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 gazeGrabHandRotation;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private FixedSide fixedSide;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private GrabState leftGrab;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private GrabState rightGrab;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Tracking leftTracking;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Tracking rightTracking;

	[Token(Token = "0x4000D84")]
	private const float handTrackingLerpDuration = 0.2f;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private HandGrabMode grabMode;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int minimumInputs;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int leftInputs;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int rightInputs;

	[Token(Token = "0x170000F6")]
	public Interactable activeFixedInteractable
	{
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xADDC04", Offset = "0xADDC04", VA = "0xADDC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF7D4", Offset = "0x7CF7D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xADDC0C", Offset = "0xADDC0C", VA = "0xADDC0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF7E4", Offset = "0x7CF7E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	private bool interactableShouldFix
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xADDC14", Offset = "0xADDC14", VA = "0xADDC14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000009")]
	public static event HandAwayFeedback OnHandAwayFeedback
	{
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xAD9ED0", Offset = "0xAD9ED0", VA = "0xAD9ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF7F4", Offset = "0x7CF7F4")]
		add
		{
		}
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xADA004", Offset = "0xADA004", VA = "0xADA004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF804", Offset = "0x7CF804")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event HandAwayFeedback OnHandOnFeedback
	{
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xADDCD4", Offset = "0xADDCD4", VA = "0xADDCD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF814", Offset = "0x7CF814")]
		add
		{
		}
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xADDD90", Offset = "0xADDD90", VA = "0xADDD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF824", Offset = "0x7CF824")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xADDCBC", Offset = "0xADDCBC", VA = "0xADDCBC")]
	private GrabState GetGrabState(Handedness handedness)
	{
		return default(GrabState);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xADDE4C", Offset = "0xADDE4C", VA = "0xADDE4C")]
	public void SetHandsGrab(Handedness handedness, Transform grabPoint)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xADDE94", Offset = "0xADDE94", VA = "0xADDE94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xADDE98", Offset = "0xADDE98", VA = "0xADDE98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xADF848", Offset = "0xADF848", VA = "0xADF848")]
	private void CheckHandFreedomState(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xADF9BC", Offset = "0xADF9BC", VA = "0xADF9BC")]
	private void HandAway_IncrementHandInput(Handedness handness)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xADE1D0", Offset = "0xADE1D0", VA = "0xADE1D0")]
	private void UpdateActiveFixedInteractable()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xADF768", Offset = "0xADF768", VA = "0xADF768")]
	private void UpdateActiveObject(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xADF67C", Offset = "0xADF67C", VA = "0xADF67C")]
	private void UpdateActiveObjectBothHands()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xADE444", Offset = "0xADE444", VA = "0xADE444")]
	private void UpdateFixedSide()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xADE734", Offset = "0xADE734", VA = "0xADE734")]
	private void UpdateGrabState()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xADE870", Offset = "0xADE870", VA = "0xADE870")]
	private void EnsureGrabbedObject(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xADE9D0", Offset = "0xADE9D0", VA = "0xADE9D0")]
	private void UpdateNaturalTracking()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xADECC4", Offset = "0xADECC4", VA = "0xADECC4")]
	private void UpdateJointTracking()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xADF01C", Offset = "0xADF01C", VA = "0xADF01C")]
	private void UpdateGazeTracking()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xAE0B48", Offset = "0xAE0B48", VA = "0xAE0B48")]
	private void SetHandTracking(Handedness hand, Transform obj, string id)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xADFEBC", Offset = "0xADFEBC", VA = "0xADFEBC")]
	private void SetHandTracking(Handedness hand, Vector3 position, Quaternion rotation, string id)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xADF310", Offset = "0xADF310", VA = "0xADF310")]
	private void UpdateHandTracking(HandInteraction hand, ref Tracking tracking)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xADF5A0", Offset = "0xADF5A0", VA = "0xADF5A0")]
	private void UpdateHandAnimationMode(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xAE0BFC", Offset = "0xAE0BFC", VA = "0xAE0BFC")]
	public void ResetGrabbing()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xAE0D7C", Offset = "0xAE0D7C", VA = "0xAE0D7C")]
	private static void Flip(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xAE0DBC", Offset = "0xAE0DBC", VA = "0xAE0DBC")]
	public HandsController()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xADFCB4", Offset = "0xADFCB4", VA = "0xADFCB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF834", Offset = "0x7CF834")]
	private void <UpdateGrabState>g__UpdateGrabAmount|47_0(ref GrabState grab, float otherAmount)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xADFF48", Offset = "0xADFF48", VA = "0xADFF48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF844", Offset = "0x7CF844")]
	private void <UpdateJointTracking>g__SetGrabbing|50_0(HandInteraction hand, HandInteraction restingHand, ref <>c__DisplayClass50_0 P_2)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xAE0614", Offset = "0xAE0614", VA = "0xAE0614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF854", Offset = "0x7CF854")]
	private void <UpdateGazeTracking>g__SetGrabbing|51_0(HandInteraction hand, ref <>c__DisplayClass51_0 P_1)
	{
	}
}
[Token(Token = "0x2000229")]
public class Interactable : MonoBehaviour
{
	[Token(Token = "0x2000605")]
	public enum InteractableHand
	{
		[Token(Token = "0x4001E5B")]
		Both,
		[Token(Token = "0x4001E5C")]
		Left,
		[Token(Token = "0x4001E5D")]
		Right,
		[Token(Token = "0x4001E5E")]
		None
	}

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2BD0", Offset = "0x7C2BD0")]
	[SerializeField]
	private InteractablePivot leftHandPivot;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InteractablePivot rightHandPivot;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2C2C", Offset = "0x7C2C2C")]
	[SerializeField]
	private InteractablePivot leftHandPivot_gamepad;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InteractablePivot rightHandPivot_gamepad;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2C88", Offset = "0x7C2C88")]
	public bool allowTwoHands;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool grippable;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public InteractableHand allowedHand;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2CC0", Offset = "0x7C2CC0")]
	public bool nonKinematicOnReleased;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool kinematicOnReleased;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2CF8", Offset = "0x7C2CF8")]
	public bool jointThrowOnRelease;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 jointPositionOffset;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 jointRotationOffset;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2D30", Offset = "0x7C2D30")]
	public bool gazeThrowOnRelease;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool gazeOffsetIsAbsolute;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 gazePositionOffset;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 gazeRotationOffset;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2D68", Offset = "0x7C2D68")]
	public bool throwOnAction;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2DA0", Offset = "0x7C2DA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C2DA0", Offset = "0x7C2DA0")]
	public string animParameterName;

	[Token(Token = "0x4000D9D")]
	private const string animActionParameter = "action";

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Dictionary<string, float> animParameters;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2E00", Offset = "0x7C2E00")]
	[EventRef]
	public string grabFMODEvent;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EventRef]
	public string releaseFMODEvent;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[EventRef]
	public string actionPressFMODEvent;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[EventRef]
	public string actionReleaseFMODEvent;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float grabSmoothnessFactor;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 grabStartPosition;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion grabStartRotation;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2EDC", Offset = "0x7C2EDC")]
	private bool <startingKinematic>k__BackingField;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2EEC", Offset = "0x7C2EEC")]
	private bool <wasKinematic>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	public bool isFixed;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2EFC", Offset = "0x7C2EFC")]
	public IconsController.IconInformation iconInfo;

	[Token(Token = "0x170000F8")]
	public Transform leftHandPoint
	{
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xAF45A0", Offset = "0xAF45A0", VA = "0xAF45A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public Transform rightHandPoint
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xAF4664", Offset = "0xAF4664", VA = "0xAF4664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FA")]
	protected virtual float grabSmoothness
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xAF4F08", Offset = "0xAF4F08", VA = "0xAF4F08", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FB")]
	public float pivotDistance
	{
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xAF4F14", Offset = "0xAF4F14", VA = "0xAF4F14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FC")]
	public bool startingKinematic
	{
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xAF5000", Offset = "0xAF5000", VA = "0xAF5000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF924", Offset = "0x7CF924")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xAF5008", Offset = "0xAF5008", VA = "0xAF5008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF934", Offset = "0x7CF934")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public bool wasKinematic
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xAF5014", Offset = "0xAF5014", VA = "0xAF5014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF944", Offset = "0x7CF944")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xAF501C", Offset = "0xAF501C", VA = "0xAF501C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF954", Offset = "0x7CF954")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action onGrab
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xAF4728", Offset = "0xAF4728", VA = "0xAF4728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF864", Offset = "0x7CF864")]
		add
		{
		}
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xAF47D0", Offset = "0xAF47D0", VA = "0xAF47D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF874", Offset = "0x7CF874")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action onRelease
	{
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xAF4878", Offset = "0xAF4878", VA = "0xAF4878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF884", Offset = "0x7CF884")]
		add
		{
		}
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xAF4920", Offset = "0xAF4920", VA = "0xAF4920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF894", Offset = "0x7CF894")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<HandInteraction> onHandGrab
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xAF49C8", Offset = "0xAF49C8", VA = "0xAF49C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8A4", Offset = "0x7CF8A4")]
		add
		{
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xAF4A70", Offset = "0xAF4A70", VA = "0xAF4A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8B4", Offset = "0x7CF8B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<HandInteraction> onHandRelease
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xAF4B18", Offset = "0xAF4B18", VA = "0xAF4B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8C4", Offset = "0x7CF8C4")]
		add
		{
		}
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xAF4BC0", Offset = "0xAF4BC0", VA = "0xAF4BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8D4", Offset = "0x7CF8D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action onActionPress
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xAF4C68", Offset = "0xAF4C68", VA = "0xAF4C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8E4", Offset = "0x7CF8E4")]
		add
		{
		}
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xAF4D10", Offset = "0xAF4D10", VA = "0xAF4D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF8F4", Offset = "0x7CF8F4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action onActionRelease
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xAF4DB8", Offset = "0xAF4DB8", VA = "0xAF4DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF904", Offset = "0x7CF904")]
		add
		{
		}
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xAF4E60", Offset = "0xAF4E60", VA = "0xAF4E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF914", Offset = "0x7CF914")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xAF5028", Offset = "0xAF5028", VA = "0xAF5028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xAF50D4", Offset = "0xAF50D4", VA = "0xAF50D4")]
	public void GrabbedBy(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xAF5540", Offset = "0xAF5540", VA = "0xAF5540")]
	public void ReleasedBy(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xAF5774", Offset = "0xAF5774", VA = "0xAF5774")]
	public void ActionPressed()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xAF5854", Offset = "0xAF5854", VA = "0xAF5854")]
	public void ActionReleased()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xAF54B4", Offset = "0xAF54B4", VA = "0xAF54B4")]
	public bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xAF593C", Offset = "0xAF593C", VA = "0xAF593C")]
	public bool IsGrabbedByBoth()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xAF59BC", Offset = "0xAF59BC", VA = "0xAF59BC")]
	public bool IsGrabbedBy(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xAF59E8", Offset = "0xAF59E8", VA = "0xAF59E8")]
	public bool IsOnlyGrabbedBy(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xAF5A38", Offset = "0xAF5A38", VA = "0xAF5A38")]
	public bool CanBeGrabbedBy(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xAF5A84", Offset = "0xAF5A84", VA = "0xAF5A84")]
	public Transform GrabPointFor(Handedness hand)
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xAF53A8", Offset = "0xAF53A8", VA = "0xAF53A8")]
	private InteractablePivot PivotFor(Handedness hand)
	{
		return null;
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xAF52B0", Offset = "0xAF52B0", VA = "0xAF52B0")]
	protected void ResetSmoothness()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xAF5A90", Offset = "0xAF5A90", VA = "0xAF5A90")]
	protected void UpdateSmoothness()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xAF5AF0", Offset = "0xAF5AF0", VA = "0xAF5AF0")]
	protected void SetSmoothPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xAF5BF0", Offset = "0xAF5BF0", VA = "0xAF5BF0")]
	protected void SetSmoothRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xAF5D0C", Offset = "0xAF5D0C", VA = "0xAF5D0C", Slot = "5")]
	public virtual void UpdatePosition(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xAF5FC8", Offset = "0xAF5FC8", VA = "0xAF5FC8", Slot = "6")]
	public virtual void UpdatePosition(HandInteraction leftHand, HandInteraction rightHand)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xAF6564", Offset = "0xAF6564", VA = "0xAF6564", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xAF6604", Offset = "0xAF6604", VA = "0xAF6604")]
	public void CheckIcon(bool forceGrabState = false)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xAF66D4", Offset = "0xAF66D4", VA = "0xAF66D4", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xAF67B4", Offset = "0xAF67B4", VA = "0xAF67B4", Slot = "9")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xAF6894", Offset = "0xAF6894", VA = "0xAF6894")]
	public void SetAnimParameter(string parameter, float value = 0f)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xAF6944", Offset = "0xAF6944", VA = "0xAF6944")]
	public void SetAnimParameter(string parameter, int value = 0)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xAF5728", Offset = "0xAF5728", VA = "0xAF5728")]
	public void SetAnimParameter(string parameter, bool value = false)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xAF694C", Offset = "0xAF694C", VA = "0xAF694C")]
	public float GetAnimParameterAsFloat(string parameter)
	{
		return default(float);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xAF69D8", Offset = "0xAF69D8", VA = "0xAF69D8")]
	public int GetAnimParameterAsInt(string parameter)
	{
		return default(int);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xAF6A64", Offset = "0xAF6A64", VA = "0xAF6A64")]
	public bool GetAnimParameterAsBool(string parameter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xAF6A80", Offset = "0xAF6A80", VA = "0xAF6A80")]
	public Interactable()
	{
	}
}
[Token(Token = "0x200022A")]
public class InteractablePivot : MonoBehaviour
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C2F34", Offset = "0x7C2F34")]
	private bool <grabbed>k__BackingField;

	[Token(Token = "0x170000FE")]
	public bool grabbed
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xAF5934", Offset = "0xAF5934", VA = "0xAF5934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF964", Offset = "0x7CF964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xAF5534", Offset = "0xAF5534", VA = "0xAF5534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF974", Offset = "0x7CF974")]
		set
		{
		}
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xAF6AFC", Offset = "0xAF6AFC", VA = "0xAF6AFC")]
	public InteractablePivot()
	{
	}
}
[Token(Token = "0x200022B")]
public class InteractableRegion : MonoBehaviour
{
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF54", Offset = "0x7BCF54")]
	private sealed class <Cooldown>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableRegion <>4__this;

		[Token(Token = "0x17000412")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002690")]
			[Address(RVA = "0xAF7678", Offset = "0xAF7678", VA = "0xAF7678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002692")]
			[Address(RVA = "0xAF76E8", Offset = "0xAF76E8", VA = "0xAF76E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xAF73E0", Offset = "0xAF73E0", VA = "0xAF73E0")]
		[DebuggerHidden]
		public <Cooldown>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xAF759C", Offset = "0xAF759C", VA = "0xAF759C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xAF75A0", Offset = "0xAF75A0", VA = "0xAF75A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xAF7680", Offset = "0xAF7680", VA = "0xAF7680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Interactable interactable;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandsController hands;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool keepObjectGrabbed;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 origPosition;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion origRotation;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lerpTime;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool leftHandPresent;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool rightHandPresent;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool cooldown;

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xAF6B04", Offset = "0xAF6B04", VA = "0xAF6B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xAF6B98", Offset = "0xAF6B98", VA = "0xAF6B98")]
	private bool IsAnyHandPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xAF6BB8", Offset = "0xAF6BB8", VA = "0xAF6BB8")]
	private bool AreBothHandsPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xAF6BD8", Offset = "0xAF6BD8", VA = "0xAF6BD8")]
	private bool IsGrabbedByBothHands()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xAF6C04", Offset = "0xAF6C04", VA = "0xAF6C04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xAF6C98", Offset = "0xAF6C98", VA = "0xAF6C98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xAF6D2C", Offset = "0xAF6D2C", VA = "0xAF6D2C")]
	private void OnHandGrab(HandInteraction hand)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xAF6E88", Offset = "0xAF6E88", VA = "0xAF6E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xAF6E54", Offset = "0xAF6E54", VA = "0xAF6E54")]
	private void FixObject()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xAF7360", Offset = "0xAF7360", VA = "0xAF7360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF984", Offset = "0x7CF984")]
	private IEnumerator Cooldown()
	{
		return null;
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xAF72A0", Offset = "0xAF72A0", VA = "0xAF72A0")]
	private void UnfixObject()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xAF71E0", Offset = "0xAF71E0", VA = "0xAF71E0")]
	private void UnfixOtherObjects()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xAF6DD0", Offset = "0xAF6DD0", VA = "0xAF6DD0")]
	private bool IsObjectFixed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xAF740C", Offset = "0xAF740C", VA = "0xAF740C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xAF7414", Offset = "0xAF7414", VA = "0xAF7414")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xAF74EC", Offset = "0xAF74EC", VA = "0xAF74EC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xAF7594", Offset = "0xAF7594", VA = "0xAF7594")]
	public InteractableRegion()
	{
	}
}
[Token(Token = "0x200022C")]
public class Respawnable : MonoBehaviour
{
	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C2F44", Offset = "0x7C2F44")]
	public Transform spawnPoint;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float respawnDelay;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion originalRot;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Interactable interactable;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool startCountdown;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float respawnTimer;

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xA63680", Offset = "0xA63680", VA = "0xA63680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xA63768", Offset = "0xA63768", VA = "0xA63768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xA6392C", Offset = "0xA6392C", VA = "0xA6392C")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xA63BE8", Offset = "0xA63BE8", VA = "0xA63BE8")]
	public Respawnable()
	{
	}
}
[Token(Token = "0x200022D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAD34", Offset = "0x7BAD34")]
public class Throwable : MonoBehaviour
{
	[Token(Token = "0x2000607")]
	public delegate void OnThrow();

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool handVelocity;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float force;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VelocityInfo velocityInfo;

	[Token(Token = "0x4000DC6")]
	private const float magicMultiplier = 0.625f;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string throwObjectSoundEvent;

	[Token(Token = "0x14000011")]
	public event OnThrow OnThrowEvent
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xA85F6C", Offset = "0xA85F6C", VA = "0xA85F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9E8", Offset = "0x7CF9E8")]
		add
		{
		}
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xA86014", Offset = "0xA86014", VA = "0xA86014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF9F8", Offset = "0x7CF9F8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xA85988", Offset = "0xA85988", VA = "0xA85988")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xA85A14", Offset = "0xA85A14", VA = "0xA85A14")]
	public void Throw([Optional] Vector3 velocity, [Optional] Vector3 angularVelocity, [Optional] VelocityInfo handVelocityInfo)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xA860BC", Offset = "0xA860BC", VA = "0xA860BC")]
	public Throwable()
	{
	}
}
[Token(Token = "0x200022E")]
public class VelocityInfo : MonoBehaviour
{
	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3[] positions;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Quaternion[] rotations;

	[Token(Token = "0x4000DCB")]
	private const int frameDataLength = 5;

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x11413EC", Offset = "0x11413EC", VA = "0x11413EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1141520", Offset = "0x1141520", VA = "0x1141520")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x11413F0", Offset = "0x11413F0", VA = "0x11413F0")]
	private void ResetFrameData()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1141524", Offset = "0x1141524", VA = "0x1141524")]
	private void UpdateFrameData()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1141718", Offset = "0x1141718", VA = "0x1141718")]
	public Vector3 GetAverageVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1141840", Offset = "0x1141840", VA = "0x1141840")]
	public Vector3 GetAverageAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1141A3C", Offset = "0x1141A3C", VA = "0x1141A3C")]
	public VelocityInfo()
	{
	}
}
[Token(Token = "0x200022F")]
public enum DeathType
{
	[Token(Token = "0x4000DCD")]
	ingame_damage,
	[Token(Token = "0x4000DCE")]
	ingame_instakill,
	[Token(Token = "0x4000DCF")]
	real_world,
	[Token(Token = "0x4000DD0")]
	ingame_drown
}
[Token(Token = "0x2000230")]
public class LevelAnalytics : MonoBehaviour
{
	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelAnalytics instance;

	[Token(Token = "0x170000FF")]
	private static string currentLevel
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x98226C", Offset = "0x98226C", VA = "0x98226C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	private static string difficulty
	{
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x98236C", Offset = "0x98236C", VA = "0x98236C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x9823EC", Offset = "0x9823EC", VA = "0x9823EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x9824EC", Offset = "0x9824EC", VA = "0x9824EC")]
	private static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x9825AC", Offset = "0x9825AC", VA = "0x9825AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x9825B0", Offset = "0x9825B0", VA = "0x9825B0")]
	private static void LevelStart()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x9774F8", Offset = "0x9774F8", VA = "0x9774F8")]
	public static void PlayerDied(DeathType deathType)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x982828", Offset = "0x982828", VA = "0x982828")]
	public static void FoundCollectable(string id)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x9829DC", Offset = "0x9829DC", VA = "0x9829DC")]
	public static void ReachedCheckpoint(int index)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x982C40", Offset = "0x982C40", VA = "0x982C40")]
	public static void LevelComplete(float timer, float totalScore, bool isValidRecord)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x983004", Offset = "0x983004", VA = "0x983004")]
	public static void ActivatedRippedMode()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x983288", Offset = "0x983288", VA = "0x983288")]
	public static void CutsceneSkipped(string cutsceneName)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x983458", Offset = "0x983458", VA = "0x983458")]
	public LevelAnalytics()
	{
	}
}
[Token(Token = "0x2000231")]
public class AssetsPathAttribute : PropertyAttribute
{
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xA992E0", Offset = "0xA992E0", VA = "0xA992E0")]
	public AssetsPathAttribute([Optional] Type type)
	{
	}
}
[Token(Token = "0x2000232")]
public class AssetsRefSource : StringRefSource
{
	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly Type type;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xA992E8", Offset = "0xA992E8", VA = "0xA992E8")]
	public AssetsRefSource()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xA99318", Offset = "0xA99318", VA = "0xA99318")]
	public AssetsRefSource(Type type)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xA9934C", Offset = "0xA9934C", VA = "0xA9934C", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}
}
[Token(Token = "0x2000233")]
public abstract class BaseLocalizing : MonoBehaviour
{
	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Localization.Language currentLanguage;

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xA9E2EC", Offset = "0xA9E2EC", VA = "0xA9E2EC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xA9E42C", Offset = "0xA9E42C", VA = "0xA9E42C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xA9E3FC", Offset = "0xA9E3FC", VA = "0xA9E3FC")]
	private void OnLanguageChange(Localization.Language language)
	{
	}

	[Token(Token = "0x6000D42")]
	protected abstract void UpdateValues();

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xA9E4C8", Offset = "0xA9E4C8", VA = "0xA9E4C8")]
	protected BaseLocalizing()
	{
	}
}
[Token(Token = "0x2000234")]
public static class DialogueLoader
{
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xB42EA4", Offset = "0xB42EA4", VA = "0xB42EA4")]
	public static TextAsset LoadFile(string name, string code)
	{
		return null;
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xB42F18", Offset = "0xB42F18", VA = "0xB42F18")]
	public static TextAsset LoadFile(string name)
	{
		return null;
	}
}
[Token(Token = "0x2000235")]
public class LocalizationExperiments : MonoBehaviour
{
	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[StringsKey]
	public string key;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xA31004", Offset = "0xA31004", VA = "0xA31004")]
	public LocalizationExperiments()
	{
	}
}
[Token(Token = "0x2000236")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BADB4", Offset = "0x7BADB4")]
public class FontLocalization : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000608")]
	public struct FontLocalizationInfo
	{
		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontInfo[] fontInfo;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Dictionary<FontType, FontInfo> fontInfoByType;
	}

	[Serializable]
	[Token(Token = "0x2000609")]
	public struct FontInfo
	{
		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontType fontType;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Font font;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fontSizeMultiplier;
	}

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FontLocalization instance;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2FAC", Offset = "0x7C2FAC")]
	public Font fontA;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FontLocalizationInfo fontAInfo;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C2FE4", Offset = "0x7C2FE4")]
	public Font fontB;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FontLocalizationInfo fontBInfo;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C301C", Offset = "0x7C301C")]
	public Font fontC;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FontLocalizationInfo fontCInfo;

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xAD2D40", Offset = "0xAD2D40", VA = "0xAD2D40")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xAD316C", Offset = "0xAD316C", VA = "0xAD316C")]
	public static bool TryGetFontInfo(Font defaultFont, FontType fontType, out FontInfo fontInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xAD3398", Offset = "0xAD3398", VA = "0xAD3398")]
	public FontLocalization()
	{
	}
}
[Token(Token = "0x2000237")]
public enum FontType
{
	[Token(Token = "0x4000DDE")]
	Default_Font,
	[Token(Token = "0x4000DDF")]
	Asian_Font
}
[Token(Token = "0x2000238")]
public class LanguageRefSource : StringRefSource
{
	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xAFF338", Offset = "0xAFF338", VA = "0xAFF338", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xAFF33C", Offset = "0xAFF33C", VA = "0xAFF33C")]
	public LanguageRefSource()
	{
	}
}
[Token(Token = "0x2000239")]
public class Localization : MonoBehaviour
{
	[Token(Token = "0x200060A")]
	private struct CodeList
	{
		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] code;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Language language;
	}

	[Token(Token = "0x200060B")]
	public class Language
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string code;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CultureInfo culture;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FontType fontType;

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xA30604", Offset = "0xA30604", VA = "0xA30604")]
		public Language(string code, string name, FontType fontType)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xA30FAC", Offset = "0xA30FAC", VA = "0xA30FAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF64", Offset = "0x7BCF64")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<CodeList> <>9__19_0;

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xA30F48", Offset = "0xA30F48", VA = "0xA30F48")]
		public <>c()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xA30F50", Offset = "0xA30F50", VA = "0xA30F50")]
		internal int <GetMostCompatibleLanguage>b__19_0(CodeList y, CodeList x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3054", Offset = "0x7C3054")]
	private static Language <language>k__BackingField;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3074", Offset = "0x7C3074")]
	private static Language[] <availableLanguages>k__BackingField;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Language defaultLanguage;

	[Token(Token = "0x4000DE4")]
	public const string defaultCode = "en";

	[Token(Token = "0x4000DE5")]
	private const string localizationAsset = "Localization";

	[Token(Token = "0x4000DE6")]
	private const string assetsFolder = "Assets";

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool initialized;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FontLocalization fontLocalizationAsset;

	[Token(Token = "0x4000DE9")]
	private const string saveKeyLanguage = "language";

	[Token(Token = "0x17000101")]
	public static Language language
	{
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xA2F428", Offset = "0xA2F428", VA = "0xA2F428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA08", Offset = "0x7CFA08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xA2F490", Offset = "0xA2F490", VA = "0xA2F490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA18", Offset = "0x7CFA18")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public static Language[] availableLanguages
	{
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xA2F6E8", Offset = "0xA2F6E8", VA = "0xA2F6E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA48", Offset = "0x7CFA48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xA2F750", Offset = "0xA2F750", VA = "0xA2F750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA58", Offset = "0x7CFA58")]
		private set
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action<Language> onLanguageChange
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xA2F500", Offset = "0xA2F500", VA = "0xA2F500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA28", Offset = "0x7CFA28")]
		add
		{
		}
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xA2F5F4", Offset = "0xA2F5F4", VA = "0xA2F5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFA38", Offset = "0x7CFA38")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xA2F7C0", Offset = "0xA2F7C0", VA = "0xA2F7C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xA2FA5C", Offset = "0xA2FA5C", VA = "0xA2FA5C")]
	private static void LoadLanguages()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xA2FEBC", Offset = "0xA2FEBC", VA = "0xA2FEBC")]
	private static Language GetMostCompatibleLanguage(string code)
	{
		return null;
	}

	[Token(Token = "0x6000D55")]
	public static T LoadAsset<T>(string path) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xA30768", Offset = "0xA30768", VA = "0xA30768")]
	public static UnityEngine.Object LoadAsset(string path, Type type)
	{
		return null;
	}

	[Token(Token = "0x6000D57")]
	public static T LoadAsset<T>(string path, string code) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xA308A4", Offset = "0xA308A4", VA = "0xA308A4")]
	public static UnityEngine.Object LoadAsset(string path, string code, Type type)
	{
		return null;
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xA30928", Offset = "0xA30928", VA = "0xA30928")]
	private static string GetAssetsPath(string path, string code)
	{
		return null;
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xA3098C", Offset = "0xA3098C", VA = "0xA3098C")]
	public static void SetLanguage(string code)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xA30AF8", Offset = "0xA30AF8", VA = "0xA30AF8")]
	public static void SetLanguage(Language language, bool quietly = false)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xA30500", Offset = "0xA30500", VA = "0xA30500")]
	private static void UpdateLanguage()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xA2FE20", Offset = "0xA2FE20", VA = "0xA2FE20")]
	private static string GetSavedLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xA30BE8", Offset = "0xA30BE8", VA = "0xA30BE8")]
	private static void SetSavedLanguage(string code)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xA30C74", Offset = "0xA30C74", VA = "0xA30C74")]
	public static CultureInfo GetCulture(string code)
	{
		return null;
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xA30DE4", Offset = "0xA30DE4", VA = "0xA30DE4")]
	public static string GetCultureName(string code)
	{
		return null;
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xA30ED4", Offset = "0xA30ED4", VA = "0xA30ED4")]
	public Localization()
	{
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BADF8", Offset = "0x7BADF8")]
public class LocalizationSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200060D")]
	public struct Entry
	{
		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string code;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool available;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FontType fontType;
	}

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Entry> entries;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xA3100C", Offset = "0xA3100C", VA = "0xA3100C")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x200023B")]
public class SpriteLocalizing : BaseLocalizing
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "AssetsPathAttribute", RVA = "0x7C3094", Offset = "0x7C3094")]
	public string assetPath;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer[] sprites;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image[] images;

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xA768C0", Offset = "0xA768C0", VA = "0xA768C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xA7694C", Offset = "0xA7694C", VA = "0xA7694C", Slot = "6")]
	protected override void UpdateValues()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xA76AD0", Offset = "0xA76AD0", VA = "0xA76AD0")]
	public SpriteLocalizing()
	{
	}
}
[Token(Token = "0x200023C")]
public class Strings : MonoBehaviour
{
	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, string> fallbackValues;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, string> values;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string loadedCode;

	[Token(Token = "0x4000DF1")]
	public const string resourcesPath = "Strings";

	[Token(Token = "0x4000DF2")]
	public const char groupSeparator = '/';

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xA78F74", Offset = "0xA78F74", VA = "0xA78F74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xA792F0", Offset = "0xA792F0", VA = "0xA792F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xA79220", Offset = "0xA79220", VA = "0xA79220")]
	private void OnLanguageChange(Localization.Language language)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xA7938C", Offset = "0xA7938C", VA = "0xA7938C")]
	public static string GetValue(string group, string key)
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xA79420", Offset = "0xA79420", VA = "0xA79420")]
	public static string GetValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xA79138", Offset = "0xA79138", VA = "0xA79138")]
	private static void Populate(Dictionary<string, string> values, string code)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xA79564", Offset = "0xA79564", VA = "0xA79564")]
	public static TextAsset LoadStringsFile(string code)
	{
		return null;
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xA79850", Offset = "0xA79850", VA = "0xA79850")]
	public Strings()
	{
	}
}
[Token(Token = "0x200023D")]
public class StringsKeyAttribute : PropertyAttribute
{
	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xA79914", Offset = "0xA79914", VA = "0xA79914")]
	public StringsKeyAttribute()
	{
	}
}
[Token(Token = "0x200023E")]
public static class StringsParser
{
	[Token(Token = "0x200060E")]
	private struct Line
	{
		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LineType type;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string key;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string value;
	}

	[Token(Token = "0x200060F")]
	private enum LineType
	{
		[Token(Token = "0x4001E77")]
		None,
		[Token(Token = "0x4001E78")]
		Group,
		[Token(Token = "0x4001E79")]
		KeyValue
	}

	[Token(Token = "0x4000DF3")]
	public const char groupSeparator = '/';

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xA7991C", Offset = "0xA7991C", VA = "0xA7991C")]
	public static string[] ParseKeyNames(TextAsset textAsset)
	{
		return null;
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xA795C8", Offset = "0xA795C8", VA = "0xA795C8")]
	public static void ParseValues(TextAsset textAsset, Dictionary<string, string> values)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xA79E88", Offset = "0xA79E88", VA = "0xA79E88")]
	public static string ParseValue(TextAsset textAsset, string group, string key)
	{
		return null;
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xA79BE8", Offset = "0xA79BE8", VA = "0xA79BE8")]
	private static Line ParseLine(string s)
	{
		return default(Line);
	}
}
[Token(Token = "0x200023F")]
public class StringsRefSource : StringRefSource
{
	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xA7A0C0", Offset = "0xA7A0C0", VA = "0xA7A0C0", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xA7A1EC", Offset = "0xA7A1EC", VA = "0xA7A1EC")]
	public StringsRefSource()
	{
	}
}
[Token(Token = "0x2000240")]
public class SubtitleManager : MonoBehaviour
{
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF74", Offset = "0x7BCF74")]
	private sealed class <DisplaySimpleSentence>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string charName;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color charColor;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string content;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SubtitleManager <>4__this;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <fullContent>5__2;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0xA7C0B4", Offset = "0xA7C0B4", VA = "0xA7C0B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xA7C124", Offset = "0xA7C124", VA = "0xA7C124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xA7B878", Offset = "0xA7B878", VA = "0xA7B878")]
		[DebuggerHidden]
		public <DisplaySimpleSentence>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xA7BA50", Offset = "0xA7BA50", VA = "0xA7BA50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xA7BA54", Offset = "0xA7BA54", VA = "0xA7BA54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xA7C0BC", Offset = "0xA7C0BC", VA = "0xA7C0BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF84", Offset = "0x7BCF84")]
	private sealed class <DisplaySplitSentences>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string charName;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color charColor;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] splitContent;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SubtitleManager <>4__this;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] durations;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__2;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string <content>5__3;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xA7C7A0", Offset = "0xA7C7A0", VA = "0xA7C7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xA7C810", Offset = "0xA7C810", VA = "0xA7C810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xA7B8A4", Offset = "0xA7B8A4", VA = "0xA7B8A4")]
		[DebuggerHidden]
		public <DisplaySplitSentences>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xA7C12C", Offset = "0xA7C12C", VA = "0xA7C12C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xA7C130", Offset = "0xA7C130", VA = "0xA7C130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xA7C7A8", Offset = "0xA7C7A8", VA = "0xA7C7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SubtitleManager instance;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool enableSubtitles;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas subtitleCanvas;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text dialogueTxt;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<string, string> fallbackValues;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<string, string> values;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string loadedCode;

	[Token(Token = "0x4000DFB")]
	public const string resourcesPath = "Subtitles";

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly char[] sentenceSeparators;

	[Token(Token = "0x4000DFD")]
	private const int defaultMaxCharCount = 74;

	[Token(Token = "0x4000DFE")]
	private const int asianMaxCharCount = 37;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, string> characterCurrentLine;

	[Token(Token = "0x17000103")]
	private int maxCharCount
	{
		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xA7A1F4", Offset = "0xA7A1F4", VA = "0xA7A1F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xA7A278", Offset = "0xA7A278", VA = "0xA7A278")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xA7A408", Offset = "0xA7A408", VA = "0xA7A408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xA7AA90", Offset = "0xA7AA90", VA = "0xA7AA90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xA7A9C0", Offset = "0xA7A9C0", VA = "0xA7A9C0")]
	private void OnLanguageChange(Localization.Language language)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xA7A5CC", Offset = "0xA7A5CC", VA = "0xA7A5CC")]
	private static void Populate(Dictionary<string, string> values, string code)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xA7AC10", Offset = "0xA7AC10", VA = "0xA7AC10")]
	public static string GetValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xA7AD1C", Offset = "0xA7AD1C", VA = "0xA7AD1C")]
	public static string GetValue(string key, int parameter)
	{
		return null;
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xA7AB90", Offset = "0xA7AB90", VA = "0xA7AB90")]
	private static string ConcatKeyParameter(string key, int parameter)
	{
		return null;
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xA7AB2C", Offset = "0xA7AB2C", VA = "0xA7AB2C")]
	public static TextAsset LoadStringsFile(string code)
	{
		return null;
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xA7AD94", Offset = "0xA7AD94", VA = "0xA7AD94")]
	public static void Display(string _charName, Color _charColor, float _duration, string _eventID, int _eventParameter = -1)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xA7B02C", Offset = "0xA7B02C", VA = "0xA7B02C")]
	private void DisplaySubtitle(string charName, Color charColor, string content, float duration)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xA7B728", Offset = "0xA7B728", VA = "0xA7B728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFA68", Offset = "0x7CFA68")]
	private IEnumerator DisplaySimpleSentence(string charName, Color charColor, string content, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xA7B5CC", Offset = "0xA7B5CC", VA = "0xA7B5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFACC", Offset = "0x7CFACC")]
	private IEnumerator DisplaySplitSentences(string charName, Color charColor, string[] splitContent, float[] durations)
	{
		return null;
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xA7B120", Offset = "0xA7B120", VA = "0xA7B120")]
	private bool SplitDialogue(string fullDialogue, out string[] splitSentences)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xA7B4AC", Offset = "0xA7B4AC", VA = "0xA7B4AC")]
	private float[] SplitDialogueDurations(string[] sentences, int totalCharacters, float totalDuration)
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xA7B8D0", Offset = "0xA7B8D0", VA = "0xA7B8D0")]
	public SubtitleManager()
	{
	}
}
[Token(Token = "0x2000241")]
public class SubtitleOffset : MonoBehaviour
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 default_Offset;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 pS4_Offset;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FollowHead followHead;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xA7CAA4", Offset = "0xA7CAA4", VA = "0xA7CAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xA7CB48", Offset = "0xA7CB48", VA = "0xA7CB48")]
	public SubtitleOffset()
	{
	}
}
[Token(Token = "0x2000242")]
public class TextLocalizing : MonoBehaviour
{
	[Token(Token = "0x2000612")]
	public enum Case
	{
		[Token(Token = "0x4001E8C")]
		KeepOriginal,
		[Token(Token = "0x4001E8D")]
		AllUpper,
		[Token(Token = "0x4001E8E")]
		AllLower
	}

	[Token(Token = "0x2000613")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCF94", Offset = "0x7BCF94")]
	private sealed class <UpdateAtEndOnFrame>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextLocalizing <>4__this;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xA84D54", Offset = "0xA84D54", VA = "0xA84D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xA84DC4", Offset = "0xA84DC4", VA = "0xA84DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xA84BF4", Offset = "0xA84BF4", VA = "0xA84BF4")]
		[DebuggerHidden]
		public <UpdateAtEndOnFrame>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xA84C9C", Offset = "0xA84C9C", VA = "0xA84C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xA84CA0", Offset = "0xA84CA0", VA = "0xA84CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xA84D5C", Offset = "0xA84D5C", VA = "0xA84D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Case letterCase;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[StringsKey]
	public string stringsKey;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Font defaultFont;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMesh[] meshes;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text[] texts;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] defaultTextSizes;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<Image> allImages;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Localization.Language currentLanguage;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputProfile currentProfile;

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xA8371C", Offset = "0xA8371C", VA = "0xA8371C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xA83954", Offset = "0xA83954", VA = "0xA83954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xA84A38", Offset = "0xA84A38", VA = "0xA84A38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xA84B34", Offset = "0xA84B34", VA = "0xA84B34")]
	private void OnProfileUpdate(InputProfile profile)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xA84B38", Offset = "0xA84B38", VA = "0xA84B38")]
	private void OnLanguageChange(Localization.Language language)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xA84B3C", Offset = "0xA84B3C", VA = "0xA84B3C")]
	public void ChangeKeyAndUpdate(string newKey)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xA84B74", Offset = "0xA84B74", VA = "0xA84B74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFB30", Offset = "0x7CFB30")]
	private IEnumerator UpdateAtEndOnFrame()
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xA83AB0", Offset = "0xA83AB0", VA = "0xA83AB0")]
	private void UpdateValues()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xA84C20", Offset = "0xA84C20", VA = "0xA84C20")]
	public TextLocalizing()
	{
	}
}
[Token(Token = "0x2000243")]
public class TextureLocalizing : BaseLocalizing
{
	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "AssetsPathAttribute", RVA = "0x7C3108", Offset = "0x7C3108")]
	public string assetPath;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] renderers;

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xA85640", Offset = "0xA85640", VA = "0xA85640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xA856A4", Offset = "0xA856A4", VA = "0xA856A4", Slot = "6")]
	protected override void UpdateValues()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xA85814", Offset = "0xA85814", VA = "0xA85814")]
	public TextureLocalizing()
	{
	}
}
[Token(Token = "0x2000244")]
public class PlatformAnalytics : MonoBehaviour
{
	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string store;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string headset;

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xB8CB58", Offset = "0xB8CB58", VA = "0xB8CB58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xB8CE38", Offset = "0xB8CE38", VA = "0xB8CE38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xB8CED4", Offset = "0xB8CED4", VA = "0xB8CED4")]
	private void OnProfileUpdate(InputProfile obj)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xB8CCA4", Offset = "0xB8CCA4", VA = "0xB8CCA4")]
	private void PlatformInfoEvent(string controller)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xB8D080", Offset = "0xB8D080", VA = "0xB8D080")]
	public PlatformAnalytics()
	{
	}
}
[Token(Token = "0x2000245")]
public class ArmHologram : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Handedness handToPress;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject button;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackedButton;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject iconGetPlyAttention;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArmHologramCollider buttonCollider;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ArmHologramContent content;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string blinkSoundEvent;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[EventRef]
	public string pressSoundEvent;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EventInstance blinkEventInstance;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float buttonSoundTempo;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool blinkStarted;

	[Token(Token = "0x4000E1B")]
	private const float buttonBlinkInterval = 0.25f;

	[Token(Token = "0x4000E1C")]
	private const float buttonSoundInterval = 2.5f;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent extraActions;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float timerAfterSync;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent afterActions;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xA98520", Offset = "0xA98520", VA = "0xA98520")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA98654", Offset = "0xA98654", VA = "0xA98654")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xA9891C", Offset = "0xA9891C", VA = "0xA9891C")]
	public void PlayContent()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xA98A60", Offset = "0xA98A60", VA = "0xA98A60")]
	private void AfterActions()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xA98A90", Offset = "0xA98A90", VA = "0xA98A90")]
	public ArmHologram()
	{
	}
}
[Token(Token = "0x2000246")]
public class ArmHologramCollider : MonoBehaviour
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool leftCollided;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool rightCollided;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool leftEnter;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool rightEnter;

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xA98904", Offset = "0xA98904", VA = "0xA98904")]
	public bool Collided(Handedness hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xA98AA0", Offset = "0xA98AA0", VA = "0xA98AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xA98AB0", Offset = "0xA98AB0", VA = "0xA98AB0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xA98BA8", Offset = "0xA98BA8", VA = "0xA98BA8")]
	public ArmHologramCollider()
	{
	}
}
[Token(Token = "0x2000247")]
public class ArmHologramContent : MonoBehaviour
{
	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldPlay;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector director;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C318C", Offset = "0x7C318C")]
	private bool <playing>k__BackingField;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C319C", Offset = "0x7C319C")]
	private bool <canAdvance>k__BackingField;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool deactivateOnEnd;

	[Token(Token = "0x17000104")]
	public bool playing
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xA98BB0", Offset = "0xA98BB0", VA = "0xA98BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFB94", Offset = "0x7CFB94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xA98BB8", Offset = "0xA98BB8", VA = "0xA98BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFBA4", Offset = "0x7CFBA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public bool canAdvance
	{
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xA98BC4", Offset = "0xA98BC4", VA = "0xA98BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFBB4", Offset = "0x7CFBB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xA98BCC", Offset = "0xA98BCC", VA = "0xA98BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFBC4", Offset = "0x7CFBC4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xA98A4C", Offset = "0xA98A4C", VA = "0xA98A4C")]
	public void ArmInput()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xA98BD8", Offset = "0xA98BD8", VA = "0xA98BD8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xA98D2C", Offset = "0xA98D2C", VA = "0xA98D2C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xA98DB0", Offset = "0xA98DB0", VA = "0xA98DB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xA98E48", Offset = "0xA98E48", VA = "0xA98E48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xA98EE0", Offset = "0xA98EE0", VA = "0xA98EE0")]
	private void OnDirectorStop(PlayableDirector director)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xA98EE4", Offset = "0xA98EE4", VA = "0xA98EE4")]
	public ArmHologramContent()
	{
	}
}
[Token(Token = "0x2000248")]
public class Belt : MonoBehaviour
{
	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xA9EC64", Offset = "0xA9EC64", VA = "0xA9EC64")]
	private void OnTriggerEnter(Collider c)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xA9EE60", Offset = "0xA9EE60", VA = "0xA9EE60")]
	public Belt()
	{
	}
}
[Token(Token = "0x2000249")]
public class ChnageHandWithCannon : MonoBehaviour
{
	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DotWorldHandCannon dotWorldhandcannon;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject armNormal;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject armGun;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hand;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xAB0DA0", Offset = "0xAB0DA0", VA = "0xAB0DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xAB0E88", Offset = "0xAB0E88", VA = "0xAB0E88")]
	public ChnageHandWithCannon()
	{
	}
}
[Token(Token = "0x200024A")]
public class ClothingState : ProgressionState
{
	[Token(Token = "0x2000614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFA4", Offset = "0x7BCFA4")]
	private sealed class <CheckFinalAnimEnd>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClothingState <>4__this;

		[Token(Token = "0x1700041A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xBE9DFC", Offset = "0xBE9DFC", VA = "0xBE9DFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xBE9E6C", Offset = "0xBE9E6C", VA = "0xBE9E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xBE9D00", Offset = "0xBE9D00", VA = "0xBE9D00")]
		[DebuggerHidden]
		public <CheckFinalAnimEnd>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xBE9D34", Offset = "0xBE9D34", VA = "0xBE9D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xBE9D38", Offset = "0xBE9D38", VA = "0xBE9D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xBE9E04", Offset = "0xBE9E04", VA = "0xBE9E04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DotWearable[] dotwearables;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool checkClothing;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentWearable;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator dresserAnimator;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xBE9A74", Offset = "0xBE9A74", VA = "0xBE9A74", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xBE9A80", Offset = "0xBE9A80", VA = "0xBE9A80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xBE9B04", Offset = "0xBE9B04", VA = "0xBE9B04")]
	private void ShowNextWearable()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xBE9C80", Offset = "0xBE9C80", VA = "0xBE9C80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFBD4", Offset = "0x7CFBD4")]
	private IEnumerator CheckFinalAnimEnd()
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xBE9D2C", Offset = "0xBE9D2C", VA = "0xBE9D2C")]
	public ClothingState()
	{
	}
}
[Token(Token = "0x200024B")]
public class DotWearable : MonoBehaviour
{
	[Token(Token = "0x2000615")]
	public enum DotWearableTypes
	{
		[Token(Token = "0x4001E96")]
		helmet,
		[Token(Token = "0x4001E97")]
		boots,
		[Token(Token = "0x4001E98")]
		shoulder,
		[Token(Token = "0x4001E99")]
		hair,
		[Token(Token = "0x4001E9A")]
		belt
	}

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject itemToWear;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite wearingItemSprite;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool wearing;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string wearAudio;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DotWearableTypes myType;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isHead;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject headBefore;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject headAfter;

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xB51640", Offset = "0xB51640", VA = "0xB51640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xB516AC", Offset = "0xB516AC", VA = "0xB516AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xB51788", Offset = "0xB51788", VA = "0xB51788")]
	public void WearItem()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xB5192C", Offset = "0xB5192C", VA = "0xB5192C")]
	public DotWearable()
	{
	}
}
[Token(Token = "0x200024C")]
public class PlayFmodEventSignal : MonoBehaviour
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string FMODEventname;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool audioFromTV;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameTV tvSource;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xB8E368", Offset = "0xB8E368", VA = "0xB8E368")]
	public void PlaySound(string eventName)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xB8E438", Offset = "0xB8E438", VA = "0xB8E438")]
	public PlayFmodEventSignal()
	{
	}
}
[Token(Token = "0x200024D")]
public class LegacyRigController : MonoBehaviour
{
	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandTarget;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandsController handsController;

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xAFF86C", Offset = "0xAFF86C", VA = "0xAFF86C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xAFFA64", Offset = "0xAFFA64", VA = "0xAFFA64")]
	public LegacyRigController()
	{
	}
}
[Token(Token = "0x200024E")]
public class RigController : MonoBehaviour
{
	[Token(Token = "0x2000616")]
	private struct Parameter
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int id;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimatorControllerParameterType type;
	}

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C31CC", Offset = "0x7C31CC")]
	public HandsController handsController;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3204", Offset = "0x7C3204")]
	public Transform headTarget;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftElbowTarget;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightElbowTarget;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform pelvisTarget;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C323C", Offset = "0x7C323C")]
	public Transform leftGrabPoint;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightGrabPoint;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C3274", Offset = "0x7C3274")]
	public float pelvisLerpWeight;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C328C", Offset = "0x7C328C")]
	public Animator bodyAnimator;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C32C4", Offset = "0x7C32C4")]
	public BipedIK ikComponent;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string leftInteractable;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string rightInteractable;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HandInteraction.AnimationMode leftHandAnimationMode;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private HandInteraction.AnimationMode rightHandAnimationMode;

	[Token(Token = "0x4000E4F")]
	private const string handParameterPrefix = "hand_";

	[Token(Token = "0x4000E50")]
	private const string interactableParameterPrefix = "int_";

	[Token(Token = "0x4000E51")]
	private const string leftParameterSuffix = "_L";

	[Token(Token = "0x4000E52")]
	private const string rightParameterSuffix = "_R";

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Parameter[] leftHandParameters;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Parameter[] rightHandParameters;

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xA642F8", Offset = "0xA642F8", VA = "0xA642F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xA64958", Offset = "0xA64958", VA = "0xA64958")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xA64B80", Offset = "0xA64B80", VA = "0xA64B80")]
	private void CopyTransform(Transform set, Transform get)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xA644E8", Offset = "0xA644E8", VA = "0xA644E8")]
	private void GetHandAnimationParameters()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xA65388", Offset = "0xA65388", VA = "0xA65388")]
	private void UpdateHandAnimatorParameters(HandInteraction hand, Parameter[] parameters, string suffix, ref string currentInteractable, ref HandInteraction.AnimationMode currentAnimationMode)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xA64C44", Offset = "0xA64C44", VA = "0xA64C44")]
	private void RotatePelvis()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xA659C4", Offset = "0xA659C4", VA = "0xA659C4")]
	private Vector3 CalculateCrossVector(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xA65AA0", Offset = "0xA65AA0", VA = "0xA65AA0")]
	private float CalculateDotProduct(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xA65B48", Offset = "0xA65B48", VA = "0xA65B48")]
	private void RotateTarget_LookForward(Transform target, Vector3 forwardRotation)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xA65CB0", Offset = "0xA65CB0", VA = "0xA65CB0")]
	public RigController()
	{
	}
}
[Token(Token = "0x200024F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAE3C", Offset = "0x7BAE3C")]
public class ActivateOnState : MonoBehaviour
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objToActivate;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProgressionWatcher watcher;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ProgressionTracker tracker;

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xA952A0", Offset = "0xA952A0", VA = "0xA952A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xA95304", Offset = "0xA95304", VA = "0xA95304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xA953A8", Offset = "0xA953A8", VA = "0xA953A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xA95460", Offset = "0xA95460", VA = "0xA95460")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xA9553C", Offset = "0xA9553C", VA = "0xA9553C")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xA95590", Offset = "0xA95590", VA = "0xA95590")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xA9566C", Offset = "0xA9566C", VA = "0xA9566C")]
	public ActivateOnState()
	{
	}
}
[Token(Token = "0x2000250")]
public class AdvanceStateOnConsoleActive : MonoBehaviour
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C32FC", Offset = "0x7C32FC")]
	public string stateToCheck;

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xA95B54", Offset = "0xA95B54", VA = "0xA95B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xA95C64", Offset = "0xA95C64", VA = "0xA95C64")]
	public AdvanceStateOnConsoleActive()
	{
	}
}
[Token(Token = "0x2000251")]
public class ArmHologramState : ProgressionState
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArmHologram hologram;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ArmHologramContent content;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private new bool isCurrentState;

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xA98EEC", Offset = "0xA98EEC", VA = "0xA98EEC", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xA98F50", Offset = "0xA98F50", VA = "0xA98F50", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xA98F58", Offset = "0xA98F58", VA = "0xA98F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xA98FA4", Offset = "0xA98FA4", VA = "0xA98FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xA9900C", Offset = "0xA9900C", VA = "0xA9900C")]
	public ArmHologramState()
	{
	}
}
[Token(Token = "0x2000252")]
public class BlankState : ProgressionState
{
	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool skipState;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xAA07B0", Offset = "0xAA07B0", VA = "0xAA07B0", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xAA07C4", Offset = "0xAA07C4", VA = "0xAA07C4")]
	public BlankState()
	{
	}
}
[Token(Token = "0x2000253")]
public class BossFightState : ProgressionState
{
	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BossBehaviour bossBehaviour;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Damageable boss;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject enableOnBossState;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool startBossHidden;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public DotType changeDotTypeTo;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CheckpointTrigger startingCheckpoint;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public StudioEventEmitter bgmEmitter;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool firstTimeInState;

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xAA2124", Offset = "0xAA2124", VA = "0xAA2124")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xAA2274", Offset = "0xAA2274", VA = "0xAA2274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xAA2324", Offset = "0xAA2324", VA = "0xAA2324")]
	public void EndBossState()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xAA2354", Offset = "0xAA2354", VA = "0xAA2354")]
	private void StartBossBehaviour()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xAA2414", Offset = "0xAA2414", VA = "0xAA2414", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xAA278C", Offset = "0xAA278C", VA = "0xAA278C", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xAA2850", Offset = "0xAA2850", VA = "0xAA2850")]
	public BossFightState()
	{
	}
}
[Token(Token = "0x2000254")]
public class CheckpointListener : MonoBehaviour
{
	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToChange;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xAAFC2C", Offset = "0xAAFC2C", VA = "0xAAFC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xAAFC34", Offset = "0xAAFC34", VA = "0xAAFC34")]
	public void ChangeObjects(bool active = true)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xAAFCE0", Offset = "0xAAFCE0", VA = "0xAAFCE0")]
	public CheckpointListener()
	{
	}
}
[Serializable]
[Token(Token = "0x2000255")]
public class CheckpointFlags
{
	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CheckpointTrigger point;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool showFlags;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7C3370", Offset = "0x7C3370")]
	public string addFlags;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7C3380", Offset = "0x7C3380")]
	public string removeFlags;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> flagsToAdd;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> flagsToRemove;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool savePoint;

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xAAFC24", Offset = "0xAAFC24", VA = "0xAAFC24")]
	public CheckpointFlags()
	{
	}
}
[Token(Token = "0x2000256")]
public delegate void CheckpointEvent(HashSet<string> currentFlags);
[Token(Token = "0x2000257")]
public class CheckpointManager : MonoBehaviour
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3390", Offset = "0x7C3390")]
	private static CheckpointManager <instance>k__BackingField;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowTriggeringPrevious;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CheckpointFlags> checkpoints;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C33B0", Offset = "0x7C33B0")]
	private int <currentCheckpointIndex>k__BackingField;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<string> savedFlags;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> externalFlags;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C33C0", Offset = "0x7C33C0")]
	private int[] <checkpointTriggerCount>k__BackingField;

	[Token(Token = "0x17000106")]
	public static CheckpointManager instance
	{
		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xA9C444", Offset = "0xA9C444", VA = "0xA9C444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC38", Offset = "0x7CFC38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xAAFCE8", Offset = "0xAAFCE8", VA = "0xAAFCE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC48", Offset = "0x7CFC48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public int currentCheckpointIndex
	{
		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xA9C494", Offset = "0xA9C494", VA = "0xA9C494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC78", Offset = "0x7CFC78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xAAFE90", Offset = "0xAAFE90", VA = "0xAAFE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC88", Offset = "0x7CFC88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public int[] checkpointTriggerCount
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xAAFE98", Offset = "0xAAFE98", VA = "0xAAFE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC98", Offset = "0x7CFC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xAAFEA0", Offset = "0xAAFEA0", VA = "0xAAFEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFCA8", Offset = "0x7CFCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event CheckpointEvent onCheckpointChange
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xAAFD40", Offset = "0xAAFD40", VA = "0xAAFD40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC58", Offset = "0x7CFC58")]
		add
		{
		}
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xAAFDE8", Offset = "0xAAFDE8", VA = "0xAAFDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFC68", Offset = "0x7CFC68")]
		remove
		{
		}
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xAAFEA8", Offset = "0xAAFEA8", VA = "0xAAFEA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xAB02F8", Offset = "0xAB02F8", VA = "0xAB02F8")]
	public void ReloadMostRecentCheckpoint()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xA9C49C", Offset = "0xA9C49C", VA = "0xA9C49C")]
	public void SetCheckpoint(int checkpointIndex, bool teleportDot = false, bool allowPrevious = false, bool clearUnsavedFlags = false)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xAB0604", Offset = "0xAB0604", VA = "0xAB0604")]
	public void AddFlag(string _flag)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xAAD22C", Offset = "0xAAD22C", VA = "0xAAD22C")]
	public void RemoveFlag(string _flag)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xAAC63C", Offset = "0xAAC63C", VA = "0xAAC63C")]
	public bool CheckForFlag(string _flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xAB030C", Offset = "0xAB030C", VA = "0xAB030C")]
	private void UpdateExternalFlags(int _index)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xAB00EC", Offset = "0xAB00EC", VA = "0xAB00EC")]
	private void SplitFlags(CheckpointFlags checkpointFlags)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xAB06DC", Offset = "0xAB06DC", VA = "0xAB06DC")]
	private void Debug_NextCheckpoint()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xAB06F4", Offset = "0xAB06F4", VA = "0xAB06F4")]
	private void Debug_PreviousCheckpoint()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xAB070C", Offset = "0xAB070C", VA = "0xAB070C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xAB07D8", Offset = "0xAB07D8", VA = "0xAB07D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xAB07FC", Offset = "0xAB07FC", VA = "0xAB07FC")]
	private void PrintFlags(string name, IEnumerable flags)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xAB0A00", Offset = "0xAB0A00", VA = "0xAB0A00")]
	public CheckpointManager()
	{
	}
}
[Token(Token = "0x2000258")]
public class CheckpointTrigger : MonoBehaviour
{
	[Token(Token = "0x2000617")]
	public enum GameType
	{
		[Token(Token = "0x4001E9F")]
		Any,
		[Token(Token = "0x4001EA0")]
		Racoon,
		[Token(Token = "0x4001EA1")]
		Bionite,
		[Token(Token = "0x4001EA2")]
		RealWorld
	}

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string checkpointFMODEvent;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameTV tvSource;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameType game;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnPosition;

	[Token(Token = "0x4000E7B")]
	private const string racoonFlag = "racoon";

	[Token(Token = "0x4000E7C")]
	private const string bioniteFlag = "bionite";

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CheckpointListener checkpointListener;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xAB0AB0", Offset = "0xAB0AB0", VA = "0xAB0AB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xAB0BA0", Offset = "0xAB0BA0", VA = "0xAB0BA0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xAB0D58", Offset = "0xAB0D58", VA = "0xAB0D58")]
	private void OnTriggerEnter2D(Collider2D col)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xAB0BE0", Offset = "0xAB0BE0", VA = "0xAB0BE0")]
	private void CheckCollision(GameObject obj)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xAB04E8", Offset = "0xAB04E8", VA = "0xAB04E8")]
	public void TriggerAnim()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xAB0D98", Offset = "0xAB0D98", VA = "0xAB0D98")]
	public CheckpointTrigger()
	{
	}
}
[Token(Token = "0x2000259")]
public class CreditsSceneSwitcherState : SceneSwitcherState
{
	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string secretNextLevel;

	[Token(Token = "0x17000109")]
	protected override string nextSceneToUse
	{
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xBF03C0", Offset = "0xBF03C0", VA = "0xBF03C0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xBF0400", Offset = "0xBF0400", VA = "0xBF0400")]
	public CreditsSceneSwitcherState()
	{
	}
}
[Token(Token = "0x200025A")]
public class CutsceneState : ProgressionState
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C33F0", Offset = "0x7C33F0")]
	public DialogueDropdown dialogue;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BalloonType balloonType;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C3454", Offset = "0x7C3454")]
	public CheckpointTrigger startingCheckpoint;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StudioEventEmitter bgmEmitter;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3464", Offset = "0x7C3464")]
	public AnnoyableCharacter annoyableCharacter;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnnoyableCharacter.State newCharState;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C349C", Offset = "0x7C349C")]
	public GamepadFlip gamepadFlip;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool shouldFlip;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C34D4", Offset = "0x7C34D4")]
	public DotType changeDotTypeTo;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool advanceStateOnEnd;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool startedCutscene;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xBF0B38", Offset = "0xBF0B38", VA = "0xBF0B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xBF0C78", Offset = "0xBF0C78", VA = "0xBF0C78")]
	private void StartCutscene()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xBF0BFC", Offset = "0xBF0BFC", VA = "0xBF0BFC")]
	private void StopCutscene()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xBF0DB8", Offset = "0xBF0DB8", VA = "0xBF0DB8", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xBF1038", Offset = "0xBF1038", VA = "0xBF1038", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xBF10E0", Offset = "0xBF10E0", VA = "0xBF10E0")]
	public CutsceneState()
	{
	}
}
[Token(Token = "0x200025B")]
public class DemoRoutingState : ProgressionState
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ProgressionState buildState;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ProgressionState demoState;

	[Token(Token = "0x1700010A")]
	private ProgressionState intendedState
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xB42424", Offset = "0xB42424", VA = "0xB42424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xB4242C", Offset = "0xB4242C", VA = "0xB4242C", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xB42478", Offset = "0xB42478", VA = "0xB42478", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xB424B4", Offset = "0xB424B4", VA = "0xB424B4")]
	public DemoRoutingState()
	{
	}
}
[Token(Token = "0x200025C")]
public class DialogueMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C34E4", Offset = "0x7C34E4")]
	[SerializeField]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C34E4", Offset = "0x7C34E4")]
	private DialogueDropdown _dialogue;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BalloonType _balloonType;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C358C", Offset = "0x7C358C")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x1700010B")]
	public string dialogueID
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xB44C44", Offset = "0xB44C44", VA = "0xB44C44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public BalloonType balloonType
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xB44C70", Offset = "0xB44C70", VA = "0xB44C70")]
		get
		{
			return default(BalloonType);
		}
	}

	[Token(Token = "0x1700010D")]
	public PropertyName id
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xB44FBC", Offset = "0xB44FBC", VA = "0xB44FBC", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x1700010E")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xB44FC4", Offset = "0xB44FC4", VA = "0xB44FC4", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xB44FD8", Offset = "0xB44FD8", VA = "0xB44FD8")]
	public DialogueMarker()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BAEA0", Offset = "0x7BAEA0")]
public class DialogueTrack : TrackAsset
{
	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xB45ABC", Offset = "0xB45ABC", VA = "0xB45ABC")]
	public DialogueTrack()
	{
	}
}
[Token(Token = "0x200025E")]
public class DialogueTrigger : MonoBehaviour
{
	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C35E8", Offset = "0x7C35E8")]
	public DialogueDropdown DialogueID;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BalloonType balloonType;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string addCheckpointFlag;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool advanceProgressionState;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool startedCutscene;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xB45B24", Offset = "0xB45B24", VA = "0xB45B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xB45CB8", Offset = "0xB45CB8", VA = "0xB45CB8")]
	private bool CheckExistingFlag()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xB45D1C", Offset = "0xB45D1C", VA = "0xB45D1C")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xB45EA8", Offset = "0xB45EA8", VA = "0xB45EA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xB45DB0", Offset = "0xB45DB0", VA = "0xB45DB0")]
	private void StartCutscene()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xB45F3C", Offset = "0xB45F3C", VA = "0xB45F3C")]
	public DialogueTrigger()
	{
	}
}
[Token(Token = "0x200025F")]
public class FMODParameterMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C364C", Offset = "0x7C364C")]
	[SerializeField]
	private string _parameterName;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _parameterValue;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C36A8", Offset = "0x7C36A8")]
	[SerializeField]
	private bool _randomizeDialogueParam;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C36F4", Offset = "0x7C36F4")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	[SerializeField]
	private bool emitInEditor;

	[Token(Token = "0x1700010F")]
	public string parameterName
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xB599D0", Offset = "0xB599D0", VA = "0xB599D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	public float parameterValue
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xB599D8", Offset = "0xB599D8", VA = "0xB599D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000111")]
	public bool randomizeParam
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xB599E0", Offset = "0xB599E0", VA = "0xB599E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000112")]
	public PropertyName id
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xB599E8", Offset = "0xB599E8", VA = "0xB599E8", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x17000113")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xB599F0", Offset = "0xB599F0", VA = "0xB599F0", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xB59A0C", Offset = "0xB59A0C", VA = "0xB59A0C")]
	public FMODParameterMarker()
	{
	}
}
[Token(Token = "0x2000260")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BAF04", Offset = "0x7BAF04")]
public class FMODParameterTrack : TrackAsset
{
	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xB59A14", Offset = "0xB59A14", VA = "0xB59A14")]
	public FMODParameterTrack()
	{
	}
}
[Token(Token = "0x2000261")]
public class GameStateMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3760", Offset = "0x7C3760")]
	[SerializeField]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C3760", Offset = "0x7C3760")]
	private StateDropdown _state;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C37F8", Offset = "0x7C37F8")]
	[SerializeField]
	private bool _pauseBeforeChanging;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3844", Offset = "0x7C3844")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x17000114")]
	public PropertyName id
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xAD53FC", Offset = "0xAD53FC", VA = "0xAD53FC", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x17000115")]
	public string stateName
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xAD5404", Offset = "0xAD5404", VA = "0xAD5404")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	public bool pauseBeforeChanging
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xAD5430", Offset = "0xAD5430", VA = "0xAD5430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000117")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xAD5438", Offset = "0xAD5438", VA = "0xAD5438", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xAD544C", Offset = "0xAD544C", VA = "0xAD544C")]
	public GameStateMarker()
	{
	}
}
[Token(Token = "0x2000262")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BAF68", Offset = "0x7BAF68")]
public class GameStateTrack : TrackAsset
{
	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xAD545C", Offset = "0xAD545C", VA = "0xAD545C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xAD54C4", Offset = "0xAD54C4", VA = "0xAD54C4")]
	public GameStateTrack()
	{
	}
}
[Token(Token = "0x2000263")]
public class GenericMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C38A0", Offset = "0x7C38A0")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x17000118")]
	public PropertyName id
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xAD6828", Offset = "0xAD6828", VA = "0xAD6828", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x17000119")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xAD6830", Offset = "0xAD6830", VA = "0xAD6830", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xAD6844", Offset = "0xAD6844", VA = "0xAD6844")]
	public GenericMarker()
	{
	}
}
[Token(Token = "0x2000264")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BAFCC", Offset = "0x7BAFCC")]
public class GenericTimelineFastForward : MonoBehaviour
{
	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector timeline;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool allow;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool oldFF;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xAD6AA8", Offset = "0xAD6AA8", VA = "0xAD6AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xAD6B68", Offset = "0xAD6B68", VA = "0xAD6B68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xAD6C00", Offset = "0xAD6C00", VA = "0xAD6C00")]
	private void OnTimelinePlay(PlayableDirector obj)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xAD6CC4", Offset = "0xAD6CC4", VA = "0xAD6CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xAD6D14", Offset = "0xAD6D14", VA = "0xAD6D14")]
	private void CheckFastForward()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xAD6DE8", Offset = "0xAD6DE8", VA = "0xAD6DE8")]
	private void ToggleFastForward()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xAD6C04", Offset = "0xAD6C04", VA = "0xAD6C04")]
	private void UpdateSpeed()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xAD6F10", Offset = "0xAD6F10", VA = "0xAD6F10")]
	public GenericTimelineFastForward()
	{
	}
}
[Token(Token = "0x2000265")]
public class HitReactionMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C38FC", Offset = "0x7C38FC")]
	[SerializeField]
	private RWCharacterHitReaction.Reaction _reaction;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3948", Offset = "0x7C3948")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x1700011A")]
	public RWCharacterHitReaction.Reaction reaction
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xAE3DA4", Offset = "0xAE3DA4", VA = "0xAE3DA4")]
		get
		{
			return default(RWCharacterHitReaction.Reaction);
		}
	}

	[Token(Token = "0x1700011B")]
	public PropertyName id
	{
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xAE3DAC", Offset = "0xAE3DAC", VA = "0xAE3DAC", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x1700011C")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xAE3DB4", Offset = "0xAE3DB4", VA = "0xAE3DB4", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xAE3DC8", Offset = "0xAE3DC8", VA = "0xAE3DC8")]
	public HitReactionMarker()
	{
	}
}
[Token(Token = "0x2000266")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BB030", Offset = "0x7BB030")]
public class HitReactionTrack : TrackAsset
{
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xAE3DD0", Offset = "0xAE3DD0", VA = "0xAE3DD0")]
	public HitReactionTrack()
	{
	}
}
[Token(Token = "0x2000267")]
public class HologramInputMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C39A4", Offset = "0x7C39A4")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x1700011D")]
	public PropertyName id
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xAE3E38", Offset = "0xAE3E38", VA = "0xAE3E38", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x1700011E")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xAE3E40", Offset = "0xAE3E40", VA = "0xAE3E40", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xAE3E54", Offset = "0xAE3E54", VA = "0xAE3E54")]
	public HologramInputMarker()
	{
	}
}
[Token(Token = "0x2000268")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BB094", Offset = "0x7BB094")]
public class HologramInputTrack : TrackAsset
{
	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAE3E5C", Offset = "0xAE3E5C", VA = "0xAE3E5C")]
	public HologramInputTrack()
	{
	}
}
[Token(Token = "0x2000269")]
public class InitializeStateListMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x1700011F")]
	public PropertyName id
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xAF0E74", Offset = "0xAF0E74", VA = "0xAF0E74", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x17000120")]
	public NotificationFlags flags
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xAF0E7C", Offset = "0xAF0E7C", VA = "0xAF0E7C", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAF0E90", Offset = "0xAF0E90", VA = "0xAF0E90")]
	public InitializeStateListMarker()
	{
	}
}
[Token(Token = "0x200026A")]
public class Level6IntroState : ProgressionState
{
	[Token(Token = "0x2000618")]
	private enum IntroStates
	{
		[Token(Token = "0x4001EA4")]
		DavidGreets,
		[Token(Token = "0x4001EA5")]
		DavidAsksForSyncLoop,
		[Token(Token = "0x4001EA6")]
		DavidForcesSync,
		[Token(Token = "0x4001EA7")]
		PlayerSynced
	}

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dotHead;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dotBody;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform david;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform glitch;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C3A20", Offset = "0x7C3A20")]
	public StateDropdown armHologramState;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ArmHologram armHologram;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float start;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 vel;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 dotPos;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxSpeed;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float minEvilDist;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject evilPrefab;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float spawnRadius;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float vectorDotCheck;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<GameObject> evil;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int evilCount;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C3A84", Offset = "0x7C3A84")]
	public PlayableDirector davidAskingForSyncLoop;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PlayableDirector davidForcesSync;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int askingSyncMaxLoops;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int askingSyncLoopCount;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool allowPolygonMovement;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private IntroStates currentState;

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x9801E0", Offset = "0x9801E0", VA = "0x9801E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x980214", Offset = "0x980214", VA = "0x980214")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x98038C", Offset = "0x98038C", VA = "0x98038C", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x9803C8", Offset = "0x9803C8", VA = "0x9803C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x980678", Offset = "0x980678", VA = "0x980678")]
	public void SpawnPolygons_Event()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x980988", Offset = "0x980988", VA = "0x980988")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x980B1C", Offset = "0x980B1C", VA = "0x980B1C")]
	public Level6IntroState()
	{
	}
}
[Token(Token = "0x200026B")]
public class Level6IntroStateDavidAnimEvent : MonoBehaviour
{
	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level6IntroState state;

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x980B54", Offset = "0x980B54", VA = "0x980B54")]
	private void DavidFearsForDot()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x980B80", Offset = "0x980B80", VA = "0x980B80")]
	public Level6IntroStateDavidAnimEvent()
	{
	}
}
[Token(Token = "0x200026C")]
public class LevelClearState : ProgressionState, INotificationReceiver
{
	[Token(Token = "0x2000619")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFB4", Offset = "0x7BCFB4")]
	private sealed class <ResumeTimelineAfterInput>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelClearState <>4__this;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayableGraph graph;

		[Token(Token = "0x1700041C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x984314", Offset = "0x984314", VA = "0x984314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x984384", Offset = "0x984384", VA = "0x984384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x9841D0", Offset = "0x9841D0", VA = "0x9841D0")]
		[DebuggerHidden]
		public <ResumeTimelineAfterInput>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x98420C", Offset = "0x98420C", VA = "0x98420C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x984210", Offset = "0x984210", VA = "0x984210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x98431C", Offset = "0x98431C", VA = "0x98431C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelClearWindow window;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool waitingInput;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool endLevelClear;

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x983CFC", Offset = "0x983CFC", VA = "0x983CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x983E90", Offset = "0x983E90", VA = "0x983E90", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x983F34", Offset = "0x983F34", VA = "0x983F34")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x983F3C", Offset = "0x983F3C", VA = "0x983F3C", Slot = "6")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x98409C", Offset = "0x98409C", VA = "0x98409C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFCB8", Offset = "0x7CFCB8")]
	private IEnumerator ResumeTimelineAfterInput(PlayableGraph graph)
	{
		return null;
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x9841FC", Offset = "0x9841FC", VA = "0x9841FC")]
	public LevelClearState()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x984204", Offset = "0x984204", VA = "0x984204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD1C", Offset = "0x7CFD1C")]
	private bool <ResumeTimelineAfterInput>b__7_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200026D")]
public class LevelPersistence : MonoBehaviour
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3A94", Offset = "0x7C3A94")]
	public int level;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int pixels;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int[] score;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float time;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3ACC", Offset = "0x7C3ACC")]
	private static int <currentLevel>k__BackingField;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool resetState;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3ADC", Offset = "0x7C3ADC")]
	private static int <currentlyPlayingLevel>k__BackingField;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool startedAtBoss;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int previousLevel;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3AEC", Offset = "0x7C3AEC")]
	private static bool <levelCleared>k__BackingField;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LevelMilestones.Section startSection;

	[Token(Token = "0x17000121")]
	public static int currentLevel
	{
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x982F9C", Offset = "0x982F9C", VA = "0x982F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD2C", Offset = "0x7CFD2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x987054", Offset = "0x987054", VA = "0x987054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD3C", Offset = "0x7CFD3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public static int currentlyPlayingLevel
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x982304", Offset = "0x982304", VA = "0x982304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD4C", Offset = "0x7CFD4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x9870C0", Offset = "0x9870C0", VA = "0x9870C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD5C", Offset = "0x7CFD5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public static bool levelCleared
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x98712C", Offset = "0x98712C", VA = "0x98712C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD6C", Offset = "0x7CFD6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x987194", Offset = "0x987194", VA = "0x987194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD7C", Offset = "0x7CFD7C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x983B5C", Offset = "0x983B5C", VA = "0x983B5C")]
	public static string GetTimeAsString()
	{
		return null;
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x983C60", Offset = "0x983C60", VA = "0x983C60")]
	public static int CalculateTotalScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x987204", Offset = "0x987204", VA = "0x987204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x9874DC", Offset = "0x9874DC", VA = "0x9874DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x987578", Offset = "0x987578", VA = "0x987578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x987634", Offset = "0x987634", VA = "0x987634")]
	private bool UncontrollableDot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x9873B4", Offset = "0x9873B4", VA = "0x9873B4")]
	private static void ClearValues()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x9874E0", Offset = "0x9874E0", VA = "0x9874E0")]
	private void SaveCurrentLevel()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x987750", Offset = "0x987750", VA = "0x987750")]
	public static void UnlockSection(LevelMilestones.Section section)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x987830", Offset = "0x987830", VA = "0x987830")]
	public static void LevelClear()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x987910", Offset = "0x987910", VA = "0x987910")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x9879A4", Offset = "0x9879A4", VA = "0x9879A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x987A38", Offset = "0x987A38", VA = "0x987A38")]
	private void ProgressionStateChanged(int stateIndex, string stateName)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x987AF4", Offset = "0x987AF4", VA = "0x987AF4")]
	public LevelPersistence()
	{
	}
}
[Token(Token = "0x200026E")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BB0F8", Offset = "0x7BB0F8")]
public class MarkerReceiverTrack : TrackAsset
{
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xA31D5C", Offset = "0xA31D5C", VA = "0xA31D5C")]
	public MarkerReceiverTrack()
	{
	}
}
[Token(Token = "0x200026F")]
public class PostCreditsLookBehindState : ProgressionState
{
	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointOfInterest;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxAngleInDegrees;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool done;

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xB97784", Offset = "0xB97784", VA = "0xB97784", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xB977B4", Offset = "0xB977B4", VA = "0xB977B4", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xB977E4", Offset = "0xB977E4", VA = "0xB977E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xB97B0C", Offset = "0xB97B0C", VA = "0xB97B0C")]
	public PostCreditsLookBehindState()
	{
	}
}
[Token(Token = "0x2000270")]
public abstract class Progressable : MonoBehaviour
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3AFC", Offset = "0x7C3AFC")]
	public bool okIWill;

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xB98800", Offset = "0xB98800", VA = "0xB98800", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xB98804", Offset = "0xB98804", VA = "0xB98804", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E6F")]
	public abstract void ApplyState(int stateIndex, string stateName);

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xB98808", Offset = "0xB98808", VA = "0xB98808")]
	protected Progressable()
	{
	}
}
[Token(Token = "0x2000271")]
public enum GameStates
{
	[Token(Token = "0x4000ED5")]
	Gameplay,
	[Token(Token = "0x4000ED6")]
	Cutscene,
	[Token(Token = "0x4000ED7")]
	Boss
}
[Token(Token = "0x2000272")]
public delegate void ChangeStateEvent(int stateIndex, string stateName);
[Token(Token = "0x2000273")]
[ExecuteInEditMode]
public class ProgressionManager : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x200061A")]
	public delegate void LevelClearDelegate();

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3B34", Offset = "0x7C3B34")]
	private static ProgressionManager <instance>k__BackingField;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3B54", Offset = "0x7C3B54")]
	private int <currentState>k__BackingField;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameStates gameStates;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector lvlTimeline;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, double> timelineStateTimes;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VFXManager vfxManager;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StateList stateList;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Dictionary<string, int> stateNames;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string startAtStateRequest;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly List<TrackAsset> trackReferences;

	[Token(Token = "0x17000124")]
	public static ProgressionManager instance
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xB8EC30", Offset = "0xB8EC30", VA = "0xB8EC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD8C", Offset = "0x7CFD8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xB98A00", Offset = "0xB98A00", VA = "0xB98A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFD9C", Offset = "0x7CFD9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public int currentState
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xB98C58", Offset = "0xB98C58", VA = "0xB98C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDCC", Offset = "0x7CFDCC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xB98C60", Offset = "0xB98C60", VA = "0xB98C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDDC", Offset = "0x7CFDDC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public string currentStateName
	{
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xB98C68", Offset = "0xB98C68", VA = "0xB98C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public ProgressionState currentStateManager
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xB98D54", Offset = "0xB98D54", VA = "0xB98D54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000014")]
	public static event ChangeStateEvent onChangedState
	{
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xB98A70", Offset = "0xB98A70", VA = "0xB98A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDAC", Offset = "0x7CFDAC")]
		add
		{
		}
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xB98B64", Offset = "0xB98B64", VA = "0xB98B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDBC", Offset = "0x7CFDBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event LevelClearDelegate levelClearEvent
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xB99C60", Offset = "0xB99C60", VA = "0xB99C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDEC", Offset = "0x7CFDEC")]
		add
		{
		}
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xB99D54", Offset = "0xB99D54", VA = "0xB99D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFDFC", Offset = "0x7CFDFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xB98E14", Offset = "0xB98E14", VA = "0xB98E14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xB994E4", Offset = "0xB994E4", VA = "0xB994E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xB9972C", Offset = "0xB9972C", VA = "0xB9972C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xB997B0", Offset = "0xB997B0", VA = "0xB997B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xB997BC", Offset = "0xB997BC", VA = "0xB997BC")]
	private void DebugNextState()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xB99664", Offset = "0xB99664", VA = "0xB99664")]
	private void StartSession()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xB993A8", Offset = "0xB993A8", VA = "0xB993A8")]
	private void CacheStateNames()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xB999DC", Offset = "0xB999DC", VA = "0xB999DC")]
	public int GetStateIndex(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xB98C70", Offset = "0xB98C70", VA = "0xB98C70")]
	public string GetStateName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xB98D5C", Offset = "0xB98D5C", VA = "0xB98D5C")]
	public ProgressionState GetStateManager(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xB997D0", Offset = "0xB997D0", VA = "0xB997D0")]
	public void ChangeStateTo(int stateIndex, bool firstInSession = false, bool timelineFallback = false)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xB99C0C", Offset = "0xB99C0C", VA = "0xB99C0C")]
	public void ChangeStateTo(string stateName, bool firstInSession = false, bool timelineFallback = false)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xB99C4C", Offset = "0xB99C4C", VA = "0xB99C4C")]
	public void NextState()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xB99E48", Offset = "0xB99E48", VA = "0xB99E48")]
	public static void StoreTimelineTrack(TrackAsset trackRef)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xB98FA4", Offset = "0xB98FA4", VA = "0xB98FA4")]
	private void CacheTimelineStateTimes()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xB99A98", Offset = "0xB99A98", VA = "0xB99A98")]
	public void UpdateTimeline(bool fallback = false)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xB99ED4", Offset = "0xB99ED4", VA = "0xB99ED4", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xB9A020", Offset = "0xB9A020", VA = "0xB9A020")]
	public ProgressionManager()
	{
	}
}
[Token(Token = "0x2000274")]
public class ProgressionRefSource : StringRefSource
{
	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xB9A384", Offset = "0xB9A384", VA = "0xB9A384", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xB9A584", Offset = "0xB9A584", VA = "0xB9A584")]
	public ProgressionRefSource()
	{
	}
}
[Token(Token = "0x2000275")]
public abstract class ProgressionState : MonoBehaviour
{
	[Token(Token = "0x200061B")]
	public enum LevelPersistenceEvent
	{
		[Token(Token = "0x4001EAD")]
		None,
		[Token(Token = "0x4001EAE")]
		UnlockMain,
		[Token(Token = "0x4001EAF")]
		UnlockBoss,
		[Token(Token = "0x4001EB0")]
		LevelClear
	}

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3B74", Offset = "0x7C3B74")]
	private int <stateIndex>k__BackingField;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector stateTimeline;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelPersistenceEvent levelPersistenceEvent;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AchievmentGeneric achievment;

	[Token(Token = "0x17000128")]
	public int stateIndex
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xB9A58C", Offset = "0xB9A58C", VA = "0xB9A58C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE0C", Offset = "0x7CFE0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xB9965C", Offset = "0xB9965C", VA = "0xB9965C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE1C", Offset = "0x7CFE1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public bool isCurrentState
	{
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xB979B0", Offset = "0xB979B0", VA = "0xB979B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	protected ProgressionManager progression
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xB9A594", Offset = "0xB9A594", VA = "0xB9A594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E98")]
	public abstract void HasBegun(string stateName, bool firstInSession);

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xB9A5F0", Offset = "0xB9A5F0", VA = "0xB9A5F0", Slot = "5")]
	public virtual void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xB9A5F4", Offset = "0xB9A5F4", VA = "0xB9A5F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xB97A30", Offset = "0xB97A30", VA = "0xB97A30")]
	protected void MoveToNextState()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xB97B1C", Offset = "0xB97B1C", VA = "0xB97B1C")]
	protected ProgressionState()
	{
	}
}
[Token(Token = "0x2000276")]
public class ProgressionTracker : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	public enum Mode
	{
		[Token(Token = "0x4001EB2")]
		String,
		[Token(Token = "0x4001EB3")]
		Bool,
		[Token(Token = "0x4001EB4")]
		Int,
		[Token(Token = "0x4001EB5")]
		Float,
		[Token(Token = "0x4001EB6")]
		Enum
	}

	[Serializable]
	[Token(Token = "0x200061D")]
	public struct StateValue
	{
		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string state;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string value;

		[Token(Token = "0x1700041E")]
		public string comparableState
		{
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x864ED0", Offset = "0x864ED0", VA = "0x864ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xB9AA5C", Offset = "0xB9AA5C", VA = "0xB9AA5C")]
		public static string GetComparableState(string state)
		{
			return null;
		}
	}

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string enumName;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<StateValue> values;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Dictionary<string, string> valueByState;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3B94", Offset = "0x7C3B94")]
	private string <valueAsString>k__BackingField;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3BA4", Offset = "0x7C3BA4")]
	private bool <valueAsBool>k__BackingField;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3BB4", Offset = "0x7C3BB4")]
	private int <valueAsInt>k__BackingField;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3BC4", Offset = "0x7C3BC4")]
	private float <valueAsFloat>k__BackingField;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3BD4", Offset = "0x7C3BD4")]
	private int <valueAsEnum>k__BackingField;

	[Token(Token = "0x1700012B")]
	public string valueAsString
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xB9ADA8", Offset = "0xB9ADA8", VA = "0xB9ADA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE4C", Offset = "0x7CFE4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xB9AADC", Offset = "0xB9AADC", VA = "0xB9AADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE5C", Offset = "0x7CFE5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public bool valueAsBool
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xB9ADB0", Offset = "0xB9ADB0", VA = "0xB9ADB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE6C", Offset = "0x7CFE6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xB9ABC8", Offset = "0xB9ABC8", VA = "0xB9ABC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE7C", Offset = "0x7CFE7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public int valueAsInt
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xB9ADB8", Offset = "0xB9ADB8", VA = "0xB9ADB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE8C", Offset = "0x7CFE8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xB9AC08", Offset = "0xB9AC08", VA = "0xB9AC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE9C", Offset = "0x7CFE9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float valueAsFloat
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xB9ADC0", Offset = "0xB9ADC0", VA = "0xB9ADC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFEAC", Offset = "0x7CFEAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xB9AC48", Offset = "0xB9AC48", VA = "0xB9AC48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFEBC", Offset = "0x7CFEBC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public int valueAsEnum
	{
		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xB9ADC8", Offset = "0xB9ADC8", VA = "0xB9ADC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFECC", Offset = "0x7CFECC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xB9AC50", Offset = "0xB9AC50", VA = "0xB9AC50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFEDC", Offset = "0x7CFEDC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<ProgressionTracker> onValueUpdate
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xB9AC58", Offset = "0xB9AC58", VA = "0xB9AC58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE2C", Offset = "0x7CFE2C")]
		add
		{
		}
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xB9AD00", Offset = "0xB9AD00", VA = "0xB9AD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFE3C", Offset = "0x7CFE3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xB9A658", Offset = "0xB9A658", VA = "0xB9A658")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xB9A784", Offset = "0xB9A784", VA = "0xB9A784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xB9A9CC", Offset = "0xB9A9CC", VA = "0xB9A9CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xB9A84C", Offset = "0xB9A84C", VA = "0xB9A84C")]
	private void OnChangedState(int index, string state)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xB9AAE4", Offset = "0xB9AAE4", VA = "0xB9AAE4")]
	public static bool ParseAsBool(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xB9ABD4", Offset = "0xB9ABD4", VA = "0xB9ABD4")]
	public static int ParseAsInt(string value)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xB9AC10", Offset = "0xB9AC10", VA = "0xB9AC10")]
	public static float ParseAsFloat(string value)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xB9ADD0", Offset = "0xB9ADD0", VA = "0xB9ADD0")]
	public ProgressionTracker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000277")]
public class AllowAtState
{
	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool allowAtState;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string stateName;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xA961B8", Offset = "0xA961B8", VA = "0xA961B8")]
	public AllowAtState()
	{
	}
}
[Token(Token = "0x2000278")]
public class ProgressionWatcher : MonoBehaviour
{
	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AllowAtState> allowAtStates;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentStateIndex;

	[Token(Token = "0x17000130")]
	public bool allowedAtCurrentState
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xB9B1B4", Offset = "0xB9B1B4", VA = "0xB9B1B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xB9B230", Offset = "0xB9B230", VA = "0xB9B230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xB9B2C0", Offset = "0xB9B2C0", VA = "0xB9B2C0")]
	public ProgressionWatcher()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xB9B33C", Offset = "0xB9B33C", VA = "0xB9B33C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFEEC", Offset = "0x7CFEEC")]
	private void <Awake>b__4_0(int stateIndex, string stateName)
	{
	}
}
[Token(Token = "0x2000279")]
public delegate void ReloadEvent();
[Token(Token = "0x200027A")]
public class RespawnManager : MonoBehaviour
{
	[Token(Token = "0x200061E")]
	private class SaveData
	{
		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int checkpointIndex;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DotType dotType;

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xA63088", Offset = "0xA63088", VA = "0xA63088")]
		public SaveData()
		{
		}
	}

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3C04", Offset = "0x7C3C04")]
	private static bool <inGameInitialized>k__BackingField;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SaveData sceneData;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string dotSpawnFMODEvent;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string dotSpawnFMODEventStatic;

	[Token(Token = "0x17000131")]
	public static bool inGameInitialized
	{
		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xA629F8", Offset = "0xA629F8", VA = "0xA629F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF3C", Offset = "0x7CFF3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xA62A48", Offset = "0xA62A48", VA = "0xA62A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF4C", Offset = "0x7CFF4C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event ReloadEvent onReloadedGame
	{
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xA62888", Offset = "0xA62888", VA = "0xA62888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFEFC", Offset = "0x7CFEFC")]
		add
		{
		}
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xA62940", Offset = "0xA62940", VA = "0xA62940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF0C", Offset = "0x7CFF0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ReloadEvent onFinishedReloadingGame
	{
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xA5F9AC", Offset = "0xA5F9AC", VA = "0xA5F9AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF1C", Offset = "0x7CFF1C")]
		add
		{
		}
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xA5FD70", Offset = "0xA5FD70", VA = "0xA5FD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF2C", Offset = "0x7CFF2C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xA62AA0", Offset = "0xA62AA0", VA = "0xA62AA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xA62AF8", Offset = "0xA62AF8", VA = "0xA62AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xA62AFC", Offset = "0xA62AFC", VA = "0xA62AFC")]
	private bool CheckMissingInstances()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xA62DD4", Offset = "0xA62DD4", VA = "0xA62DD4")]
	public static void InGame_StartNewGame()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xA62F28", Offset = "0xA62F28", VA = "0xA62F28")]
	public static void InGame_LoadGame(bool fromNewGame = false)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xA62E70", Offset = "0xA62E70", VA = "0xA62E70")]
	private static SaveData InGame_GetNewGameData()
	{
		return null;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xA63090", Offset = "0xA63090", VA = "0xA63090")]
	public static void SaveCurrentData()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xA6324C", Offset = "0xA6324C", VA = "0xA6324C")]
	public static void ReloadDotInfo(bool diedFromRWBoss)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xA635A8", Offset = "0xA635A8", VA = "0xA635A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xA635F8", Offset = "0xA635F8", VA = "0xA635F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xA63678", Offset = "0xA63678", VA = "0xA63678")]
	public RespawnManager()
	{
	}
}
[Token(Token = "0x200027B")]
public class SceneSwitcherState : ProgressionState
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string transition;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string nextScene;

	[Token(Token = "0x17000132")]
	public bool hasTransition
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xA6CEF4", Offset = "0xA6CEF4", VA = "0xA6CEF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	protected virtual string nextSceneToUse
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xA6CF18", Offset = "0xA6CF18", VA = "0xA6CF18", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xA6CF20", Offset = "0xA6CF20", VA = "0xA6CF20", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xA6D0D8", Offset = "0xA6D0D8", VA = "0xA6D0D8")]
	public void ReturnToFirstScene()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xA6D138", Offset = "0xA6D138", VA = "0xA6D138")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xA6D298", Offset = "0xA6D298", VA = "0xA6D298")]
	public SceneSwitcherState()
	{
	}
}
[Token(Token = "0x200027C")]
public class SetProgressionFlag : MonoBehaviour
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string flag;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool add;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xA704AC", Offset = "0xA704AC", VA = "0xA704AC")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xA705BC", Offset = "0xA705BC", VA = "0xA705BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xA7054C", Offset = "0xA7054C", VA = "0xA7054C")]
	private void SetFlag()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xA7065C", Offset = "0xA7065C", VA = "0xA7065C")]
	public SetProgressionFlag()
	{
	}
}
[Token(Token = "0x200027D")]
public class SkipCutsceneButton : MonoBehaviour
{
	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject skipButton;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer inputIcon;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Handedness allowTriggerByHand;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Button untrackedTriggerButton;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3C24", Offset = "0x7C3C24")]
	public string animBool_Allow;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string animBool_Press;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string skippingLoopEvent;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EventInstance skippingLoopInstance;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool handTrigger;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isPlayingEvent;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool failedToCreateEventInstance;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xA72868", Offset = "0xA72868", VA = "0xA72868")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xA72920", Offset = "0xA72920", VA = "0xA72920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xA72994", Offset = "0xA72994", VA = "0xA72994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xA72A08", Offset = "0xA72A08", VA = "0xA72A08")]
	private void OnToggleAllow(bool allow)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xA72B8C", Offset = "0xA72B8C", VA = "0xA72B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xA72AC4", Offset = "0xA72AC4", VA = "0xA72AC4")]
	private void UpdateLoopingEvent(bool isSkipping)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xA72D2C", Offset = "0xA72D2C", VA = "0xA72D2C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xA72E20", Offset = "0xA72E20", VA = "0xA72E20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xA72D34", Offset = "0xA72D34", VA = "0xA72D34")]
	private void CheckTrigger(Collider col, bool triggerEnter)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xA72E28", Offset = "0xA72E28", VA = "0xA72E28")]
	public SkipCutsceneButton()
	{
	}
}
[Serializable]
[Token(Token = "0x200027E")]
public class StateDropdown : StringDropdown
{
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xA77534", Offset = "0xA77534", VA = "0xA77534")]
	public StateDropdown()
	{
	}
}
[Serializable]
[Token(Token = "0x200027F")]
public class StateList
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StateEntry[] list;

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xA7760C", Offset = "0xA7760C", VA = "0xA7760C")]
	public StateList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000280")]
public class StateEntry
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string state;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressionState progressionState;

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xA77604", Offset = "0xA77604", VA = "0xA77604")]
	public StateEntry()
	{
	}
}
[Token(Token = "0x2000281")]
public abstract class TimelineMarkerReceiver : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xA87D8C", Offset = "0xA87D8C", VA = "0xA87D8C", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xA87E78", Offset = "0xA87E78", VA = "0xA87E78", Slot = "5")]
	protected virtual void OnMarkerNotification(Playable timelinePlayable)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xA87E7C", Offset = "0xA87E7C", VA = "0xA87E7C")]
	protected TimelineMarkerReceiver()
	{
	}
}
[Token(Token = "0x2000282")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB16C", Offset = "0x7BB16C")]
public class TimelineState : ProgressionState
{
	[Token(Token = "0x200061F")]
	public enum ResumeType
	{
		[Token(Token = "0x4001EBC")]
		Percentage,
		[Token(Token = "0x4001EBD")]
		SecondsBeforeEnd,
		[Token(Token = "0x4001EBE")]
		ActualTime
	}

	[Token(Token = "0x2000620")]
	public enum TimelinePlayingState
	{
		[Token(Token = "0x4001EC0")]
		Idle,
		[Token(Token = "0x4001EC1")]
		Playing,
		[Token(Token = "0x4001EC2")]
		Paused
	}

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SignalAsset timelineEndSignal;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playTimelineOnState;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool stopTimelineOnEnded;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool moveToNextStateOnStopTimeline;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool prePlay;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool setStateAsCutscene;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimelineSource source;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> objectsToDeactivate;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3C6C", Offset = "0x7C3C6C")]
	public bool allowSkip;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3CA4", Offset = "0x7C3CA4")]
	private TimelinePlayingState <playingState>k__BackingField;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool timelinePlaying;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private new bool isCurrentState;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool stateEnded;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool skippedOnce;

	[Token(Token = "0x17000134")]
	public TimelinePlayingState playingState
	{
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xA88D64", Offset = "0xA88D64", VA = "0xA88D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF5C", Offset = "0x7CFF5C")]
		get
		{
			return default(TimelinePlayingState);
		}
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xA88D6C", Offset = "0xA88D6C", VA = "0xA88D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF6C", Offset = "0x7CFF6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xA88D74", Offset = "0xA88D74", VA = "0xA88D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xA89060", Offset = "0xA89060", VA = "0xA89060", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xA89380", Offset = "0xA89380", VA = "0xA89380", Slot = "5")]
	public override void HasEnded(bool isReloadingState)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xA893D8", Offset = "0xA893D8", VA = "0xA893D8")]
	public void TimelineEnded_Event()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xA894C4", Offset = "0xA894C4", VA = "0xA894C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xA895C4", Offset = "0xA895C4", VA = "0xA895C4")]
	private void OnToggleFastForward(bool allow)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xA893DC", Offset = "0xA893DC", VA = "0xA893DC")]
	private void OnTimelineEnd()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xA8982C", Offset = "0xA8982C", VA = "0xA8982C")]
	public void SetTimelinePausedState(bool paused)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xA89204", Offset = "0xA89204", VA = "0xA89204")]
	public void LockDot(bool shouldLock)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xA89894", Offset = "0xA89894", VA = "0xA89894")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xA899E8", Offset = "0xA899E8", VA = "0xA899E8")]
	public TimelineState()
	{
	}
}
[Token(Token = "0x2000283")]
public class TimelineStateSkip
{
	[Token(Token = "0x2000621")]
	public delegate void FastForwardEvent(bool allow);

	[Token(Token = "0x4000F1D")]
	public const string skipUnlockedKey = "AllowSkip";

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool skipAllowedInMenu;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool skipAllowedInState;

	[Token(Token = "0x4000F20")]
	private const float fastForwardSpeed = 6f;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3CB4", Offset = "0x7C3CB4")]
	private static bool <fastForwarding>k__BackingField;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool initialized;

	[Token(Token = "0x17000135")]
	public static bool fastForwarding
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xA897DC", Offset = "0xA897DC", VA = "0xA897DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF7C", Offset = "0x7CFF7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xA89B18", Offset = "0xA89B18", VA = "0xA89B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF8C", Offset = "0x7CFF8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public static bool allowFastForward
	{
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xA89B70", Offset = "0xA89B70", VA = "0xA89B70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000137")]
	public static float timelineSpeed
	{
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xA8977C", Offset = "0xA8977C", VA = "0xA8977C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000019")]
	public static event FastForwardEvent OnToggleAllow
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xA8A2A8", Offset = "0xA8A2A8", VA = "0xA8A2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFF9C", Offset = "0x7CFF9C")]
		add
		{
		}
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xA8A364", Offset = "0xA8A364", VA = "0xA8A364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFAC", Offset = "0x7CFFAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event FastForwardEvent OnToggleFastForward
	{
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xA88FA4", Offset = "0xA88FA4", VA = "0xA88FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFBC", Offset = "0x7CFFBC")]
		add
		{
		}
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xA8992C", Offset = "0xA8992C", VA = "0xA8992C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFCC", Offset = "0x7CFFCC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xA89300", Offset = "0xA89300", VA = "0xA89300")]
	public static void AllowInState(bool allow)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xA89CF0", Offset = "0xA89CF0", VA = "0xA89CF0")]
	private static void NotifyChange()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xA8A024", Offset = "0xA8A024", VA = "0xA8A024")]
	public static void UpdateFastForward(bool _fastForward)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xA89BD8", Offset = "0xA89BD8", VA = "0xA89BD8")]
	public static bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xA8A110", Offset = "0xA8A110", VA = "0xA8A110")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xA8A21C", Offset = "0xA8A21C", VA = "0xA8A21C")]
	public static bool TrySetAllowedInMenu(bool allowed)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xA8A420", Offset = "0xA8A420", VA = "0xA8A420")]
	public TimelineStateSkip()
	{
	}
}
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB1D0", Offset = "0x7BB1D0")]
public class TimelineStateControlledByTV : MonoBehaviour
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TVController tv;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TimelineState timelineState;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xA899FC", Offset = "0xA899FC", VA = "0xA899FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xA89A60", Offset = "0xA89A60", VA = "0xA89A60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xA89B10", Offset = "0xA89B10", VA = "0xA89B10")]
	public TimelineStateControlledByTV()
	{
	}
}
[Token(Token = "0x2000285")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB234", Offset = "0x7BB234")]
public class TimelineStateSkipWatcher : MonoBehaviour
{
	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector timeline;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oldFF;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xA8A4C4", Offset = "0xA8A4C4", VA = "0xA8A4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xA8A584", Offset = "0xA8A584", VA = "0xA8A584")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xA8A61C", Offset = "0xA8A61C", VA = "0xA8A61C")]
	private void OnTimelinePlay(PlayableDirector obj)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xA8A744", Offset = "0xA8A744", VA = "0xA8A744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xA8A620", Offset = "0xA8A620", VA = "0xA8A620")]
	private void UpdateSpeed()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xA8A7F4", Offset = "0xA8A7F4", VA = "0xA8A7F4")]
	public TimelineStateSkipWatcher()
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB298", Offset = "0x7BB298")]
public class TimelineStateSkipWatcher_Animator : MonoBehaviour
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool oldFF;

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xA8A7FC", Offset = "0xA8A7FC", VA = "0xA8A7FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xA8A860", Offset = "0xA8A860", VA = "0xA8A860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xA8A940", Offset = "0xA8A940", VA = "0xA8A940")]
	public TimelineStateSkipWatcher_Animator()
	{
	}
}
[Token(Token = "0x2000287")]
public static class SceneSwitcher
{
	[Token(Token = "0x4000F2B")]
	private const float progressReady = 0.9f;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AsyncOperation currentSceneLoad;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool m_activateOnLoad;

	[Token(Token = "0x17000138")]
	public static int currentBuildIndex
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xA6C5B0", Offset = "0xA6C5B0", VA = "0xA6C5B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000139")]
	public static bool sceneLoading
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xA6C5E0", Offset = "0xA6C5E0", VA = "0xA6C5E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public static bool sceneIsReady
	{
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xA6C690", Offset = "0xA6C690", VA = "0xA6C690")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013B")]
	public static bool activateOnLoad
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xA6C7D8", Offset = "0xA6C7D8", VA = "0xA6C7D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xA6C840", Offset = "0xA6C840", VA = "0xA6C840")]
		set
		{
		}
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xA6C904", Offset = "0xA6C904", VA = "0xA6C904")]
	public static void LoadScene(string name)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xA6CA20", Offset = "0xA6CA20", VA = "0xA6CA20")]
	public static void LoadScene(int index)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xA6CB3C", Offset = "0xA6CB3C", VA = "0xA6CB3C")]
	public static void LoadNextScene()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xA6CBB8", Offset = "0xA6CBB8", VA = "0xA6CBB8")]
	public static void LoadPreviousScene()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xA6CC34", Offset = "0xA6CC34", VA = "0xA6CC34")]
	public static void LoadScene(string name, string transition)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xA6CCD8", Offset = "0xA6CCD8", VA = "0xA6CCD8")]
	public static void LoadScene(int index, string transition)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xA6CD88", Offset = "0xA6CD88", VA = "0xA6CD88")]
	public static void LoadNextScene(string transition)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xA6CE14", Offset = "0xA6CE14", VA = "0xA6CE14")]
	public static void LoadPreviousScene(string transition)
	{
	}
}
[Token(Token = "0x2000288")]
public class TransitionController : MonoBehaviour
{
	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string nextSceneName;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int nextSceneIndex;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minSceneDuration;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeDuration;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color startFadeColor;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color endFadeColor;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FadeScreen fadeScreen;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fadeStartTempo;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float sceneTempo;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fadeEndTempo;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xA90208", Offset = "0xA90208", VA = "0xA90208")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xA9044C", Offset = "0xA9044C", VA = "0xA9044C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xA90348", Offset = "0xA90348", VA = "0xA90348")]
	private void LoadScene()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xA905D4", Offset = "0xA905D4", VA = "0xA905D4")]
	public TransitionController()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BB2FC", Offset = "0x7BB2FC")]
public class LevelScoreConfig : ScriptableObject
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve timeBonus;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int difficultyBonus;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int deathPenalty;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] timeMedals;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] scoreMedals;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x987B5C", Offset = "0x987B5C", VA = "0x987B5C")]
	public LevelScoreConfig()
	{
	}
}
[Token(Token = "0x200028A")]
public class ScoreData
{
	[Token(Token = "0x2000622")]
	private enum ScoreType
	{
		[Token(Token = "0x4001EC4")]
		HighScore,
		[Token(Token = "0x4001EC5")]
		BestTime
	}

	[Token(Token = "0x4000F3D")]
	private const string scoreKey = "Score";

	[Token(Token = "0x1700013C")]
	public static string highScoreKey
	{
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xA6D2F8", Offset = "0xA6D2F8", VA = "0xA6D2F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013D")]
	public static string bestTimeKey
	{
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xA6D544", Offset = "0xA6D544", VA = "0xA6D544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xA6D3B4", Offset = "0xA6D3B4", VA = "0xA6D3B4")]
	public static int GetCurrentHighScore(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xA6D474", Offset = "0xA6D474", VA = "0xA6D474")]
	public static void SaveNewHighScore(int level, int value)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xA6D604", Offset = "0xA6D604", VA = "0xA6D604")]
	public static float GetCurrentBestTime(int level)
	{
		return default(float);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xA6D6E0", Offset = "0xA6D6E0", VA = "0xA6D6E0")]
	public static bool GetCurrentBestTime(int level, out float value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xA6D7B4", Offset = "0xA6D7B4", VA = "0xA6D7B4")]
	public static void SaveNewBestTime(int level, float value)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xA6D88C", Offset = "0xA6D88C", VA = "0xA6D88C")]
	public ScoreData()
	{
	}
}
[Token(Token = "0x200028B")]
public class ScoreSystem : MonoBehaviour
{
	[Token(Token = "0x2000623")]
	public enum Type
	{
		[Token(Token = "0x4001EC7")]
		Enemies,
		[Token(Token = "0x4001EC8")]
		Pixels,
		[Token(Token = "0x4001EC9")]
		Collectables
	}

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3CE4", Offset = "0x7C3CE4")]
	private static ScoreSystem <instance>k__BackingField;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelScoreConfig scoreConfig;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3CF4", Offset = "0x7C3CF4")]
	private int <totalScore>k__BackingField;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool debug_countScoreInScene;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] scoreAtLastCheckpoint;

	[Token(Token = "0x1700013E")]
	public static ScoreSystem instance
	{
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xA68138", Offset = "0xA68138", VA = "0xA68138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFDC", Offset = "0x7CFFDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xA6D894", Offset = "0xA6D894", VA = "0xA6D894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFEC", Offset = "0x7CFFEC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public int[] score
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xA6DA08", Offset = "0xA6DA08", VA = "0xA6DA08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xA6DA70", Offset = "0xA6DA70", VA = "0xA6DA70")]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public int totalScore
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xA68188", Offset = "0xA68188", VA = "0xA68188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CFFFC", Offset = "0x7CFFFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xA6DAE0", Offset = "0xA6DAE0", VA = "0xA6DAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D000C", Offset = "0x7D000C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xA6D8EC", Offset = "0xA6D8EC", VA = "0xA6D8EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xA6DAE8", Offset = "0xA6DAE8", VA = "0xA6DAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xA6DCE4", Offset = "0xA6DCE4", VA = "0xA6DCE4")]
	public void OnCheckpoint(HashSet<string> currentFlags)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xA6DDA4", Offset = "0xA6DDA4", VA = "0xA6DDA4")]
	public void ResetToCheckpoint()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xA6DE6C", Offset = "0xA6DE6C", VA = "0xA6DE6C")]
	public void Add(int value, Type type)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xA6DC48", Offset = "0xA6DC48", VA = "0xA6DC48")]
	public void ReCalculateTotalScore()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xA6DEE4", Offset = "0xA6DEE4", VA = "0xA6DEE4")]
	public int GetDifficultyBonus()
	{
		return default(int);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xA6DF20", Offset = "0xA6DF20", VA = "0xA6DF20")]
	public int GetTimeBonus()
	{
		return default(int);
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xA6E008", Offset = "0xA6E008", VA = "0xA6E008")]
	public void CountTotalScoreOnScene()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xA6E3F8", Offset = "0xA6E3F8", VA = "0xA6E3F8")]
	public ScoreSystem()
	{
	}
}
[Token(Token = "0x200028C")]
public class TimelineRandomizer : MonoBehaviour
{
	[Token(Token = "0x2000624")]
	public enum Method
	{
		[Token(Token = "0x4001ECB")]
		Shuffle,
		[Token(Token = "0x4001ECC")]
		Random,
		[Token(Token = "0x4001ECD")]
		Sequential,
		[Token(Token = "0x4001ECE")]
		UseDefault
	}

	[Token(Token = "0x2000625")]
	public enum WrapMethod
	{
		[Token(Token = "0x4001ED0")]
		Loop,
		[Token(Token = "0x4001ED1")]
		Stop,
		[Token(Token = "0x4001ED2")]
		RepeatLast
	}

	[Token(Token = "0x2000626")]
	private class RandomTimeline
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector timeline;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineRandomizer timelineRandomizer;

		[Token(Token = "0x1700041F")]
		public bool isRandomizer
		{
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xA884EC", Offset = "0xA884EC", VA = "0xA884EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xA88174", Offset = "0xA88174", VA = "0xA88174")]
		public RandomTimeline(PlayableDirector timeline, [Optional] TimelineRandomizer timelineRandomizer)
		{
		}
	}

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Method defaultMethod;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WrapMethod wrapMethod;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<RandomTimeline> timelines;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentTimeline;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timelineCounter;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> availableShuffleIndexes;

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xA87EF8", Offset = "0xA87EF8", VA = "0xA87EF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xA881C4", Offset = "0xA881C4", VA = "0xA881C4")]
	private int ClampIndex(int newIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xA88248", Offset = "0xA88248", VA = "0xA88248")]
	private void ResetShuffle()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xA882F8", Offset = "0xA882F8", VA = "0xA882F8")]
	private int GetShuffleIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xA88400", Offset = "0xA88400", VA = "0xA88400")]
	public PlayableDirector GetCurrentTimeline()
	{
		return null;
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xA8855C", Offset = "0xA8855C", VA = "0xA8855C")]
	public PlayableDirector GetNewTimeline(Method method = Method.UseDefault)
	{
		return null;
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xA887F4", Offset = "0xA887F4", VA = "0xA887F4")]
	public TimelineRandomizer()
	{
	}
}
[Token(Token = "0x200028D")]
public class TimelinesLoopOnState : MonoBehaviour
{
	[Token(Token = "0x2000627")]
	public enum StartMethod
	{
		[Token(Token = "0x4001ED6")]
		ManualStart,
		[Token(Token = "0x4001ED7")]
		ProgressionTracker,
		[Token(Token = "0x4001ED8")]
		AlwaysWhileEnabled
	}

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartMethod startingMethod;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TimelineRandomizer timelineRandomizer;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimelineRandomizer.Method randomMethod;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float interval;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool startWithInterval;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool stopOnNotAllowedAtState;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProgressionTracker tracker;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayableDirector currentTimeline;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canPlay;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x17000141")]
	public bool isPlaying
	{
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xA8A948", Offset = "0xA8A948", VA = "0xA8A948")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xA8A9B8", Offset = "0xA8A9B8", VA = "0xA8A9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xA8AA1C", Offset = "0xA8AA1C", VA = "0xA8AA1C")]
	private void PlayRandomTimeline()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xA8AA90", Offset = "0xA8AA90", VA = "0xA8AA90")]
	public void AllowLoopTimelines(bool allow)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xA8AB38", Offset = "0xA8AB38", VA = "0xA8AB38")]
	public void StartTrackingProgression()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xA8ABF8", Offset = "0xA8ABF8", VA = "0xA8ABF8")]
	public void OnTimelineEnd_Event()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xA8AC0C", Offset = "0xA8AC0C", VA = "0xA8AC0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xA8ADBC", Offset = "0xA8ADBC", VA = "0xA8ADBC")]
	private void OnStateChange(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xA8AEAC", Offset = "0xA8AEAC", VA = "0xA8AEAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xA8AF94", Offset = "0xA8AF94", VA = "0xA8AF94")]
	public TimelinesLoopOnState()
	{
	}
}
[Token(Token = "0x200028E")]
public class NoiseTransition : MonoBehaviour
{
	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fps;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform content;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer noiseTexture;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int frame;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xA3D1C4", Offset = "0xA3D1C4", VA = "0xA3D1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xA3D25C", Offset = "0xA3D25C", VA = "0xA3D25C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xA3D200", Offset = "0xA3D200", VA = "0xA3D200")]
	private void CheckForFrame(bool force)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xA3D264", Offset = "0xA3D264", VA = "0xA3D264")]
	private void UpdateNoise()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xA3D4A4", Offset = "0xA3D4A4", VA = "0xA3D4A4")]
	public NoiseTransition()
	{
	}
}
[Token(Token = "0x200028F")]
public class SyncTransition : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer tubeTexture;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tubeScrollSpeed;

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xA7D060", Offset = "0xA7D060", VA = "0xA7D060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xA7D0E4", Offset = "0xA7D0E4", VA = "0xA7D0E4")]
	public SyncTransition()
	{
	}
}
[Token(Token = "0x2000290")]
public class IntroController : ProgressionState
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleScreen particleScreen95;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BakedParticleSimulation bakedParticles95;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sprite95;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PostProcessVolume pfxVolume;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float TransitionSpeed;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool startTransition;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool endTransition;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xAF76F0", Offset = "0xAF76F0", VA = "0xAF76F0", Slot = "4")]
	public override void HasBegun(string stateName, bool firstInSession)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xAF7740", Offset = "0xAF7740", VA = "0xAF7740")]
	private void PlayIntro()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xAF77D8", Offset = "0xAF77D8", VA = "0xAF77D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xAF799C", Offset = "0xAF799C", VA = "0xAF799C")]
	public IntroController()
	{
	}
}
[Token(Token = "0x2000291")]
public class BakedParticleSimulation : MonoBehaviour
{
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFC4", Offset = "0x7BCFC4")]
	private sealed class <BakeCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BakedParticleSimulation <>4__this;

		[Token(Token = "0x17000420")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xA9D6EC", Offset = "0xA9D6EC", VA = "0xA9D6EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xA9D75C", Offset = "0xA9D75C", VA = "0xA9D75C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xA9D2B0", Offset = "0xA9D2B0", VA = "0xA9D2B0")]
		[DebuggerHidden]
		public <BakeCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xA9D400", Offset = "0xA9D400", VA = "0xA9D400", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xA9D404", Offset = "0xA9D404", VA = "0xA9D404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0xA9D6F4", Offset = "0xA9D6F4", VA = "0xA9D6F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playReverse;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3D04", Offset = "0x7C3D04")]
	private bool <baking>k__BackingField;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3D14", Offset = "0x7C3D14")]
	private bool <playing>k__BackingField;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[][] bakedParticles;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int totalFrames;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentFrame;

	[Token(Token = "0x17000142")]
	public bool baking
	{
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xA9D1BC", Offset = "0xA9D1BC", VA = "0xA9D1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D001C", Offset = "0x7D001C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xA9D1C4", Offset = "0xA9D1C4", VA = "0xA9D1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D002C", Offset = "0x7D002C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public bool playing
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xA9D1D0", Offset = "0xA9D1D0", VA = "0xA9D1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D003C", Offset = "0x7D003C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xA9D1D8", Offset = "0xA9D1D8", VA = "0xA9D1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D004C", Offset = "0x7D004C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xA9D1E4", Offset = "0xA9D1E4", VA = "0xA9D1E4")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xA9D230", Offset = "0xA9D230", VA = "0xA9D230")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D005C", Offset = "0x7D005C")]
	public IEnumerator BakeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xA9D2DC", Offset = "0xA9D2DC", VA = "0xA9D2DC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xA9D308", Offset = "0xA9D308", VA = "0xA9D308")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xA9D310", Offset = "0xA9D310", VA = "0xA9D310")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xA9D3F0", Offset = "0xA9D3F0", VA = "0xA9D3F0")]
	public BakedParticleSimulation()
	{
	}
}
[Token(Token = "0x2000292")]
public class ChangeDialogueProfile : MonoBehaviour
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string idToCheck;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextBalloonProfile newProfile;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextBalloonProfile oldProfile;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xAAD8C8", Offset = "0xAAD8C8", VA = "0xAAD8C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xAAD9F8", Offset = "0xAAD9F8", VA = "0xAAD9F8")]
	public void SetNewProfile()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xAADB5C", Offset = "0xAADB5C", VA = "0xAADB5C")]
	public void ResetOldProfile()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xAADA00", Offset = "0xAADA00", VA = "0xAADA00")]
	private void SetProfile(bool revert)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xAADB64", Offset = "0xAADB64", VA = "0xAADB64")]
	public ChangeDialogueProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x2000293")]
public class DialogueDropdown : StringDropdown
{
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xB42E44", Offset = "0xB42E44", VA = "0xB42E44")]
	public DialogueDropdown()
	{
	}
}
[Token(Token = "0x2000294")]
public class DialogueFileRefSource : StringRefSource
{
	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xB42E98", Offset = "0xB42E98", VA = "0xB42E98", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xB42E9C", Offset = "0xB42E9C", VA = "0xB42E9C")]
	public DialogueFileRefSource()
	{
	}
}
[Token(Token = "0x2000295")]
[ExecuteInEditMode]
public class DialogueManager : MonoBehaviour, INotificationReceiver
{
	[Serializable]
	[Token(Token = "0x2000629")]
	public struct Profile
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextBalloonProfile asset;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform anchor;
	}

	[Token(Token = "0x200062A")]
	private enum DialogueFocus
	{
		[Token(Token = "0x4001EE0")]
		Disabled,
		[Token(Token = "0x4001EE1")]
		Unfocused,
		[Token(Token = "0x4001EE2")]
		Focused
	}

	[Token(Token = "0x200062B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFD4", Offset = "0x7BCFD4")]
	private sealed class <ResumeTimelineAfterDialogue>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueManager <>4__this;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayableGraph graph;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xB44F44", Offset = "0xB44F44", VA = "0xB44F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xB44FB4", Offset = "0xB44FB4", VA = "0xB44FB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0xB44D2C", Offset = "0xB44D2C", VA = "0xB44D2C")]
		[DebuggerHidden]
		public <ResumeTimelineAfterDialogue>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0xB44E24", Offset = "0xB44E24", VA = "0xB44E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0xB44E28", Offset = "0xB44E28", VA = "0xB44E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0xB44F4C", Offset = "0xB44F4C", VA = "0xB44F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3D24", Offset = "0x7C3D24")]
	private static DialogueManager <instance>k__BackingField;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<BalloonType, TextBalloonController> textBalloons;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C3D34", Offset = "0x7C3D34")]
	public string dialogueFile;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C3D98", Offset = "0x7C3D98")]
	public TextAsset textAsset;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, DialogueLine[]> blocks;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Profile[] profiles;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Dictionary<string, Profile> profileById;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextBalloonController currentBalloon;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string blockId;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DialogueLine[] lines;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentLine;

	[Token(Token = "0x4000F76")]
	private const string demoDialoguePrefix = "Demo_";

	[Token(Token = "0x17000144")]
	public static DialogueManager instance
	{
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xB42F94", Offset = "0xB42F94", VA = "0xB42F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D00C0", Offset = "0x7D00C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xB42FE4", Offset = "0xB42FE4", VA = "0xB42FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D00D0", Offset = "0x7D00D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public bool isPresenting
	{
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xB4303C", Offset = "0xB4303C", VA = "0xB4303C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xB430AC", Offset = "0xB430AC", VA = "0xB430AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xB43330", Offset = "0xB43330", VA = "0xB43330")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xB43368", Offset = "0xB43368", VA = "0xB43368")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xB43920", Offset = "0xB43920", VA = "0xB43920")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xB439D4", Offset = "0xB439D4", VA = "0xB439D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xB43A88", Offset = "0xB43A88", VA = "0xB43A88")]
	private void OnLanguageUpdate(Localization.Language language)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xB43DAC", Offset = "0xB43DAC", VA = "0xB43DAC")]
	public TextAsset LoadTextAsset(bool defaultCode = false)
	{
		return null;
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xB431F8", Offset = "0xB431F8", VA = "0xB431F8")]
	private void LoadDialogueBlocks()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xB44278", Offset = "0xB44278", VA = "0xB44278")]
	private DialogueLine[] GetDialogueBlock(string id)
	{
		return null;
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xB43C10", Offset = "0xB43C10", VA = "0xB43C10")]
	public void StartDialogue(string id, BalloonType type, bool allowPlayerInput = true)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xB436D4", Offset = "0xB436D4", VA = "0xB436D4")]
	private bool AcceptIsPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xB43848", Offset = "0xB43848", VA = "0xB43848")]
	public void Advance()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xB4360C", Offset = "0xB4360C", VA = "0xB4360C")]
	public void StopDialogue()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xB44398", Offset = "0xB44398", VA = "0xB44398")]
	private void UpdateBalloon()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xB44784", Offset = "0xB44784", VA = "0xB44784")]
	private bool TryGetProfile(string id, out Profile profile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xB43470", Offset = "0xB43470", VA = "0xB43470")]
	private DialogueFocus GetCurrentFocus()
	{
		return default(DialogueFocus);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xB445D0", Offset = "0xB445D0", VA = "0xB445D0")]
	private void NotifyInGameManager(BalloonType type, bool balloonActive)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xB44998", Offset = "0xB44998", VA = "0xB44998")]
	public void RegisterTextBalloon(TextBalloonController balloon)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xB44A1C", Offset = "0xB44A1C", VA = "0xB44A1C")]
	public void UnregisterTextBalloon(TextBalloonController balloon)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xB44B14", Offset = "0xB44B14", VA = "0xB44B14", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xB44C78", Offset = "0xB44C78", VA = "0xB44C78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D00E0", Offset = "0x7D00E0")]
	private IEnumerator ResumeTimelineAfterDialogue(PlayableGraph graph)
	{
		return null;
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xB44D58", Offset = "0xB44D58", VA = "0xB44D58")]
	public DialogueManager()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xB44E08", Offset = "0xB44E08", VA = "0xB44E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0144", Offset = "0x7D0144")]
	private bool <ResumeTimelineAfterDialogue>b__39_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000296")]
public static class DialogueParser
{
	[Token(Token = "0x200062C")]
	private struct Line
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LineType type;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string author;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string content;
	}

	[Token(Token = "0x200062D")]
	private enum LineType
	{
		[Token(Token = "0x4001EEB")]
		None,
		[Token(Token = "0x4001EEC")]
		Header,
		[Token(Token = "0x4001EED")]
		Dialogue
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xB43F00", Offset = "0xB43F00", VA = "0xB43F00")]
	public static Dictionary<string, DialogueLine[]> ParseBlocks(TextAsset textAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xB45298", Offset = "0xB45298", VA = "0xB45298")]
	public static DialogueLine[] ParseBlock(TextAsset textAsset, string id)
	{
		return null;
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xB455C4", Offset = "0xB455C4", VA = "0xB455C4")]
	public static string[] ParseNames(TextAsset textAsset)
	{
		return null;
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xB44FE0", Offset = "0xB44FE0", VA = "0xB44FE0")]
	private static Line ParseLine(string s)
	{
		return default(Line);
	}
}
[Token(Token = "0x2000297")]
public struct DialogueLine
{
	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string author;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string content;
}
[Token(Token = "0x2000298")]
public class DialogueRefSource : StringRefSource
{
	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xB45868", Offset = "0xB45868", VA = "0xB45868", Slot = "4")]
	public override void Populate(StringRefList list)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xB45AB4", Offset = "0xB45AB4", VA = "0xB45AB4")]
	public DialogueRefSource()
	{
	}
}
[Token(Token = "0x2000299")]
public class FMODParamCountByEvent
{
	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xB58D90", Offset = "0xB58D90", VA = "0xB58D90")]
	public static int GetMaxValue(string eventPath)
	{
		return default(int);
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xB599C8", Offset = "0xB599C8", VA = "0xB599C8")]
	public FMODParamCountByEvent()
	{
	}
}
[Token(Token = "0x200029A")]
public enum BalloonType
{
	[Token(Token = "0x4000F7A")]
	InGame,
	[Token(Token = "0x4000F7B")]
	InGameAlt,
	[Token(Token = "0x4000F7C")]
	RealWorld
}
[Token(Token = "0x200029B")]
public class TextBalloonController : MonoBehaviour
{
	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFE4", Offset = "0x7BCFE4")]
	private sealed class <EndOfFrameEvent>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextBalloonController <>4__this;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xA82524", Offset = "0xA82524", VA = "0xA82524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xA82594", Offset = "0xA82594", VA = "0xA82594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0xA8186C", Offset = "0xA8186C", VA = "0xA8186C")]
		[DebuggerHidden]
		public <EndOfFrameEvent>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0xA82464", Offset = "0xA82464", VA = "0xA82464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xA82468", Offset = "0xA82468", VA = "0xA82468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0xA8252C", Offset = "0xA8252C", VA = "0xA8252C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3DD0", Offset = "0x7C3DD0")]
	public InGameInput inGameInput;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3E08", Offset = "0x7C3E08")]
	public BalloonType type;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int linesWithoutAuthor;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int linesWithAuthor;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string defaultSpeechEvent;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color defaultAuthorColor;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] colorStyles;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3E50", Offset = "0x7C3E50")]
	public Canvas canvas;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject advanceIndicator;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform panel;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text authorText;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text contentText;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image avatarImage;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextBalloonInputIconPool inputIconPool;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool pause;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[HideInInspector]
	public bool playerCanInteract;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EventInstance speechEventInstance;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string speechEventPlaying;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3EA8", Offset = "0x7C3EA8")]
	private bool <visible>k__BackingField;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3EB8", Offset = "0x7C3EB8")]
	private bool <canAdvance>k__BackingField;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string speechEvent;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform anchor;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color? color;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int lineMaxCount;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool canGenerateLines;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string rawContent;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TextBalloonParser.Line[] lines;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string[] lineCache;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int[] lineLengthCache;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool advanceRequested;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool waitingForAdvance;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float advanceToleranceTempo;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int currentLine;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float characterTempo;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float lineDelayTempo;

	[Token(Token = "0x4000FA0")]
	private const float charactersPerSecond = 30f;

	[Token(Token = "0x4000FA1")]
	private const float lineDelayDuration = 0.1f;

	[Token(Token = "0x4000FA2")]
	private const float advanceToleranceDuration = 0.25f;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Quaternion startRotation;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 startScale;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Font defaultFont;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int defaultFontSize;

	[Token(Token = "0x17000146")]
	public bool visible
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xA7F4DC", Offset = "0xA7F4DC", VA = "0xA7F4DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0154", Offset = "0x7D0154")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xA7F4E4", Offset = "0xA7F4E4", VA = "0xA7F4E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0164", Offset = "0x7D0164")]
		private set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public bool canAdvance
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xA7F4F0", Offset = "0xA7F4F0", VA = "0xA7F4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0174", Offset = "0x7D0174")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xA7F4F8", Offset = "0xA7F4F8", VA = "0xA7F4F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0184", Offset = "0x7D0184")]
		private set
		{
		}
	}

	[Token(Token = "0x17000148")]
	private int contentMaxWidth
	{
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xA7F504", Offset = "0xA7F504", VA = "0xA7F504")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xA7F5D0", Offset = "0xA7F5D0", VA = "0xA7F5D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xA7F75C", Offset = "0xA7F75C", VA = "0xA7F75C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xA7F7CC", Offset = "0xA7F7CC", VA = "0xA7F7CC")]
	public void UpdateFontLocalizing(Localization.Language lang)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xA7F8D8", Offset = "0xA7F8D8", VA = "0xA7F8D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xA810B8", Offset = "0xA810B8", VA = "0xA810B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xA813A8", Offset = "0xA813A8", VA = "0xA813A8")]
	public void Show(string content, string author = "", [Optional] Color? color, [Optional] string speechEvent, [Optional] Sprite avatar, [Optional] Transform anchor)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xA817EC", Offset = "0xA817EC", VA = "0xA817EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0194", Offset = "0x7D0194")]
	private IEnumerator EndOfFrameEvent()
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xA7F6D4", Offset = "0xA7F6D4", VA = "0xA7F6D4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xA81898", Offset = "0xA81898", VA = "0xA81898")]
	public void Advance()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xA818B4", Offset = "0xA818B4", VA = "0xA818B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xA818F0", Offset = "0xA818F0", VA = "0xA818F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xA80900", Offset = "0xA80900", VA = "0xA80900")]
	private void UpdateContentText()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xA80EE0", Offset = "0xA80EE0", VA = "0xA80EE0")]
	private void PlaySpeechEvent(string eventPath)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xA81038", Offset = "0xA81038", VA = "0xA81038")]
	private void StopSpeechEvent()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xA823E8", Offset = "0xA823E8", VA = "0xA823E8")]
	public TextBalloonController()
	{
	}
}
[Token(Token = "0x200029C")]
public class TextBalloonInputIconPool : ObjectPool<Image>
{
	[Token(Token = "0x200062F")]
	private class Line
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int positionY;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<Icon> icons;

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xA82C34", Offset = "0xA82C34", VA = "0xA82C34")]
		public Line()
		{
		}
	}

	[Token(Token = "0x2000630")]
	private class Icon
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int positionX;

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xA82CB0", Offset = "0xA82CB0", VA = "0xA82CB0")]
		public Icon()
		{
		}
	}

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<Line> lines;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xA8259C", Offset = "0xA8259C", VA = "0xA8259C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xA82638", Offset = "0xA82638", VA = "0xA82638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xA826D4", Offset = "0xA826D4", VA = "0xA826D4")]
	private void OnProfileUpdate(InputProfile profile)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xA81740", Offset = "0xA81740", VA = "0xA81740")]
	public void ClearAllLines()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xA81928", Offset = "0xA81928", VA = "0xA81928")]
	public void ClearAllLinesBut(int start, int end)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xA82988", Offset = "0xA82988", VA = "0xA82988")]
	public void ClearLine(int line)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xA819D4", Offset = "0xA819D4", VA = "0xA819D4")]
	public void EnsureLine(int line, int positionY)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xA81C20", Offset = "0xA81C20", VA = "0xA81C20")]
	public void AddIcon(Button button, int positionX, int line)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xA82B40", Offset = "0xA82B40", VA = "0xA82B40")]
	private void SetIconPosition(Image image, int positionX, int positionY)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xA82880", Offset = "0xA82880", VA = "0xA82880")]
	private void SetIconImage(Image image, Button button)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xA82CB8", Offset = "0xA82CB8", VA = "0xA82CB8")]
	public TextBalloonInputIconPool()
	{
	}
}
[Token(Token = "0x200029D")]
public static class TextBalloonParser
{
	[Token(Token = "0x2000631")]
	public class Line
	{
		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string content;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startY;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int middleY;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextParsing.Formatting[] formatting;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputIcon[] inputIcons;

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xA83620", Offset = "0xA83620", VA = "0xA83620")]
		public Line()
		{
		}
	}

	[Token(Token = "0x2000632")]
	public struct InputIcon
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button button;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int index;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int middleX;
	}

	[Token(Token = "0x2000633")]
	private struct InsertColorTag
	{
		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int at;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int order;
	}

	[Serializable]
	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BCFF4", Offset = "0x7BCFF4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<InsertColorTag> <>9__4_0;

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xA83690", Offset = "0xA83690", VA = "0xA83690")]
		public <>c()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xA83698", Offset = "0xA83698", VA = "0xA83698")]
		internal int <GenerateLineContent>b__4_0(InsertColorTag x, InsertColorTag y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xA7FD98", Offset = "0xA7FD98", VA = "0xA7FD98")]
	public static Line[] GenerateLines(string rawContent, Text textBox)
	{
		return null;
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xA81F6C", Offset = "0xA81F6C", VA = "0xA81F6C")]
	public static string GenerateLineContent(Line line, int length, Color[] styles)
	{
		return null;
	}
}
[Token(Token = "0x200029E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BB350", Offset = "0x7BB350")]
public class TextBalloonProfile : ScriptableObject
{
	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string displayName;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool colorOverride;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string speechEvent;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite avatar;

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xA836E8", Offset = "0xA836E8", VA = "0xA836E8")]
	public TextBalloonProfile()
	{
	}
}
[Token(Token = "0x200029F")]
public class GridEmitter : MonoBehaviour
{
	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture renderTexture;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particles;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pixelSize;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NativeArray<Color32> pixels;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool reversePlayback;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startTime;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float simulationSpeedScale;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float simulationTime;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] emittedParticles;

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xAD8C78", Offset = "0xAD8C78", VA = "0xAD8C78")]
	public void Emit()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xAD8CF4", Offset = "0xAD8CF4", VA = "0xAD8CF4")]
	public void Emit(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xAD8F9C", Offset = "0xAD8F9C", VA = "0xAD8F9C")]
	private void ToTexture2D()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xAD9120", Offset = "0xAD9120", VA = "0xAD9120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xAD9280", Offset = "0xAD9280", VA = "0xAD9280")]
	public GridEmitter()
	{
	}
}
[Token(Token = "0x20002A0")]
public class DisplayCurrentLevelTime : MonoBehaviour
{
	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3ED8", Offset = "0x7C3ED8")]
	private static bool <shouldDisplay>k__BackingField;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timerTxt;

	[Token(Token = "0x17000149")]
	public static bool shouldDisplay
	{
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xB4654C", Offset = "0xB4654C", VA = "0xB4654C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D01F8", Offset = "0x7D01F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xB4659C", Offset = "0xB4659C", VA = "0xB4659C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0208", Offset = "0x7D0208")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xB465F4", Offset = "0xB465F4", VA = "0xB465F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xB465F8", Offset = "0xB465F8", VA = "0xB465F8")]
	private void RestoreSavedDisplay()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xB46658", Offset = "0xB46658", VA = "0xB46658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xB467AC", Offset = "0xB467AC", VA = "0xB467AC")]
	public static void SetDisplay(bool display)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xB46838", Offset = "0xB46838", VA = "0xB46838")]
	public DisplayCurrentLevelTime()
	{
	}
}
[Token(Token = "0x20002A1")]
public class HandAlertIcon : MonoBehaviour
{
	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer[] sRend;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timer;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4 c;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool active;

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xAD9B9C", Offset = "0xAD9B9C", VA = "0xAD9B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xAD9C9C", Offset = "0xAD9C9C", VA = "0xAD9C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xAD9D28", Offset = "0xAD9D28", VA = "0xAD9D28")]
	public void Activate(float t)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xAD9DBC", Offset = "0xAD9DBC", VA = "0xAD9DBC")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xAD9BB0", Offset = "0xAD9BB0", VA = "0xAD9BB0")]
	private void Recolor(Vector4 c)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xAD9DC8", Offset = "0xAD9DC8", VA = "0xAD9DC8")]
	public HandAlertIcon()
	{
	}
}
[Token(Token = "0x20002A2")]
public class HandAwayAlert : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeOutTimer;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandAlertIcon joystick_sprite;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandAlertIcon leftHand_sprite;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandAlertIcon rightHand_sprite;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandAlertIcon cachedIcon;

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xAD9E40", Offset = "0xAD9E40", VA = "0xAD9E40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xAD9F88", Offset = "0xAD9F88", VA = "0xAD9F88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xADA0BC", Offset = "0xADA0BC", VA = "0xADA0BC")]
	private void OnHandAwayEvent(Handedness handedness)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xADA148", Offset = "0xADA148", VA = "0xADA148")]
	public HandAwayAlert()
	{
	}
}
[Token(Token = "0x20002A3")]
public class Hud : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bossFight;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float notificationDuration;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject content;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text pixelValue;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text scoreValue;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float notificationTimer;

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xAE45C8", Offset = "0xAE45C8", VA = "0xAE45C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xAE4774", Offset = "0xAE4774", VA = "0xAE4774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xAE4AD8", Offset = "0xAE4AD8", VA = "0xAE4AD8")]
	public void NotifyChange()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xAE4AEC", Offset = "0xAE4AEC", VA = "0xAE4AEC")]
	public Hud()
	{
	}
}
[Token(Token = "0x20002A4")]
public class HUD_Weapon : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000635")]
	public struct ItemInfo
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite image;
	}

	[Serializable]
	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD004", Offset = "0x7BD004")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<ItemInfo, bool> <>9__14_0;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<ItemInfo, bool> <>9__14_1;

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xAD9A9C", Offset = "0xAD9A9C", VA = "0xAD9A9C")]
		public <>c()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xAD9AA4", Offset = "0xAD9AA4", VA = "0xAD9AA4")]
		internal bool <Update>b__14_0(ItemInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xAD9AF8", Offset = "0xAD9AF8", VA = "0xAD9AF8")]
		internal bool <Update>b__14_1(ItemInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image displayImage;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text displayText;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int changeTimerValue;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string timerEndEvent;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance timerEventInstance;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameTV targetTv;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color defaultColor;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color endTimeColor;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int lastTimerValue;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string infiniteSymbol;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ItemInfo[] allItems;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ItemInfo currentItem;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool played;

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xAD92A0", Offset = "0xAD92A0", VA = "0xAD92A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xAD99AC", Offset = "0xAD99AC", VA = "0xAD99AC")]
	public HUD_Weapon()
	{
	}
}
[Token(Token = "0x20002A5")]
public class HudManager : MonoBehaviour
{
	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C3EF8", Offset = "0x7C3EF8")]
	private static HudManager <instance>k__BackingField;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Hud> hudsInScene;

	[Token(Token = "0x1700014A")]
	public static HudManager instance
	{
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xAE46B4", Offset = "0xAE46B4", VA = "0xAE46B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0218", Offset = "0x7D0218")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xAE4AFC", Offset = "0xAE4AFC", VA = "0xAE4AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0228", Offset = "0x7D0228")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xAE4B54", Offset = "0xAE4B54", VA = "0xAE4B54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xAE4704", Offset = "0xAE4704", VA = "0xAE4704")]
	public void RegisterHudInScene(Hud hud)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xAE4C70", Offset = "0xAE4C70", VA = "0xAE4C70")]
	public void NotifyHuds()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xAE4D9C", Offset = "0xAE4D9C", VA = "0xAE4D9C")]
	public HudManager()
	{
	}
}
[Token(Token = "0x20002A6")]
public class RippedBar : MonoBehaviour
{
	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image pixelsAmountFill;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image activationFill;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image rippedDurationFill;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rippedActivateInstructions;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rippedText;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image[] activateIcons;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fillWithOnepixel;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color fillColor;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color fillColorBlink;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color lightGrey;

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xA65CC0", Offset = "0xA65CC0", VA = "0xA65CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xA65D1C", Offset = "0xA65D1C", VA = "0xA65D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xA66228", Offset = "0xA66228", VA = "0xA66228")]
	public RippedBar()
	{
	}
}
[Token(Token = "0x20002A7")]
public class Level3FakeCredits : BaseLocalizing
{
	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialized;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Font defaultFont;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int defaultTextSize;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3F08", Offset = "0x7C3F08")]
	public Text titleText;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rolesText;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text namesText;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C3F40", Offset = "0x7C3F40")]
	[StringsKey]
	public string titleKey;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[StringsKey]
	public string rolesKeyA;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[StringsKey]
	public string rolesKeyB;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[StringsKey]
	public string rolesKeyC;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[StringsKey]
	public string rolesKeyD;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[StringsKey]
	public string rolesKeyE;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[StringsKey]
	public string rolesKeyF;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[StringsKey]
	public string rolesKeyG;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[StringsKey]
	public string rolesKeyH;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[StringsKey]
	public string rolesKeyI;

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x975E88", Offset = "0x975E88", VA = "0x975E88")]
	private void GetDefaultFontInfo()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x975F00", Offset = "0x975F00", VA = "0x975F00", Slot = "6")]
	protected override void UpdateValues()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x9767CC", Offset = "0x9767CC", VA = "0x9767CC")]
	public Level3FakeCredits()
	{
	}
}
[Token(Token = "0x20002A8")]
public class LevelClearDisplay : MonoBehaviour
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C401C", Offset = "0x7C401C")]
	public TextMesh[] titleMesh;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] leftColumnMesh;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh[] rightColumnMesh;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4054", Offset = "0x7C4054")]
	public string titleKeyPrefix;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[StringsKey]
	public string scoreKey;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[StringsKey]
	public string pixelsKey;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[StringsKey]
	public string timeKey;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[StringsKey]
	public string totalKey;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x983460", Offset = "0x983460", VA = "0x983460")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x983C68", Offset = "0x983C68", VA = "0x983C68")]
	private void SetText(TextMesh[] meshes, string value)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x983CF4", Offset = "0x983CF4", VA = "0x983CF4")]
	public LevelClearDisplay()
	{
	}
}
[Token(Token = "0x20002A9")]
public class DemoOptions : MenuSelector
{
	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C40CC", Offset = "0x7C40CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C40CC", Offset = "0x7C40CC")]
	public DemoTimedTeleport demoTimer;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text timerText;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text timerText_Default;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text inactiveTimerMessage;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color timerInactiveColor;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C412C", Offset = "0x7C412C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C412C", Offset = "0x7C412C")]
	public Text toggleText;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text toggleOnText;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text toggleOffText;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text toggleUnavailable;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MenuSelectable toggleSelectable;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4178", Offset = "0x7C4178")]
	public Text resetText;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text resetText_Default;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MenuSelectable resetSelectable;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xB41638", Offset = "0xB41638", VA = "0xB41638", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xB42304", Offset = "0xB42304", VA = "0xB42304")]
	public void SetTimerToggle()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xB42358", Offset = "0xB42358", VA = "0xB42358")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xB4238C", Offset = "0xB4238C", VA = "0xB4238C")]
	public void RestartDemo()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xB420B4", Offset = "0xB420B4", VA = "0xB420B4")]
	private void TryGetToggleSelectable()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xB421DC", Offset = "0xB421DC", VA = "0xB421DC")]
	private void TryGetResetSelectable()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xB423F0", Offset = "0xB423F0", VA = "0xB423F0")]
	public DemoOptions()
	{
	}
}
[Token(Token = "0x20002AA")]
public class DetectCurrentLevel : MonoBehaviour
{
	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text levelNumber;

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xB42D50", Offset = "0xB42D50", VA = "0xB42D50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xB42E3C", Offset = "0xB42E3C", VA = "0xB42E3C")]
	public DetectCurrentLevel()
	{
	}
}
[Token(Token = "0x20002AB")]
public class GameModeMenuItem : MonoBehaviour, IMenuSlider
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C41B0", Offset = "0x7C41B0")]
	private bool <isSlider>k__BackingField;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelSelect_Manager levelSelect_Manager;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button increase;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Button decrease;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C41C0", Offset = "0x7C41C0")]
	[StringsKey]
	public string defaultKey;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[StringsKey]
	public string hardcoreKey;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextLocalizing text;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MenuSelectable selectable;

	[Token(Token = "0x1700014B")]
	public bool isSlider
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xAD4E04", Offset = "0xAD4E04", VA = "0xAD4E04", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0238", Offset = "0x7D0238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xAD4E0C", Offset = "0xAD4E0C", VA = "0xAD4E0C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0248", Offset = "0x7D0248")]
		set
		{
		}
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xAD4E18", Offset = "0xAD4E18", VA = "0xAD4E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xAD4EA4", Offset = "0xAD4EA4", VA = "0xAD4EA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xAD5050", Offset = "0xAD5050", VA = "0xAD5050")]
	private bool CheckButtonPressed(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xAD5220", Offset = "0xAD5220", VA = "0xAD5220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xAD53E0", Offset = "0xAD53E0", VA = "0xAD53E0")]
	public GameModeMenuItem()
	{
	}
}
[Token(Token = "0x20002AC")]
public class LanguageMenuItem : MonoBehaviour
{
	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD014", Offset = "0x7BD014")]
	private sealed class <UpdateFontLocalizing>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text contentText;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LanguageMenuItem <>4__this;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xAFF2C0", Offset = "0xAFF2C0", VA = "0xAFF2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xAFF330", Offset = "0xAFF330", VA = "0xAFF330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xAFF030", Offset = "0xAFF030", VA = "0xAFF030")]
		[DebuggerHidden]
		public <UpdateFontLocalizing>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xAFF148", Offset = "0xAFF148", VA = "0xAFF148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xAFF14C", Offset = "0xAFF14C", VA = "0xAFF14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xAFF2C8", Offset = "0xAFF2C8", VA = "0xAFF2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Localization.Language language;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int defaultFontSize;

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xAFEEA4", Offset = "0xAFEEA4", VA = "0xAFEEA4")]
	public void SetItemLanguage(Localization.Language lang)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xAFEF74", Offset = "0xAFEF74", VA = "0xAFEF74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0258", Offset = "0x7D0258")]
	private IEnumerator UpdateFontLocalizing(Text contentText)
	{
		return null;
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xAFF05C", Offset = "0xAFF05C", VA = "0xAFF05C")]
	public void ChangeGameLanguage()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xAFF140", Offset = "0xAFF140", VA = "0xAFF140")]
	public LanguageMenuItem()
	{
	}
}
[Token(Token = "0x20002AD")]
public class LanguagesMenu : MonoBehaviour
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuSelector languagesMenu;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageMenuItem languageItemPrefab;

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xAFF344", Offset = "0xAFF344", VA = "0xAFF344")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xAFF4BC", Offset = "0xAFF4BC", VA = "0xAFF4BC")]
	public LanguagesMenu()
	{
	}
}
[Token(Token = "0x20002AE")]
public class LevelMenuItem : MonoBehaviour, IMenuSlider
{
	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4208", Offset = "0x7C4208")]
	private bool <isSlider>k__BackingField;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button increase;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button decrease;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelSelect_Manager levelSelector;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuSelectable selectable;

	[Token(Token = "0x1700014C")]
	public bool isSlider
	{
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x985898", Offset = "0x985898", VA = "0x985898", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D02BC", Offset = "0x7D02BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x9858A0", Offset = "0x9858A0", VA = "0x9858A0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D02CC", Offset = "0x7D02CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x9858AC", Offset = "0x9858AC", VA = "0x9858AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x985978", Offset = "0x985978", VA = "0x985978")]
	private bool CheckButtonPressed(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x985B48", Offset = "0x985B48", VA = "0x985B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x985BEC", Offset = "0x985BEC", VA = "0x985BEC")]
	public LevelMenuItem()
	{
	}
}
[Token(Token = "0x20002AF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BB394", Offset = "0x7BB394")]
public class LevelComponent : ScriptableObject
{
	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int levelNumber;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite levelImage;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C4218", Offset = "0x7C4218")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4218", Offset = "0x7C4218")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4218", Offset = "0x7C4218")]
	public string introScene;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string mainScene;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string bossScene;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4288", Offset = "0x7C4288")]
	public string bossStateName;

	[NonSerialized]
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isLocked;

	[Token(Token = "0x1700014D")]
	public bool hasIntro
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x985580", Offset = "0x985580", VA = "0x985580")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014E")]
	public bool hasMain
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x9855A4", Offset = "0x9855A4", VA = "0x9855A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014F")]
	public bool hasBoss
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9855C8", Offset = "0x9855C8", VA = "0x9855C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000150")]
	public bool bossIsState
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x985610", Offset = "0x985610", VA = "0x985610")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000151")]
	public bool introLocked
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x985658", Offset = "0x985658", VA = "0x985658")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000152")]
	public bool mainLocked
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x9857A0", Offset = "0x9857A0", VA = "0x9857A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000153")]
	public bool bossLocked
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x985818", Offset = "0x985818", VA = "0x985818")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x985890", Offset = "0x985890", VA = "0x985890")]
	public LevelComponent()
	{
	}
}
[Token(Token = "0x20002B0")]
public class LevelMilestones : MonoBehaviour
{
	[Token(Token = "0x2000638")]
	public enum Section
	{
		[Token(Token = "0x4001F0E")]
		Intro,
		[Token(Token = "0x4001F0F")]
		Main,
		[Token(Token = "0x4001F10")]
		Boss
	}

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LevelComponent> allLevels;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C42C0", Offset = "0x7C42C0")]
	private static LevelComponent[] <levels>k__BackingField;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<int, LevelComponent> levelByNumber;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool initialized;

	[Token(Token = "0x17000154")]
	public static LevelComponent[] levels
	{
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x985C08", Offset = "0x985C08", VA = "0x985C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D02DC", Offset = "0x7D02DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x985C70", Offset = "0x985C70", VA = "0x985C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D02EC", Offset = "0x7D02EC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x985CE0", Offset = "0x985CE0", VA = "0x985CE0")]
	public static LevelComponent GetLevel(int level)
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x985D8C", Offset = "0x985D8C", VA = "0x985D8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x9861EC", Offset = "0x9861EC", VA = "0x9861EC")]
	private static string GetLevelKey(int level)
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x986348", Offset = "0x986348", VA = "0x986348")]
	private static string GetLevelKey(int level, Section target)
	{
		return null;
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x98612C", Offset = "0x98612C", VA = "0x98612C")]
	public static void UnlockLevel(int level)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x98663C", Offset = "0x98663C", VA = "0x98663C")]
	public static void SetCurrentLevel(int level)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x986704", Offset = "0x986704", VA = "0x986704")]
	public static void SetCurrentLevel(int level, Section target)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x9867E0", Offset = "0x9867E0", VA = "0x9867E0")]
	public static void UnlockLevel(int level, Section target)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x9868B4", Offset = "0x9868B4", VA = "0x9868B4")]
	public static bool IsLevelUnlocked(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x9856D0", Offset = "0x9856D0", VA = "0x9856D0")]
	public static bool IsLevelUnlocked(int level, Section target)
	{
		return default(bool);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x98697C", Offset = "0x98697C", VA = "0x98697C")]
	public static bool GetAllUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x986A38", Offset = "0x986A38", VA = "0x986A38")]
	public static void SetAllLevels(bool unlocked)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x986DAC", Offset = "0x986DAC", VA = "0x986DAC")]
	public static LevelComponent GetLevelComponent(int index)
	{
		return null;
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x986E44", Offset = "0x986E44", VA = "0x986E44")]
	public static LevelComponent[] GetAllLevels()
	{
		return null;
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x986EA0", Offset = "0x986EA0", VA = "0x986EA0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D02FC", Offset = "0x7D02FC")]
	private void LockAll()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x986F00", Offset = "0x986F00", VA = "0x986F00")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D0334", Offset = "0x7D0334")]
	private void UnlockAll()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x986F60", Offset = "0x986F60", VA = "0x986F60")]
	public LevelMilestones()
	{
	}
}
[Token(Token = "0x20002B1")]
public class LevelSelect_Manager : MenuSelector
{
	[Token(Token = "0x2000639")]
	public enum TargetCheckpoint
	{
		[Token(Token = "0x4001F12")]
		Intro,
		[Token(Token = "0x4001F13")]
		Main,
		[Token(Token = "0x4001F14")]
		Boss
	}

	[Token(Token = "0x200063A")]
	public enum Transition
	{
		[Token(Token = "0x4001F16")]
		Default,
		[Token(Token = "0x4001F17")]
		Fallback,
		[Token(Token = "0x4001F18")]
		IceCream,
		[Token(Token = "0x4001F19")]
		Noise,
		[Token(Token = "0x4001F1A")]
		Sync,
		[Token(Token = "0x4001F1B")]
		SyncAlt,
		[Token(Token = "0x4001F1C")]
		White,
		[Token(Token = "0x4001F1D")]
		Xmas
	}

	[Token(Token = "0x200063B")]
	public enum LevelSelectState
	{
		[Token(Token = "0x4001F1F")]
		Main,
		[Token(Token = "0x4001F20")]
		StartingPoint,
		[Token(Token = "0x4001F21")]
		Acceptance
	}

	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD024", Offset = "0x7BD024")]
	private sealed class <UpdateFont>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSelect_Manager <>4__this;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x9893A4", Offset = "0x9893A4", VA = "0x9893A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x989414", Offset = "0x989414", VA = "0x989414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x9882E4", Offset = "0x9882E4", VA = "0x9882E4")]
		[DebuggerHidden]
		public <UpdateFont>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x989294", Offset = "0x989294", VA = "0x989294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x989298", Offset = "0x989298", VA = "0x989298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x9893AC", Offset = "0x9893AC", VA = "0x9893AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200063D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD034", Offset = "0x7BD034")]
	private struct <>c__DisplayClass45_0
	{
		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelSelect_Manager <>4__this;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool hardcore;
	}

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LevelComponent currentLevel;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int currentLevelIndex;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C42D0", Offset = "0x7C42D0")]
	public Image image;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text titleName;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text standardTitleName;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject locker;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C42E0", Offset = "0x7C42E0")]
	public Color unlockedColor;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color lockedColor;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TargetCheckpoint checkpointTarget;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C42F0", Offset = "0x7C42F0")]
	public Transition transitionType;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C4300", Offset = "0x7C4300")]
	public LevelSelectState state;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject selectStartPoint_Panel;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CollectableUI collectableUI;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HighScoreDisplay scoreDisplay;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4310", Offset = "0x7C4310")]
	public Image gameModeIcon;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Image checkIcon;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Sprite normalIcon;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Sprite hardcoreIcon;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4348", Offset = "0x7C4348")]
	public Image[] backgroundImage;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Sprite defaultBackgroundSprite;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite hardcoreBackgroundSprite;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color hardcoreBackgroundColor;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text[] nonSelectableTexts;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color hardcoreDefaultFontColor;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color hardcoreSelectedFontColor;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4380", Offset = "0x7C4380")]
	public bool loadIntro;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C43B8", Offset = "0x7C43B8")]
	public bool loadMain;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C43F0", Offset = "0x7C43F0")]
	public bool loadBoss;

	[Token(Token = "0x17000155")]
	public override Color defaultColorToUse
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x987B64", Offset = "0x987B64", VA = "0x987B64", Slot = "4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000156")]
	public override Color selectedColorToUse
	{
		[Token(Token = "0x600100F")]
		[Address(RVA = "0x987C08", Offset = "0x987C08", VA = "0x987C08", Slot = "5")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000157")]
	protected bool acceptAction
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x987CAC", Offset = "0x987CAC", VA = "0x987CAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000158")]
	private string transitionScene
	{
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x987D10", Offset = "0x987D10", VA = "0x987D10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x987E1C", Offset = "0x987E1C", VA = "0x987E1C", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x987EC4", Offset = "0x987EC4", VA = "0x987EC4")]
	private void UpdateText(Localization.Language language)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x988264", Offset = "0x988264", VA = "0x988264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D036C", Offset = "0x7D036C")]
	private IEnumerator UpdateFont()
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x988310", Offset = "0x988310", VA = "0x988310", Slot = "7")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x9884C8", Offset = "0x9884C8", VA = "0x9884C8", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x988778", Offset = "0x988778", VA = "0x988778", Slot = "10")]
	public override void SelectItem()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x9887A0", Offset = "0x9887A0", VA = "0x9887A0")]
	public void UpdateHardcoreDisplay(bool hardcore)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x987EC8", Offset = "0x987EC8", VA = "0x987EC8")]
	public void SelectLevelToDisplay()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x988C24", Offset = "0x988C24", VA = "0x988C24")]
	public void ShowAnotherLevel(bool forward)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x988DA4", Offset = "0x988DA4", VA = "0x988DA4")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x989140", Offset = "0x989140", VA = "0x989140")]
	public void LoadLevel(LevelComponent levelToLoad, TargetCheckpoint checkpoint)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x988EB0", Offset = "0x988EB0", VA = "0x988EB0")]
	private string TryGetSceneName(TargetCheckpoint loadTarget)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x987D14", Offset = "0x987D14", VA = "0x987D14")]
	private string GetTransitionName()
	{
		return null;
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x9883E0", Offset = "0x9883E0", VA = "0x9883E0")]
	public void ChangeState(int index)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x988624", Offset = "0x988624", VA = "0x988624")]
	private void ChangeState(LevelSelectState newState)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x988530", Offset = "0x988530", VA = "0x988530")]
	public void TrySelectLevel()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x989264", Offset = "0x989264", VA = "0x989264")]
	public void TrySelectCheckpoint(int checkpointIndex)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x989274", Offset = "0x989274", VA = "0x989274")]
	public void SetCheckpoint(int checkpointIndex)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x98927C", Offset = "0x98927C", VA = "0x98927C")]
	public LevelComponent GetCurrentLevel()
	{
		return null;
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x985BDC", Offset = "0x985BDC", VA = "0x985BDC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D03D0", Offset = "0x7D03D0")]
	public void Next()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x985BE4", Offset = "0x985BE4", VA = "0x985BE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D0408", Offset = "0x7D0408")]
	public void Previous()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x98870C", Offset = "0x98870C", VA = "0x98870C")]
	private void Debuge()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x989050", Offset = "0x989050", VA = "0x989050")]
	private void CheckStaticAchievments(string levelName)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x989284", Offset = "0x989284", VA = "0x989284")]
	public LevelSelect_Manager()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x9887F4", Offset = "0x9887F4", VA = "0x9887F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0440", Offset = "0x7D0440")]
	private void <UpdateHardcoreDisplay>g__UpdateIcons|45_0(ref <>c__DisplayClass45_0 P_0)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x98897C", Offset = "0x98897C", VA = "0x98897C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0450", Offset = "0x7D0450")]
	private void <UpdateHardcoreDisplay>g__UpdateColors|45_1(ref <>c__DisplayClass45_0 P_0)
	{
	}
}
[Token(Token = "0x20002B2")]
public class LevelSelect_Selectable : MenuSelectable
{
	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4428", Offset = "0x7C4428")]
	public LevelSelect_Manager levelSelect_Manager;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LevelSelect_Manager.TargetCheckpoint representedCheckpoint;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x98941C", Offset = "0x98941C", VA = "0x98941C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x9894E0", Offset = "0x9894E0", VA = "0x9894E0", Slot = "4")]
	public override void Select(RectTransform pointer, Color newColor)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x989444", Offset = "0x989444", VA = "0x989444")]
	private void CheckLevelLocked()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x9894E8", Offset = "0x9894E8", VA = "0x9894E8")]
	public LevelSelect_Selectable()
	{
	}
}
[Token(Token = "0x20002B3")]
public class MenuSelectable : MonoBehaviour
{
	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PlayerMenuManager.Menus selectedMenu;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerMenuManager.SoundName selectedSound;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color overrideDefaultColor;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool locked;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lockedColor;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4460", Offset = "0x7C4460")]
	private bool <isSelected>k__BackingField;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MenuSelector menuSelector;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Text menuText;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Image menuImage;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 pointerSize_Increment;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent onSelected;

	[Token(Token = "0x17000159")]
	public bool isSelected
	{
		[Token(Token = "0x6001030")]
		[Address(RVA = "0xA31F30", Offset = "0xA31F30", VA = "0xA31F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0460", Offset = "0x7D0460")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xA31F38", Offset = "0xA31F38", VA = "0xA31F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0470", Offset = "0x7D0470")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	protected bool selectAction
	{
		[Token(Token = "0x6001032")]
		[Address(RVA = "0xA31F44", Offset = "0xA31F44", VA = "0xA31F44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xA31FA8", Offset = "0xA31FA8", VA = "0xA31FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xA31FF0", Offset = "0xA31FF0", VA = "0xA31FF0")]
	public void Select()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xA31FFC", Offset = "0xA31FFC", VA = "0xA31FFC")]
	public void Select(RectTransform pointer)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xA32008", Offset = "0xA32008", VA = "0xA32008")]
	public void Select(Color newColor)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xA320AC", Offset = "0xA320AC", VA = "0xA320AC", Slot = "4")]
	public virtual void Select(RectTransform pointer, Color newColor)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xA32358", Offset = "0xA32358", VA = "0xA32358")]
	public void Deselect()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xA32360", Offset = "0xA32360", VA = "0xA32360")]
	public void Deselect(Color newColor)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xA323E0", Offset = "0xA323E0", VA = "0xA323E0")]
	public void ResetItem()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xA323E4", Offset = "0xA323E4", VA = "0xA323E4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xA324B8", Offset = "0xA324B8", VA = "0xA324B8", Slot = "6")]
	public virtual void OpenSelectedMenu()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xA3228C", Offset = "0xA3228C", VA = "0xA3228C")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xA31FCC", Offset = "0xA31FCC", VA = "0xA31FCC")]
	protected void TryGet_All()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xA32524", Offset = "0xA32524", VA = "0xA32524")]
	protected bool TryGetText()
	{
		return default(bool);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xA326EC", Offset = "0xA326EC", VA = "0xA326EC")]
	private bool TryGetTextWidth_Height(out Vector2 returnValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xA327F8", Offset = "0xA327F8", VA = "0xA327F8")]
	private int CalculateLengthOfMessage(Text message)
	{
		return default(int);
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xA32608", Offset = "0xA32608", VA = "0xA32608")]
	protected bool TryGetImage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xA32014", Offset = "0xA32014", VA = "0xA32014")]
	private void ChangeColor(Color c)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xA32970", Offset = "0xA32970", VA = "0xA32970")]
	private void CheckColor()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xA329C4", Offset = "0xA329C4", VA = "0xA329C4")]
	private Color TryGetCurrentColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xA32A30", Offset = "0xA32A30", VA = "0xA32A30")]
	public void ToggleLock(bool status)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xA32A3C", Offset = "0xA32A3C", VA = "0xA32A3C")]
	public MenuSelectable()
	{
	}
}
[Token(Token = "0x20002B4")]
public class MenuSelector : MonoBehaviour
{
	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button nextItem;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button previousItem;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableOnBackInput;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color defaultColor;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color selectedColor;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<MenuSelectable> items;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int itemIndex;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform pointer;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image newIcon;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image[] additionalNewIcons;

	[Token(Token = "0x1700015B")]
	private bool advanceAction
	{
		[Token(Token = "0x6001049")]
		[Address(RVA = "0xA32C00", Offset = "0xA32C00", VA = "0xA32C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015C")]
	private bool returnAction
	{
		[Token(Token = "0x600104A")]
		[Address(RVA = "0xA32C88", Offset = "0xA32C88", VA = "0xA32C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	protected bool backAction
	{
		[Token(Token = "0x600104B")]
		[Address(RVA = "0xA32D10", Offset = "0xA32D10", VA = "0xA32D10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015E")]
	protected bool hasFocus
	{
		[Token(Token = "0x600104C")]
		[Address(RVA = "0xA32D74", Offset = "0xA32D74", VA = "0xA32D74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015F")]
	public virtual Color defaultColorToUse
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0xA32DDC", Offset = "0xA32DDC", VA = "0xA32DDC", Slot = "4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000160")]
	public virtual Color selectedColorToUse
	{
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xA32DE8", Offset = "0xA32DE8", VA = "0xA32DE8", Slot = "5")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xA32AA0", Offset = "0xA32AA0", VA = "0xA32AA0")]
	private bool CheckAxis(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xA32DF4", Offset = "0xA32DF4", VA = "0xA32DF4", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xA32F84", Offset = "0xA32F84", VA = "0xA32F84", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xA33060", Offset = "0xA33060", VA = "0xA33060", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xA330FC", Offset = "0xA330FC", VA = "0xA330FC", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xA32E70", Offset = "0xA32E70", VA = "0xA32E70")]
	public void UpdateSelectablesList()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xA332EC", Offset = "0xA332EC", VA = "0xA332EC")]
	private void ChangeSelectable(bool increase)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA33498", Offset = "0xA33498", VA = "0xA33498", Slot = "10")]
	public virtual void SelectItem()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA336B8", Offset = "0xA336B8", VA = "0xA336B8", Slot = "11")]
	public virtual void DisplayNew(bool display)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA337E4", Offset = "0xA337E4", VA = "0xA337E4")]
	public MenuSelector()
	{
	}
}
[Token(Token = "0x20002B5")]
public delegate void PauseEvent(bool isPaused);
[Token(Token = "0x20002B6")]
public class Pause : MonoBehaviour
{
	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseEvent pauseEvent;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4470", Offset = "0x7C4470")]
	private static bool <menuPause>k__BackingField;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4480", Offset = "0x7C4480")]
	private static bool <forcePause>k__BackingField;

	[Token(Token = "0x400105D")]
	private const string musicBus_Path = "bus:/music";

	[Token(Token = "0x400105E")]
	private const string sfxBus_Path = "bus:/sfx";

	[Token(Token = "0x400105F")]
	private const string voBus_Path = "bus:/vo";

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bus musicBus;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Bus sfxBus;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Bus voBus;

	[Token(Token = "0x17000161")]
	public static bool isPaused
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xC3D568", Offset = "0xC3D568", VA = "0xC3D568")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000162")]
	private static bool menuPause
	{
		[Token(Token = "0x600105D")]
		[Address(RVA = "0xC3FE48", Offset = "0xC3FE48", VA = "0xC3FE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0480", Offset = "0x7D0480")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xC3FE98", Offset = "0xC3FE98", VA = "0xC3FE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0490", Offset = "0x7D0490")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public static bool forcePause
	{
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC3D5FC", Offset = "0xC3D5FC", VA = "0xC3D5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D04A0", Offset = "0x7D04A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC3D510", Offset = "0xC3D510", VA = "0xC3D510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D04B0", Offset = "0x7D04B0")]
		set
		{
		}
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xC3FEF0", Offset = "0xC3FEF0", VA = "0xC3FEF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xC3FF98", Offset = "0xC3FF98", VA = "0xC3FF98")]
	public void SetPaused(bool pause)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xC403B0", Offset = "0xC403B0", VA = "0xC403B0")]
	public Pause()
	{
	}
}
[Token(Token = "0x20002B7")]
public class PlayerMenuManager : MonoBehaviour
{
	[Token(Token = "0x200063E")]
	public enum SoundName
	{
		[Token(Token = "0x4001F28")]
		Open,
		[Token(Token = "0x4001F29")]
		Close,
		[Token(Token = "0x4001F2A")]
		Accept,
		[Token(Token = "0x4001F2B")]
		Reject,
		[Token(Token = "0x4001F2C")]
		Select
	}

	[Token(Token = "0x200063F")]
	public enum Menus
	{
		[Token(Token = "0x4001F2E")]
		None,
		[Token(Token = "0x4001F2F")]
		MenuSelection,
		[Token(Token = "0x4001F30")]
		LevelSelect,
		[Token(Token = "0x4001F31")]
		Controls,
		[Token(Token = "0x4001F32")]
		Settings,
		[Token(Token = "0x4001F33")]
		Demo,
		[Token(Token = "0x4001F34")]
		Language,
		[Token(Token = "0x4001F35")]
		Spectator,
		[Token(Token = "0x4001F36")]
		StartGame,
		[Token(Token = "0x4001F37")]
		Outfit
	}

	[Token(Token = "0x2000640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD044", Offset = "0x7BD044")]
	private sealed class <CheckMenuActive>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMenuManager <>4__this;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xB92684", Offset = "0xB92684", VA = "0xB92684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xB926F4", Offset = "0xB926F4", VA = "0xB926F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xB9214C", Offset = "0xB9214C", VA = "0xB9214C")]
		[DebuggerHidden]
		public <CheckMenuActive>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xB92594", Offset = "0xB92594", VA = "0xB92594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xB92598", Offset = "0xB92598", VA = "0xB92598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xB9268C", Offset = "0xB9268C", VA = "0xB9268C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerMenuManager instance;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4490", Offset = "0x7C4490")]
	private static bool <menuActive>k__BackingField;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C44A0", Offset = "0x7C44A0")]
	public MenuSelector menuSelectionScreen;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuSelector levelSelectScreen;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuSelector controlsScreen;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuSelector settingsScreen;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MenuSelector demoOptionsScreen;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MenuSelector languageScreen;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MenuSelector spectatorScreen;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MenuSelector outfitScreen;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Menus _currentMenu;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C44D8", Offset = "0x7C44D8")]
	public MenuSelector confirmationScreen;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action confirmationActionYes;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action confirmationActionNo;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4510", Offset = "0x7C4510")]
	public MenuSelector analyticsConfirmationScreen;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4548", Offset = "0x7C4548")]
	public MenuSelector gameModeConfirmationScreen;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4580", Offset = "0x7C4580")]
	public bool startActive;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool pauseWhenMenuActive;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool disableOnUnpause;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C45B8", Offset = "0x7C45B8")]
	public Transform positionRef;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 offset;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool followRefScale;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Pause pauseController;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C45F0", Offset = "0x7C45F0")]
	public PlayableDirector fadeTimeline;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string levelToLoad_name;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string levelToLoad_transition;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	public string menuOpenSound;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[EventRef]
	public string menuCloseSound;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[EventRef]
	public string selectSound;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[EventRef]
	public string rejectSound;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[EventRef]
	public string acceptSound;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<string> menusWithNEW;

	[Token(Token = "0x4001083")]
	public const string menusWithNewIconKey = "MenusNew";

	[Token(Token = "0x4001084")]
	private const char separator = ',';

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Stack<MenuSelector> selectorList;

	[Token(Token = "0x17000164")]
	public static Menus currentMenu
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xB8F8A0", Offset = "0xB8F8A0", VA = "0xB8F8A0")]
		get
		{
			return default(Menus);
		}
	}

	[Token(Token = "0x17000165")]
	public static bool menuActive
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xB8F918", Offset = "0xB8F918", VA = "0xB8F918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D04C0", Offset = "0x7D04C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xB8F980", Offset = "0xB8F980", VA = "0xB8F980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D04D0", Offset = "0x7D04D0")]
		private set
		{
		}
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xB8F9F0", Offset = "0xB8F9F0", VA = "0xB8F9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xB90358", Offset = "0xB90358", VA = "0xB90358")]
	private void Update()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xB90734", Offset = "0xB90734", VA = "0xB90734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xB9074C", Offset = "0xB9074C", VA = "0xB9074C")]
	public static bool TryOpenMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xB8FCD8", Offset = "0xB8FCD8", VA = "0xB8FCD8")]
	public static void ChangeMenu(Menus newMenu)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xB90ADC", Offset = "0xB90ADC", VA = "0xB90ADC")]
	public static void SaveNewFeatureInMenu(Menus menu)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xB900C8", Offset = "0xB900C8", VA = "0xB900C8")]
	private static void PopulateMenusWithNewIcon(bool display)
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xB90F1C", Offset = "0xB90F1C", VA = "0xB90F1C")]
	private static void DisplayNewInMenu(Menus menu, bool display = true)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xB909A0", Offset = "0xB909A0", VA = "0xB909A0")]
	private static void TryConsumeNEW(Menus _menu)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xB91514", Offset = "0xB91514", VA = "0xB91514")]
	public static void ShowConfirmationScreen(Action yesAction, [Optional] Action noAction)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xB9161C", Offset = "0xB9161C", VA = "0xB9161C")]
	public static void ShowAnalyticsScreen(Action yesAction, [Optional] Action noAction)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xB91724", Offset = "0xB91724", VA = "0xB91724")]
	public static void ShowGameModeScreen(Action yesAction, Action noAction)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xB9182C", Offset = "0xB9182C", VA = "0xB9182C")]
	public void CallConfirmationMethod_Yes()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xB9185C", Offset = "0xB9185C", VA = "0xB9185C")]
	public void CallConfirmationMethod_No()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xB90860", Offset = "0xB90860", VA = "0xB90860")]
	private void ResetConfirmationScreen()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xB9188C", Offset = "0xB9188C", VA = "0xB9188C")]
	public void ConfirmMainMenuScene()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xB91920", Offset = "0xB91920", VA = "0xB91920")]
	public void ConfirmExitGame()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xB919B4", Offset = "0xB919B4", VA = "0xB919B4")]
	public void ConfirmDeleteSave()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xB91A48", Offset = "0xB91A48", VA = "0xB91A48")]
	private void ReturnToMainMenuScene()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xB91B50", Offset = "0xB91B50", VA = "0xB91B50")]
	private void ExitGame()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xB91B58", Offset = "0xB91B58", VA = "0xB91B58")]
	private void DeleteSave()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xB91C5C", Offset = "0xB91C5C", VA = "0xB91C5C")]
	public static bool SelectorHasFocus(MenuSelector selector)
	{
		return default(bool);
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xB91D98", Offset = "0xB91D98", VA = "0xB91D98")]
	public static void RegisterSelector(MenuSelector selector)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xB91E38", Offset = "0xB91E38", VA = "0xB91E38")]
	public static void UnregisterSelector(MenuSelector selector)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xB920CC", Offset = "0xB920CC", VA = "0xB920CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D04E0", Offset = "0x7D04E0")]
	private IEnumerator CheckMenuActive()
	{
		return null;
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xB92178", Offset = "0xB92178", VA = "0xB92178")]
	public void StartFade()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xB92238", Offset = "0xB92238", VA = "0xB92238")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xB923A0", Offset = "0xB923A0", VA = "0xB923A0")]
	public void LoadLevel(string name)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xB92410", Offset = "0xB92410", VA = "0xB92410")]
	public static void SetLoadLevelName(string newName, string transition = "")
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xB91ABC", Offset = "0xB91ABC", VA = "0xB91ABC")]
	public static void FullLoad(string newName, string transition = "")
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xB90604", Offset = "0xB90604", VA = "0xB90604")]
	public void PlaySound(SoundName soundName)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xB924A0", Offset = "0xB924A0", VA = "0xB924A0")]
	public PlayerMenuManager()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xB911CC", Offset = "0xB911CC", VA = "0xB911CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0544", Offset = "0x7D0544")]
	internal static void <TryConsumeNEW>g__TryRemoveFromSave|49_0(string menuToRemove)
	{
	}
}
[Token(Token = "0x20002B8")]
public class PS4TrackingModeMenuItem : MonoBehaviour
{
	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textValue;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string enabledTxt;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string disabledTxt;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool trackingDisabled;

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xC3E840", Offset = "0xC3E840", VA = "0xC3E840")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xC3E8E8", Offset = "0xC3E8E8", VA = "0xC3E8E8")]
	public void ToggleTracking()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xC3E9A4", Offset = "0xC3E9A4", VA = "0xC3E9A4")]
	public PS4TrackingModeMenuItem()
	{
	}
}
[Token(Token = "0x20002B9")]
public class ShowVersionInfo : MonoBehaviour
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefix;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateInRealTime;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA719CC", Offset = "0xA719CC", VA = "0xA719CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA71AD0", Offset = "0xA71AD0", VA = "0xA71AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA71A78", Offset = "0xA71A78", VA = "0xA71A78")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA71AE0", Offset = "0xA71AE0", VA = "0xA71AE0")]
	public ShowVersionInfo()
	{
	}
}
[Token(Token = "0x20002BA")]
public class SkipMenuItem : MonoBehaviour
{
	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textValue;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string enabledTxt;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string disabledTxt;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool enabledValue;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xA72EA8", Offset = "0xA72EA8", VA = "0xA72EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xA72F48", Offset = "0xA72F48", VA = "0xA72F48")]
	public void ToggleSkip()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA72FCC", Offset = "0xA72FCC", VA = "0xA72FCC")]
	public SkipMenuItem()
	{
	}
}
[Token(Token = "0x20002BB")]
public class SpectatorMenuItem : MonoBehaviour, IMenuSlider
{
	[Token(Token = "0x2000641")]
	public enum SpectatorItem
	{
		[Token(Token = "0x4001F3C")]
		Enable,
		[Token(Token = "0x4001F3D")]
		FOV,
		[Token(Token = "0x4001F3E")]
		Smoothness
	}

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4678", Offset = "0x7C4678")]
	private bool <isSlider>k__BackingField;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpectatorItem itemType;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4688", Offset = "0x7C4688")]
	public string enabledTxt;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string disabledTxt;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C46C0", Offset = "0x7C46C0")]
	public Button increase;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Button decrease;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MenuSelectable selectable;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool enabledValue;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float sliderValue;

	[Token(Token = "0x17000166")]
	public bool isSlider
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xA74B24", Offset = "0xA74B24", VA = "0xA74B24", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0554", Offset = "0x7D0554")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xA74B2C", Offset = "0xA74B2C", VA = "0xA74B2C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0564", Offset = "0x7D0564")]
		set
		{
		}
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xA74B38", Offset = "0xA74B38", VA = "0xA74B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xA74CF8", Offset = "0xA74CF8", VA = "0xA74CF8")]
	public void ToggleSpectatorMode()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xA74DAC", Offset = "0xA74DAC", VA = "0xA74DAC")]
	private bool CheckButtonPressed(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xA74F7C", Offset = "0xA74F7C", VA = "0xA74F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xA75094", Offset = "0xA75094", VA = "0xA75094")]
	private void SetSliderValue(bool increase, SpectatorItem _type)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xA751E0", Offset = "0xA751E0", VA = "0xA751E0")]
	public SpectatorMenuItem()
	{
	}
}
[Token(Token = "0x20002BC")]
public class StartGame_MenuSelectable : MenuSelectable
{
	[Token(Token = "0x2000642")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD054", Offset = "0x7BD054")]
	private sealed class <UpdateText>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartGame_MenuSelectable <>4__this;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xA774BC", Offset = "0xA774BC", VA = "0xA774BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xA7752C", Offset = "0xA7752C", VA = "0xA7752C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xA77360", Offset = "0xA77360", VA = "0xA77360")]
		[DebuggerHidden]
		public <UpdateText>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xA7738C", Offset = "0xA7738C", VA = "0xA7738C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xA77390", Offset = "0xA77390", VA = "0xA77390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xA774C4", Offset = "0xA774C4", VA = "0xA774C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LevelSelect_Manager levelSelect;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Text continueText;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Text newGameText;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LevelComponent[] allLevels;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int levelIndex;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public LevelSelect_Manager.TargetCheckpoint levelCheckpoint;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string tempLevelName;

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xA76AE8", Offset = "0xA76AE8", VA = "0xA76AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xA76BA0", Offset = "0xA76BA0", VA = "0xA76BA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xA76BCC", Offset = "0xA76BCC", VA = "0xA76BCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0574", Offset = "0x7D0574")]
	private IEnumerator UpdateText()
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xA76C4C", Offset = "0xA76C4C", VA = "0xA76C4C")]
	private string GetLastLevel()
	{
		return null;
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xA76CCC", Offset = "0xA76CCC", VA = "0xA76CCC")]
	private void ToggleTexts()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xA76DF4", Offset = "0xA76DF4", VA = "0xA76DF4")]
	private void ParseLastLevelName()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xA77040", Offset = "0xA77040", VA = "0xA77040", Slot = "6")]
	public override void OpenSelectedMenu()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xA77104", Offset = "0xA77104", VA = "0xA77104")]
	private void LoadLevel_Normal()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xA772F8", Offset = "0xA772F8", VA = "0xA772F8")]
	private void LoadLevel_Hardcore()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xA7710C", Offset = "0xA7710C", VA = "0xA7710C")]
	private void LoadLevel(bool useHardcore)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xA77300", Offset = "0xA77300", VA = "0xA77300")]
	public StartGame_MenuSelectable()
	{
	}
}
[Token(Token = "0x20002BD")]
[ExecuteAlways]
public class StringConcatenator : MonoBehaviour
{
	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C46F8", Offset = "0x7C46F8")]
	public bool preview;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4730", Offset = "0x7C4730")]
	public List<Text> textsToMerge;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4768", Offset = "0x7C4768")]
	public string separator;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text t;

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xA7895C", Offset = "0xA7895C", VA = "0xA7895C")]
	private void TryGetText()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xA78A10", Offset = "0xA78A10", VA = "0xA78A10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xA78A94", Offset = "0xA78A94", VA = "0xA78A94")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xA78B14", Offset = "0xA78B14", VA = "0xA78B14")]
	private void ConcatenateStrings()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xA78DC4", Offset = "0xA78DC4", VA = "0xA78DC4")]
	public StringConcatenator()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SubtitleMenuItem : MonoBehaviour
{
	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textValue;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string enabledTxt;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string disabledTxt;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool enabledValue;

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xA7C818", Offset = "0xA7C818", VA = "0xA7C818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xA7C8C0", Offset = "0xA7C8C0", VA = "0xA7C8C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xA7C964", Offset = "0xA7C964", VA = "0xA7C964")]
	public void ToggleSubtitle()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xA7CA2C", Offset = "0xA7CA2C", VA = "0xA7CA2C")]
	public SubtitleMenuItem()
	{
	}
}
[Token(Token = "0x20002BF")]
public class TimerMenuItem : MonoBehaviour
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textValue;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string enabledTxt;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string disabledTxt;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool enabledValue;

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xA8AFAC", Offset = "0xA8AFAC", VA = "0xA8AFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xA8B010", Offset = "0xA8B010", VA = "0xA8B010")]
	public void ToggleTimer()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xA8B084", Offset = "0xA8B084", VA = "0xA8B084")]
	public TimerMenuItem()
	{
	}
}
[Token(Token = "0x20002C0")]
public interface IMenuSlider
{
	[Token(Token = "0x17000167")]
	bool isSlider
	{
		[Token(Token = "0x60010B2")]
		get;
		[Token(Token = "0x60010B3")]
		set;
	}
}
[Token(Token = "0x20002C1")]
public class VolumeMenuItem : MonoBehaviour, IMenuSlider
{
	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C47A0", Offset = "0x7C47A0")]
	private bool <isSlider>k__BackingField;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button increase;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button decrease;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text sliderValue;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string soundBus;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MenuSelectable selectable;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VCA vca;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentVolume;

	[Token(Token = "0x17000168")]
	public bool isSlider
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x115E71C", Offset = "0x115E71C", VA = "0x115E71C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D05D8", Offset = "0x7D05D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x115E724", Offset = "0x115E724", VA = "0x115E724", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D05E8", Offset = "0x7D05E8")]
		set
		{
		}
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x115E730", Offset = "0x115E730", VA = "0x115E730")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x115E7D8", Offset = "0x115E7D8", VA = "0x115E7D8")]
	private bool CheckButtonPressed(Button b)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x115E9A4", Offset = "0x115E9A4", VA = "0x115E9A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x115EAF8", Offset = "0x115EAF8", VA = "0x115EAF8")]
	private void SetVolume(bool increase)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x115EBA8", Offset = "0x115EBA8", VA = "0x115EBA8")]
	public VolumeMenuItem()
	{
	}
}
[Token(Token = "0x20002C2")]
public class ParticleScreen : MonoBehaviour
{
	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture screenTexture;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem screenParticles;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pixelSize;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distortion;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NativeArray<Color32> pixels;

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xC3F960", Offset = "0xC3F960", VA = "0xC3F960")]
	public void Emit()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xC3F9DC", Offset = "0xC3F9DC", VA = "0xC3F9DC")]
	public void Emit(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xC3FCAC", Offset = "0xC3FCAC", VA = "0xC3FCAC")]
	private void ToTexture2D()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xC3FE30", Offset = "0xC3FE30", VA = "0xC3FE30")]
	public ParticleScreen()
	{
	}
}
[Token(Token = "0x20002C3")]
public class RealWorldGameText : MonoBehaviour
{
	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool lockDot;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startBossTxtDuration;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action methodToCallOnDisable;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isActive;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xA5F750", Offset = "0xA5F750", VA = "0xA5F750")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xA5F83C", Offset = "0xA5F83C", VA = "0xA5F83C")]
	public void ShowStartBossText(Action callOnEnd)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xA5F874", Offset = "0xA5F874", VA = "0xA5F874")]
	public RealWorldGameText()
	{
	}
}
[Token(Token = "0x20002C4")]
public class VFXManager : MonoBehaviour
{
	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD064", Offset = "0x7BD064")]
	private sealed class <CallBossStart>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action endMethod;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xA93598", Offset = "0xA93598", VA = "0xA93598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002700")]
			[Address(RVA = "0xA93608", Offset = "0xA93608", VA = "0xA93608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xA92D34", Offset = "0xA92D34", VA = "0xA92D34")]
		[DebuggerHidden]
		public <CallBossStart>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xA934CC", Offset = "0xA934CC", VA = "0xA934CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xA934D0", Offset = "0xA934D0", VA = "0xA934D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xA935A0", Offset = "0xA935A0", VA = "0xA935A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD074", Offset = "0x7BD074")]
	private sealed class <RWTextsBakeCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VFXManager <>4__this;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1140B9C", Offset = "0x1140B9C", VA = "0x1140B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1140C0C", Offset = "0x1140C0C", VA = "0x1140C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x11407F8", Offset = "0x11407F8", VA = "0x11407F8")]
		[DebuggerHidden]
		public <RWTextsBakeCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x1140824", Offset = "0x1140824", VA = "0x1140824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x1140828", Offset = "0x1140828", VA = "0x1140828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1140BA4", Offset = "0x1140BA4", VA = "0x1140BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000645")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD084", Offset = "0x7BD084")]
	private sealed class <RWTextShowCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VFXManager <>4__this;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleScreen particles;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BakedParticleSimulation bakedSim;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delayBackgroundBy;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer background;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float txtDuration;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action endMethod;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600270A")]
			[Address(RVA = "0x1140780", Offset = "0x1140780", VA = "0x1140780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0x11407F0", Offset = "0x11407F0", VA = "0x11407F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1140418", Offset = "0x1140418", VA = "0x1140418")]
		[DebuggerHidden]
		public <RWTextShowCoroutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1140444", Offset = "0x1140444", VA = "0x1140444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1140448", Offset = "0x1140448", VA = "0x1140448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x1140788", Offset = "0x1140788", VA = "0x1140788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD094", Offset = "0x7BD094")]
	private sealed class <FadeInOut>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VFXManager <>4__this;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0xA93764", Offset = "0xA93764", VA = "0xA93764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0xA937D4", Offset = "0xA937D4", VA = "0xA937D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xA93230", Offset = "0xA93230", VA = "0xA93230")]
		[DebuggerHidden]
		public <FadeInOut>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xA93610", Offset = "0xA93610", VA = "0xA93610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xA93614", Offset = "0xA93614", VA = "0xA93614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xA9376C", Offset = "0xA9376C", VA = "0xA9376C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0A4", Offset = "0x7BD0A4")]
	private sealed class <LevelClearShowCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VFXManager <>4__this;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x11403A0", Offset = "0x11403A0", VA = "0x11403A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002718")]
			[Address(RVA = "0x1140410", Offset = "0x1140410", VA = "0x1140410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x11400AC", Offset = "0x11400AC", VA = "0x11400AC")]
		[DebuggerHidden]
		public <LevelClearShowCoroutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x11400D8", Offset = "0x11400D8", VA = "0x11400D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x11400DC", Offset = "0x11400DC", VA = "0x11400DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x11403A8", Offset = "0x11403A8", VA = "0x11403A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0B4", Offset = "0x7BD0B4")]
	private sealed class <LevelClearEndCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VFXManager <>4__this;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600271C")]
			[Address(RVA = "0x1140034", Offset = "0x1140034", VA = "0x1140034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600271E")]
			[Address(RVA = "0x11400A4", Offset = "0x11400A4", VA = "0x11400A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x113FF50", Offset = "0x113FF50", VA = "0x113FF50")]
		[DebuggerHidden]
		public <LevelClearEndCoroutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x113FF7C", Offset = "0x113FF7C", VA = "0x113FF7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x113FF80", Offset = "0x113FF80", VA = "0x113FF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x114003C", Offset = "0x114003C", VA = "0x114003C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0C4", Offset = "0x7BD0C4")]
	private sealed class <ShowBackground>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer bg;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1140E50", Offset = "0x1140E50", VA = "0x1140E50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1140EC0", Offset = "0x1140EC0", VA = "0x1140EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1140C14", Offset = "0x1140C14", VA = "0x1140C14")]
		[DebuggerHidden]
		public <ShowBackground>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1140C40", Offset = "0x1140C40", VA = "0x1140C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1140C44", Offset = "0x1140C44", VA = "0x1140C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x1140E58", Offset = "0x1140E58", VA = "0x1140E58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0D4", Offset = "0x7BD0D4")]
	private sealed class <HideBackground>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer bg;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002728")]
			[Address(RVA = "0x113FED8", Offset = "0x113FED8", VA = "0x113FED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600272A")]
			[Address(RVA = "0x113FF48", Offset = "0x113FF48", VA = "0x113FF48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x113FD08", Offset = "0x113FD08", VA = "0x113FD08")]
		[DebuggerHidden]
		public <HideBackground>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x113FD34", Offset = "0x113FD34", VA = "0x113FD34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x113FD38", Offset = "0x113FD38", VA = "0x113FD38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x113FEE0", Offset = "0x113FEE0", VA = "0x113FEE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C47B0", Offset = "0x7C47B0")]
	public PlayableDirector fightTimeline;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fightWaitTimer;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C47E8", Offset = "0x7C47E8")]
	public PlayableDirector gameOverTimeline;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gameOverWaitTimer;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4820", Offset = "0x7C4820")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4820", Offset = "0x7C4820")]
	public ParticleScreen levelClearParticles;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject levelClearRenderGroup;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer levelClearBackground;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LevelClearDisplay levelClearDisplay;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BakedParticleSimulation levelClearBakedSim;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool levelClearCanEnd;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float levelClearBGAlpha;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4880", Offset = "0x7C4880")]
	public ParticleScreen bossFightParticles;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject bossFightRenderGroup;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer bossFightBackground;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float bossTxtDuration;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BakedParticleSimulation bossFightBakedSim;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float bossFightBGAlpha;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C48B8", Offset = "0x7C48B8")]
	public ParticleScreen tryAgainParticles;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject tryAgainRenderGroup;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer tryAgainBackground;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float tryAgainTxtDuration;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BakedParticleSimulation tryAgainBakedSim;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float tryAgainBGAlpha;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C48F0", Offset = "0x7C48F0")]
	public FadeScreen tryAgainFadeScreen;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool allRWTextsBaked;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4928", Offset = "0x7C4928")]
	public bool rewardAchievment;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int achievmentIndex;

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xA9299C", Offset = "0xA9299C", VA = "0xA9299C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xA92B6C", Offset = "0xA92B6C", VA = "0xA92B6C")]
	public void ShowFightScreen(Action endMethod)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xA92C84", Offset = "0xA92C84", VA = "0xA92C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D05F8", Offset = "0x7D05F8")]
	private IEnumerator CallBossStart(Action endMethod, float duration)
	{
		return null;
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xA92D60", Offset = "0xA92D60", VA = "0xA92D60")]
	public void ShowGameOverScreen(Action endMethod)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xA92E78", Offset = "0xA92E78", VA = "0xA92E78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D065C", Offset = "0x7D065C")]
	private IEnumerator RWTextsBakeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xA92EF8", Offset = "0xA92EF8", VA = "0xA92EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D06C0", Offset = "0x7D06C0")]
	private IEnumerator RWTextShowCoroutine(ParticleScreen particles, BakedParticleSimulation bakedSim, MeshRenderer background, float txtDuration, Action endMethod, float delayBackgroundBy = 0f)
	{
		return null;
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xA93090", Offset = "0xA93090", VA = "0xA93090")]
	public void BossFightShow(Action callOnEnd)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xA930DC", Offset = "0xA930DC", VA = "0xA930DC")]
	public void TryAgainShow(Action callOnEnd)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xA931B0", Offset = "0xA931B0", VA = "0xA931B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0724", Offset = "0x7D0724")]
	private IEnumerator FadeInOut()
	{
		return null;
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xA9325C", Offset = "0xA9325C", VA = "0xA9325C")]
	public void LevelClearShow()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xA93308", Offset = "0xA93308", VA = "0xA93308")]
	public void LevelClearEnd()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xA93288", Offset = "0xA93288", VA = "0xA93288")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0788", Offset = "0x7D0788")]
	private IEnumerator LevelClearShowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xA93334", Offset = "0xA93334", VA = "0xA93334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D07EC", Offset = "0x7D07EC")]
	private IEnumerator LevelClearEndCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xA933B4", Offset = "0xA933B4", VA = "0xA933B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0850", Offset = "0x7D0850")]
	private IEnumerator ShowBackground(MeshRenderer bg)
	{
		return null;
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xA93434", Offset = "0xA93434", VA = "0xA93434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D08B4", Offset = "0x7D08B4")]
	private IEnumerator HideBackground(MeshRenderer bg)
	{
		return null;
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xA934B4", Offset = "0xA934B4", VA = "0xA934B4")]
	public VFXManager()
	{
	}
}
[Token(Token = "0x20002C5")]
public static class TextParsing
{
	[Token(Token = "0x200064B")]
	public struct Formatting
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int style;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int start;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int end;
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xA8324C", Offset = "0xA8324C", VA = "0xA8324C")]
	public static string ExtractInputIcons(string content, out List<Button> buttons, out List<int> indexes)
	{
		return null;
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xA82D3C", Offset = "0xA82D3C", VA = "0xA82D3C")]
	public static string ExtractFormatting(string content, out List<Formatting> formatting)
	{
		return null;
	}
}
[Token(Token = "0x20002C6")]
public class WristDisplay : MonoBehaviour
{
	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timer;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1851910", Offset = "0x1851910", VA = "0x1851910")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x18519A0", Offset = "0x18519A0", VA = "0x18519A0")]
	public WristDisplay()
	{
	}
}
[Token(Token = "0x20002C7")]
[ExecuteInEditMode]
public class AnimationClipOffsetsHelper : MonoBehaviour
{
	[Token(Token = "0x200064C")]
	public enum Mode
	{
		[Token(Token = "0x4001F67")]
		EVERYONE_ALWAYS,
		[Token(Token = "0x4001F68")]
		EVERYONE_WHEN_NONE_SELECTED,
		[Token(Token = "0x4001F69")]
		ONLY_THE_SELECTED_ONE,
		[Token(Token = "0x4001F6A")]
		NONE
	}

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4960", Offset = "0x7C4960")]
	public float timeStep;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C497C", Offset = "0x7C497C")]
	public float tickHeight;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] color;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ghost;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4994", Offset = "0x7C4994")]
	public float ghostUpdateInterval;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material ghostMaterial;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] ghostTime;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float deadline;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xA96CCC", Offset = "0xA96CCC", VA = "0xA96CCC")]
	public AnimationClipOffsetsHelper()
	{
	}
}
[Token(Token = "0x20002C8")]
public class ChangeSkyBox : MonoBehaviour
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material skyboxMaterial;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material primaryMaterial;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool changeOnEnable;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool resetOnDisable;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xAAE420", Offset = "0xAAE420", VA = "0xAAE420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xAAE438", Offset = "0xAAE438", VA = "0xAAE438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xAAE450", Offset = "0xAAE450", VA = "0xAAE450")]
	public void ChangeSky()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xAAE45C", Offset = "0xAAE45C", VA = "0xAAE45C")]
	public void ReverseSky()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xAAE468", Offset = "0xAAE468", VA = "0xAAE468")]
	public ChangeSkyBox()
	{
	}
}
[Token(Token = "0x20002C9")]
public class CheckBeingRendered : MonoBehaviour
{
	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C49B0", Offset = "0x7C49B0")]
	private bool <isVisible>k__BackingField;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool invisible;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float invisibleTimer;

	[Token(Token = "0x40010EC")]
	private const float invisibleMax = 0.1f;

	[Token(Token = "0x17000169")]
	public bool isVisible
	{
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xAAF60C", Offset = "0xAAF60C", VA = "0xAAF60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0918", Offset = "0x7D0918")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xAAF614", Offset = "0xAAF614", VA = "0xAAF614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0928", Offset = "0x7D0928")]
		private set
		{
		}
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xAAF620", Offset = "0xAAF620", VA = "0xAAF620")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xAAF67C", Offset = "0xAAF67C", VA = "0xAAF67C")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xAAF68C", Offset = "0xAAF68C", VA = "0xAAF68C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xAAF698", Offset = "0xAAF698", VA = "0xAAF698")]
	public CheckBeingRendered()
	{
	}
}
[Token(Token = "0x20002CA")]
public class ComponentStateMimic : MonoBehaviour
{
	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Behaviour targetbehaviour;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Behaviour thisBehaviour;

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xBEC9D8", Offset = "0xBEC9D8", VA = "0xBEC9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xBECB0C", Offset = "0xBECB0C", VA = "0xBECB0C")]
	public ComponentStateMimic()
	{
	}
}
[Token(Token = "0x20002CB")]
public class CopyTimeline : MonoBehaviour
{
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayableDirector timelineComponent;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableAsset sourceTimeline;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayableAsset targetTimeline;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xBEDC9C", Offset = "0xBEDC9C", VA = "0xBEDC9C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D0938", Offset = "0x7D0938")]
	public void Duplicate()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xBEE084", Offset = "0xBEE084", VA = "0xBEE084")]
	public CopyTimeline()
	{
	}
}
[Token(Token = "0x20002CC")]
public class Debug_InGameScreen : MonoBehaviour
{
	[Token(Token = "0x200064D")]
	public enum Games
	{
		[Token(Token = "0x4001F6C")]
		None,
		[Token(Token = "0x4001F6D")]
		Level1Zelda,
		[Token(Token = "0x4001F6E")]
		Level2Raccoon,
		[Token(Token = "0x4001F6F")]
		Level2Bionite,
		[Token(Token = "0x4001F70")]
		Level3Castlevania,
		[Token(Token = "0x4001F71")]
		Level4BeatEmUp,
		[Token(Token = "0x4001F72")]
		Level5DonkeyKong,
		[Token(Token = "0x4001F73")]
		Level63D
	}

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C49F0", Offset = "0x7C49F0")]
	public Games displayGame;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage display;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C4A00", Offset = "0x7C4A00")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C4A00", Offset = "0x7C4A00")]
	public RenderTexture level1;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture level2;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture level2_Alt;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture level3;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderTexture level4;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RenderTexture level5;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture level6;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xB40DF8", Offset = "0xB40DF8", VA = "0xB40DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xB40E5C", Offset = "0xB40E5C", VA = "0xB40E5C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xB40FC8", Offset = "0xB40FC8", VA = "0xB40FC8")]
	public Debug_InGameScreen()
	{
	}
}
[Token(Token = "0x20002CD")]
public class Camera_Simple_MouseMove : MonoBehaviour
{
	[Token(Token = "0x200064E")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001F75")]
		MouseXAndY,
		[Token(Token = "0x4001F76")]
		MouseX,
		[Token(Token = "0x4001F77")]
		MouseY
	}

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera_Simple_MouseMove instance;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraSpeedFloat;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cameraTransform;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 lastMousePos;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool allowMovement;

	[Token(Token = "0x1700016A")]
	public static Camera_Simple_MouseMove Instance
	{
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xAAB108", Offset = "0xAAB108", VA = "0xAAB108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xAAB158", Offset = "0xAAB158", VA = "0xAAB158")]
	public Camera_Simple_MouseMove()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xAAB1D4", Offset = "0xAAB1D4", VA = "0xAAB1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xAAB2BC", Offset = "0xAAB2BC", VA = "0xAAB2BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xAAB3A0", Offset = "0xAAB3A0", VA = "0xAAB3A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xAAB3AC", Offset = "0xAAB3AC", VA = "0xAAB3AC")]
	private void SwitchAllow()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xAAB3BC", Offset = "0xAAB3BC", VA = "0xAAB3BC")]
	private void Update()
	{
	}
}
[Token(Token = "0x20002CE")]
public class Debug_FastForward : MonoBehaviour
{
	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xB40AE4", Offset = "0xB40AE4", VA = "0xB40AE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xB40BF0", Offset = "0xB40BF0", VA = "0xB40BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xB40C20", Offset = "0xB40C20", VA = "0xB40C20")]
	private void SpeedUp()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xB40CB8", Offset = "0xB40CB8", VA = "0xB40CB8")]
	private void SpeedDown()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xB40D64", Offset = "0xB40D64", VA = "0xB40D64")]
	private void SpeedDefault()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xB40DF0", Offset = "0xB40DF0", VA = "0xB40DF0")]
	public Debug_FastForward()
	{
	}
}
[Token(Token = "0x20002CF")]
public class DebugFirstPersonPlayer : MonoBehaviour
{
	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float angle;

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xBF2FF0", Offset = "0xBF2FF0", VA = "0xBF2FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xBF2FF4", Offset = "0xBF2FF4", VA = "0xBF2FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xBF30DC", Offset = "0xBF30DC", VA = "0xBF30DC")]
	public DebugFirstPersonPlayer()
	{
	}
}
[Token(Token = "0x20002D0")]
public class DebugShortcut : MonoBehaviour
{
	[Token(Token = "0x200064F")]
	public delegate void Action();

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject content;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform panel;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh baseText;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color colorIdle;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorSelected;

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xBED6DC", Offset = "0xBED6DC", VA = "0xBED6DC")]
	public static void Subscribe(KeyCode key, string name, Action action)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xBED7BC", Offset = "0xBED7BC", VA = "0xBED7BC")]
	public static void Unsubscribe(KeyCode key)
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xBF31B8", Offset = "0xBF31B8", VA = "0xBF31B8")]
	public DebugShortcut()
	{
	}
}
[Token(Token = "0x20002D1")]
public static class Plotter
{
	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xB96000", Offset = "0xB96000", VA = "0xB96000")]
	public static void StartLine(string path, params string[] header)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xB96004", Offset = "0xB96004", VA = "0xB96004")]
	public static void Write(string content)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xB96008", Offset = "0xB96008", VA = "0xB96008")]
	public static void EndLine()
	{
	}
}
[Token(Token = "0x20002D2")]
public class SkipScene : MonoBehaviour
{
	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xA73044", Offset = "0xA73044", VA = "0xA73044")]
	public SkipScene()
	{
	}
}
[Token(Token = "0x20002D3")]
public class DisableOnTimer : MonoBehaviour
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float disableAfterSeconds;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xB45F4C", Offset = "0xB45F4C", VA = "0xB45F4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xB45F58", Offset = "0xB45F58", VA = "0xB45F58")]
	private void Update()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xB45FCC", Offset = "0xB45FCC", VA = "0xB45FCC")]
	public DisableOnTimer()
	{
	}
}
[Token(Token = "0x20002D4")]
public class DisableSequentially : MonoBehaviour
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] suspects;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text t;

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xB45FDC", Offset = "0xB45FDC", VA = "0xB45FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xB46474", Offset = "0xB46474", VA = "0xB46474")]
	public DisableSequentially()
	{
	}
}
[Token(Token = "0x20002D5")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x6001105")]
	[Address(RVA = "0xB48548", Offset = "0xB48548", VA = "0xB48548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xB485C4", Offset = "0xB485C4", VA = "0xB485C4")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x20002D6")]
public class EventOnActiveStatus : MonoBehaviour
{
	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onEnable;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onDisable;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xB577F0", Offset = "0xB577F0", VA = "0xB577F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xB57804", Offset = "0xB57804", VA = "0xB57804")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xB57818", Offset = "0xB57818", VA = "0xB57818")]
	public EventOnActiveStatus()
	{
	}
}
[Token(Token = "0x20002D7")]
public class EventOnState : MonoBehaviour
{
	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StringRefAttribute", RVA = "0x7C4A38", Offset = "0x7C4A38")]
	public string stateToCheck;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableOnEvent;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool checkOnStart;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent eventToPerform;

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xB57820", Offset = "0xB57820", VA = "0xB57820")]
	private void Start()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xB57938", Offset = "0xB57938", VA = "0xB57938")]
	private void Update()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xB5786C", Offset = "0xB5786C", VA = "0xB5786C")]
	private void CheckState()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xB5793C", Offset = "0xB5793C", VA = "0xB5793C")]
	public EventOnState()
	{
	}
}
[Token(Token = "0x20002D8")]
public class EventTrigger : MonoBehaviour
{
	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent eventToTrigger;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tagToCheck;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canTriggerMultipleTimes;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider trigger;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider2D trigger2D;

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xB5794C", Offset = "0xB5794C", VA = "0xB5794C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xB579D8", Offset = "0xB579D8", VA = "0xB579D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xB57A74", Offset = "0xB57A74", VA = "0xB57A74")]
	private void OnTriggerEnter2D(Collider2D collision)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xB57B10", Offset = "0xB57B10", VA = "0xB57B10")]
	public EventTrigger()
	{
	}
}
[Token(Token = "0x20002D9")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0E4", Offset = "0x7BD0E4")]
	private sealed class <LookToWorldPosition>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceCamera <>4__this;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002732")]
			[Address(RVA = "0xB5A0DC", Offset = "0xB5A0DC", VA = "0xB5A0DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002734")]
			[Address(RVA = "0xB5A14C", Offset = "0xB5A14C", VA = "0xB5A14C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xB59C84", Offset = "0xB59C84", VA = "0xB59C84")]
		[DebuggerHidden]
		public <LookToWorldPosition>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xB59F4C", Offset = "0xB59F4C", VA = "0xB59F4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xB59F50", Offset = "0xB59F50", VA = "0xB59F50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xB5A0E4", Offset = "0xB5A0E4", VA = "0xB5A0E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD0F4", Offset = "0x7BD0F4")]
	private sealed class <FollowTransform>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceCamera <>4__this;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x17000440")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002738")]
			[Address(RVA = "0xB59ED4", Offset = "0xB59ED4", VA = "0xB59ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600273A")]
			[Address(RVA = "0xB59F44", Offset = "0xB59F44", VA = "0xB59F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xB59CB0", Offset = "0xB59CB0", VA = "0xB59CB0")]
		[DebuggerHidden]
		public <FollowTransform>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xB59D6C", Offset = "0xB59D6C", VA = "0xB59D6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xB59D70", Offset = "0xB59D70", VA = "0xB59D70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xB59EDC", Offset = "0xB59EDC", VA = "0xB59EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Camera;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 worldPosition;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly Vector3 defaultY;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lookDirection;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xB59A7C", Offset = "0xB59A7C", VA = "0xB59A7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xB59BFC", Offset = "0xB59BFC", VA = "0xB59BFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xB59C04", Offset = "0xB59C04", VA = "0xB59C04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0970", Offset = "0x7D0970")]
	private IEnumerator LookToWorldPosition()
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xB59B40", Offset = "0xB59B40", VA = "0xB59B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D09D4", Offset = "0x7D09D4")]
	private IEnumerator FollowTransform(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xB59CDC", Offset = "0xB59CDC", VA = "0xB59CDC")]
	public FaceCamera()
	{
	}
}
[Token(Token = "0x20002DA")]
public class FadeScreen : MonoBehaviour
{
	[Token(Token = "0x2000652")]
	public enum StateOnPlay
	{
		[Token(Token = "0x4001F80")]
		Faded,
		[Token(Token = "0x4001F81")]
		NoFade,
		[Token(Token = "0x4001F82")]
		FadingIn,
		[Token(Token = "0x4001F83")]
		FadingOut
	}

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4A9C", Offset = "0x7C4A9C")]
	public Color color;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StateOnPlay stateOnPlay;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeDurationOnPlay;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4AD4", Offset = "0x7C4AD4")]
	public Renderer fadeRenderer;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4B0C", Offset = "0x7C4B0C")]
	private float <alpha>k__BackingField;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4B1C", Offset = "0x7C4B1C")]
	private float <velocity>k__BackingField;

	[Token(Token = "0x4001129")]
	private const float defaultDuration = 5f;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool skipUpdate;

	[Token(Token = "0x1700016B")]
	public float alpha
	{
		[Token(Token = "0x6001117")]
		[Address(RVA = "0xB5A154", Offset = "0xB5A154", VA = "0xB5A154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A38", Offset = "0x7D0A38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001118")]
		[Address(RVA = "0xB5A15C", Offset = "0xB5A15C", VA = "0xB5A15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A48", Offset = "0x7D0A48")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public float velocity
	{
		[Token(Token = "0x6001119")]
		[Address(RVA = "0xB5A164", Offset = "0xB5A164", VA = "0xB5A164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A58", Offset = "0x7D0A58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xB5A16C", Offset = "0xB5A16C", VA = "0xB5A16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A68", Offset = "0x7D0A68")]
		set
		{
		}
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xB5A174", Offset = "0xB5A174", VA = "0xB5A174")]
	private void Awake()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xB5A3CC", Offset = "0xB5A3CC", VA = "0xB5A3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xB5A590", Offset = "0xB5A590", VA = "0xB5A590")]
	public void UpdateFromTimeline(bool hasAlpha, bool hadAlpha, float alpha)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xB5A40C", Offset = "0xB5A40C", VA = "0xB5A40C")]
	private void UpdateAlphaFromDuration()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xB5A290", Offset = "0xB5A290", VA = "0xB5A290")]
	public void UpdateFade()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xB5A24C", Offset = "0xB5A24C", VA = "0xB5A24C")]
	public void FadeIn(float duration = 5f, bool reset = false)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xB5A204", Offset = "0xB5A204", VA = "0xB5A204")]
	public void FadeOut(float duration = 5f, bool reset = false)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xB5A5EC", Offset = "0xB5A5EC", VA = "0xB5A5EC")]
	public FadeScreen()
	{
	}
}
[Token(Token = "0x20002DB")]
public class FadeScreenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fadeIn;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float alpha;

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xB5A62C", Offset = "0xB5A62C", VA = "0xB5A62C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xB5A6E4", Offset = "0xB5A6E4", VA = "0xB5A6E4")]
	public FadeScreenBehaviour()
	{
	}
}
[Token(Token = "0x20002DC")]
public class FadeScreenClip : PlayableAsset
{
	[Token(Token = "0x2000653")]
	public enum Mode
	{
		[Token(Token = "0x4001F85")]
		FadeIn,
		[Token(Token = "0x4001F86")]
		FadeOut
	}

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xB5A6EC", Offset = "0xB5A6EC", VA = "0xB5A6EC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xB5A7D0", Offset = "0xB5A7D0", VA = "0xB5A7D0")]
	public FadeScreenClip()
	{
	}
}
[Token(Token = "0x20002DD")]
public class FadeScreenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool hadAlpha;

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xB5A7E0", Offset = "0xB5A7E0", VA = "0xB5A7E0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xB5AA0C", Offset = "0xB5AA0C", VA = "0xB5AA0C", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xB5AA14", Offset = "0xB5AA14", VA = "0xB5AA14")]
	public FadeScreenMixerBehaviour()
	{
	}
}
[Token(Token = "0x20002DE")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BB3C4", Offset = "0x7BB3C4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BB3C4", Offset = "0x7BB3C4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BB3C4", Offset = "0x7BB3C4")]
public class FadeScreenTrack : TrackAsset
{
	[Token(Token = "0x600112A")]
	[Address(RVA = "0xB5AA1C", Offset = "0xB5AA1C", VA = "0xB5AA1C", Slot = "19")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xB5AAB4", Offset = "0xB5AAB4", VA = "0xB5AAB4")]
	public FadeScreenTrack()
	{
	}
}
[Token(Token = "0x20002DF")]
public class FixedFoveatedView_Initializer : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager.FixedFoveatedRenderingLevel ffrLevel;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh t;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int tCount;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xAD0308", Offset = "0xAD0308", VA = "0xAD0308")]
	public void Awake()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xAD03D0", Offset = "0xAD03D0", VA = "0xAD03D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xAD0454", Offset = "0xAD0454", VA = "0xAD0454")]
	public void DetectPowerSave()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xAD052C", Offset = "0xAD052C", VA = "0xAD052C")]
	public FixedFoveatedView_Initializer()
	{
	}
}
[Token(Token = "0x20002E0")]
public class ChangeFogConfiguration : MonoBehaviour
{
	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FogTransitionConfig> configurations;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool forceInitialConfiguration;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentIndex;

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xAAE08C", Offset = "0xAAE08C", VA = "0xAAE08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xAAE0A0", Offset = "0xAAE0A0", VA = "0xAAE0A0")]
	public void ChangeToFogConfiguration(int id)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xAAE1C4", Offset = "0xAAE1C4", VA = "0xAAE1C4")]
	public void AdvanceToNextConfiguration()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xAAE1D4", Offset = "0xAAE1D4", VA = "0xAAE1D4")]
	public ChangeFogConfiguration()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E1")]
public struct FogTransitionConfig
{
	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FogConfigurationAsset fog;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float duration;
}
[Token(Token = "0x20002E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7BB478", Offset = "0x7BB478")]
public class FogConfigurationAsset : ScriptableObject
{
	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FogConfiguration config;

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xAD1140", Offset = "0xAD1140", VA = "0xAD1140")]
	public FogConfigurationAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E3")]
public struct FogConfiguration
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color fogColor;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fogStart;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fogEnd;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fogDensity;
}
[Token(Token = "0x20002E4")]
public class FogManager : MonoBehaviour
{
	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FogManager instance;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float transitionDuration;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delta;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FogConfiguration currentConfig;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private FogConfiguration nextConfig;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FogConfiguration previousConfig;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xAD1148", Offset = "0xAD1148", VA = "0xAD1148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xAD1258", Offset = "0xAD1258", VA = "0xAD1258")]
	private void Update()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xAD131C", Offset = "0xAD131C", VA = "0xAD131C")]
	private void InterpolateFogConfigs(float delta)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xAD1424", Offset = "0xAD1424", VA = "0xAD1424")]
	public void ChangeFog(FogConfiguration newConfig)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xAD147C", Offset = "0xAD147C", VA = "0xAD147C")]
	public FogManager()
	{
	}
}
[Token(Token = "0x20002E5")]
public class GenericPool : ObjectPoolStandalone<PoolableComponent>
{
	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PoolableComponent> spawnedPool;

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xAD684C", Offset = "0xAD684C", VA = "0xAD684C")]
	public GenericPool(Transform parent, GameObject prefab)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xAD6900", Offset = "0xAD6900", VA = "0xAD6900", Slot = "5")]
	public override void OnPop(PoolableComponent obj)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xAD6970", Offset = "0xAD6970", VA = "0xAD6970", Slot = "6")]
	public override void OnPush(PoolableComponent obj)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xAD69E0", Offset = "0xAD69E0", VA = "0xAD69E0")]
	public void Clear()
	{
	}
}
[Token(Token = "0x20002E6")]
public class Level2_Sun : MonoBehaviour
{
	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform movingCar;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 offsetDistance;

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x9735A4", Offset = "0x9735A4", VA = "0x9735A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x9736D0", Offset = "0x9736D0", VA = "0x9736D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x97382C", Offset = "0x97382C", VA = "0x97382C")]
	public Level2_Sun()
	{
	}
}
[Token(Token = "0x20002E7")]
public class LimitPositionToViewWidth : MonoBehaviour
{
	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 viewSize;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldLimit;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float wakeTimer;

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x989D3C", Offset = "0x989D3C", VA = "0x989D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x989ECC", Offset = "0x989ECC", VA = "0x989ECC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x98A098", Offset = "0x98A098", VA = "0x98A098")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x98A0A4", Offset = "0x98A0A4", VA = "0x98A0A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x98A254", Offset = "0x98A254", VA = "0x98A254")]
	public LimitPositionToViewWidth()
	{
	}
}
[Token(Token = "0x20002E8")]
public class LookAt_2D : MonoBehaviour
{
	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xA31014", Offset = "0xA31014", VA = "0xA31014")]
	private void Update()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xA310EC", Offset = "0xA310EC", VA = "0xA310EC")]
	public LookAt_2D()
	{
	}
}
[Token(Token = "0x20002E9")]
public static class NavMeshUtils
{
	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] navMeshCorners;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xA3B07C", Offset = "0xA3B07C", VA = "0xA3B07C")]
	public static bool CalculateNavMeshPath(Vector3 start, Vector3 end, out Vector3[] corners)
	{
		return default(bool);
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xA3B468", Offset = "0xA3B468", VA = "0xA3B468")]
	public static Vector3 GetPosition(Vector3 position)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20002EA")]
public class ObjectPool<T> : MonoBehaviour where T : Component
{
	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefab;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Queue<T> pool;

	[Token(Token = "0x600114B")]
	public void Allocate(int n)
	{
	}

	[Token(Token = "0x600114C")]
	public T Pop()
	{
		return null;
	}

	[Token(Token = "0x600114D")]
	public void Push(T obj)
	{
	}

	[Token(Token = "0x600114E")]
	private T Instantiate()
	{
		return null;
	}

	[Token(Token = "0x600114F")]
	public virtual void InitializeObject(T obj)
	{
	}

	[Token(Token = "0x6001150")]
	public virtual void OnPop(T obj)
	{
	}

	[Token(Token = "0x6001151")]
	public virtual void OnPush(T obj)
	{
	}

	[Token(Token = "0x6001152")]
	public ObjectPool()
	{
	}
}
[Token(Token = "0x20002EB")]
public interface IPoolable<T> where T : Component
{
	[Token(Token = "0x1700016D")]
	ObjectPool<T> poolComponent
	{
		[Token(Token = "0x6001153")]
		get;
		[Token(Token = "0x6001154")]
		set;
	}
}
[Token(Token = "0x20002EC")]
public class ObjectPoolStandalone<T> where T : Component
{
	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject prefab;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform parent;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Queue<T> pool;

	[Token(Token = "0x6001155")]
	public void Allocate(int n)
	{
	}

	[Token(Token = "0x6001156")]
	public T Pop()
	{
		return null;
	}

	[Token(Token = "0x6001157")]
	public void Push(T obj, bool setActiveOverride = false)
	{
	}

	[Token(Token = "0x6001158")]
	private T Instantiate()
	{
		return null;
	}

	[Token(Token = "0x6001159")]
	public virtual void InitializeObject(T obj)
	{
	}

	[Token(Token = "0x600115A")]
	public virtual void OnPop(T obj)
	{
	}

	[Token(Token = "0x600115B")]
	public virtual void OnPush(T obj)
	{
	}

	[Token(Token = "0x600115C")]
	public ObjectPoolStandalone()
	{
	}
}
[Token(Token = "0x20002ED")]
public interface IPoolableStandalone<T> where T : Component
{
	[Token(Token = "0x1700016E")]
	ObjectPoolStandalone<T> pool
	{
		[Token(Token = "0x600115D")]
		get;
		[Token(Token = "0x600115E")]
		set;
	}
}
[Token(Token = "0x20002EE")]
public class PhysicsBody : MonoBehaviour
{
	[Token(Token = "0x2000654")]
	public delegate void CollisionEvent(PhysicsBodyCollision col);

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody2D body2d;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body3d;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool limitVelocityDown;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float limitVelocityDownValue;

	[Token(Token = "0x1700016F")]
	public bool is2d
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC40A7C", Offset = "0xC40A7C", VA = "0xC40A7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public bool isKinematic
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xC41440", Offset = "0xC41440", VA = "0xC41440")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001169")]
		[Address(RVA = "0xC41484", Offset = "0xC41484", VA = "0xC41484")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public Vector3 velocity
	{
		[Token(Token = "0x600116A")]
		[Address(RVA = "0xC41228", Offset = "0xC41228", VA = "0xC41228")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600116B")]
		[Address(RVA = "0xC4131C", Offset = "0xC4131C", VA = "0xC4131C")]
		set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event CollisionEvent onCollisionEnter
	{
		[Token(Token = "0x6001160")]
		[Address(RVA = "0xC40AEC", Offset = "0xC40AEC", VA = "0xC40AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A78", Offset = "0x7D0A78")]
		add
		{
		}
		[Token(Token = "0x6001161")]
		[Address(RVA = "0xC40B94", Offset = "0xC40B94", VA = "0xC40B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A88", Offset = "0x7D0A88")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event CollisionEvent onCollisionStay
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0xC40C3C", Offset = "0xC40C3C", VA = "0xC40C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0A98", Offset = "0x7D0A98")]
		add
		{
		}
		[Token(Token = "0x6001163")]
		[Address(RVA = "0xC40CE4", Offset = "0xC40CE4", VA = "0xC40CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AA8", Offset = "0x7D0AA8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event CollisionEvent onCollisionExit
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0xC40D8C", Offset = "0xC40D8C", VA = "0xC40D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AB8", Offset = "0x7D0AB8")]
		add
		{
		}
		[Token(Token = "0x6001165")]
		[Address(RVA = "0xC40E34", Offset = "0xC40E34", VA = "0xC40E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AC8", Offset = "0x7D0AC8")]
		remove
		{
		}
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xC40EDC", Offset = "0xC40EDC", VA = "0xC40EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xC41074", Offset = "0xC41074", VA = "0xC41074")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xC41570", Offset = "0xC41570", VA = "0xC41570")]
	public void AddImpulse(Vector3 force)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xC4169C", Offset = "0xC4169C", VA = "0xC4169C")]
	public void AddAcceleration(Vector3 force)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xC41798", Offset = "0xC41798", VA = "0xC41798")]
	public void MovePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xC418BC", Offset = "0xC418BC", VA = "0xC418BC")]
	public void IgnoreLayerCollision(int layer1, int layer2, bool ignore)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xC419A0", Offset = "0xC419A0", VA = "0xC419A0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xC41C9C", Offset = "0xC41C9C", VA = "0xC41C9C")]
	private void OnCollisionEnter2D(Collision2D col)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xC41D24", Offset = "0xC41D24", VA = "0xC41D24")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xC41D8C", Offset = "0xC41D8C", VA = "0xC41D8C")]
	private void OnCollisionStay2D(Collision2D col)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xC41DE4", Offset = "0xC41DE4", VA = "0xC41DE4")]
	private void OnCollisionExit(Collision col)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xC41E4C", Offset = "0xC41E4C", VA = "0xC41E4C")]
	private void OnCollisionExit2D(Collision2D col)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xC41EA4", Offset = "0xC41EA4", VA = "0xC41EA4")]
	public PhysicsBody()
	{
	}
}
[Token(Token = "0x20002EF")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7BB4BC", Offset = "0x7BB4BC")]
public struct PhysicsBodyCollision
{
	[Token(Token = "0x2000655")]
	public struct Contact
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool is2d;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private ContactPoint2D contact2d;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ContactPoint contact3d;

		[Token(Token = "0x17000442")]
		public Vector3 point
		{
			[Token(Token = "0x6002741")]
			[Address(RVA = "0x865844", Offset = "0x865844", VA = "0x865844")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000443")]
		public Vector3 normal
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x86584C", Offset = "0x86584C", VA = "0x86584C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000444")]
		public float separation
		{
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x865854", Offset = "0x865854", VA = "0x865854")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x865794", Offset = "0x865794", VA = "0x865794")]
		public Contact(ContactPoint2D contact)
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x8657F4", Offset = "0x8657F4", VA = "0x8657F4")]
		public Contact(ContactPoint contact)
		{
		}
	}

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Collision2D col2d;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Collision col3d;

	[Token(Token = "0x17000172")]
	public Transform other
	{
		[Token(Token = "0x6001179")]
		[Address(RVA = "0x865D54", Offset = "0x865D54", VA = "0x865D54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000173")]
	public int length
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x865D5C", Offset = "0x865D5C", VA = "0x865D5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000174")]
	public Contact Item
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0x865D64", Offset = "0x865D64", VA = "0x865D64")]
		get
		{
			return default(Contact);
		}
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x865CEC", Offset = "0x865CEC", VA = "0x865CEC")]
	public PhysicsBodyCollision(Collision2D col)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x865D1C", Offset = "0x865D1C", VA = "0x865D1C")]
	public PhysicsBodyCollision(Collision col)
	{
	}
}
[Token(Token = "0x20002F0")]
public class PositionBounds : MonoBehaviour
{
	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bounds bounds;

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xB96C5C", Offset = "0xB96C5C", VA = "0xB96C5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xB96DBC", Offset = "0xB96DBC", VA = "0xB96DBC")]
	public PositionBounds()
	{
	}
}
[Token(Token = "0x20002F1")]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000656")]
	private struct RendererInfo
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer renderer;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int lightmapIndex;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 lightmapOffsetScale;
	}

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RendererInfo[] m_RendererInfo;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D[] m_Lightmaps;

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xB97F80", Offset = "0xB97F80", VA = "0xB97F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xB97FD0", Offset = "0xB97FD0", VA = "0xB97FD0")]
	private static void ApplyRendererInfo(RendererInfo[] infos, int lightmapOffsetIndex)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xB980AC", Offset = "0xB980AC", VA = "0xB980AC")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x20002F2")]
public static class QuaternionUtils
{
	[Token(Token = "0x6001181")]
	[Address(RVA = "0xB9C050", Offset = "0xB9C050", VA = "0xB9C050")]
	public static Quaternion FlipHorizontally(Quaternion value)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xB9C05C", Offset = "0xB9C05C", VA = "0xB9C05C")]
	public static Vector3 FlipHorizontally(Vector3 value)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20002F3")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 angle;

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA68C40", Offset = "0xA68C40", VA = "0xA68C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA68DC8", Offset = "0xA68DC8", VA = "0xA68DC8")]
	public Rotate()
	{
	}
}
[Token(Token = "0x20002F4")]
public class ScaleWithDistance : MonoBehaviour
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scaleCurve;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minDistance;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxDistance;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalScale;

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA6BEE0", Offset = "0xA6BEE0", VA = "0xA6BEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA6BF24", Offset = "0xA6BF24", VA = "0xA6BF24")]
	private void Update()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA6C120", Offset = "0xA6C120", VA = "0xA6C120")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xA6C140", Offset = "0xA6C140", VA = "0xA6C140")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA6C440", Offset = "0xA6C440", VA = "0xA6C440")]
	public ScaleWithDistance()
	{
	}
}
[Token(Token = "0x20002F5")]
public class ScrollAttach : MonoBehaviour
{
	[Token(Token = "0x600118A")]
	[Address(RVA = "0xA6EA90", Offset = "0xA6EA90", VA = "0xA6EA90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xA6EAC8", Offset = "0xA6EAC8", VA = "0xA6EAC8")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xA6EC00", Offset = "0xA6EC00", VA = "0xA6EC00")]
	private void OnCollisionEnter2D(Collision2D col)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xA6EB08", Offset = "0xA6EB08", VA = "0xA6EB08")]
	private void EnterScroll(GameObject obj)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xA6EC40", Offset = "0xA6EC40", VA = "0xA6EC40")]
	public ScrollAttach()
	{
	}
}
[Token(Token = "0x20002F6")]
public class ScrollChildren : MonoBehaviour
{
	[Token(Token = "0x2000657")]
	public enum Axis
	{
		[Token(Token = "0x4001F8E")]
		X,
		[Token(Token = "0x4001F8F")]
		Y,
		[Token(Token = "0x4001F90")]
		Z
	}

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis axis;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C4B7C", Offset = "0x7C4B7C")]
	public Vector2 range;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float velocity;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float offset;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float size;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool overrideToMoveObj;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform obj;

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xA6EC48", Offset = "0xA6EC48", VA = "0xA6EC48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xA6EEB8", Offset = "0xA6EEB8", VA = "0xA6EEB8")]
	private void MoveTransform(Transform child)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xA6EDEC", Offset = "0xA6EDEC", VA = "0xA6EDEC")]
	private void MoveTransformLocal(Transform child)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xA6EF84", Offset = "0xA6EF84", VA = "0xA6EF84")]
	private float UpdateValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xA6EFE4", Offset = "0xA6EFE4", VA = "0xA6EFE4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xA6F46C", Offset = "0xA6F46C", VA = "0xA6F46C")]
	public static implicit operator Transform(ScrollChildren v)
	{
		return null;
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xA6F4D4", Offset = "0xA6F4D4", VA = "0xA6F4D4")]
	public ScrollChildren()
	{
	}
}
[Token(Token = "0x20002F7")]
public class ScrollObject_BasedOnAnother : MonoBehaviour
{
	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool invertForward;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 range;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float velocity;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float offset;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float size;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform obj;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parentObj;

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xA6F52C", Offset = "0xA6F52C", VA = "0xA6F52C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xA6F534", Offset = "0xA6F534", VA = "0xA6F534")]
	private void MoveTransformLocal(Transform child)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xA6F64C", Offset = "0xA6F64C", VA = "0xA6F64C")]
	private float UpdateValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xA6F6AC", Offset = "0xA6F6AC", VA = "0xA6F6AC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xA6FC2C", Offset = "0xA6FC2C", VA = "0xA6FC2C")]
	public ScrollObject_BasedOnAnother()
	{
	}
}
[Token(Token = "0x20002F8")]
public class Sensor : MonoBehaviour
{
	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] tagsToCheck;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4BB4", Offset = "0x7C4BB4")]
	private bool <active>k__BackingField;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 localPosition;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool sin;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool canTrigger;

	[Token(Token = "0x17000175")]
	public bool active
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xA6FC7C", Offset = "0xA6FC7C", VA = "0xA6FC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AD8", Offset = "0x7D0AD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xA6FC84", Offset = "0xA6FC84", VA = "0xA6FC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AE8", Offset = "0x7D0AE8")]
		private set
		{
		}
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xA6FC90", Offset = "0xA6FC90", VA = "0xA6FC90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xA6FCD4", Offset = "0xA6FCD4", VA = "0xA6FCD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xA6FE44", Offset = "0xA6FE44", VA = "0xA6FE44")]
	private void OnTriggerStay2D(Collider2D collision)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xA6FF88", Offset = "0xA6FF88", VA = "0xA6FF88")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xA6FEB4", Offset = "0xA6FEB4", VA = "0xA6FEB4")]
	private void SensorStay(GameObject collisionObject)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xA6FFF8", Offset = "0xA6FFF8", VA = "0xA6FFF8")]
	public void ResetSensor()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xA70004", Offset = "0xA70004", VA = "0xA70004")]
	public Sensor()
	{
	}
}
[Token(Token = "0x20002F9")]
public class SetBoolOnState : StateMachineBehaviour
{
	[Token(Token = "0x2000658")]
	public enum State
	{
		[Token(Token = "0x4001F92")]
		OnExit,
		[Token(Token = "0x4001F93")]
		OnEnter
	}

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string parameterName;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool value;

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xA7000C", Offset = "0xA7000C", VA = "0xA7000C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xA70074", Offset = "0xA70074", VA = "0xA70074", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xA700D8", Offset = "0xA700D8", VA = "0xA700D8")]
	public SetBoolOnState()
	{
	}
}
[Token(Token = "0x20002FA")]
public class SinePosition : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000659")]
	public struct Axis
	{
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useAxis;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionMin;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionMax;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timePeriod;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeDelay;
	}

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis x;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Axis y;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Axis z;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool randomizeDelay;

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xA71CCC", Offset = "0xA71CCC", VA = "0xA71CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xA71D44", Offset = "0xA71D44", VA = "0xA71D44")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xA71E48", Offset = "0xA71E48", VA = "0xA71E48")]
	private void Solve(Axis axis, ref float value)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xA71F28", Offset = "0xA71F28", VA = "0xA71F28")]
	public SinePosition()
	{
	}
}
[Token(Token = "0x20002FB")]
public class SineRotation : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200065A")]
	public struct Axis
	{
		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useAxis;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angleMin;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float angleMax;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timePeriod;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeDelay;
	}

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis x;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Axis y;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Axis z;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool randomizeDelay;

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xA71F30", Offset = "0xA71F30", VA = "0xA71F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xA71FA8", Offset = "0xA71FA8", VA = "0xA71FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xA720AC", Offset = "0xA720AC", VA = "0xA720AC")]
	private void Solve(Axis axis, ref float value)
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xA7218C", Offset = "0xA7218C", VA = "0xA7218C")]
	public SineRotation()
	{
	}
}
[Token(Token = "0x20002FC")]
public class SineScale : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200065B")]
	public struct Axis
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useAxis;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float scaleMin;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scaleMax;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timePeriod;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeDelay;
	}

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis x;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Axis y;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Axis z;

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xA72194", Offset = "0xA72194", VA = "0xA72194")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xA72298", Offset = "0xA72298", VA = "0xA72298")]
	private void Solve(Axis axis, ref float value)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xA72378", Offset = "0xA72378", VA = "0xA72378")]
	public SineScale()
	{
	}
}
[Token(Token = "0x20002FD")]
public class SmoothCamera : MonoBehaviour
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4BC4", Offset = "0x7C4BC4")]
	private static bool <enableSpectatorMode>k__BackingField;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SmoothCamera> instances;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cam;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool followCamPos;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4BD4", Offset = "0x7C4BD4")]
	public static float smoothness;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4BEC", Offset = "0x7C4BEC")]
	public static float fov;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera smoothCam;

	[Token(Token = "0x17000176")]
	public static bool enableSpectatorMode
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xA7304C", Offset = "0xA7304C", VA = "0xA7304C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0AF8", Offset = "0x7D0AF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xA730B4", Offset = "0xA730B4", VA = "0xA730B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B08", Offset = "0x7D0B08")]
		private set
		{
		}
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xA73124", Offset = "0xA73124", VA = "0xA73124")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xA73268", Offset = "0xA73268", VA = "0xA73268")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xA732EC", Offset = "0xA732EC", VA = "0xA732EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xA733A0", Offset = "0xA733A0", VA = "0xA733A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xA73654", Offset = "0xA73654", VA = "0xA73654")]
	public static void SetSpectatorEnabled(bool _enabled)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xA737AC", Offset = "0xA737AC", VA = "0xA737AC")]
	public static void SetCameraFOV(float _fov)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xA73908", Offset = "0xA73908", VA = "0xA73908")]
	public SmoothCamera()
	{
	}
}
[Token(Token = "0x20002FE")]
public class SpectatorCopyValues : MonoBehaviour
{
	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera[] allCameras;

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xA7483C", Offset = "0xA7483C", VA = "0xA7483C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xA748D4", Offset = "0xA748D4", VA = "0xA748D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xA74B1C", Offset = "0xA74B1C", VA = "0xA74B1C")]
	public SpectatorCopyValues()
	{
	}
}
[Token(Token = "0x20002FF")]
public class SpriteAnimation : MonoBehaviour
{
	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer rend;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fps;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite[] frames;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool loop;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool playOnEnable;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4C0C", Offset = "0x7C4C0C")]
	private bool <playing>k__BackingField;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4C1C", Offset = "0x7C4C1C")]
	private int <frame>k__BackingField;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time;

	[Token(Token = "0x17000177")]
	public float loopDuration
	{
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xA67534", Offset = "0xA67534", VA = "0xA67534")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000178")]
	public bool playing
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xA75AA0", Offset = "0xA75AA0", VA = "0xA75AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B18", Offset = "0x7D0B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xA75AA8", Offset = "0xA75AA8", VA = "0xA75AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B28", Offset = "0x7D0B28")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public int frame
	{
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xA75AB4", Offset = "0xA75AB4", VA = "0xA75AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B38", Offset = "0x7D0B38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xA75ABC", Offset = "0xA75ABC", VA = "0xA75ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B48", Offset = "0x7D0B48")]
		set
		{
		}
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xA75AC4", Offset = "0xA75AC4", VA = "0xA75AC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xA75D44", Offset = "0xA75D44", VA = "0xA75D44")]
	public void Rewind()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xA75D4C", Offset = "0xA75D4C", VA = "0xA75D4C")]
	public void Play()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xA75D58", Offset = "0xA75D58", VA = "0xA75D58")]
	public void Pause()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xA75D60", Offset = "0xA75D60", VA = "0xA75D60")]
	public void PlayFromBeginning()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xA75D70", Offset = "0xA75D70", VA = "0xA75D70")]
	public void Stop()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xA75D7C", Offset = "0xA75D7C", VA = "0xA75D7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xA75D94", Offset = "0xA75D94", VA = "0xA75D94")]
	public SpriteAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000300")]
public class StringDropdown
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string value;

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xA77584", Offset = "0xA77584", VA = "0xA77584")]
	public StringDropdown(string value = "")
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xA78E40", Offset = "0xA78E40", VA = "0xA78E40", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000301")]
public class StringRefAttribute : PropertyAttribute
{
	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xA78E48", Offset = "0xA78E48", VA = "0xA78E48")]
	public StringRefAttribute(Type source)
	{
	}
}
[Token(Token = "0x2000302")]
public abstract class StringRefSource
{
	[Token(Token = "0x60011CF")]
	public abstract void Populate(StringRefList list);

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xA78F6C", Offset = "0xA78F6C", VA = "0xA78F6C")]
	protected StringRefSource()
	{
	}
}
[Token(Token = "0x2000303")]
public struct StringRefList
{
	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<string> values;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<string> names;

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x861810", Offset = "0x861810", VA = "0x861810")]
	public StringRefList(List<string> values, List<string> names)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x861844", Offset = "0x861844", VA = "0x861844")]
	public void Add([Optional] string value, [Optional] string name)
	{
	}
}
[Token(Token = "0x2000304")]
public class TeleportPlayer : MonoBehaviour
{
	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform player;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] positions;

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xA7F200", Offset = "0xA7F200", VA = "0xA7F200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xA7F2F0", Offset = "0xA7F2F0", VA = "0xA7F2F0")]
	private void OnStateChanged(ProgressionTracker obj)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xA7F3E4", Offset = "0xA7F3E4", VA = "0xA7F3E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xA7F370", Offset = "0xA7F370", VA = "0xA7F370")]
	public void Teleport(Transform t)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xA7F4D4", Offset = "0xA7F4D4", VA = "0xA7F4D4")]
	public TeleportPlayer()
	{
	}
}
[Token(Token = "0x2000305")]
public class TimelinePartition : Marker
{
	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string id;

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xA87E84", Offset = "0xA87E84", VA = "0xA87E84")]
	public TimelinePartition()
	{
	}
}
[Token(Token = "0x2000306")]
public class TimelinePartitionTrack : TrackAsset
{
	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xA87E8C", Offset = "0xA87E8C", VA = "0xA87E8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xA87E90", Offset = "0xA87E90", VA = "0xA87E90")]
	public TimelinePartitionTrack()
	{
	}
}
[Token(Token = "0x2000307")]
public class TimelineSkip : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200065C")]
	public struct PlayableInfo
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayableDirector playable;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timeToGoBackAfterSkipToEnd;
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD104", Offset = "0x7BD104")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector playable;

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xA88BD4", Offset = "0xA88BD4", VA = "0xA88BD4")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xA88CE8", Offset = "0xA88CE8", VA = "0xA88CE8")]
		internal bool <SubscribePlayable>b__0(PlayableInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableInfo[] playablesToWatch;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayableInfo currentPlayable;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool skipped;

	[Token(Token = "0x1700017A")]
	private bool action
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xA88BDC", Offset = "0xA88BDC", VA = "0xA88BDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xA888B4", Offset = "0xA888B4", VA = "0xA888B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xA88AE0", Offset = "0xA88AE0", VA = "0xA88AE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xA889E0", Offset = "0xA889E0", VA = "0xA889E0")]
	private void SubscribePlayable(PlayableDirector playable)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xA88C40", Offset = "0xA88C40", VA = "0xA88C40")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xA88CE0", Offset = "0xA88CE0", VA = "0xA88CE0")]
	public TimelineSkip()
	{
	}
}
[Token(Token = "0x2000308")]
public class ToggleAnimController : MonoBehaviour
{
	[Token(Token = "0x200065E")]
	public enum ActionType
	{
		[Token(Token = "0x4001FA7")]
		Active,
		[Token(Token = "0x4001FA8")]
		Inactive
	}

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActionType controllerOnEnable;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ActionType controllerOnDisable;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C4C2C", Offset = "0x7C4C2C")]
	public Animator[] animators;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RuntimeAnimatorController[] controllers;

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xA8B0FC", Offset = "0xA8B0FC", VA = "0xA8B0FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xA8B268", Offset = "0xA8B268", VA = "0xA8B268")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xA8B3D8", Offset = "0xA8B3D8", VA = "0xA8B3D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xA8B270", Offset = "0xA8B270", VA = "0xA8B270")]
	private void SetController(ActionType action)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xA8B3E0", Offset = "0xA8B3E0", VA = "0xA8B3E0")]
	public ToggleAnimController()
	{
	}
}
[Token(Token = "0x2000309")]
public class ToggleIKMarker : Marker, INotification, INotificationOptionProvider
{
	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4C3C", Offset = "0x7C4C3C")]
	[SerializeField]
	private bool _enableIK;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C4C88", Offset = "0x7C4C88")]
	[SerializeField]
	private bool retroactive;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool emitOnce;

	[Token(Token = "0x1700017B")]
	public bool enableIK
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xA8B3F0", Offset = "0xA8B3F0", VA = "0xA8B3F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017C")]
	public PropertyName id
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xA8B3F8", Offset = "0xA8B3F8", VA = "0xA8B3F8", Slot = "9")]
		get
		{
			return default(PropertyName);
		}
	}

	[Token(Token = "0x1700017D")]
	public NotificationFlags flags
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xA8B400", Offset = "0xA8B400", VA = "0xA8B400", Slot = "10")]
		get
		{
			return default(NotificationFlags);
		}
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xA8B414", Offset = "0xA8B414", VA = "0xA8B414")]
	public ToggleIKMarker()
	{
	}
}
[Token(Token = "0x200030A")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BB4F4", Offset = "0x7BB4F4")]
public class ToggleIKTrack : TrackAsset
{
	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xA8B41C", Offset = "0xA8B41C", VA = "0xA8B41C")]
	public ToggleIKTrack()
	{
	}
}
[Token(Token = "0x200030B")]
public class ToggleLimbIK : MonoBehaviour, INotificationReceiver
{
	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD114", Offset = "0x7BD114")]
	private sealed class <Transition>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToggleLimbIK <>4__this;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <value>5__2;

		[Token(Token = "0x17000445")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002749")]
			[Address(RVA = "0xA8BB64", Offset = "0xA8BB64", VA = "0xA8BB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600274B")]
			[Address(RVA = "0xA8BBD4", Offset = "0xA8BBD4", VA = "0xA8BBD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xA8B77C", Offset = "0xA8B77C", VA = "0xA8B77C")]
		[DebuggerHidden]
		public <Transition>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xA8B930", Offset = "0xA8B930", VA = "0xA8B930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xA8B934", Offset = "0xA8B934", VA = "0xA8B934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xA8BB6C", Offset = "0xA8BB6C", VA = "0xA8BB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultTansitionTime;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4CE4", Offset = "0x7C4CE4")]
	public float maxIKWeight;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LimbIK[] limbIKs;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine transitionCoroutine;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool oldActive;

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xA8B484", Offset = "0xA8B484", VA = "0xA8B484")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xA8B4E8", Offset = "0xA8B4E8", VA = "0xA8B4E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xA8B730", Offset = "0xA8B730", VA = "0xA8B730")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xA8B768", Offset = "0xA8B768", VA = "0xA8B768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xA8B564", Offset = "0xA8B564", VA = "0xA8B564")]
	private void StopTransition()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xA8B578", Offset = "0xA8B578", VA = "0xA8B578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0B58", Offset = "0x7D0B58")]
	private IEnumerator Transition(bool active)
	{
		return null;
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xA8B62C", Offset = "0xA8B62C", VA = "0xA8B62C")]
	private void UpdateWeights(float value)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xA8B7A8", Offset = "0xA8B7A8", VA = "0xA8B7A8", Slot = "4")]
	public void OnNotify(Playable origin, INotification notification, object context)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xA8B888", Offset = "0xA8B888", VA = "0xA8B888")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xA8B918", Offset = "0xA8B918", VA = "0xA8B918")]
	public ToggleLimbIK()
	{
	}
}
[Token(Token = "0x200030C")]
public class TransformSetter : MonoBehaviour
{
	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 setPosition;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 setEulerRotation;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xA8ED80", Offset = "0xA8ED80", VA = "0xA8ED80")]
	public void PositionObject()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xA8EDDC", Offset = "0xA8EDDC", VA = "0xA8EDDC")]
	public void RotateObject()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xA8EE38", Offset = "0xA8EE38", VA = "0xA8EE38")]
	public TransformSetter()
	{
	}
}
[Token(Token = "0x200030D")]
public class TriggerEventOnDirection : MonoBehaviour
{
	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent eventSideA;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent eventSideB;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string tagToCheck;

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xA90628", Offset = "0xA90628", VA = "0xA90628")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xA90800", Offset = "0xA90800", VA = "0xA90800")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xA90804", Offset = "0xA90804", VA = "0xA90804")]
	public TriggerEventOnDirection()
	{
	}
}
[Token(Token = "0x200030E")]
public class ValueRecorder<T> where T : struct, IRecordableValue<T>
{
	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly LinkedList<T> states;

	[Token(Token = "0x40011B0")]
	private const int maxStates = 512;

	[Token(Token = "0x1700017E")]
	public T lastState
	{
		[Token(Token = "0x60011FB")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x1700017F")]
	public bool hasStates
	{
		[Token(Token = "0x60011FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011FD")]
	public void ResetToState(T state)
	{
	}

	[Token(Token = "0x60011FE")]
	public void ClearStates()
	{
	}

	[Token(Token = "0x60011FF")]
	public void AddState(T state)
	{
	}

	[Token(Token = "0x6001200")]
	public void AddState(T state, float time)
	{
	}

	[Token(Token = "0x6001201")]
	public void RemoveStatesBefore(float delay)
	{
	}

	[Token(Token = "0x6001202")]
	public void RemoveStatesBefore(float delay, float time)
	{
	}

	[Token(Token = "0x6001203")]
	public T GetStateAt(float delay)
	{
		return (T)null;
	}

	[Token(Token = "0x6001204")]
	public T GetStateAt(float delay, float time)
	{
		return (T)null;
	}

	[Token(Token = "0x6001205")]
	public ValueRecorder()
	{
	}
}
[Token(Token = "0x200030F")]
public interface IRecordableValue<T> where T : struct
{
	[Token(Token = "0x17000180")]
	float time
	{
		[Token(Token = "0x6001206")]
		get;
		[Token(Token = "0x6001207")]
		set;
	}

	[Token(Token = "0x6001208")]
	T Interpolate(T other, float t);
}
[Token(Token = "0x2000310")]
public static class VectorUtils
{
	[Token(Token = "0x6001209")]
	[Address(RVA = "0x1140F3C", Offset = "0x1140F3C", VA = "0x1140F3C")]
	public static Vector2 GetDiscreteValue(Vector2 value, int directionCount, bool withMagnitude = false)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x1141088", Offset = "0x1141088", VA = "0x1141088")]
	public static Vector2 ClampMagnitude(Vector2 value, float min, float max)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x114121C", Offset = "0x114121C", VA = "0x114121C")]
	public static Vector2 ClampMagnitude(Vector2 normal, float magnitude, float min, float max)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x114133C", Offset = "0x114133C", VA = "0x114133C")]
	public static Vector2 Rotate(this Vector2 vector2, float degrees)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x2000311")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x2000660")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x600274C")]
		[Address(RVA = "0x115751C", Offset = "0x115751C", VA = "0x115751C", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x1157674", Offset = "0x1157674", VA = "0x1157674", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x115632C", Offset = "0x115632C", VA = "0x115632C")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x11536C0", Offset = "0x11536C0", VA = "0x11536C0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x1153784", Offset = "0x1153784", VA = "0x1153784")]
	private void Start()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x1153850", Offset = "0x1153850", VA = "0x1153850")]
	private void Update()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x1153854", Offset = "0x1153854", VA = "0x1153854")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1156334", Offset = "0x1156334", VA = "0x1156334")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1156484", Offset = "0x1156484", VA = "0x1156484")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x11565C8", Offset = "0x11565C8", VA = "0x11565C8")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x1156700", Offset = "0x1156700", VA = "0x1156700")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x11567EC", Offset = "0x11567EC", VA = "0x11567EC")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x1156ACC", Offset = "0x1156ACC", VA = "0x1156ACC")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x1156D4C", Offset = "0x1156D4C", VA = "0x1156D4C")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x1156E90", Offset = "0x1156E90", VA = "0x1156E90")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x1156FB4", Offset = "0x1156FB4", VA = "0x1156FB4")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x11570A0", Offset = "0x11570A0", VA = "0x11570A0")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x115718C", Offset = "0x115718C", VA = "0x115718C")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x1157278", Offset = "0x1157278", VA = "0x1157278")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x1157364", Offset = "0x1157364", VA = "0x1157364")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x2000312")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1157740", Offset = "0x1157740", VA = "0x1157740")]
	private void Start()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x1157810", Offset = "0x1157810", VA = "0x1157810")]
	private void Update()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1157814", Offset = "0x1157814", VA = "0x1157814")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x1157908", Offset = "0x1157908", VA = "0x1157908")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x2000313")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000661")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD588", Offset = "0x7BD588")]
		private sealed class <>c
		{
			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x1158F34", Offset = "0x1158F34", VA = "0x1158F34")]
			public <>c()
			{
			}

			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x1158F3C", Offset = "0x1158F3C", VA = "0x1158F3C")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD598", Offset = "0x7BD598")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x1158EC4", Offset = "0x1158EC4", VA = "0x1158EC4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x1158FA8", Offset = "0x1158FA8", VA = "0x1158FA8")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x1158C8C", Offset = "0x1158C8C", VA = "0x1158C8C", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x1158DB4", Offset = "0x1158DB4", VA = "0x1158DB4", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1158600", Offset = "0x1158600", VA = "0x1158600")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000662")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5A8", Offset = "0x7BD5A8")]
		private sealed class <>c
		{
			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x1159480", Offset = "0x1159480", VA = "0x1159480")]
			public <>c()
			{
			}

			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x1159488", Offset = "0x1159488", VA = "0x1159488")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5B8", Offset = "0x7BD5B8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x1159410", Offset = "0x1159410", VA = "0x1159410")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x11594F4", Offset = "0x11594F4", VA = "0x11594F4")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x11591D8", Offset = "0x11591D8", VA = "0x11591D8", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1159300", Offset = "0x1159300", VA = "0x1159300", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x1158608", Offset = "0x1158608", VA = "0x1158608")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000663")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5C8", Offset = "0x7BD5C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x11589E8", Offset = "0x11589E8", VA = "0x11589E8")]
			public <>c()
			{
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x11589F0", Offset = "0x11589F0", VA = "0x11589F0")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5D8", Offset = "0x7BD5D8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1158978", Offset = "0x1158978", VA = "0x1158978")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1158A5C", Offset = "0x1158A5C", VA = "0x1158A5C")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x1158740", Offset = "0x1158740", VA = "0x1158740", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1158868", Offset = "0x1158868", VA = "0x1158868", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1158610", Offset = "0x1158610", VA = "0x1158610")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x40011D0")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x1157ED0", Offset = "0x1157ED0", VA = "0x1157ED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1157FC4", Offset = "0x1157FC4", VA = "0x1157FC4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x115806C", Offset = "0x115806C", VA = "0x115806C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1158138", Offset = "0x1158138", VA = "0x1158138")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x11581D0", Offset = "0x11581D0", VA = "0x11581D0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x11582B8", Offset = "0x11582B8", VA = "0x11582B8")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x1158394", Offset = "0x1158394", VA = "0x1158394")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1158398", Offset = "0x1158398", VA = "0x1158398")]
	private void Update()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1158618", Offset = "0x1158618", VA = "0x1158618")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000314")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x1157978", Offset = "0x1157978", VA = "0x1157978")]
	private void Start()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x1157A44", Offset = "0x1157A44", VA = "0x1157A44")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x1157E40", Offset = "0x1157E40", VA = "0x1157E40")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x1157E44", Offset = "0x1157E44", VA = "0x1157E44")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x1157E48", Offset = "0x1157E48", VA = "0x1157E48")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x1157E4C", Offset = "0x1157E4C", VA = "0x1157E4C")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x2000315")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000664")]
	public class Item
	{
		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x115A900", Offset = "0x115A900", VA = "0x115A900")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000665")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x115A978", Offset = "0x115A978", VA = "0x115A978", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x115AA2C", Offset = "0x115AA2C", VA = "0x115AA2C", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x115AAFC", Offset = "0x115AAFC", VA = "0x115AAFC", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x115ABE8", Offset = "0x115ABE8", VA = "0x115ABE8", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x115ACA0", Offset = "0x115ACA0", VA = "0x115ACA0", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x115B4F4", Offset = "0x115B4F4", VA = "0x115B4F4", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x115B578", Offset = "0x115B578", VA = "0x115B578", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x115B648", Offset = "0x115B648", VA = "0x115B648", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x115B718", Offset = "0x115B718", VA = "0x115B718", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x115B804", Offset = "0x115B804", VA = "0x115B804", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x115BD88", Offset = "0x115BD88", VA = "0x115BD88", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x115C30C", Offset = "0x115C30C", VA = "0x115C30C", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x115C3A8", Offset = "0x115C3A8", VA = "0x115C3A8", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x1159880", Offset = "0x1159880", VA = "0x1159880")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1159724", Offset = "0x1159724", VA = "0x1159724")]
	private void Start()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x11598F0", Offset = "0x11598F0", VA = "0x11598F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x11598F4", Offset = "0x11598F4", VA = "0x11598F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x115A67C", Offset = "0x115A67C", VA = "0x115A67C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x115A760", Offset = "0x115A760", VA = "0x115A760")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x115A84C", Offset = "0x115A84C", VA = "0x115A84C")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000316")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000666")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6002767")]
		[Address(RVA = "0x115C7E8", Offset = "0x115C7E8", VA = "0x115C7E8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x115C890", Offset = "0x115C890", VA = "0x115C890")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x2000667")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5E8", Offset = "0x7BD5E8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x115C97C", Offset = "0x115C97C", VA = "0x115C97C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x115C984", Offset = "0x115C984", VA = "0x115C984")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x115C898", Offset = "0x115C898", VA = "0x115C898", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x115C760", Offset = "0x115C760", VA = "0x115C760")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x2000668")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD5F8", Offset = "0x7BD5F8")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x17000497")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029CC")]
				[Address(RVA = "0x115CC60", Offset = "0x115CC60", VA = "0x115CC60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CE")]
				[Address(RVA = "0x115CCD0", Offset = "0x115CCD0", VA = "0x115CCD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x115CB34", Offset = "0x115CB34", VA = "0x115CB34")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x115CB68", Offset = "0x115CB68", VA = "0x115CB68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x115CB6C", Offset = "0x115CB6C", VA = "0x115CB6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x115CC68", Offset = "0x115CC68", VA = "0x115CC68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x115CA2C", Offset = "0x115CA2C", VA = "0x115CA2C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x115CAB4", Offset = "0x115CAB4", VA = "0x115CAB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D4774", Offset = "0x7D4774")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x115CB60", Offset = "0x115CB60", VA = "0x115CB60")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x115C5D8", Offset = "0x115C5D8", VA = "0x115C5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x115C6C4", Offset = "0x115C6C4", VA = "0x115C6C4")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x115C768", Offset = "0x115C768", VA = "0x115C768")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000317")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x115CCD8", Offset = "0x115CCD8", VA = "0x115CCD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x115CDA4", Offset = "0x115CDA4", VA = "0x115CDA4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x115D660", Offset = "0x115D660", VA = "0x115D660")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x115D7A0", Offset = "0x115D7A0", VA = "0x115D7A0")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x115D7A4", Offset = "0x115D7A4", VA = "0x115D7A4")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x115DA3C", Offset = "0x115DA3C", VA = "0x115DA3C")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x2000318")]
public class WaterSensor : Sensor
{
	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DotController dot;

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x18513DC", Offset = "0x18513DC", VA = "0x18513DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x1851428", Offset = "0x1851428", VA = "0x1851428")]
	public WaterSensor()
	{
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000319")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xB9B344", Offset = "0xB9B344", VA = "0xB9B344")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xB9B410", Offset = "0xB9B410", VA = "0xB9B410")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xB9B994", Offset = "0xB9B994", VA = "0xB9B994")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB9BAA4", Offset = "0xB9BAA4", VA = "0xB9BAA4")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200031A")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD124", Offset = "0x7BD124")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x11519F8", Offset = "0x11519F8", VA = "0x11519F8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1151B68", Offset = "0x1151B68", VA = "0x1151B68")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD134", Offset = "0x7BD134")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000447")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002773")]
				[Address(RVA = "0x1151C18", Offset = "0x1151C18", VA = "0x1151C18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000448")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002775")]
				[Address(RVA = "0x1151C88", Offset = "0x1151C88", VA = "0x1151C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0x1151AA8", Offset = "0x1151AA8", VA = "0x1151AA8")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0x1151B9C", Offset = "0x1151B9C", VA = "0x1151B9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0x1151BA0", Offset = "0x1151BA0", VA = "0x1151BA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x1151C20", Offset = "0x1151C20", VA = "0x1151C20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD144", Offset = "0x7BD144")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000449")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002779")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600277B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002776")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002777")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002778")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600277A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD154", Offset = "0x7BD154")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700044B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600277F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002781")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600277C")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600277D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600277E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002780")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD164", Offset = "0x7BD164")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700044D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002785")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002787")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002782")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002783")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002784")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002786")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD174", Offset = "0x7BD174")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x1700044F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002788")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002789")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x11513E8", Offset = "0x11513E8", VA = "0x11513E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1151504", Offset = "0x1151504", VA = "0x1151504")]
		public void Update()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x11516AC", Offset = "0x11516AC", VA = "0x11516AC")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x11517B4", Offset = "0x11517B4", VA = "0x11517B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1151820", Offset = "0x1151820", VA = "0x1151820")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1151A00", Offset = "0x1151A00", VA = "0x1151A00")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001254")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001255")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001256")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001257")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1151A28", Offset = "0x1151A28", VA = "0x1151A28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0BCC", Offset = "0x7D0BCC")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0C30", Offset = "0x7D0C30")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x600125A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0C94", Offset = "0x7D0C94")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x600125B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0CF8", Offset = "0x7D0CF8")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0D5C", Offset = "0x7D0D5C")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1151AD4", Offset = "0x1151AD4", VA = "0x1151AD4")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public enum Locale
	{
		[Token(Token = "0x40011F4")]
		US,
		[Token(Token = "0x40011F5")]
		DE,
		[Token(Token = "0x40011F6")]
		JP,
		[Token(Token = "0x40011F7")]
		KR,
		[Token(Token = "0x40011F8")]
		RU,
		[Token(Token = "0x40011F9")]
		CN,
		[Token(Token = "0x40011FA")]
		TW,
		[Token(Token = "0x40011FB")]
		FR
	}
	[Token(Token = "0x200031C")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200031D")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200031E")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200031F")]
	public class Leaderboard
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4CFC", Offset = "0x7C4CFC")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4D0C", Offset = "0x7C4D0C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4D1C", Offset = "0x7C4D1C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000181")]
		public int Rank
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x11513D0", Offset = "0x11513D0", VA = "0x11513D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0DC0", Offset = "0x7D0DC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x1151220", Offset = "0x1151220", VA = "0x1151220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0DD0", Offset = "0x7D0DD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public int Score
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x11513D8", Offset = "0x11513D8", VA = "0x11513D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0DE0", Offset = "0x7D0DE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x1151228", Offset = "0x1151228", VA = "0x1151228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0DF0", Offset = "0x7D0DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public string UserName
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x11513E0", Offset = "0x11513E0", VA = "0x11513E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E00", Offset = "0x7D0E00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x1151218", Offset = "0x1151218", VA = "0x1151218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E10", Offset = "0x7D0E10")]
			set
			{
			}
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1151210", Offset = "0x1151210", VA = "0x1151210")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x200066F")]
		public enum Platform
		{
			[Token(Token = "0x4001FCE")]
			Windows,
			[Token(Token = "0x4001FCF")]
			Android
		}

		[Token(Token = "0x2000670")]
		public enum TransactionType
		{
			[Token(Token = "0x4001FD1")]
			Unknown,
			[Token(Token = "0x4001FD2")]
			Paid,
			[Token(Token = "0x4001FD3")]
			Redeem,
			[Token(Token = "0x4001FD4")]
			FreeTrial
		}

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4D2C", Offset = "0x7C4D2C")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4D3C", Offset = "0x7C4D3C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000184")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1152980", Offset = "0x1152980", VA = "0x1152980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E20", Offset = "0x7D0E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1152998", Offset = "0x1152998", VA = "0x1152998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E30", Offset = "0x7D0E30")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public TransactionType Type
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x11529A0", Offset = "0x11529A0", VA = "0x11529A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E40", Offset = "0x7D0E40")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x1152988", Offset = "0x1152988", VA = "0x1152988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E50", Offset = "0x7D0E50")]
			set
			{
			}
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x11528FC", Offset = "0x11528FC", VA = "0x11528FC")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class Api
	{
		[Token(Token = "0x2000671")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600278E")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x600278F")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x1142A48", Offset = "0x1142A48", VA = "0x1142A48")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1141BD4", Offset = "0x1141BD4", VA = "0x1141BD4")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1141AD4", Offset = "0x1141AD4", VA = "0x1141AD4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D0E60", Offset = "0x7D0E60")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x114214C", Offset = "0x114214C", VA = "0x114214C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1141B54", Offset = "0x1141B54", VA = "0x1141B54")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D0EC4", Offset = "0x7D0EC4")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x11424DC", Offset = "0x11424DC", VA = "0x11424DC")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1142780", Offset = "0x1142780", VA = "0x1142780")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x114289C", Offset = "0x114289C", VA = "0x114289C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class User
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x11529B0", Offset = "0x11529B0", VA = "0x11529B0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D0F28", Offset = "0x7D0F28")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1152A18", Offset = "0x1152A18", VA = "0x1152A18")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1152BA8", Offset = "0x1152BA8", VA = "0x1152BA8")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1152BDC", Offset = "0x1152BDC", VA = "0x1152BDC")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1152C10", Offset = "0x1152C10", VA = "0x1152C10")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1152C44", Offset = "0x1152C44", VA = "0x1152C44")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class UserStats
	{
		[Token(Token = "0x2000672")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001FD6")]
			GlobalData,
			[Token(Token = "0x4001FD7")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001FD8")]
			LocalData,
			[Token(Token = "0x4001FD9")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000673")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001FDB")]
			AllTime,
			[Token(Token = "0x4001FDC")]
			Daily,
			[Token(Token = "0x4001FDD")]
			Weekly,
			[Token(Token = "0x4001FDE")]
			Monthly
		}

		[Token(Token = "0x2000674")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001FE0")]
			None,
			[Token(Token = "0x4001FE1")]
			Ascending,
			[Token(Token = "0x4001FE2")]
			Descending
		}

		[Token(Token = "0x2000675")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001FE4")]
			None,
			[Token(Token = "0x4001FE5")]
			Numeric,
			[Token(Token = "0x4001FE6")]
			TimeSeconds,
			[Token(Token = "0x4001FE7")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000676")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001FE9")]
			None,
			[Token(Token = "0x4001FEA")]
			KeepBest,
			[Token(Token = "0x4001FEB")]
			ForceUpdate
		}

		[Token(Token = "0x2000677")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001FED")]
			Name,
			[Token(Token = "0x4001FEE")]
			Desc,
			[Token(Token = "0x4001FEF")]
			Hidden
		}

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1152C4C", Offset = "0x1152C4C", VA = "0x1152C4C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D0F8C", Offset = "0x7D0F8C")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1152E54", Offset = "0x1152E54", VA = "0x1152E54")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1152CB4", Offset = "0x1152CB4", VA = "0x1152CB4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D0FF0", Offset = "0x7D0FF0")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1152FE4", Offset = "0x1152FE4", VA = "0x1152FE4")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1153174", Offset = "0x1153174", VA = "0x1153174")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1153178", Offset = "0x1153178", VA = "0x1153178")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x115317C", Offset = "0x115317C", VA = "0x115317C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1153180", Offset = "0x1153180", VA = "0x1153180")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1152D1C", Offset = "0x1152D1C", VA = "0x1152D1C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1054", Offset = "0x7D1054")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1153184", Offset = "0x1153184", VA = "0x1153184")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1153314", Offset = "0x1153314", VA = "0x1153314")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1153318", Offset = "0x1153318", VA = "0x1153318")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x115331C", Offset = "0x115331C", VA = "0x115331C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1153320", Offset = "0x1153320", VA = "0x1153320")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1153324", Offset = "0x1153324", VA = "0x1153324")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1153328", Offset = "0x1153328", VA = "0x1153328")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x115332C", Offset = "0x115332C", VA = "0x115332C")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1152D84", Offset = "0x1152D84", VA = "0x1152D84")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D10B8", Offset = "0x7D10B8")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1153330", Offset = "0x1153330", VA = "0x1153330")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1152DEC", Offset = "0x1152DEC", VA = "0x1152DEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D111C", Offset = "0x7D111C")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1153500", Offset = "0x1153500", VA = "0x1153500")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x11536A8", Offset = "0x11536A8", VA = "0x11536A8")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x11536AC", Offset = "0x11536AC", VA = "0x11536AC")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x11536B0", Offset = "0x11536B0", VA = "0x11536B0")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x11536B4", Offset = "0x11536B4", VA = "0x11536B4")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x11536B8", Offset = "0x11536B8", VA = "0x11536B8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1142A58", Offset = "0x1142A58", VA = "0x1142A58")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class IAPurchase
	{
		[Token(Token = "0x2000678")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6002791")]
			[Address(RVA = "0x1144780", Offset = "0x1144780", VA = "0x1144780")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x11447F0", Offset = "0x11447F0", VA = "0x11447F0")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x114721C", Offset = "0x114721C", VA = "0x114721C", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0x1144B38", Offset = "0x1144B38", VA = "0x1144B38")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x1147790", Offset = "0x1147790", VA = "0x1147790", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x1145178", Offset = "0x1145178", VA = "0x1145178")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0x1147D04", Offset = "0x1147D04", VA = "0x1147D04", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0x11454AC", Offset = "0x11454AC", VA = "0x11454AC")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0x1148450", Offset = "0x1148450", VA = "0x1148450", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0x11457D0", Offset = "0x11457D0", VA = "0x11457D0")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0x1149160", Offset = "0x1149160", VA = "0x1149160", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0x1145A94", Offset = "0x1145A94", VA = "0x1145A94")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0x114A3A8", Offset = "0x114A3A8", VA = "0x114A3A8", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0x1145DB0", Offset = "0x1145DB0", VA = "0x1145DB0")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x114AAF8", Offset = "0x114AAF8", VA = "0x114AAF8", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1146358", Offset = "0x1146358", VA = "0x1146358")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x114B050", Offset = "0x114B050", VA = "0x114B050", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x114668C", Offset = "0x114668C", VA = "0x114668C")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x114B5A8", Offset = "0x114B5A8", VA = "0x114B5A8", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x11469C0", Offset = "0x11469C0", VA = "0x11469C0")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x114BDD8", Offset = "0x114BDD8", VA = "0x114BDD8", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x1146CE4", Offset = "0x1146CE4", VA = "0x1146CE4")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x114C3B0", Offset = "0x114C3B0", VA = "0x114C3B0", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x1146FB8", Offset = "0x1146FB8", VA = "0x1146FB8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x114C980", Offset = "0x114C980", VA = "0x114C980", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000679")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60027AA")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60027AB")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60027AC")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60027AD")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60027AE")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60027AF")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60027B0")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60027B1")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60027B2")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60027B3")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60027B4")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x60027B5")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x1147214", Offset = "0x1147214", VA = "0x1147214")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200067A")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x114CE28", Offset = "0x114CE28", VA = "0x114CE28", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x114CE2C", Offset = "0x114CE2C", VA = "0x114CE2C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x114CE30", Offset = "0x114CE30", VA = "0x114CE30", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x114CE34", Offset = "0x114CE34", VA = "0x114CE34", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x114CE38", Offset = "0x114CE38", VA = "0x114CE38", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x114CE3C", Offset = "0x114CE3C", VA = "0x114CE3C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x114CE40", Offset = "0x114CE40", VA = "0x114CE40", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x114CE44", Offset = "0x114CE44", VA = "0x114CE44", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x114CE48", Offset = "0x114CE48", VA = "0x114CE48", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x114CE4C", Offset = "0x114CE4C", VA = "0x114CE4C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x114CE50", Offset = "0x114CE50", VA = "0x114CE50", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x114CE54", Offset = "0x114CE54", VA = "0x114CE54", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x114CE58", Offset = "0x114CE58", VA = "0x114CE58", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x114CE5C", Offset = "0x114CE5C", VA = "0x114CE5C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200067B")]
		public class QueryResponse
		{
			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC1F0", Offset = "0x7CC1F0")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC200", Offset = "0x7CC200")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC210", Offset = "0x7CC210")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC220", Offset = "0x7CC220")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC230", Offset = "0x7CC230")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC240", Offset = "0x7CC240")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000451")]
			public string order_id
			{
				[Token(Token = "0x60027C5")]
				[Address(RVA = "0x114CE7C", Offset = "0x114CE7C", VA = "0x114CE7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4968", Offset = "0x7D4968")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027C6")]
				[Address(RVA = "0x1149138", Offset = "0x1149138", VA = "0x1149138")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4978", Offset = "0x7D4978")]
				set
				{
				}
			}

			[Token(Token = "0x17000452")]
			public string purchase_id
			{
				[Token(Token = "0x60027C7")]
				[Address(RVA = "0x114CE84", Offset = "0x114CE84", VA = "0x114CE84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4988", Offset = "0x7D4988")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027C8")]
				[Address(RVA = "0x1149130", Offset = "0x1149130", VA = "0x1149130")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4998", Offset = "0x7D4998")]
				set
				{
				}
			}

			[Token(Token = "0x17000453")]
			public string status
			{
				[Token(Token = "0x60027C9")]
				[Address(RVA = "0x114CE8C", Offset = "0x114CE8C", VA = "0x114CE8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49A8", Offset = "0x7D49A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CA")]
				[Address(RVA = "0x1149158", Offset = "0x1149158", VA = "0x1149158")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49B8", Offset = "0x7D49B8")]
				set
				{
				}
			}

			[Token(Token = "0x17000454")]
			public string price
			{
				[Token(Token = "0x60027CB")]
				[Address(RVA = "0x114CE94", Offset = "0x114CE94", VA = "0x114CE94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49C8", Offset = "0x7D49C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CC")]
				[Address(RVA = "0x1149140", Offset = "0x1149140", VA = "0x1149140")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49D8", Offset = "0x7D49D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000455")]
			public string currency
			{
				[Token(Token = "0x60027CD")]
				[Address(RVA = "0x114CE9C", Offset = "0x114CE9C", VA = "0x114CE9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49E8", Offset = "0x7D49E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027CE")]
				[Address(RVA = "0x1149148", Offset = "0x1149148", VA = "0x1149148")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D49F8", Offset = "0x7D49F8")]
				set
				{
				}
			}

			[Token(Token = "0x17000456")]
			public long paid_timestamp
			{
				[Token(Token = "0x60027CF")]
				[Address(RVA = "0x114CEA4", Offset = "0x114CEA4", VA = "0x114CEA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A08", Offset = "0x7D4A08")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027D0")]
				[Address(RVA = "0x1149150", Offset = "0x1149150", VA = "0x1149150")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A18", Offset = "0x7D4A18")]
				set
				{
				}
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x1149128", Offset = "0x1149128", VA = "0x1149128")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200067C")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC250", Offset = "0x7CC250")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC260", Offset = "0x7CC260")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC270", Offset = "0x7CC270")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC280", Offset = "0x7CC280")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC290", Offset = "0x7CC290")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2A0", Offset = "0x7CC2A0")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2B0", Offset = "0x7CC2B0")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000457")]
			public string order_id
			{
				[Token(Token = "0x60027D2")]
				[Address(RVA = "0x114CEAC", Offset = "0x114CEAC", VA = "0x114CEAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A28", Offset = "0x7D4A28")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0x114A368", Offset = "0x114A368", VA = "0x114A368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A38", Offset = "0x7D4A38")]
				set
				{
				}
			}

			[Token(Token = "0x17000458")]
			public string app_id
			{
				[Token(Token = "0x60027D4")]
				[Address(RVA = "0x114CEB4", Offset = "0x114CEB4", VA = "0x114CEB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A48", Offset = "0x7D4A48")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D5")]
				[Address(RVA = "0x114A350", Offset = "0x114A350", VA = "0x114A350")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A58", Offset = "0x7D4A58")]
				set
				{
				}
			}

			[Token(Token = "0x17000459")]
			public string purchase_id
			{
				[Token(Token = "0x60027D6")]
				[Address(RVA = "0x114CEBC", Offset = "0x114CEBC", VA = "0x114CEBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A68", Offset = "0x7D4A68")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D7")]
				[Address(RVA = "0x114A360", Offset = "0x114A360", VA = "0x114A360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A78", Offset = "0x7D4A78")]
				set
				{
				}
			}

			[Token(Token = "0x1700045A")]
			public string user_data
			{
				[Token(Token = "0x60027D8")]
				[Address(RVA = "0x114CEC4", Offset = "0x114CEC4", VA = "0x114CEC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A88", Offset = "0x7D4A88")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0x114A378", Offset = "0x114A378", VA = "0x114A378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4A98", Offset = "0x7D4A98")]
				set
				{
				}
			}

			[Token(Token = "0x1700045B")]
			public string price
			{
				[Token(Token = "0x60027DA")]
				[Address(RVA = "0x114CECC", Offset = "0x114CECC", VA = "0x114CECC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AA8", Offset = "0x7D4AA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027DB")]
				[Address(RVA = "0x114A370", Offset = "0x114A370", VA = "0x114A370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AB8", Offset = "0x7D4AB8")]
				set
				{
				}
			}

			[Token(Token = "0x1700045C")]
			public string currency
			{
				[Token(Token = "0x60027DC")]
				[Address(RVA = "0x114CED4", Offset = "0x114CED4", VA = "0x114CED4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AC8", Offset = "0x7D4AC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027DD")]
				[Address(RVA = "0x114A358", Offset = "0x114A358", VA = "0x114A358")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AD8", Offset = "0x7D4AD8")]
				set
				{
				}
			}

			[Token(Token = "0x1700045D")]
			public long paid_timestamp
			{
				[Token(Token = "0x60027DE")]
				[Address(RVA = "0x114CEDC", Offset = "0x114CEDC", VA = "0x114CEDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AE8", Offset = "0x7D4AE8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027DF")]
				[Address(RVA = "0x114A380", Offset = "0x114A380", VA = "0x114A380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4AF8", Offset = "0x7D4AF8")]
				set
				{
				}
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x114A348", Offset = "0x114A348", VA = "0x114A348")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x200067D")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2C0", Offset = "0x7CC2C0")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2D0", Offset = "0x7CC2D0")]
			private int <from>k__BackingField;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2E0", Offset = "0x7CC2E0")]
			private int <to>k__BackingField;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x1700045E")]
			public int total
			{
				[Token(Token = "0x60027E1")]
				[Address(RVA = "0x114CE64", Offset = "0x114CE64", VA = "0x114CE64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B08", Offset = "0x7D4B08")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027E2")]
				[Address(RVA = "0x114A390", Offset = "0x114A390", VA = "0x114A390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B18", Offset = "0x7D4B18")]
				set
				{
				}
			}

			[Token(Token = "0x1700045F")]
			public int from
			{
				[Token(Token = "0x60027E3")]
				[Address(RVA = "0x114CE6C", Offset = "0x114CE6C", VA = "0x114CE6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B28", Offset = "0x7D4B28")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027E4")]
				[Address(RVA = "0x114A398", Offset = "0x114A398", VA = "0x114A398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B38", Offset = "0x7D4B38")]
				set
				{
				}
			}

			[Token(Token = "0x17000460")]
			public int to
			{
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0x114CE74", Offset = "0x114CE74", VA = "0x114CE74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B48", Offset = "0x7D4B48")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027E6")]
				[Address(RVA = "0x114A3A0", Offset = "0x114A3A0", VA = "0x114A3A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B58", Offset = "0x7D4B58")]
				set
				{
				}
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x114A388", Offset = "0x114A388", VA = "0x114A388")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x200067E")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC2F0", Offset = "0x7CC2F0")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC300", Offset = "0x7CC300")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC310", Offset = "0x7CC310")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000461")]
			public long create_time
			{
				[Token(Token = "0x60027E8")]
				[Address(RVA = "0x114CF4C", Offset = "0x114CF4C", VA = "0x114CF4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B68", Offset = "0x7D4B68")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027E9")]
				[Address(RVA = "0x114CF54", Offset = "0x114CF54", VA = "0x114CF54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B78", Offset = "0x7D4B78")]
				set
				{
				}
			}

			[Token(Token = "0x17000462")]
			public string payment_method
			{
				[Token(Token = "0x60027EA")]
				[Address(RVA = "0x114CF5C", Offset = "0x114CF5C", VA = "0x114CF5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B88", Offset = "0x7D4B88")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027EB")]
				[Address(RVA = "0x114CF64", Offset = "0x114CF64", VA = "0x114CF64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4B98", Offset = "0x7D4B98")]
				set
				{
				}
			}

			[Token(Token = "0x17000463")]
			public string status
			{
				[Token(Token = "0x60027EC")]
				[Address(RVA = "0x114CF6C", Offset = "0x114CF6C", VA = "0x114CF6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BA8", Offset = "0x7D4BA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027ED")]
				[Address(RVA = "0x114CF74", Offset = "0x114CF74", VA = "0x114CF74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BB8", Offset = "0x7D4BB8")]
				set
				{
				}
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0x114CF7C", Offset = "0x114CF7C", VA = "0x114CF7C")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x200067F")]
		public class StatusDetail
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC320", Offset = "0x7CC320")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC330", Offset = "0x7CC330")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC340", Offset = "0x7CC340")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000464")]
			public long date_next_charge
			{
				[Token(Token = "0x60027EF")]
				[Address(RVA = "0x114CF14", Offset = "0x114CF14", VA = "0x114CF14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BC8", Offset = "0x7D4BC8")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60027F0")]
				[Address(RVA = "0x114CF1C", Offset = "0x114CF1C", VA = "0x114CF1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BD8", Offset = "0x7D4BD8")]
				set
				{
				}
			}

			[Token(Token = "0x17000465")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60027F1")]
				[Address(RVA = "0x114CF24", Offset = "0x114CF24", VA = "0x114CF24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BE8", Offset = "0x7D4BE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027F2")]
				[Address(RVA = "0x114CF2C", Offset = "0x114CF2C", VA = "0x114CF2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4BF8", Offset = "0x7D4BF8")]
				set
				{
				}
			}

			[Token(Token = "0x17000466")]
			public string cancel_reason
			{
				[Token(Token = "0x60027F3")]
				[Address(RVA = "0x114CF34", Offset = "0x114CF34", VA = "0x114CF34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C08", Offset = "0x7D4C08")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027F4")]
				[Address(RVA = "0x114CF3C", Offset = "0x114CF3C", VA = "0x114CF3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C18", Offset = "0x7D4C18")]
				set
				{
				}
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x114CF44", Offset = "0x114CF44", VA = "0x114CF44")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000680")]
		public class TimePeriod
		{
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC350", Offset = "0x7CC350")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC360", Offset = "0x7CC360")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000467")]
			public string time_type
			{
				[Token(Token = "0x60027F6")]
				[Address(RVA = "0x114D05C", Offset = "0x114D05C", VA = "0x114D05C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C28", Offset = "0x7D4C28")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027F7")]
				[Address(RVA = "0x114D064", Offset = "0x114D064", VA = "0x114D064")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C38", Offset = "0x7D4C38")]
				set
				{
				}
			}

			[Token(Token = "0x17000468")]
			public int value
			{
				[Token(Token = "0x60027F8")]
				[Address(RVA = "0x114D06C", Offset = "0x114D06C", VA = "0x114D06C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C48", Offset = "0x7D4C48")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60027F9")]
				[Address(RVA = "0x114D074", Offset = "0x114D074", VA = "0x114D074")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C58", Offset = "0x7D4C58")]
				set
				{
				}
			}

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x114D07C", Offset = "0x114D07C", VA = "0x114D07C")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000681")]
		public class Subscription
		{
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC370", Offset = "0x7CC370")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC380", Offset = "0x7CC380")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC390", Offset = "0x7CC390")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3A0", Offset = "0x7CC3A0")]
			private string <price>k__BackingField;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3B0", Offset = "0x7CC3B0")]
			private string <currency>k__BackingField;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3C0", Offset = "0x7CC3C0")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3D0", Offset = "0x7CC3D0")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3E0", Offset = "0x7CC3E0")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC3F0", Offset = "0x7CC3F0")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC400", Offset = "0x7CC400")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC410", Offset = "0x7CC410")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC420", Offset = "0x7CC420")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC430", Offset = "0x7CC430")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000469")]
			public string app_id
			{
				[Token(Token = "0x60027FB")]
				[Address(RVA = "0x114CF84", Offset = "0x114CF84", VA = "0x114CF84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C68", Offset = "0x7D4C68")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027FC")]
				[Address(RVA = "0x114CF8C", Offset = "0x114CF8C", VA = "0x114CF8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C78", Offset = "0x7D4C78")]
				set
				{
				}
			}

			[Token(Token = "0x1700046A")]
			public string order_id
			{
				[Token(Token = "0x60027FD")]
				[Address(RVA = "0x114CF94", Offset = "0x114CF94", VA = "0x114CF94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C88", Offset = "0x7D4C88")]
				get
				{
					return null;
				}
				[Token(Token = "0x60027FE")]
				[Address(RVA = "0x114CF9C", Offset = "0x114CF9C", VA = "0x114CF9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4C98", Offset = "0x7D4C98")]
				set
				{
				}
			}

			[Token(Token = "0x1700046B")]
			public string subscription_id
			{
				[Token(Token = "0x60027FF")]
				[Address(RVA = "0x114CFA4", Offset = "0x114CFA4", VA = "0x114CFA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CA8", Offset = "0x7D4CA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002800")]
				[Address(RVA = "0x114CFAC", Offset = "0x114CFAC", VA = "0x114CFAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CB8", Offset = "0x7D4CB8")]
				set
				{
				}
			}

			[Token(Token = "0x1700046C")]
			public string price
			{
				[Token(Token = "0x6002801")]
				[Address(RVA = "0x114CFB4", Offset = "0x114CFB4", VA = "0x114CFB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CC8", Offset = "0x7D4CC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002802")]
				[Address(RVA = "0x114CFBC", Offset = "0x114CFBC", VA = "0x114CFBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CD8", Offset = "0x7D4CD8")]
				set
				{
				}
			}

			[Token(Token = "0x1700046D")]
			public string currency
			{
				[Token(Token = "0x6002803")]
				[Address(RVA = "0x114CFC4", Offset = "0x114CFC4", VA = "0x114CFC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CE8", Offset = "0x7D4CE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002804")]
				[Address(RVA = "0x114CFCC", Offset = "0x114CFCC", VA = "0x114CFCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4CF8", Offset = "0x7D4CF8")]
				set
				{
				}
			}

			[Token(Token = "0x1700046E")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6002805")]
				[Address(RVA = "0x114CFD4", Offset = "0x114CFD4", VA = "0x114CFD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D08", Offset = "0x7D4D08")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002806")]
				[Address(RVA = "0x114CFDC", Offset = "0x114CFDC", VA = "0x114CFDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D18", Offset = "0x7D4D18")]
				set
				{
				}
			}

			[Token(Token = "0x1700046F")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002807")]
				[Address(RVA = "0x114CFE4", Offset = "0x114CFE4", VA = "0x114CFE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D28", Offset = "0x7D4D28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002808")]
				[Address(RVA = "0x114CFEC", Offset = "0x114CFEC", VA = "0x114CFEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D38", Offset = "0x7D4D38")]
				set
				{
				}
			}

			[Token(Token = "0x17000470")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002809")]
				[Address(RVA = "0x114CFF4", Offset = "0x114CFF4", VA = "0x114CFF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D48", Offset = "0x7D4D48")]
				get
				{
					return null;
				}
				[Token(Token = "0x600280A")]
				[Address(RVA = "0x114CFFC", Offset = "0x114CFFC", VA = "0x114CFFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D58", Offset = "0x7D4D58")]
				set
				{
				}
			}

			[Token(Token = "0x17000471")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600280B")]
				[Address(RVA = "0x114D004", Offset = "0x114D004", VA = "0x114D004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D68", Offset = "0x7D4D68")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600280C")]
				[Address(RVA = "0x114D00C", Offset = "0x114D00C", VA = "0x114D00C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D78", Offset = "0x7D4D78")]
				set
				{
				}
			}

			[Token(Token = "0x17000472")]
			public string plan_id
			{
				[Token(Token = "0x600280D")]
				[Address(RVA = "0x114D014", Offset = "0x114D014", VA = "0x114D014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D88", Offset = "0x7D4D88")]
				get
				{
					return null;
				}
				[Token(Token = "0x600280E")]
				[Address(RVA = "0x114D01C", Offset = "0x114D01C", VA = "0x114D01C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4D98", Offset = "0x7D4D98")]
				set
				{
				}
			}

			[Token(Token = "0x17000473")]
			public string plan_name
			{
				[Token(Token = "0x600280F")]
				[Address(RVA = "0x114D024", Offset = "0x114D024", VA = "0x114D024")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DA8", Offset = "0x7D4DA8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002810")]
				[Address(RVA = "0x114D02C", Offset = "0x114D02C", VA = "0x114D02C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DB8", Offset = "0x7D4DB8")]
				set
				{
				}
			}

			[Token(Token = "0x17000474")]
			public string status
			{
				[Token(Token = "0x6002811")]
				[Address(RVA = "0x114D034", Offset = "0x114D034", VA = "0x114D034")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DC8", Offset = "0x7D4DC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002812")]
				[Address(RVA = "0x114D03C", Offset = "0x114D03C", VA = "0x114D03C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DD8", Offset = "0x7D4DD8")]
				set
				{
				}
			}

			[Token(Token = "0x17000475")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002813")]
				[Address(RVA = "0x114D044", Offset = "0x114D044", VA = "0x114D044")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DE8", Offset = "0x7D4DE8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002814")]
				[Address(RVA = "0x114D04C", Offset = "0x114D04C", VA = "0x114D04C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4DF8", Offset = "0x7D4DF8")]
				set
				{
				}
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x114D054", Offset = "0x114D054", VA = "0x114D054")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000682")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC440", Offset = "0x7CC440")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC450", Offset = "0x7CC450")]
			private string <message>k__BackingField;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC460", Offset = "0x7CC460")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000476")]
			public int statusCode
			{
				[Token(Token = "0x6002816")]
				[Address(RVA = "0x114CEE4", Offset = "0x114CEE4", VA = "0x114CEE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E08", Offset = "0x7D4E08")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002817")]
				[Address(RVA = "0x114CEEC", Offset = "0x114CEEC", VA = "0x114CEEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E18", Offset = "0x7D4E18")]
				set
				{
				}
			}

			[Token(Token = "0x17000477")]
			public string message
			{
				[Token(Token = "0x6002818")]
				[Address(RVA = "0x114CEF4", Offset = "0x114CEF4", VA = "0x114CEF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E28", Offset = "0x7D4E28")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002819")]
				[Address(RVA = "0x114CEFC", Offset = "0x114CEFC", VA = "0x114CEFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E38", Offset = "0x7D4E38")]
				set
				{
				}
			}

			[Token(Token = "0x17000478")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x600281A")]
				[Address(RVA = "0x114C3A8", Offset = "0x114C3A8", VA = "0x114C3A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E48", Offset = "0x7D4E48")]
				get
				{
					return null;
				}
				[Token(Token = "0x600281B")]
				[Address(RVA = "0x114CF04", Offset = "0x114CF04", VA = "0x114CF04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D4E58", Offset = "0x7D4E58")]
				set
				{
				}
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0x114CF0C", Offset = "0x114CF0C", VA = "0x114CF0C")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1143E2C", Offset = "0x1143E2C", VA = "0x1143E2C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1180", Offset = "0x7D1180")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x11446A0", Offset = "0x11446A0", VA = "0x11446A0")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1143EA4", Offset = "0x1143EA4", VA = "0x1143EA4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D11E4", Offset = "0x7D11E4")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1144A58", Offset = "0x1144A58", VA = "0x1144A58")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1143F1C", Offset = "0x1143F1C", VA = "0x1143F1C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1248", Offset = "0x7D1248")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1144D8C", Offset = "0x1144D8C", VA = "0x1144D8C")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1143F94", Offset = "0x1143F94", VA = "0x1143F94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D12AC", Offset = "0x7D12AC")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1145098", Offset = "0x1145098", VA = "0x1145098")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x114400C", Offset = "0x114400C", VA = "0x114400C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1310", Offset = "0x7D1310")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x11453CC", Offset = "0x11453CC", VA = "0x11453CC")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1144084", Offset = "0x1144084", VA = "0x1144084")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1374", Offset = "0x7D1374")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1145700", Offset = "0x1145700", VA = "0x1145700")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x11440FC", Offset = "0x11440FC", VA = "0x11440FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D13D8", Offset = "0x7D13D8")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x11459C4", Offset = "0x11459C4", VA = "0x11459C4")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1144174", Offset = "0x1144174", VA = "0x1144174")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D143C", Offset = "0x7D143C")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1145C88", Offset = "0x1145C88", VA = "0x1145C88")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x11441EC", Offset = "0x11441EC", VA = "0x11441EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D14A0", Offset = "0x7D14A0")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1146278", Offset = "0x1146278", VA = "0x1146278")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1144264", Offset = "0x1144264", VA = "0x1144264")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1504", Offset = "0x7D1504")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x11465AC", Offset = "0x11465AC", VA = "0x11465AC")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x11442DC", Offset = "0x11442DC", VA = "0x11442DC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1568", Offset = "0x7D1568")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x11468E0", Offset = "0x11468E0", VA = "0x11468E0")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1144354", Offset = "0x1144354", VA = "0x1144354")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D15CC", Offset = "0x7D15CC")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1146C14", Offset = "0x1146C14", VA = "0x1146C14")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x11443CC", Offset = "0x11443CC", VA = "0x11443CC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1630", Offset = "0x7D1630")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1146ED8", Offset = "0x1146ED8", VA = "0x1146ED8")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x114720C", Offset = "0x114720C", VA = "0x114720C")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class DLC
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1143108", Offset = "0x1143108", VA = "0x1143108")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class Subscription
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x11525B0", Offset = "0x11525B0", VA = "0x11525B0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1694", Offset = "0x7D1694")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1152628", Offset = "0x1152628", VA = "0x1152628")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x11527B8", Offset = "0x11527B8", VA = "0x11527B8")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1152990", Offset = "0x1152990", VA = "0x1152990")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class Deeplink
	{
		[Token(Token = "0x2000683")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x600281D")]
			public abstract void OnSuccess();

			[Token(Token = "0x600281E")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600281F")]
			[Address(RVA = "0x1143E24", Offset = "0x1143E24", VA = "0x1143E24")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001220")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1143110", Offset = "0x1143110", VA = "0x1143110")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D16F8", Offset = "0x7D16F8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1143178", Offset = "0x1143178", VA = "0x1143178")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x114341C", Offset = "0x114341C", VA = "0x114341C")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1143704", Offset = "0x1143704", VA = "0x1143704")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x11437C8", Offset = "0x11437C8", VA = "0x11437C8")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1143A30", Offset = "0x1143A30", VA = "0x1143A30")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1143D18", Offset = "0x1143D18", VA = "0x1143D18")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x1143E1C", Offset = "0x1143E1C", VA = "0x1143E1C")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000329")]
	internal class Token
	{
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x11529A8", Offset = "0x11529A8", VA = "0x11529A8")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BB568", Offset = "0x7BB568")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BB57C", Offset = "0x7BB57C")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BB590", Offset = "0x7BB590")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BB5A4", Offset = "0x7BB5A4")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200032E")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001227")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001228")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001229")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x400122A")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200032F")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x400122C")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x400122D")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x400122E")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x400122F")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000330")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001231")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001232")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001233")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000331")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001235")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001236")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001237")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001238")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000332")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x400123A")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x400123B")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x400123C")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000333")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x400123E")]
		UNKNOWN,
		[Token(Token = "0x400123F")]
		PAID,
		[Token(Token = "0x4001240")]
		REDEEM,
		[Token(Token = "0x4001241")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000334")]
	internal enum ELocale
	{
		[Token(Token = "0x4001243")]
		k_ELocaleUS,
		[Token(Token = "0x4001244")]
		k_ELocaleDE,
		[Token(Token = "0x4001245")]
		k_ELocaleJP,
		[Token(Token = "0x4001246")]
		k_ELocaleKR,
		[Token(Token = "0x4001247")]
		k_ELocaleRU,
		[Token(Token = "0x4001248")]
		k_ELocaleCN,
		[Token(Token = "0x4001249")]
		k_ELocaleTW,
		[Token(Token = "0x400124A")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000335")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x400124C")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x400124D")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x400124E")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000336")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BB5B8", Offset = "0x7BB5B8")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000338")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000339")]
	internal class Api
	{
		[Token(Token = "0x2000684")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x114DC8C", Offset = "0x114DC8C", VA = "0x114DC8C")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x114DD24", Offset = "0x114DD24", VA = "0x114DD24")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x114DFA0", Offset = "0x114DFA0", VA = "0x114DFA0")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1142308", Offset = "0x1142308", VA = "0x1142308")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1142664", Offset = "0x1142664", VA = "0x1142664")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1142814", Offset = "0x1142814", VA = "0x1142814")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1141CE4", Offset = "0x1141CE4", VA = "0x1141CE4")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x114DD1C", Offset = "0x114DD1C", VA = "0x114DD1C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200033A")]
	internal class User
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x114F21C", Offset = "0x114F21C", VA = "0x114F21C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x114F390", Offset = "0x114F390", VA = "0x114F390")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x114F490", Offset = "0x114F490", VA = "0x114F490")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x114F590", Offset = "0x114F590", VA = "0x114F590")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x114F690", Offset = "0x114F690", VA = "0x114F690")]
		public User()
		{
		}
	}
	[Token(Token = "0x200033B")]
	internal class UserStats
	{
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x114F698", Offset = "0x114F698", VA = "0x114F698")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x114F80C", Offset = "0x114F80C", VA = "0x114F80C")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x114F980", Offset = "0x114F980", VA = "0x114F980")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x114FAF4", Offset = "0x114FAF4", VA = "0x114FAF4")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x114FC6C", Offset = "0x114FC6C", VA = "0x114FC6C")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x114FDEC", Offset = "0x114FDEC", VA = "0x114FDEC")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x114FF64", Offset = "0x114FF64", VA = "0x114FF64")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x11500E4", Offset = "0x11500E4", VA = "0x11500E4")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x11501DC", Offset = "0x11501DC", VA = "0x11501DC")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x11502D4", Offset = "0x11502D4", VA = "0x11502D4")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x11503CC", Offset = "0x11503CC", VA = "0x11503CC")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x11504C4", Offset = "0x11504C4", VA = "0x11504C4")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x115063C", Offset = "0x115063C", VA = "0x115063C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1150820", Offset = "0x1150820", VA = "0x1150820")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1150918", Offset = "0x1150918", VA = "0x1150918")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1150CC0", Offset = "0x1150CC0", VA = "0x1150CC0")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1150F14", Offset = "0x1150F14", VA = "0x1150F14")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1151230", Offset = "0x1151230", VA = "0x1151230")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x11512B8", Offset = "0x11512B8", VA = "0x11512B8")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1151340", Offset = "0x1151340", VA = "0x1151340")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x11513C8", Offset = "0x11513C8", VA = "0x11513C8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200033C")]
	internal class Deeplink
	{
		[Token(Token = "0x2000685")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x114E1F0", Offset = "0x114E1F0", VA = "0x114E1F0")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x114E288", Offset = "0x114E288", VA = "0x114E288")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x114E314", Offset = "0x114E314", VA = "0x114E314")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1143308", Offset = "0x1143308", VA = "0x1143308")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x11434E0", Offset = "0x11434E0", VA = "0x11434E0")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1143864", Offset = "0x1143864", VA = "0x1143864")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1143AF4", Offset = "0x1143AF4", VA = "0x1143AF4")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1143D1C", Offset = "0x1143D1C", VA = "0x1143D1C")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x114E280", Offset = "0x114E280", VA = "0x114E280")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x200033D")]
	internal class IAPurchase
	{
		[Token(Token = "0x6001302")]
		[Address(RVA = "0x114488C", Offset = "0x114488C", VA = "0x114488C")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1144BC0", Offset = "0x1144BC0", VA = "0x1144BC0")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1144E74", Offset = "0x1144E74", VA = "0x1144E74")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1145200", Offset = "0x1145200", VA = "0x1145200")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1145534", Offset = "0x1145534", VA = "0x1145534")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1145858", Offset = "0x1145858", VA = "0x1145858")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1145B1C", Offset = "0x1145B1C", VA = "0x1145B1C")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1145E38", Offset = "0x1145E38", VA = "0x1145E38")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x11463E0", Offset = "0x11463E0", VA = "0x11463E0")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1146714", Offset = "0x1146714", VA = "0x1146714")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1146A48", Offset = "0x1146A48", VA = "0x1146A48")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1146D6C", Offset = "0x1146D6C", VA = "0x1146D6C")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1147040", Offset = "0x1147040", VA = "0x1147040")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x114E994", Offset = "0x114E994", VA = "0x114E994")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200033E")]
	internal class Subscription
	{
		[Token(Token = "0x6001310")]
		[Address(RVA = "0x114EEAC", Offset = "0x114EEAC", VA = "0x114EEAC")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x114F020", Offset = "0x114F020", VA = "0x114F020")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x114F0A8", Offset = "0x114F0A8", VA = "0x114F0A8")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x114F130", Offset = "0x114F130", VA = "0x114F130")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x114F214", Offset = "0x114F214", VA = "0x114F214")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200033F")]
	internal class Android
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000186")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0x114D504", Offset = "0x114D504", VA = "0x114D504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x114D5A0", Offset = "0x114D5A0", VA = "0x114D5A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x114D608", Offset = "0x114D608", VA = "0x114D608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x114D084", Offset = "0x114D084", VA = "0x114D084")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x114D144", Offset = "0x114D144", VA = "0x114D144")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x114D204", Offset = "0x114D204", VA = "0x114D204")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x114D2C4", Offset = "0x114D2C4", VA = "0x114D2C4")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x114D384", Offset = "0x114D384", VA = "0x114D384")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x114D444", Offset = "0x114D444", VA = "0x114D444")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x114D60C", Offset = "0x114D60C", VA = "0x114D60C")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000340")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x114D614", Offset = "0x114D614", VA = "0x114D614")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x114D6A4", Offset = "0x114D6A4", VA = "0x114D6A4")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x114D734", Offset = "0x114D734", VA = "0x114D734")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x114D7C4", Offset = "0x114D7C4", VA = "0x114D7C4")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x2000341")]
	internal class Session
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1142A50", Offset = "0x1142A50", VA = "0x1142A50")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x2000342")]
	public class Logger
	{
		[Token(Token = "0x400125E")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1142A60", Offset = "0x1142A60", VA = "0x1142A60")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1142E98", Offset = "0x1142E98", VA = "0x1142E98")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1142B30", Offset = "0x1142B30", VA = "0x1142B30")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1142F34", Offset = "0x1142F34", VA = "0x1142F34")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x11430AC", Offset = "0x11430AC", VA = "0x11430AC")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000343")]
	public enum JsonType
	{
		[Token(Token = "0x4001263")]
		None,
		[Token(Token = "0x4001264")]
		Object,
		[Token(Token = "0x4001265")]
		Array,
		[Token(Token = "0x4001266")]
		String,
		[Token(Token = "0x4001267")]
		Int,
		[Token(Token = "0x4001268")]
		Long,
		[Token(Token = "0x4001269")]
		Double,
		[Token(Token = "0x400126A")]
		Boolean
	}
	[Token(Token = "0x2000344")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000189")]
		bool IsArray
		{
			[Token(Token = "0x600132A")]
			get;
		}

		[Token(Token = "0x1700018A")]
		bool IsBoolean
		{
			[Token(Token = "0x600132B")]
			get;
		}

		[Token(Token = "0x1700018B")]
		bool IsDouble
		{
			[Token(Token = "0x600132C")]
			get;
		}

		[Token(Token = "0x1700018C")]
		bool IsInt
		{
			[Token(Token = "0x600132D")]
			get;
		}

		[Token(Token = "0x1700018D")]
		bool IsLong
		{
			[Token(Token = "0x600132E")]
			get;
		}

		[Token(Token = "0x1700018E")]
		bool IsObject
		{
			[Token(Token = "0x600132F")]
			get;
		}

		[Token(Token = "0x1700018F")]
		bool IsString
		{
			[Token(Token = "0x6001330")]
			get;
		}

		[Token(Token = "0x6001331")]
		bool GetBoolean();

		[Token(Token = "0x6001332")]
		double GetDouble();

		[Token(Token = "0x6001333")]
		int GetInt();

		[Token(Token = "0x6001334")]
		JsonType GetJsonType();

		[Token(Token = "0x6001335")]
		long GetLong();

		[Token(Token = "0x6001336")]
		string GetString();

		[Token(Token = "0x6001337")]
		void SetBoolean(bool val);

		[Token(Token = "0x6001338")]
		void SetDouble(double val);

		[Token(Token = "0x6001339")]
		void SetInt(int val);

		[Token(Token = "0x600133A")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x600133B")]
		void SetLong(long val);

		[Token(Token = "0x600133C")]
		void SetString(string val);

		[Token(Token = "0x600133D")]
		string ToJson();

		[Token(Token = "0x600133E")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7BB5CC", Offset = "0x7BB5CC")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000190")]
		public int Count
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x98AB84", Offset = "0x98AB84", VA = "0x98AB84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000191")]
		public bool IsArray
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x98AD18", Offset = "0x98AD18", VA = "0x98AD18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public bool IsBoolean
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0x98AD28", Offset = "0x98AD28", VA = "0x98AD28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public bool IsDouble
		{
			[Token(Token = "0x6001342")]
			[Address(RVA = "0x98AD38", Offset = "0x98AD38", VA = "0x98AD38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000194")]
		public bool IsInt
		{
			[Token(Token = "0x6001343")]
			[Address(RVA = "0x98AD48", Offset = "0x98AD48", VA = "0x98AD48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000195")]
		public bool IsLong
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x98AD58", Offset = "0x98AD58", VA = "0x98AD58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public bool IsObject
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0x98AD68", Offset = "0x98AD68", VA = "0x98AD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public bool IsString
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x98AD78", Offset = "0x98AD78", VA = "0x98AD78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x98AD88", Offset = "0x98AD88", VA = "0x98AD88", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000199")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0x98AD8C", Offset = "0x98AD8C", VA = "0x98AD8C", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0x98AE48", Offset = "0x98AE48", VA = "0x98AE48", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x98AF04", Offset = "0x98AF04", VA = "0x98AF04", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x98B10C", Offset = "0x98B10C", VA = "0x98B10C", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x98B1C8", Offset = "0x98B1C8", VA = "0x98B1C8", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x98B550", Offset = "0x98B550", VA = "0x98B550", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x98B8D8", Offset = "0x98B8D8", VA = "0x98B8D8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x98B8E8", Offset = "0x98B8E8", VA = "0x98B8E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x98B8F8", Offset = "0x98B8F8", VA = "0x98B8F8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x98B908", Offset = "0x98B908", VA = "0x98B908", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x98B918", Offset = "0x98B918", VA = "0x98B918", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x98B928", Offset = "0x98B928", VA = "0x98B928", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x98B938", Offset = "0x98B938", VA = "0x98B938", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x98B948", Offset = "0x98B948", VA = "0x98B948", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x98BB1C", Offset = "0x98BB1C", VA = "0x98BB1C", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x98BBD8", Offset = "0x98BBD8", VA = "0x98BBD8", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x98BCA0", Offset = "0x98BCA0", VA = "0x98BCA0", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x98C214", Offset = "0x98C214", VA = "0x98C214", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x98C30C", Offset = "0x98C30C", VA = "0x98C30C", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x98C558", Offset = "0x98C558", VA = "0x98C558", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x98C620", Offset = "0x98C620", VA = "0x98C620", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public JsonData Item
		{
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x98C94C", Offset = "0x98C94C", VA = "0x98C94C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x98BE20", Offset = "0x98BE20", VA = "0x98BE20")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public JsonData Item
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x98CA18", Offset = "0x98CA18", VA = "0x98CA18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x98C664", Offset = "0x98C664", VA = "0x98C664")]
			set
			{
			}
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x98CB9C", Offset = "0x98CB9C", VA = "0x98CB9C")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x98CBA4", Offset = "0x98CBA4", VA = "0x98CBA4")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x98CBDC", Offset = "0x98CBDC", VA = "0x98CBDC")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x98CC18", Offset = "0x98CC18", VA = "0x98CC18")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x98CC4C", Offset = "0x98CC4C", VA = "0x98CC4C")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x98CC80", Offset = "0x98CC80", VA = "0x98CC80")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x98CE90", Offset = "0x98CE90", VA = "0x98CE90")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x98CECC", Offset = "0x98CECC", VA = "0x98CECC")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x98CF3C", Offset = "0x98CF3C", VA = "0x98CF3C")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x98CFB0", Offset = "0x98CFB0", VA = "0x98CFB0")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x98D01C", Offset = "0x98D01C", VA = "0x98D01C")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x98D088", Offset = "0x98D088", VA = "0x98D088")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x98D100", Offset = "0x98D100", VA = "0x98D100")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x98D1A0", Offset = "0x98D1A0", VA = "0x98D1A0")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x98D240", Offset = "0x98D240", VA = "0x98D240")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x98D2E0", Offset = "0x98D2E0", VA = "0x98D2E0")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x98D380", Offset = "0x98D380", VA = "0x98D380")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x98D420", Offset = "0x98D420", VA = "0x98D420", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x98D4F0", Offset = "0x98D4F0", VA = "0x98D4F0", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x98D6BC", Offset = "0x98D6BC", VA = "0x98D6BC", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x98D804", Offset = "0x98D804", VA = "0x98D804", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x98D8D0", Offset = "0x98D8D0", VA = "0x98D8D0", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x98D978", Offset = "0x98D978", VA = "0x98D978", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x98DC58", Offset = "0x98DC58", VA = "0x98DC58", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x98DD10", Offset = "0x98DD10", VA = "0x98DD10", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x98DDA4", Offset = "0x98DDA4", VA = "0x98DDA4", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x98DE38", Offset = "0x98DE38", VA = "0x98DE38", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x98DECC", Offset = "0x98DECC", VA = "0x98DECC", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x98DF60", Offset = "0x98DF60", VA = "0x98DF60", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x98DFF4", Offset = "0x98DFF4", VA = "0x98DFF4", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x98E010", Offset = "0x98E010", VA = "0x98E010", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x98E028", Offset = "0x98E028", VA = "0x98E028", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x98E040", Offset = "0x98E040", VA = "0x98E040", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x98E058", Offset = "0x98E058", VA = "0x98E058", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x98E090", Offset = "0x98E090", VA = "0x98E090", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x98E180", Offset = "0x98E180", VA = "0x98E180", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x98E218", Offset = "0x98E218", VA = "0x98E218", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x98E304", Offset = "0x98E304", VA = "0x98E304", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x98E3D0", Offset = "0x98E3D0", VA = "0x98E3D0", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x98E49C", Offset = "0x98E49C", VA = "0x98E49C", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x98E568", Offset = "0x98E568", VA = "0x98E568", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x98E64C", Offset = "0x98E64C", VA = "0x98E64C", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x98E728", Offset = "0x98E728", VA = "0x98E728", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x98E804", Offset = "0x98E804", VA = "0x98E804", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x98E8F0", Offset = "0x98E8F0", VA = "0x98E8F0", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x98EA44", Offset = "0x98EA44", VA = "0x98EA44", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x98AC40", Offset = "0x98AC40", VA = "0x98AC40")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x98AFC0", Offset = "0x98AFC0", VA = "0x98AFC0")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x98BA04", Offset = "0x98BA04", VA = "0x98BA04")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x98BD84", Offset = "0x98BD84", VA = "0x98BD84")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x98EC40", Offset = "0x98EC40", VA = "0x98EC40")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x98E21C", Offset = "0x98E21C", VA = "0x98E21C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x98F8B4", Offset = "0x98F8B4", VA = "0x98F8B4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x98F9D0", Offset = "0x98F9D0", VA = "0x98F9D0", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x98FAF4", Offset = "0x98FAF4", VA = "0x98FAF4", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x98FAFC", Offset = "0x98FAFC", VA = "0x98FAFC", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x98E094", Offset = "0x98E094", VA = "0x98E094")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x98E184", Offset = "0x98E184", VA = "0x98E184")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x98FC48", Offset = "0x98FC48", VA = "0x98FC48", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000346")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170001AD")]
		public object Current
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xA2EF08", Offset = "0xA2EF08", VA = "0xA2EF08", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0xA2EF74", Offset = "0xA2EF74", VA = "0xA2EF74", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170001AF")]
		public object Key
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xA2F088", Offset = "0xA2F088", VA = "0xA2F088", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public object Value
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xA2F168", Offset = "0xA2F168", VA = "0xA2F168", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xA2F248", Offset = "0xA2F248", VA = "0xA2F248")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xA2F27C", Offset = "0xA2F27C", VA = "0xA2F27C", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xA2F330", Offset = "0xA2F330", VA = "0xA2F330", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xA1F80C", Offset = "0xA1F80C", VA = "0xA1F80C")]
		public JsonException()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xA1F814", Offset = "0xA1F814", VA = "0xA1F814")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xA1F8A4", Offset = "0xA1F8A4", VA = "0xA1F8A4")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xA1F944", Offset = "0xA1F944", VA = "0xA1F944")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xA1F9D4", Offset = "0xA1F9D4", VA = "0xA1F9D4")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xA1FA74", Offset = "0xA1FA74", VA = "0xA1FA74")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xA1FA7C", Offset = "0xA1FA7C", VA = "0xA1FA7C")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000348")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000349")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x170001B1")]
		public Type ElementType
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x8600D0", Offset = "0x8600D0", VA = "0x8600D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x8600D8", Offset = "0x8600D8", VA = "0x8600D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public bool IsArray
		{
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x8600E0", Offset = "0x8600E0", VA = "0x8600E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x8600E8", Offset = "0x8600E8", VA = "0x8600E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool IsList
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x8600F4", Offset = "0x8600F4", VA = "0x8600F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x8600FC", Offset = "0x8600FC", VA = "0x8600FC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200034A")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x170001B4")]
		public Type ElementType
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x86138C", Offset = "0x86138C", VA = "0x86138C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x861394", Offset = "0x861394", VA = "0x861394")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public bool IsDictionary
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x86139C", Offset = "0x86139C", VA = "0x86139C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x8613A4", Offset = "0x8613A4", VA = "0x8613A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x8613B0", Offset = "0x8613B0", VA = "0x8613B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x8613B8", Offset = "0x8613B8", VA = "0x8613B8")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200034B")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x200034C")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200034D")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200034E")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200034F")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000350")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD184", Offset = "0x7BD184")]
		private sealed class <>c
		{
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002827")]
			[Address(RVA = "0xA287D0", Offset = "0xA287D0", VA = "0xA287D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0xA287D8", Offset = "0xA287D8", VA = "0xA287D8")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0xA288A4", Offset = "0xA288A4", VA = "0xA288A4")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0xA28970", Offset = "0xA28970", VA = "0xA28970")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0xA28A70", Offset = "0xA28A70", VA = "0xA28A70")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0xA28BF8", Offset = "0xA28BF8", VA = "0xA28BF8")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0xA28CC4", Offset = "0xA28CC4", VA = "0xA28CC4")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0xA28D90", Offset = "0xA28D90", VA = "0xA28D90")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0xA28E5C", Offset = "0xA28E5C", VA = "0xA28E5C")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0xA28F28", Offset = "0xA28F28", VA = "0xA28F28")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0xA28FC4", Offset = "0xA28FC4", VA = "0xA28FC4")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0xA29064", Offset = "0xA29064", VA = "0xA29064")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0xA29130", Offset = "0xA29130", VA = "0xA29130")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0xA291FC", Offset = "0xA291FC", VA = "0xA291FC")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0xA292C8", Offset = "0xA292C8", VA = "0xA292C8")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002836")]
			[Address(RVA = "0xA29394", Offset = "0xA29394", VA = "0xA29394")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0xA29460", Offset = "0xA29460", VA = "0xA29460")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0xA2952C", Offset = "0xA2952C", VA = "0xA2952C")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002839")]
			[Address(RVA = "0xA295F4", Offset = "0xA295F4", VA = "0xA295F4")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0xA296C0", Offset = "0xA296C0", VA = "0xA296C0")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x600283B")]
			[Address(RVA = "0xA29788", Offset = "0xA29788", VA = "0xA29788")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x600283C")]
			[Address(RVA = "0xA29854", Offset = "0xA29854", VA = "0xA29854")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0xA29920", Offset = "0xA29920", VA = "0xA29920")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x600283E")]
			[Address(RVA = "0xA299E0", Offset = "0xA299E0", VA = "0xA299E0")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x600283F")]
			[Address(RVA = "0xA29AD4", Offset = "0xA29AD4", VA = "0xA29AD4")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002840")]
			[Address(RVA = "0xA29B30", Offset = "0xA29B30", VA = "0xA29B30")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002841")]
			[Address(RVA = "0xA29B8C", Offset = "0xA29B8C", VA = "0xA29B8C")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD194", Offset = "0x7BD194")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6002842")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002843")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1A4", Offset = "0x7BD1A4")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002844")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002845")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xA1FA84", Offset = "0xA1FA84", VA = "0xA1FA84")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xA21AA8", Offset = "0xA21AA8", VA = "0xA21AA8")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xA21FD0", Offset = "0xA21FD0", VA = "0xA21FD0")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xA22858", Offset = "0xA22858", VA = "0xA22858")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xA22E24", Offset = "0xA22E24", VA = "0xA22E24")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xA23740", Offset = "0xA23740", VA = "0xA23740")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xA24E94", Offset = "0xA24E94", VA = "0xA24E94")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xA1FE7C", Offset = "0xA1FE7C", VA = "0xA1FE7C")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xA20CFC", Offset = "0xA20CFC", VA = "0xA20CFC")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xA25834", Offset = "0xA25834", VA = "0xA25834")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xA25A98", Offset = "0xA25A98", VA = "0xA25A98")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xA27D08", Offset = "0xA27D08", VA = "0xA27D08")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xA27F84", Offset = "0xA27F84", VA = "0xA27F84")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xA28000", Offset = "0xA28000", VA = "0xA28000")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xA281D8", Offset = "0xA281D8", VA = "0xA281D8")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xA28350", Offset = "0xA28350", VA = "0xA28350")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x60013DA")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60013DB")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60013DC")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xA28164", Offset = "0xA28164", VA = "0xA28164")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xA284A0", Offset = "0xA284A0", VA = "0xA284A0")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x60013E0")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xA285A8", Offset = "0xA285A8", VA = "0xA285A8")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xA28684", Offset = "0xA28684", VA = "0xA28684")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xA28760", Offset = "0xA28760", VA = "0xA28760")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public enum JsonToken
	{
		[Token(Token = "0x4001290")]
		None,
		[Token(Token = "0x4001291")]
		ObjectStart,
		[Token(Token = "0x4001292")]
		PropertyName,
		[Token(Token = "0x4001293")]
		ObjectEnd,
		[Token(Token = "0x4001294")]
		ArrayStart,
		[Token(Token = "0x4001295")]
		ArrayEnd,
		[Token(Token = "0x4001296")]
		Int,
		[Token(Token = "0x4001297")]
		Long,
		[Token(Token = "0x4001298")]
		Double,
		[Token(Token = "0x4001299")]
		String,
		[Token(Token = "0x400129A")]
		Boolean,
		[Token(Token = "0x400129B")]
		Null
	}
	[Token(Token = "0x2000352")]
	public class JsonReader
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x170001B7")]
		public bool AllowComments
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xA29BE8", Offset = "0xA29BE8", VA = "0xA29BE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xA29C1C", Offset = "0xA29C1C", VA = "0xA29C1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xA29C5C", Offset = "0xA29C5C", VA = "0xA29C5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xA29C90", Offset = "0xA29C90", VA = "0xA29C90")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public bool EndOfInput
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xA29CD0", Offset = "0xA29CD0", VA = "0xA29CD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BA")]
		public bool EndOfJson
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xA29CD8", Offset = "0xA29CD8", VA = "0xA29CD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public JsonToken Token
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xA24DBC", Offset = "0xA24DBC", VA = "0xA24DBC")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170001BC")]
		public object Value
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0xA24DC4", Offset = "0xA24DC4", VA = "0xA24DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xA29CE0", Offset = "0xA29CE0", VA = "0xA29CE0")]
		static JsonReader()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xA28530", Offset = "0xA28530", VA = "0xA28530")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xA28348", Offset = "0xA28348", VA = "0xA28348")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xA2A4E0", Offset = "0xA2A4E0", VA = "0xA2A4E0")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xA29CE4", Offset = "0xA29CE4", VA = "0xA29CE4")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xA2A878", Offset = "0xA2A878", VA = "0xA2A878")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xA2A764", Offset = "0xA2A764", VA = "0xA2A764")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xA2A9E8", Offset = "0xA2A9E8", VA = "0xA2A9E8")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xA2AB94", Offset = "0xA2AB94", VA = "0xA2AB94")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xA2AD7C", Offset = "0xA2AD7C", VA = "0xA2AD7C")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xA2B088", Offset = "0xA2B088", VA = "0xA2B088")]
		public void Close()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xA24900", Offset = "0xA24900", VA = "0xA24900")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000353")]
	internal enum Condition
	{
		[Token(Token = "0x40012AB")]
		InArray,
		[Token(Token = "0x40012AC")]
		InObject,
		[Token(Token = "0x40012AD")]
		NotAProperty,
		[Token(Token = "0x40012AE")]
		Property,
		[Token(Token = "0x40012AF")]
		Value
	}
	[Token(Token = "0x2000354")]
	internal class WriterContext
	{
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xA2B648", Offset = "0xA2B648", VA = "0xA2B648")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class JsonWriter
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170001BD")]
		public int IndentValue
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xA2B0F4", Offset = "0xA2B0F4", VA = "0xA2B0F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xA2B0FC", Offset = "0xA2B0FC", VA = "0xA2B0FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool PrettyPrint
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xA2B110", Offset = "0xA2B110", VA = "0xA2B110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xA2B118", Offset = "0xA2B118", VA = "0xA2B118")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xA27260", Offset = "0xA27260", VA = "0xA27260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public bool Validate
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xA2B124", Offset = "0xA2B124", VA = "0xA2B124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xA2B12C", Offset = "0xA2B12C", VA = "0xA2B12C")]
			set
			{
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xA2B138", Offset = "0xA2B138", VA = "0xA2B138")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xA1FDC4", Offset = "0xA1FDC4", VA = "0xA1FDC4")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xA2B29C", Offset = "0xA2B29C", VA = "0xA2B29C")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xA2B310", Offset = "0xA2B310", VA = "0xA2B310")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xA2B3C4", Offset = "0xA2B3C4", VA = "0xA2B3C4")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xA2B19C", Offset = "0xA2B19C", VA = "0xA2B19C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xA2B650", Offset = "0xA2B650", VA = "0xA2B650")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xA2B700", Offset = "0xA2B700", VA = "0xA2B700")]
		private void Indent()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xA2B718", Offset = "0xA2B718", VA = "0xA2B718")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xA2B7C8", Offset = "0xA2B7C8", VA = "0xA2B7C8")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xA2B7D0", Offset = "0xA2B7D0", VA = "0xA2B7D0")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xA2B894", Offset = "0xA2B894", VA = "0xA2B894")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xA2BC00", Offset = "0xA2BC00", VA = "0xA2BC00")]
		private void Unindent()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xA2BC18", Offset = "0xA2BC18", VA = "0xA2BC18", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xA27E88", Offset = "0xA27E88", VA = "0xA27E88")]
		public void Reset()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xA274AC", Offset = "0xA274AC", VA = "0xA274AC")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xA28B0C", Offset = "0xA28B0C", VA = "0xA28B0C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xA27268", Offset = "0xA27268", VA = "0xA27268")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xA273C8", Offset = "0xA273C8", VA = "0xA273C8")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xA27558", Offset = "0xA27558", VA = "0xA27558")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xA271C0", Offset = "0xA271C0", VA = "0xA271C0")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xA27C24", Offset = "0xA27C24", VA = "0xA27C24")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xA27730", Offset = "0xA27730", VA = "0xA27730")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xA2763C", Offset = "0xA2763C", VA = "0xA2763C")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xA27AFC", Offset = "0xA27AFC", VA = "0xA27AFC")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xA27858", Offset = "0xA27858", VA = "0xA27858")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xA2794C", Offset = "0xA2794C", VA = "0xA2794C")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000356")]
	internal class FsmContext
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x98A77C", Offset = "0x98A77C", VA = "0x98A77C")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000357")]
	internal class Lexer
	{
		[Token(Token = "0x2000689")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170001C1")]
		public bool AllowComments
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xA29C14", Offset = "0xA29C14", VA = "0xA29C14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xA29C50", Offset = "0xA29C50", VA = "0xA29C50")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xA29C88", Offset = "0xA29C88", VA = "0xA29C88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xA29CC4", Offset = "0xA29CC4", VA = "0xA29CC4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xA2B080", Offset = "0xA2B080", VA = "0xA2B080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		public int Token
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xA2B0EC", Offset = "0xA2B0EC", VA = "0xA2B0EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C5")]
		public string StringValue
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xA2AD74", Offset = "0xA2AD74", VA = "0xA2AD74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xA2BC88", Offset = "0xA2BC88", VA = "0xA2BC88")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xA2A668", Offset = "0xA2A668", VA = "0xA2A668")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xA2CBE4", Offset = "0xA2CBE4", VA = "0xA2CBE4")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xA2BC8C", Offset = "0xA2BC8C", VA = "0xA2BC8C")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xA2CC74", Offset = "0xA2CC74", VA = "0xA2CC74")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xA2CD74", Offset = "0xA2CD74", VA = "0xA2CD74")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xA2D0C8", Offset = "0xA2D0C8", VA = "0xA2D0C8")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xA2D218", Offset = "0xA2D218", VA = "0xA2D218")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xA2D478", Offset = "0xA2D478", VA = "0xA2D478")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xA2D648", Offset = "0xA2D648", VA = "0xA2D648")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xA2D734", Offset = "0xA2D734", VA = "0xA2D734")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xA2D938", Offset = "0xA2D938", VA = "0xA2D938")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xA2DA48", Offset = "0xA2DA48", VA = "0xA2DA48")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xA2DBE0", Offset = "0xA2DBE0", VA = "0xA2DBE0")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xA2DC60", Offset = "0xA2DC60", VA = "0xA2DC60")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xA2DCE0", Offset = "0xA2DCE0", VA = "0xA2DCE0")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xA2DD60", Offset = "0xA2DD60", VA = "0xA2DD60")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xA2DDE0", Offset = "0xA2DDE0", VA = "0xA2DDE0")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xA2DE60", Offset = "0xA2DE60", VA = "0xA2DE60")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xA2DEE0", Offset = "0xA2DEE0", VA = "0xA2DEE0")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xA2DF60", Offset = "0xA2DF60", VA = "0xA2DF60")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xA2DFE0", Offset = "0xA2DFE0", VA = "0xA2DFE0")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xA2E060", Offset = "0xA2E060", VA = "0xA2E060")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xA2E0E0", Offset = "0xA2E0E0", VA = "0xA2E0E0")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xA2E1F0", Offset = "0xA2E1F0", VA = "0xA2E1F0")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xA2E270", Offset = "0xA2E270", VA = "0xA2E270")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xA2E404", Offset = "0xA2E404", VA = "0xA2E404")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xA2E6C4", Offset = "0xA2E6C4", VA = "0xA2E6C4")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xA2E7D4", Offset = "0xA2E7D4", VA = "0xA2E7D4")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xA2E86C", Offset = "0xA2E86C", VA = "0xA2E86C")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xA2E8FC", Offset = "0xA2E8FC", VA = "0xA2E8FC")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xA2E97C", Offset = "0xA2E97C", VA = "0xA2E97C")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xA2E9FC", Offset = "0xA2E9FC", VA = "0xA2E9FC")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xA2D090", Offset = "0xA2D090", VA = "0xA2D090")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xA2EAA0", Offset = "0xA2EAA0", VA = "0xA2EAA0")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xA2ADFC", Offset = "0xA2ADFC", VA = "0xA2ADFC")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xA2D46C", Offset = "0xA2D46C", VA = "0xA2D46C")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000358")]
	internal enum ParserToken
	{
		[Token(Token = "0x40012D3")]
		None = 65536,
		[Token(Token = "0x40012D4")]
		Number,
		[Token(Token = "0x40012D5")]
		True,
		[Token(Token = "0x40012D6")]
		False,
		[Token(Token = "0x40012D7")]
		Null,
		[Token(Token = "0x40012D8")]
		CharSeq,
		[Token(Token = "0x40012D9")]
		Char,
		[Token(Token = "0x40012DA")]
		Text,
		[Token(Token = "0x40012DB")]
		Object,
		[Token(Token = "0x40012DC")]
		ObjectPrime,
		[Token(Token = "0x40012DD")]
		Pair,
		[Token(Token = "0x40012DE")]
		PairRest,
		[Token(Token = "0x40012DF")]
		Array,
		[Token(Token = "0x40012E0")]
		ArrayPrime,
		[Token(Token = "0x40012E1")]
		Value,
		[Token(Token = "0x40012E2")]
		ValueRest,
		[Token(Token = "0x40012E3")]
		String,
		[Token(Token = "0x40012E4")]
		End,
		[Token(Token = "0x40012E5")]
		Epsilon
	}
}
namespace PixelRipped
{
	[Token(Token = "0x2000359")]
	public class LegacyFogManager : MonoBehaviour
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fromFogDensity;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float toFogDensity;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color fromColor;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color toColor;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float defaultLength;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LegacyFogManager instance;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentDensity;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color currentColor;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentLength;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float time;

		[Token(Token = "0x170001C6")]
		public static LegacyFogManager Instance
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xB8C804", Offset = "0xB8C804", VA = "0xB8C804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public float CurrentDensity
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xB8C854", Offset = "0xB8C854", VA = "0xB8C854")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C8")]
		public Color CurrentColor
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xB8C85C", Offset = "0xB8C85C", VA = "0xB8C85C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB8C778", Offset = "0xB8C778", VA = "0xB8C778")]
		public LegacyFogManager()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB8C868", Offset = "0xB8C868", VA = "0xB8C868")]
		public void ChangeNextOperationLength(float length)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB8C870", Offset = "0xB8C870", VA = "0xB8C870")]
		public void GoToDensity(float toDensity)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB8C8D4", Offset = "0xB8C8D4", VA = "0xB8C8D4")]
		public void GoToColor(Color to)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB8C944", Offset = "0xB8C944", VA = "0xB8C944")]
		public void ChangeFogColor(int r, int g, int b)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB8C9A8", Offset = "0xB8C9A8", VA = "0xB8C9A8")]
		public void ChangeFogDensity(float toDensity)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB8C9EC", Offset = "0xB8C9EC", VA = "0xB8C9EC", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB8CA60", Offset = "0xB8CA60", VA = "0xB8CA60")]
		private void ChangeToTimeExponential(float delta)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB8C8C4", Offset = "0xB8C8C4", VA = "0xB8C8C4")]
		public void resetManager()
		{
		}
	}
}
namespace Pico
{
	[Token(Token = "0x200035A")]
	public class AchievementSample : MonoBehaviour
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField getDefinitionsByNameInputField;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField getProgressByNameInputField;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputField unLockInputField;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputField addCountInputField;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputField addFieldsInputField;

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xBF4738", Offset = "0xBF4738", VA = "0xBF4738")]
		private void Start()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xBF4798", Offset = "0xBF4798", VA = "0xBF4798")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xBF47F8", Offset = "0xBF47F8", VA = "0xBF47F8")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xBF49E4", Offset = "0xBF49E4", VA = "0xBF49E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xBF49F0", Offset = "0xBF49F0", VA = "0xBF49F0")]
		public void AsyncInitialize()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xBF4A78", Offset = "0xBF4A78", VA = "0xBF4A78")]
		public void GetDefinitionsByName()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xBF4C94", Offset = "0xBF4C94", VA = "0xBF4C94")]
		public void GetProgressByName()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xBF4EB0", Offset = "0xBF4EB0", VA = "0xBF4EB0")]
		public void GetAllDefinitions()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xBF4FE4", Offset = "0xBF4FE4", VA = "0xBF4FE4")]
		public void GetAllProgress()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xBF5118", Offset = "0xBF5118", VA = "0xBF5118")]
		public void UnLock()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xBF52D8", Offset = "0xBF52D8", VA = "0xBF52D8")]
		public void AddCount()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xBF5648", Offset = "0xBF5648", VA = "0xBF5648")]
		public void AddFields()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xBF4938", Offset = "0xBF4938", VA = "0xBF4938")]
		private void achievementInit()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xBF4F38", Offset = "0xBF4F38", VA = "0xBF4F38")]
		private void getAchievementAllDefinition()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xBF506C", Offset = "0xBF506C", VA = "0xBF506C")]
		private void getAchievementAllProgress()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xBF57E8", Offset = "0xBF57E8", VA = "0xBF57E8")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xBF5560", Offset = "0xBF5560", VA = "0xBF5560")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xBF5224", Offset = "0xBF5224", VA = "0xBF5224")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xBF4DFC", Offset = "0xBF4DFC", VA = "0xBF4DFC")]
		private void getAchievementProgress(string[] achievementNames)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xBF4BE0", Offset = "0xBF4BE0", VA = "0xBF4BE0")]
		private void getAchievementDefinition(string[] achievementNames)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xBF4870", Offset = "0xBF4870", VA = "0xBF4870")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xBF58A4", Offset = "0xBF58A4", VA = "0xBF58A4")]
		private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xBF621C", Offset = "0xBF621C", VA = "0xBF621C")]
		private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xBF6980", Offset = "0xBF6980", VA = "0xBF6980")]
		private void achievementFieldsCallback(Pvr_Message msg)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xBF6CE4", Offset = "0xBF6CE4", VA = "0xBF6CE4")]
		private void achievementCountCallback(Pvr_Message msg)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xBF7048", Offset = "0xBF7048", VA = "0xBF7048")]
		private void achievementUnlockCallback(Pvr_Message msg)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xBF73AC", Offset = "0xBF73AC", VA = "0xBF73AC")]
		private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xBF79EC", Offset = "0xBF79EC", VA = "0xBF79EC")]
		private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xBF80A4", Offset = "0xBF80A4", VA = "0xBF80A4")]
		private void initAchievementCallback(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xBF8408", Offset = "0xBF8408", VA = "0xBF8408")]
		private void LoginCallback(string LoginInfo)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xBF84C0", Offset = "0xBF84C0", VA = "0xBF84C0")]
		public AchievementSample()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class Pvr_Controller : MonoBehaviour
	{
		[Token(Token = "0x200068A")]
		public enum UserHandNess
		{
			[Token(Token = "0x400203A")]
			Right,
			[Token(Token = "0x400203B")]
			Left
		}

		[Token(Token = "0x200068B")]
		public enum GazeType
		{
			[Token(Token = "0x400203D")]
			Never,
			[Token(Token = "0x400203E")]
			DuringMotion,
			[Token(Token = "0x400203F")]
			Always
		}

		[Token(Token = "0x200068C")]
		public enum ControllerAxis
		{
			[Token(Token = "0x4002041")]
			Controller,
			[Token(Token = "0x4002042")]
			Wrist,
			[Token(Token = "0x4002043")]
			Elbow,
			[Token(Token = "0x4002044")]
			Shoulder
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject controller0;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject controller1;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UserHandNess handness;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerAxis Axis;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public GazeType Gazetype;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4D4C", Offset = "0x7C4D4C")]
		public float ElbowHeight;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4D68", Offset = "0x7C4D68")]
		public float ElbowDepth;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C4D84", Offset = "0x7C4D84")]
		public float PointerTiltAngle;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float mouseX;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float mouseY;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float mouseZ;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] inputDirection;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4D9C", Offset = "0x7C4D9C")]
		private static Vector3 <pointerPosition>k__BackingField;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DAC", Offset = "0x7C4DAC")]
		private static Quaternion <pointerRotation>k__BackingField;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DBC", Offset = "0x7C4DBC")]
		private static Vector3 <elbowPosition>k__BackingField;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DCC", Offset = "0x7C4DCC")]
		private static Quaternion <elbowRotation>k__BackingField;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DDC", Offset = "0x7C4DDC")]
		private static Vector3 <wristPosition>k__BackingField;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DEC", Offset = "0x7C4DEC")]
		private static Quaternion <wristRotation>k__BackingField;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4DFC", Offset = "0x7C4DFC")]
		private static Vector3 <shoulderPosition>k__BackingField;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C4E0C", Offset = "0x7C4E0C")]
		private static Quaternion <shoulderRotation>k__BackingField;

		[Token(Token = "0x170001C9")]
		public static Vector3 pointerPosition
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xC04C20", Offset = "0xC04C20", VA = "0xC04C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D175C", Offset = "0x7D175C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001487")]
			[Address(RVA = "0xC04B3C", Offset = "0xC04B3C", VA = "0xC04B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D176C", Offset = "0x7D176C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public static Quaternion pointerRotation
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xC04C74", Offset = "0xC04C74", VA = "0xC04C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D177C", Offset = "0x7D177C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xC04BAC", Offset = "0xC04BAC", VA = "0xC04BAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D178C", Offset = "0x7D178C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public static Vector3 elbowPosition
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xC04F38", Offset = "0xC04F38", VA = "0xC04F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D179C", Offset = "0x7D179C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xC04E54", Offset = "0xC04E54", VA = "0xC04E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17AC", Offset = "0x7D17AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public static Quaternion elbowRotation
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xC04F8C", Offset = "0xC04F8C", VA = "0xC04F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17BC", Offset = "0x7D17BC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xC04EC4", Offset = "0xC04EC4", VA = "0xC04EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17CC", Offset = "0x7D17CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public static Vector3 wristPosition
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xC04DAC", Offset = "0xC04DAC", VA = "0xC04DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17DC", Offset = "0x7D17DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xC04CC8", Offset = "0xC04CC8", VA = "0xC04CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17EC", Offset = "0x7D17EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public static Quaternion wristRotation
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xC04E00", Offset = "0xC04E00", VA = "0xC04E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D17FC", Offset = "0x7D17FC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xC04D38", Offset = "0xC04D38", VA = "0xC04D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D180C", Offset = "0x7D180C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public static Vector3 shoulderPosition
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xC050C4", Offset = "0xC050C4", VA = "0xC050C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D181C", Offset = "0x7D181C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xC04FE0", Offset = "0xC04FE0", VA = "0xC04FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D182C", Offset = "0x7D182C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public static Quaternion shoulderRotation
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xC05118", Offset = "0xC05118", VA = "0xC05118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D183C", Offset = "0x7D183C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001495")]
			[Address(RVA = "0xC05050", Offset = "0xC05050", VA = "0xC05050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D184C", Offset = "0x7D184C")]
			set
			{
			}
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC01D4C", Offset = "0xC01D4C", VA = "0xC01D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC02248", Offset = "0xC02248", VA = "0xC02248")]
		private void Start()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC022B8", Offset = "0xC022B8", VA = "0xC022B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC027B4", Offset = "0xC027B4", VA = "0xC027B4")]
		private void MainControllerChanged(string index)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xC0285C", Offset = "0xC0285C", VA = "0xC0285C")]
		private void HandnessChanged(string index)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC02860", Offset = "0xC02860", VA = "0xC02860")]
		private void ServiceStartSuccess()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC027B8", Offset = "0xC027B8", VA = "0xC027B8")]
		private void RefreshHandness()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC028C0", Offset = "0xC028C0", VA = "0xC028C0")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC02AA8", Offset = "0xC02AA8", VA = "0xC02AA8")]
		private void ShowController()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC02C74", Offset = "0xC02C74", VA = "0xC02C74")]
		private void CheckControllerState(string data)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xC02D60", Offset = "0xC02D60", VA = "0xC02D60")]
		private void Update()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xC02864", Offset = "0xC02864", VA = "0xC02864")]
		public static void ChangeHandNess()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xC03048", Offset = "0xC03048", VA = "0xC03048")]
		private void DoUpdateControler0()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xC030C4", Offset = "0xC030C4", VA = "0xC030C4")]
		private void DoUpdateControler1()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xC03148", Offset = "0xC03148", VA = "0xC03148")]
		private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC04958", Offset = "0xC04958", VA = "0xC04958")]
		private Quaternion UpdateSimulatedFrameParams()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC032CC", Offset = "0xC032CC", VA = "0xC032CC")]
		private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC032DC", Offset = "0xC032DC", VA = "0xC032DC")]
		private void CalcArmModelfromSo(int hand)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC039D0", Offset = "0xC039D0", VA = "0xC039D0")]
		public void UpdateControllerDataSO(int hand)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC0516C", Offset = "0xC0516C", VA = "0xC0516C")]
		public Pvr_Controller()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class Pvr_ControllerDemo : MonoBehaviour
	{
		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject HeadSetController;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject controller0;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject controller1;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Ray ray;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject currentController;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform lastHit;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform currentHit;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material normat;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material gazemat;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material clickmat;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool noClick;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject referenceObj;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float rayDefaultLength;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isHasController;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool headcontrolmode;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RaycastHit hit;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject rayLine;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject dot;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform dragObj;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float disX;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float disY;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float disZ;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC051E4", Offset = "0xC051E4", VA = "0xC051E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC0555C", Offset = "0xC0555C", VA = "0xC0555C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xC05850", Offset = "0xC05850", VA = "0xC05850")]
		private void Update()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xC07998", Offset = "0xC07998", VA = "0xC07998")]
		private void ServiceStartSuccess()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC07A5C", Offset = "0xC07A5C", VA = "0xC07A5C")]
		private void ControllerStateListener(string data)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC07B20", Offset = "0xC07B20", VA = "0xC07B20")]
		private void CheckControllerStateForGoblin(string state)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC07BC0", Offset = "0xC07BC0", VA = "0xC07BC0")]
		public void SwitchControlMode()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC07BC4", Offset = "0xC07BC4", VA = "0xC07BC4")]
		public Pvr_ControllerDemo()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class Pvr_ControllerEventsExamples : MonoBehaviour
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC07BD4", Offset = "0xC07BD4", VA = "0xC07BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC07E30", Offset = "0xC07E30", VA = "0xC07E30")]
		private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC07ED4", Offset = "0xC07ED4", VA = "0xC07ED4")]
		private void UIPointerElementExit(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC07F78", Offset = "0xC07F78", VA = "0xC07F78")]
		private void UIPointerElementClick(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC0801C", Offset = "0xC0801C", VA = "0xC0801C")]
		private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC080C0", Offset = "0xC080C0", VA = "0xC080C0")]
		private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC08164", Offset = "0xC08164", VA = "0xC08164")]
		public Pvr_ControllerEventsExamples()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class Pvr_ControllerInit : MonoBehaviour
	{
		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1B4", Offset = "0x7BD1B4")]
		private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int id;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Pvr_ControllerInit <>4__this;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600284D")]
				[Address(RVA = "0xC0A6A4", Offset = "0xC0A6A4", VA = "0xC0A6A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284F")]
				[Address(RVA = "0xC0A714", Offset = "0xC0A714", VA = "0xC0A714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600284A")]
			[Address(RVA = "0xC09158", Offset = "0xC09158", VA = "0xC09158")]
			[DebuggerHidden]
			public <RefreshController>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600284B")]
			[Address(RVA = "0xC0A1B4", Offset = "0xC0A1B4", VA = "0xC0A1B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600284C")]
			[Address(RVA = "0xC0A1B8", Offset = "0xC0A1B8", VA = "0xC0A1B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600284E")]
			[Address(RVA = "0xC0A6AC", Offset = "0xC0A6AC", VA = "0xC0A6AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ControllerVariety Variety;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool isCustomModel;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject goblin;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject g2;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject neo2L;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject neo2R;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject neo3L;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject neo3R;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material standardMat;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material unlitMat;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int controllerType;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public bool loadModelSuccess;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int systemOrUnity;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private JsonData curControllerData;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string modelName;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string texFormat;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string prePath;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string modelFilePath;

		[Token(Token = "0x4001333")]
		private const string goblinTexbasePath = "Controller/controller1/controller1";

		[Token(Token = "0x4001334")]
		private const string g2TexbasePath = "Controller/controller3/controller3";

		[Token(Token = "0x4001335")]
		private const string neo2TexbasePath = "Controller/controller4/controller4";

		[Token(Token = "0x4001336")]
		private const string neo3TexbasePath = "Controller/controller5/controller5";

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xC0816C", Offset = "0xC0816C", VA = "0xC0816C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC08308", Offset = "0xC08308", VA = "0xC08308")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xC08400", Offset = "0xC08400", VA = "0xC08400")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC08714", Offset = "0xC08714", VA = "0xC08714")]
		private void ServiceStartSuccess()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC08948", Offset = "0xC08948", VA = "0xC08948")]
		private void LoadResFromJson()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC08BD8", Offset = "0xC08BD8", VA = "0xC08BD8")]
		private void CheckControllerStateForGoblin(string state)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xC08FE4", Offset = "0xC08FE4", VA = "0xC08FE4")]
		private void CheckControllerStateOfAbility(string data)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xC0840C", Offset = "0xC0840C", VA = "0xC0840C")]
		private void DestroyLocalController()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xC08CC4", Offset = "0xC08CC4", VA = "0xC08CC4")]
		private void DestroySysController()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xC08B28", Offset = "0xC08B28", VA = "0xC08B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D185C", Offset = "0x7D185C")]
		private IEnumerator RefreshController(int id)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC09184", Offset = "0xC09184", VA = "0xC09184")]
		private void LoadControllerFromPrefab()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC09908", Offset = "0xC09908", VA = "0xC09908")]
		private void LoadControllerFromSystem(int id)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xC09480", Offset = "0xC09480", VA = "0xC09480")]
		private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC09E7C", Offset = "0xC09E7C", VA = "0xC09E7C")]
		private Texture2D LoadOneTexture(string filepath, bool fromRes)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC09F9C", Offset = "0xC09F9C", VA = "0xC09F9C")]
		private byte[] ReadPNG(string path)
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC0A114", Offset = "0xC0A114", VA = "0xC0A114")]
		public Pvr_ControllerInit()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class Pvr_ControllerLink
	{
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaClass javaHummingbirdClass;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AndroidJavaClass javaPico2ReceiverClass;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndroidJavaClass javaserviceClass;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AndroidJavaClass javavractivityclass;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AndroidJavaClass javaCVClass;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AndroidJavaObject activity;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string gameobjname;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool picoDevice;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string hummingBirdMac;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int hummingBirdRSSI;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool goblinserviceStarted;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool neoserviceStarted;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		public bool controller0Connected;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public bool controller1Connected;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int mainHandID;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Pvr_Controller.UserHandNess handness;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int controllerType;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ControllerHand Controller0;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControllerHand Controller1;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int platFormType;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int trackingmode;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int systemProp;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int enablehand6dofbyhead;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool switchHomeKey;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int iPhoneHMDModeEnabled;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] hbPoseData;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] sensorData;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int[] keyData;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] neo3TouchValue;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] fixedState;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float[] neoposeData;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int[] goblinKeyArray;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int[] neoKeyArray;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int[] neotriggerV;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] velocity;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] angularVelocity;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] acceData;

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC0A71C", Offset = "0xC0A71C", VA = "0xC0A71C")]
		public Pvr_ControllerLink(string name)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC0AC28", Offset = "0xC0AC28", VA = "0xC0AC28")]
		private void StartHummingBirdService()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC0B6E8", Offset = "0xC0B6E8", VA = "0xC0B6E8")]
		public bool IsServiceExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC0B428", Offset = "0xC0B428", VA = "0xC0B428")]
		public void SetGameObjectToJar(string name)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC0B554", Offset = "0xC0B554", VA = "0xC0B554")]
		public void BindService()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC0B8B8", Offset = "0xC0B8B8", VA = "0xC0B8B8")]
		public void UnBindService()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC0BA4C", Offset = "0xC0BA4C", VA = "0xC0BA4C")]
		public void StopLark2Receiver()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC0BBFC", Offset = "0xC0BBFC", VA = "0xC0BBFC")]
		public void StartLark2Receiver()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC0BD68", Offset = "0xC0BD68", VA = "0xC0BD68")]
		public void StopLark2Service()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC0BF18", Offset = "0xC0BF18", VA = "0xC0BF18")]
		public void StartLark2Service()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC0C120", Offset = "0xC0C120", VA = "0xC0C120")]
		public int getHandness()
		{
			return default(int);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC0C2C0", Offset = "0xC0C2C0", VA = "0xC0C2C0")]
		public void setHandness(int hand)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC0C42C", Offset = "0xC0C42C", VA = "0xC0C42C")]
		public void StartScan()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC0C560", Offset = "0xC0C560", VA = "0xC0C560")]
		public void StopScan()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC0B330", Offset = "0xC0B330", VA = "0xC0B330")]
		public int GetSysproc()
		{
			return default(int);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC0C690", Offset = "0xC0C690", VA = "0xC0C690")]
		public void ResetController(int num)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC0C834", Offset = "0xC0C834", VA = "0xC0C834")]
		public void ConnectBLE()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC0C984", Offset = "0xC0C984", VA = "0xC0C984")]
		public void DisConnectBLE()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC0CA24", Offset = "0xC0CA24", VA = "0xC0CA24")]
		public bool StartUpgrade()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC0CAE8", Offset = "0xC0CAE8", VA = "0xC0CAE8")]
		public void setBinPath(string path, bool isasset)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC0CCA8", Offset = "0xC0CCA8", VA = "0xC0CCA8")]
		public string GetBLEImageType()
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC0CD94", Offset = "0xC0CD94", VA = "0xC0CD94")]
		public long GetBLEVersion()
		{
			return default(long);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC0CE84", Offset = "0xC0CE84", VA = "0xC0CE84")]
		public string GetFileImageType()
		{
			return null;
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC0CF70", Offset = "0xC0CF70", VA = "0xC0CF70")]
		public long GetFileVersion()
		{
			return default(long);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC0D060", Offset = "0xC0D060", VA = "0xC0D060")]
		public int GetControllerConnectionState(int num)
		{
			return default(int);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xC0D3F0", Offset = "0xC0D3F0", VA = "0xC0D3F0")]
		public void RebackToLauncher()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xC0D4DC", Offset = "0xC0D4DC", VA = "0xC0D4DC")]
		public void TurnUpVolume()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xC0D69C", Offset = "0xC0D69C", VA = "0xC0D69C")]
		public void TurnDownVolume()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC0D85C", Offset = "0xC0D85C", VA = "0xC0D85C")]
		public float[] GetHBControllerPoseData()
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC0DD50", Offset = "0xC0DD50", VA = "0xC0DD50")]
		public float[] GetControllerSensorData()
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC0DEC0", Offset = "0xC0DEC0", VA = "0xC0DEC0")]
		public int[] GetControllerKeyData()
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC0DF4C", Offset = "0xC0DF4C", VA = "0xC0DF4C")]
		public int[] GetNeo3TouchData(int hand)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xC0EBBC", Offset = "0xC0EBBC", VA = "0xC0EBBC")]
		public int GetNeo3GripValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC0ED68", Offset = "0xC0ED68", VA = "0xC0ED68")]
		public float[] GetControllerFixedSensorState(int hand)
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xC0F690", Offset = "0xC0F690", VA = "0xC0F690")]
		public float[] GetCvControllerPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC0FFE8", Offset = "0xC0FFE8", VA = "0xC0FFE8")]
		public int[] GetHBControllerKeyData()
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC1207C", Offset = "0xC1207C", VA = "0xC1207C")]
		public int GetHBKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC121A0", Offset = "0xC121A0", VA = "0xC121A0")]
		public int[] GetCvControllerKeyData(int hand)
		{
			return null;
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC150B8", Offset = "0xC150B8", VA = "0xC150B8")]
		public int GetCVTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC152BC", Offset = "0xC152BC", VA = "0xC152BC")]
		public void AutoConnectHbController(int scanTimeMs)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xC1547C", Offset = "0xC1547C", VA = "0xC1547C")]
		public void StartControllerThread(int headSensorState, int handSensorState)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xC1568C", Offset = "0xC1568C", VA = "0xC1568C")]
		public void StopControllerThread(int headSensorState, int handSensorState)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xC1589C", Offset = "0xC1589C", VA = "0xC1589C")]
		public void SetUnityVersionToJar(string version)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xC159D0", Offset = "0xC159D0", VA = "0xC159D0")]
		public Vector3 GetVelocity(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xC15F20", Offset = "0xC15F20", VA = "0xC15F20")]
		public Vector3 GetAngularVelocity(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC1641C", Offset = "0xC1641C", VA = "0xC1641C")]
		public Vector3 GetAcceleration(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC16860", Offset = "0xC16860", VA = "0xC16860")]
		public string GetConnectedDeviceMac()
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC16948", Offset = "0xC16948", VA = "0xC16948")]
		public void VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC16D44", Offset = "0xC16D44", VA = "0xC16D44")]
		public int GetMainControllerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xC16E40", Offset = "0xC16E40", VA = "0xC16E40")]
		public void SetMainController(int index)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xC16FA8", Offset = "0xC16FA8", VA = "0xC16FA8")]
		public void ResetHeadSensorForController()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC1704C", Offset = "0xC1704C", VA = "0xC1704C")]
		public void GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xC171BC", Offset = "0xC171BC", VA = "0xC171BC")]
		public void GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xC1732C", Offset = "0xC1732C", VA = "0xC1732C")]
		public void SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xC1749C", Offset = "0xC1749C", VA = "0xC1749C")]
		public void SetStationRestart()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xC17540", Offset = "0xC17540", VA = "0xC17540")]
		public void StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC175E4", Offset = "0xC175E4", VA = "0xC175E4")]
		public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC177E0", Offset = "0xC177E0", VA = "0xC177E0")]
		public void EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC17950", Offset = "0xC17950", VA = "0xC17950")]
		public void SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC17AC0", Offset = "0xC17AC0", VA = "0xC17AC0")]
		public int GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xC17BC0", Offset = "0xC17BC0", VA = "0xC17BC0")]
		public int GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xC17CC0", Offset = "0xC17CC0", VA = "0xC17CC0")]
		public int GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xC17DC0", Offset = "0xC17DC0", VA = "0xC17DC0")]
		public void GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xC17F30", Offset = "0xC17F30", VA = "0xC17F30")]
		public void GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xC17FD4", Offset = "0xC17FD4", VA = "0xC17FD4")]
		public void InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xC18078", Offset = "0xC18078", VA = "0xC18078")]
		public int GetControllerAbility(int controllerSerialNum)
		{
			return default(int);
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xC18204", Offset = "0xC18204", VA = "0xC18204")]
		public void SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xC182B4", Offset = "0xC182B4", VA = "0xC182B4")]
		public void SetBootReconnect()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC18350", Offset = "0xC18350", VA = "0xC18350")]
		public int GetTemperature()
		{
			return default(int);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC18448", Offset = "0xC18448", VA = "0xC18448")]
		public int GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC18540", Offset = "0xC18540", VA = "0xC18540")]
		public int GetControllerType()
		{
			return default(int);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC185D0", Offset = "0xC185D0", VA = "0xC185D0")]
		public string GetHummingBird2SN()
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC186B0", Offset = "0xC186B0", VA = "0xC186B0")]
		public string GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC18790", Offset = "0xC18790", VA = "0xC18790")]
		public bool IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xC18874", Offset = "0xC18874", VA = "0xC18874")]
		public void StartCV2PairingMode(int devicetype)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xC189E4", Offset = "0xC189E4", VA = "0xC189E4")]
		public void StopCV2PairingMode(int devicetype)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xC18B54", Offset = "0xC18B54", VA = "0xC18B54")]
		public int GetControllerBindingState(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xC18CD8", Offset = "0xC18CD8", VA = "0xC18CD8")]
		public void setIsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC18E38", Offset = "0xC18E38", VA = "0xC18E38")]
		public int getControllerSensorStatus(int id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000360")]
	public class Pvr_ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x200068E")]
		public delegate void PvrServiceStartSuccess();

		[Token(Token = "0x200068F")]
		public delegate void PvrControllerStateChanged(string data);

		[Token(Token = "0x2000690")]
		public delegate void ChangeMainControllerCallBack(string index);

		[Token(Token = "0x2000691")]
		public delegate void ChangeHandNessCallBack(string index);

		[Token(Token = "0x2000692")]
		public delegate void SetHbServiceBindState();

		[Token(Token = "0x2000693")]
		public delegate void ControllerThreadStartedCallback();

		[Token(Token = "0x2000694")]
		public delegate void SetControllerServiceBindState();

		[Token(Token = "0x2000695")]
		public delegate void ControllerStatusChange(string isconnect);

		[Token(Token = "0x2000696")]
		public delegate void SetControllerAbility(string data);

		[Token(Token = "0x2000697")]
		public delegate void SetControllerStateChanged(string data);

		[Token(Token = "0x2000698")]
		public delegate void SetHbControllerMac(string mac);

		[Token(Token = "0x2000699")]
		public delegate void ControllerDeviceVersionCallback(string data);

		[Token(Token = "0x200069A")]
		public delegate void ControllerSnCodeCallback(string data);

		[Token(Token = "0x200069B")]
		public delegate void ControllerUnbindCallback(string status);

		[Token(Token = "0x200069C")]
		public delegate void ControllerStationStatusCallback(string status);

		[Token(Token = "0x200069D")]
		public delegate void ControllerStationBusyCallback(string status);

		[Token(Token = "0x200069E")]
		public delegate void ControllerOtaStartCodeCallback(string data);

		[Token(Token = "0x200069F")]
		public delegate void ControllerDeviceVersionAndSNCallback(string data);

		[Token(Token = "0x20006A0")]
		public delegate void ControllerUniqueIDCallback(string data);

		[Token(Token = "0x20006A1")]
		public delegate void ControllerCombinedKeyUnbindCallback(string data);

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_ControllerManager instance;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_ControllerLink controllerlink;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float cTime;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool stopConnect;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text toast;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool controllerServicestate;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float disConnectTime;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LengthAdaptiveRay;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] sensorData;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] keyData;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] g2SensorData;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] g2KeyData;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int keyOffset;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int rotControllerMode;

		[Token(Token = "0x170001D1")]
		public static Pvr_ControllerManager Instance
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xC046D8", Offset = "0xC046D8", VA = "0xC046D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001E")]
		public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xC01E78", Offset = "0xC01E78", VA = "0xC01E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D18C0", Offset = "0x7D18C0")]
			add
			{
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xC023E4", Offset = "0xC023E4", VA = "0xC023E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D18D0", Offset = "0x7D18D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event PvrControllerStateChanged PvrControllerStateChangedEvent
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xC18FBC", Offset = "0xC18FBC", VA = "0xC18FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D18E0", Offset = "0x7D18E0")]
			add
			{
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xC190B0", Offset = "0xC190B0", VA = "0xC190B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D18F0", Offset = "0x7D18F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xC02060", Offset = "0xC02060", VA = "0xC02060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1900", Offset = "0x7D1900")]
			add
			{
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xC025CC", Offset = "0xC025CC", VA = "0xC025CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1910", Offset = "0x7D1910")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xC02154", Offset = "0xC02154", VA = "0xC02154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1920", Offset = "0x7D1920")]
			add
			{
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xC026C0", Offset = "0xC026C0", VA = "0xC026C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1930", Offset = "0x7D1930")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event SetHbServiceBindState SetHbServiceBindStateEvent
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xC191A4", Offset = "0xC191A4", VA = "0xC191A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1940", Offset = "0x7D1940")]
			add
			{
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xC19298", Offset = "0xC19298", VA = "0xC19298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1950", Offset = "0x7D1950")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xC1938C", Offset = "0xC1938C", VA = "0xC1938C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1960", Offset = "0x7D1960")]
			add
			{
			}
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xC19480", Offset = "0xC19480", VA = "0xC19480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1970", Offset = "0x7D1970")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0xC19574", Offset = "0xC19574", VA = "0xC19574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1980", Offset = "0x7D1980")]
			add
			{
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xC19668", Offset = "0xC19668", VA = "0xC19668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1990", Offset = "0x7D1990")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public static event ControllerStatusChange ControllerStatusChangeEvent
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xC05468", Offset = "0xC05468", VA = "0xC05468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19A0", Offset = "0x7D19A0")]
			add
			{
			}
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xC0575C", Offset = "0xC0575C", VA = "0xC0575C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19B0", Offset = "0x7D19B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public static event SetControllerAbility SetControllerAbilityEvent
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xC01F6C", Offset = "0xC01F6C", VA = "0xC01F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19C0", Offset = "0x7D19C0")]
			add
			{
			}
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xC024D8", Offset = "0xC024D8", VA = "0xC024D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19D0", Offset = "0x7D19D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public static event SetControllerStateChanged SetControllerStateChangedEvent
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xC05374", Offset = "0xC05374", VA = "0xC05374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19E0", Offset = "0x7D19E0")]
			add
			{
			}
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xC05668", Offset = "0xC05668", VA = "0xC05668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D19F0", Offset = "0x7D19F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public static event SetHbControllerMac SetHbControllerMacEvent
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xC1975C", Offset = "0xC1975C", VA = "0xC1975C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A00", Offset = "0x7D1A00")]
			add
			{
			}
			[Token(Token = "0x600151B")]
			[Address(RVA = "0xC19850", Offset = "0xC19850", VA = "0xC19850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A10", Offset = "0x7D1A10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xC19944", Offset = "0xC19944", VA = "0xC19944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A20", Offset = "0x7D1A20")]
			add
			{
			}
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xC19A38", Offset = "0xC19A38", VA = "0xC19A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A30", Offset = "0x7D1A30")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xC19B2C", Offset = "0xC19B2C", VA = "0xC19B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A40", Offset = "0x7D1A40")]
			add
			{
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xC19C20", Offset = "0xC19C20", VA = "0xC19C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A50", Offset = "0x7D1A50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xC19D14", Offset = "0xC19D14", VA = "0xC19D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A60", Offset = "0x7D1A60")]
			add
			{
			}
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xC19E08", Offset = "0xC19E08", VA = "0xC19E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A70", Offset = "0x7D1A70")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xC19EFC", Offset = "0xC19EFC", VA = "0xC19EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A80", Offset = "0x7D1A80")]
			add
			{
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0xC19FF0", Offset = "0xC19FF0", VA = "0xC19FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1A90", Offset = "0x7D1A90")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0xC1A0E4", Offset = "0xC1A0E4", VA = "0xC1A0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AA0", Offset = "0x7D1AA0")]
			add
			{
			}
			[Token(Token = "0x6001525")]
			[Address(RVA = "0xC1A1D8", Offset = "0xC1A1D8", VA = "0xC1A1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AB0", Offset = "0x7D1AB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0xC1A2CC", Offset = "0xC1A2CC", VA = "0xC1A2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AC0", Offset = "0x7D1AC0")]
			add
			{
			}
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xC1A3C0", Offset = "0xC1A3C0", VA = "0xC1A3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AD0", Offset = "0x7D1AD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xC1A4B4", Offset = "0xC1A4B4", VA = "0xC1A4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AE0", Offset = "0x7D1AE0")]
			add
			{
			}
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xC1A5A8", Offset = "0xC1A5A8", VA = "0xC1A5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1AF0", Offset = "0x7D1AF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0xC1A69C", Offset = "0xC1A69C", VA = "0xC1A69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1B00", Offset = "0x7D1B00")]
			add
			{
			}
			[Token(Token = "0x600152B")]
			[Address(RVA = "0xC1A790", Offset = "0xC1A790", VA = "0xC1A790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1B10", Offset = "0x7D1B10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xC1A884", Offset = "0xC1A884", VA = "0xC1A884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1B20", Offset = "0x7D1B20")]
			add
			{
			}
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xC1A978", Offset = "0xC1A978", VA = "0xC1A978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1B30", Offset = "0x7D1B30")]
			remove
			{
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xC1AA6C", Offset = "0xC1AA6C", VA = "0xC1AA6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xC1AD88", Offset = "0xC1AD88", VA = "0xC1AD88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xC1AE34", Offset = "0xC1AE34", VA = "0xC1AE34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xC1D84C", Offset = "0xC1D84C", VA = "0xC1D84C")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xC1DDD4", Offset = "0xC1DDD4", VA = "0xC1DDD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC1DEB8", Offset = "0xC1DEB8", VA = "0xC1DEB8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xC1E058", Offset = "0xC1E058", VA = "0xC1E058")]
		public void StopLark2Service()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xC1E104", Offset = "0xC1E104", VA = "0xC1E104")]
		public Vector3 GetAngularVelocity(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC1E1EC", Offset = "0xC1E1EC", VA = "0xC1E1EC")]
		public Vector3 GetAcceleration(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC1ACDC", Offset = "0xC1ACDC", VA = "0xC1ACDC")]
		public void BindService()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC1E2D4", Offset = "0xC1E2D4", VA = "0xC1E2D4")]
		public void StartScan()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC1E380", Offset = "0xC1E380", VA = "0xC1E380")]
		public void StopScan()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC1E42C", Offset = "0xC1E42C", VA = "0xC1E42C")]
		public void ResetController(int num)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC1DD54", Offset = "0xC1DD54", VA = "0xC1DD54")]
		public static int GetControllerConnectionState(int num)
		{
			return default(int);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC1E4E0", Offset = "0xC1E4E0", VA = "0xC1E4E0")]
		public void ConnectBLE()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xC1E58C", Offset = "0xC1E58C", VA = "0xC1E58C")]
		public void DisConnectBLE()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xC1E638", Offset = "0xC1E638", VA = "0xC1E638")]
		public void SetBinPath(string path, bool isAsset)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xC1E700", Offset = "0xC1E700", VA = "0xC1E700")]
		public void StartUpgrade()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xC1E7AC", Offset = "0xC1E7AC", VA = "0xC1E7AC")]
		public static string GetBLEImageType()
		{
			return null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xC1E824", Offset = "0xC1E824", VA = "0xC1E824")]
		public static long GetBLEVersion()
		{
			return default(long);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC1E89C", Offset = "0xC1E89C", VA = "0xC1E89C")]
		public static string GetFileImageType()
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC1E914", Offset = "0xC1E914", VA = "0xC1E914")]
		public static long GetFileVersion()
		{
			return default(long);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC1E98C", Offset = "0xC1E98C", VA = "0xC1E98C")]
		public static void AutoConnectHbController(int scans)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xC1EA40", Offset = "0xC1EA40", VA = "0xC1EA40")]
		public static string GetConnectedDeviceMac()
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC1EAFC", Offset = "0xC1EAFC", VA = "0xC1EAFC")]
		public void setHbControllerMac(string mac)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xC1ECF4", Offset = "0xC1ECF4", VA = "0xC1ECF4")]
		public int GetControllerRSSI()
		{
			return default(int);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xC1ED6C", Offset = "0xC1ED6C", VA = "0xC1ED6C")]
		public void setHbServiceBindState(string state)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC1F074", Offset = "0xC1F074", VA = "0xC1F074")]
		public void setControllerServiceBindState(string state)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xC1F358", Offset = "0xC1F358", VA = "0xC1F358")]
		public void setHbControllerConnectState(string isconnect)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xC1F674", Offset = "0xC1F674", VA = "0xC1F674")]
		public void setControllerStateChanged(string state)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xC1FD7C", Offset = "0xC1FD7C", VA = "0xC1FD7C")]
		public void setControllerAbility(string data)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC1FE7C", Offset = "0xC1FE7C", VA = "0xC1FE7C")]
		public void controllerThreadStartedCallback()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC20378", Offset = "0xC20378", VA = "0xC20378")]
		public void controllerDeviceVersionCallback(string data)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC20478", Offset = "0xC20478", VA = "0xC20478")]
		public void controllerSnCodeCallback(string data)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xC20578", Offset = "0xC20578", VA = "0xC20578")]
		public void controllerUnbindCallback(string status)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC20678", Offset = "0xC20678", VA = "0xC20678")]
		public void controllerStationStatusCallback(string status)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC20778", Offset = "0xC20778", VA = "0xC20778")]
		public void controllerStationBusyCallback(string status)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC20878", Offset = "0xC20878", VA = "0xC20878")]
		public void controllerOTAStartCodeCallback(string data)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xC20978", Offset = "0xC20978", VA = "0xC20978")]
		public void controllerDeviceVersionAndSNCallback(string data)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC20A78", Offset = "0xC20A78", VA = "0xC20A78")]
		public void controllerUniqueIDCallback(string data)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xC20B78", Offset = "0xC20B78", VA = "0xC20B78")]
		public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC20C30", Offset = "0xC20C30", VA = "0xC20C30")]
		public void setupdateFailed()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC20C34", Offset = "0xC20C34", VA = "0xC20C34")]
		public void setupdateSuccess()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC20C38", Offset = "0xC20C38", VA = "0xC20C38")]
		public void setupdateProgress(string progress)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC20C3C", Offset = "0xC20C3C", VA = "0xC20C3C")]
		public void setHbAutoConnectState(string state)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xC20F74", Offset = "0xC20F74", VA = "0xC20F74")]
		public void callbackControllerServiceState(string state)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xC210CC", Offset = "0xC210CC", VA = "0xC210CC")]
		public void changeMainControllerCallback(string index)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xC21228", Offset = "0xC21228", VA = "0xC21228")]
		public void changeHandnessCallback(string index)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xC20D8C", Offset = "0xC20D8C", VA = "0xC20D8C")]
		private void ShowToast(int type)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC21384", Offset = "0xC21384", VA = "0xC21384")]
		private void HideToast()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xC21434", Offset = "0xC21434", VA = "0xC21434")]
		private void CheckControllerService()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xC1FFCC", Offset = "0xC1FFCC", VA = "0xC1FFCC")]
		private void GetCVControllerState()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC1D074", Offset = "0xC1D074", VA = "0xC1D074")]
		private void SetSystemKey()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xC1CB30", Offset = "0xC1CB30", VA = "0xC1CB30")]
		private void TransformData(ControllerHand hand, int handId, int[] data)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC21448", Offset = "0xC21448", VA = "0xC21448")]
		private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC21600", Offset = "0xC21600", VA = "0xC21600")]
		private void TransformTouchData(ControllerHand hand, int handId, int[] data)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xC21730", Offset = "0xC21730", VA = "0xC21730")]
		private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xC21870", Offset = "0xC21870", VA = "0xC21870")]
		public Pvr_ControllerManager()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class Pvr_ControllerModuleInit : MonoBehaviour
	{
		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1C4", Offset = "0x7BD1C4")]
		private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pvr_ControllerModuleInit <>4__this;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int id;

			[Token(Token = "0x1700047B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028A3")]
				[Address(RVA = "0xCA487C", Offset = "0xCA487C", VA = "0xCA487C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A5")]
				[Address(RVA = "0xCA48EC", Offset = "0xCA48EC", VA = "0xCA48EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xCA410C", Offset = "0xCA410C", VA = "0xCA410C")]
			[DebuggerHidden]
			public <ShowOrHideRay>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xCA45DC", Offset = "0xCA45DC", VA = "0xCA45DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xCA45E0", Offset = "0xCA45E0", VA = "0xCA45E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xCA4884", Offset = "0xCA4884", VA = "0xCA4884", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerVariety Variety;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsCustomModel;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject dot;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject rayLine;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject controller;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool moduleState;

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xCA3B2C", Offset = "0xCA3B2C", VA = "0xCA3B2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xCA3D64", Offset = "0xCA3D64", VA = "0xCA3D64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xCA3E8C", Offset = "0xCA3E8C", VA = "0xCA3E8C")]
		private void ServiceStartSuccess()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xCA3F00", Offset = "0xCA3F00", VA = "0xCA3F00")]
		private void ControllerStateChanged(string data)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xCA4058", Offset = "0xCA4058", VA = "0xCA4058")]
		private void MainControllerIDChanged(string data)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xCA3E90", Offset = "0xCA3E90", VA = "0xCA3E90")]
		private void RefreshRay()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xCA405C", Offset = "0xCA405C", VA = "0xCA405C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1B40", Offset = "0x7D1B40")]
		private IEnumerator ShowOrHideRay(int id)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xCA4138", Offset = "0xCA4138", VA = "0xCA4138")]
		public void ForceHideOrShow(bool state)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xCA4280", Offset = "0xCA4280", VA = "0xCA4280")]
		public void UpdateRay()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xCA45CC", Offset = "0xCA45CC", VA = "0xCA45CC")]
		public Pvr_ControllerModuleInit()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class Pvr_ControllerPower : MonoBehaviour
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite power1;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite power2;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite power3;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite power4;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite power5;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public ControllerVariety variety;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public ControllerDevice currentDevice;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image powerImage;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int powerValue;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float power;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xCA48F4", Offset = "0xCA48F4", VA = "0xCA48F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xCA49FC", Offset = "0xCA49FC", VA = "0xCA49FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xCA4A34", Offset = "0xCA4A34", VA = "0xCA4A34")]
		private void RefreshPower(int hand)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xCA4C78", Offset = "0xCA4C78", VA = "0xCA4C78")]
		public Pvr_ControllerPower()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class Pvr_ControllerVisual : MonoBehaviour
	{
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerDevice currentDevice;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D m_idle;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D m_app;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D m_home;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D m_touchpad;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D m_volUp;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_volDn;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D m_trigger;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D m_a;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D m_b;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D m_x;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D m_y;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture2D m_grip;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer controllerRenderMat;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public ControllerVariety variety;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xCA4C80", Offset = "0xCA4C80", VA = "0xCA4C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xCA4CE4", Offset = "0xCA4CE4", VA = "0xCA4CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xCA4D64", Offset = "0xCA4D64", VA = "0xCA4D64")]
		private void Update()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xCA4D9C", Offset = "0xCA4D9C", VA = "0xCA4D9C")]
		private void ChangeKeyEffects(int hand)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xCA5848", Offset = "0xCA5848", VA = "0xCA5848")]
		public Pvr_ControllerVisual()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Pvr_ToolTips : MonoBehaviour
	{
		[Token(Token = "0x20006A3")]
		public enum TipBtn
		{
			[Token(Token = "0x400204E")]
			app,
			[Token(Token = "0x400204F")]
			touchpad,
			[Token(Token = "0x4002050")]
			home,
			[Token(Token = "0x4002051")]
			volup,
			[Token(Token = "0x4002052")]
			voldown,
			[Token(Token = "0x4002053")]
			trigger,
			[Token(Token = "0x4002054")]
			grip
		}

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ControllerDevice currentDevice;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float tipsAlpha;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Pvr_ToolTips tooltips;

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xCAB214", Offset = "0xCAB214", VA = "0xCAB214")]
		public void ChangeTipsText(TipBtn tip, string key)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xCAB3DC", Offset = "0xCAB3DC", VA = "0xCAB3DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xCAB468", Offset = "0xCAB468", VA = "0xCAB468")]
		private void Update()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xCAB708", Offset = "0xCAB708", VA = "0xCAB708")]
		private void LoadTextFromJson()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xCABC5C", Offset = "0xCABC5C", VA = "0xCABC5C")]
		public static void RefreshTips()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xCABD08", Offset = "0xCABD08", VA = "0xCABD08")]
		public Pvr_ToolTips()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class Pvr_TouchPadScroll : MonoBehaviour
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isHoving;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int mainHand;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SwipeDirection direction;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 currPos;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 tarPos;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lerpSpeed;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform tranViewport;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float ignoreDis;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 lastTouchDownPos;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 lastTouchUpPos;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isTouching;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool isClosed;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 vecOrigin;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 vecOriginNeo2;

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xCABD10", Offset = "0xCABD10", VA = "0xCABD10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xCABDD0", Offset = "0xCABDD0", VA = "0xCABDD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xCAC31C", Offset = "0xCAC31C", VA = "0xCAC31C")]
		private bool IsControllerConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xCABF60", Offset = "0xCABF60", VA = "0xCABF60")]
		private void UpdateTargetPos()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xCACB54", Offset = "0xCACB54", VA = "0xCACB54")]
		private void ComputeTouchPos()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xCACEFC", Offset = "0xCACEFC", VA = "0xCACEFC")]
		private void ComputeRockerPos()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xCAD3E8", Offset = "0xCAD3E8", VA = "0xCAD3E8")]
		private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xCAC0B4", Offset = "0xCAC0B4", VA = "0xCAC0B4")]
		private void UpdatePos()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xCACA44", Offset = "0xCACA44", VA = "0xCACA44")]
		private void ResetParameter()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xCABDFC", Offset = "0xCABDFC", VA = "0xCABDFC")]
		private void Process()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xCAD424", Offset = "0xCAD424", VA = "0xCAD424")]
		private bool IsHovering(Pvr_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xCAD64C", Offset = "0xCAD64C", VA = "0xCAD64C")]
		private bool FindTree(Transform tran)
		{
			return default(bool);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xCAD740", Offset = "0xCAD740", VA = "0xCAD740")]
		public Pvr_TouchPadScroll()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class Pvr_TouchVisual : MonoBehaviour
	{
		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public ControllerDevice currentDevice;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public ControllerVariety variety;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer touchRenderer;

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xCAD7FC", Offset = "0xCAD7FC", VA = "0xCAD7FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xCAD8C8", Offset = "0xCAD8C8", VA = "0xCAD8C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xCAD900", Offset = "0xCAD900", VA = "0xCAD900")]
		private void ChangeEffects(int hand)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xCADC2C", Offset = "0xCADC2C", VA = "0xCADC2C")]
		public Pvr_TouchVisual()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class DemoController : MonoBehaviour
	{
		[Token(Token = "0x20006A4")]
		public delegate void showLoadingEventHandler();

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1D4", Offset = "0x7BD1D4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject btnObj;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DemoController <>4__this;

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xBFDCA4", Offset = "0xBFDCA4", VA = "0xBFDCA4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60028AB")]
			[Address(RVA = "0xBFEAE8", Offset = "0xBFEAE8", VA = "0xBFEAE8")]
			internal void <InitDelegate>b__0()
			{
			}
		}

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Callback callback;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject msg;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pvr_UnitySDKManager picoVrManager;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string currentOrderID;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject loading;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject BG;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject InputPanel;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static showLoadingEventHandler showLoading;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xBFD32C", Offset = "0xBFD32C", VA = "0xBFD32C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xBFD55C", Offset = "0xBFD55C", VA = "0xBFD55C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xBFDB20", Offset = "0xBFDB20", VA = "0xBFDB20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xBFD65C", Offset = "0xBFD65C", VA = "0xBFD65C")]
		private void InitDelegate()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xBFDCAC", Offset = "0xBFDCAC", VA = "0xBFDCAC")]
		private void OnClick(GameObject btnObj)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xBFE090", Offset = "0xBFE090", VA = "0xBFE090")]
		public string getRamdomTestOrderID()
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xBFDFDC", Offset = "0xBFDFDC", VA = "0xBFDFDC")]
		private void StartLoading()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xBFE574", Offset = "0xBFE574", VA = "0xBFE574")]
		public void StopLoading()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xBFE698", Offset = "0xBFE698", VA = "0xBFE698")]
		public void DoPayByCode()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xBFE9D8", Offset = "0xBFE9D8", VA = "0xBFE9D8")]
		private bool VerifyLocalToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xBFEAE0", Offset = "0xBFEAE0", VA = "0xBFEAE0")]
		public DemoController()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class LoadingRatation : MonoBehaviour
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC00A50", Offset = "0xC00A50", VA = "0xC00A50")]
		private void Start()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC00A54", Offset = "0xC00A54", VA = "0xC00A54")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xC00AD8", Offset = "0xC00AD8", VA = "0xC00AD8")]
		public LoadingRatation()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x20006A6")]
		public delegate void doEnterEventHandler();

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1E4", Offset = "0x7BD1E4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject btnObj;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputManager <>4__this;

			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xBFFBD4", Offset = "0xBFFBD4", VA = "0xBFFBD4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0xC009E0", Offset = "0xC009E0", VA = "0xC009E0")]
			internal void <InitKeyBoard>b__0()
			{
			}
		}

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static doEnterEventHandler doEnter;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringBuilder sb;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrayList btnsName;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject enter;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xBFF098", Offset = "0xBFF098", VA = "0xBFF098")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xBFFBCC", Offset = "0xBFFBCC", VA = "0xBFFBCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xBFFBD0", Offset = "0xBFFBD0", VA = "0xBFFBD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xBFF09C", Offset = "0xBFF09C", VA = "0xBFF09C")]
		private void InitKeyBoard()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xBFFBDC", Offset = "0xBFFBDC", VA = "0xBFFBDC")]
		private void OnClick(GameObject btnObj)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xC00814", Offset = "0xC00814", VA = "0xC00814")]
		private void EnterChar(string s)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xBFFEE0", Offset = "0xBFFEE0", VA = "0xBFFEE0")]
		private void DoCapslock(bool IsUpper)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xC00544", Offset = "0xC00544", VA = "0xC00544")]
		private void ClearBuffer()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xC00940", Offset = "0xC00940", VA = "0xC00940")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class Callback : MonoBehaviour
	{
		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string IS_SUCCESS;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string MSG;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string CODE;

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xBFB9FC", Offset = "0xBFB9FC", VA = "0xBFB9FC")]
		public void LoginCallback(string LoginInfo)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xBFC088", Offset = "0xBFC088", VA = "0xBFC088")]
		public void QueryOrPayCallback(string queryOrPayInfo)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xBFC35C", Offset = "0xBFC35C", VA = "0xBFC35C")]
		public void UserInfoCallback(string userInfo)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xBFBC9C", Offset = "0xBFBC9C", VA = "0xBFBC9C")]
		public void SetMassage(string massage)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xBFC44C", Offset = "0xBFC44C", VA = "0xBFC44C")]
		public GameObject GetCurrentGameObject()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xBFC498", Offset = "0xBFC498", VA = "0xBFC498")]
		public void ActivityForResultCallback(string activity)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xBFC610", Offset = "0xBFC610", VA = "0xBFC610")]
		public Callback()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class CommonDic
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommonDic dic;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> mydic;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _app_ID;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _app_Key;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _user_token;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _access_token;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _open_id;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _refresh_token;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _expires_in;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _user_info;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _subject;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _body;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _order_id;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _total;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _goods_tag;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _notify_url;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _trade_type;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _pay_code;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string _order_info;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string _code;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _msg;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _merchant_ID;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string _payKey;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string _isSuucess;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string _loginMsg;

		[Token(Token = "0x170001D2")]
		public string subject
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xBFD22C", Offset = "0xBFD22C", VA = "0xBFD22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xBFD17C", Offset = "0xBFD17C", VA = "0xBFD17C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public string body
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xBFD234", Offset = "0xBFD234", VA = "0xBFD234")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xBFD184", Offset = "0xBFD184", VA = "0xBFD184")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public string order_id
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xBFD23C", Offset = "0xBFD23C", VA = "0xBFD23C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xBFD18C", Offset = "0xBFD18C", VA = "0xBFD18C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public string total
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xBFD244", Offset = "0xBFD244", VA = "0xBFD244")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xBFD194", Offset = "0xBFD194", VA = "0xBFD194")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public string goods_tag
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xBFD24C", Offset = "0xBFD24C", VA = "0xBFD24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xBFD19C", Offset = "0xBFD19C", VA = "0xBFD19C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public string notify_url
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0xBFD254", Offset = "0xBFD254", VA = "0xBFD254")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xBFD1A4", Offset = "0xBFD1A4", VA = "0xBFD1A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public string pay_code
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xBFD25C", Offset = "0xBFD25C", VA = "0xBFD25C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xBFD1B4", Offset = "0xBFD1B4", VA = "0xBFD1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public string trade_type
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xBFD264", Offset = "0xBFD264", VA = "0xBFD264")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xBFD1AC", Offset = "0xBFD1AC", VA = "0xBFD1AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public string user_token
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xBFD26C", Offset = "0xBFD26C", VA = "0xBFD26C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xBFD274", Offset = "0xBFD274", VA = "0xBFD274")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public string access_token
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xBFD27C", Offset = "0xBFD27C", VA = "0xBFD27C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xBFD284", Offset = "0xBFD284", VA = "0xBFD284")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public string open_id
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xBFD28C", Offset = "0xBFD28C", VA = "0xBFD28C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xBFD294", Offset = "0xBFD294", VA = "0xBFD294")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public string refresh_token
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xBFD29C", Offset = "0xBFD29C", VA = "0xBFD29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xBFD2A4", Offset = "0xBFD2A4", VA = "0xBFD2A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public string expires_in
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xBFD2AC", Offset = "0xBFD2AC", VA = "0xBFD2AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xBFD2B4", Offset = "0xBFD2B4", VA = "0xBFD2B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public string isSuccess
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xBFD2BC", Offset = "0xBFD2BC", VA = "0xBFD2BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xBFC078", Offset = "0xBFC078", VA = "0xBFC078")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public string loginMsg
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xBFD2C4", Offset = "0xBFD2C4", VA = "0xBFD2C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xBFC080", Offset = "0xBFC080", VA = "0xBFC080")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public string user_info
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xBFD2CC", Offset = "0xBFD2CC", VA = "0xBFD2CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xBFC444", Offset = "0xBFC444", VA = "0xBFC444")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public string order_info
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xBFD2D4", Offset = "0xBFD2D4", VA = "0xBFD2D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0xBFC354", Offset = "0xBFC354", VA = "0xBFC354")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public string code
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xBFD2DC", Offset = "0xBFD2DC", VA = "0xBFD2DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xBFC344", Offset = "0xBFC344", VA = "0xBFC344")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public string msg
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xBFD2E4", Offset = "0xBFD2E4", VA = "0xBFD2E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xBFC34C", Offset = "0xBFC34C", VA = "0xBFC34C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public string app_ID
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xBFD2EC", Offset = "0xBFD2EC", VA = "0xBFD2EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xBFD2F4", Offset = "0xBFD2F4", VA = "0xBFD2F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public string app_Key
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xBFD2FC", Offset = "0xBFD2FC", VA = "0xBFD2FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xBFD304", Offset = "0xBFD304", VA = "0xBFD304")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public string merchant_ID
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0xBFD30C", Offset = "0xBFD30C", VA = "0xBFD30C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xBFD314", Offset = "0xBFD314", VA = "0xBFD314")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public string paykey
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xBFD31C", Offset = "0xBFD31C", VA = "0xBFD31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xBFD324", Offset = "0xBFD324", VA = "0xBFD324")]
			set
			{
			}
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xBFBFA0", Offset = "0xBFBFA0", VA = "0xBFBFA0")]
		public static CommonDic getInstance()
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xBFCF10", Offset = "0xBFCF10", VA = "0xBFCF10")]
		public Dictionary<string, string> getDic()
		{
			return null;
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xBFCF60", Offset = "0xBFCF60", VA = "0xBFCF60")]
		public void setParameters(string name, string value)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xBFD1BC", Offset = "0xBFD1BC", VA = "0xBFD1BC")]
		public string PayOrderString()
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xBFC734", Offset = "0xBFC734", VA = "0xBFC734")]
		public static void InitDicData(Dictionary<string, string> mydic)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xBFC6AC", Offset = "0xBFC6AC", VA = "0xBFC6AC")]
		public CommonDic()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class LoginSDK
	{
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xBFE034", Offset = "0xBFE034", VA = "0xBFE034")]
		public static void Login()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xBFE518", Offset = "0xBFE518", VA = "0xBFE518")]
		public static void GetUserAPI()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xC00E40", Offset = "0xC00E40", VA = "0xC00E40")]
		public LoginSDK()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class PicoPaymentSDK
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _jo;

		[Token(Token = "0x170001E9")]
		public static AndroidJavaObject jo
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xBFC5A8", Offset = "0xBFC5A8", VA = "0xBFC5A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xC01BC4", Offset = "0xC01BC4", VA = "0xC01BC4")]
			set
			{
			}
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xC00AE0", Offset = "0xC00AE0", VA = "0xC00AE0")]
		public static void Login()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xBFE0E8", Offset = "0xBFE0E8", VA = "0xBFE0E8")]
		public static void Pay(string payOrderJson)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xBFE300", Offset = "0xBFE300", VA = "0xBFE300")]
		public static void QueryOrder(string orderId)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xC00C90", Offset = "0xC00C90", VA = "0xC00C90")]
		public static void GetUserAPI()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xC01C34", Offset = "0xC01C34", VA = "0xC01C34")]
		public PicoPaymentSDK()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class Pvr_ToBService : MonoBehaviour
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text deviceInfoText;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xCAACDC", Offset = "0xCAACDC", VA = "0xCAACDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xCAAD14", Offset = "0xCAAD14", VA = "0xCAAD14")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xCAAD24", Offset = "0xCAAD24", VA = "0xCAAD24")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xCAACE0", Offset = "0xCAACE0", VA = "0xCAACE0")]
		private void InitToBService()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xCAAD1C", Offset = "0xCAAD1C", VA = "0xCAAD1C")]
		private void BindToBService()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xCAAD2C", Offset = "0xCAAD2C", VA = "0xCAAD2C")]
		private void UnBindToBService()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xCAAD34", Offset = "0xCAAD34", VA = "0xCAAD34")]
		private void BoolCallback(string value)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xCAADE8", Offset = "0xCAADE8", VA = "0xCAADE8")]
		private void IntCallback(string value)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xCAAE7C", Offset = "0xCAAE7C", VA = "0xCAAE7C")]
		private void LongCallback(string value)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xCAAF10", Offset = "0xCAAF10", VA = "0xCAAF10")]
		public void StateGetDeviceInfo()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xCAAFA0", Offset = "0xCAAFA0", VA = "0xCAAFA0")]
		public void ControlSetDeviceAction()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xCAB020", Offset = "0xCAB020", VA = "0xCAB020")]
		private void ControlSetDeviceActionCallBack(int value)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xCAB0D0", Offset = "0xCAB0D0", VA = "0xCAB0D0")]
		public void AppManager()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xCAB15C", Offset = "0xCAB15C", VA = "0xCAB15C")]
		private void AppManagerCallBack(int value)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xCAB20C", Offset = "0xCAB20C", VA = "0xCAB20C")]
		public Pvr_ToBService()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class PLOG : MonoBehaviour
	{
		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int logLevel;

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xC018EC", Offset = "0xC018EC", VA = "0xC018EC")]
		public static void getConfigTraceLevel()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xC01958", Offset = "0xC01958", VA = "0xC01958")]
		public static void D(string msg)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xC01A00", Offset = "0xC01A00", VA = "0xC01A00")]
		public static void I(string msg)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xC01AA8", Offset = "0xC01AA8", VA = "0xC01AA8")]
		public static void W(string msg)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xC01B50", Offset = "0xC01B50", VA = "0xC01B50")]
		public static void E(string msg)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xC01BB8", Offset = "0xC01BB8", VA = "0xC01BB8")]
		public PLOG()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class CPicoSDKSettingAsset : ScriptableObject
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IgnoreSDKSetting;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DontshowBuildWaring;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool AppIDChecked;

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xBFB9F4", Offset = "0xBFB9F4", VA = "0xBFB9F4")]
		public CPicoSDKSettingAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000371")]
	public class Pvr_UnitySDKProjectSetting : ScriptableObject
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderTextureAntiAliasing rtAntiAlising;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RenderTextureDepth rtBitDepth;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTextureFormat rtFormat;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool usedefaultRenderTexture;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 customRTSize;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool usedefaultfps;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int customfps;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool usesinglepass;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool usecontentprotect;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xB80984", Offset = "0xB80984", VA = "0xB80984")]
		public static Pvr_UnitySDKProjectSetting GetProjectConfig()
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xB809D8", Offset = "0xB809D8", VA = "0xB809D8")]
		public Pvr_UnitySDKProjectSetting()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
	{
		[Token(Token = "0x20006A8")]
		public enum simulationType
		{
			[Token(Token = "0x400205A")]
			Null,
			[Token(Token = "0x400205B")]
			Invalid,
			[Token(Token = "0x400205C")]
			Valid
		}

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool entitlementchecksimulation;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool startTimeEntitlementCheck;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string appID;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> deviceSN;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_UnitySDKPlatformSetting instance;

		[Token(Token = "0x170001EA")]
		public static bool Entitlementchecksimulation
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xB7FBF4", Offset = "0xB7FBF4", VA = "0xB7FBF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xB7FC20", Offset = "0xB7FC20", VA = "0xB7FC20")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public static bool StartTimeEntitlementCheck
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xB7F584", Offset = "0xB7F584", VA = "0xB7F584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xB7FC78", Offset = "0xB7FC78", VA = "0xB7FC78")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public static Pvr_UnitySDKPlatformSetting Instance
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xB7F5B0", Offset = "0xB7F5B0", VA = "0xB7F5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600160F")]
			[Address(RVA = "0xB7FCD0", Offset = "0xB7FCD0", VA = "0xB7FCD0")]
			set
			{
			}
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xB7FD28", Offset = "0xB7FD28", VA = "0xB7FD28")]
		public Pvr_UnitySDKPlatformSetting()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class Pvr_UnitySDKManager : MonoBehaviour
	{
		[Token(Token = "0x20006A9")]
		public delegate void EntitlementCheckResult(int ReturnValue);

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD1F4", Offset = "0x7BD1F4")]
		private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int type;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Pvr_UnitySDKManager <>4__this;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x1700047D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B9")]
				[Address(RVA = "0xB7F88C", Offset = "0xB7F88C", VA = "0xB7F88C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028BB")]
				[Address(RVA = "0xB7F8FC", Offset = "0xB7F8FC", VA = "0xB7F8FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xB7F6F0", Offset = "0xB7F6F0", VA = "0xB7F6F0")]
			[DebuggerHidden]
			public <ToastManager>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xB7F71C", Offset = "0xB7F71C", VA = "0xB7F71C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xB7F720", Offset = "0xB7F720", VA = "0xB7F720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028BA")]
			[Address(RVA = "0xB7F894", Offset = "0xB7F894", VA = "0xB7F894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD204", Offset = "0x7BD204")]
		private sealed class <>c__DisplayClass102_0
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Pvr_UnitySDKManager <>4__this;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform trans;

			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x113B610", Offset = "0x113B610", VA = "0x113B610")]
			public <>c__DisplayClass102_0()
			{
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x113E264", Offset = "0x113E264", VA = "0x113E264")]
			internal void <SetProperty>b__0()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD214", Offset = "0x7BD214")]
		private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject tip;

			[Token(Token = "0x1700047F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C1")]
				[Address(RVA = "0x113E3B0", Offset = "0x113E3B0", VA = "0x113E3B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000480")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C3")]
				[Address(RVA = "0x113E420", Offset = "0x113E420", VA = "0x113E420", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x113BA1C", Offset = "0x113BA1C", VA = "0x113BA1C")]
			[DebuggerHidden]
			public <G3TipsManager>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x113E2E0", Offset = "0x113E2E0", VA = "0x113E2E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x113E2E4", Offset = "0x113E2E4", VA = "0x113E2E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x113E3B8", Offset = "0x113E3B8", VA = "0x113E3B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD224", Offset = "0x7BD224")]
		private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pvr_UnitySDKManager <>4__this;

			[Token(Token = "0x17000481")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C7")]
				[Address(RVA = "0xB7F678", Offset = "0xB7F678", VA = "0xB7F678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000482")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C9")]
				[Address(RVA = "0xB7F6E8", Offset = "0xB7F6E8", VA = "0xB7F6E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xB7F1A0", Offset = "0xB7F1A0", VA = "0xB7F1A0")]
			[DebuggerHidden]
			public <Start>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xB7F1CC", Offset = "0xB7F1CC", VA = "0xB7F1CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xB7F1D0", Offset = "0xB7F1D0", VA = "0xB7F1D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xB7F680", Offset = "0xB7F680", VA = "0xB7F680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD234", Offset = "0x7BD234")]
		private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <i>5__2;

			[Token(Token = "0x17000483")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028CD")]
				[Address(RVA = "0x113E5F0", Offset = "0x113E5F0", VA = "0x113E5F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000484")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028CF")]
				[Address(RVA = "0x113E660", Offset = "0x113E660", VA = "0x113E660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x113D6B4", Offset = "0x113D6B4", VA = "0x113D6B4")]
			[DebuggerHidden]
			public <InitRenderThreadRoutine>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x113E428", Offset = "0x113E428", VA = "0x113E428", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x113E42C", Offset = "0x113E42C", VA = "0x113E42C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x113E5F8", Offset = "0x113E5F8", VA = "0x113E5F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD244", Offset = "0x7BD244")]
		private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pvr_UnitySDKManager <>4__this;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <ability6dof>5__2;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <waitNum>5__3;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <resetNum>5__4;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__5;

			[Token(Token = "0x17000485")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0x113EC90", Offset = "0x113EC90", VA = "0x113EC90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000486")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028D5")]
				[Address(RVA = "0x113ED00", Offset = "0x113ED00", VA = "0x113ED00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x113E148", Offset = "0x113E148", VA = "0x113E148")]
			[DebuggerHidden]
			public <OnResume>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x113E668", Offset = "0x113E668", VA = "0x113E668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x113E66C", Offset = "0x113E66C", VA = "0x113E66C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x113EC98", Offset = "0x113EC98", VA = "0x113EC98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlatForm platform;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Pvr_UnitySDKManager sdk;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float EyesAspect;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int posStatus;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool ismirroring;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Vector3 resetBasePos;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int trackingmode;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int systemprop;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool systemFPS;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] headData;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool rotfoldout;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool hmdOnlyrot;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool controllerOnlyrot;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private TrackingOrigin trackingOrigin;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ResetTrackerOnLoad;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Vector3 leftEyeOffset;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Vector3 rightEyeOffset;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public Rect leftEyeRect;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Rect rightEyeRect;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Matrix4x4 leftEyeView;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Matrix4x4 rightEyeView;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool vrModeEnabled;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public Material Eyematerial;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Material Middlematerial;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C527C", Offset = "0x7C527C")]
		private bool <picovrTriggered>k__BackingField;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool newPicovrTriggered;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		[SerializeField]
		private bool showFPS;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public Vector3 neckOffset;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool pVRNeck;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		[HideInInspector]
		public bool UseCustomNeckPara;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		[HideInInspector]
		public bool onResume;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		[HideInInspector]
		public bool isEnterVRMode;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool isHasController;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject calltoast;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject msgtoast;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject lowhmdBatterytoast;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GameObject lowphoneBatterytoast;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject LowPhoneHealthtoast;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject LowcontrollerBatterytoast;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool lowControllerpowerstate;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float controllerpowershowtime;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool UseToast;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private int iPhoneHMDModeEnabled;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject G3LiteTips;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private bool monoscopic;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private bool mIsAndroid7;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> eventEnterVRMode;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		[HideInInspector]
		public bool ShowVideoSeethrough;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int SystemDebugFFRLevel;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public int SystemFFRLevel;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public int AppCheckResult;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Action longPressHomeKeyAction;

		[Token(Token = "0x170001ED")]
		public static Pvr_UnitySDKManager SDK
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x1127540", Offset = "0x1127540", VA = "0x1127540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public bool Rotfoldout
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x1138424", Offset = "0x1138424", VA = "0x1138424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x113842C", Offset = "0x113842C", VA = "0x113842C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public bool HmdOnlyrot
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x113844C", Offset = "0x113844C", VA = "0x113844C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x1138454", Offset = "0x1138454", VA = "0x1138454")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public bool ControllerOnlyrot
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0x1138474", Offset = "0x1138474", VA = "0x1138474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001617")]
			[Address(RVA = "0x113847C", Offset = "0x113847C", VA = "0x113847C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public TrackingOrigin TrackingOrigin
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0x113849C", Offset = "0x113849C", VA = "0x113849C")]
			get
			{
				return default(TrackingOrigin);
			}
			[Token(Token = "0x6001619")]
			[Address(RVA = "0x11384A4", Offset = "0x11384A4", VA = "0x11384A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		[HideInInspector]
		public bool VRModeEnabled
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x1131F7C", Offset = "0x1131F7C", VA = "0x1131F7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x112FFBC", Offset = "0x112FFBC", VA = "0x112FFBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		[HideInInspector]
		public bool picovrTriggered
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x113855C", Offset = "0x113855C", VA = "0x113855C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1BA4", Offset = "0x7D1BA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x112EEB0", Offset = "0x112EEB0", VA = "0x112EEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1BB4", Offset = "0x7D1BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public bool ShowFPS
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x1138564", Offset = "0x1138564", VA = "0x1138564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0x113856C", Offset = "0x113856C", VA = "0x113856C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public bool PVRNeck
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x113858C", Offset = "0x113858C", VA = "0x113858C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x1138594", Offset = "0x1138594", VA = "0x1138594")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		[HideInInspector]
		public bool Monoscopic
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x1131708", Offset = "0x1131708", VA = "0x1131708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x11385B4", Offset = "0x11385B4", VA = "0x11385B4")]
			set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event EntitlementCheckResult EntitlementCheckResultEvent
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x11385DC", Offset = "0x11385DC", VA = "0x11385DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1BC4", Offset = "0x7D1BC4")]
			add
			{
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x11386D0", Offset = "0x11386D0", VA = "0x11386D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1BD4", Offset = "0x7D1BD4")]
			remove
			{
			}
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x11384C0", Offset = "0x11384C0", VA = "0x11384C0")]
		public void ChangeDefaultCustomRtSize(int w, int h)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x11316D0", Offset = "0x11316D0", VA = "0x11316D0")]
		public Vector3 EyeOffset(Eye eye)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1138520", Offset = "0x1138520", VA = "0x1138520")]
		public Rect EyeRect(Eye eye)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x11387C4", Offset = "0x11387C4", VA = "0x11387C4")]
		private bool SDKManagerInit()
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x1138924", Offset = "0x1138924", VA = "0x1138924")]
		private bool SDKManagerInitCoreAbility()
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1138A60", Offset = "0x1138A60", VA = "0x1138A60")]
		public void smsReceivedCallback(string msg)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x11394E4", Offset = "0x11394E4", VA = "0x11394E4")]
		public void phoneStateCallback(string state)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1139940", Offset = "0x1139940", VA = "0x1139940")]
		public void phoneBatteryStateCallback(string state)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1139C1C", Offset = "0x1139C1C", VA = "0x1139C1C")]
		public void hmdLowBatteryCallback(string level)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1138EBC", Offset = "0x1138EBC", VA = "0x1138EBC")]
		private string TransformNumber(string number)
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1139D5C", Offset = "0x1139D5C", VA = "0x1139D5C")]
		public void onHmdOrientationReseted()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x11393EC", Offset = "0x11393EC", VA = "0x11393EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1BE4", Offset = "0x7D1BE4")]
		private IEnumerator ToastManager(int type, bool state, float time)
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1139D60", Offset = "0x1139D60", VA = "0x1139D60")]
		private void CheckControllerStateForG2(string state)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1139F18", Offset = "0x1139F18", VA = "0x1139F18")]
		public void notificationCallback(string data)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x113B334", Offset = "0x113B334", VA = "0x113B334")]
		private Sprite LoadSprite(Vector2 size, string filepath)
		{
			return null;
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x113B460", Offset = "0x113B460", VA = "0x113B460")]
		private byte[] ReadTex(string path)
		{
			return null;
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x113A394", Offset = "0x113A394", VA = "0x113A394")]
		private void SetProperty(int type, JsonData data, string value)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x113A9F8", Offset = "0x113A9F8", VA = "0x113A9F8")]
		private void SetBaseProperty(Transform trans, JsonData data, string value)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x113AF28", Offset = "0x113AF28", VA = "0x113AF28")]
		private void SetImageProperty(Transform image, JsonData data, string value)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x113B618", Offset = "0x113B618", VA = "0x113B618")]
		private void SetTextProperty(Transform text, JsonData data, string value)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x113B284", Offset = "0x113B284", VA = "0x113B284")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1C48", Offset = "0x7D1C48")]
		private IEnumerator G3TipsManager(GameObject tip, float time)
		{
			return null;
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x113B9A0", Offset = "0x113B9A0", VA = "0x113B9A0")]
		private float JsonToFloat(JsonData data)
		{
			return default(float);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x113BA48", Offset = "0x113BA48", VA = "0x113BA48")]
		private bool SDKManagerInitFPS()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x11388A8", Offset = "0x11388A8", VA = "0x11388A8")]
		private bool SDKManagerInitConfigProfile()
		{
			return default(bool);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x113BC24", Offset = "0x113BC24", VA = "0x113BC24")]
		private bool SDKManagerInitEditor()
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x113BCFC", Offset = "0x113BCFC", VA = "0x113BCFC")]
		private bool SDKManagerInitPara()
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x113BD04", Offset = "0x113BD04", VA = "0x113BD04")]
		public void SDKManagerLongHomeKey()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x113BE24", Offset = "0x113BE24", VA = "0x113BE24")]
		private void setLongHomeKey()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x113C0E4", Offset = "0x113C0E4", VA = "0x113C0E4")]
		public void verifyAPPCallback(string code)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x113C234", Offset = "0x113C234", VA = "0x113C234")]
		public void IpdRefreshCallBack(string ipd)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x113C38C", Offset = "0x113C38C", VA = "0x113C38C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x113D5D4", Offset = "0x113D5D4", VA = "0x113D5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1CAC", Offset = "0x7D1CAC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x113D654", Offset = "0x113D654", VA = "0x113D654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1D10", Offset = "0x7D1D10")]
		private IEnumerator InitRenderThreadRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x113D6E0", Offset = "0x113D6E0", VA = "0x113D6E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x113D9A4", Offset = "0x113D9A4", VA = "0x113D9A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x113DB0C", Offset = "0x113DB0C", VA = "0x113DB0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x113DC64", Offset = "0x113DC64", VA = "0x113DC64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x113DC6C", Offset = "0x113DC6C", VA = "0x113DC6C")]
		private void OnPause()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x113DD94", Offset = "0x113DD94", VA = "0x113DD94")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x113E050", Offset = "0x113E050", VA = "0x113E050")]
		public void EnterVRMode()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x113DD24", Offset = "0x113DD24", VA = "0x113DD24")]
		public void LeaveVRMode()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x113E140", Offset = "0x113E140", VA = "0x113E140")]
		public void SixDofForceQuit()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x113CD9C", Offset = "0x113CD9C", VA = "0x113CD9C")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x113D0A4", Offset = "0x113D0A4", VA = "0x113D0A4")]
		private void RefreshTextByLanguage()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x113C9C8", Offset = "0x113C9C8", VA = "0x113C9C8")]
		private void LoadIsMirroringValue()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x113DFD0", Offset = "0x113DFD0", VA = "0x113DFD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1D74", Offset = "0x7D1D74")]
		private IEnumerator OnResume()
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x113E174", Offset = "0x113E174", VA = "0x113E174")]
		public Pvr_UnitySDKManager()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class QuitGame : MonoBehaviour
	{
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB8A244", Offset = "0xB8A244", VA = "0xB8A244")]
		private void Start()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB8A248", Offset = "0xB8A248", VA = "0xB8A248")]
		private void Update()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xB8A274", Offset = "0xB8A274", VA = "0xB8A274")]
		public QuitGame()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class Pvr_UnityEyeMask : MonoBehaviour
	{
		[Token(Token = "0x20006B0")]
		private class EyeMaskData
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Eye eyeSide;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Camera camera;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommandBuffer cmdBuf;

			[Token(Token = "0x60028D6")]
			[Address(RVA = "0xCB3E18", Offset = "0xCB3E18", VA = "0xCB3E18")]
			public EyeMaskData()
			{
			}
		}

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Shader eyeMaskShader;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material eyeMaskMaterial;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh eyeMaskMeshLeft;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh eyeMaskMeshRight;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh eyeMaskMeshBoth;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float zDir;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color eyeMaskColor;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<EyeMaskData> cameraDataList;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xCB2088", Offset = "0xCB2088", VA = "0xCB2088")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xCB2144", Offset = "0xCB2144", VA = "0xCB2144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xCB2EC0", Offset = "0xCB2EC0", VA = "0xCB2EC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xCB2800", Offset = "0xCB2800", VA = "0xCB2800")]
		private void CreateCommandBuffer()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xCB3BF8", Offset = "0xCB3BF8", VA = "0xCB3BF8")]
		private void OnCustomPreRender(Camera cam)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xCB331C", Offset = "0xCB331C", VA = "0xCB331C")]
		private Mesh GetStencilMesh(Eye eyeSide)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xCB3784", Offset = "0xCB3784", VA = "0xCB3784")]
		private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xCB31D8", Offset = "0xCB31D8", VA = "0xCB31D8")]
		private bool VerifyCommadBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xCB2404", Offset = "0xCB2404", VA = "0xCB2404")]
		private void PrepareCameras()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xCB3DB8", Offset = "0xCB3DB8", VA = "0xCB3DB8")]
		private void AddCameraCommandBuffer(EyeMaskData data)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xCB30C8", Offset = "0xCB30C8", VA = "0xCB30C8")]
		private void RemoveCameraCommandBuffer(EyeMaskData data)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xCB3128", Offset = "0xCB3128", VA = "0xCB3128")]
		private void CleanEyeMask()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xCB3E20", Offset = "0xCB3E20", VA = "0xCB3E20")]
		public Pvr_UnityEyeMask()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB604", Offset = "0x7BB604")]
	public class Pvr_UnitySDKEye : MonoBehaviour
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Pvr_UnitySDKEye> Instances;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Eye eyeSide;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C532C", Offset = "0x7C532C")]
		private Camera <eyecamera>k__BackingField;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int eyeCameraOriginCullingMask;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CameraClearFlags eyeCameraOriginClearFlag;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color eyeCameraOriginBackgroundColor;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastBoundaryState;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Matrix4x4 realProj;

		[Token(Token = "0x4001435")]
		private const int bufferSize = 3;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int IDIndex;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderEventType eventType;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int previousId;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool setLevel;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material mat_Vignette;

		[Token(Token = "0x170001F7")]
		public Camera eyecamera
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x1130078", Offset = "0x1130078", VA = "0x1130078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1DD8", Offset = "0x7D1DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x1130080", Offset = "0x1130080", VA = "0x1130080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1DE8", Offset = "0x7D1DE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1130088", Offset = "0x1130088", VA = "0x1130088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x113013C", Offset = "0x113013C", VA = "0x113013C")]
		private void Start()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1130824", Offset = "0x1130824", VA = "0x1130824")]
		private void Update()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1130B04", Offset = "0x1130B04", VA = "0x1130B04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1130C0C", Offset = "0x1130C0C", VA = "0x1130C0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1130D14", Offset = "0x1130D14", VA = "0x1130D14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1130DA0", Offset = "0x1130DA0", VA = "0x1130DA0")]
		public void MyPreRender(Camera camera)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1130FD8", Offset = "0x1130FD8", VA = "0x1130FD8")]
		public void MyPreRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x113109C", Offset = "0x113109C", VA = "0x113109C")]
		public void MyPostRender(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1130E64", Offset = "0x1130E64", VA = "0x1130E64")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1131160", Offset = "0x1131160", VA = "0x1131160")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x11314EC", Offset = "0x11314EC", VA = "0x11314EC")]
		public void EyeRender()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x113022C", Offset = "0x113022C", VA = "0x113022C")]
		private void Setup(Eye eyeSide)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x11304D0", Offset = "0x11304D0", VA = "0x11304D0")]
		private void SetupUpdate()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1122520", Offset = "0x1122520", VA = "0x1122520")]
		public void RefreshCameraPosition(float ipd)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1131710", Offset = "0x1131710", VA = "0x1131710")]
		private void DrawVignetteLine()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1131854", Offset = "0x1131854", VA = "0x1131854")]
		private void vignette()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1131348", Offset = "0x1131348", VA = "0x1131348")]
		private void SetFFRParameter()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x1131AD4", Offset = "0x1131AD4", VA = "0x1131AD4")]
		public Pvr_UnitySDKEye()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class Pvr_UnitySDKEyeManager : MonoBehaviour
	{
		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD254", Offset = "0x7BD254")]
		private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pvr_UnitySDKEyeManager <>4__this;

			[Token(Token = "0x17000487")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0x11367D8", Offset = "0x11367D8", VA = "0x11367D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000488")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x1136848", Offset = "0x1136848", VA = "0x1136848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x1133F3C", Offset = "0x1133F3C", VA = "0x1133F3C")]
			[DebuggerHidden]
			public <EndOfFrame>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x1134CD8", Offset = "0x1134CD8", VA = "0x1134CD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x1134CDC", Offset = "0x1134CDC", VA = "0x1134CDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x11367E0", Offset = "0x11367E0", VA = "0x11367E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD264", Offset = "0x7BD264")]
		private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pvr_UnitySDKEyeManager <>4__this;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startAlpha;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float endAlpha;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000489")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028E0")]
				[Address(RVA = "0x1136998", Offset = "0x1136998", VA = "0x1136998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0x1136A08", Offset = "0x1136A08", VA = "0x1136A08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x1134C14", Offset = "0x1134C14", VA = "0x1134C14")]
			[DebuggerHidden]
			public <ScreenFade>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60028DE")]
			[Address(RVA = "0x1136850", Offset = "0x1136850", VA = "0x1136850", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x1136854", Offset = "0x1136854", VA = "0x1136854", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E1")]
			[Address(RVA = "0x11369A0", Offset = "0x11369A0", VA = "0x11369A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_UnitySDKEyeManager instance;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pvr_UnitySDKEye[] eyes;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Camera LeftEyeCamera;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Camera RightEyeCamera;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Camera MonoEyeCamera;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Camera BothEyeCamera;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int MonoEyeTextureID;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int WaitSplashScreenFrames;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int frameNum;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private bool foveatedRendering;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private EFoveationLevel foveationLevel;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int eyeTextureId;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderEventType eventType;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pvr_UnitySDKEyeOverlay compositeLayer;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int overlayLayerDepth;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int underlayLayerDepth;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isHeadLocked;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int layerFlags;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool EyeTracking;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Vector3 eyePoint;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EyeTrackingData eyePoseData;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static bool supportEyeTracking;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C541C", Offset = "0x7C541C")]
		public bool screenFade;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C5454", Offset = "0x7C5454")]
		public float fadeTime;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C548C", Offset = "0x7C548C")]
		public Color fadeColor;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int renderQueue;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private MeshRenderer fadeMeshRenderer;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MeshFilter fadeMeshFilter;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Material fadeMaterial;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float elapsedTime;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool isFading;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float currentAlpha;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float nowFadeAlpha;

		[Token(Token = "0x170001F8")]
		public static Pvr_UnitySDKEyeManager Instance
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x112237C", Offset = "0x112237C", VA = "0x112237C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public Pvr_UnitySDKEye[] Eyes
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0x1122474", Offset = "0x1122474", VA = "0x1122474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		[HideInInspector]
		public bool FoveatedRendering
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x1131BFC", Offset = "0x1131BFC", VA = "0x1131BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x1131C04", Offset = "0x1131C04", VA = "0x1131C04")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		[HideInInspector]
		public EFoveationLevel FoveationLevel
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x1131C68", Offset = "0x1131C68", VA = "0x1131C68")]
			get
			{
				return default(EFoveationLevel);
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0x1131C70", Offset = "0x1131C70", VA = "0x1131C70")]
			set
			{
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1131C84", Offset = "0x1131C84", VA = "0x1131C84")]
		private void SetCameraEnableEditor()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1131F84", Offset = "0x1131F84", VA = "0x1131F84")]
		private void SetCamerasEnableByStereoRendering()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x113206C", Offset = "0x113206C", VA = "0x113206C")]
		private void SetupMonoCamera()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x11321D0", Offset = "0x11321D0", VA = "0x11321D0")]
		private void SetupUpdate()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x11322F4", Offset = "0x11322F4", VA = "0x11322F4")]
		private void MonoEyeRender()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x11324D8", Offset = "0x11324D8", VA = "0x11324D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1132F6C", Offset = "0x1132F6C", VA = "0x1132F6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x11337C4", Offset = "0x11337C4", VA = "0x11337C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x11337E8", Offset = "0x11337E8", VA = "0x11337E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1133B50", Offset = "0x1133B50", VA = "0x1133B50")]
		private void OnPause()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1133C48", Offset = "0x1133C48", VA = "0x1133C48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1133C50", Offset = "0x1133C50", VA = "0x1133C50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1133DB8", Offset = "0x1133DB8", VA = "0x1133DB8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1133EBC", Offset = "0x1133EBC", VA = "0x1133EBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1DF8", Offset = "0x7D1DF8")]
		private IEnumerator EndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1133F68", Offset = "0x1133F68", VA = "0x1133F68")]
		private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x11343D8", Offset = "0x11343D8", VA = "0x11343D8")]
		public bool SetEyeTrackingMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1123454", Offset = "0x1123454", VA = "0x1123454")]
		public Vector3 GetEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1134778", Offset = "0x1134778", VA = "0x1134778")]
		private EyeDeviceInfo GetDeviceInfo()
		{
			return default(EyeDeviceInfo);
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x11328F8", Offset = "0x11328F8", VA = "0x11328F8")]
		private void CreateFadeMesh()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1133C54", Offset = "0x1133C54", VA = "0x1133C54")]
		private void DestoryFadeMesh()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1132F64", Offset = "0x1132F64", VA = "0x1132F64")]
		public void SetCurrentAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x11336F0", Offset = "0x11336F0", VA = "0x11336F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1E5C", Offset = "0x7D1E5C")]
		private IEnumerator ScreenFade(float startAlpha, float endAlpha)
		{
			return null;
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1134A74", Offset = "0x1134A74", VA = "0x1134A74")]
		private void SetMaterialAlpha()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x11336E8", Offset = "0x11336E8", VA = "0x11336E8")]
		public bool GfxDeviceAdvanceFrameGLES()
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1134C40", Offset = "0x1134C40", VA = "0x1134C40")]
		public Pvr_UnitySDKEyeManager()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
	{
		[Token(Token = "0x20006B3")]
		public delegate void ExternalAndroidSurfaceObjectCreated();

		[Token(Token = "0x20006B4")]
		public enum OverlayShape
		{
			[Token(Token = "0x4002083")]
			Quad,
			[Token(Token = "0x4002084")]
			Cylinder,
			[Token(Token = "0x4002085")]
			Equirect
		}

		[Token(Token = "0x20006B5")]
		public enum OverlayType
		{
			[Token(Token = "0x4002087")]
			Overlay,
			[Token(Token = "0x4002088")]
			Underlay
		}

		[Token(Token = "0x20006B6")]
		public enum OverlayTexFilterMode
		{
			[Token(Token = "0x400208A")]
			NotCare,
			[Token(Token = "0x400208B")]
			Nearest,
			[Token(Token = "0x400208C")]
			Linear,
			[Token(Token = "0x400208D")]
			Nearest_Mipmap_Nearest,
			[Token(Token = "0x400208E")]
			Linear_Mipmap_Nearest,
			[Token(Token = "0x400208F")]
			Nearest_Mipmap_Linear,
			[Token(Token = "0x4002090")]
			Linear_Mipmap_Linear
		}

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Pvr_UnitySDKEyeOverlay> Instances;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int layerIndex;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OverlayType overlayType;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverlayShape overlayShape;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform layerTransform;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture[] layerTextures;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] layerTextureIds;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Matrix4x4[] MVMatrixs;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] ModelScales;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion[] ModelRotations;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3[] ModelTranslations;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Quaternion[] CameraRotations;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3[] CameraTranslations;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Camera[] layerEyeCamera;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool overrideColorScaleAndOffset;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector4 colorScale;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector4 colorOffset;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector4 overlayLayerColorScaleDefault;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector4 overlayLayerColorOffsetDefault;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool isExternalAndroidSurface;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public IntPtr externalAndroidSurfaceObject;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1136A10", Offset = "0x1136A10", VA = "0x1136A10", Slot = "4")]
		public int CompareTo(Pvr_UnitySDKEyeOverlay other)
		{
			return default(int);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1136A48", Offset = "0x1136A48", VA = "0x1136A48")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x11370A4", Offset = "0x11370A4", VA = "0x11370A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x113779C", Offset = "0x113779C", VA = "0x113779C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x11333C4", Offset = "0x11333C4", VA = "0x11333C4")]
		public void RefreshCamera()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1136E9C", Offset = "0x1136E9C", VA = "0x1136E9C")]
		private void InitializeBuffer()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x11370A8", Offset = "0x11370A8", VA = "0x11370A8")]
		private void UpdateCoords()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1137828", Offset = "0x1137828", VA = "0x1137828")]
		public void SetTexture(Texture texture)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x11378F4", Offset = "0x11378F4", VA = "0x11378F4")]
		public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1136758", Offset = "0x1136758", VA = "0x1136758")]
		public Vector4 GetLayerColorScale()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1136798", Offset = "0x1136798", VA = "0x1136798")]
		public Vector4 GetLayerColorOffset()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1137908", Offset = "0x1137908", VA = "0x1137908")]
		public Pvr_UnitySDKEyeOverlay()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class Pvr_UnitySDKRender
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_UnitySDKRender instance;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static AndroidJavaClass javaVrActivityClass;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static AndroidJavaClass javaserviceClass;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static AndroidJavaClass javaVrActivityLongReceiver;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static AndroidJavaClass javaVrActivityClientClass;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool canConnecttoActivity;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isInitrenderThread;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string model;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 prefinger1;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 prefinger2;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int eyeTextureCount;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RenderTexture[] eyeTextures;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] eyeTextureIds;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currEyeTextureIdx;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int nextEyeTextureIdx;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int lastEyeTextureIdx;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isSwitchSDK;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int RenderviewNumber;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isFirstStartup;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isShellMode;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StereoRenderingPathPico stereoRenderPath;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54C4", Offset = "0x7C54C4")]
		private SDKStereoRendering <StereoRendering>k__BackingField;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float rtScaleFactor;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float eyeVFov;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float eyeHFov;

		[Token(Token = "0x170001FC")]
		public static Pvr_UnitySDKRender Instance
		{
			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xB7F4A4", Offset = "0xB7F4A4", VA = "0xB7F4A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xB80AF0", Offset = "0xB80AF0", VA = "0xB80AF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public StereoRenderingPathPico StereoRenderPath
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xB81564", Offset = "0xB81564", VA = "0xB81564")]
			get
			{
				return default(StereoRenderingPathPico);
			}
		}

		[Token(Token = "0x170001FE")]
		public SDKStereoRendering StereoRendering
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xB8156C", Offset = "0xB8156C", VA = "0xB8156C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1EC0", Offset = "0x7D1EC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xB81574", Offset = "0xB81574", VA = "0xB81574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1ED0", Offset = "0x7D1ED0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float RtScaleFactor
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xB8157C", Offset = "0xB8157C", VA = "0xB8157C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xB81584", Offset = "0xB81584", VA = "0xB81584")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float EyeVFoV
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xB81724", Offset = "0xB81724", VA = "0xB81724")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xB8172C", Offset = "0xB8172C", VA = "0xB8172C")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public float EyeHFoV
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xB81740", Offset = "0xB81740", VA = "0xB81740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xB81748", Offset = "0xB81748", VA = "0xB81748")]
			set
			{
			}
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB809E0", Offset = "0xB809E0", VA = "0xB809E0")]
		public Pvr_UnitySDKRender()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xB80B60", Offset = "0xB80B60", VA = "0xB80B60")]
		public void ConnectToAndriod()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xB814E4", Offset = "0xB814E4", VA = "0xB814E4")]
		public void Init()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xB81B34", Offset = "0xB81B34", VA = "0xB81B34")]
		private bool InitRenderAbility()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xB81C5C", Offset = "0xB81C5C", VA = "0xB81C5C")]
		private bool UpdateRenderParaFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xB81D10", Offset = "0xB81D10", VA = "0xB81D10")]
		private bool CreateEyeBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xB8282C", Offset = "0xB8282C", VA = "0xB8282C")]
		private void InitSinglePass()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xB82160", Offset = "0xB82160", VA = "0xB82160")]
		public float GetEyeVFOV()
		{
			return default(float);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xB822CC", Offset = "0xB822CC", VA = "0xB822CC")]
		public float GetEyeHFOV()
		{
			return default(float);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xB82A54", Offset = "0xB82A54", VA = "0xB82A54")]
		private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xB8159C", Offset = "0xB8159C", VA = "0xB8159C")]
		public bool ReCreateEyeBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xB7F56C", Offset = "0xB7F56C", VA = "0xB7F56C")]
		public void ReInit()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xB83194", Offset = "0xB83194", VA = "0xB83194")]
		public void IssueRenderThread()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xB832E4", Offset = "0xB832E4", VA = "0xB832E4")]
		private void AutoAdpatForPico1s()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xB82438", Offset = "0xB82438", VA = "0xB82438")]
		public Vector2 GetEyeBufferResolution()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xB835A8", Offset = "0xB835A8", VA = "0xB835A8")]
		public bool GetUsePredictedMatrix()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xB8175C", Offset = "0xB8175C", VA = "0xB8175C")]
		public bool GetIsShellMode()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037A")]
	public class Pvr_UnitySDKSinglePass : SDKStereoRendering
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Camera bothCamera;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Matrix4x4[] unity_StereoMatrixP;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Matrix4x4[] unity_StereoMatrixInvP;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Matrix4x4[] unity_StereoWorldToCamera;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4[] unity_StereoCameraToWorld;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4[] unity_StereoMatrixVP;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] eyesOffset;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Matrix4x4[] eyesOffsetMatrix;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CommandBuffer commandBufferBeforeForwardOpaque;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CommandBuffer commandBufferBeforeSkybox;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CommandBuffer commandBufferAfterSkybox;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xB87148", Offset = "0xB87148", VA = "0xB87148", Slot = "4")]
		public override void InitEye(Camera eye)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xB87BE4", Offset = "0xB87BE4", VA = "0xB87BE4", Slot = "5")]
		public override void OnSDKRenderInited()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xB87D44", Offset = "0xB87D44", VA = "0xB87D44", Slot = "6")]
		public override void OnSDKPreRender()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xB88814", Offset = "0xB88814", VA = "0xB88814", Slot = "7")]
		public override void OnSDKPostRender()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xB87BE8", Offset = "0xB87BE8", VA = "0xB87BE8")]
		public void OnSDKRenderInited_SinglePass()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xB888CC", Offset = "0xB888CC", VA = "0xB888CC")]
		private void SetAntiAliasing()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xB87574", Offset = "0xB87574", VA = "0xB87574")]
		public void SetEyesPosition()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB87A70", Offset = "0xB87A70", VA = "0xB87A70")]
		public void SetEyeProjection()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB889D4", Offset = "0xB889D4", VA = "0xB889D4")]
		private static Matrix4x4 GetProjection(float near, float far)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB88CAC", Offset = "0xB88CAC", VA = "0xB88CAC")]
		public static Matrix4x4 MakeProjection(float n, float f)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB88AA8", Offset = "0xB88AA8", VA = "0xB88AA8")]
		public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB8881C", Offset = "0xB8881C", VA = "0xB8881C")]
		private void SwitchKeywordAndDeviceView(bool enable)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB88E94", Offset = "0xB88E94", VA = "0xB88E94")]
		public static Matrix4x4[] GetStereoWorldToCameraMat()
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB87D48", Offset = "0xB87D48", VA = "0xB87D48")]
		public void SinglePassPreRender()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB891D0", Offset = "0xB891D0", VA = "0xB891D0")]
		private void SetCommandBuffers()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xB89118", Offset = "0xB89118", VA = "0xB89118")]
		private void SetRenderTextureWithDepth()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB8309C", Offset = "0xB8309C", VA = "0xB8309C")]
		public Pvr_UnitySDKSinglePass()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public abstract class SDKStereoRendering
	{
		[Token(Token = "0x60016D8")]
		public abstract void InitEye(Camera eye);

		[Token(Token = "0x60016D9")]
		public abstract void OnSDKRenderInited();

		[Token(Token = "0x60016DA")]
		public abstract void OnSDKPreRender();

		[Token(Token = "0x60016DB")]
		public abstract void OnSDKPostRender();

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB899F8", Offset = "0xB899F8", VA = "0xB899F8")]
		protected SDKStereoRendering()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class HighlightAtGaze : MonoBehaviour
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color HighlightColor;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AnimationTime;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer myRenderer;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color originalColor;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color targetColor;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EyeTrackingGazeRay gazeRay;

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xBFED6C", Offset = "0xBFED6C", VA = "0xBFED6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xBFEE18", Offset = "0xBFEE18", VA = "0xBFEE18")]
		private void Update()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xBFF058", Offset = "0xBFF058", VA = "0xBFF058")]
		public HighlightAtGaze()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class RayVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer _line;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EyeTrackingGazeRay gazeRay;

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xB8A27C", Offset = "0xB8A27C", VA = "0xB8A27C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xB8A348", Offset = "0xB8A348", VA = "0xB8A348")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xB8A52C", Offset = "0xB8A52C", VA = "0xB8A52C")]
		public RayVisualizer()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class GetSeeThroughImage : MonoBehaviour
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage viewImage_left;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage viewImage_right;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int width;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int height;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture cameraTex_left;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture cameraTex_right;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool cameraPreview;

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xBFEB58", Offset = "0xBFEB58", VA = "0xBFEB58")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xBFECC0", Offset = "0xBFECC0", VA = "0xBFECC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xBFED4C", Offset = "0xBFED4C", VA = "0xBFED4C")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xBFEB5C", Offset = "0xBFEB5C", VA = "0xBFEB5C")]
		private void CreateTexture()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xBFECFC", Offset = "0xBFECFC", VA = "0xBFECFC")]
		private void DrawTexture()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xBFED64", Offset = "0xBFED64", VA = "0xBFED64")]
		public GetSeeThroughImage()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class OverlayExternalSurfaceDemo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD274", Offset = "0x7BD274")]
		private sealed class <>c
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xC01878", Offset = "0xC01878", VA = "0xC01878")]
			public <>c()
			{
			}

			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xC01880", Offset = "0xC01880", VA = "0xC01880")]
			internal void <StartPlay>b__7_0()
			{
			}
		}

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string movieName;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pvr_UnitySDKEyeOverlay overlay;

		[Token(Token = "0x40014AB")]
		private const string TAG = "[ExternalSurface]>>>>>>";

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xC013F0", Offset = "0xC013F0", VA = "0xC013F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xC01558", Offset = "0xC01558", VA = "0xC01558")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xC015DC", Offset = "0xC015DC", VA = "0xC015DC")]
		private void StartPlay(string moviePath, string licenceUrl)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xC01808", Offset = "0xC01808", VA = "0xC01808")]
		public OverlayExternalSurfaceDemo()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class MoveCylinder : MonoBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 startingPosition;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion startingRotation;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xC00E48", Offset = "0xC00E48", VA = "0xC00E48")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xC00EB8", Offset = "0xC00EB8", VA = "0xC00EB8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xC00F50", Offset = "0xC00F50", VA = "0xC00F50")]
		public MoveCylinder()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB668", Offset = "0x7BB668")]
	public class MoveSphere : MonoBehaviour
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 startingPosition;

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xC00F58", Offset = "0xC00F58", VA = "0xC00F58")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC0114C", Offset = "0xC0114C", VA = "0xC0114C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xC01078", Offset = "0xC01078", VA = "0xC01078")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC01150", Offset = "0xC01150", VA = "0xC01150")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC012C0", Offset = "0xC012C0", VA = "0xC012C0")]
		public void TeleportRandomly()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC013E8", Offset = "0xC013E8", VA = "0xC013E8")]
		public MoveSphere()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class Resetbutton : MonoBehaviour
	{
		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xB8A534", Offset = "0xB8A534", VA = "0xB8A534")]
		public void DemoResetTracking()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xB8A5D0", Offset = "0xB8A5D0", VA = "0xB8A5D0")]
		public Resetbutton()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class UserEntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB8B068", Offset = "0xB8B068", VA = "0xB8B068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xB8B108", Offset = "0xB8B108", VA = "0xB8B108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xB8B1A8", Offset = "0xB8B1A8", VA = "0xB8B1A8")]
		private void HandelEntitlementCheckResult(int resultCode)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xB8B474", Offset = "0xB8B474", VA = "0xB8B474")]
		public UserEntitlementCheck()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class Pvr_UnitySDKHeadTrack : MonoBehaviour
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C54D4", Offset = "0x7C54D4")]
		public bool trackRotation;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C550C", Offset = "0x7C550C")]
		public bool trackPosition;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool updated;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool dataClock;

		[Token(Token = "0x17000202")]
		public Ray Gaze
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x1137D98", Offset = "0x1137D98", VA = "0x1137D98")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x113840C", Offset = "0x113840C", VA = "0x113840C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1137E50", Offset = "0x1137E50", VA = "0x1137E50")]
		private void UpdateHead()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1138414", Offset = "0x1138414", VA = "0x1138414")]
		public Pvr_UnitySDKHeadTrack()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class Pvr_UnitySDKPose
	{
		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Matrix4x4 flipZ;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5544", Offset = "0x7C5544")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5554", Offset = "0x7C5554")]
		private Quaternion <Orientation>k__BackingField;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5564", Offset = "0x7C5564")]
		private Matrix4x4 <Matrix>k__BackingField;

		[Token(Token = "0x17000203")]
		public Matrix4x4 RightHandedMatrix
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xB80268", Offset = "0xB80268", VA = "0xB80268")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000204")]
		public Vector3 Position
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xB803F8", Offset = "0xB803F8", VA = "0xB803F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1EE0", Offset = "0x7D1EE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xB80404", Offset = "0xB80404", VA = "0xB80404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1EF0", Offset = "0x7D1EF0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public Quaternion Orientation
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xB80410", Offset = "0xB80410", VA = "0xB80410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F00", Offset = "0x7D1F00")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xB8041C", Offset = "0xB8041C", VA = "0xB8041C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F10", Offset = "0x7D1F10")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public Matrix4x4 Matrix
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xB803D4", Offset = "0xB803D4", VA = "0xB803D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F20", Offset = "0x7D1F20")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xB80428", Offset = "0xB80428", VA = "0xB80428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F30", Offset = "0x7D1F30")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xB80444", Offset = "0xB80444", VA = "0xB80444")]
		public Pvr_UnitySDKPose(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xB8060C", Offset = "0xB8060C", VA = "0xB8060C")]
		public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xB8068C", Offset = "0xB8068C", VA = "0xB8068C")]
		public void Set(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xB804A0", Offset = "0xB804A0", VA = "0xB804A0")]
		protected void Set(Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xB807CC", Offset = "0xB807CC", VA = "0xB807CC")]
		private Quaternion NormalizeQuaternion(ref Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000386")]
	public class Pvr_UnitySDKSensor
	{
		[Token(Token = "0x20006B8")]
		public delegate void Enter3DofModel();

		[Token(Token = "0x20006B9")]
		public delegate void Exit3DofModel();

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_UnitySDKSensor instance;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool SensorStart;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool SensorInit;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Quaternion UnityQuaternion;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 UnityPosition;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sensorindex sensorIndex;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool dofClock;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action EyeFovChanged;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Pvr_UnitySDKPose HeadPose;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float vfov;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float hfov;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float x;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float y;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float z;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float px;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float py;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float pz;

		[Token(Token = "0x17000207")]
		public static Pvr_UnitySDKSensor Instance
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xB835B4", Offset = "0xB835B4", VA = "0xB835B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xB83738", Offset = "0xB83738", VA = "0xB83738")]
			set
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event Enter3DofModel Enter3DofModelEvent
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xB838E4", Offset = "0xB838E4", VA = "0xB838E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F40", Offset = "0x7D1F40")]
			add
			{
			}
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xB839D8", Offset = "0xB839D8", VA = "0xB839D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F50", Offset = "0x7D1F50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event Exit3DofModel Exit3DofModelEvent
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xB83ACC", Offset = "0xB83ACC", VA = "0xB83ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F60", Offset = "0x7D1F60")]
			add
			{
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xB83BC0", Offset = "0xB83BC0", VA = "0xB83BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F70", Offset = "0x7D1F70")]
			remove
			{
			}
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xB8367C", Offset = "0xB8367C", VA = "0xB8367C")]
		public Pvr_UnitySDKSensor()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xB837A8", Offset = "0xB837A8", VA = "0xB837A8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xB841C4", Offset = "0xB841C4", VA = "0xB841C4")]
		public void SensorUpdate()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xB83F34", Offset = "0xB83F34", VA = "0xB83F34")]
		public bool InitUnitySDKSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xB83CB4", Offset = "0xB83CB4", VA = "0xB83CB4")]
		public bool InitUnitySDK6DofSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xB8407C", Offset = "0xB8407C", VA = "0xB8407C")]
		public bool StartUnitySDKSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xB85478", Offset = "0xB85478", VA = "0xB85478")]
		public bool StopUnitySDKSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xB855C0", Offset = "0xB855C0", VA = "0xB855C0")]
		public bool ResetUnitySDKSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xB85748", Offset = "0xB85748", VA = "0xB85748")]
		public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
		{
			return default(bool);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xB84264", Offset = "0xB84264", VA = "0xB84264")]
		public bool GetUnitySDKSensorState()
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xB85FE8", Offset = "0xB85FE8", VA = "0xB85FE8")]
		public bool GetUnitySDKPSensorState()
		{
			return default(bool);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xB85D78", Offset = "0xB85D78", VA = "0xB85D78")]
		private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class CLoadingAsset : ScriptableObject
	{
		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SplashScreenType;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Texture2D> splashImage;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D Inside_background;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UseSplashText;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string DefaultText;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ChineseText;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string EnglishText;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string JapaneseText;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string KoreanText;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string FontSize;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color FontColor;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string TextHeight;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool UseCarousel;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int SplashTextAlignment;

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xBFB978", Offset = "0xBFB978", VA = "0xBFB978")]
		public CLoadingAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	public class Pvr_UnitySDKConfigProfile
	{
		[Token(Token = "0x20006BA")]
		public struct Lenses
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float separation;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float offset;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distance;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int alignment;

			[Token(Token = "0x4002097")]
			public const int AlignTop = -1;

			[Token(Token = "0x4002098")]
			public const int AlignCenter = 0;

			[Token(Token = "0x4002099")]
			public const int AlignBottom = 1;
		}

		[Token(Token = "0x20006BB")]
		public struct MaxFOV
		{
			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float upper;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float lower;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float inner;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float outer;
		}

		[Token(Token = "0x20006BC")]
		public struct Distortion
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float k1;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float k2;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float k3;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float k4;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float k5;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float k6;

			[Token(Token = "0x60028F2")]
			[Address(RVA = "0x87D1E0", Offset = "0x87D1E0", VA = "0x87D1E0")]
			public float distort(float r)
			{
				return default(float);
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x87D1E8", Offset = "0x87D1E8", VA = "0x87D1E8")]
			public float distort(float r, float dist)
			{
				return default(float);
			}

			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x87D1F0", Offset = "0x87D1F0", VA = "0x87D1F0")]
			public float diatortInv(float radious)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20006BD")]
		public struct Device
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Lenses devLenses;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MaxFOV devMaxFov;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Distortion devDistortion;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Distortion devDistortionInv;
		}

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Device SimulateDevice;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Device device;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Pvr_UnitySDKConfigProfile Default;

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x112E0D0", Offset = "0x112E0D0", VA = "0x112E0D0")]
		public Pvr_UnitySDKConfigProfile Clone()
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x112E16C", Offset = "0x112E16C", VA = "0x112E16C")]
		public static Pvr_UnitySDKConfigProfile GetPicoProfile()
		{
			return null;
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x112E218", Offset = "0x112E218", VA = "0x112E218")]
		public float[] GetLeftEyeVisibleTanAngles(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x112E5AC", Offset = "0x112E5AC", VA = "0x112E5AC")]
		public float[] GetLeftEyeNoLensTanAngles(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x112E820", Offset = "0x112E820", VA = "0x112E820")]
		public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x112E164", Offset = "0x112E164", VA = "0x112E164")]
		public Pvr_UnitySDKConfigProfile()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB6CC", Offset = "0x7BB6CC")]
	public class Pvr_UnitySDKFPS : MonoBehaviour
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text fpsText;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float updateInterval;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accum;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frames;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeLeft;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string strFps;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1137BDC", Offset = "0x1137BDC", VA = "0x1137BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1137C64", Offset = "0x1137C64", VA = "0x1137C64")]
		private void ShowFps()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1137D88", Offset = "0x1137D88", VA = "0x1137D88")]
		public Pvr_UnitySDKFPS()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class Pvr_GazeFuse : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gazeGameObject;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image;

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xCA5858", Offset = "0xCA5858", VA = "0xCA5858")]
		private void Start()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xCA58BC", Offset = "0xCA58BC", VA = "0xCA58BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xCA5A90", Offset = "0xCA5A90", VA = "0xCA5A90")]
		private void FuseAmountChanged(float fuseAmount)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xCA5B40", Offset = "0xCA5B40", VA = "0xCA5B40")]
		public Pvr_GazeFuse()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class Pvr_GazeInputModule : PointerInputModule
	{
		[Token(Token = "0x20006BE")]
		public enum Mode
		{
			[Token(Token = "0x40020A9")]
			Click,
			[Token(Token = "0x40020AA")]
			Gaze
		}

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mode mode;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5594", Offset = "0x7C5594")]
		public string ClickInputName;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C55CC", Offset = "0x7C55CC")]
		public float GazeTimeInSeconds;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5604", Offset = "0x7C5604")]
		private static float <gazeFraction>k__BackingField;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5614", Offset = "0x7C5614")]
		private static GameObject <gazeGameObject>k__BackingField;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RaycastResult CurrentRaycast;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject currentLookAtHandler;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentLookAtHandlerClickTime;

		[Token(Token = "0x17000208")]
		public static float gazeFraction
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0xCA5A40", Offset = "0xCA5A40", VA = "0xCA5A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F80", Offset = "0x7D1F80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001730")]
			[Address(RVA = "0xCA5B48", Offset = "0xCA5B48", VA = "0xCA5B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1F90", Offset = "0x7D1F90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public static GameObject gazeGameObject
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xCA59F0", Offset = "0xCA59F0", VA = "0xCA59F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1FA0", Offset = "0x7D1FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001732")]
			[Address(RVA = "0xCA5BA4", Offset = "0xCA5BA4", VA = "0xCA5BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1FB0", Offset = "0x7D1FB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCA5BFC", Offset = "0xCA5BFC", VA = "0xCA5BFC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCA5C20", Offset = "0xCA5C20", VA = "0xCA5C20")]
		private void HandleLook()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xCA5E84", Offset = "0xCA5E84", VA = "0xCA5E84")]
		private void HandleSelection()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xCA6304", Offset = "0xCA6304", VA = "0xCA6304")]
		public Pvr_GazeInputModule()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BB730", Offset = "0x7BB730")]
	public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisplayCrosshair;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C5624", Offset = "0x7C5624")]
		public Transform Crosshair;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pvr_GazeInputModule gazeInputModule;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 CrosshairOriginalScale;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float CrosshairOriginalDistance;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xCA636C", Offset = "0xCA636C", VA = "0xCA636C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xCA63D0", Offset = "0xCA63D0", VA = "0xCA63D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xCA6464", Offset = "0xCA6464", VA = "0xCA6464")]
		private void Update()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xCA659C", Offset = "0xCA659C", VA = "0xCA659C")]
		private void SetCrossHairAtDistance(float dist)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xCA66C4", Offset = "0xCA66C4", VA = "0xCA66C4")]
		public Pvr_GazeInputModuleCrosshair()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public enum RenderEventType
	{
		[Token(Token = "0x40014F4")]
		InitRenderThread = 1024,
		[Token(Token = "0x40014F5")]
		Pause,
		[Token(Token = "0x40014F6")]
		Resume,
		[Token(Token = "0x40014F7")]
		LeftEyeEndFrame,
		[Token(Token = "0x40014F8")]
		RightEyeEndFrame,
		[Token(Token = "0x40014F9")]
		TimeWarp,
		[Token(Token = "0x40014FA")]
		ResetVrModeParms,
		[Token(Token = "0x40014FB")]
		ShutdownRenderThread,
		[Token(Token = "0x40014FC")]
		BeginEye,
		[Token(Token = "0x40014FD")]
		EndEye,
		[Token(Token = "0x40014FE")]
		BoundaryRenderLeft,
		[Token(Token = "0x40014FF")]
		BoundaryRenderRight,
		[Token(Token = "0x4001500")]
		BothEyeEndFrame,
		[Token(Token = "0x4001501")]
		CameraFrameLeft,
		[Token(Token = "0x4001502")]
		CameraFrameRight,
		[Token(Token = "0x4001503")]
		StartCameraFrame,
		[Token(Token = "0x4001504")]
		StopCameraFrame
	}
	[Token(Token = "0x200038E")]
	public static class Pvr_UnitySDKPluginEvent
	{
		[Token(Token = "0x20006BF")]
		private delegate void RenderEventDelegate(int eventId);

		[Token(Token = "0x4001505")]
		private const uint IS_DATA_FLAG = 2147483648u;

		[Token(Token = "0x4001506")]
		private const uint DATA_POS_MASK = 1073741824u;

		[Token(Token = "0x4001507")]
		private const int DATA_POS_SHIFT = 30;

		[Token(Token = "0x4001508")]
		private const uint EVENT_TYPE_MASK = 1056899072u;

		[Token(Token = "0x4001509")]
		private const int EVENT_TYPE_SHIFT = 17;

		[Token(Token = "0x400150A")]
		private const uint PAYLOAD_MASK = 65535u;

		[Token(Token = "0x400150B")]
		private const int PAYLOAD_SHIFT = 16;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xB7FDAC", Offset = "0xB7FDAC", VA = "0xB7FDAC")]
		public static void Issue(RenderEventType eventType)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xB7FDD8", Offset = "0xB7FDD8", VA = "0xB7FDD8")]
		private static int EncodeType(int eventType)
		{
			return default(int);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xB7FDE0", Offset = "0xB7FDE0", VA = "0xB7FDE0")]
		private static int EncodeData(int eventId, int eventData, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xB7FE00", Offset = "0xB7FE00", VA = "0xB7FE00")]
		private static int DecodeData(int eventData)
		{
			return default(int);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xB7FDA4", Offset = "0xB7FDA4", VA = "0xB7FDA4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D1FC0", Offset = "0x7D1FC0")]
		private static void SetSinglePassBeforeForwardOpaque(int eventId)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xB7FE14", Offset = "0xB7FE14", VA = "0xB7FE14")]
		public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class Pvr_UnitySDKSightInputModule : BaseInputModule
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C565C", Offset = "0x7C565C")]
		public GameObject cursor;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int trigger;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float clickTime;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector2 hotspot;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEventData pointerData;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xB861DC", Offset = "0xB861DC", VA = "0xB861DC", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xB86278", Offset = "0xB86278", VA = "0xB86278", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xB865E0", Offset = "0xB865E0", VA = "0xB865E0", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xB86670", Offset = "0xB86670", VA = "0xB86670", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xB866AC", Offset = "0xB866AC", VA = "0xB866AC")]
		private void CastRayFromGaze()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xB86860", Offset = "0xB86860", VA = "0xB86860")]
		private void UpdateCurrentObject()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xB86A5C", Offset = "0xB86A5C", VA = "0xB86A5C")]
		private void PlaceCursor()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xB863B0", Offset = "0xB863B0", VA = "0xB863B0")]
		private void HandlePendingClick()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xB86D54", Offset = "0xB86D54", VA = "0xB86D54")]
		private void HandleTrigger()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xB870F4", Offset = "0xB870F4", VA = "0xB870F4")]
		public Pvr_UnitySDKSightInputModule()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class Pvr_ObjImporter
	{
		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_ObjImporter _instance;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int> triangles;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> vertices;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> uv;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> normals;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PvrVector3Int> faceData;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> intArray;

		[Token(Token = "0x400151A")]
		private const int MIN_POW_10 = -16;

		[Token(Token = "0x400151B")]
		private const int MAX_POW_10 = 16;

		[Token(Token = "0x400151C")]
		private const int NUM_POWS_10 = 33;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] pow10;

		[Token(Token = "0x1700020A")]
		public static Pvr_ObjImporter Instance
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xCA9570", Offset = "0xCA9570", VA = "0xCA9570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xCA9624", Offset = "0xCA9624", VA = "0xCA9624")]
		public Mesh ImportFile(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xCA9C34", Offset = "0xCA9C34", VA = "0xCA9C34")]
		private void LoadMeshData(string fileName)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xCAA498", Offset = "0xCAA498", VA = "0xCAA498")]
		private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xCAA678", Offset = "0xCAA678", VA = "0xCAA678")]
		private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
		{
			return default(int);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xCAAB64", Offset = "0xCAAB64", VA = "0xCAAB64")]
		private static float[] GenerateLookupTable()
		{
			return null;
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xCAA800", Offset = "0xCAA800", VA = "0xCAA800")]
		private float ParseFloat(StringBuilder value)
		{
			return default(float);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xCAAAE0", Offset = "0xCAAAE0", VA = "0xCAAAE0")]
		private int IntParseFast(StringBuilder value)
		{
			return default(int);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xCA961C", Offset = "0xCA961C", VA = "0xCA961C")]
		public Pvr_ObjImporter()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public sealed class PvrVector3Int
	{
		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56B4", Offset = "0x7C56B4")]
		private int <x>k__BackingField;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56C4", Offset = "0x7C56C4")]
		private int <y>k__BackingField;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56D4", Offset = "0x7C56D4")]
		private int <z>k__BackingField;

		[Token(Token = "0x1700020B")]
		public int x
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xC01CD4", Offset = "0xC01CD4", VA = "0xC01CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2024", Offset = "0x7D2024")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001759")]
			[Address(RVA = "0xC01CDC", Offset = "0xC01CDC", VA = "0xC01CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2034", Offset = "0x7D2034")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public int y
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xC01CE4", Offset = "0xC01CE4", VA = "0xC01CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2044", Offset = "0x7D2044")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xC01CEC", Offset = "0xC01CEC", VA = "0xC01CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2054", Offset = "0x7D2054")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public int z
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0xC01CF4", Offset = "0xC01CF4", VA = "0xC01CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2064", Offset = "0x7D2064")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600175D")]
			[Address(RVA = "0xC01CFC", Offset = "0xC01CFC", VA = "0xC01CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2074", Offset = "0x7D2074")]
			set
			{
			}
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC01D04", Offset = "0xC01D04", VA = "0xC01D04")]
		public PvrVector3Int()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC01D0C", Offset = "0xC01D0C", VA = "0xC01D0C")]
		public PvrVector3Int(int x, int y, int z)
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class Pvr_EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x6001760")]
		[Address(RVA = "0xCA5850", Offset = "0xCA5850", VA = "0xCA5850")]
		public Pvr_EnumFlags()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public enum ConfirmBtn
	{
		[Token(Token = "0x4001522")]
		App = 1,
		[Token(Token = "0x4001523")]
		TouchPad = 2,
		[Token(Token = "0x4001524")]
		Trigger = 4
	}
	[Token(Token = "0x2000394")]
	public class Pvr_InputModule : PointerInputModule
	{
		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<Pvr_UIPointer> pointers;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Pvr_EnumFlags]
		public ConfirmBtn confirmBtn;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RaycastResult> rayCasts;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastResult rayCastResult;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xCA6720", Offset = "0xCA6720", VA = "0xCA6720", Slot = "30")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xCA67A4", Offset = "0xCA67A4", VA = "0xCA67A4")]
		public static void AddPoint(Pvr_UIPointer point)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xCA6894", Offset = "0xCA6894", VA = "0xCA6894")]
		public static void RemovePoint(Pvr_UIPointer point)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xCA6984", Offset = "0xCA6984", VA = "0xCA6984", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xCA6D64", Offset = "0xCA6D64", VA = "0xCA6D64", Slot = "31")]
		protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xCA6E64", Offset = "0xCA6E64", VA = "0xCA6E64", Slot = "32")]
		protected virtual bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xCA6F64", Offset = "0xCA6F64", VA = "0xCA6F64", Slot = "33")]
		protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xCA70BC", Offset = "0xCA70BC", VA = "0xCA70BC", Slot = "34")]
		protected virtual bool IsHovering(Pvr_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xCA7320", Offset = "0xCA7320", VA = "0xCA7320", Slot = "35")]
		protected virtual bool ValidElement(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xCA73DC", Offset = "0xCA73DC", VA = "0xCA73DC", Slot = "36")]
		protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xCA747C", Offset = "0xCA747C", VA = "0xCA747C", Slot = "37")]
		protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xCA8444", Offset = "0xCA8444", VA = "0xCA8444", Slot = "38")]
		protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xCA84E0", Offset = "0xCA84E0", VA = "0xCA84E0", Slot = "39")]
		protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xCA85B8", Offset = "0xCA85B8", VA = "0xCA85B8", Slot = "40")]
		protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xCA86B0", Offset = "0xCA86B0", VA = "0xCA86B0", Slot = "41")]
		protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xCA89E4", Offset = "0xCA89E4", VA = "0xCA89E4", Slot = "42")]
		protected virtual bool AttemptClick(Pvr_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xCA8D0C", Offset = "0xCA8D0C", VA = "0xCA8D0C", Slot = "43")]
		protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xCA9474", Offset = "0xCA9474", VA = "0xCA9474")]
		public Pvr_InputModule()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class Pvr_UICanvas : MonoBehaviour
	{
		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD284", Offset = "0x7BD284")]
		private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Canvas canvas;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 canvasSize;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028FC")]
				[Address(RVA = "0xCAEAC4", Offset = "0xCAEAC4", VA = "0xCAEAC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028FE")]
				[Address(RVA = "0xCAEB34", Offset = "0xCAEB34", VA = "0xCAEB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xCAE238", Offset = "0xCAE238", VA = "0xCAE238")]
			[DebuggerHidden]
			public <CreateDraggablePanel>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xCAE5A8", Offset = "0xCAE5A8", VA = "0xCAE5A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xCAE5AC", Offset = "0xCAE5AC", VA = "0xCAE5AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xCAEACC", Offset = "0xCAEACC", VA = "0xCAEACC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clickOnPointerCollision;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoActivateWithinDistance;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BoxCollider canvasBoxCollider;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody canvasRigidBody;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine draggablePanelCreation;

		[Token(Token = "0x400152E")]
		protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xCADC34", Offset = "0xCADC34", VA = "0xCADC34", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xCADC40", Offset = "0xCADC40", VA = "0xCADC40", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xCADC4C", Offset = "0xCADC4C", VA = "0xCADC4C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xCADC58", Offset = "0xCADC58", VA = "0xCADC58", Slot = "7")]
		protected virtual void SetupCanvas()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xCAE184", Offset = "0xCAE184", VA = "0xCAE184", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D2084", Offset = "0x7D2084")]
		protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xCAE264", Offset = "0xCAE264", VA = "0xCAE264", Slot = "9")]
		protected virtual void RemoveCanvas()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xCAE5A0", Offset = "0xCAE5A0", VA = "0xCAE5A0")]
		public Pvr_UICanvas()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public struct UIDraggableItemEventArgs
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}
	[Token(Token = "0x2000397")]
	public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
	[Token(Token = "0x2000398")]
	public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool restrictToDropZone;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool restrictToOriginalCanvas;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveOffset;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject validDropZone;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform dragTransform;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 startPosition;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion startRotation;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject startDropZone;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform startParent;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Canvas startCanvas;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Pvr_InputModule currentInputmodule;

		[Token(Token = "0x14000035")]
		public event UIDraggableItemEventHandler DraggableItemDropped
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xCAEB3C", Offset = "0xCAEB3C", VA = "0xCAEB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D20E8", Offset = "0x7D20E8")]
			add
			{
			}
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xCAEBE4", Offset = "0xCAEBE4", VA = "0xCAEBE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D20F8", Offset = "0x7D20F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event UIDraggableItemEventHandler DraggableItemReset
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0xCAEC8C", Offset = "0xCAEC8C", VA = "0xCAEC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2108", Offset = "0x7D2108")]
			add
			{
			}
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xCAED34", Offset = "0xCAED34", VA = "0xCAED34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2118", Offset = "0x7D2118")]
			remove
			{
			}
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xCAEDDC", Offset = "0xCAEDDC", VA = "0xCAEDDC", Slot = "7")]
		public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xCAEE00", Offset = "0xCAEE00", VA = "0xCAEE00", Slot = "8")]
		public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xCAEE24", Offset = "0xCAEE24", VA = "0xCAEE24", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xCAF0CC", Offset = "0xCAF0CC", VA = "0xCAF0CC", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xCAF0D8", Offset = "0xCAF0D8", VA = "0xCAF0D8", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xCAF5F8", Offset = "0xCAF5F8", VA = "0xCAF5F8", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xCAF708", Offset = "0xCAF708", VA = "0xCAF708", Slot = "10")]
		protected virtual Pvr_UIPointer GetPointer()
		{
			return null;
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xCAF8C0", Offset = "0xCAF8C0", VA = "0xCAF8C0", Slot = "11")]
		protected virtual void SetDragPosition(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xCAFC78", Offset = "0xCAFC78", VA = "0xCAFC78", Slot = "12")]
		protected virtual void ResetElement()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xCAFD8C", Offset = "0xCAFD8C", VA = "0xCAFD8C", Slot = "13")]
		protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
		{
			return default(UIDraggableItemEventArgs);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xCAFDB4", Offset = "0xCAFDB4", VA = "0xCAFDB4")]
		public Pvr_UIDraggableItem()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Pvr_UIDraggableItem droppableItem;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xCAFDC8", Offset = "0xCAFDC8", VA = "0xCAFDC8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xCAFF1C", Offset = "0xCAFF1C", VA = "0xCAFF1C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xCAFFBC", Offset = "0xCAFFBC", VA = "0xCAFFBC")]
		public Pvr_UIDropZone()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class Pvr_UIGraphicRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD294", Offset = "0x7BD294")]
		private sealed class <>c
		{
			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__7_0;

			[Token(Token = "0x6002900")]
			[Address(RVA = "0xCB1100", Offset = "0xCB1100", VA = "0xCB1100")]
			public <>c()
			{
			}

			[Token(Token = "0x6002901")]
			[Address(RVA = "0xCB1108", Offset = "0xCB1108", VA = "0xCB1108")]
			internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Canvas currentCanvas;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector2 lastKnownPosition;

		[Token(Token = "0x4001541")]
		protected const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<RaycastResult> s_RaycastResults;

		[Token(Token = "0x1700020E")]
		protected virtual Canvas canvas
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xCB0EF0", Offset = "0xCB0EF0", VA = "0xCB0EF0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xCAFFC4", Offset = "0xCAFFC4", VA = "0xCAFFC4", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xCB01D8", Offset = "0xCB01D8", VA = "0xCB01D8", Slot = "22")]
		protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xCB0530", Offset = "0xCB0530", VA = "0xCB0530", Slot = "23")]
		protected virtual float GetHitDistance(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xCB08A0", Offset = "0xCB08A0", VA = "0xCB08A0", Slot = "24")]
		protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xCB0FB8", Offset = "0xCB0FB8", VA = "0xCB0FB8")]
		public Pvr_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public struct UIPointerEventArgs
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isActive;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject currentTarget;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject previousTarget;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastResult raycastResult;
	}
	[Token(Token = "0x200039C")]
	public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
	[Token(Token = "0x200039D")]
	public class Pvr_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x20006C2")]
		public enum ClickMethods
		{
			[Token(Token = "0x40020B2")]
			ClickOnButtonUp,
			[Token(Token = "0x40020B3")]
			ClickOnButtonDown
		}

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClickMethods clickMethod;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool collisionClick;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[HideInInspector]
		public bool pressToDrag;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject autoActivatingCanvas;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PointerEventData pointerEventData;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject hoveringElement;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float hoverDurationTimer;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool canClickOnHover;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform pointerOriginTransform;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool pointerClicked;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool beamEnabledState;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		protected bool lastPointerPressState;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		protected bool lastPointerClickState;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject currentTarget;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected EventSystem cachedEventSystem;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Pvr_InputModule cachedVRInputModule;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform originalPointerOriginTransform;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool TouchBtnValue;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool AppBtnValue;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool TriggerBtnValue;

		[Token(Token = "0x14000037")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0xCB1118", Offset = "0xCB1118", VA = "0xCB1118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2128", Offset = "0x7D2128")]
			add
			{
			}
			[Token(Token = "0x600179D")]
			[Address(RVA = "0xCB11C0", Offset = "0xCB11C0", VA = "0xCB11C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2138", Offset = "0x7D2138")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xCB1268", Offset = "0xCB1268", VA = "0xCB1268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2148", Offset = "0x7D2148")]
			add
			{
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0xCB1310", Offset = "0xCB1310", VA = "0xCB1310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2158", Offset = "0x7D2158")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event UIPointerEventHandler UIPointerElementClick
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xCB13B8", Offset = "0xCB13B8", VA = "0xCB13B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2168", Offset = "0x7D2168")]
			add
			{
			}
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xCB1460", Offset = "0xCB1460", VA = "0xCB1460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2178", Offset = "0x7D2178")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event UIPointerEventHandler UIPointerElementDragStart
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xCB1508", Offset = "0xCB1508", VA = "0xCB1508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2188", Offset = "0x7D2188")]
			add
			{
			}
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xCB15B0", Offset = "0xCB15B0", VA = "0xCB15B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2198", Offset = "0x7D2198")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event UIPointerEventHandler UIPointerElementDragEnd
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xCB1658", Offset = "0xCB1658", VA = "0xCB1658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D21A8", Offset = "0x7D21A8")]
			add
			{
			}
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xCB1700", Offset = "0xCB1700", VA = "0xCB1700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D21B8", Offset = "0x7D21B8")]
			remove
			{
			}
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xCB17A8", Offset = "0xCB17A8", VA = "0xCB17A8", Slot = "4")]
		public virtual bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xCB17B0", Offset = "0xCB17B0", VA = "0xCB17B0", Slot = "5")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xCB1890", Offset = "0xCB1890", VA = "0xCB1890", Slot = "6")]
		public virtual Vector3 GetOriginPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xCB192C", Offset = "0xCB192C", VA = "0xCB192C", Slot = "7")]
		public virtual Vector3 GetOriginForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xCB19C8", Offset = "0xCB19C8", VA = "0xCB19C8", Slot = "8")]
		public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xCB19E4", Offset = "0xCB19E4", VA = "0xCB19E4", Slot = "9")]
		protected virtual void ResetHoverTimer()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xCB19F0", Offset = "0xCB19F0", VA = "0xCB19F0", Slot = "10")]
		public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xCB1AE8", Offset = "0xCB1AE8", VA = "0xCB1AE8", Slot = "11")]
		public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xCB1BB4", Offset = "0xCB1BB4", VA = "0xCB1BB4", Slot = "12")]
		public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xCB1C80", Offset = "0xCB1C80", VA = "0xCB1C80", Slot = "13")]
		public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xCB1CCC", Offset = "0xCB1CCC", VA = "0xCB1CCC", Slot = "14")]
		public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xCB1D18", Offset = "0xCB1D18", VA = "0xCB1D18", Slot = "15")]
		public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(UIPointerEventArgs);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xCB1DD8", Offset = "0xCB1DD8", VA = "0xCB1DD8", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xCB1DEC", Offset = "0xCB1DEC", VA = "0xCB1DEC", Slot = "17")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xCB1E30", Offset = "0xCB1E30", VA = "0xCB1E30", Slot = "18")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xCB1E94", Offset = "0xCB1E94", VA = "0xCB1E94", Slot = "19")]
		protected virtual void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xCB207C", Offset = "0xCB207C", VA = "0xCB207C")]
		public Pvr_UIPointer()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[ExecuteInEditMode]
	public class Pvr_UnitySDKEditor : MonoBehaviour
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool vrModeEnabled;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float mouseX;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float mouseY;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float mouseZ;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float neckModelScale;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool autoUntiltHead;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 neckOffset;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Matrix4x4 headView;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Matrix4x4 leftEyeUndistortedProj;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Matrix4x4 rightEyeUndistortedProj;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public Matrix4x4 leftEyeProj;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public Matrix4x4 rightEyeProj;

		[Token(Token = "0x400156C")]
		private const float TOUCH_TIME_LIMIT = 0.2f;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float touchStartTime;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x112EA60", Offset = "0x112EA60", VA = "0x112EA60")]
		public Matrix4x4 UndistortedProjection(Eye eye)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x112EAAC", Offset = "0x112EAAC", VA = "0x112EAAC")]
		public Matrix4x4 Projection(Eye eye)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x112EAF8", Offset = "0x112EAF8", VA = "0x112EAF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x112ED00", Offset = "0x112ED00", VA = "0x112ED00")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x112EB0C", Offset = "0x112EB0C", VA = "0x112EB0C")]
		public void InitEyePara()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x112EC64", Offset = "0x112EC64", VA = "0x112EC64")]
		private void InitEditorSensorPara()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x112F7A0", Offset = "0x112F7A0", VA = "0x112F7A0")]
		public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x112F944", Offset = "0x112F944", VA = "0x112F944")]
		public bool UpdateStatesensor()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x112EEBC", Offset = "0x112EEBC", VA = "0x112EEBC")]
		public void ComputeEyesFromProfile()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x112FDD8", Offset = "0x112FDD8", VA = "0x112FDD8")]
		public bool ResetUnitySDKSensor()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x112EDA8", Offset = "0x112EDA8", VA = "0x112EDA8")]
		private void SimulateInput()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x112F6D0", Offset = "0x112F6D0", VA = "0x112F6D0")]
		private void FovAdjust()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x112FE8C", Offset = "0x112FE8C", VA = "0x112FE8C")]
		private Rect RectAdjust(Rect eyeRect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x112F95C", Offset = "0x112F95C", VA = "0x112F95C")]
		private void UpdateSimulatedSensor()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x112F54C", Offset = "0x112F54C", VA = "0x112F54C")]
		private void InitForEye(ref Material mat, ref Material mat1)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x112FDEC", Offset = "0x112FDEC", VA = "0x112FDEC")]
		private void EnableVEmodel()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x112FFDC", Offset = "0x112FFDC", VA = "0x112FFDC")]
		public Pvr_UnitySDKEditor()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class Pvr_VolumePowerBrightness : MonoBehaviour
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool VolEnable;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool BattEnable;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text showResult;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text setVolumnum;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text setBrightnum;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string MusicPath;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xB89A98", Offset = "0xB89A98", VA = "0xB89A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xB89B70", Offset = "0xB89B70", VA = "0xB89B70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xB89BC4", Offset = "0xB89BC4", VA = "0xB89BC4")]
		public void GetMaxVolumeNumber()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xB89C6C", Offset = "0xB89C6C", VA = "0xB89C6C")]
		public void GetCurrentVolumeNumber()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xB89D14", Offset = "0xB89D14", VA = "0xB89D14")]
		public void VolumeUp()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xB89D98", Offset = "0xB89D98", VA = "0xB89D98")]
		public void VolumeDown()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xB89E1C", Offset = "0xB89E1C", VA = "0xB89E1C")]
		public void SetVolumeNum()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xB89F44", Offset = "0xB89F44", VA = "0xB89F44")]
		public void SetBrightness()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xB8A06C", Offset = "0xB8A06C", VA = "0xB8A06C")]
		public void GetCurrentBrightness()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xB8A114", Offset = "0xB8A114", VA = "0xB8A114")]
		public bool setAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xB8A1A8", Offset = "0xB8A1A8", VA = "0xB8A1A8")]
		public bool setBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xB89B08", Offset = "0xB89B08", VA = "0xB89B08")]
		private bool InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xB89B10", Offset = "0xB89B10", VA = "0xB89B10")]
		private bool StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xB89BBC", Offset = "0xB89BBC", VA = "0xB89BBC")]
		private bool StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xB89B40", Offset = "0xB89B40", VA = "0xB89B40")]
		private bool StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xB89BB4", Offset = "0xB89BB4", VA = "0xB89BB4")]
		private bool StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xB8A23C", Offset = "0xB8A23C", VA = "0xB8A23C")]
		public Pvr_VolumePowerBrightness()
		{
		}
	}
}
namespace Pico.BoundarySystem_Ext
{
	[Token(Token = "0x20003A0")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001574")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xBF84C8", Offset = "0xBF84C8", VA = "0xBF84C8")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xBF8558", Offset = "0xBF8558", VA = "0xBF8558")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xBF85E8", Offset = "0xBF85E8", VA = "0xBF85E8")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xBF86E8", Offset = "0xBF86E8", VA = "0xBF86E8")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xBF8778", Offset = "0xBF8778", VA = "0xBF8778")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xBF8808", Offset = "0xBF8808", VA = "0xBF8808")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xBF88A0", Offset = "0xBF88A0", VA = "0xBF88A0")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xBF8930", Offset = "0xBF8930", VA = "0xBF8930")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xBF893C", Offset = "0xBF893C", VA = "0xBF893C")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xBF8978", Offset = "0xBF8978", VA = "0xBF8978")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xBF897C", Offset = "0xBF897C", VA = "0xBF897C")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60017E6")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60017E7")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20003A1")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BD2A4", Offset = "0x7BD2A4")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BD2B8", Offset = "0x7BD2B8")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20006C5")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20006C6")]
		public struct GSALine
		{
			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x20006C7")]
		public struct GSALineCollection
		{
			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x20006C8")]
		public struct GSALegalData
		{
			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20006C9")]
		public struct GSARect
		{
			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001575")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xBF8CC4", Offset = "0xBF8CC4", VA = "0xBF8CC4")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xBF8D74", Offset = "0xBF8D74", VA = "0xBF8D74")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xBF8E04", Offset = "0xBF8E04", VA = "0xBF8E04")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xBF8EA8", Offset = "0xBF8EA8", VA = "0xBF8EA8")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xBF8F4C", Offset = "0xBF8F4C", VA = "0xBF8F4C")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xBF8FEC", Offset = "0xBF8FEC", VA = "0xBF8FEC")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xBF908C", Offset = "0xBF908C", VA = "0xBF908C")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xBF9124", Offset = "0xBF9124", VA = "0xBF9124")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xBF91C4", Offset = "0xBF91C4", VA = "0xBF91C4")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xBF9264", Offset = "0xBF9264", VA = "0xBF9264")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xBF9314", Offset = "0xBF9314", VA = "0xBF9314")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xBF93DC", Offset = "0xBF93DC", VA = "0xBF93DC")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xBF93E0", Offset = "0xBF93E0", VA = "0xBF93E0")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xBF93E4", Offset = "0xBF93E4", VA = "0xBF93E4")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xBF93E8", Offset = "0xBF93E8", VA = "0xBF93E8")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xBF93EC", Offset = "0xBF93EC", VA = "0xBF93EC")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xBF93F0", Offset = "0xBF93F0", VA = "0xBF93F0")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xBF9478", Offset = "0xBF9478", VA = "0xBF9478")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xBF947C", Offset = "0xBF947C", VA = "0xBF947C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xBF9480", Offset = "0xBF9480", VA = "0xBF9480")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xBF9484", Offset = "0xBF9484", VA = "0xBF9484")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xBF948C", Offset = "0xBF948C", VA = "0xBF948C")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20003A2")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001577")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001578")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x1700020F")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xBF8980", Offset = "0xBF8980", VA = "0xBF8980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xBF8A50", Offset = "0xBF8A50", VA = "0xBF8A50")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xBF8A54", Offset = "0xBF8A54", VA = "0xBF8A54")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xBF8A58", Offset = "0xBF8A58", VA = "0xBF8A58")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xBF8A5C", Offset = "0xBF8A5C", VA = "0xBF8A5C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xBF8A04", Offset = "0xBF8A04", VA = "0xBF8A04")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20006CA")]
		public struct ExtraInfo
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20006CB")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20006CC")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20006CD")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x17000210")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xBFA9AC", Offset = "0xBFA9AC", VA = "0xBFA9AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xBFAA3C", Offset = "0xBFAA3C", VA = "0xBFAA3C")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xBFAA44", Offset = "0xBFAA44", VA = "0xBFAA44")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xBFAA4C", Offset = "0xBFAA4C", VA = "0xBFAA4C")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xBFAB94", Offset = "0xBFAB94", VA = "0xBFAB94")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xBFAF60", Offset = "0xBFAF60", VA = "0xBFAF60")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xBFAFE4", Offset = "0xBFAFE4", VA = "0xBFAFE4")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xBFB038", Offset = "0xBFB038", VA = "0xBFB038")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xBF9ACC", Offset = "0xBF9ACC", VA = "0xBF9ACC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D21C8", Offset = "0x7D21C8")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xBFA240", Offset = "0xBFA240", VA = "0xBFA240")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D222C", Offset = "0x7D222C")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xBFAA34", Offset = "0xBFAA34", VA = "0xBFAA34")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pico.Pvr_UnitySDKAPI
{
	[Token(Token = "0x20003A4")]
	public class PvrControllerKey
	{
		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x111FEC0", Offset = "0x111FEC0", VA = "0x111FEC0")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class ControllerHand
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x111FC3C", Offset = "0x111FC3C", VA = "0x111FC3C")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public enum ControllerState
	{
		[Token(Token = "0x400159D")]
		Error = -1,
		[Token(Token = "0x400159E")]
		DisConnected,
		[Token(Token = "0x400159F")]
		Connected
	}
	[Token(Token = "0x20003A7")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40015A1")]
		APP = 1,
		[Token(Token = "0x40015A2")]
		TOUCHPAD,
		[Token(Token = "0x40015A3")]
		HOME,
		[Token(Token = "0x40015A4")]
		VOLUMEUP,
		[Token(Token = "0x40015A5")]
		VOLUMEDOWN,
		[Token(Token = "0x40015A6")]
		TRIGGER,
		[Token(Token = "0x40015A7")]
		A,
		[Token(Token = "0x40015A8")]
		B,
		[Token(Token = "0x40015A9")]
		X,
		[Token(Token = "0x40015AA")]
		Y,
		[Token(Token = "0x40015AB")]
		Left,
		[Token(Token = "0x40015AC")]
		Right,
		[Token(Token = "0x40015AD")]
		Thumbrest
	}
	[Token(Token = "0x20003A8")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40015AF")]
		No,
		[Token(Token = "0x40015B0")]
		SwipeUp,
		[Token(Token = "0x40015B1")]
		SwipeDown,
		[Token(Token = "0x40015B2")]
		SwipeLeft,
		[Token(Token = "0x40015B3")]
		SwipeRight
	}
	[Token(Token = "0x20003A9")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40015B5")]
		No,
		[Token(Token = "0x40015B6")]
		ClickUp,
		[Token(Token = "0x40015B7")]
		ClickDown,
		[Token(Token = "0x40015B8")]
		ClickLeft,
		[Token(Token = "0x40015B9")]
		ClickRight
	}
	[Token(Token = "0x20003AA")]
	public struct Controller
	{
		[Token(Token = "0x40015BA")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xCAD2D8", Offset = "0xCAD2D8", VA = "0xCAD2D8")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xCBC014", Offset = "0xCBC014", VA = "0xCBC014")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xCBC1C4", Offset = "0xCBC1C4", VA = "0xCBC1C4")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xCA4768", Offset = "0xCA4768", VA = "0xCA4768")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xCBC480", Offset = "0xCBC480", VA = "0xCBC480")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xCBC5AC", Offset = "0xCBC5AC", VA = "0xCBC5AC")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xCA5768", Offset = "0xCA5768", VA = "0xCA5768")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xCA4B98", Offset = "0xCA4B98", VA = "0xCA4B98")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xCBC6D4", Offset = "0xCBC6D4", VA = "0xCBC6D4")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xCBC7B4", Offset = "0xCBC7B4", VA = "0xCBC7B4")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xCA5128", Offset = "0xCA5128", VA = "0xCA5128")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xCAC404", Offset = "0xCAC404", VA = "0xCAC404")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xCBC894", Offset = "0xCBC894", VA = "0xCBC894")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xCBCED4", Offset = "0xCBCED4", VA = "0xCBCED4")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xCBD2A4", Offset = "0xCBD2A4", VA = "0xCBD2A4")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xCBD674", Offset = "0xCBD674", VA = "0xCBD674")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xCBDA44", Offset = "0xCBDA44", VA = "0xCBDA44")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xCBE084", Offset = "0xCBE084", VA = "0xCBE084")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xCADA24", Offset = "0xCADA24", VA = "0xCADA24")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xCBE6C4", Offset = "0xCBE6C4", VA = "0xCBE6C4")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xCBE7A4", Offset = "0xCBE7A4", VA = "0xCBE7A4")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xCBE81C", Offset = "0xCBE81C", VA = "0xCBE81C")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xCBE908", Offset = "0xCBE908", VA = "0xCBE908")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xCA4554", Offset = "0xCA4554", VA = "0xCA4554")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xCA46F0", Offset = "0xCA46F0", VA = "0xCA46F0")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xCBE984", Offset = "0xCBE984", VA = "0xCBE984")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xCBEA08", Offset = "0xCBEA08", VA = "0xCBEA08")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xCBEA8C", Offset = "0xCBEA8C", VA = "0xCBEA8C")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xCBEB30", Offset = "0xCBEB30", VA = "0xCBEB30")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xCBEBB4", Offset = "0xCBEBB4", VA = "0xCBEBB4")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xCBEC38", Offset = "0xCBEC38", VA = "0xCBEC38")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xCBECBC", Offset = "0xCBECBC", VA = "0xCBECBC")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xCBED40", Offset = "0xCBED40", VA = "0xCBED40")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xCBEDBC", Offset = "0xCBEDBC", VA = "0xCBEDBC")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xCBEE38", Offset = "0xCBEE38", VA = "0xCBEE38")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xCBEF1C", Offset = "0xCBEF1C", VA = "0xCBEF1C")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xCBEF98", Offset = "0xCBEF98", VA = "0xCBEF98")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xCBF01C", Offset = "0xCBF01C", VA = "0xCBF01C")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xCBF098", Offset = "0xCBF098", VA = "0xCBF098")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xCBF11C", Offset = "0xCBF11C", VA = "0xCBF11C")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xCBF1A0", Offset = "0xCBF1A0", VA = "0xCBF1A0")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xCBF224", Offset = "0xCBF224", VA = "0xCBF224")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xCBF2A0", Offset = "0xCBF2A0", VA = "0xCBF2A0")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xCBF31C", Offset = "0xCBF31C", VA = "0xCBF31C")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xCBF3B0", Offset = "0xCBF3B0", VA = "0xCBF3B0")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xCBF434", Offset = "0xCBF434", VA = "0xCBF434")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xCBF4B8", Offset = "0xCBF4B8", VA = "0xCBF4B8")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xCBF534", Offset = "0xCBF534", VA = "0xCBF534")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xCBF5B0", Offset = "0xCBF5B0", VA = "0xCBF5B0")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xCBF62C", Offset = "0xCBF62C", VA = "0xCBF62C")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xCBF6B0", Offset = "0xCBF6B0", VA = "0xCBF6B0")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x86BA30", Offset = "0x86BA30", VA = "0x86BA30")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x86BA34", Offset = "0x86BA34", VA = "0x86BA34")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x86BA38", Offset = "0x86BA38", VA = "0x86BA38")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xCBF8B0", Offset = "0xCBF8B0", VA = "0xCBF8B0")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xCBF98C", Offset = "0xCBF98C", VA = "0xCBF98C")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xCBFA60", Offset = "0xCBFA60", VA = "0xCBFA60")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xCBFB24", Offset = "0xCBFB24", VA = "0xCBFB24")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xCBFBE4", Offset = "0xCBFBE4", VA = "0xCBFBE4")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xCBFCA4", Offset = "0xCBFCA4", VA = "0xCBFCA4")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xCBFD68", Offset = "0xCBFD68", VA = "0xCBFD68")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xCBFDEC", Offset = "0xCBFDEC", VA = "0xCBFDEC")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xCBFE70", Offset = "0xCBFE70", VA = "0xCBFE70")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0xCBF990", Offset = "0xCBF990", VA = "0xCBF990")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xCBFA64", Offset = "0xCBFA64", VA = "0xCBFA64")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0xCBFB28", Offset = "0xCBFB28", VA = "0xCBFB28")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xCBFBE8", Offset = "0xCBFBE8", VA = "0xCBFBE8")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001854")]
		[Address(RVA = "0xCBFCA8", Offset = "0xCBFCA8", VA = "0xCBFCA8")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001855")]
		[Address(RVA = "0xCBF8B4", Offset = "0xCBF8B4", VA = "0xCBF8B4")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20003AB")]
	public enum ControllerVariety
	{
		[Token(Token = "0x40015BC")]
		Controller0,
		[Token(Token = "0x40015BD")]
		Controller1
	}
	[Token(Token = "0x20003AC")]
	public enum ControllerDevice
	{
		[Token(Token = "0x40015BF")]
		Goblin,
		[Token(Token = "0x40015C0")]
		Neo,
		[Token(Token = "0x40015C1")]
		G2,
		[Token(Token = "0x40015C2")]
		Neo2,
		[Token(Token = "0x40015C3")]
		Neo3,
		[Token(Token = "0x40015C4")]
		NewController
	}
	[Token(Token = "0x20003AD")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x40015C6")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x40015C7")]
		PUI_VERSION,
		[Token(Token = "0x40015C8")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x40015C9")]
		EQUIPMENT_SN,
		[Token(Token = "0x40015CA")]
		CUSTOMER_SN,
		[Token(Token = "0x40015CB")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x40015CC")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x40015CD")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x40015CE")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x40015CF")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x40015D0")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x40015D1")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x40015D2")]
		DEVICE_IP
	}
	[Token(Token = "0x20003AE")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x40015D4")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x40015D5")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20003AF")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x40015D7")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x40015D8")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20003B0")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x40015DA")]
		S_ON,
		[Token(Token = "0x40015DB")]
		S_OFF
	}
	[Token(Token = "0x20003B1")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x40015DD")]
		SINGLE_CLICK,
		[Token(Token = "0x40015DE")]
		DOUBLE_CLICK,
		[Token(Token = "0x40015DF")]
		LONG_PRESS
	}
	[Token(Token = "0x20003B2")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x40015E1")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x40015E2")]
		VALUE_HOME_BACK,
		[Token(Token = "0x40015E3")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x40015E4")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x40015E5")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x40015E6")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x40015E7")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x40015E8")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20003B3")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x40015EA")]
		THREE = 3,
		[Token(Token = "0x40015EB")]
		TEN = 10,
		[Token(Token = "0x40015EC")]
		THIRTY = 30,
		[Token(Token = "0x40015ED")]
		SIXTY = 60,
		[Token(Token = "0x40015EE")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40015EF")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40015F0")]
		NEVER = -1
	}
	[Token(Token = "0x20003B4")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x40015F2")]
		FIFTEEN = 15,
		[Token(Token = "0x40015F3")]
		THIRTY = 30,
		[Token(Token = "0x40015F4")]
		SIXTY = 60,
		[Token(Token = "0x40015F5")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40015F6")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40015F7")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x40015F8")]
		NEVER = -1
	}
	[Token(Token = "0x20003B5")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x40015FA")]
		SFS_USB,
		[Token(Token = "0x40015FB")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x40015FC")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x40015FD")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x40015FE")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x40015FF")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001600")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001601")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001602")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001603")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001604")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001605")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001606")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001607")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20003B6")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001609")]
		MTP,
		[Token(Token = "0x400160A")]
		CHARGE
	}
	[Token(Token = "0x20003B7")]
	public struct ToBService
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1129D4C", Offset = "0x1129D4C", VA = "0x1129D4C")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1129EC4", Offset = "0x1129EC4", VA = "0x1129EC4")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1129FAC", Offset = "0x1129FAC", VA = "0x1129FAC")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x112A09C", Offset = "0x112A09C", VA = "0x112A09C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x112A18C", Offset = "0x112A18C", VA = "0x112A18C")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x112A2BC", Offset = "0x112A2BC", VA = "0x112A2BC")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x112A464", Offset = "0x112A464", VA = "0x112A464")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x112A598", Offset = "0x112A598", VA = "0x112A598")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x112A79C", Offset = "0x112A79C", VA = "0x112A79C")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x112A97C", Offset = "0x112A97C", VA = "0x112A97C")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x112AA00", Offset = "0x112AA00", VA = "0x112AA00")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x112ABB4", Offset = "0x112ABB4", VA = "0x112ABB4")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x112AE9C", Offset = "0x112AE9C", VA = "0x112AE9C")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x112B03C", Offset = "0x112B03C", VA = "0x112B03C")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x112B170", Offset = "0x112B170", VA = "0x112B170")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x112B280", Offset = "0x112B280", VA = "0x112B280")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x112B480", Offset = "0x112B480", VA = "0x112B480")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x112B600", Offset = "0x112B600", VA = "0x112B600")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x112B674", Offset = "0x112B674", VA = "0x112B674")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x112B6E8", Offset = "0x112B6E8", VA = "0x112B6E8")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x112B75C", Offset = "0x112B75C", VA = "0x112B75C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x112B7D0", Offset = "0x112B7D0", VA = "0x112B7D0")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x112B844", Offset = "0x112B844", VA = "0x112B844")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x112B8B8", Offset = "0x112B8B8", VA = "0x112B8B8")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x112B92C", Offset = "0x112B92C", VA = "0x112B92C")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x112B9A0", Offset = "0x112B9A0", VA = "0x112B9A0")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x112BA14", Offset = "0x112BA14", VA = "0x112BA14")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x112BA88", Offset = "0x112BA88", VA = "0x112BA88")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x112BBEC", Offset = "0x112BBEC", VA = "0x112BBEC")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001613")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001614")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001615")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001616")]
		ABILITY6DOF,
		[Token(Token = "0x4001617")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001618")]
		TRACKING_MODE,
		[Token(Token = "0x4001619")]
		LOG_LEVEL,
		[Token(Token = "0x400161A")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x400161B")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x400161C")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x400161D")]
		iShowFPS,
		[Token(Token = "0x400161E")]
		SensorMode,
		[Token(Token = "0x400161F")]
		LOGICFLOW,
		[Token(Token = "0x4001620")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001621")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001622")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001623")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001624")]
		isEnableBoundary,
		[Token(Token = "0x4001625")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001626")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001627")]
		GetWaitFrameNum,
		[Token(Token = "0x4001628")]
		GetResetFrameNum,
		[Token(Token = "0x4001629")]
		EnableFFRBYSYS,
		[Token(Token = "0x400162A")]
		RotControllerMode
	}
	[Token(Token = "0x20003B9")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x400162C")]
		IPD,
		[Token(Token = "0x400162D")]
		VFOV,
		[Token(Token = "0x400162E")]
		HFOV,
		[Token(Token = "0x400162F")]
		NECK_MODEL_X,
		[Token(Token = "0x4001630")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001631")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001632")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20003BA")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001634")]
		X_1 = 1,
		[Token(Token = "0x4001635")]
		X_2 = 2,
		[Token(Token = "0x4001636")]
		X_4 = 4,
		[Token(Token = "0x4001637")]
		X_8 = 8
	}
	[Token(Token = "0x20003BB")]
	public enum PlatForm
	{
		[Token(Token = "0x4001639")]
		Android = 1,
		[Token(Token = "0x400163A")]
		IOS,
		[Token(Token = "0x400163B")]
		Win,
		[Token(Token = "0x400163C")]
		Notsupport
	}
	[Token(Token = "0x20003BC")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x400163E")]
		BD_0 = 0,
		[Token(Token = "0x400163F")]
		BD_16 = 16,
		[Token(Token = "0x4001640")]
		BD_24 = 24
	}
	[Token(Token = "0x20003BD")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001642")]
		Normal,
		[Token(Token = "0x4001643")]
		High
	}
	[Token(Token = "0x20003BE")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001645")]
		Default,
		[Token(Token = "0x4001646")]
		FirstSensor,
		[Token(Token = "0x4001647")]
		SecondSensor
	}
	[Token(Token = "0x20003BF")]
	public enum Eye
	{
		[Token(Token = "0x4001649")]
		LeftEye,
		[Token(Token = "0x400164A")]
		RightEye,
		[Token(Token = "0x400164B")]
		BothEye
	}
	[Token(Token = "0x20003C0")]
	public enum ResUtilsType
	{
		[Token(Token = "0x400164D")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x400164E")]
		TYPE_COLOR,
		[Token(Token = "0x400164F")]
		TYPE_TEXT,
		[Token(Token = "0x4001650")]
		TYPE_FONT,
		[Token(Token = "0x4001651")]
		TYPE_VALUE,
		[Token(Token = "0x4001652")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001653")]
		TYPE_OBJECT,
		[Token(Token = "0x4001654")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20003C1")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001656")]
		EyeLevel,
		[Token(Token = "0x4001657")]
		FloorLevel,
		[Token(Token = "0x4001658")]
		StageLevel
	}
	[Token(Token = "0x20003C2")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x400165A")]
		Low,
		[Token(Token = "0x400165B")]
		Med,
		[Token(Token = "0x400165C")]
		High,
		[Token(Token = "0x400165D")]
		Top_High
	}
	[Token(Token = "0x20003C3")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x400165F")]
		MultiPass,
		[Token(Token = "0x4001660")]
		SinglePass
	}
	[Token(Token = "0x20003C4")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001662")]
		kGazePointValid = 1,
		[Token(Token = "0x4001663")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001664")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001665")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001666")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20003C5")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001668")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001669")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x400166A")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20003C6")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20003C7")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20003C8")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20003C9")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20003CA")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20003CB")]
	public struct Sensor
	{
		[Token(Token = "0x400168E")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0x11282F8", Offset = "0x11282F8", VA = "0x11282F8")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1128398", Offset = "0x1128398", VA = "0x1128398")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0x112844C", Offset = "0x112844C", VA = "0x112844C")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6001876")]
		[Address(RVA = "0x11284EC", Offset = "0x11284EC", VA = "0x11284EC")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001877")]
		[Address(RVA = "0x112858C", Offset = "0x112858C", VA = "0x112858C")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001878")]
		[Address(RVA = "0x112862C", Offset = "0x112862C", VA = "0x112862C")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001879")]
		[Address(RVA = "0x11286CC", Offset = "0x11286CC", VA = "0x11286CC")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x600187A")]
		[Address(RVA = "0x112876C", Offset = "0x112876C", VA = "0x112876C")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x600187B")]
		[Address(RVA = "0x1128864", Offset = "0x1128864", VA = "0x1128864")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1128964", Offset = "0x1128964", VA = "0x1128964")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x11289F4", Offset = "0x11289F4", VA = "0x11289F4")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1128A84", Offset = "0x1128A84", VA = "0x1128A84")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600187F")]
		[Address(RVA = "0x1128B4C", Offset = "0x1128B4C", VA = "0x1128B4C")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1128C14", Offset = "0x1128C14", VA = "0x1128C14")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001881")]
		[Address(RVA = "0x1128CA4", Offset = "0x1128CA4", VA = "0x1128CA4")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1128D3C", Offset = "0x1128D3C", VA = "0x1128D3C")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1128E4C", Offset = "0x1128E4C", VA = "0x1128E4C")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1128EF4", Offset = "0x1128EF4", VA = "0x1128EF4")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1128EF8", Offset = "0x1128EF8", VA = "0x1128EF8")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1128EFC", Offset = "0x1128EFC", VA = "0x1128EFC")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x112910C", Offset = "0x112910C", VA = "0x112910C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x11292F8", Offset = "0x11292F8", VA = "0x11292F8")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x11292FC", Offset = "0x11292FC", VA = "0x11292FC")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1129478", Offset = "0x1129478", VA = "0x1129478")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x112947C", Offset = "0x112947C", VA = "0x112947C")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1129480", Offset = "0x1129480", VA = "0x1129480")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x11294FC", Offset = "0x11294FC", VA = "0x11294FC")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1129500", Offset = "0x1129500", VA = "0x1129500")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1129504", Offset = "0x1129504", VA = "0x1129504")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1129510", Offset = "0x1129510", VA = "0x1129510")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1129514", Offset = "0x1129514", VA = "0x1129514")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x1129518", Offset = "0x1129518", VA = "0x1129518")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x112951C", Offset = "0x112951C", VA = "0x112951C")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x1128F00", Offset = "0x1128F00", VA = "0x1128F00")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1129524", Offset = "0x1129524", VA = "0x1129524")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1129160", Offset = "0x1129160", VA = "0x1129160")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1129300", Offset = "0x1129300", VA = "0x1129300")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x112976C", Offset = "0x112976C", VA = "0x112976C")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1129770", Offset = "0x1129770", VA = "0x1129770")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1129D48", Offset = "0x1129D48", VA = "0x1129D48")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003CC")]
	public struct Render
	{
		[Token(Token = "0x400168F")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1126328", Offset = "0x1126328", VA = "0x1126328")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1126418", Offset = "0x1126418", VA = "0x1126418")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600189D")]
		[Address(RVA = "0x11264C0", Offset = "0x11264C0", VA = "0x11264C0")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1126560", Offset = "0x1126560", VA = "0x1126560")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x600189F")]
		[Address(RVA = "0x11265F0", Offset = "0x11265F0", VA = "0x11265F0")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x11266A0", Offset = "0x11266A0", VA = "0x11266A0")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x112674C", Offset = "0x112674C", VA = "0x112674C")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x11267F8", Offset = "0x11267F8", VA = "0x11267F8")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x11268E0", Offset = "0x11268E0", VA = "0x11268E0")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x11269E0", Offset = "0x11269E0", VA = "0x11269E0")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1126B40", Offset = "0x1126B40", VA = "0x1126B40")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1126BE8", Offset = "0x1126BE8", VA = "0x1126BE8")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1126CE0", Offset = "0x1126CE0", VA = "0x1126CE0")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1126DA8", Offset = "0x1126DA8", VA = "0x1126DA8")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1126E6C", Offset = "0x1126E6C", VA = "0x1126E6C")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1126F0C", Offset = "0x1126F0C", VA = "0x1126F0C")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1126F9C", Offset = "0x1126F9C", VA = "0x1126F9C")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1127068", Offset = "0x1127068", VA = "0x1127068")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1127108", Offset = "0x1127108", VA = "0x1127108")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x11271A8", Offset = "0x11271A8", VA = "0x11271A8")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1127258", Offset = "0x1127258", VA = "0x1127258")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1127308", Offset = "0x1127308", VA = "0x1127308")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x11273A8", Offset = "0x11273A8", VA = "0x11273A8")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1127478", Offset = "0x1127478", VA = "0x1127478")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x112747C", Offset = "0x112747C", VA = "0x112747C")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1127480", Offset = "0x1127480", VA = "0x1127480")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1127668", Offset = "0x1127668", VA = "0x1127668")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D2290", Offset = "0x7D2290")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x112766C", Offset = "0x112766C", VA = "0x112766C")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1127670", Offset = "0x1127670", VA = "0x1127670")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1127784", Offset = "0x1127784", VA = "0x1127784")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1127788", Offset = "0x1127788", VA = "0x1127788")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x11278CC", Offset = "0x11278CC", VA = "0x11278CC")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x11278D0", Offset = "0x11278D0", VA = "0x11278D0")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x11278D4", Offset = "0x11278D4", VA = "0x11278D4")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x11278D8", Offset = "0x11278D8", VA = "0x11278D8")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1127964", Offset = "0x1127964", VA = "0x1127964")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1127968", Offset = "0x1127968", VA = "0x1127968")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1127B3C", Offset = "0x1127B3C", VA = "0x1127B3C")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1127B40", Offset = "0x1127B40", VA = "0x1127B40")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x11282DC", Offset = "0x11282DC", VA = "0x11282DC")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x11282E0", Offset = "0x11282E0", VA = "0x11282E0")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x11282E4", Offset = "0x11282E4", VA = "0x11282E4")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x11282E8", Offset = "0x11282E8", VA = "0x11282E8")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x11282EC", Offset = "0x11282EC", VA = "0x11282EC")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x11282F4", Offset = "0x11282F4", VA = "0x11282F4")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public struct PicoSys
	{
		[Token(Token = "0x4001690")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001691")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x111FEE8", Offset = "0x111FEE8", VA = "0x111FEE8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x111FF98", Offset = "0x111FF98", VA = "0x111FF98")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1120028", Offset = "0x1120028", VA = "0x1120028")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x11200B8", Offset = "0x11200B8", VA = "0x11200B8")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1120148", Offset = "0x1120148", VA = "0x1120148")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x11201D8", Offset = "0x11201D8", VA = "0x11201D8")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1120268", Offset = "0x1120268", VA = "0x1120268")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x11202F8", Offset = "0x11202F8", VA = "0x11202F8")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1120398", Offset = "0x1120398", VA = "0x1120398")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x11204F0", Offset = "0x11204F0", VA = "0x11204F0")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1120598", Offset = "0x1120598", VA = "0x1120598")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1120628", Offset = "0x1120628", VA = "0x1120628")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x11206B8", Offset = "0x11206B8", VA = "0x11206B8")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1120758", Offset = "0x1120758", VA = "0x1120758")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1120800", Offset = "0x1120800", VA = "0x1120800")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x11208A0", Offset = "0x11208A0", VA = "0x11208A0")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1120930", Offset = "0x1120930", VA = "0x1120930")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x11209D0", Offset = "0x11209D0", VA = "0x11209D0")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x1120A88", Offset = "0x1120A88", VA = "0x1120A88")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1120B38", Offset = "0x1120B38", VA = "0x1120B38")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x1120BE4", Offset = "0x1120BE4", VA = "0x1120BE4")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1120C74", Offset = "0x1120C74", VA = "0x1120C74")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1120D1C", Offset = "0x1120D1C", VA = "0x1120D1C")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x1120DB4", Offset = "0x1120DB4", VA = "0x1120DB4")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1120E5C", Offset = "0x1120E5C", VA = "0x1120E5C")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x60018E1")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1120EEC", Offset = "0x1120EEC", VA = "0x1120EEC")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E3")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1121198", Offset = "0x1121198", VA = "0x1121198")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1121444", Offset = "0x1121444", VA = "0x1121444")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x11214D8", Offset = "0x11214D8", VA = "0x11214D8")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x1121520", Offset = "0x1121520", VA = "0x1121520")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x1121528", Offset = "0x1121528", VA = "0x1121528")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1121530", Offset = "0x1121530", VA = "0x1121530")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x11215E4", Offset = "0x11215E4", VA = "0x11215E4")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x1121670", Offset = "0x1121670", VA = "0x1121670")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x11216DC", Offset = "0x11216DC", VA = "0x11216DC")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x112176C", Offset = "0x112176C", VA = "0x112176C")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x11217FC", Offset = "0x11217FC", VA = "0x11217FC")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x1121888", Offset = "0x1121888", VA = "0x1121888")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x1121B48", Offset = "0x1121B48", VA = "0x1121B48")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1121DAC", Offset = "0x1121DAC", VA = "0x1121DAC")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x1121E38", Offset = "0x1121E38", VA = "0x1121E38")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1121EC4", Offset = "0x1121EC4", VA = "0x1121EC4")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x1121F50", Offset = "0x1121F50", VA = "0x1121F50")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x112207C", Offset = "0x112207C", VA = "0x112207C")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x1122108", Offset = "0x1122108", VA = "0x1122108")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x1122238", Offset = "0x1122238", VA = "0x1122238")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x1122700", Offset = "0x1122700", VA = "0x1122700")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x11227C0", Offset = "0x11227C0", VA = "0x11227C0")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x11227C8", Offset = "0x11227C8", VA = "0x11227C8")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x11227CC", Offset = "0x11227CC", VA = "0x11227CC")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x11227D0", Offset = "0x11227D0", VA = "0x11227D0")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x11227D4", Offset = "0x11227D4", VA = "0x11227D4")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x1122854", Offset = "0x1122854", VA = "0x1122854")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x11229CC", Offset = "0x11229CC", VA = "0x11229CC")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x11229D0", Offset = "0x11229D0", VA = "0x11229D0")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x1122A64", Offset = "0x1122A64", VA = "0x1122A64")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x1122AF8", Offset = "0x1122AF8", VA = "0x1122AF8")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x1122AFC", Offset = "0x1122AFC", VA = "0x1122AFC")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1122B00", Offset = "0x1122B00", VA = "0x1122B00")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1122B08", Offset = "0x1122B08", VA = "0x1122B08")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1122B0C", Offset = "0x1122B0C", VA = "0x1122B0C")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1122B10", Offset = "0x1122B10", VA = "0x1122B10")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1122D7C", Offset = "0x1122D7C", VA = "0x1122D7C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1122FEC", Offset = "0x1122FEC", VA = "0x1122FEC")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1123300", Offset = "0x1123300", VA = "0x1123300")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x1123684", Offset = "0x1123684", VA = "0x1123684")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x11237A8", Offset = "0x11237A8", VA = "0x11237A8")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x1123930", Offset = "0x1123930", VA = "0x1123930")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x1123C50", Offset = "0x1123C50", VA = "0x1123C50")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x1123C58", Offset = "0x1123C58", VA = "0x1123C58")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x1123C5C", Offset = "0x1123C5C", VA = "0x1123C5C")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1123C60", Offset = "0x1123C60", VA = "0x1123C60")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1123C64", Offset = "0x1123C64", VA = "0x1123C64")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1123C68", Offset = "0x1123C68", VA = "0x1123C68")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1123C6C", Offset = "0x1123C6C", VA = "0x1123C6C")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x1123E6C", Offset = "0x1123E6C", VA = "0x1123E6C")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x112406C", Offset = "0x112406C", VA = "0x112406C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1124274", Offset = "0x1124274", VA = "0x1124274")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x112447C", Offset = "0x112447C", VA = "0x112447C")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x112467C", Offset = "0x112467C", VA = "0x112467C")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1124884", Offset = "0x1124884", VA = "0x1124884")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x1124B10", Offset = "0x1124B10", VA = "0x1124B10")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1124D94", Offset = "0x1124D94", VA = "0x1124D94")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x1124F94", Offset = "0x1124F94", VA = "0x1124F94")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1125220", Offset = "0x1125220", VA = "0x1125220")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003CE")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20006CE")]
		public enum BoundaryType
		{
			[Token(Token = "0x40020DC")]
			OuterBoundary,
			[Token(Token = "0x40020DD")]
			PlayArea
		}

		[Token(Token = "0x20006CF")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20006D0")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40020E3")]
			HandLeft,
			[Token(Token = "0x40020E4")]
			HandRight,
			[Token(Token = "0x40020E5")]
			Head
		}

		[Token(Token = "0x20006D1")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40020E7")]
			PVR_NOREASON,
			[Token(Token = "0x40020E8")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40020E9")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40020EA")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40020EB")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40020EC")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001692")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600191F")]
		[Address(RVA = "0xCBA3BC", Offset = "0xCBA3BC", VA = "0xCBA3BC")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6001920")]
		[Address(RVA = "0xCBA44C", Offset = "0xCBA44C", VA = "0xCBA44C")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001921")]
		[Address(RVA = "0xCBA4DC", Offset = "0xCBA4DC", VA = "0xCBA4DC")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001922")]
		[Address(RVA = "0xCBA57C", Offset = "0xCBA57C", VA = "0xCBA57C")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001923")]
		[Address(RVA = "0xCBA60C", Offset = "0xCBA60C", VA = "0xCBA60C")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001924")]
		[Address(RVA = "0xCBA6A4", Offset = "0xCBA6A4", VA = "0xCBA6A4")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001925")]
		[Address(RVA = "0xCBA73C", Offset = "0xCBA73C", VA = "0xCBA73C")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001926")]
		[Address(RVA = "0xCBA7D4", Offset = "0xCBA7D4", VA = "0xCBA7D4")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001927")]
		[Address(RVA = "0xCBA8F4", Offset = "0xCBA8F4", VA = "0xCBA8F4")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xCBAA3C", Offset = "0xCBAA3C", VA = "0xCBAA3C")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001929")]
		[Address(RVA = "0xCBAAE8", Offset = "0xCBAAE8", VA = "0xCBAAE8")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600192A")]
		[Address(RVA = "0xCBABB0", Offset = "0xCBABB0", VA = "0xCBABB0")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x600192B")]
		[Address(RVA = "0xCBAC48", Offset = "0xCBAC48", VA = "0xCBAC48")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600192C")]
		[Address(RVA = "0xCBACE8", Offset = "0xCBACE8", VA = "0xCBACE8")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xCBAD80", Offset = "0xCBAD80", VA = "0xCBAD80")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x600192E")]
		[Address(RVA = "0xCBAE28", Offset = "0xCBAE28", VA = "0xCBAE28")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x600192F")]
		[Address(RVA = "0xCBAEE0", Offset = "0xCBAEE0", VA = "0xCBAEE0")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x6001930")]
		[Address(RVA = "0xCBAF80", Offset = "0xCBAF80", VA = "0xCBAF80")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001931")]
		[Address(RVA = "0xCBB030", Offset = "0xCBB030", VA = "0xCBB030")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6001932")]
		[Address(RVA = "0xCBB0D0", Offset = "0xCBB0D0", VA = "0xCBB0D0")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xCBB160", Offset = "0xCBB160", VA = "0xCBB160")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xCBB164", Offset = "0xCBB164", VA = "0xCBB164")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xCBB168", Offset = "0xCBB168", VA = "0xCBB168")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xCBB170", Offset = "0xCBB170", VA = "0xCBB170")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xCBB174", Offset = "0xCBB174", VA = "0xCBB174")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xCBB178", Offset = "0xCBB178", VA = "0xCBB178")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xCBB17C", Offset = "0xCBB17C", VA = "0xCBB17C")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xCBB180", Offset = "0xCBB180", VA = "0xCBB180")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xCBB2C4", Offset = "0xCBB2C4", VA = "0xCBB2C4")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xCBB414", Offset = "0xCBB414", VA = "0xCBB414")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xCBB66C", Offset = "0xCBB66C", VA = "0xCBB66C")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xCBB6C8", Offset = "0xCBB6C8", VA = "0xCBB6C8")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xCBB6CC", Offset = "0xCBB6CC", VA = "0xCBB6CC")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xCBB6D4", Offset = "0xCBB6D4", VA = "0xCBB6D4")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xCBB6D8", Offset = "0xCBB6D8", VA = "0xCBB6D8")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xCBB6E0", Offset = "0xCBB6E0", VA = "0xCBB6E0")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xCBB6E4", Offset = "0xCBB6E4", VA = "0xCBB6E4")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xCBB82C", Offset = "0xCBB82C", VA = "0xCBB82C")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xCBB974", Offset = "0xCBB974", VA = "0xCBB974")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xCBBB68", Offset = "0xCBBB68", VA = "0xCBBB68")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xCBBCA4", Offset = "0xCBBCA4", VA = "0xCBBCA4")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xCBBDCC", Offset = "0xCBBDCC", VA = "0xCBBDCC")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xCBBEF4", Offset = "0xCBBEF4", VA = "0xCBBEF4")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003CF")]
	public struct PlatformSettings
	{
		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1125420", Offset = "0x1125420", VA = "0x1125420")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x112565C", Offset = "0x112565C", VA = "0x112565C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1125984", Offset = "0x1125984", VA = "0x1125984")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D22C8", Offset = "0x7D22C8")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1125CAC", Offset = "0x1125CAC", VA = "0x1125CAC")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1125FE8", Offset = "0x1125FE8", VA = "0x1125FE8")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1126324", Offset = "0x1126324", VA = "0x1126324")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003D0")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001694")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001695")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20003D1")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001697")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001698")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001699")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x400169A")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x400169B")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20003D2")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x400169C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0x112BC70", Offset = "0x112BC70", VA = "0x112BC70")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001951")]
		[Address(RVA = "0x112BD20", Offset = "0x112BD20", VA = "0x112BD20")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001952")]
		[Address(RVA = "0x112BDB8", Offset = "0x112BDB8", VA = "0x112BDB8")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x112BE48", Offset = "0x112BE48", VA = "0x112BE48")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x112BEF0", Offset = "0x112BEF0", VA = "0x112BEF0")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x112BEF4", Offset = "0x112BEF4", VA = "0x112BEF4")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x112BEF8", Offset = "0x112BEF8", VA = "0x112BEF8")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x112BEFC", Offset = "0x112BEFC", VA = "0x112BEFC")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x112C1C0", Offset = "0x112C1C0", VA = "0x112C1C0")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x112C400", Offset = "0x112C400", VA = "0x112C400")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x112C590", Offset = "0x112C590", VA = "0x112C590")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x112C7F8", Offset = "0x112C7F8", VA = "0x112C7F8")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x112C998", Offset = "0x112C998", VA = "0x112C998")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x112CAE8", Offset = "0x112CAE8", VA = "0x112CAE8")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x112CD0C", Offset = "0x112CD0C", VA = "0x112CD0C")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x112D028", Offset = "0x112D028", VA = "0x112D028")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x112D294", Offset = "0x112D294", VA = "0x112D294")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x112BF34", Offset = "0x112BF34", VA = "0x112BF34")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x112C1E0", Offset = "0x112C1E0", VA = "0x112C1E0")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x112C404", Offset = "0x112C404", VA = "0x112C404")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x112C594", Offset = "0x112C594", VA = "0x112C594")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x112D4A4", Offset = "0x112D4A4", VA = "0x112D4A4")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x112D710", Offset = "0x112D710", VA = "0x112D710")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x112D920", Offset = "0x112D920", VA = "0x112D920")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x112DA98", Offset = "0x112DA98", VA = "0x112DA98")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x112DC10", Offset = "0x112DC10", VA = "0x112DC10")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x112DD70", Offset = "0x112DD70", VA = "0x112DD70")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x112DED0", Offset = "0x112DED0", VA = "0x112DED0")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x112E0C0", Offset = "0x112E0C0", VA = "0x112E0C0")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x112E0C8", Offset = "0x112E0C8", VA = "0x112E0C8")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x112C99C", Offset = "0x112C99C", VA = "0x112C99C")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x112C7FC", Offset = "0x112C7FC", VA = "0x112C7FC")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pico.Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20003D3")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xCB3EB4", Offset = "0xCB3EB4", VA = "0xCB3EB4")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xCB3F1C", Offset = "0xCB3F1C", VA = "0xCB3F1C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xCB3F20", Offset = "0xCB3F20", VA = "0xCB3F20")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xCB40E4", Offset = "0xCB40E4", VA = "0xCB40E4")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xCB41E0", Offset = "0xCB41E0", VA = "0xCB41E0")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public static class Achievements
	{
		[Token(Token = "0x6001976")]
		[Address(RVA = "0xCB4248", Offset = "0xCB4248", VA = "0xCB4248")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xCB47A0", Offset = "0xCB47A0", VA = "0xCB47A0")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xCB4A74", Offset = "0xCB4A74", VA = "0xCB4A74")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xCB4D28", Offset = "0xCB4D28", VA = "0xCB4D28")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xCB4FBC", Offset = "0xCB4FBC", VA = "0xCB4FBC")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xCB51A0", Offset = "0xCB51A0", VA = "0xCB51A0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xCB5434", Offset = "0xCB5434", VA = "0xCB5434")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xCB5678", Offset = "0xCB5678", VA = "0xCB5678")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xCB58BC", Offset = "0xCB58BC", VA = "0xCB58BC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xCB5CBC", Offset = "0xCB5CBC", VA = "0xCB5CBC")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D5")]
	public enum AchievementType
	{
		[Token(Token = "0x40016A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5834", Offset = "0x7C5834")]
		Unknown,
		[Token(Token = "0x40016A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C586C", Offset = "0x7C586C")]
		Simple,
		[Token(Token = "0x40016A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C58A4", Offset = "0x7C58A4")]
		Bitfield,
		[Token(Token = "0x40016A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C58DC", Offset = "0x7C58DC")]
		Count
	}
	[Token(Token = "0x20003D6")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xCB430C", Offset = "0xCB430C", VA = "0xCB430C")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xCB3F7C", Offset = "0xCB3F7C", VA = "0xCB3F7C")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xCB4140", Offset = "0xCB4140", VA = "0xCB4140")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xCB6708", Offset = "0xCB6708", VA = "0xCB6708")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xCB67B0", Offset = "0xCB67B0", VA = "0xCB67B0")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xCB68C8", Offset = "0xCB68C8", VA = "0xCB68C8")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xCB69E0", Offset = "0xCB69E0", VA = "0xCB69E0")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xCB487C", Offset = "0xCB487C", VA = "0xCB487C")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xCB4B50", Offset = "0xCB4B50", VA = "0xCB4B50")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xCB4DEC", Offset = "0xCB4DEC", VA = "0xCB4DEC")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xCB5080", Offset = "0xCB5080", VA = "0xCB5080")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xCB526C", Offset = "0xCB526C", VA = "0xCB526C")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xCB5500", Offset = "0xCB5500", VA = "0xCB5500")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xCB5744", Offset = "0xCB5744", VA = "0xCB5744")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xCB5A10", Offset = "0xCB5A10", VA = "0xCB5A10")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xCB6AF8", Offset = "0xCB6AF8", VA = "0xCB6AF8")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xCB6BC4", Offset = "0xCB6BC4", VA = "0xCB6BC4")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xCB6C44", Offset = "0xCB6C44", VA = "0xCB6C44")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xCB6688", Offset = "0xCB6688", VA = "0xCB6688")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xCB6CC4", Offset = "0xCB6CC4", VA = "0xCB6CC4")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xCB6DDC", Offset = "0xCB6DDC", VA = "0xCB6DDC")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xCB6EF4", Offset = "0xCB6EF4", VA = "0xCB6EF4")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xCB700C", Offset = "0xCB700C", VA = "0xCB700C")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xCB71A4", Offset = "0xCB71A4", VA = "0xCB71A4")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xCB72BC", Offset = "0xCB72BC", VA = "0xCB72BC")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xCB73D4", Offset = "0xCB73D4", VA = "0xCB73D4")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xCB74EC", Offset = "0xCB74EC", VA = "0xCB74EC")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xCB7604", Offset = "0xCB7604", VA = "0xCB7604")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xCB771C", Offset = "0xCB771C", VA = "0xCB771C")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xCB7870", Offset = "0xCB7870", VA = "0xCB7870")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xCB78E0", Offset = "0xCB78E0", VA = "0xCB78E0")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xCB79F8", Offset = "0xCB79F8", VA = "0xCB79F8")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xCB7B90", Offset = "0xCB7B90", VA = "0xCB7B90")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xCB7CA8", Offset = "0xCB7CA8", VA = "0xCB7CA8")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xCB7E0C", Offset = "0xCB7E0C", VA = "0xCB7E0C")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xCB7F24", Offset = "0xCB7F24", VA = "0xCB7F24")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xCB803C", Offset = "0xCB803C", VA = "0xCB803C")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xCB8154", Offset = "0xCB8154", VA = "0xCB8154")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xCB826C", Offset = "0xCB826C", VA = "0xCB826C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xCB8384", Offset = "0xCB8384", VA = "0xCB8384")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xCB849C", Offset = "0xCB849C", VA = "0xCB849C")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xCB85B4", Offset = "0xCB85B4", VA = "0xCB85B4")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xCB86CC", Offset = "0xCB86CC", VA = "0xCB86CC")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xCB87E4", Offset = "0xCB87E4", VA = "0xCB87E4")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xCB8A44", Offset = "0xCB8A44", VA = "0xCB8A44")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xCB5F6C", Offset = "0xCB5F6C", VA = "0xCB5F6C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xCB8B98", Offset = "0xCB8B98", VA = "0xCB8B98")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xCB6220", Offset = "0xCB6220", VA = "0xCB6220")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xCB64D4", Offset = "0xCB64D4", VA = "0xCB64D4")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7BB7A4", Offset = "0x7BB7A4")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x17000211")]
		public int Count
		{
			[Token(Token = "0x60019B2")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000212")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60019B3")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000213")]
		public T Item
		{
			[Token(Token = "0x60019B5")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60019B6")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public bool HasNextPage
		{
			[Token(Token = "0x60019C1")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000215")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60019C2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public string NextUrl
		{
			[Token(Token = "0x60019C3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public string PreviousUrl
		{
			[Token(Token = "0x60019C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B4")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60019B7")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60019B8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019B9")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60019BB")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60019BD")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60019BF")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60019C5")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x20006D2")]
		private class RequestCallback
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6002912")]
			[Address(RVA = "0xCB92F4", Offset = "0xCB92F4", VA = "0xCB92F4")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0xCB92FC", Offset = "0xCB92FC", VA = "0xCB92FC")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0xCB9330", Offset = "0xCB9330", VA = "0xCB9330", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x20006D3")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002915")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002916")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xCB8C70", Offset = "0xCB8C70", VA = "0xCB8C70")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xCB8E08", Offset = "0xCB8E08", VA = "0xCB8E08")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xCB90EC", Offset = "0xCB90EC", VA = "0xCB90EC")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xCB9184", Offset = "0xCB9184", VA = "0xCB9184")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xCB8EE4", Offset = "0xCB8EE4", VA = "0xCB8EE4")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xCB96F4", Offset = "0xCB96F4", VA = "0xCB96F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xCB97F0", Offset = "0xCB97F0", VA = "0xCB97F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xCB987C", Offset = "0xCB987C", VA = "0xCB987C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xCB98D8", Offset = "0xCB98D8", VA = "0xCB98D8")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x20006D4")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000218")]
		public T Data
		{
			[Token(Token = "0x60019D1")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60019D0")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019D2")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20003E0")]
	public class Pvr_Message
	{
		[Token(Token = "0x20006D5")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x20006D6")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40020F0")]
			Unknown = 0u,
			[Token(Token = "0x40020F1")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40020F2")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40020F3")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40020F4")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40020F5")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40020F6")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40020F7")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40020F8")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40020F9")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40020FA")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40020FB")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x20006D7")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5914", Offset = "0x7C5914")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000219")]
		public MessageType Type
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xCB923C", Offset = "0xCB923C", VA = "0xCB923C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700021A")]
		public bool IsError
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xCB9AFC", Offset = "0xCB9AFC", VA = "0xCB9AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public long RequestID
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xCB9234", Offset = "0xCB9234", VA = "0xCB9234")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700021C")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xCB9D2C", Offset = "0xCB9D2C", VA = "0xCB9D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2310", Offset = "0x7D2310")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0xCB9CD4", Offset = "0xCB9CD4", VA = "0xCB9CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2300", Offset = "0x7D2300")]
			set
			{
			}
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xCB98E8", Offset = "0xCB98E8", VA = "0xCB98E8")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xCB9B0C", Offset = "0xCB9B0C", VA = "0xCB9B0C", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xCB9B14", Offset = "0xCB9B14", VA = "0xCB9B14", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xCB9B1C", Offset = "0xCB9B1C", VA = "0xCB9B1C", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xCB9B24", Offset = "0xCB9B24", VA = "0xCB9B24", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xCB9B2C", Offset = "0xCB9B2C", VA = "0xCB9B2C", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xCB9B34", Offset = "0xCB9B34", VA = "0xCB9B34")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCB8E84", Offset = "0xCB8E84", VA = "0xCB8E84")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20003E1")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xCB5E5C", Offset = "0xCB5E5C", VA = "0xCB5E5C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xCB5EBC", Offset = "0xCB5EBC", VA = "0xCB5EBC", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xCB5F0C", Offset = "0xCB5F0C", VA = "0xCB5F0C", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E2")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xCB6110", Offset = "0xCB6110", VA = "0xCB6110")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xCB6170", Offset = "0xCB6170", VA = "0xCB6170", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xCB61C0", Offset = "0xCB61C0", VA = "0xCB61C0", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E3")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xCB63C4", Offset = "0xCB63C4", VA = "0xCB63C4")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xCB6424", Offset = "0xCB6424", VA = "0xCB6424", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xCB6474", Offset = "0xCB6474", VA = "0xCB6474", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E4")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xCB6574", Offset = "0xCB6574", VA = "0xCB6574")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xCB65D4", Offset = "0xCB65D4", VA = "0xCB65D4", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xCB6624", Offset = "0xCB6624", VA = "0xCB6624", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E5")]
	public class Error
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xCB5E10", Offset = "0xCB5E10", VA = "0xCB5E10")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60019ED")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60019EE")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class Request
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5924", Offset = "0x7C5924")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700021D")]
		public long RequestID
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xCB8E00", Offset = "0xCB8E00", VA = "0xCB8E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2320", Offset = "0x7D2320")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xCBA290", Offset = "0xCBA290", VA = "0xCBA290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2330", Offset = "0x7D2330")]
			set
			{
			}
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xCBA264", Offset = "0xCBA264", VA = "0xCBA264")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xCBA298", Offset = "0xCBA298", VA = "0xCBA298")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xCBA320", Offset = "0xCBA320", VA = "0xCBA320", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xCB97F8", Offset = "0xCB97F8", VA = "0xCB97F8")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x20003E8")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xA3D84C", Offset = "0xA3D84C", VA = "0xA3D84C")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xA3D8C4", Offset = "0xA3D8C4", VA = "0xA3D8C4")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xA3D940", Offset = "0xA3D940", VA = "0xA3D940")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xA3D9BC", Offset = "0xA3D9BC", VA = "0xA3D9BC")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xA3DA0C", Offset = "0xA3DA0C", VA = "0xA3DA0C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40016D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5934", Offset = "0x7C5934")]
		Unknown,
		[Token(Token = "0x40016D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C596C", Offset = "0x7C596C")]
		Object,
		[Token(Token = "0x40016D9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C59A4", Offset = "0x7C59A4")]
		User
	}
	[Token(Token = "0x20003EA")]
	public enum AchievementType
	{
		[Token(Token = "0x40016DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C59DC", Offset = "0x7C59DC")]
		Unknown,
		[Token(Token = "0x40016DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5A14", Offset = "0x7C5A14")]
		Simple,
		[Token(Token = "0x40016DD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5A4C", Offset = "0x7C5A4C")]
		Bitfield,
		[Token(Token = "0x40016DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5A84", Offset = "0x7C5A84")]
		Count
	}
	[Token(Token = "0x20003EB")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x16855C0", Offset = "0x16855C0", VA = "0x16855C0")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x1685734", Offset = "0x1685734", VA = "0x1685734")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x16858DC", Offset = "0x16858DC", VA = "0x16858DC")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class ApplicationOptions
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x1685DD4", Offset = "0x1685DD4", VA = "0x1685DD4")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x1685ED8", Offset = "0x1685ED8", VA = "0x1685ED8")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x1685B40", Offset = "0x1685B40", VA = "0x1685B40")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x1685FFC", Offset = "0x1685FFC", VA = "0x1685FFC", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public static class Callback
	{
		[Token(Token = "0x20006D8")]
		private class RequestCallback
		{
			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x6002923")]
			[Address(RVA = "0xB9FA28", Offset = "0xB9FA28", VA = "0xB9FA28")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002924")]
			[Address(RVA = "0xB9F1D8", Offset = "0xB9F1D8", VA = "0xB9F1D8")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6002925")]
			[Address(RVA = "0xB9FA30", Offset = "0xB9FA30", VA = "0xB9FA30", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20006D9")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6002926")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002927")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6001A02")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xB9F0C8", Offset = "0xB9F0C8", VA = "0xB9F0C8")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB9F20C", Offset = "0xB9F20C", VA = "0xB9F20C")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB9F304", Offset = "0xB9F304", VA = "0xB9F304")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB9F638", Offset = "0xB9F638", VA = "0xB9F638")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xB9F6D0", Offset = "0xB9F6D0", VA = "0xB9F6D0")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xB9F780", Offset = "0xB9F780", VA = "0xB9F780")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xB9F430", Offset = "0xB9F430", VA = "0xB9F430")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xB9FDF4", Offset = "0xB9FDF4", VA = "0xB9FDF4")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB9FE80", Offset = "0xB9FE80", VA = "0xB9FE80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB9FF7C", Offset = "0xB9FF7C", VA = "0xB9FF7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xBA0008", Offset = "0xBA0008", VA = "0xBA0008")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xBA000C", Offset = "0xBA000C", VA = "0xBA000C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xBA0068", Offset = "0xBA0068", VA = "0xBA0068")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class CAPI
	{
		[Token(Token = "0x20006DA")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6002928")]
			[Address(RVA = "0x865104", Offset = "0x865104", VA = "0x865104")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6002929")]
			[Address(RVA = "0x865148", Offset = "0x865148", VA = "0x865148")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x600292A")]
			[Address(RVA = "0x865190", Offset = "0x865190", VA = "0x865190")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20006DB")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x600292B")]
			[Address(RVA = "0x8652A0", Offset = "0x8652A0", VA = "0x8652A0")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20006DC")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20006DD")]
		public struct OculusInitParams
		{
			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BD2CC", Offset = "0x7BD2CC")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x40016E5")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x40016E7")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1687458", Offset = "0x1687458", VA = "0x1687458")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x168761C", Offset = "0x168761C", VA = "0x168761C")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1687CD8", Offset = "0x1687CD8", VA = "0x1687CD8")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1687D9C", Offset = "0x1687D9C", VA = "0x1687D9C")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x16880CC", Offset = "0x16880CC", VA = "0x16880CC")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x16881EC", Offset = "0x16881EC", VA = "0x16881EC")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x1688278", Offset = "0x1688278", VA = "0x1688278")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x16882E8", Offset = "0x16882E8", VA = "0x16882E8")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x16883D8", Offset = "0x16883D8", VA = "0x16883D8")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x16884D0", Offset = "0x16884D0", VA = "0x16884D0")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x1688574", Offset = "0x1688574", VA = "0x1688574")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1685678", Offset = "0x1685678", VA = "0x1685678")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x1688714", Offset = "0x1688714", VA = "0x1688714")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x1685824", Offset = "0x1685824", VA = "0x1685824")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x16887B4", Offset = "0x16887B4", VA = "0x16887B4")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1688880", Offset = "0x1688880", VA = "0x1688880")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x1688988", Offset = "0x1688988", VA = "0x1688988")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x1688A54", Offset = "0x1688A54", VA = "0x1688A54")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x1688B20", Offset = "0x1688B20", VA = "0x1688B20")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x1688BE8", Offset = "0x1688BE8", VA = "0x1688BE8")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x1688CA4", Offset = "0x1688CA4", VA = "0x1688CA4")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1688D04", Offset = "0x1688D04", VA = "0x1688D04")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x1688D94", Offset = "0x1688D94", VA = "0x1688D94")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x1688E24", Offset = "0x1688E24", VA = "0x1688E24")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x1688EC4", Offset = "0x1688EC4", VA = "0x1688EC4")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1688F64", Offset = "0x1688F64", VA = "0x1688F64")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x1688FF4", Offset = "0x1688FF4", VA = "0x1688FF4")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x1689094", Offset = "0x1689094", VA = "0x1689094")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1689124", Offset = "0x1689124", VA = "0x1689124")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x16891C4", Offset = "0x16891C4", VA = "0x16891C4")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x1689284", Offset = "0x1689284", VA = "0x1689284")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x1689314", Offset = "0x1689314", VA = "0x1689314")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x16893B4", Offset = "0x16893B4", VA = "0x16893B4")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1689454", Offset = "0x1689454", VA = "0x1689454")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x16894F4", Offset = "0x16894F4", VA = "0x16894F4")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x1689584", Offset = "0x1689584", VA = "0x1689584")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x168964C", Offset = "0x168964C", VA = "0x168964C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x16896DC", Offset = "0x16896DC", VA = "0x16896DC")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x1689780", Offset = "0x1689780", VA = "0x1689780")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1689834", Offset = "0x1689834", VA = "0x1689834")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1689BB4", Offset = "0x1689BB4", VA = "0x1689BB4")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1685CCC", Offset = "0x1685CCC", VA = "0x1685CCC")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1689C74", Offset = "0x1689C74", VA = "0x1689C74")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1689D6C", Offset = "0x1689D6C", VA = "0x1689D6C")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x1689EE8", Offset = "0x1689EE8", VA = "0x1689EE8")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1689FB0", Offset = "0x1689FB0", VA = "0x1689FB0")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x168A04C", Offset = "0x168A04C", VA = "0x168A04C")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x168A0B4", Offset = "0x168A0B4", VA = "0x168A0B4")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x168A154", Offset = "0x168A154", VA = "0x168A154")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x168A1F4", Offset = "0x168A1F4", VA = "0x168A1F4")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x168A28C", Offset = "0x168A28C", VA = "0x168A28C")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x168A32C", Offset = "0x168A32C", VA = "0x168A32C")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x168A3BC", Offset = "0x168A3BC", VA = "0x168A3BC")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x168A45C", Offset = "0x168A45C", VA = "0x168A45C")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x168A504", Offset = "0x168A504", VA = "0x168A504")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x168A5A4", Offset = "0x168A5A4", VA = "0x168A5A4")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x168A634", Offset = "0x168A634", VA = "0x168A634")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x168A70C", Offset = "0x168A70C", VA = "0x168A70C")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x168A7D4", Offset = "0x168A7D4", VA = "0x168A7D4")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x168A864", Offset = "0x168A864", VA = "0x168A864")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x168A8F4", Offset = "0x168A8F4", VA = "0x168A8F4")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x168A98C", Offset = "0x168A98C", VA = "0x168A98C")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x168AA1C", Offset = "0x168AA1C", VA = "0x168AA1C")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x168AABC", Offset = "0x168AABC", VA = "0x168AABC")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x168AB5C", Offset = "0x168AB5C", VA = "0x168AB5C")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x168ABFC", Offset = "0x168ABFC", VA = "0x168ABFC")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x168AC8C", Offset = "0x168AC8C", VA = "0x168AC8C")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x168AD4C", Offset = "0x168AD4C", VA = "0x168AD4C")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x168AE0C", Offset = "0x168AE0C", VA = "0x168AE0C")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x168AEAC", Offset = "0x168AEAC", VA = "0x168AEAC")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x168AF84", Offset = "0x168AF84", VA = "0x168AF84")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x168B05C", Offset = "0x168B05C", VA = "0x168B05C")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x168B0FC", Offset = "0x168B0FC", VA = "0x168B0FC")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x168B19C", Offset = "0x168B19C", VA = "0x168B19C")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x168B24C", Offset = "0x168B24C", VA = "0x168B24C")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x168B2DC", Offset = "0x168B2DC", VA = "0x168B2DC")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x168B36C", Offset = "0x168B36C", VA = "0x168B36C")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x168B40C", Offset = "0x168B40C", VA = "0x168B40C")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x168B4AC", Offset = "0x168B4AC", VA = "0x168B4AC")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x168B54C", Offset = "0x168B54C", VA = "0x168B54C")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x168B5EC", Offset = "0x168B5EC", VA = "0x168B5EC")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x168B68C", Offset = "0x168B68C", VA = "0x168B68C")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x168B744", Offset = "0x168B744", VA = "0x168B744")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x168B7F4", Offset = "0x168B7F4", VA = "0x168B7F4")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x168B8C8", Offset = "0x168B8C8", VA = "0x168B8C8")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x168B978", Offset = "0x168B978", VA = "0x168B978")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x168BA08", Offset = "0x168BA08", VA = "0x168BA08")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x168BA98", Offset = "0x168BA98", VA = "0x168BA98")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x168BC08", Offset = "0x168BC08", VA = "0x168BC08")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x168BD78", Offset = "0x168BD78", VA = "0x168BD78")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x168BE20", Offset = "0x168BE20", VA = "0x168BE20")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x168BEC0", Offset = "0x168BEC0", VA = "0x168BEC0")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x168BF70", Offset = "0x168BF70", VA = "0x168BF70")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x16859A8", Offset = "0x16859A8", VA = "0x16859A8")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1685B90", Offset = "0x1685B90", VA = "0x1685B90")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x168C000", Offset = "0x168C000", VA = "0x168C000")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x168C090", Offset = "0x168C090", VA = "0x168C090")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x168C120", Offset = "0x168C120", VA = "0x168C120")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x168C1C8", Offset = "0x168C1C8", VA = "0x168C1C8")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x1686228", Offset = "0x1686228", VA = "0x1686228")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1686394", Offset = "0x1686394", VA = "0x1686394")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1686500", Offset = "0x1686500", VA = "0x1686500")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x168C268", Offset = "0x168C268", VA = "0x168C268")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1686674", Offset = "0x1686674", VA = "0x1686674")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x16867E0", Offset = "0x16867E0", VA = "0x16867E0")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x168694C", Offset = "0x168694C", VA = "0x168694C")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x168C308", Offset = "0x168C308", VA = "0x168C308")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x1686AC0", Offset = "0x1686AC0", VA = "0x1686AC0")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1686C2C", Offset = "0x1686C2C", VA = "0x1686C2C")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x1686D98", Offset = "0x1686D98", VA = "0x1686D98")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x168C3A8", Offset = "0x168C3A8", VA = "0x168C3A8")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x1686F04", Offset = "0x1686F04", VA = "0x1686F04")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x1687060", Offset = "0x1687060", VA = "0x1687060")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x16871CC", Offset = "0x16871CC", VA = "0x16871CC")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x1687338", Offset = "0x1687338", VA = "0x1687338")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x168C448", Offset = "0x168C448", VA = "0x168C448")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x168C4E8", Offset = "0x168C4E8", VA = "0x168C4E8")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x168C5BC", Offset = "0x168C5BC", VA = "0x168C5BC")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x168C66C", Offset = "0x168C66C", VA = "0x168C66C")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x168C73C", Offset = "0x168C73C", VA = "0x168C73C")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x168C7FC", Offset = "0x168C7FC", VA = "0x168C7FC")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x168C8CC", Offset = "0x168C8CC", VA = "0x168C8CC")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x168C9A0", Offset = "0x168C9A0", VA = "0x168C9A0")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x168CA50", Offset = "0x168CA50", VA = "0x168CA50")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x168CB24", Offset = "0x168CB24", VA = "0x168CB24")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x168CBD4", Offset = "0x168CBD4", VA = "0x168CBD4")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x168CC7C", Offset = "0x168CC7C", VA = "0x168CC7C")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x168CD1C", Offset = "0x168CD1C", VA = "0x168CD1C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x168CDF0", Offset = "0x168CDF0", VA = "0x168CDF0")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x168CEA0", Offset = "0x168CEA0", VA = "0x168CEA0")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x168CF48", Offset = "0x168CF48", VA = "0x168CF48")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x168CFE8", Offset = "0x168CFE8", VA = "0x168CFE8")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x168D0BC", Offset = "0x168D0BC", VA = "0x168D0BC")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x168D16C", Offset = "0x168D16C", VA = "0x168D16C")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x168D260", Offset = "0x168D260", VA = "0x168D260")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x168D318", Offset = "0x168D318", VA = "0x168D318")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x168D40C", Offset = "0x168D40C", VA = "0x168D40C")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x168D4C4", Offset = "0x168D4C4", VA = "0x168D4C4")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x168D5E0", Offset = "0x168D5E0", VA = "0x168D5E0")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x168D6C8", Offset = "0x168D6C8", VA = "0x168D6C8")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x168D758", Offset = "0x168D758", VA = "0x168D758")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x168D7E8", Offset = "0x168D7E8", VA = "0x168D7E8")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x168D890", Offset = "0x168D890", VA = "0x168D890")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x168D930", Offset = "0x168D930", VA = "0x168D930")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x168D9D8", Offset = "0x168D9D8", VA = "0x168D9D8")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x168DA78", Offset = "0x168DA78", VA = "0x168DA78")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x168DB08", Offset = "0x168DB08", VA = "0x168DB08")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x168DBB0", Offset = "0x168DBB0", VA = "0x168DBB0")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x168DC50", Offset = "0x168DC50", VA = "0x168DC50")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x168DCF8", Offset = "0x168DCF8", VA = "0x168DCF8")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x168DD94", Offset = "0x168DD94", VA = "0x168DD94")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x168DE3C", Offset = "0x168DE3C", VA = "0x168DE3C")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x168DEDC", Offset = "0x168DEDC", VA = "0x168DEDC")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x168DFB0", Offset = "0x168DFB0", VA = "0x168DFB0")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x168E060", Offset = "0x168E060", VA = "0x168E060")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x168E1C0", Offset = "0x168E1C0", VA = "0x168E1C0")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x168E36C", Offset = "0x168E36C", VA = "0x168E36C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x168E414", Offset = "0x168E414", VA = "0x168E414")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x168E4B4", Offset = "0x168E4B4", VA = "0x168E4B4")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x168E55C", Offset = "0x168E55C", VA = "0x168E55C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x168E5FC", Offset = "0x168E5FC", VA = "0x168E5FC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x168E76C", Offset = "0x168E76C", VA = "0x168E76C")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x168E7FC", Offset = "0x168E7FC", VA = "0x168E7FC")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x168E88C", Offset = "0x168E88C", VA = "0x168E88C")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x168E934", Offset = "0x168E934", VA = "0x168E934")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x168E9D4", Offset = "0x168E9D4", VA = "0x168E9D4")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x168EA64", Offset = "0x168EA64", VA = "0x168EA64")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x168EB0C", Offset = "0x168EB0C", VA = "0x168EB0C")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x168EBAC", Offset = "0x168EBAC", VA = "0x168EBAC")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x168EC7C", Offset = "0x168EC7C", VA = "0x168EC7C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x168ED44", Offset = "0x168ED44", VA = "0x168ED44")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x168EE04", Offset = "0x168EE04", VA = "0x168EE04")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x168EEBC", Offset = "0x168EEBC", VA = "0x168EEBC")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x168EF5C", Offset = "0x168EF5C", VA = "0x168EF5C")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x168EFFC", Offset = "0x168EFFC", VA = "0x168EFFC")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x168F0D4", Offset = "0x168F0D4", VA = "0x168F0D4")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x168F1AC", Offset = "0x168F1AC", VA = "0x168F1AC")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x168F23C", Offset = "0x168F23C", VA = "0x168F23C")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x168F2E4", Offset = "0x168F2E4", VA = "0x168F2E4")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x168F384", Offset = "0x168F384", VA = "0x168F384")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x168F414", Offset = "0x168F414", VA = "0x168F414")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x168F4A4", Offset = "0x168F4A4", VA = "0x168F4A4")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x168F534", Offset = "0x168F534", VA = "0x168F534")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x168F5E4", Offset = "0x168F5E4", VA = "0x168F5E4")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x168F674", Offset = "0x168F674", VA = "0x168F674")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x168F704", Offset = "0x168F704", VA = "0x168F704")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x168F7A4", Offset = "0x168F7A4", VA = "0x168F7A4")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x168F844", Offset = "0x168F844", VA = "0x168F844")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x168F8FC", Offset = "0x168F8FC", VA = "0x168F8FC")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x168F9AC", Offset = "0x168F9AC", VA = "0x168F9AC")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x168FA64", Offset = "0x168FA64", VA = "0x168FA64")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x168FB14", Offset = "0x168FB14", VA = "0x168FB14")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x168FBE8", Offset = "0x168FBE8", VA = "0x168FBE8")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x168FC98", Offset = "0x168FC98", VA = "0x168FC98")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x168FD28", Offset = "0x168FD28", VA = "0x168FD28")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x168FDF8", Offset = "0x168FDF8", VA = "0x168FDF8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x168FEC0", Offset = "0x168FEC0", VA = "0x168FEC0")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x168FF78", Offset = "0x168FF78", VA = "0x168FF78")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x1690028", Offset = "0x1690028", VA = "0x1690028")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x16900E8", Offset = "0x16900E8", VA = "0x16900E8")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x16901A0", Offset = "0x16901A0", VA = "0x16901A0")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1690258", Offset = "0x1690258", VA = "0x1690258")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1690308", Offset = "0x1690308", VA = "0x1690308")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x16903C0", Offset = "0x16903C0", VA = "0x16903C0")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x1690470", Offset = "0x1690470", VA = "0x1690470")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x1690528", Offset = "0x1690528", VA = "0x1690528")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x16905D8", Offset = "0x16905D8", VA = "0x16905D8")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x1690688", Offset = "0x1690688", VA = "0x1690688")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x1690738", Offset = "0x1690738", VA = "0x1690738")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x16907C8", Offset = "0x16907C8", VA = "0x16907C8")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1690888", Offset = "0x1690888", VA = "0x1690888")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x1690940", Offset = "0x1690940", VA = "0x1690940")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x16909F0", Offset = "0x16909F0", VA = "0x16909F0")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x1690AA8", Offset = "0x1690AA8", VA = "0x1690AA8")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x1690C24", Offset = "0x1690C24", VA = "0x1690C24")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x1690CC4", Offset = "0x1690CC4", VA = "0x1690CC4")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x1690DA0", Offset = "0x1690DA0", VA = "0x1690DA0")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1690E58", Offset = "0x1690E58", VA = "0x1690E58")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1690EE8", Offset = "0x1690EE8", VA = "0x1690EE8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1690F88", Offset = "0x1690F88", VA = "0x1690F88")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x1691018", Offset = "0x1691018", VA = "0x1691018")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x16910C8", Offset = "0x16910C8", VA = "0x16910C8")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x1691168", Offset = "0x1691168", VA = "0x1691168")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x16911F8", Offset = "0x16911F8", VA = "0x16911F8")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x1691298", Offset = "0x1691298", VA = "0x1691298")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1691344", Offset = "0x1691344", VA = "0x1691344")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x16913E4", Offset = "0x16913E4", VA = "0x16913E4")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1691484", Offset = "0x1691484", VA = "0x1691484")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1691514", Offset = "0x1691514", VA = "0x1691514")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x16915A4", Offset = "0x16915A4", VA = "0x16915A4")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1691644", Offset = "0x1691644", VA = "0x1691644")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x16916FC", Offset = "0x16916FC", VA = "0x16916FC")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x16917B4", Offset = "0x16917B4", VA = "0x16917B4")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x1691854", Offset = "0x1691854", VA = "0x1691854")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x16918E4", Offset = "0x16918E4", VA = "0x16918E4")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x1691984", Offset = "0x1691984", VA = "0x1691984")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1691A14", Offset = "0x1691A14", VA = "0x1691A14")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1691AB4", Offset = "0x1691AB4", VA = "0x1691AB4")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1691B44", Offset = "0x1691B44", VA = "0x1691B44")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1691BE4", Offset = "0x1691BE4", VA = "0x1691BE4")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1691CA0", Offset = "0x1691CA0", VA = "0x1691CA0")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1691D50", Offset = "0x1691D50", VA = "0x1691D50")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1691E00", Offset = "0x1691E00", VA = "0x1691E00")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1691EB0", Offset = "0x1691EB0", VA = "0x1691EB0")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1691F64", Offset = "0x1691F64", VA = "0x1691F64")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1692004", Offset = "0x1692004", VA = "0x1692004")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x16920A4", Offset = "0x16920A4", VA = "0x16920A4")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1692160", Offset = "0x1692160", VA = "0x1692160")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1692210", Offset = "0x1692210", VA = "0x1692210")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x16922C8", Offset = "0x16922C8", VA = "0x16922C8")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1692440", Offset = "0x1692440", VA = "0x1692440")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x16924F0", Offset = "0x16924F0", VA = "0x16924F0")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x16925A0", Offset = "0x16925A0", VA = "0x16925A0")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1692650", Offset = "0x1692650", VA = "0x1692650")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x16926F0", Offset = "0x16926F0", VA = "0x16926F0")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1692790", Offset = "0x1692790", VA = "0x1692790")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x1692838", Offset = "0x1692838", VA = "0x1692838")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x16928D8", Offset = "0x16928D8", VA = "0x16928D8")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x1692978", Offset = "0x1692978", VA = "0x1692978")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x1692A08", Offset = "0x1692A08", VA = "0x1692A08")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1692AA8", Offset = "0x1692AA8", VA = "0x1692AA8")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x1692B38", Offset = "0x1692B38", VA = "0x1692B38")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x1692BC8", Offset = "0x1692BC8", VA = "0x1692BC8")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x1692C58", Offset = "0x1692C58", VA = "0x1692C58")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x1692CF8", Offset = "0x1692CF8", VA = "0x1692CF8")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x1692D98", Offset = "0x1692D98", VA = "0x1692D98")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x1692E28", Offset = "0x1692E28", VA = "0x1692E28")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x1692EB8", Offset = "0x1692EB8", VA = "0x1692EB8")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1692F58", Offset = "0x1692F58", VA = "0x1692F58")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x1692FF8", Offset = "0x1692FF8", VA = "0x1692FF8")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x1693098", Offset = "0x1693098", VA = "0x1693098")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x1693138", Offset = "0x1693138", VA = "0x1693138")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x16931E8", Offset = "0x16931E8", VA = "0x16931E8")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1693288", Offset = "0x1693288", VA = "0x1693288")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x1693318", Offset = "0x1693318", VA = "0x1693318")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x16933A8", Offset = "0x16933A8", VA = "0x16933A8")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1693438", Offset = "0x1693438", VA = "0x1693438")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x16934C8", Offset = "0x16934C8", VA = "0x16934C8")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1693584", Offset = "0x1693584", VA = "0x1693584")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x1693634", Offset = "0x1693634", VA = "0x1693634")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x16936F8", Offset = "0x16936F8", VA = "0x16936F8")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x16937B0", Offset = "0x16937B0", VA = "0x16937B0")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1693870", Offset = "0x1693870", VA = "0x1693870")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1693930", Offset = "0x1693930", VA = "0x1693930")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x16939D0", Offset = "0x16939D0", VA = "0x16939D0")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1693A38", Offset = "0x1693A38", VA = "0x1693A38")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1693AD8", Offset = "0x1693AD8", VA = "0x1693AD8")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1693B78", Offset = "0x1693B78", VA = "0x1693B78")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1693BE0", Offset = "0x1693BE0", VA = "0x1693BE0")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1693C80", Offset = "0x1693C80", VA = "0x1693C80")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1693D20", Offset = "0x1693D20", VA = "0x1693D20")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1693DC0", Offset = "0x1693DC0", VA = "0x1693DC0")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1693E70", Offset = "0x1693E70", VA = "0x1693E70")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1693ED8", Offset = "0x1693ED8", VA = "0x1693ED8")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x1693F78", Offset = "0x1693F78", VA = "0x1693F78")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1694018", Offset = "0x1694018", VA = "0x1694018")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x16940C0", Offset = "0x16940C0", VA = "0x16940C0")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1694128", Offset = "0x1694128", VA = "0x1694128")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x16941C8", Offset = "0x16941C8", VA = "0x16941C8")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1694268", Offset = "0x1694268", VA = "0x1694268")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1694310", Offset = "0x1694310", VA = "0x1694310")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1694378", Offset = "0x1694378", VA = "0x1694378")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1694418", Offset = "0x1694418", VA = "0x1694418")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1694480", Offset = "0x1694480", VA = "0x1694480")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1694520", Offset = "0x1694520", VA = "0x1694520")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x16945D0", Offset = "0x16945D0", VA = "0x16945D0")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x1694638", Offset = "0x1694638", VA = "0x1694638")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x16946D8", Offset = "0x16946D8", VA = "0x16946D8")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1694778", Offset = "0x1694778", VA = "0x1694778")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1694820", Offset = "0x1694820", VA = "0x1694820")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x16948C8", Offset = "0x16948C8", VA = "0x16948C8")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1694930", Offset = "0x1694930", VA = "0x1694930")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x16949D0", Offset = "0x16949D0", VA = "0x16949D0")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1694A70", Offset = "0x1694A70", VA = "0x1694A70")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1694B10", Offset = "0x1694B10", VA = "0x1694B10")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1694B78", Offset = "0x1694B78", VA = "0x1694B78")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1694C18", Offset = "0x1694C18", VA = "0x1694C18")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1694CB8", Offset = "0x1694CB8", VA = "0x1694CB8")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x1694D20", Offset = "0x1694D20", VA = "0x1694D20")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1694DC0", Offset = "0x1694DC0", VA = "0x1694DC0")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1694E60", Offset = "0x1694E60", VA = "0x1694E60")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1694EC8", Offset = "0x1694EC8", VA = "0x1694EC8")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1694F68", Offset = "0x1694F68", VA = "0x1694F68")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1694FD0", Offset = "0x1694FD0", VA = "0x1694FD0")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1695070", Offset = "0x1695070", VA = "0x1695070")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x16950D8", Offset = "0x16950D8", VA = "0x16950D8")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1695178", Offset = "0x1695178", VA = "0x1695178")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x16951E0", Offset = "0x16951E0", VA = "0x16951E0")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x1695280", Offset = "0x1695280", VA = "0x1695280")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x1695320", Offset = "0x1695320", VA = "0x1695320")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1695388", Offset = "0x1695388", VA = "0x1695388")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1695428", Offset = "0x1695428", VA = "0x1695428")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x16954D8", Offset = "0x16954D8", VA = "0x16954D8")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x1695578", Offset = "0x1695578", VA = "0x1695578")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1695618", Offset = "0x1695618", VA = "0x1695618")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x16956B8", Offset = "0x16956B8", VA = "0x16956B8")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1695720", Offset = "0x1695720", VA = "0x1695720")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x16957C0", Offset = "0x16957C0", VA = "0x16957C0")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1695868", Offset = "0x1695868", VA = "0x1695868")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1695908", Offset = "0x1695908", VA = "0x1695908")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x16959A8", Offset = "0x16959A8", VA = "0x16959A8")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1695A10", Offset = "0x1695A10", VA = "0x1695A10")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1695AB0", Offset = "0x1695AB0", VA = "0x1695AB0")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1695B58", Offset = "0x1695B58", VA = "0x1695B58")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1695BF8", Offset = "0x1695BF8", VA = "0x1695BF8")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1695C60", Offset = "0x1695C60", VA = "0x1695C60")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1695D00", Offset = "0x1695D00", VA = "0x1695D00")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x1695DA0", Offset = "0x1695DA0", VA = "0x1695DA0")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1695E40", Offset = "0x1695E40", VA = "0x1695E40")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x1695EE0", Offset = "0x1695EE0", VA = "0x1695EE0")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1695F80", Offset = "0x1695F80", VA = "0x1695F80")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1696028", Offset = "0x1696028", VA = "0x1696028")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x16960C8", Offset = "0x16960C8", VA = "0x16960C8")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1696168", Offset = "0x1696168", VA = "0x1696168")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x16961D0", Offset = "0x16961D0", VA = "0x16961D0")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1696270", Offset = "0x1696270", VA = "0x1696270")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1696310", Offset = "0x1696310", VA = "0x1696310")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x16963B0", Offset = "0x16963B0", VA = "0x16963B0")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1696418", Offset = "0x1696418", VA = "0x1696418")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x16964B8", Offset = "0x16964B8", VA = "0x16964B8")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1696568", Offset = "0x1696568", VA = "0x1696568")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1696608", Offset = "0x1696608", VA = "0x1696608")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1696670", Offset = "0x1696670", VA = "0x1696670")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1696710", Offset = "0x1696710", VA = "0x1696710")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x16967B0", Offset = "0x16967B0", VA = "0x16967B0")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1696850", Offset = "0x1696850", VA = "0x1696850")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x16968B8", Offset = "0x16968B8", VA = "0x16968B8")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1696958", Offset = "0x1696958", VA = "0x1696958")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1696A74", Offset = "0x1696A74", VA = "0x1696A74")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x16969D4", Offset = "0x16969D4", VA = "0x16969D4")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1696B14", Offset = "0x1696B14", VA = "0x1696B14")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1696B7C", Offset = "0x1696B7C", VA = "0x1696B7C")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1696C1C", Offset = "0x1696C1C", VA = "0x1696C1C")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1696C84", Offset = "0x1696C84", VA = "0x1696C84")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1696D24", Offset = "0x1696D24", VA = "0x1696D24")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1696DC4", Offset = "0x1696DC4", VA = "0x1696DC4")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1696E64", Offset = "0x1696E64", VA = "0x1696E64")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1696ECC", Offset = "0x1696ECC", VA = "0x1696ECC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1696F6C", Offset = "0x1696F6C", VA = "0x1696F6C")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1696FD4", Offset = "0x1696FD4", VA = "0x1696FD4")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x1697074", Offset = "0x1697074", VA = "0x1697074")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1697114", Offset = "0x1697114", VA = "0x1697114")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x16971B4", Offset = "0x16971B4", VA = "0x16971B4")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x169721C", Offset = "0x169721C", VA = "0x169721C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x16972BC", Offset = "0x16972BC", VA = "0x16972BC")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x169736C", Offset = "0x169736C", VA = "0x169736C")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x16973D4", Offset = "0x16973D4", VA = "0x16973D4")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1697474", Offset = "0x1697474", VA = "0x1697474")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x1697514", Offset = "0x1697514", VA = "0x1697514")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x16975BC", Offset = "0x16975BC", VA = "0x16975BC")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1697624", Offset = "0x1697624", VA = "0x1697624")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x16976C4", Offset = "0x16976C4", VA = "0x16976C4")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x169772C", Offset = "0x169772C", VA = "0x169772C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x16977CC", Offset = "0x16977CC", VA = "0x16977CC")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x169786C", Offset = "0x169786C", VA = "0x169786C")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x16978D4", Offset = "0x16978D4", VA = "0x16978D4")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1697974", Offset = "0x1697974", VA = "0x1697974")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1697A30", Offset = "0x1697A30", VA = "0x1697A30")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1687F94", Offset = "0x1687F94", VA = "0x1687F94")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1697AE0", Offset = "0x1697AE0", VA = "0x1697AE0")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1687EF4", Offset = "0x1687EF4", VA = "0x1687EF4")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x168800C", Offset = "0x168800C", VA = "0x168800C")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1697B90", Offset = "0x1697B90", VA = "0x1697B90")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1697C40", Offset = "0x1697C40", VA = "0x1697C40")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1697CA8", Offset = "0x1697CA8", VA = "0x1697CA8")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1697D48", Offset = "0x1697D48", VA = "0x1697D48")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1697DB0", Offset = "0x1697DB0", VA = "0x1697DB0")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1697E50", Offset = "0x1697E50", VA = "0x1697E50")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x1697EB8", Offset = "0x1697EB8", VA = "0x1697EB8")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x1697F58", Offset = "0x1697F58", VA = "0x1697F58")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1698008", Offset = "0x1698008", VA = "0x1698008")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1698070", Offset = "0x1698070", VA = "0x1698070")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x1698110", Offset = "0x1698110", VA = "0x1698110")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x16981B0", Offset = "0x16981B0", VA = "0x16981B0")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1698258", Offset = "0x1698258", VA = "0x1698258")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x16982F4", Offset = "0x16982F4", VA = "0x16982F4")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x169835C", Offset = "0x169835C", VA = "0x169835C")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x16983FC", Offset = "0x16983FC", VA = "0x16983FC")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x169849C", Offset = "0x169849C", VA = "0x169849C")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1698504", Offset = "0x1698504", VA = "0x1698504")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x16985A4", Offset = "0x16985A4", VA = "0x16985A4")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1698644", Offset = "0x1698644", VA = "0x1698644")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x16986E4", Offset = "0x16986E4", VA = "0x16986E4")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1698784", Offset = "0x1698784", VA = "0x1698784")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x169882C", Offset = "0x169882C", VA = "0x169882C")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x1698894", Offset = "0x1698894", VA = "0x1698894")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x1698934", Offset = "0x1698934", VA = "0x1698934")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x169899C", Offset = "0x169899C", VA = "0x169899C")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1698A3C", Offset = "0x1698A3C", VA = "0x1698A3C")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1698AA4", Offset = "0x1698AA4", VA = "0x1698AA4")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1698B44", Offset = "0x1698B44", VA = "0x1698B44")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x1698BE4", Offset = "0x1698BE4", VA = "0x1698BE4")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1698C4C", Offset = "0x1698C4C", VA = "0x1698C4C")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1698CEC", Offset = "0x1698CEC", VA = "0x1698CEC")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1698D9C", Offset = "0x1698D9C", VA = "0x1698D9C")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1698E3C", Offset = "0x1698E3C", VA = "0x1698E3C")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1698EA4", Offset = "0x1698EA4", VA = "0x1698EA4")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1698F44", Offset = "0x1698F44", VA = "0x1698F44")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1698FAC", Offset = "0x1698FAC", VA = "0x1698FAC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x169904C", Offset = "0x169904C", VA = "0x169904C")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x16990B4", Offset = "0x16990B4", VA = "0x16990B4")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1699154", Offset = "0x1699154", VA = "0x1699154")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x16991FC", Offset = "0x16991FC", VA = "0x16991FC")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x16992A4", Offset = "0x16992A4", VA = "0x16992A4")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x169930C", Offset = "0x169930C", VA = "0x169930C")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x16993AC", Offset = "0x16993AC", VA = "0x16993AC")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1699414", Offset = "0x1699414", VA = "0x1699414")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x16994B4", Offset = "0x16994B4", VA = "0x16994B4")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x169951C", Offset = "0x169951C", VA = "0x169951C")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x16995BC", Offset = "0x16995BC", VA = "0x16995BC")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x169965C", Offset = "0x169965C", VA = "0x169965C")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x16996FC", Offset = "0x16996FC", VA = "0x16996FC")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x169979C", Offset = "0x169979C", VA = "0x169979C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1699844", Offset = "0x1699844", VA = "0x1699844")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x16998EC", Offset = "0x16998EC", VA = "0x16998EC")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1699994", Offset = "0x1699994", VA = "0x1699994")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1699A34", Offset = "0x1699A34", VA = "0x1699A34")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1699ADC", Offset = "0x1699ADC", VA = "0x1699ADC")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1699B84", Offset = "0x1699B84", VA = "0x1699B84")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1699CA0", Offset = "0x1699CA0", VA = "0x1699CA0")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1699C00", Offset = "0x1699C00", VA = "0x1699C00")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1699D40", Offset = "0x1699D40", VA = "0x1699D40")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1699DE0", Offset = "0x1699DE0", VA = "0x1699DE0")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1699E80", Offset = "0x1699E80", VA = "0x1699E80")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1699EE8", Offset = "0x1699EE8", VA = "0x1699EE8")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1699F88", Offset = "0x1699F88", VA = "0x1699F88")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x169A028", Offset = "0x169A028", VA = "0x169A028")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x169A0D8", Offset = "0x169A0D8", VA = "0x169A0D8")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x169A140", Offset = "0x169A140", VA = "0x169A140")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x169A1E0", Offset = "0x169A1E0", VA = "0x169A1E0")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x169A248", Offset = "0x169A248", VA = "0x169A248")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x169A2E8", Offset = "0x169A2E8", VA = "0x169A2E8")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x169A388", Offset = "0x169A388", VA = "0x169A388")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x169A428", Offset = "0x169A428", VA = "0x169A428")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x169A4D0", Offset = "0x169A4D0", VA = "0x169A4D0")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x169A578", Offset = "0x169A578", VA = "0x169A578")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x169A620", Offset = "0x169A620", VA = "0x169A620")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x169A688", Offset = "0x169A688", VA = "0x169A688")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x169A728", Offset = "0x169A728", VA = "0x169A728")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x169A7C8", Offset = "0x169A7C8", VA = "0x169A7C8")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x169A830", Offset = "0x169A830", VA = "0x169A830")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x169A8D0", Offset = "0x169A8D0", VA = "0x169A8D0")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x169A980", Offset = "0x169A980", VA = "0x169A980")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x169AA20", Offset = "0x169AA20", VA = "0x169AA20")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x169AAC8", Offset = "0x169AAC8", VA = "0x169AAC8")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x169AB68", Offset = "0x169AB68", VA = "0x169AB68")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x169AC10", Offset = "0x169AC10", VA = "0x169AC10")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x169ACB8", Offset = "0x169ACB8", VA = "0x169ACB8")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x169AD60", Offset = "0x169AD60", VA = "0x169AD60")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x169AE00", Offset = "0x169AE00", VA = "0x169AE00")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x169AEA8", Offset = "0x169AEA8", VA = "0x169AEA8")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x169AF48", Offset = "0x169AF48", VA = "0x169AF48")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x169AFE8", Offset = "0x169AFE8", VA = "0x169AFE8")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x169B050", Offset = "0x169B050", VA = "0x169B050")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x169B0F0", Offset = "0x169B0F0", VA = "0x169B0F0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x169B190", Offset = "0x169B190", VA = "0x169B190")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x169B230", Offset = "0x169B230", VA = "0x169B230")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x169B2D8", Offset = "0x169B2D8", VA = "0x169B2D8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x169B378", Offset = "0x169B378", VA = "0x169B378")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x169B418", Offset = "0x169B418", VA = "0x169B418")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x169B4B8", Offset = "0x169B4B8", VA = "0x169B4B8")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x169B520", Offset = "0x169B520", VA = "0x169B520")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x169B5C0", Offset = "0x169B5C0", VA = "0x169B5C0")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x169B670", Offset = "0x169B670", VA = "0x169B670")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x169B710", Offset = "0x169B710", VA = "0x169B710")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x169B7B0", Offset = "0x169B7B0", VA = "0x169B7B0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x169B850", Offset = "0x169B850", VA = "0x169B850")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x169B8B8", Offset = "0x169B8B8", VA = "0x169B8B8")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x169B958", Offset = "0x169B958", VA = "0x169B958")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x169B9F8", Offset = "0x169B9F8", VA = "0x169B9F8")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x169BAA8", Offset = "0x169BAA8", VA = "0x169BAA8")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x169BB10", Offset = "0x169BB10", VA = "0x169BB10")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x169BBB0", Offset = "0x169BBB0", VA = "0x169BBB0")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x169BC50", Offset = "0x169BC50", VA = "0x169BC50")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x169BCF8", Offset = "0x169BCF8", VA = "0x169BCF8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x169BD98", Offset = "0x169BD98", VA = "0x169BD98")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x169BE38", Offset = "0x169BE38", VA = "0x169BE38")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x169BED8", Offset = "0x169BED8", VA = "0x169BED8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x169BF78", Offset = "0x169BF78", VA = "0x169BF78")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x169BFE0", Offset = "0x169BFE0", VA = "0x169BFE0")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x169C080", Offset = "0x169C080", VA = "0x169C080")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x169C120", Offset = "0x169C120", VA = "0x169C120")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x169C188", Offset = "0x169C188", VA = "0x169C188")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x169C228", Offset = "0x169C228", VA = "0x169C228")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x169C2C8", Offset = "0x169C2C8", VA = "0x169C2C8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x169C368", Offset = "0x169C368", VA = "0x169C368")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x169C418", Offset = "0x169C418", VA = "0x169C418")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x169C4B8", Offset = "0x169C4B8", VA = "0x169C4B8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x169C558", Offset = "0x169C558", VA = "0x169C558")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x169C5F8", Offset = "0x169C5F8", VA = "0x169C5F8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x169C6A8", Offset = "0x169C6A8", VA = "0x169C6A8")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x169C748", Offset = "0x169C748", VA = "0x169C748")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x169C7E8", Offset = "0x169C7E8", VA = "0x169C7E8")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x169C888", Offset = "0x169C888", VA = "0x169C888")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x169C8F0", Offset = "0x169C8F0", VA = "0x169C8F0")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x169C990", Offset = "0x169C990", VA = "0x169C990")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x169CA30", Offset = "0x169CA30", VA = "0x169CA30")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x169CAD0", Offset = "0x169CAD0", VA = "0x169CAD0")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x169CB78", Offset = "0x169CB78", VA = "0x169CB78")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x169CC28", Offset = "0x169CC28", VA = "0x169CC28")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x169CCC8", Offset = "0x169CCC8", VA = "0x169CCC8")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x169CD68", Offset = "0x169CD68", VA = "0x169CD68")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x169CE08", Offset = "0x169CE08", VA = "0x169CE08")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x169CEA8", Offset = "0x169CEA8", VA = "0x169CEA8")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x169CF48", Offset = "0x169CF48", VA = "0x169CF48")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x169CFE8", Offset = "0x169CFE8", VA = "0x169CFE8")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x169D088", Offset = "0x169D088", VA = "0x169D088")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x169D128", Offset = "0x169D128", VA = "0x169D128")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x169D1C8", Offset = "0x169D1C8", VA = "0x169D1C8")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x169D268", Offset = "0x169D268", VA = "0x169D268")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x169D308", Offset = "0x169D308", VA = "0x169D308")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x169D3A8", Offset = "0x169D3A8", VA = "0x169D3A8")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x169D448", Offset = "0x169D448", VA = "0x169D448")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x169D4E8", Offset = "0x169D4E8", VA = "0x169D4E8")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x169D588", Offset = "0x169D588", VA = "0x169D588")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x169D628", Offset = "0x169D628", VA = "0x169D628")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x169D6C8", Offset = "0x169D6C8", VA = "0x169D6C8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x169D768", Offset = "0x169D768", VA = "0x169D768")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x169D808", Offset = "0x169D808", VA = "0x169D808")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x169D8A8", Offset = "0x169D8A8", VA = "0x169D8A8")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x169D948", Offset = "0x169D948", VA = "0x169D948")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x169D9E8", Offset = "0x169D9E8", VA = "0x169D9E8")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x169DA88", Offset = "0x169DA88", VA = "0x169DA88")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x169DB28", Offset = "0x169DB28", VA = "0x169DB28")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x169DBC8", Offset = "0x169DBC8", VA = "0x169DBC8")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x169DC68", Offset = "0x169DC68", VA = "0x169DC68")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x169DD08", Offset = "0x169DD08", VA = "0x169DD08")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x169DDA8", Offset = "0x169DDA8", VA = "0x169DDA8")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x169DE48", Offset = "0x169DE48", VA = "0x169DE48")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x169DEE8", Offset = "0x169DEE8", VA = "0x169DEE8")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x169DF88", Offset = "0x169DF88", VA = "0x169DF88")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x169E028", Offset = "0x169E028", VA = "0x169E028")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x169E0C8", Offset = "0x169E0C8", VA = "0x169E0C8")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x169E168", Offset = "0x169E168", VA = "0x169E168")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x169E208", Offset = "0x169E208", VA = "0x169E208")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x169E2A8", Offset = "0x169E2A8", VA = "0x169E2A8")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x169E348", Offset = "0x169E348", VA = "0x169E348")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x169E3E8", Offset = "0x169E3E8", VA = "0x169E3E8")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x169E488", Offset = "0x169E488", VA = "0x169E488")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x169E528", Offset = "0x169E528", VA = "0x169E528")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x169E5C8", Offset = "0x169E5C8", VA = "0x169E5C8")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x169E668", Offset = "0x169E668", VA = "0x169E668")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x169E708", Offset = "0x169E708", VA = "0x169E708")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x169E7A8", Offset = "0x169E7A8", VA = "0x169E7A8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x169E848", Offset = "0x169E848", VA = "0x169E848")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x169E8E8", Offset = "0x169E8E8", VA = "0x169E8E8")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x169E988", Offset = "0x169E988", VA = "0x169E988")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x169EA28", Offset = "0x169EA28", VA = "0x169EA28")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x169EAC8", Offset = "0x169EAC8", VA = "0x169EAC8")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x169EB68", Offset = "0x169EB68", VA = "0x169EB68")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x169EC08", Offset = "0x169EC08", VA = "0x169EC08")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x169ECA8", Offset = "0x169ECA8", VA = "0x169ECA8")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x169ED48", Offset = "0x169ED48", VA = "0x169ED48")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x169EDE8", Offset = "0x169EDE8", VA = "0x169EDE8")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x169EE88", Offset = "0x169EE88", VA = "0x169EE88")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x169EF28", Offset = "0x169EF28", VA = "0x169EF28")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x169EFC8", Offset = "0x169EFC8", VA = "0x169EFC8")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x169F068", Offset = "0x169F068", VA = "0x169F068")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x169F108", Offset = "0x169F108", VA = "0x169F108")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x169F1A8", Offset = "0x169F1A8", VA = "0x169F1A8")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x169F248", Offset = "0x169F248", VA = "0x169F248")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x169F2E8", Offset = "0x169F2E8", VA = "0x169F2E8")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x169F388", Offset = "0x169F388", VA = "0x169F388")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x169F428", Offset = "0x169F428", VA = "0x169F428")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x169F4C8", Offset = "0x169F4C8", VA = "0x169F4C8")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x169F568", Offset = "0x169F568", VA = "0x169F568")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x169F5D0", Offset = "0x169F5D0", VA = "0x169F5D0")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x169F670", Offset = "0x169F670", VA = "0x169F670")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x169F710", Offset = "0x169F710", VA = "0x169F710")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x169F7B0", Offset = "0x169F7B0", VA = "0x169F7B0")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x169F850", Offset = "0x169F850", VA = "0x169F850")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x169F8F0", Offset = "0x169F8F0", VA = "0x169F8F0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x169F990", Offset = "0x169F990", VA = "0x169F990")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x169FA30", Offset = "0x169FA30", VA = "0x169FA30")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x169FAD0", Offset = "0x169FAD0", VA = "0x169FAD0")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x169FB70", Offset = "0x169FB70", VA = "0x169FB70")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x169FC18", Offset = "0x169FC18", VA = "0x169FC18")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x169FCB8", Offset = "0x169FCB8", VA = "0x169FCB8")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x169FD58", Offset = "0x169FD58", VA = "0x169FD58")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x169FE18", Offset = "0x169FE18", VA = "0x169FE18")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x169FED8", Offset = "0x169FED8", VA = "0x169FED8")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x169FF98", Offset = "0x169FF98", VA = "0x169FF98")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x16A0048", Offset = "0x16A0048", VA = "0x16A0048")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x16A00E8", Offset = "0x16A00E8", VA = "0x16A00E8")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x16A0188", Offset = "0x16A0188", VA = "0x16A0188")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x16A0228", Offset = "0x16A0228", VA = "0x16A0228")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x16A02C8", Offset = "0x16A02C8", VA = "0x16A02C8")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x16A0368", Offset = "0x16A0368", VA = "0x16A0368")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x16A0408", Offset = "0x16A0408", VA = "0x16A0408")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x16A04A8", Offset = "0x16A04A8", VA = "0x16A04A8")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x16A0548", Offset = "0x16A0548", VA = "0x16A0548")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x16A05E8", Offset = "0x16A05E8", VA = "0x16A05E8")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x16A0688", Offset = "0x16A0688", VA = "0x16A0688")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x16A0728", Offset = "0x16A0728", VA = "0x16A0728")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x16A07C8", Offset = "0x16A07C8", VA = "0x16A07C8")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x16A0868", Offset = "0x16A0868", VA = "0x16A0868")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x16A0904", Offset = "0x16A0904", VA = "0x16A0904")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x16A09A4", Offset = "0x16A09A4", VA = "0x16A09A4")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x16A0A40", Offset = "0x16A0A40", VA = "0x16A0A40")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x16A0AE0", Offset = "0x16A0AE0", VA = "0x16A0AE0")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x16A0B80", Offset = "0x16A0B80", VA = "0x16A0B80")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x16A0C20", Offset = "0x16A0C20", VA = "0x16A0C20")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x16A0C88", Offset = "0x16A0C88", VA = "0x16A0C88")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x16A0D28", Offset = "0x16A0D28", VA = "0x16A0D28")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x16A0D90", Offset = "0x16A0D90", VA = "0x16A0D90")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x16A0E30", Offset = "0x16A0E30", VA = "0x16A0E30")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x16A0ED0", Offset = "0x16A0ED0", VA = "0x16A0ED0")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x16A0F38", Offset = "0x16A0F38", VA = "0x16A0F38")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x16A0FD8", Offset = "0x16A0FD8", VA = "0x16A0FD8")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x16A1040", Offset = "0x16A1040", VA = "0x16A1040")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x16A10E0", Offset = "0x16A10E0", VA = "0x16A10E0")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x16A1190", Offset = "0x16A1190", VA = "0x16A1190")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x16A1230", Offset = "0x16A1230", VA = "0x16A1230")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x16A12D0", Offset = "0x16A12D0", VA = "0x16A12D0")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x16A1370", Offset = "0x16A1370", VA = "0x16A1370")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x16A1418", Offset = "0x16A1418", VA = "0x16A1418")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x16A14B8", Offset = "0x16A14B8", VA = "0x16A14B8")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x16A1558", Offset = "0x16A1558", VA = "0x16A1558")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x16A15C0", Offset = "0x16A15C0", VA = "0x16A15C0")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x16A1660", Offset = "0x16A1660", VA = "0x16A1660")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x16A16C8", Offset = "0x16A16C8", VA = "0x16A16C8")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x16A1768", Offset = "0x16A1768", VA = "0x16A1768")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x16A17D0", Offset = "0x16A17D0", VA = "0x16A17D0")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x16A1870", Offset = "0x16A1870", VA = "0x16A1870")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x16A18D8", Offset = "0x16A18D8", VA = "0x16A18D8")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x16A1978", Offset = "0x16A1978", VA = "0x16A1978")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x16A19E0", Offset = "0x16A19E0", VA = "0x16A19E0")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x16A1A80", Offset = "0x16A1A80", VA = "0x16A1A80")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x16A1AE8", Offset = "0x16A1AE8", VA = "0x16A1AE8")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x16A1B88", Offset = "0x16A1B88", VA = "0x16A1B88")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x16A1C38", Offset = "0x16A1C38", VA = "0x16A1C38")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x16A1CA0", Offset = "0x16A1CA0", VA = "0x16A1CA0")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x16A1D40", Offset = "0x16A1D40", VA = "0x16A1D40")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x16A1DE0", Offset = "0x16A1DE0", VA = "0x16A1DE0")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x16A1E88", Offset = "0x16A1E88", VA = "0x16A1E88")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x16A1EF0", Offset = "0x16A1EF0", VA = "0x16A1EF0")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x16A1F90", Offset = "0x16A1F90", VA = "0x16A1F90")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x16A1FF8", Offset = "0x16A1FF8", VA = "0x16A1FF8")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x16A2098", Offset = "0x16A2098", VA = "0x16A2098")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x16A2138", Offset = "0x16A2138", VA = "0x16A2138")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x16A21A0", Offset = "0x16A21A0", VA = "0x16A21A0")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x16A2240", Offset = "0x16A2240", VA = "0x16A2240")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x16A22F0", Offset = "0x16A22F0", VA = "0x16A22F0")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x16A2358", Offset = "0x16A2358", VA = "0x16A2358")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x16A23F8", Offset = "0x16A23F8", VA = "0x16A23F8")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x16A2498", Offset = "0x16A2498", VA = "0x16A2498")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x16A2540", Offset = "0x16A2540", VA = "0x16A2540")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x16A25E0", Offset = "0x16A25E0", VA = "0x16A25E0")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x16A2680", Offset = "0x16A2680", VA = "0x16A2680")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x16A26E8", Offset = "0x16A26E8", VA = "0x16A26E8")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x16A2788", Offset = "0x16A2788", VA = "0x16A2788")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x16A2828", Offset = "0x16A2828", VA = "0x16A2828")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x16A28C8", Offset = "0x16A28C8", VA = "0x16A28C8")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x16A2970", Offset = "0x16A2970", VA = "0x16A2970")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x16A2A10", Offset = "0x16A2A10", VA = "0x16A2A10")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x16A2AB0", Offset = "0x16A2AB0", VA = "0x16A2AB0")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x16A2B50", Offset = "0x16A2B50", VA = "0x16A2B50")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x16A2BF0", Offset = "0x16A2BF0", VA = "0x16A2BF0")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x16A2C58", Offset = "0x16A2C58", VA = "0x16A2C58")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x16A2CF8", Offset = "0x16A2CF8", VA = "0x16A2CF8")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x16A2D94", Offset = "0x16A2D94", VA = "0x16A2D94")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x16A2E30", Offset = "0x16A2E30", VA = "0x16A2E30")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x16A2ED0", Offset = "0x16A2ED0", VA = "0x16A2ED0")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x16A2F6C", Offset = "0x16A2F6C", VA = "0x16A2F6C")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x16A300C", Offset = "0x16A300C", VA = "0x16A300C")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x16A30BC", Offset = "0x16A30BC", VA = "0x16A30BC")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x16A3124", Offset = "0x16A3124", VA = "0x16A3124")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x16A31C4", Offset = "0x16A31C4", VA = "0x16A31C4")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x16A3264", Offset = "0x16A3264", VA = "0x16A3264")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x16A330C", Offset = "0x16A330C", VA = "0x16A330C")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x16A33AC", Offset = "0x16A33AC", VA = "0x16A33AC")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x16A344C", Offset = "0x16A344C", VA = "0x16A344C")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x16A34EC", Offset = "0x16A34EC", VA = "0x16A34EC")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x16A3554", Offset = "0x16A3554", VA = "0x16A3554")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x16A35F4", Offset = "0x16A35F4", VA = "0x16A35F4")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x16A36A4", Offset = "0x16A36A4", VA = "0x16A36A4")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x16A370C", Offset = "0x16A370C", VA = "0x16A370C")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x16A37AC", Offset = "0x16A37AC", VA = "0x16A37AC")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x16A384C", Offset = "0x16A384C", VA = "0x16A384C")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x16A38F4", Offset = "0x16A38F4", VA = "0x16A38F4")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x16A3994", Offset = "0x16A3994", VA = "0x16A3994")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x16A3A34", Offset = "0x16A3A34", VA = "0x16A3A34")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x16A3AE4", Offset = "0x16A3AE4", VA = "0x16A3AE4")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x16A3B84", Offset = "0x16A3B84", VA = "0x16A3B84")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x16A3C24", Offset = "0x16A3C24", VA = "0x16A3C24")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x16A3CCC", Offset = "0x16A3CCC", VA = "0x16A3CCC")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x16A3D6C", Offset = "0x16A3D6C", VA = "0x16A3D6C")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x16A3E0C", Offset = "0x16A3E0C", VA = "0x16A3E0C")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x16A3EAC", Offset = "0x16A3EAC", VA = "0x16A3EAC")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x16A3F4C", Offset = "0x16A3F4C", VA = "0x16A3F4C")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x16A3FEC", Offset = "0x16A3FEC", VA = "0x16A3FEC")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x16A408C", Offset = "0x16A408C", VA = "0x16A408C")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x16A40F4", Offset = "0x16A40F4", VA = "0x16A40F4")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x16A4194", Offset = "0x16A4194", VA = "0x16A4194")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x16A4244", Offset = "0x16A4244", VA = "0x16A4244")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x16A42E4", Offset = "0x16A42E4", VA = "0x16A42E4")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x16A434C", Offset = "0x16A434C", VA = "0x16A434C")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x16A43EC", Offset = "0x16A43EC", VA = "0x16A43EC")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x16A448C", Offset = "0x16A448C", VA = "0x16A448C")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x16A452C", Offset = "0x16A452C", VA = "0x16A452C")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x16A4594", Offset = "0x16A4594", VA = "0x16A4594")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x16A4634", Offset = "0x16A4634", VA = "0x16A4634")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x16A46D4", Offset = "0x16A46D4", VA = "0x16A46D4")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x16A473C", Offset = "0x16A473C", VA = "0x16A473C")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x16A47DC", Offset = "0x16A47DC", VA = "0x16A47DC")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x16A487C", Offset = "0x16A487C", VA = "0x16A487C")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x16A491C", Offset = "0x16A491C", VA = "0x16A491C")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x16A4984", Offset = "0x16A4984", VA = "0x16A4984")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x16A4A24", Offset = "0x16A4A24", VA = "0x16A4A24")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x16A4AC4", Offset = "0x16A4AC4", VA = "0x16A4AC4")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x16A4B64", Offset = "0x16A4B64", VA = "0x16A4B64")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x16A4C14", Offset = "0x16A4C14", VA = "0x16A4C14")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x16A4CB4", Offset = "0x16A4CB4", VA = "0x16A4CB4")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x16A4D54", Offset = "0x16A4D54", VA = "0x16A4D54")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x16A4DBC", Offset = "0x16A4DBC", VA = "0x16A4DBC")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x16A4E5C", Offset = "0x16A4E5C", VA = "0x16A4E5C")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x16A4EC4", Offset = "0x16A4EC4", VA = "0x16A4EC4")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x16A4F64", Offset = "0x16A4F64", VA = "0x16A4F64")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x16A4FCC", Offset = "0x16A4FCC", VA = "0x16A4FCC")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x16A506C", Offset = "0x16A506C", VA = "0x16A506C")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x16A50D4", Offset = "0x16A50D4", VA = "0x16A50D4")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x16A5174", Offset = "0x16A5174", VA = "0x16A5174")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x16A51DC", Offset = "0x16A51DC", VA = "0x16A51DC")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x16A527C", Offset = "0x16A527C", VA = "0x16A527C")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x16A52E4", Offset = "0x16A52E4", VA = "0x16A52E4")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x16A5384", Offset = "0x16A5384", VA = "0x16A5384")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x16A5424", Offset = "0x16A5424", VA = "0x16A5424")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x16A548C", Offset = "0x16A548C", VA = "0x16A548C")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x16A552C", Offset = "0x16A552C", VA = "0x16A552C")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x16A55CC", Offset = "0x16A55CC", VA = "0x16A55CC")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x16A566C", Offset = "0x16A566C", VA = "0x16A566C")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x16A571C", Offset = "0x16A571C", VA = "0x16A571C")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x16A5784", Offset = "0x16A5784", VA = "0x16A5784")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x16A5824", Offset = "0x16A5824", VA = "0x16A5824")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x16A58C4", Offset = "0x16A58C4", VA = "0x16A58C4")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x16A596C", Offset = "0x16A596C", VA = "0x16A596C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x16A5A1C", Offset = "0x16A5A1C", VA = "0x16A5A1C")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x16A5A84", Offset = "0x16A5A84", VA = "0x16A5A84")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x16A5B24", Offset = "0x16A5B24", VA = "0x16A5B24")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x16A5BC4", Offset = "0x16A5BC4", VA = "0x16A5BC4")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x16A5C6C", Offset = "0x16A5C6C", VA = "0x16A5C6C")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x16A5CD4", Offset = "0x16A5CD4", VA = "0x16A5CD4")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x16A5D74", Offset = "0x16A5D74", VA = "0x16A5D74")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x16A5E1C", Offset = "0x16A5E1C", VA = "0x16A5E1C")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x16A5EBC", Offset = "0x16A5EBC", VA = "0x16A5EBC")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x16A5F7C", Offset = "0x16A5F7C", VA = "0x16A5F7C")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x16A603C", Offset = "0x16A603C", VA = "0x16A603C")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x16A60FC", Offset = "0x16A60FC", VA = "0x16A60FC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x16A61BC", Offset = "0x16A61BC", VA = "0x16A61BC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x16A625C", Offset = "0x16A625C", VA = "0x16A625C")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x16A62EC", Offset = "0x16A62EC", VA = "0x16A62EC")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x16A638C", Offset = "0x16A638C", VA = "0x16A638C")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x16A643C", Offset = "0x16A643C", VA = "0x16A643C")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1685E48", Offset = "0x1685E48", VA = "0x1685E48")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x16860BC", Offset = "0x16860BC", VA = "0x16860BC")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1685F50", Offset = "0x1685F50", VA = "0x1685F50")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x16A64EC", Offset = "0x16A64EC", VA = "0x16A64EC")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x16A659C", Offset = "0x16A659C", VA = "0x16A659C")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x16A662C", Offset = "0x16A662C", VA = "0x16A662C")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x16A66CC", Offset = "0x16A66CC", VA = "0x16A66CC")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x16A6798", Offset = "0x16A6798", VA = "0x16A6798")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x16A6850", Offset = "0x16A6850", VA = "0x16A6850")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x16A68F0", Offset = "0x16A68F0", VA = "0x16A68F0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x16A69A0", Offset = "0x16A69A0", VA = "0x16A69A0")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x16A6A50", Offset = "0x16A6A50", VA = "0x16A6A50")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x16A6B00", Offset = "0x16A6B00", VA = "0x16A6B00")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x16A6BA0", Offset = "0x16A6BA0", VA = "0x16A6BA0")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x16A6C54", Offset = "0x16A6C54", VA = "0x16A6C54")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x16A6D0C", Offset = "0x16A6D0C", VA = "0x16A6D0C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x16A6DC8", Offset = "0x16A6DC8", VA = "0x16A6DC8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x16A6E88", Offset = "0x16A6E88", VA = "0x16A6E88")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x16A6F54", Offset = "0x16A6F54", VA = "0x16A6F54")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x16A700C", Offset = "0x16A700C", VA = "0x16A700C")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x16A70AC", Offset = "0x16A70AC", VA = "0x16A70AC")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x16A715C", Offset = "0x16A715C", VA = "0x16A715C")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x16A7208", Offset = "0x16A7208", VA = "0x16A7208")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x16A72B8", Offset = "0x16A72B8", VA = "0x16A72B8")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x16A7348", Offset = "0x16A7348", VA = "0x16A7348")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x16A73E8", Offset = "0x16A73E8", VA = "0x16A73E8")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x16A7494", Offset = "0x16A7494", VA = "0x16A7494")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x16A7544", Offset = "0x16A7544", VA = "0x16A7544")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x16A7610", Offset = "0x16A7610", VA = "0x16A7610")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x16A76C8", Offset = "0x16A76C8", VA = "0x16A76C8")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x16A7768", Offset = "0x16A7768", VA = "0x16A7768")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x16A7818", Offset = "0x16A7818", VA = "0x16A7818")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x16A78C4", Offset = "0x16A78C4", VA = "0x16A78C4")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x16A7974", Offset = "0x16A7974", VA = "0x16A7974")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x16A79F0", Offset = "0x16A79F0", VA = "0x16A79F0")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x16A7AA0", Offset = "0x16A7AA0", VA = "0x16A7AA0")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x16A7B50", Offset = "0x16A7B50", VA = "0x16A7B50")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x16A7C00", Offset = "0x16A7C00", VA = "0x16A7C00")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x16A7CB0", Offset = "0x16A7CB0", VA = "0x16A7CB0")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x16A7D5C", Offset = "0x16A7D5C", VA = "0x16A7D5C")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x16A7E0C", Offset = "0x16A7E0C", VA = "0x16A7E0C")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x16A7EBC", Offset = "0x16A7EBC", VA = "0x16A7EBC")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x16A7F38", Offset = "0x16A7F38", VA = "0x16A7F38")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x16A7FE8", Offset = "0x16A7FE8", VA = "0x16A7FE8")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x16A8078", Offset = "0x16A8078", VA = "0x16A8078")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x16A8118", Offset = "0x16A8118", VA = "0x16A8118")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x16A81E4", Offset = "0x16A81E4", VA = "0x16A81E4")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x16A829C", Offset = "0x16A829C", VA = "0x16A829C")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x16A833C", Offset = "0x16A833C", VA = "0x16A833C")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x16A83EC", Offset = "0x16A83EC", VA = "0x16A83EC")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x16A849C", Offset = "0x16A849C", VA = "0x16A849C")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x16A854C", Offset = "0x16A854C", VA = "0x16A854C")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x16A85FC", Offset = "0x16A85FC", VA = "0x16A85FC")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x16A86AC", Offset = "0x16A86AC", VA = "0x16A86AC")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x16A875C", Offset = "0x16A875C", VA = "0x16A875C")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x16A87EC", Offset = "0x16A87EC", VA = "0x16A87EC")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x16A888C", Offset = "0x16A888C", VA = "0x16A888C")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x16A893C", Offset = "0x16A893C", VA = "0x16A893C")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x16A89EC", Offset = "0x16A89EC", VA = "0x16A89EC")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x16A8A8C", Offset = "0x16A8A8C", VA = "0x16A8A8C")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x16A8B3C", Offset = "0x16A8B3C", VA = "0x16A8B3C")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x16A8BCC", Offset = "0x16A8BCC", VA = "0x16A8BCC")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x16A8C6C", Offset = "0x16A8C6C", VA = "0x16A8C6C")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x16A8D1C", Offset = "0x16A8D1C", VA = "0x16A8D1C")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x16A8DCC", Offset = "0x16A8DCC", VA = "0x16A8DCC")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x40016E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5ABC", Offset = "0x7C5ABC")]
		Unknown,
		[Token(Token = "0x40016EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5AF4", Offset = "0x7C5AF4")]
		InSync,
		[Token(Token = "0x40016EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5B2C", Offset = "0x7C5B2C")]
		NeedsDownload,
		[Token(Token = "0x40016EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5B64", Offset = "0x7C5B64")]
		RemoteDownloading,
		[Token(Token = "0x40016ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5B9C", Offset = "0x7C5B9C")]
		NeedsUpload,
		[Token(Token = "0x40016EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5BD4", Offset = "0x7C5BD4")]
		LocalUploading,
		[Token(Token = "0x40016EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5C0C", Offset = "0x7C5C0C")]
		InConflict
	}
	[Token(Token = "0x20003F1")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40016F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5C44", Offset = "0x7C5C44")]
		Unknown,
		[Token(Token = "0x40016F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5C7C", Offset = "0x7C5C7C")]
		Ok,
		[Token(Token = "0x40016F3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5CB4", Offset = "0x7C5CB4")]
		BetterVersionStored,
		[Token(Token = "0x40016F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5CEC", Offset = "0x7C5CEC")]
		ManualMergeRequired
	}
	[Token(Token = "0x20003F2")]
	public interface IMicrophone
	{
		[Token(Token = "0x6001D6C")]
		void Start();

		[Token(Token = "0x6001D6D")]
		void Stop();

		[Token(Token = "0x6001D6E")]
		float[] Update();
	}
	[Token(Token = "0x20003F3")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6001D6F")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6001D70")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6001D71")]
		void Update();

		[Token(Token = "0x6001D72")]
		int PeekSizeElements();
	}
	[Token(Token = "0x20003F4")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40016F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5D24", Offset = "0x7C5D24")]
		String,
		[Token(Token = "0x40016F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5D5C", Offset = "0x7C5D5C")]
		Int,
		[Token(Token = "0x40016F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5D94", Offset = "0x7C5D94")]
		Double,
		[Token(Token = "0x40016F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5DCC", Offset = "0x7C5DCC")]
		Unknown
	}
	[Token(Token = "0x20003F5")]
	public enum LaunchType
	{
		[Token(Token = "0x40016FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5E04", Offset = "0x7C5E04")]
		Unknown,
		[Token(Token = "0x40016FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5E3C", Offset = "0x7C5E3C")]
		Normal,
		[Token(Token = "0x40016FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5E74", Offset = "0x7C5E74")]
		Invite,
		[Token(Token = "0x40016FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5EAC", Offset = "0x7C5EAC")]
		Coordinated,
		[Token(Token = "0x40016FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5EE4", Offset = "0x7C5EE4")]
		Deeplink
	}
	[Token(Token = "0x20003F6")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001701")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5F1C", Offset = "0x7C5F1C")]
		None,
		[Token(Token = "0x4001702")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5F54", Offset = "0x7C5F54")]
		Friends,
		[Token(Token = "0x4001703")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5F8C", Offset = "0x7C5F8C")]
		Unknown
	}
	[Token(Token = "0x20003F7")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4001705")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5FC4", Offset = "0x7C5FC4")]
		Top,
		[Token(Token = "0x4001706")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C5FFC", Offset = "0x7C5FFC")]
		CenteredOnViewer,
		[Token(Token = "0x4001707")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6034", Offset = "0x7C6034")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4001708")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C606C", Offset = "0x7C606C")]
		Unknown
	}
	[Token(Token = "0x20003F8")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x400170A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C60A4", Offset = "0x7C60A4")]
		Unknown,
		[Token(Token = "0x400170B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C60DC", Offset = "0x7C60DC")]
		Public,
		[Token(Token = "0x400170C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6114", Offset = "0x7C6114")]
		Friends,
		[Token(Token = "0x400170D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C614C", Offset = "0x7C614C")]
		OnlyMe
	}
	[Token(Token = "0x20003F9")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x400170F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6184", Offset = "0x7C6184")]
		Unknown,
		[Token(Token = "0x4001710")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C61BC", Offset = "0x7C61BC")]
		MicrophoneOn,
		[Token(Token = "0x4001711")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C61F4", Offset = "0x7C61F4")]
		MicrophoneOff
	}
	[Token(Token = "0x20003FA")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4001713")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C622C", Offset = "0x7C622C")]
		Success = 1,
		[Token(Token = "0x4001714")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6264", Offset = "0x7C6264")]
		Unknown = 0,
		[Token(Token = "0x4001715")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C629C", Offset = "0x7C629C")]
		NoPackageSet = -1,
		[Token(Token = "0x4001716")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C62D4", Offset = "0x7C62D4")]
		NoFbConnect = -2,
		[Token(Token = "0x4001717")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C630C", Offset = "0x7C630C")]
		NoSessionId = -3,
		[Token(Token = "0x4001718")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6344", Offset = "0x7C6344")]
		MissingParameters = -4
	}
	[Token(Token = "0x20003FB")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x400171A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C637C", Offset = "0x7C637C")]
		Required,
		[Token(Token = "0x400171B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C63B4", Offset = "0x7C63B4")]
		High,
		[Token(Token = "0x400171C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C63EC", Offset = "0x7C63EC")]
		Medium,
		[Token(Token = "0x400171D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6424", Offset = "0x7C6424")]
		Low,
		[Token(Token = "0x400171E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C645C", Offset = "0x7C645C")]
		Unknown
	}
	[Token(Token = "0x20003FC")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xBA3CA0", Offset = "0xBA3CA0", VA = "0xBA3CA0")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xBA3D18", Offset = "0xBA3D18", VA = "0xBA3D18")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xBA3D9C", Offset = "0xBA3D9C", VA = "0xBA3D9C")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xBA3E08", Offset = "0xBA3E08", VA = "0xBA3E08")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xBA3E84", Offset = "0xBA3E84", VA = "0xBA3E84")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xBA3F00", Offset = "0xBA3F00", VA = "0xBA3F00")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xBA3F7C", Offset = "0xBA3F7C", VA = "0xBA3F7C")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xBA3FE8", Offset = "0xBA3FE8", VA = "0xBA3FE8")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xBA406C", Offset = "0xBA406C", VA = "0xBA406C")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xBA40F8", Offset = "0xBA40F8", VA = "0xBA40F8")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xBA417C", Offset = "0xBA417C", VA = "0xBA417C")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xBA41E8", Offset = "0xBA41E8", VA = "0xBA41E8")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xBA4264", Offset = "0xBA4264", VA = "0xBA4264")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xBA2F90", Offset = "0xBA2F90", VA = "0xBA2F90")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xBA42E0", Offset = "0xBA42E0", VA = "0xBA42E0", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001721")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6494", Offset = "0x7C6494")]
		Unknown,
		[Token(Token = "0x4001722")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C64CC", Offset = "0x7C64CC")]
		Trailing,
		[Token(Token = "0x4001723")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6504", Offset = "0x7C6504")]
		Swingy
	}
	[Token(Token = "0x20003FE")]
	public enum MediaContentType
	{
		[Token(Token = "0x4001725")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C653C", Offset = "0x7C653C")]
		Unknown,
		[Token(Token = "0x4001726")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6574", Offset = "0x7C6574")]
		Photo
	}
	[Token(Token = "0x20003FF")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20006DF")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700021E")]
		public T Data
		{
			[Token(Token = "0x6001D83")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001D82")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001D84")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000400")]
	public class Message
	{
		[Token(Token = "0x20006E0")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20006E1")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002111")]
			Unknown = 0u,
			[Token(Token = "0x4002112")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002113")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002114")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4002115")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4002116")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4002117")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4002118")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4002119")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400211A")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400211B")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x400211C")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x400211D")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x400211E")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x400211F")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4002120")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4002121")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4002122")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4002123")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4002124")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4002125")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4002126")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4002127")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4002128")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4002129")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x400212A")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x400212B")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x400212C")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x400212D")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x400212E")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x400212F")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4002130")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4002131")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4002132")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4002133")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4002134")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4002135")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4002136")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4002137")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4002138")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4002139")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x400213A")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400213B")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x400213C")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x400213D")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x400213E")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x400213F")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4002140")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4002141")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4002142")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4002143")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4002144")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4002145")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4002146")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4002147")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4002148")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4002149")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400214A")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x400214B")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x400214C")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x400214D")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x400214E")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x400214F")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4002150")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4002151")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4002152")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4002153")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4002154")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4002155")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4002156")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4002157")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4002158")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4002159")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x400215A")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x400215B")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x400215C")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x400215D")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x400215E")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x400215F")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4002160")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4002161")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4002162")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4002163")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4002164")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4002165")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4002166")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4002167")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4002168")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4002169")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x400216A")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x400216B")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x400216C")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x400216D")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x400216E")]
			Room_Join = 382373641u,
			[Token(Token = "0x400216F")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4002170")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4002171")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4002172")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4002173")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4002174")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4002175")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4002176")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4002177")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4002178")]
			User_Get = 1808768583u,
			[Token(Token = "0x4002179")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x400217A")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x400217B")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x400217C")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x400217D")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x400217E")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x400217F")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4002180")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4002181")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4002182")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4002183")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4002184")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4002185")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4002186")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4002187")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4002188")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4002189")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x400218A")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x400218B")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x400218C")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x400218D")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x400218E")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x400218F")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4002190")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4002191")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4002192")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4002193")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4002194")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4002195")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4002196")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4002197")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4002198")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4002199")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x400219A")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20006E2")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C65AC", Offset = "0x7C65AC")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700021F")]
		public MessageType Type
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xB9F92C", Offset = "0xB9F92C", VA = "0xB9F92C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000220")]
		public bool IsError
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xBA473C", Offset = "0xBA473C", VA = "0xBA473C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public ulong RequestID
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xB9F924", Offset = "0xB9F924", VA = "0xB9F924")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000222")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xBA7934", Offset = "0xBA7934", VA = "0xBA7934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2350", Offset = "0x7D2350")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xBA78DC", Offset = "0xBA78DC", VA = "0xBA78DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2340", Offset = "0x7D2340")]
			set
			{
			}
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xBA448C", Offset = "0xBA448C", VA = "0xBA448C")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xBA4734", Offset = "0xBA4734", VA = "0xBA4734", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xBA474C", Offset = "0xBA474C", VA = "0xBA474C", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xBA4754", Offset = "0xBA4754", VA = "0xBA4754", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xBA475C", Offset = "0xBA475C", VA = "0xBA475C", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xBA4764", Offset = "0xBA4764", VA = "0xBA4764", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xBA476C", Offset = "0xBA476C", VA = "0xBA476C", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xBA4774", Offset = "0xBA4774", VA = "0xBA4774", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xBA477C", Offset = "0xBA477C", VA = "0xBA477C", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xBA4784", Offset = "0xBA4784", VA = "0xBA4784", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xBA478C", Offset = "0xBA478C", VA = "0xBA478C", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xBA4794", Offset = "0xBA4794", VA = "0xBA4794", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xBA479C", Offset = "0xBA479C", VA = "0xBA479C", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xBA47A4", Offset = "0xBA47A4", VA = "0xBA47A4", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xBA47AC", Offset = "0xBA47AC", VA = "0xBA47AC", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xBA47B4", Offset = "0xBA47B4", VA = "0xBA47B4", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xBA47BC", Offset = "0xBA47BC", VA = "0xBA47BC", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xBA47C4", Offset = "0xBA47C4", VA = "0xBA47C4", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xBA47CC", Offset = "0xBA47CC", VA = "0xBA47CC", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xBA47D4", Offset = "0xBA47D4", VA = "0xBA47D4", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xBA47DC", Offset = "0xBA47DC", VA = "0xBA47DC", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xBA47E4", Offset = "0xBA47E4", VA = "0xBA47E4", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xBA47EC", Offset = "0xBA47EC", VA = "0xBA47EC", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xBA47F4", Offset = "0xBA47F4", VA = "0xBA47F4", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xBA47FC", Offset = "0xBA47FC", VA = "0xBA47FC", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xBA4804", Offset = "0xBA4804", VA = "0xBA4804", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xBA480C", Offset = "0xBA480C", VA = "0xBA480C", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xBA4814", Offset = "0xBA4814", VA = "0xBA4814", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xBA481C", Offset = "0xBA481C", VA = "0xBA481C", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xBA4824", Offset = "0xBA4824", VA = "0xBA4824", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xBA482C", Offset = "0xBA482C", VA = "0xBA482C", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xBA4834", Offset = "0xBA4834", VA = "0xBA4834", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xBA483C", Offset = "0xBA483C", VA = "0xBA483C", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xBA4844", Offset = "0xBA4844", VA = "0xBA4844", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xBA484C", Offset = "0xBA484C", VA = "0xBA484C", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xBA4854", Offset = "0xBA4854", VA = "0xBA4854", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xBA485C", Offset = "0xBA485C", VA = "0xBA485C", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xBA4864", Offset = "0xBA4864", VA = "0xBA4864", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xBA486C", Offset = "0xBA486C", VA = "0xBA486C", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xBA4874", Offset = "0xBA4874", VA = "0xBA4874", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xBA487C", Offset = "0xBA487C", VA = "0xBA487C", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xBA4884", Offset = "0xBA4884", VA = "0xBA4884", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xBA488C", Offset = "0xBA488C", VA = "0xBA488C", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xBA4894", Offset = "0xBA4894", VA = "0xBA4894", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xBA489C", Offset = "0xBA489C", VA = "0xBA489C", Slot = "46")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xBA48A4", Offset = "0xBA48A4", VA = "0xBA48A4", Slot = "47")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xBA48AC", Offset = "0xBA48AC", VA = "0xBA48AC", Slot = "48")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xBA48B4", Offset = "0xBA48B4", VA = "0xBA48B4", Slot = "49")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xBA48BC", Offset = "0xBA48BC", VA = "0xBA48BC", Slot = "50")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xBA48C4", Offset = "0xBA48C4", VA = "0xBA48C4", Slot = "51")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xBA48CC", Offset = "0xBA48CC", VA = "0xBA48CC", Slot = "52")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xBA48D4", Offset = "0xBA48D4", VA = "0xBA48D4", Slot = "53")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xBA48DC", Offset = "0xBA48DC", VA = "0xBA48DC", Slot = "54")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xBA48E4", Offset = "0xBA48E4", VA = "0xBA48E4", Slot = "55")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xBA48EC", Offset = "0xBA48EC", VA = "0xBA48EC", Slot = "56")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xBA48F4", Offset = "0xBA48F4", VA = "0xBA48F4", Slot = "57")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xBA48FC", Offset = "0xBA48FC", VA = "0xBA48FC", Slot = "58")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xBA4904", Offset = "0xBA4904", VA = "0xBA4904", Slot = "59")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xBA490C", Offset = "0xBA490C", VA = "0xBA490C", Slot = "60")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xBA4914", Offset = "0xBA4914", VA = "0xBA4914", Slot = "61")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xBA491C", Offset = "0xBA491C", VA = "0xBA491C", Slot = "62")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xBA4924", Offset = "0xBA4924", VA = "0xBA4924", Slot = "63")]
		public virtual Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xBA492C", Offset = "0xBA492C", VA = "0xBA492C", Slot = "64")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xBA4934", Offset = "0xBA4934", VA = "0xBA4934", Slot = "65")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xBA493C", Offset = "0xBA493C", VA = "0xBA493C", Slot = "66")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xBA4944", Offset = "0xBA4944", VA = "0xBA4944", Slot = "67")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xBA494C", Offset = "0xBA494C", VA = "0xBA494C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xB9F380", Offset = "0xB9F380", VA = "0xB9F380")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000401")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xBA7CF8", Offset = "0xBA7CF8", VA = "0xBA7CF8")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xBA7D58", Offset = "0xBA7D58", VA = "0xBA7D58", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xBA7DA8", Offset = "0xBA7DA8", VA = "0xBA7DA8", Slot = "68")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000402")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xBA5E38", Offset = "0xBA5E38", VA = "0xBA5E38")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xBA7ED8", Offset = "0xBA7ED8", VA = "0xBA7ED8", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xBA7F28", Offset = "0xBA7F28", VA = "0xBA7F28", Slot = "68")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000403")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xBA5E98", Offset = "0xBA5E98", VA = "0xBA5E98")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xBA81EC", Offset = "0xBA81EC", VA = "0xBA81EC", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xBA823C", Offset = "0xBA823C", VA = "0xBA823C", Slot = "68")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000404")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xBA5EF8", Offset = "0xBA5EF8", VA = "0xBA5EF8")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xBA8500", Offset = "0xBA8500", VA = "0xBA8500", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xBA8550", Offset = "0xBA8550", VA = "0xBA8550", Slot = "68")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000405")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xBA5F58", Offset = "0xBA5F58", VA = "0xBA5F58")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xBA8694", Offset = "0xBA8694", VA = "0xBA8694", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xBA86E4", Offset = "0xBA86E4", VA = "0xBA86E4", Slot = "68")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000406")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xBA5FB8", Offset = "0xBA5FB8", VA = "0xBA5FB8")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xBA8854", Offset = "0xBA8854", VA = "0xBA8854", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xBA88A4", Offset = "0xBA88A4", VA = "0xBA88A4", Slot = "68")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000407")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xBA6018", Offset = "0xBA6018", VA = "0xBA6018")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xBA8AF8", Offset = "0xBA8AF8", VA = "0xBA8AF8", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xBA8B48", Offset = "0xBA8B48", VA = "0xBA8B48", Slot = "68")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000408")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xBA6078", Offset = "0xBA6078", VA = "0xBA6078")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xBA8DC0", Offset = "0xBA8DC0", VA = "0xBA8DC0", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xBA8E10", Offset = "0xBA8E10", VA = "0xBA8E10", Slot = "68")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000409")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xBA60D8", Offset = "0xBA60D8", VA = "0xBA60D8")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xBA8F78", Offset = "0xBA8F78", VA = "0xBA8F78", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xBA8FC8", Offset = "0xBA8FC8", VA = "0xBA8FC8", Slot = "68")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040A")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xBA6138", Offset = "0xBA6138", VA = "0xBA6138")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xBA9130", Offset = "0xBA9130", VA = "0xBA9130", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xBA9180", Offset = "0xBA9180", VA = "0xBA9180", Slot = "68")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040B")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xBA6198", Offset = "0xBA6198", VA = "0xBA6198")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xBA92C0", Offset = "0xBA92C0", VA = "0xBA92C0", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xBA9310", Offset = "0xBA9310", VA = "0xBA9310", Slot = "68")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040C")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xBA61F8", Offset = "0xBA61F8", VA = "0xBA61F8")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xBA9478", Offset = "0xBA9478", VA = "0xBA9478", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xBA94C8", Offset = "0xBA94C8", VA = "0xBA94C8", Slot = "68")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040D")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xBA6258", Offset = "0xBA6258", VA = "0xBA6258")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xBA9618", Offset = "0xBA9618", VA = "0xBA9618", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xBA9668", Offset = "0xBA9668", VA = "0xBA9668", Slot = "68")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040E")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xBA978C", Offset = "0xBA978C", VA = "0xBA978C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xBA97EC", Offset = "0xBA97EC", VA = "0xBA97EC", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xBA983C", Offset = "0xBA983C", VA = "0xBA983C", Slot = "68")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200040F")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xBA62B8", Offset = "0xBA62B8", VA = "0xBA62B8")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xBA9AB4", Offset = "0xBA9AB4", VA = "0xBA9AB4", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xBA9B04", Offset = "0xBA9B04", VA = "0xBA9B04", Slot = "68")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000410")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xBA6318", Offset = "0xBA6318", VA = "0xBA6318")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xBA9C94", Offset = "0xBA9C94", VA = "0xBA9C94", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xBA9CE4", Offset = "0xBA9CE4", VA = "0xBA9CE4", Slot = "68")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000411")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xBA6378", Offset = "0xBA6378", VA = "0xBA6378")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xBAA178", Offset = "0xBAA178", VA = "0xBAA178", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xBAA1C8", Offset = "0xBAA1C8", VA = "0xBAA1C8", Slot = "68")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000412")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xBA63D8", Offset = "0xBA63D8", VA = "0xBA63D8")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xBA9E64", Offset = "0xBA9E64", VA = "0xBA9E64", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xBA9EB4", Offset = "0xBA9EB4", VA = "0xBA9EB4", Slot = "68")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000413")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xBA6438", Offset = "0xBA6438", VA = "0xBA6438")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xBAA398", Offset = "0xBAA398", VA = "0xBAA398", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xBAA3E8", Offset = "0xBAA3E8", VA = "0xBAA3E8", Slot = "68")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000414")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xBA6498", Offset = "0xBA6498", VA = "0xBA6498")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xBAA568", Offset = "0xBAA568", VA = "0xBAA568", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xBAA5B8", Offset = "0xBAA5B8", VA = "0xBAA5B8", Slot = "68")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000415")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xBAAAC0", Offset = "0xBAAAC0", VA = "0xBAAAC0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xBAAB20", Offset = "0xBAAB20", VA = "0xBAAB20", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xBAAB70", Offset = "0xBAAB70", VA = "0xBAAB70", Slot = "68")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000416")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xBAADE8", Offset = "0xBAADE8", VA = "0xBAADE8")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xBAAE48", Offset = "0xBAAE48", VA = "0xBAAE48", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xBAAE98", Offset = "0xBAAE98", VA = "0xBAAE98", Slot = "68")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000417")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xBA64F8", Offset = "0xBA64F8", VA = "0xBA64F8")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xBAAFD4", Offset = "0xBAAFD4", VA = "0xBAAFD4", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xBAB024", Offset = "0xBAB024", VA = "0xBAB024", Slot = "68")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000418")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xBAB160", Offset = "0xBAB160", VA = "0xBAB160")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xBAB1C0", Offset = "0xBAB1C0", VA = "0xBAB1C0", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xBAB210", Offset = "0xBAB210", VA = "0xBAB210", Slot = "68")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000419")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xBAB348", Offset = "0xBAB348", VA = "0xBAB348")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xBAB3A8", Offset = "0xBAB3A8", VA = "0xBAB3A8", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xBAB3F8", Offset = "0xBAB3F8", VA = "0xBAB3F8", Slot = "68")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041A")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xBA6558", Offset = "0xBA6558", VA = "0xBA6558")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xBAB5FC", Offset = "0xBAB5FC", VA = "0xBAB5FC", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xBAB64C", Offset = "0xBAB64C", VA = "0xBAB64C", Slot = "68")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041B")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xBAB944", Offset = "0xBAB944", VA = "0xBAB944")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xBAB9A4", Offset = "0xBAB9A4", VA = "0xBAB9A4", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xBAB9F4", Offset = "0xBAB9F4", VA = "0xBAB9F4", Slot = "68")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041C")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xBABC6C", Offset = "0xBABC6C", VA = "0xBABC6C")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xBABCCC", Offset = "0xBABCCC", VA = "0xBABCCC", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xBABD1C", Offset = "0xBABD1C", VA = "0xBABD1C", Slot = "68")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041D")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xBABE44", Offset = "0xBABE44", VA = "0xBABE44")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xBABEA4", Offset = "0xBABEA4", VA = "0xBABEA4", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xBABEF4", Offset = "0xBABEF4", VA = "0xBABEF4", Slot = "68")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041E")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xBA6618", Offset = "0xBA6618", VA = "0xBA6618")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xBAC018", Offset = "0xBAC018", VA = "0xBAC018", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xBAC068", Offset = "0xBAC068", VA = "0xBAC068", Slot = "68")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200041F")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xBAC1DC", Offset = "0xBAC1DC", VA = "0xBAC1DC")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xBAC23C", Offset = "0xBAC23C", VA = "0xBAC23C", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xBAC28C", Offset = "0xBAC28C", VA = "0xBAC28C", Slot = "68")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000420")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xBA6678", Offset = "0xBA6678", VA = "0xBA6678")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xBAC3DC", Offset = "0xBAC3DC", VA = "0xBAC3DC", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xBAC42C", Offset = "0xBAC42C", VA = "0xBAC42C", Slot = "68")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000421")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xBA6738", Offset = "0xBA6738", VA = "0xBA6738")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xBAC7E8", Offset = "0xBAC7E8", VA = "0xBAC7E8", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xBAC838", Offset = "0xBAC838", VA = "0xBAC838", Slot = "68")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000422")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xBA6798", Offset = "0xBA6798", VA = "0xBA6798")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xBACA5C", Offset = "0xBACA5C", VA = "0xBACA5C", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xBACAAC", Offset = "0xBACAAC", VA = "0xBACAAC", Slot = "68")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xBA67F8", Offset = "0xBA67F8", VA = "0xBA67F8")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xBAD148", Offset = "0xBAD148", VA = "0xBAD148", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xBAD198", Offset = "0xBAD198", VA = "0xBAD198", Slot = "68")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000424")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xBA6858", Offset = "0xBA6858", VA = "0xBA6858")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xBAD458", Offset = "0xBAD458", VA = "0xBAD458", Slot = "46")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xBAD4A8", Offset = "0xBAD4A8", VA = "0xBAD4A8", Slot = "68")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000425")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xBAD5CC", Offset = "0xBAD5CC", VA = "0xBAD5CC")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xBAD62C", Offset = "0xBAD62C", VA = "0xBAD62C", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xBAD67C", Offset = "0xBAD67C", VA = "0xBAD67C", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000426")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xBA68B8", Offset = "0xBA68B8", VA = "0xBA68B8")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xBADB88", Offset = "0xBADB88", VA = "0xBADB88", Slot = "47")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xBADBD8", Offset = "0xBADBD8", VA = "0xBADBD8", Slot = "68")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xBAD9B4", Offset = "0xBAD9B4", VA = "0xBAD9B4")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xBADA14", Offset = "0xBADA14", VA = "0xBADA14", Slot = "48")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xBADA64", Offset = "0xBADA64", VA = "0xBADA64", Slot = "68")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000428")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xBA6918", Offset = "0xBA6918", VA = "0xBA6918")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xBADC74", Offset = "0xBADC74", VA = "0xBADC74", Slot = "49")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xBADCC4", Offset = "0xBADCC4", VA = "0xBADCC4", Slot = "68")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000429")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xBA6978", Offset = "0xBA6978", VA = "0xBA6978")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xBADE74", Offset = "0xBADE74", VA = "0xBADE74", Slot = "50")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xBADEC4", Offset = "0xBADEC4", VA = "0xBADEC4", Slot = "68")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042A")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xBA69D8", Offset = "0xBA69D8", VA = "0xBA69D8")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xBAE45C", Offset = "0xBAE45C", VA = "0xBAE45C", Slot = "51")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xBAE4AC", Offset = "0xBAE4AC", VA = "0xBAE4AC", Slot = "68")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042B")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xBA6A38", Offset = "0xBA6A38", VA = "0xBA6A38")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xBAE770", Offset = "0xBAE770", VA = "0xBAE770", Slot = "52")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xBAE7C0", Offset = "0xBAE7C0", VA = "0xBAE7C0", Slot = "68")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042C")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xBA6A98", Offset = "0xBA6A98", VA = "0xBA6A98")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xBAE920", Offset = "0xBAE920", VA = "0xBAE920", Slot = "53")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xBAE970", Offset = "0xBAE970", VA = "0xBAE970", Slot = "68")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042D")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xBA6AF8", Offset = "0xBA6AF8", VA = "0xBA6AF8")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xBAEC34", Offset = "0xBAEC34", VA = "0xBAEC34", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xBAEC84", Offset = "0xBAEC84", VA = "0xBAEC84", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042E")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xBA6B58", Offset = "0xBA6B58", VA = "0xBA6B58")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xBAF4EC", Offset = "0xBAF4EC", VA = "0xBAF4EC", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xBAF53C", Offset = "0xBAF53C", VA = "0xBAF53C", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200042F")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xBA6BB8", Offset = "0xBA6BB8", VA = "0xBA6BB8")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xBAF5D8", Offset = "0xBAF5D8", VA = "0xBAF5D8", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xBAF628", Offset = "0xBAF628", VA = "0xBAF628", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000430")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xBA6C18", Offset = "0xBA6C18", VA = "0xBA6C18")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xBAF1D8", Offset = "0xBAF1D8", VA = "0xBAF1D8", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xBAF228", Offset = "0xBAF228", VA = "0xBAF228", Slot = "68")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000431")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xBA6C78", Offset = "0xBA6C78", VA = "0xBA6C78")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xBAED20", Offset = "0xBAED20", VA = "0xBAED20", Slot = "55")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xBAED70", Offset = "0xBAED70", VA = "0xBAED70", Slot = "68")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000432")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xBA6CD8", Offset = "0xBA6CD8", VA = "0xBA6CD8")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xBAEEC4", Offset = "0xBAEEC4", VA = "0xBAEEC4", Slot = "56")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xBAEF14", Offset = "0xBAEF14", VA = "0xBAEF14", Slot = "68")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000433")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xBA6D38", Offset = "0xBA6D38", VA = "0xBA6D38")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xBAF6C4", Offset = "0xBAF6C4", VA = "0xBAF6C4", Slot = "58")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xBAF714", Offset = "0xBAF714", VA = "0xBAF714", Slot = "68")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000434")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xBA6D98", Offset = "0xBA6D98", VA = "0xBA6D98")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xBAF98C", Offset = "0xBAF98C", VA = "0xBAF98C", Slot = "59")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xBAF9DC", Offset = "0xBAF9DC", VA = "0xBAF9DC", Slot = "68")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000435")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xBA6DF8", Offset = "0xBA6DF8", VA = "0xBA6DF8")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xBAFB00", Offset = "0xBAFB00", VA = "0xBAFB00", Slot = "60")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xBAFB50", Offset = "0xBAFB50", VA = "0xBAFB50", Slot = "68")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000436")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xBAFBB8", Offset = "0xBAFBB8", VA = "0xBAFBB8")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xBAFC18", Offset = "0xBAFC18", VA = "0xBAFC18", Slot = "61")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xBAFC68", Offset = "0xBAFC68", VA = "0xBAFC68", Slot = "68")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000437")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xBA6E58", Offset = "0xBA6E58", VA = "0xBA6E58")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xBAFDA0", Offset = "0xBAFDA0", VA = "0xBAFDA0", Slot = "62")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xBAFDF0", Offset = "0xBAFDF0", VA = "0xBAFDF0", Slot = "68")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000438")]
	public class MessageWithUser : Message<Oculus.Platform.Models.User>
	{
		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xBA6EB8", Offset = "0xBA6EB8", VA = "0xBA6EB8")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xBAFF24", Offset = "0xBAFF24", VA = "0xBAFF24", Slot = "63")]
		public override Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xBAFF74", Offset = "0xBAFF74", VA = "0xBAFF74", Slot = "68")]
		protected override Oculus.Platform.Models.User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000439")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xBA6F18", Offset = "0xBA6F18", VA = "0xBA6F18")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xBB0184", Offset = "0xBB0184", VA = "0xBB0184", Slot = "64")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xBB01D4", Offset = "0xBB01D4", VA = "0xBB01D4", Slot = "68")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043A")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xBA6F78", Offset = "0xBA6F78", VA = "0xBA6F78")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xBB0498", Offset = "0xBB0498", VA = "0xBB0498", Slot = "65")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xBB04E8", Offset = "0xBB04E8", VA = "0xBB04E8", Slot = "68")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043B")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xBA6FD8", Offset = "0xBA6FD8", VA = "0xBA6FD8")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xBB07AC", Offset = "0xBB07AC", VA = "0xBB07AC", Slot = "66")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xBB07FC", Offset = "0xBB07FC", VA = "0xBB07FC", Slot = "68")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043C")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xBB092C", Offset = "0xBB092C", VA = "0xBB092C")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xBB098C", Offset = "0xBB098C", VA = "0xBB098C", Slot = "67")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xBB09DC", Offset = "0xBB09DC", VA = "0xBB09DC", Slot = "68")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xBA7038", Offset = "0xBA7038", VA = "0xBA7038")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xBAD30C", Offset = "0xBAD30C", VA = "0xBAD30C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xBAD35C", Offset = "0xBAD35C", VA = "0xBAD35C", Slot = "68")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043E")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xBA7098", Offset = "0xBA7098", VA = "0xBA7098")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xBAE13C", Offset = "0xBAE13C", VA = "0xBAE13C", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xBAE18C", Offset = "0xBAE18C", VA = "0xBAE18C", Slot = "68")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200043F")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xBA65B8", Offset = "0xBA65B8", VA = "0xBA65B8")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xBAB534", Offset = "0xBAB534", VA = "0xBAB534", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xBAB584", Offset = "0xBAB584", VA = "0xBAB584", Slot = "68")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000440")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xBA70F8", Offset = "0xBA70F8", VA = "0xBA70F8")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xBACC3C", Offset = "0xBACC3C", VA = "0xBACC3C", Slot = "54")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xBACC8C", Offset = "0xBACC8C", VA = "0xBACC8C", Slot = "68")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000441")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xBA66D8", Offset = "0xBA66D8", VA = "0xBA66D8")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xBAC590", Offset = "0xBAC590", VA = "0xBAC590", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xBAC5F4", Offset = "0xBAC5F4", VA = "0xBAC5F4", Slot = "57")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xBAC658", Offset = "0xBAC658", VA = "0xBAC658", Slot = "68")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000442")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xBA7158", Offset = "0xBA7158", VA = "0xBA7158")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xBAA87C", Offset = "0xBAA87C", VA = "0xBAA87C", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xBAA8CC", Offset = "0xBAA8CC", VA = "0xBAA8CC", Slot = "68")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000443")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xBA71B8", Offset = "0xBA71B8", VA = "0xBA71B8")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xBAE2E8", Offset = "0xBAE2E8", VA = "0xBAE2E8", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xBAE338", Offset = "0xBAE338", VA = "0xBAE338", Slot = "68")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000444")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000223")]
		public ulong SenderID
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xBB2DD4", Offset = "0xBB2DD4", VA = "0xBB2DD4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000224")]
		public ulong Size
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xBB2E40", Offset = "0xBB2E40", VA = "0xBB2E40")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000225")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xBB2E48", Offset = "0xBB2E48", VA = "0xBB2E48")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xBB20FC", Offset = "0xBB20FC", VA = "0xBB20FC")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xBB2C74", Offset = "0xBB2C74", VA = "0xBB2C74")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xBB2EB4", Offset = "0xBB2EB4", VA = "0xBB2EB4", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xBB2F28", Offset = "0xBB2F28", VA = "0xBB2F28", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x400172F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C65BC", Offset = "0x7C65BC")]
		Unknown,
		[Token(Token = "0x4001730")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C65F4", Offset = "0x7C65F4")]
		Join,
		[Token(Token = "0x4001731")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C662C", Offset = "0x7C662C")]
		Leave,
		[Token(Token = "0x4001732")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6664", Offset = "0x7C6664")]
		Invite,
		[Token(Token = "0x4001733")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C669C", Offset = "0x7C669C")]
		Uninvite
	}
	[Token(Token = "0x2000446")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4001735")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C66D4", Offset = "0x7C66D4")]
		Unknown,
		[Token(Token = "0x4001736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C670C", Offset = "0x7C670C")]
		Connected,
		[Token(Token = "0x4001737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6744", Offset = "0x7C6744")]
		Timeout,
		[Token(Token = "0x4001738")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C677C", Offset = "0x7C677C")]
		Closed
	}
	[Token(Token = "0x2000447")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x400173A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C67B4", Offset = "0x7C67B4")]
		Unknown,
		[Token(Token = "0x400173B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C67EC", Offset = "0x7C67EC")]
		Granted,
		[Token(Token = "0x400173C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6824", Offset = "0x7C6824")]
		Denied,
		[Token(Token = "0x400173D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C685C", Offset = "0x7C685C")]
		Blocked
	}
	[Token(Token = "0x2000448")]
	public enum PermissionType
	{
		[Token(Token = "0x400173F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6894", Offset = "0x7C6894")]
		Unknown,
		[Token(Token = "0x4001740")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C68CC", Offset = "0x7C68CC")]
		Microphone,
		[Token(Token = "0x4001741")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6904", Offset = "0x7C6904")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000449")]
	public sealed class Core
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xBA0158", Offset = "0xBA0158", VA = "0xBA0158")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xBA0B04", Offset = "0xBA0B04", VA = "0xBA0B04")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xBA0B70", Offset = "0xBA0B70", VA = "0xBA0B70")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xBA0D78", Offset = "0xBA0D78", VA = "0xBA0D78")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xBA105C", Offset = "0xBA105C", VA = "0xBA105C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xBA0D50", Offset = "0xBA0D50", VA = "0xBA0D50")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xBA13B0", Offset = "0xBA13B0", VA = "0xBA13B0")]
		public Core()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x1685C40", Offset = "0x1685C40", VA = "0x1685C40")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1685D5C", Offset = "0x1685D5C", VA = "0x1685D5C")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200044B")]
	public static class Rooms
	{
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xBB4948", Offset = "0xBB4948", VA = "0xBB4948")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xBB4C3C", Offset = "0xBB4C3C", VA = "0xBB4C3C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D2360", Offset = "0x7D2360")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xBB4CB8", Offset = "0xBB4CB8", VA = "0xBB4CB8")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xBB4DA0", Offset = "0xBB4DA0", VA = "0xBB4DA0")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xBB4EB4", Offset = "0xBB4EB4", VA = "0xBB4EB4")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xBB4F84", Offset = "0xBB4F84", VA = "0xBB4F84")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xBB504C", Offset = "0xBB504C", VA = "0xBB504C")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xBB511C", Offset = "0xBB511C", VA = "0xBB511C")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xBB51E4", Offset = "0xBB51E4", VA = "0xBB51E4")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xBB52E0", Offset = "0xBB52E0", VA = "0xBB52E0")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xBB53A8", Offset = "0xBB53A8", VA = "0xBB53A8")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xBB5488", Offset = "0xBB5488", VA = "0xBB5488")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xBB5568", Offset = "0xBB5568", VA = "0xBB5568")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xBB5674", Offset = "0xBB5674", VA = "0xBB5674")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xBB575C", Offset = "0xBB575C", VA = "0xBB575C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xBB5824", Offset = "0xBB5824", VA = "0xBB5824")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xBB58F4", Offset = "0xBB58F4", VA = "0xBB58F4")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xBB59D4", Offset = "0xBB59D4", VA = "0xBB59D4")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xBB5AB4", Offset = "0xBB5AB4", VA = "0xBB5AB4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xBB5B8C", Offset = "0xBB5B8C", VA = "0xBB5B8C")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xBB4C40", Offset = "0xBB4C40", VA = "0xBB4C40")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xBB5C6C", Offset = "0xBB5C6C", VA = "0xBB5C6C")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xBB5CE4", Offset = "0xBB5CE4", VA = "0xBB5CE4")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xBB5D5C", Offset = "0xBB5D5C", VA = "0xBB5D5C")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200044C")]
	public static class Matchmaking
	{
		[Token(Token = "0x20006E3")]
		public class CustomQuery
		{
			[Token(Token = "0x2000740")]
			public struct Criterion
			{
				[Token(Token = "0x40022BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x40022BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x40022BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x60029CF")]
				[Address(RVA = "0x8652F4", Offset = "0x8652F4", VA = "0x8652F4")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x600293C")]
			[Address(RVA = "0xBA29D0", Offset = "0xBA29D0", VA = "0xBA29D0")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0xBA3C60", Offset = "0xBA3C60", VA = "0xBA3C60")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xBA2508", Offset = "0xBA2508", VA = "0xBA2508")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xBA27F8", Offset = "0xBA27F8", VA = "0xBA27F8")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xBA28E0", Offset = "0xBA28E0", VA = "0xBA28E0")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xBA2E84", Offset = "0xBA2E84", VA = "0xBA2E84")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xBA2FE0", Offset = "0xBA2FE0", VA = "0xBA2FE0")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xBA30B8", Offset = "0xBA30B8", VA = "0xBA30B8")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xBA3178", Offset = "0xBA3178", VA = "0xBA3178")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xBA3280", Offset = "0xBA3280", VA = "0xBA3280")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xBA338C", Offset = "0xBA338C", VA = "0xBA338C")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xBA3474", Offset = "0xBA3474", VA = "0xBA3474")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xBA3580", Offset = "0xBA3580", VA = "0xBA3580")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xBA3670", Offset = "0xBA3670", VA = "0xBA3670")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xBA377C", Offset = "0xBA377C", VA = "0xBA377C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xBA386C", Offset = "0xBA386C", VA = "0xBA386C")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xBA3978", Offset = "0xBA3978", VA = "0xBA3978")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xBA3A40", Offset = "0xBA3A40", VA = "0xBA3A40")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xBA3B20", Offset = "0xBA3B20", VA = "0xBA3B20")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xBA3BE8", Offset = "0xBA3BE8", VA = "0xBA3BE8")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200044D")]
	public static class Net
	{
		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xBB2030", Offset = "0xBB2030", VA = "0xBB2030")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xBB21BC", Offset = "0xBB21BC", VA = "0xBB21BC")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xBB22BC", Offset = "0xBB22BC", VA = "0xBB22BC")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xBB2358", Offset = "0xBB2358", VA = "0xBB2358")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xBB23F4", Offset = "0xBB23F4", VA = "0xBB23F4")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xBB2490", Offset = "0xBB2490", VA = "0xBB2490")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xBB2530", Offset = "0xBB2530", VA = "0xBB2530")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xBB2628", Offset = "0xBB2628", VA = "0xBB2628")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xBB26C0", Offset = "0xBB26C0", VA = "0xBB26C0")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xBB2754", Offset = "0xBB2754", VA = "0xBB2754")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xBB2824", Offset = "0xBB2824", VA = "0xBB2824")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xBB289C", Offset = "0xBB289C", VA = "0xBB289C")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xBB2914", Offset = "0xBB2914", VA = "0xBB2914")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200044E")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xBA1D4C", Offset = "0xBA1D4C", VA = "0xBA1D4C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xBA1E4C", Offset = "0xBA1E4C", VA = "0xBA1E4C")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xBA1F4C", Offset = "0xBA1F4C", VA = "0xBA1F4C")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xBA2044", Offset = "0xBA2044", VA = "0xBA2044")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xBA212C", Offset = "0xBA212C", VA = "0xBA212C")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200044F")]
	public static class Voip
	{
		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xC39448", Offset = "0xC39448", VA = "0xC39448")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xC397CC", Offset = "0xC397CC", VA = "0xC397CC")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xC394E8", Offset = "0xC394E8", VA = "0xC394E8")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xC3AFC0", Offset = "0xC3AFC0", VA = "0xC3AFC0")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xC3B098", Offset = "0xC3B098", VA = "0xC3B098")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xC3B138", Offset = "0xC3B138", VA = "0xC3B138")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xC3B1D4", Offset = "0xC3B1D4", VA = "0xC3B1D4")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xC3B270", Offset = "0xC3B270", VA = "0xC3B270")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xC3B314", Offset = "0xC3B314", VA = "0xC3B314")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xC3B3B8", Offset = "0xC3B3B8", VA = "0xC3B3B8")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xC3B45C", Offset = "0xC3B45C", VA = "0xC3B45C")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xC3B578", Offset = "0xC3B578", VA = "0xC3B578")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xC39290", Offset = "0xC39290", VA = "0xC39290")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xC39308", Offset = "0xC39308", VA = "0xC39308")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xC3B648", Offset = "0xC3B648", VA = "0xC3B648")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000450")]
	public static class Achievements
	{
		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xA3DAD0", Offset = "0xA3DAD0", VA = "0xA3DAD0")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xA3DBB0", Offset = "0xA3DBB0", VA = "0xA3DBB0")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xA3DC90", Offset = "0xA3DC90", VA = "0xA3DC90")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xA3DD58", Offset = "0xA3DD58", VA = "0xA3DD58")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xA3DE20", Offset = "0xA3DE20", VA = "0xA3DE20")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xA3DF04", Offset = "0xA3DF04", VA = "0xA3DF04")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xA3DFE8", Offset = "0xA3DFE8", VA = "0xA3DFE8")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xA3E0B8", Offset = "0xA3E0B8", VA = "0xA3E0B8")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xA3E218", Offset = "0xA3E218", VA = "0xA3E218")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000451")]
	public static class Application
	{
		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x16858E4", Offset = "0x16858E4", VA = "0x16858E4")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1685A38", Offset = "0x1685A38", VA = "0x1685A38")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000452")]
	public static class AssetFile
	{
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x168615C", Offset = "0x168615C", VA = "0x168615C")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x16862C8", Offset = "0x16862C8", VA = "0x16862C8")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1686434", Offset = "0x1686434", VA = "0x1686434")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x16865A8", Offset = "0x16865A8", VA = "0x16865A8")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1686714", Offset = "0x1686714", VA = "0x1686714")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1686880", Offset = "0x1686880", VA = "0x1686880")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x16869F4", Offset = "0x16869F4", VA = "0x16869F4")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1686B60", Offset = "0x1686B60", VA = "0x1686B60")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1686CCC", Offset = "0x1686CCC", VA = "0x1686CCC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1686E40", Offset = "0x1686E40", VA = "0x1686E40")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1686F94", Offset = "0x1686F94", VA = "0x1686F94")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1687100", Offset = "0x1687100", VA = "0x1687100")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x168726C", Offset = "0x168726C", VA = "0x168726C")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x16873E0", Offset = "0x16873E0", VA = "0x16873E0")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000453")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000454")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000455")]
	public static class CloudStorage
	{
		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xBA0078", Offset = "0xBA0078", VA = "0xBA0078")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xBA01C0", Offset = "0xBA01C0", VA = "0xBA01C0")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xBA02A0", Offset = "0xBA02A0", VA = "0xBA02A0")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xBA0370", Offset = "0xBA0370", VA = "0xBA0370")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xBA0450", Offset = "0xBA0450", VA = "0xBA0450")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xBA0520", Offset = "0xBA0520", VA = "0xBA0520")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xBA0600", Offset = "0xBA0600", VA = "0xBA0600")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xBA06E8", Offset = "0xBA06E8", VA = "0xBA06E8")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xBA07D0", Offset = "0xBA07D0", VA = "0xBA07D0")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xBA08E4", Offset = "0xBA08E4", VA = "0xBA08E4")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000456")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xBA0A3C", Offset = "0xBA0A3C", VA = "0xBA0A3C")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x2000457")]
	public static class Colocation
	{
	}
	[Token(Token = "0x2000458")]
	public static class Entitlements
	{
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xBA13BC", Offset = "0xBA13BC", VA = "0xBA13BC")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000459")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200045A")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200045B")]
	public static class IAP
	{
		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xBA14A8", Offset = "0xBA14A8", VA = "0xBA14A8")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xBA1570", Offset = "0xBA1570", VA = "0xBA1570")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xBA1654", Offset = "0xBA1654", VA = "0xBA1654")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xBA171C", Offset = "0xBA171C", VA = "0xBA171C")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xBA17E4", Offset = "0xBA17E4", VA = "0xBA17E4")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xBA1904", Offset = "0xBA1904", VA = "0xBA1904")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xBA1A5C", Offset = "0xBA1A5C", VA = "0xBA1A5C")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200045C")]
	public static class LanguagePack
	{
		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xBA1BB4", Offset = "0xBA1BB4", VA = "0xBA1BB4")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xBA1C7C", Offset = "0xBA1C7C", VA = "0xBA1C7C")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x200045D")]
	public static class Livestreaming
	{
		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xBA2238", Offset = "0xBA2238", VA = "0xBA2238")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xBA2300", Offset = "0xBA2300", VA = "0xBA2300")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xBA23C8", Offset = "0xBA23C8", VA = "0xBA23C8")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xBA2490", Offset = "0xBA2490", VA = "0xBA2490")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200045E")]
	public static class Media
	{
		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xBA43A4", Offset = "0xBA43A4", VA = "0xBA43A4")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x200045F")]
	public static class Notifications
	{
		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xBB298C", Offset = "0xBB298C", VA = "0xBB298C")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xBB2A54", Offset = "0xBB2A54", VA = "0xBB2A54")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xBB2B1C", Offset = "0xBB2B1C", VA = "0xBB2B1C")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000460")]
	public static class Parties
	{
		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xBB2FC0", Offset = "0xBB2FC0", VA = "0xBB2FC0")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xBB3088", Offset = "0xBB3088", VA = "0xBB3088")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000461")]
	public static class RichPresence
	{
		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xBB38BC", Offset = "0xBB38BC", VA = "0xBB38BC")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xBB397C", Offset = "0xBB397C", VA = "0xBB397C")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xBB3A44", Offset = "0xBB3A44", VA = "0xBB3A44")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xBB3B88", Offset = "0xBB3B88", VA = "0xBB3B88")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000462")]
	public static class Users
	{
		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xC3A4E4", Offset = "0xC3A4E4", VA = "0xC3A4E4")]
		public static Request<Oculus.Platform.Models.User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xC3A5B4", Offset = "0xC3A5B4", VA = "0xC3A5B4")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xC28F60", Offset = "0xC28F60", VA = "0xC28F60")]
		public static Request<Oculus.Platform.Models.User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xC3A67C", Offset = "0xC3A67C", VA = "0xC3A67C")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xC3A744", Offset = "0xC3A744", VA = "0xC3A744")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xC3A80C", Offset = "0xC3A80C", VA = "0xC3A80C")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xC3A908", Offset = "0xC3A908", VA = "0xC3A908")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xC3A9D8", Offset = "0xC3A9D8", VA = "0xC3A9D8")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xC3AAA0", Offset = "0xC3AAA0", VA = "0xC3AAA0")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xC3AB68", Offset = "0xC3AB68", VA = "0xC3AB68")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xC3AC38", Offset = "0xC3AC38", VA = "0xC3AC38")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xC3AD00", Offset = "0xC3AD00", VA = "0xC3AD00")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xC3AE60", Offset = "0xC3AE60", VA = "0xC3AE60")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000463")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001745")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C693C", Offset = "0x7C693C")]
		Success = 0,
		[Token(Token = "0x4001746")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6974", Offset = "0x7C6974")]
		Uninitialized = -1,
		[Token(Token = "0x4001747")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C69AC", Offset = "0x7C69AC")]
		PreLoaded = -2,
		[Token(Token = "0x4001748")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C69E4", Offset = "0x7C69E4")]
		FileInvalid = -3,
		[Token(Token = "0x4001749")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6A1C", Offset = "0x7C6A1C")]
		SignatureInvalid = -4,
		[Token(Token = "0x400174A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6A54", Offset = "0x7C6A54")]
		UnableToVerify = -5,
		[Token(Token = "0x400174B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6A8C", Offset = "0x7C6A8C")]
		VersionMismatch = -6,
		[Token(Token = "0x400174C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6AC4", Offset = "0x7C6AC4")]
		Unknown = -7,
		[Token(Token = "0x400174D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6AFC", Offset = "0x7C6AFC")]
		InvalidCredentials = -8,
		[Token(Token = "0x400174E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6B34", Offset = "0x7C6B34")]
		NotEntitled = -9
	}
	[Token(Token = "0x2000464")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20006E4")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x400219E")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x400219F")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x40021A0")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x40021A1")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x40021A2")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x40021A3")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x40021A4")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x40021A5")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x40021A6")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x40021A7")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x40021A8")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x40021A9")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x40021AA")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x40021AB")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x40021AC")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x40021AD")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x40021AE")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x40021AF")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x40021B0")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x40021B1")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x40021B2")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x40021B3")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x40021B4")]
			Party_Create = 450042703u,
			[Token(Token = "0x40021B5")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x40021B6")]
			Party_Get = 1586058173u,
			[Token(Token = "0x40021B7")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x40021B8")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40021B9")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40021BA")]
			Party_Leave = 848430801u,
			[Token(Token = "0x40021BB")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x40021BC")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x40021BD")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x40021BE")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x40021BF")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x40021C0")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x40021C1")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x40021C2")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x40021C3")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x40021C4")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x40021C5")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x40021C6")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x40021C7")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x40021C8")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x40021C9")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x40021CA")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x40021CB")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x40021CC")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20006E5")]
		public static class HTTP
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0xBB32A4", Offset = "0xBB32A4", VA = "0xBB32A4")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20006E6")]
		public static class Users
		{
			[Token(Token = "0x600293F")]
			[Address(RVA = "0xBB331C", Offset = "0xBB331C", VA = "0xBB331C")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xBB3100", Offset = "0xBB3100", VA = "0xBB3100")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xBA7218", Offset = "0xBA7218", VA = "0xBA7218")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xBB3160", Offset = "0xBB3160", VA = "0xBB3160")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000465")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000226")]
		public static string AppID
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xBA1384", Offset = "0xBA1384", VA = "0xBA1384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xBB35BC", Offset = "0xBB35BC", VA = "0xBB35BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xBA1358", Offset = "0xBA1358", VA = "0xBA1358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xBB35F4", Offset = "0xBB35F4", VA = "0xBB35F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xBA1030", Offset = "0xBA1030", VA = "0xBA1030")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xBB362C", Offset = "0xBB362C", VA = "0xBB362C")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xBB3660", Offset = "0xBB3660", VA = "0xBB3660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xBB368C", Offset = "0xBB368C", VA = "0xBB368C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xBB3488", Offset = "0xBB3488", VA = "0xBB3488")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xBB36C0", Offset = "0xBB36C0", VA = "0xBB36C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xBB3718", Offset = "0xBB3718", VA = "0xBB3718")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6001F4B")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001F4C")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class Request
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C6BAC", Offset = "0x7C6BAC")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700022B")]
		public ulong RequestID
		{
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0xB9F2FC", Offset = "0xB9F2FC", VA = "0xB9F2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2398", Offset = "0x7D2398")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xBB3790", Offset = "0xBB3790", VA = "0xBB3790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23A8", Offset = "0x7D23A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xBA147C", Offset = "0xBA147C", VA = "0xBA147C")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xBB3798", Offset = "0xBB3798", VA = "0xBB3798")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xBB3820", Offset = "0xBB3820", VA = "0xBB3820", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB9FF84", Offset = "0xB9FF84", VA = "0xB9FF84")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000468")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4001758")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6BBC", Offset = "0x7C6BBC")]
		Unknown,
		[Token(Token = "0x4001759")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6BF4", Offset = "0x7C6BF4")]
		None,
		[Token(Token = "0x400175A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6C2C", Offset = "0x7C6C2C")]
		CurrentCapacity,
		[Token(Token = "0x400175B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6C64", Offset = "0x7C6C64")]
		StartedAgo,
		[Token(Token = "0x400175C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6C9C", Offset = "0x7C6C9C")]
		EndingIn,
		[Token(Token = "0x400175D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6CD4", Offset = "0x7C6CD4")]
		LookingForAMatch
	}
	[Token(Token = "0x2000469")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xBB3CE0", Offset = "0xBB3CE0", VA = "0xBB3CE0")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xBB3D58", Offset = "0xBB3D58", VA = "0xBB3D58")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xBB3DD4", Offset = "0xBB3DD4", VA = "0xBB3DD4")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xBB3E58", Offset = "0xBB3E58", VA = "0xBB3E58")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xBB3EC4", Offset = "0xBB3EC4", VA = "0xBB3EC4")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xBB3F40", Offset = "0xBB3F40", VA = "0xBB3F40")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xBB3FBC", Offset = "0xBB3FBC", VA = "0xBB3FBC")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xBB4038", Offset = "0xBB4038", VA = "0xBB4038")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xBB40B4", Offset = "0xBB40B4", VA = "0xBB40B4")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xBB4130", Offset = "0xBB4130", VA = "0xBB4130")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xBB41AC", Offset = "0xBB41AC", VA = "0xBB41AC")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xBB4228", Offset = "0xBB4228", VA = "0xBB4228")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xBB42A4", Offset = "0xBB42A4", VA = "0xBB42A4")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xBB3B38", Offset = "0xBB3B38", VA = "0xBB3B38")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xBB4320", Offset = "0xBB4320", VA = "0xBB4320", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4001760")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6D0C", Offset = "0x7C6D0C")]
		Unknown,
		[Token(Token = "0x4001761")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6D44", Offset = "0x7C6D44")]
		AreIn,
		[Token(Token = "0x4001762")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6D7C", Offset = "0x7C6D7C")]
		AreKicked,
		[Token(Token = "0x4001763")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6DB4", Offset = "0x7C6DB4")]
		CanJoin,
		[Token(Token = "0x4001764")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6DEC", Offset = "0x7C6DEC")]
		IsFull,
		[Token(Token = "0x4001765")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6E24", Offset = "0x7C6E24")]
		NoViewer,
		[Token(Token = "0x4001766")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6E5C", Offset = "0x7C6E5C")]
		PolicyPrevents
	}
	[Token(Token = "0x200046B")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4001768")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6E94", Offset = "0x7C6E94")]
		None,
		[Token(Token = "0x4001769")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6ECC", Offset = "0x7C6ECC")]
		Everyone,
		[Token(Token = "0x400176A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6F04", Offset = "0x7C6F04")]
		FriendsOfMembers,
		[Token(Token = "0x400176B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6F3C", Offset = "0x7C6F3C")]
		FriendsOfOwner,
		[Token(Token = "0x400176C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6F74", Offset = "0x7C6F74")]
		InvitedUsers,
		[Token(Token = "0x400176D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6FAC", Offset = "0x7C6FAC")]
		Unknown
	}
	[Token(Token = "0x200046C")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x400176F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C6FE4", Offset = "0x7C6FE4")]
		Unknown,
		[Token(Token = "0x4001770")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C701C", Offset = "0x7C701C")]
		Lock,
		[Token(Token = "0x4001771")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7054", Offset = "0x7C7054")]
		Unlock
	}
	[Token(Token = "0x200046D")]
	public class RoomOptions
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xBB43E4", Offset = "0xBB43E4", VA = "0xBB43E4")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xBB445C", Offset = "0xBB445C", VA = "0xBB445C")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xBB44E0", Offset = "0xBB44E0", VA = "0xBB44E0")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xBB454C", Offset = "0xBB454C", VA = "0xBB454C")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xBB45C8", Offset = "0xBB45C8", VA = "0xBB45C8")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xBB4644", Offset = "0xBB4644", VA = "0xBB4644")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xBB46C0", Offset = "0xBB46C0", VA = "0xBB46C0")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xBB473C", Offset = "0xBB473C", VA = "0xBB473C")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xBB47B8", Offset = "0xBB47B8", VA = "0xBB47B8")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xBB4834", Offset = "0xBB4834", VA = "0xBB4834")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xBB4884", Offset = "0xBB4884", VA = "0xBB4884", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public enum RoomType
	{
		[Token(Token = "0x4001774")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C708C", Offset = "0x7C708C")]
		Unknown,
		[Token(Token = "0x4001775")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C70C4", Offset = "0x7C70C4")]
		Matchmaking,
		[Token(Token = "0x4001776")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C70FC", Offset = "0x7C70FC")]
		Moderated,
		[Token(Token = "0x4001777")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7134", Offset = "0x7C7134")]
		Private,
		[Token(Token = "0x4001778")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C716C", Offset = "0x7C716C")]
		Solo
	}
	[Token(Token = "0x200046F")]
	public enum SdkAccountType
	{
		[Token(Token = "0x400177A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C71A4", Offset = "0x7C71A4")]
		Unknown,
		[Token(Token = "0x400177B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C71DC", Offset = "0x7C71DC")]
		Oculus,
		[Token(Token = "0x400177C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7214", Offset = "0x7C7214")]
		FacebookGameroom
	}
	[Token(Token = "0x2000470")]
	public enum SendPolicy
	{
		[Token(Token = "0x400177E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C724C", Offset = "0x7C724C")]
		Unreliable,
		[Token(Token = "0x400177F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7284", Offset = "0x7C7284")]
		Reliable,
		[Token(Token = "0x4001780")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C72BC", Offset = "0x7C72BC")]
		Unknown
	}
	[Token(Token = "0x2000471")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4001782")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C72F4", Offset = "0x7C72F4")]
		Unknown,
		[Token(Token = "0x4001783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C732C", Offset = "0x7C732C")]
		Dropbox,
		[Token(Token = "0x4001784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7364", Offset = "0x7C7364")]
		Facebook,
		[Token(Token = "0x4001785")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C739C", Offset = "0x7C739C")]
		Google,
		[Token(Token = "0x4001786")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C73D4", Offset = "0x7C73D4")]
		Instagram,
		[Token(Token = "0x4001787")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C740C", Offset = "0x7C740C")]
		RemoteMedia
	}
	[Token(Token = "0x2000472")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4001789")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7444", Offset = "0x7C7444")]
		Unknown,
		[Token(Token = "0x400178A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C747C", Offset = "0x7C747C")]
		Shared,
		[Token(Token = "0x400178B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C74B4", Offset = "0x7C74B4")]
		Canceled
	}
	[Token(Token = "0x2000473")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BD2E0", Offset = "0x7BD2E0")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xC39B44", Offset = "0xC39B44", VA = "0xC39B44")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xC39CDC", Offset = "0xC39CDC", VA = "0xC39CDC")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xC39DA0", Offset = "0xC39DA0", VA = "0xC39DA0")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700022C")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xC3A0C4", Offset = "0xC3A0C4", VA = "0xC3A0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xC3A114", Offset = "0xC3A114", VA = "0xC3A114")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xC3A118", Offset = "0xC3A118", VA = "0xC3A118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xC3A168", Offset = "0xC3A168", VA = "0xC3A168")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xC39C8C", Offset = "0xC39C8C", VA = "0xC39C8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xC3A16C", Offset = "0xC3A16C", VA = "0xC3A16C")]
			set
			{
			}
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xC3A170", Offset = "0xC3A170", VA = "0xC3A170")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x400178D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C74EC", Offset = "0x7C74EC")]
		Unknown,
		[Token(Token = "0x400178E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7524", Offset = "0x7C7524")]
		Unavailable,
		[Token(Token = "0x400178F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C755C", Offset = "0x7C755C")]
		Suppressed,
		[Token(Token = "0x4001790")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7594", Offset = "0x7C7594")]
		Active
	}
	[Token(Token = "0x2000476")]
	public enum TimeWindow
	{
		[Token(Token = "0x4001792")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C75CC", Offset = "0x7C75CC")]
		Unknown,
		[Token(Token = "0x4001793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7604", Offset = "0x7C7604")]
		OneHour,
		[Token(Token = "0x4001794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C763C", Offset = "0x7C763C")]
		OneDay,
		[Token(Token = "0x4001795")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7674", Offset = "0x7C7674")]
		OneWeek,
		[Token(Token = "0x4001796")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C76AC", Offset = "0x7C76AC")]
		ThirtyDays,
		[Token(Token = "0x4001797")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C76E4", Offset = "0x7C76E4")]
		NinetyDays
	}
	[Token(Token = "0x2000477")]
	public class UserOptions
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xC3A178", Offset = "0xC3A178", VA = "0xC3A178")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xC3A1F0", Offset = "0xC3A1F0", VA = "0xC3A1F0")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xC3A26C", Offset = "0xC3A26C", VA = "0xC3A26C")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xC3A2E8", Offset = "0xC3A2E8", VA = "0xC3A2E8")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xC3A354", Offset = "0xC3A354", VA = "0xC3A354")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xC3A3D0", Offset = "0xC3A3D0", VA = "0xC3A3D0")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xC3A420", Offset = "0xC3A420", VA = "0xC3A420", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public enum UserOrdering
	{
		[Token(Token = "0x400179A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C771C", Offset = "0x7C771C")]
		Unknown,
		[Token(Token = "0x400179B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7754", Offset = "0x7C7754")]
		None,
		[Token(Token = "0x400179C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C778C", Offset = "0x7C778C")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000479")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x400179E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C77C4", Offset = "0x7C77C4")]
		Unknown,
		[Token(Token = "0x400179F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C77FC", Offset = "0x7C77FC")]
		Online,
		[Token(Token = "0x40017A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7834", Offset = "0x7C7834")]
		Offline
	}
	[Token(Token = "0x200047A")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20006E8")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6002944")]
			[Address(RVA = "0xC3BE70", Offset = "0xC3BE70", VA = "0xC3BE70")]
			private void Awake()
			{
			}

			[Token(Token = "0x6002945")]
			[Address(RVA = "0xC3BF34", Offset = "0xC3BF34", VA = "0xC3BF34")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6002946")]
			[Address(RVA = "0xC3C534", Offset = "0xC3C534", VA = "0xC3C534")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700022F")]
		public ulong senderID
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xC39380", Offset = "0xC39380", VA = "0xC39380")]
			set
			{
			}
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xC3B6C0", Offset = "0xC3B6C0", VA = "0xC3B6C0")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xC3B6C4", Offset = "0xC3B6C4", VA = "0xC3B6C4")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xC3B700", Offset = "0xC3B700", VA = "0xC3B700")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xC3BA1C", Offset = "0xC3BA1C", VA = "0xC3BA1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xC3BA4C", Offset = "0xC3BA4C", VA = "0xC3BA4C", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xC3BABC", Offset = "0xC3BABC", VA = "0xC3BABC")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xC3BB44", Offset = "0xC3BB44", VA = "0xC3BB44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xC3BE64", Offset = "0xC3BE64", VA = "0xC3BE64")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40017A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C786C", Offset = "0x7C786C")]
		Unknown,
		[Token(Token = "0x40017A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C78A4", Offset = "0x7C78A4")]
		B16000,
		[Token(Token = "0x40017AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C78DC", Offset = "0x7C78DC")]
		B24000,
		[Token(Token = "0x40017AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7914", Offset = "0x7C7914")]
		B32000,
		[Token(Token = "0x40017AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C794C", Offset = "0x7C794C")]
		B64000,
		[Token(Token = "0x40017AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7984", Offset = "0x7C7984")]
		B96000,
		[Token(Token = "0x40017AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C79BC", Offset = "0x7C79BC")]
		B128000
	}
	[Token(Token = "0x200047C")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40017B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C79F4", Offset = "0x7C79F4")]
		Unknown,
		[Token(Token = "0x40017B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7A2C", Offset = "0x7C7A2C")]
		Enabled,
		[Token(Token = "0x40017B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7A64", Offset = "0x7C7A64")]
		Disabled
	}
	[Token(Token = "0x200047D")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40017B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7A9C", Offset = "0x7C7A9C")]
		Unknown,
		[Token(Token = "0x40017B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7AD4", Offset = "0x7C7AD4")]
		Muted,
		[Token(Token = "0x40017B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7B0C", Offset = "0x7C7B0C")]
		Unmuted
	}
	[Token(Token = "0x200047E")]
	public class VoipOptions
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xC3C53C", Offset = "0xC3C53C", VA = "0xC3C53C")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xC3C5B4", Offset = "0xC3C5B4", VA = "0xC3C5B4")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xC3C630", Offset = "0xC3C630", VA = "0xC3C630")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xC3B528", Offset = "0xC3B528", VA = "0xC3B528")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xC3C6AC", Offset = "0xC3C6AC", VA = "0xC3C6AC", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xC3C770", Offset = "0xC3C770", VA = "0xC3C770", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xC3C830", Offset = "0xC3C830", VA = "0xC3C830", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xC3C838", Offset = "0xC3C838", VA = "0xC3C838", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xC3C8D8", Offset = "0xC3C8D8", VA = "0xC3C8D8", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xC3BAB4", Offset = "0xC3BAB4", VA = "0xC3BAB4")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40017BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7B44", Offset = "0x7C7B44")]
		Unknown,
		[Token(Token = "0x40017BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7B7C", Offset = "0x7C7B7C")]
		HZ24000,
		[Token(Token = "0x40017BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7BB4", Offset = "0x7C7BB4")]
		HZ44100,
		[Token(Token = "0x40017BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C7BEC", Offset = "0x7C7BEC")]
		HZ48000
	}
	[Token(Token = "0x2000481")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7BD2F4", Offset = "0x7BD2F4")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xC3C8DC", Offset = "0xC3C8DC", VA = "0xC3C8DC")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xC3C9B4", Offset = "0xC3C9B4", VA = "0xC3C9B4")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xC3C9F4", Offset = "0xC3C9F4", VA = "0xC3C9F4")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xC3CAE0", Offset = "0xC3CAE0", VA = "0xC3CAE0")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xC3CBFC", Offset = "0xC3CBFC", VA = "0xC3CBFC")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000482")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xBA7E44", Offset = "0xBA7E44", VA = "0xBA7E44")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xBB0B14", Offset = "0xBB0B14", VA = "0xBB0B14")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xBA7FC4", Offset = "0xBA7FC4", VA = "0xBA7FC4")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class AchievementProgress
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xBB0BDC", Offset = "0xBB0BDC", VA = "0xBB0BDC")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xBA82D8", Offset = "0xBA82D8", VA = "0xBA82D8")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xBA85EC", Offset = "0xBA85EC", VA = "0xBA85EC")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xBA8780", Offset = "0xBA8780", VA = "0xBA8780")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class AssetDetails
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7C24", Offset = "0x7C7C24")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xBA8940", Offset = "0xBA8940", VA = "0xBA8940")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xBA8BE4", Offset = "0xBA8BE4", VA = "0xBA8BE4")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xBA8EAC", Offset = "0xBA8EAC", VA = "0xBA8EAC")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xBA9064", Offset = "0xBA9064", VA = "0xBA9064")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xBA921C", Offset = "0xBA921C", VA = "0xBA921C")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xBA93AC", Offset = "0xBA93AC", VA = "0xBA93AC")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xBA9564", Offset = "0xBA9564", VA = "0xBA9564")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xBA9704", Offset = "0xBA9704", VA = "0xBA9704")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xBB0D9C", Offset = "0xBB0D9C", VA = "0xBB0D9C")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xBA98D8", Offset = "0xBA98D8", VA = "0xBA98D8")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xBA9BA0", Offset = "0xBA9BA0", VA = "0xBA9BA0")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class CloudStorageData
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xBA9D80", Offset = "0xBA9D80", VA = "0xBA9D80")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xBAA264", Offset = "0xBAA264", VA = "0xBAA264")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xBA9F50", Offset = "0xBA9F50", VA = "0xBA9F50")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xBAA484", Offset = "0xBAA484", VA = "0xBAA484")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7BB7DC", Offset = "0x7BB7DC")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000230")]
		public int Count
		{
			[Token(Token = "0x6001FAE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000231")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001FAF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000232")]
		public T Item
		{
			[Token(Token = "0x6001FB1")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001FB2")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D5388", Offset = "0x7D5388")]
		public List<T> Data
		{
			[Token(Token = "0x6001FBD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001FBE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000235")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001FBF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000236")]
		public string NextUrl
		{
			[Token(Token = "0x6001FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001FC1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB0")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001FB3")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001FB4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001FB5")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB6")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001FB7")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FB8")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001FB9")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBA")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001FBB")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001FBC")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FC2")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class Destination
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xBB0E40", Offset = "0xBB0E40", VA = "0xBB0E40")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xBAA654", Offset = "0xBAA654", VA = "0xBAA654")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class Error
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xBA46E8", Offset = "0xBA46E8", VA = "0xBA46E8")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xBAA968", Offset = "0xBAA968", VA = "0xBAA968")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xBB0F14", Offset = "0xBB0F14", VA = "0xBB0F14")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xBAAC0C", Offset = "0xBAAC0C", VA = "0xBAAC0C")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xBB0CC8", Offset = "0xBB0CC8", VA = "0xBB0CC8")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xBAAF34", Offset = "0xBAAF34", VA = "0xBAAF34")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class LaunchDetails
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7C5C", Offset = "0x7C7C5C")]
		public readonly UserList Users;

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xBB1018", Offset = "0xBB1018", VA = "0xBB1018")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xBAB0C0", Offset = "0xBAB0C0", VA = "0xBAB0C0")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xBAB2AC", Offset = "0xBAB2AC", VA = "0xBAB2AC")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xBAB494", Offset = "0xBAB494", VA = "0xBAB494")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xBB1184", Offset = "0xBB1184", VA = "0xBB1184")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xBAB6E8", Offset = "0xBAB6E8", VA = "0xBAB6E8")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class LinkedAccount
	{
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xBB1288", Offset = "0xBB1288", VA = "0xBB1288")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xBABA90", Offset = "0xBABA90", VA = "0xBABA90")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xBABDB8", Offset = "0xBABDB8", VA = "0xBABDB8")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xBABF90", Offset = "0xBABF90", VA = "0xBABF90")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xBAC104", Offset = "0xBAC104", VA = "0xBAC104")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xBAC328", Offset = "0xBAC328", VA = "0xBAC328")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xBAC4C8", Offset = "0xBAC4C8", VA = "0xBAC4C8")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xBB1528", Offset = "0xBB1528", VA = "0xBB1528")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xBB134C", Offset = "0xBB134C", VA = "0xBB134C")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xBAC6F4", Offset = "0xBAC6F4", VA = "0xBAC6F4")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7C94", Offset = "0x7C7C94")]
		public readonly User User;

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xBB1600", Offset = "0xBB1600", VA = "0xBB1600")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xBB1714", Offset = "0xBB1714", VA = "0xBB1714")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7CCC", Offset = "0x7C7CCC")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xBAC8D4", Offset = "0xBAC8D4", VA = "0xBAC8D4")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xBACB48", Offset = "0xBACB48", VA = "0xBACB48")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xBAD234", Offset = "0xBAD234", VA = "0xBAD234")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7D04", Offset = "0x7C7D04")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7D14", Offset = "0x7C7D14")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x17000238")]
		public ulong ID
		{
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xBB1900", Offset = "0xBB1900", VA = "0xBB1900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23B8", Offset = "0x7D23B8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xBB18F0", Offset = "0xBB18F0", VA = "0xBB18F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23C8", Offset = "0x7D23C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xBB1908", Offset = "0xBB1908", VA = "0xBB1908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23D8", Offset = "0x7D23D8")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xBB18F8", Offset = "0xBB18F8", VA = "0xBB18F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23E8", Offset = "0x7D23E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xBAD41C", Offset = "0xBAD41C", VA = "0xBAD41C")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class OrgScopedID
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xBAD544", Offset = "0xBAD544", VA = "0xBAD544")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class Party
	{
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7D24", Offset = "0x7C7D24")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7D5C", Offset = "0x7C7D5C")]
		public readonly User Leader;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7D94", Offset = "0x7C7D94")]
		public readonly Room Room;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7DCC", Offset = "0x7C7DCC")]
		public readonly UserList Users;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xBAD718", Offset = "0xBAD718", VA = "0xBAD718")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class PartyID
	{
		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xBADB00", Offset = "0xBADB00", VA = "0xBADB00")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xBADD60", Offset = "0xBADD60", VA = "0xBADD60")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class Pid
	{
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xBB1910", Offset = "0xBB1910", VA = "0xBB1910")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xBADF60", Offset = "0xBADF60", VA = "0xBADF60")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class PingResult
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7E04", Offset = "0x7C7E04")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700023A")]
		public ulong ID
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xBB19AC", Offset = "0xBB19AC", VA = "0xBB19AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D23F8", Offset = "0x7D23F8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xBB19A4", Offset = "0xBB19A4", VA = "0xBB19A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2408", Offset = "0x7D2408")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xBB19B4", Offset = "0xBB19B4", VA = "0xBB19B4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xBB1A30", Offset = "0xBB1A30", VA = "0xBB1A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xBAE2A8", Offset = "0xBAE2A8", VA = "0xBAE2A8")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xBAE3D4", Offset = "0xBAE3D4", VA = "0xBAE3D4")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class Product
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xBB1A8C", Offset = "0xBB1A8C", VA = "0xBB1A8C")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xBAE548", Offset = "0xBAE548", VA = "0xBAE548")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class Purchase
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xBAE85C", Offset = "0xBAE85C", VA = "0xBAE85C")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xBAEA0C", Offset = "0xBAEA0C", VA = "0xBAEA0C")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class Room
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7E14", Offset = "0x7C7E14")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7E4C", Offset = "0x7C7E4C")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7E84", Offset = "0x7C7E84")]
		public readonly User Owner;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7EBC", Offset = "0x7C7EBC")]
		public readonly TeamList Teams;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7EF4", Offset = "0x7C7EF4")]
		public readonly UserList Users;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xBACD28", Offset = "0xBACD28", VA = "0xBACD28")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xBAF2C4", Offset = "0xBAF2C4", VA = "0xBAF2C4")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xBAEE0C", Offset = "0xBAEE0C", VA = "0xBAEE0C")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xBAEFB0", Offset = "0xBAEFB0", VA = "0xBAEFB0")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class SdkAccount
	{
		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xBB1D5C", Offset = "0xBB1D5C", VA = "0xBB1D5C")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xBAF7B0", Offset = "0xBAF7B0", VA = "0xBAF7B0")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class ShareMediaResult
	{
		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xBAFA78", Offset = "0xBAFA78", VA = "0xBAFA78")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class SystemPermission
	{
		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xBAFD04", Offset = "0xBAFD04", VA = "0xBAFD04")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class SystemVoipState
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xBAFE8C", Offset = "0xBAFE8C", VA = "0xBAFE8C")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class Team
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xBB1DF4", Offset = "0xBB1DF4", VA = "0xBB1DF4")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xBB1B80", Offset = "0xBB1B80", VA = "0xBB1B80")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class User
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xBB0010", Offset = "0xBB0010", VA = "0xBB0010")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6002001")]
		[Address(RVA = "0xBB0584", Offset = "0xBB0584", VA = "0xBB0584")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class UserAndRoom
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7C7F2C", Offset = "0x7C7F2C")]
		public readonly Room Room;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xBB1EE8", Offset = "0xBB1EE8", VA = "0xBB1EE8")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6002003")]
		[Address(RVA = "0xBB0270", Offset = "0xBB0270", VA = "0xBB0270")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class UserProof
	{
		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xBB0898", Offset = "0xBB0898", VA = "0xBB0898")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class UserReportID
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xBB0A78", Offset = "0xBB0A78", VA = "0xBB0A78")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x20004D4")]
	public class P2PManager
	{
		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x1700023D")]
		public bool Connected
		{
			[Token(Token = "0x6002009")]
			[Address(RVA = "0xC34970", Offset = "0xC34970", VA = "0xC34970")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023E")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x600200C")]
			[Address(RVA = "0xC3517C", Offset = "0xC3517C", VA = "0xC3517C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xC34644", Offset = "0xC34644", VA = "0xC34644")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xC347CC", Offset = "0xC347CC", VA = "0xC347CC")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xC3493C", Offset = "0xC3493C", VA = "0xC3493C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xC34980", Offset = "0xC34980", VA = "0xC34980")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xC34BC8", Offset = "0xC34BC8", VA = "0xC34BC8")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xC351C0", Offset = "0xC351C0", VA = "0xC351C0")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xC35408", Offset = "0xC35408", VA = "0xC35408")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xC354B0", Offset = "0xC354B0", VA = "0xC354B0")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20006EA")]
		public enum State
		{
			[Token(Token = "0x40021D0")]
			INITIALIZING,
			[Token(Token = "0x40021D1")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x40021D2")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x40021D3")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x40021D4")]
			HANGUP
		}

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD308", Offset = "0x7BD308")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x600294B")]
			[Address(RVA = "0xC377AC", Offset = "0xC377AC", VA = "0xC377AC")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600294C")]
			[Address(RVA = "0xC377C0", Offset = "0xC377C0", VA = "0xC377C0")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x1700023F")]
		public static State CurrentState
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0xC36A08", Offset = "0xC36A08", VA = "0xC36A08")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000240")]
		public static ulong MyID
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0xC34860", Offset = "0xC34860", VA = "0xC34860")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000241")]
		public static string MyOculusID
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0xC36A80", Offset = "0xC36A80", VA = "0xC36A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xC359D0", Offset = "0xC359D0", VA = "0xC359D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xC35C78", Offset = "0xC35C78", VA = "0xC35C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xC36490", Offset = "0xC36490", VA = "0xC36490")]
		private void Start()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xC3652C", Offset = "0xC3652C", VA = "0xC3652C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xC366E0", Offset = "0xC366E0", VA = "0xC366E0")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xC36860", Offset = "0xC36860", VA = "0xC36860")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xC36628", Offset = "0xC36628", VA = "0xC36628")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xC36BA4", Offset = "0xC36BA4", VA = "0xC36BA4")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xC36CE8", Offset = "0xC36CE8", VA = "0xC36CE8")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xC36D14", Offset = "0xC36D14", VA = "0xC36D14")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xC36D1C", Offset = "0xC36D1C", VA = "0xC36D1C")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xC35EA8", Offset = "0xC35EA8", VA = "0xC35EA8")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xC34EA4", Offset = "0xC34EA4", VA = "0xC34EA4")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xC36FCC", Offset = "0xC36FCC", VA = "0xC36FCC")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xC377B4", Offset = "0xC377B4", VA = "0xC377B4")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class RoomManager
	{
		[Token(Token = "0x20006EC")]
		public struct Invite
		{
			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x600294D")]
			[Address(RVA = "0x865C58", Offset = "0x865C58", VA = "0x865C58")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Oculus.Platform.Models.User m_remoteUser;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000242")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0xC36ED4", Offset = "0xC36ED4", VA = "0xC36ED4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000243")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0xC37828", Offset = "0xC37828", VA = "0xC37828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0xC35ADC", Offset = "0xC35ADC", VA = "0xC35ADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xC362FC", Offset = "0xC362FC", VA = "0xC362FC")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xC3788C", Offset = "0xC3788C", VA = "0xC3788C")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xC36838", Offset = "0xC36838", VA = "0xC36838")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xC36C30", Offset = "0xC36C30", VA = "0xC36C30")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xC379F0", Offset = "0xC379F0", VA = "0xC379F0")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xC37B50", Offset = "0xC37B50", VA = "0xC37B50")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xC35B1C", Offset = "0xC35B1C", VA = "0xC35B1C")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xC37BDC", Offset = "0xC37BDC", VA = "0xC37BDC")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xC3802C", Offset = "0xC3802C", VA = "0xC3802C")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xC36E1C", Offset = "0xC36E1C", VA = "0xC36E1C")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xC382D0", Offset = "0xC382D0", VA = "0xC382D0")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xC38950", Offset = "0xC38950", VA = "0xC38950")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xC368D0", Offset = "0xC368D0", VA = "0xC368D0")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class VoipManager
	{
		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000245")]
		public bool Connected
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0xC36FBC", Offset = "0xC36FBC", VA = "0xC36FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xC363C4", Offset = "0xC363C4", VA = "0xC363C4")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xC36EEC", Offset = "0xC36EEC", VA = "0xC36EEC")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xC36958", Offset = "0xC36958", VA = "0xC36958")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xC39588", Offset = "0xC39588", VA = "0xC39588")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xC3986C", Offset = "0xC3986C", VA = "0xC3986C")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Button m_currentButton;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xC3902C", Offset = "0xC3902C", VA = "0xC3902C")]
		private void Update()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xC39288", Offset = "0xC39288", VA = "0xC39288")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20004D9")]
	public class AchievementsManager
	{
		[Token(Token = "0x40018C5")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000246")]
		public bool LikesToWin
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xC29564", Offset = "0xC29564", VA = "0xC29564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xC2956C", Offset = "0xC2956C", VA = "0xC2956C")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xC29698", Offset = "0xC29698", VA = "0xC29698")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xC296F4", Offset = "0xC296F4", VA = "0xC296F4")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xC296FC", Offset = "0xC296FC", VA = "0xC296FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2418", Offset = "0x7D2418")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6002042")]
		[Address(RVA = "0xC2915C", Offset = "0xC2915C", VA = "0xC2915C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xC294E4", Offset = "0xC294E4", VA = "0xC294E4")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6002044")]
		[Address(RVA = "0xC29988", Offset = "0xC29988", VA = "0xC29988")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6002045")]
		[Address(RVA = "0xC29990", Offset = "0xC29990", VA = "0xC29990")]
		private void Update()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xC29C7C", Offset = "0xC29C7C", VA = "0xC29C7C")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20006ED")]
		private enum BasketPhase
		{
			[Token(Token = "0x40021D9")]
			NONE,
			[Token(Token = "0x40021DA")]
			TOP,
			[Token(Token = "0x40021DB")]
			BOTH,
			[Token(Token = "0x40021DC")]
			BOTTOM
		}

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x17000247")]
		public Player Player
		{
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xC29C84", Offset = "0xC29C84", VA = "0xC29C84")]
			set
			{
			}
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xC29C8C", Offset = "0xC29C8C", VA = "0xC29C8C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xC29D94", Offset = "0xC29D94", VA = "0xC29D94")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xC29F90", Offset = "0xC29F90", VA = "0xC29F90")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40018C9")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xC29F98", Offset = "0xC29F98", VA = "0xC29F98")]
		private void Start()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xC2A068", Offset = "0xC2A068", VA = "0xC2A068")]
		private void Update()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xC2A1CC", Offset = "0xC2A1CC", VA = "0xC2A1CC")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40018CE")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x17000248")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x600204E")]
			[Address(RVA = "0xC2A268", Offset = "0xC2A268", VA = "0xC2A268")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600204F")]
			[Address(RVA = "0xC2A274", Offset = "0xC2A274", VA = "0xC2A274")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0xC2A280", Offset = "0xC2A280", VA = "0xC2A280")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002051")]
			[Address(RVA = "0xC2A28C", Offset = "0xC2A28C", VA = "0xC2A28C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0xC2A298", Offset = "0xC2A298", VA = "0xC2A298")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002053")]
			[Address(RVA = "0xC2A2A4", Offset = "0xC2A2A4", VA = "0xC2A2A4")]
			set
			{
			}
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xC2A2B0", Offset = "0xC2A2B0", VA = "0xC2A2B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xC2A448", Offset = "0xC2A448", VA = "0xC2A448")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xC2A814", Offset = "0xC2A814", VA = "0xC2A814")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20006EE")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20006EF")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40018D2")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40018D3")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40018D4")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40018D5")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x1700024B")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6002058")]
			[Address(RVA = "0xC2AAD4", Offset = "0xC2AAD4", VA = "0xC2AAD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xC2B364", Offset = "0xC2B364", VA = "0xC2B364")]
			set
			{
			}
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xC2A82C", Offset = "0xC2A82C", VA = "0xC2A82C")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xC2A894", Offset = "0xC2A894", VA = "0xC2A894")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xC2AADC", Offset = "0xC2AADC", VA = "0xC2AADC")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xC2A9B4", Offset = "0xC2A9B4", VA = "0xC2A9B4")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xC2B36C", Offset = "0xC2B36C", VA = "0xC2B36C")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xC2BB4C", Offset = "0xC2BB4C", VA = "0xC2BB4C")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xC2BC00", Offset = "0xC2BC00", VA = "0xC2BC00")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x1700024D")]
		public override uint Score
		{
			[Token(Token = "0x6002060")]
			[Address(RVA = "0xC2BC90", Offset = "0xC2BC90", VA = "0xC2BC90", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xC2BFF8", Offset = "0xC2BFF8", VA = "0xC2BFF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xC2C1AC", Offset = "0xC2C1AC", VA = "0xC2C1AC")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20006F0")]
		private enum State
		{
			[Token(Token = "0x40021DE")]
			UNKNOWN,
			[Token(Token = "0x40021DF")]
			NONE,
			[Token(Token = "0x40021E0")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x40021E1")]
			PRACTICING,
			[Token(Token = "0x40021E2")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x40021E3")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x40021E4")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x40021E5")]
			PLAYING_MATCH,
			[Token(Token = "0x40021E6")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x1700024E")]
		public float MatchStartTime
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0xC2CB14", Offset = "0xC2CB14", VA = "0xC2CB14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002066")]
			[Address(RVA = "0xC2CB34", Offset = "0xC2CB34", VA = "0xC2CB34")]
			private set
			{
			}
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xC2C1B0", Offset = "0xC2C1B0", VA = "0xC2C1B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xC2C83C", Offset = "0xC2C83C", VA = "0xC2C83C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xC2C4F4", Offset = "0xC2C4F4", VA = "0xC2C4F4")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xC2C860", Offset = "0xC2C860", VA = "0xC2C860")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xC2C90C", Offset = "0xC2C90C", VA = "0xC2C90C")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xC2CB3C", Offset = "0xC2CB3C", VA = "0xC2CB3C")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xC2CE60", Offset = "0xC2CE60", VA = "0xC2CE60")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xC2D654", Offset = "0xC2D654", VA = "0xC2D654")]
		private Player MatchPlayerAddedCallback(int slot, Oculus.Platform.Models.User user)
		{
			return null;
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xC2CC18", Offset = "0xC2CC18", VA = "0xC2CC18")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xC2CFA4", Offset = "0xC2CFA4", VA = "0xC2CFA4")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xC2D9E8", Offset = "0xC2D9E8", VA = "0xC2D9E8")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xC2DA00", Offset = "0xC2DA00", VA = "0xC2DA00")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xC2DBC0", Offset = "0xC2DBC0", VA = "0xC2DBC0")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xC2DBD4", Offset = "0xC2DBD4", VA = "0xC2DBD4")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xC2DCD8", Offset = "0xC2DCD8", VA = "0xC2DCD8")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xC2E2B8", Offset = "0xC2E2B8", VA = "0xC2E2B8")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xC2D174", Offset = "0xC2D174", VA = "0xC2D174")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xC2D7B8", Offset = "0xC2D7B8", VA = "0xC2D7B8")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xC2E960", Offset = "0xC2E960", VA = "0xC2E960")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20006F1")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20006F2")]
		public delegate Player OnMatchPlayerAdded(int slot, Oculus.Platform.Models.User user);

		[Token(Token = "0x40018EE")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, Oculus.Platform.Models.User> m_remotePlayers;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x1700024F")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0xC2EAD0", Offset = "0xC2EAD0", VA = "0xC2EAD0")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600207A")]
			[Address(RVA = "0xC2C454", Offset = "0xC2C454", VA = "0xC2C454")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0xC2EAD8", Offset = "0xC2EAD8", VA = "0xC2EAD8")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600207C")]
			[Address(RVA = "0xC2C470", Offset = "0xC2C470", VA = "0xC2C470")]
			set
			{
			}
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xC2E9DC", Offset = "0xC2E9DC", VA = "0xC2E9DC")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xC2DADC", Offset = "0xC2DADC", VA = "0xC2DADC")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xC2EAE0", Offset = "0xC2EAE0", VA = "0xC2EAE0")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xC2EE0C", Offset = "0xC2EE0C", VA = "0xC2EE0C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xC2EF1C", Offset = "0xC2EF1C", VA = "0xC2EF1C")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xC2F884", Offset = "0xC2F884", VA = "0xC2F884")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xC2D4EC", Offset = "0xC2D4EC", VA = "0xC2D4EC")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xC2DB98", Offset = "0xC2DB98", VA = "0xC2DB98")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class P2PManager
	{
		[Token(Token = "0x20006F3")]
		private class RemotePlayerData
		{
			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x600295E")]
			[Address(RVA = "0xC31678", Offset = "0xC31678", VA = "0xC31678")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20006F4")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x40018F5")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x40018F6")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40018F7")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x40018F8")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x40018F9")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40018FA")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x40018FB")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x40018FC")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x40018FD")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x40018FE")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x40018FF")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4001900")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x17000251")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0xC323C4", Offset = "0xC323C4", VA = "0xC323C4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600208E")]
			[Address(RVA = "0xC2C48C", Offset = "0xC2C48C", VA = "0xC2C48C")]
			set
			{
			}
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xC30030", Offset = "0xC30030", VA = "0xC30030")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xC301E8", Offset = "0xC301E8", VA = "0xC301E8")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xC2F634", Offset = "0xC2F634", VA = "0xC2F634")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xC2FD98", Offset = "0xC2FD98", VA = "0xC2FD98")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xC316F4", Offset = "0xC316F4", VA = "0xC316F4")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xC3199C", Offset = "0xC3199C", VA = "0xC3199C")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xC31E44", Offset = "0xC31E44", VA = "0xC31E44")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xC30424", Offset = "0xC30424", VA = "0xC30424")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xC32300", Offset = "0xC32300", VA = "0xC32300")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xC320EC", Offset = "0xC320EC", VA = "0xC320EC")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xC30B90", Offset = "0xC30B90", VA = "0xC30B90")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xC32654", Offset = "0xC32654", VA = "0xC32654")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xC30BFC", Offset = "0xC30BFC", VA = "0xC30BFC")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xC2C0E8", Offset = "0xC2C0E8", VA = "0xC2C0E8")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xC32B4C", Offset = "0xC32B4C", VA = "0xC32B4C")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xC31248", Offset = "0xC31248", VA = "0xC31248")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xC30D5C", Offset = "0xC30D5C", VA = "0xC30D5C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xC2BE18", Offset = "0xC2BE18", VA = "0xC2BE18")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xC31188", Offset = "0xC31188", VA = "0xC31188")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xC328B4", Offset = "0xC328B4", VA = "0xC328B4")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xC32904", Offset = "0xC32904", VA = "0xC32904")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xC333FC", Offset = "0xC333FC", VA = "0xC333FC")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xC31FB8", Offset = "0xC31FB8", VA = "0xC31FB8")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xC32060", Offset = "0xC32060", VA = "0xC32060")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xC32620", Offset = "0xC32620", VA = "0xC32620")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xC32C78", Offset = "0xC32C78", VA = "0xC32C78")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xC32DA8", Offset = "0xC32DA8", VA = "0xC32DA8")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xC332CC", Offset = "0xC332CC", VA = "0xC332CC")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xC3336C", Offset = "0xC3336C", VA = "0xC3336C")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xC32C14", Offset = "0xC32C14", VA = "0xC32C14")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xC32D48", Offset = "0xC32D48", VA = "0xC32D48")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004E5")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x17000252")]
		public Vector3 velocity
		{
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0xC32D18", Offset = "0xC32D18", VA = "0xC32D18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xC33530", Offset = "0xC33530", VA = "0xC33530")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xC32BD8", Offset = "0xC32BD8", VA = "0xC32BD8")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xC33100", Offset = "0xC33100", VA = "0xC33100")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xC335AC", Offset = "0xC335AC", VA = "0xC335AC")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xC336E8", Offset = "0xC336E8", VA = "0xC336E8")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xC33838", Offset = "0xC33838", VA = "0xC33838")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xC33860", Offset = "0xC33860", VA = "0xC33860")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xC338A8", Offset = "0xC338A8", VA = "0xC338A8")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x17000253")]
		public bool SendUpdates
		{
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0xC338B0", Offset = "0xC338B0", VA = "0xC338B0")]
			set
			{
			}
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xC338BC", Offset = "0xC338BC", VA = "0xC338BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xC33938", Offset = "0xC33938", VA = "0xC33938")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xC33A18", Offset = "0xC33A18", VA = "0xC33A18")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xC32964", Offset = "0xC32964", VA = "0xC32964")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xC33B30", Offset = "0xC33B30", VA = "0xC33B30")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20006F5")]
		public enum State
		{
			[Token(Token = "0x40021ED")]
			INITIALIZING,
			[Token(Token = "0x40021EE")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x40021EF")]
			MATCH_TRANSITION,
			[Token(Token = "0x40021F0")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x40021F1")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x17000254")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xC2C3E0", Offset = "0xC2C3E0", VA = "0xC2C3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public static P2PManager P2P
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xC2BDB0", Offset = "0xC2BDB0", VA = "0xC2BDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xC2C494", Offset = "0xC2C494", VA = "0xC2C494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0xC2E8F8", Offset = "0xC2E8F8", VA = "0xC2E8F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public static State CurrentState
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0xC29F30", Offset = "0xC29F30", VA = "0xC29F30")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000259")]
		public static ulong MyID
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0xC2AF08", Offset = "0xC2AF08", VA = "0xC2AF08")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700025A")]
		public static string MyOculusID
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0xC2D57C", Offset = "0xC2D57C", VA = "0xC2D57C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xC33B38", Offset = "0xC33B38", VA = "0xC33B38")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xC33B80", Offset = "0xC33B80", VA = "0xC33B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xC33D70", Offset = "0xC33D70", VA = "0xC33D70")]
		private void Start()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xC33E0C", Offset = "0xC33E0C", VA = "0xC33E0C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xC33EE8", Offset = "0xC33EE8", VA = "0xC33EE8")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xC2FCE0", Offset = "0xC2FCE0", VA = "0xC2FCE0")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xC33FE8", Offset = "0xC33FE8", VA = "0xC33FE8")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xC33FF0", Offset = "0xC33FF0", VA = "0xC33FF0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xC2CD94", Offset = "0xC2CD94", VA = "0xC2CD94")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xC34024", Offset = "0xC34024", VA = "0xC34024")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4001913")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4001914")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4001915")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x1700025B")]
		public virtual uint Score
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xC2BE10", Offset = "0xC2BE10", VA = "0xC2BE10", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xC2BCE4", Offset = "0xC2BCE4", VA = "0xC2BCE4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0xC3402C", Offset = "0xC3402C", VA = "0xC3402C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		protected bool HasBall
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xC291C0", Offset = "0xC291C0", VA = "0xC291C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xC34034", Offset = "0xC34034", VA = "0xC34034")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xC32E34", Offset = "0xC32E34", VA = "0xC32E34")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xC29454", Offset = "0xC29454", VA = "0xC29454")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xC29230", Offset = "0xC29230", VA = "0xC29230")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xC34138", Offset = "0xC34138", VA = "0xC34138")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xC294E8", Offset = "0xC294E8", VA = "0xC294E8")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x1700025E")]
		public Player Player
		{
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0xC2E898", Offset = "0xC2E898", VA = "0xC2E898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public Text NameText
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xC2E958", Offset = "0xC2E958", VA = "0xC2E958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xC34274", Offset = "0xC34274", VA = "0xC34274")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D2")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xC343C8", Offset = "0xC343C8", VA = "0xC343C8")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Oculus.Platform.Models.User m_user;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x17000260")]
		public Oculus.Platform.Models.User User
		{
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0xC2D7B0", Offset = "0xC2D7B0", VA = "0xC2D7B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public ulong ID
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xC3164C", Offset = "0xC3164C", VA = "0xC3164C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000262")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xC3295C", Offset = "0xC3295C", VA = "0xC3295C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xC343D0", Offset = "0xC343D0", VA = "0xC343D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public override uint Score
		{
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xC343D8", Offset = "0xC343D8", VA = "0xC343D8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xC333F8", Offset = "0xC333F8", VA = "0xC333F8")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xC343DC", Offset = "0xC343DC", VA = "0xC343DC")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Button m_currentButton;

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xC343E0", Offset = "0xC343E0", VA = "0xC343E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xC3463C", Offset = "0xC3463C", VA = "0xC3463C")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20004EC")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C80C4", Offset = "0x7C80C4")]
		public int x;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8104", Offset = "0x7C8104")]
		public int y;

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xC22964", Offset = "0xC22964", VA = "0xC22964")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.UI.Button m_currentButton;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xC2296C", Offset = "0xC2296C", VA = "0xC2296C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xC234B0", Offset = "0xC234B0", VA = "0xC234B0")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20006F6")]
		private struct PositionInfo
		{
			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x400192D")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x400192E")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x400192F")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xC234B8", Offset = "0xC234B8", VA = "0xC234B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xC23768", Offset = "0xC23768", VA = "0xC23768")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xC23878", Offset = "0xC23878", VA = "0xC23878")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xC2395C", Offset = "0xC2395C", VA = "0xC2395C")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xC23A40", Offset = "0xC23A40", VA = "0xC23A40")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xC24348", Offset = "0xC24348", VA = "0xC24348")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xC2446C", Offset = "0xC2446C", VA = "0xC2446C")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xC246F0", Offset = "0xC246F0", VA = "0xC246F0")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xC23D48", Offset = "0xC23D48", VA = "0xC23D48")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xC248C0", Offset = "0xC248C0", VA = "0xC248C0")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xC23F2C", Offset = "0xC23F2C", VA = "0xC23F2C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xC24914", Offset = "0xC24914", VA = "0xC24914")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20006F7")]
		private enum GameState
		{
			[Token(Token = "0x40021F6")]
			None,
			[Token(Token = "0x40021F7")]
			PracticingMyTurn,
			[Token(Token = "0x40021F8")]
			PracticingAiTurn,
			[Token(Token = "0x40021F9")]
			OnlineMatchMyTurn,
			[Token(Token = "0x40021FA")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xC24A28", Offset = "0xC24A28", VA = "0xC24A28")]
		private void Start()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xC24BAC", Offset = "0xC24BAC", VA = "0xC24BAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xC24A50", Offset = "0xC24A50", VA = "0xC24A50")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xC2519C", Offset = "0xC2519C", VA = "0xC2519C")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xC24BB0", Offset = "0xC24BB0", VA = "0xC24BB0")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xC25ACC", Offset = "0xC25ACC", VA = "0xC25ACC")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xC254B0", Offset = "0xC254B0", VA = "0xC254B0")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xC25C30", Offset = "0xC25C30", VA = "0xC25C30")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xC25CA4", Offset = "0xC25CA4", VA = "0xC25CA4")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xC25D74", Offset = "0xC25D74", VA = "0xC25D74")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xC25D88", Offset = "0xC25D88", VA = "0xC25D88")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xC2308C", Offset = "0xC2308C", VA = "0xC2308C")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xC23060", Offset = "0xC23060", VA = "0xC23060")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xC230B4", Offset = "0xC230B4", VA = "0xC230B4")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xC233DC", Offset = "0xC233DC", VA = "0xC233DC")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xC25704", Offset = "0xC25704", VA = "0xC25704")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xC25818", Offset = "0xC25818", VA = "0xC25818")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xC26074", Offset = "0xC26074", VA = "0xC26074")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xC2607C", Offset = "0xC2607C", VA = "0xC2607C")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xC24A58", Offset = "0xC24A58", VA = "0xC24A58")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xC24C68", Offset = "0xC24C68", VA = "0xC24C68")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xC261FC", Offset = "0xC261FC", VA = "0xC261FC")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20006F8")]
		public enum Piece
		{
			[Token(Token = "0x40021FC")]
			A,
			[Token(Token = "0x40021FD")]
			B,
			[Token(Token = "0x40021FE")]
			PowerBall
		}

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x17000264")]
		public Piece Type
		{
			[Token(Token = "0x6002102")]
			[Address(RVA = "0xC25E0C", Offset = "0xC25E0C", VA = "0xC25E0C")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x17000265")]
		public BoardPosition Position
		{
			[Token(Token = "0x6002103")]
			[Address(RVA = "0xC25E04", Offset = "0xC25E04", VA = "0xC25E04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002104")]
			[Address(RVA = "0xC248B8", Offset = "0xC248B8", VA = "0xC248B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public GameObject Prefab
		{
			[Token(Token = "0x6002105")]
			[Address(RVA = "0xC25C04", Offset = "0xC25C04", VA = "0xC25C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xC25D4C", Offset = "0xC25D4C", VA = "0xC25D4C")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xC26260", Offset = "0xC26260", VA = "0xC26260")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x400194E")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xC26268", Offset = "0xC26268", VA = "0xC26268")]
		private void Start()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xC2628C", Offset = "0xC2628C", VA = "0xC2628C")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xC26464", Offset = "0xC26464", VA = "0xC26464")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xC263B8", Offset = "0xC263B8", VA = "0xC263B8")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xC26994", Offset = "0xC26994", VA = "0xC26994")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xC26DF4", Offset = "0xC26DF4", VA = "0xC26DF4")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xC26EAC", Offset = "0xC26EAC", VA = "0xC26EAC")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xC26FB8", Offset = "0xC26FB8", VA = "0xC26FB8")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20006F9")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4002200")]
			None,
			[Token(Token = "0x4002201")]
			Queued,
			[Token(Token = "0x4002202")]
			Configuring,
			[Token(Token = "0x4002203")]
			MyTurn,
			[Token(Token = "0x4002204")]
			RemoteTurn
		}

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4001952")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Oculus.Platform.Models.User m_remotePlayer;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4001956")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xC26FC0", Offset = "0xC26FC0", VA = "0xC26FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xC27240", Offset = "0xC27240", VA = "0xC27240")]
		private void Update()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xC2736C", Offset = "0xC2736C", VA = "0xC2736C")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xC252A4", Offset = "0xC252A4", VA = "0xC252A4")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xC2742C", Offset = "0xC2742C", VA = "0xC2742C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xC27080", Offset = "0xC27080", VA = "0xC27080")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xC27468", Offset = "0xC27468", VA = "0xC27468")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xC27828", Offset = "0xC27828", VA = "0xC27828")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xC279E0", Offset = "0xC279E0", VA = "0xC279E0")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xC283A0", Offset = "0xC283A0", VA = "0xC283A0")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xC27E10", Offset = "0xC27E10", VA = "0xC27E10")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xC28924", Offset = "0xC28924", VA = "0xC28924")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xC25E14", Offset = "0xC25E14", VA = "0xC25E14")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xC28B7C", Offset = "0xC28B7C", VA = "0xC28B7C")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xC288CC", Offset = "0xC288CC", VA = "0xC288CC")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xC28BC0", Offset = "0xC28BC0", VA = "0xC28BC0")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xC28C98", Offset = "0xC28C98", VA = "0xC28C98")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x17000267")]
		public static ulong MyID
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0xC27384", Offset = "0xC27384", VA = "0xC27384")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000268")]
		public static string MyOculusID
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0xC26124", Offset = "0xC26124", VA = "0xC26124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xC28CA0", Offset = "0xC28CA0", VA = "0xC28CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xC28DE8", Offset = "0xC28DE8", VA = "0xC28DE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xC28E84", Offset = "0xC28E84", VA = "0xC28E84")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xC29028", Offset = "0xC29028", VA = "0xC29028")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xC268DC", Offset = "0xC268DC", VA = "0xC268DC")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xC29154", Offset = "0xC29154", VA = "0xC29154")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20004F4")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xBB9578", Offset = "0xBB9578", VA = "0xBB9578")]
		private void Start()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xBB9684", Offset = "0xBB9684", VA = "0xBB9684")]
		private void Update()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xBB9760", Offset = "0xBB9760", VA = "0xBB9760")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xBBB5DC", Offset = "0xBBB5DC", VA = "0xBBB5DC")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xBBB4C4", Offset = "0xBBB4C4", VA = "0xBBB4C4")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xBBB408", Offset = "0xBBB408", VA = "0xBBB408")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xBBB320", Offset = "0xBBB320", VA = "0xBBB320")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xBBB26C", Offset = "0xBBB26C", VA = "0xBBB26C")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xBBB140", Offset = "0xBBB140", VA = "0xBBB140")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xBBB014", Offset = "0xBBB014", VA = "0xBBB014")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xBB95E4", Offset = "0xBB95E4", VA = "0xBB95E4")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xBBAF54", Offset = "0xBBAF54", VA = "0xBBAF54")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xBBA074", Offset = "0xBBA074", VA = "0xBBA074")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xBBA180", Offset = "0xBBA180", VA = "0xBBA180")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xBBA23C", Offset = "0xBBA23C", VA = "0xBBA23C")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xBBA338", Offset = "0xBBA338", VA = "0xBBA338")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xBBA438", Offset = "0xBBA438", VA = "0xBBA438")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xBBA534", Offset = "0xBBA534", VA = "0xBBA534")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xBBA660", Offset = "0xBBA660", VA = "0xBBA660")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xBBA720", Offset = "0xBBA720", VA = "0xBBA720")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xBBA820", Offset = "0xBBA820", VA = "0xBBA820")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xBBA8E0", Offset = "0xBBA8E0", VA = "0xBBA8E0")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xBBA99C", Offset = "0xBBA99C", VA = "0xBBA99C")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xBBAAB0", Offset = "0xBBAAB0", VA = "0xBBAAB0")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xBBABC4", Offset = "0xBBABC4", VA = "0xBBABC4")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xBBB698", Offset = "0xBBB698", VA = "0xBBB698")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xBBB760", Offset = "0xBBB760", VA = "0xBBB760")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xBBBF28", Offset = "0xBBBF28", VA = "0xBBBF28")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xBBC4CC", Offset = "0xBBC4CC", VA = "0xBBC4CC")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xBBC5C0", Offset = "0xBBC5C0", VA = "0xBBC5C0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xBBC63C", Offset = "0xBBC63C", VA = "0xBBC63C")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xBBCCA4", Offset = "0xBBCCA4", VA = "0xBBCCA4")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xBBCE20", Offset = "0xBBCE20", VA = "0xBBCE20")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xBBCEE0", Offset = "0xBBCEE0", VA = "0xBBCEE0")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xBBCFA0", Offset = "0xBBCFA0", VA = "0xBBCFA0")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xBBD060", Offset = "0xBBD060", VA = "0xBBD060")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xBBD41C", Offset = "0xBBD41C", VA = "0xBBD41C")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xBBD850", Offset = "0xBBD850", VA = "0xBBD850")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xBBD940", Offset = "0xBBD940", VA = "0xBBD940")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xBBDA30", Offset = "0xBBDA30", VA = "0xBBDA30")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xBBDB20", Offset = "0xBBDB20", VA = "0xBBDB20")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xBBDC10", Offset = "0xBBDC10", VA = "0xBBDC10")]
		private void getUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xBBE038", Offset = "0xBBE038", VA = "0xBBE038")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xBBE128", Offset = "0xBBE128", VA = "0xBBE128")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xBBE218", Offset = "0xBBE218", VA = "0xBBE218")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xBBE2D8", Offset = "0xBBE2D8", VA = "0xBBE2D8")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20004F5")]
	internal enum states
	{
		[Token(Token = "0x400195D")]
		NOT_INIT,
		[Token(Token = "0x400195E")]
		IDLE,
		[Token(Token = "0x400195F")]
		REQUEST_FIND,
		[Token(Token = "0x4001960")]
		FINDING_ROOM,
		[Token(Token = "0x4001961")]
		REQUEST_CREATE,
		[Token(Token = "0x4001962")]
		REQUEST_JOIN,
		[Token(Token = "0x4001963")]
		REQUEST_LEAVE,
		[Token(Token = "0x4001964")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4001965")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20004F6")]
	public static class Constants
	{
		[Token(Token = "0x4001966")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4001967")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4001968")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20004F7")]
	public class chatPacket
	{
		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C82F4", Offset = "0x7C82F4")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8304", Offset = "0x7C8304")]
		private string <textString>k__BackingField;

		[Token(Token = "0x17000269")]
		public int packetID
		{
			[Token(Token = "0x6002157")]
			[Address(RVA = "0xBB92C8", Offset = "0xBB92C8", VA = "0xBB92C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2428", Offset = "0x7D2428")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002158")]
			[Address(RVA = "0xBB8C34", Offset = "0xBB8C34", VA = "0xBB8C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2438", Offset = "0x7D2438")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public string textString
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xBB92C0", Offset = "0xBB92C0", VA = "0xBB92C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2448", Offset = "0x7D2448")]
			get
			{
				return null;
			}
			[Token(Token = "0x600215A")]
			[Address(RVA = "0xBB8C3C", Offset = "0xBB8C3C", VA = "0xBB8C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2458", Offset = "0x7D2458")]
			set
			{
			}
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xBB8C44", Offset = "0xBB8C44", VA = "0xBB8C44")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xBB8FD0", Offset = "0xBB8FD0", VA = "0xBB8FD0")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xBB8C2C", Offset = "0xBB8C2C", VA = "0xBB8C2C")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Oculus.Platform.Models.User localUser;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Oculus.Platform.Models.User remoteUser;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xBB65DC", Offset = "0xBB65DC", VA = "0xBB65DC")]
		private void Start()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xBB6798", Offset = "0xBB6798", VA = "0xBB6798")]
		private void Update()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xBB687C", Offset = "0xBB687C", VA = "0xBB687C")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xBB7E00", Offset = "0xBB7E00", VA = "0xBB7E00")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xBB66F8", Offset = "0xBB66F8", VA = "0xBB66F8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xBB7EC8", Offset = "0xBB7EC8", VA = "0xBB7EC8")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xBB7FC0", Offset = "0xBB7FC0", VA = "0xBB7FC0")]
		private void init(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xBB6D98", Offset = "0xBB6D98", VA = "0xBB6D98")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xBB8114", Offset = "0xBB8114", VA = "0xBB8114")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xBB6F18", Offset = "0xBB6F18", VA = "0xBB6F18")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xBB7334", Offset = "0xBB7334", VA = "0xBB7334")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xBB74AC", Offset = "0xBB74AC", VA = "0xBB74AC")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xBB8280", Offset = "0xBB8280", VA = "0xBB8280")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xBB83E4", Offset = "0xBB83E4", VA = "0xBB83E4")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xBB71BC", Offset = "0xBB71BC", VA = "0xBB71BC")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xBB8774", Offset = "0xBB8774", VA = "0xBB8774")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xBB8850", Offset = "0xBB8850", VA = "0xBB8850")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xBB7890", Offset = "0xBB7890", VA = "0xBB7890")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xBB6BFC", Offset = "0xBB6BFC", VA = "0xBB6BFC")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xBB79B4", Offset = "0xBB79B4", VA = "0xBB79B4")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xBB92D0", Offset = "0xBB92D0", VA = "0xBB92D0")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xBB7AE8", Offset = "0xBB7AE8", VA = "0xBB7AE8")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xBB93CC", Offset = "0xBB93CC", VA = "0xBB93CC")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xBB7C04", Offset = "0xBB7C04", VA = "0xBB7C04")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xBB94A8", Offset = "0xBB94A8", VA = "0xBB94A8")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xBB9570", Offset = "0xBB9570", VA = "0xBB9570")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20004F9")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x1400003C")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0xBB5EB4", Offset = "0xBB5EB4", VA = "0xBB5EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2468", Offset = "0x7D2468")]
			add
			{
			}
			[Token(Token = "0x6002179")]
			[Address(RVA = "0xBB5F6C", Offset = "0xBB5F6C", VA = "0xBB5F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2478", Offset = "0x7D2478")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x600217A")]
			[Address(RVA = "0xBB6024", Offset = "0xBB6024", VA = "0xBB6024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2488", Offset = "0x7D2488")]
			add
			{
			}
			[Token(Token = "0x600217B")]
			[Address(RVA = "0xBB60E0", Offset = "0xBB60E0", VA = "0xBB60E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2498", Offset = "0x7D2498")]
			remove
			{
			}
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xBB619C", Offset = "0xBB619C", VA = "0xBB619C")]
		private void Start()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xBB6590", Offset = "0xBB6590", VA = "0xBB6590")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xBB6314", Offset = "0xBB6314", VA = "0xBB6314")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xBB65CC", Offset = "0xBB65CC", VA = "0xBB65CC")]
		public EntitlementCheck()
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x20004FA")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xA911C0", Offset = "0xA911C0", VA = "0xA911C0")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xA91654", Offset = "0xA91654", VA = "0xA91654")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xA91664", Offset = "0xA91664", VA = "0xA91664", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xA919BC", Offset = "0xA919BC", VA = "0xA919BC", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xA91B24", Offset = "0xA91B24", VA = "0xA91B24", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xA91C60", Offset = "0xA91C60", VA = "0xA91C60", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xA91EC8", Offset = "0xA91EC8", VA = "0xA91EC8", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xA91ED0", Offset = "0xA91ED0", VA = "0xA91ED0", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xA91F08", Offset = "0xA91F08", VA = "0xA91F08", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xA91A70", Offset = "0xA91A70", VA = "0xA91A70")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xA91BC8", Offset = "0xA91BC8", VA = "0xA91BC8")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xA915B8", Offset = "0xA915B8", VA = "0xA915B8")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xA9180C", Offset = "0xA9180C", VA = "0xA9180C")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xA91F0C", Offset = "0xA91F0C", VA = "0xA91F0C")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x1700026B")]
		internal PlayableDirector director
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0xA91F28", Offset = "0xA91F28", VA = "0xA91F28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600218F")]
			[Address(RVA = "0xA91F30", Offset = "0xA91F30", VA = "0xA91F30")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0xA91F38", Offset = "0xA91F38", VA = "0xA91F38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002191")]
			[Address(RVA = "0xA91F40", Offset = "0xA91F40", VA = "0xA91F40")]
			set
			{
			}
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xA91F48", Offset = "0xA91F48", VA = "0xA91F48", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xA923DC", Offset = "0xA923DC", VA = "0xA923DC")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xA923E4", Offset = "0xA923E4", VA = "0xA923E4", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xA9258C", Offset = "0xA9258C", VA = "0xA9258C")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BB814", Offset = "0x7BB814")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BB814", Offset = "0x7BB814")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x6002196")]
		[Address(RVA = "0xA925A8", Offset = "0xA925A8", VA = "0xA925A8", Slot = "19")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xA92704", Offset = "0xA92704", VA = "0xA92704")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace Cinemachine
{
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BB8A0", Offset = "0x7BB8A0")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BB8A0", Offset = "0x7BB8A0")]
	public class CinemachineBlendListCamera : CinemachineVirtualCameraBase
	{
		[Serializable]
		[Token(Token = "0x20006FA")]
		public struct Instruction
		{
			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC470", Offset = "0x7CC470")]
			public CinemachineVirtualCameraBase m_VirtualCamera;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC4A8", Offset = "0x7CC4A8")]
			public float m_Hold;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[CinemachineBlendDefinitionProperty]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC4E0", Offset = "0x7CC4E0")]
			public CinemachineBlendDefinition m_Blend;
		}

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C844C", Offset = "0x7C844C")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8498", Offset = "0x7C8498")]
		[NoSaveDuringPlay]
		public Transform m_Follow;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C84E4", Offset = "0x7C84E4")]
		public bool m_ShowDebugText;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C851C", Offset = "0x7C851C")]
		public bool m_EnableAllChildCameras;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[HideInInspector]
		[NoSaveDuringPlay]
		public CinemachineVirtualCameraBase[] m_ChildCameras;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C859C", Offset = "0x7C859C")]
		public Instruction[] m_Instructions;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C85D4", Offset = "0x7C85D4")]
		private ICinemachineCamera <LiveChild>k__BackingField;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CameraState m_State;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float mActivationTime;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int mCurrentInstruction;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CinemachineBlend mActiveBlend;

		[Token(Token = "0x1700026D")]
		public override string Description
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1107DA0", Offset = "0x1107DA0", VA = "0x1107DA0", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public ICinemachineCamera LiveChild
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1107EA0", Offset = "0x1107EA0", VA = "0x1107EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24B8", Offset = "0x7D24B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1107EA8", Offset = "0x1107EA8", VA = "0x1107EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24A8", Offset = "0x7D24A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public override ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1107EB0", Offset = "0x1107EB0", VA = "0x1107EB0", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public override CameraState State
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1107EF8", Offset = "0x1107EF8", VA = "0x1107EF8", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x17000271")]
		public override Transform LookAt
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x1107F08", Offset = "0x1107F08", VA = "0x1107F08", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x600219F")]
			[Address(RVA = "0x1107F14", Offset = "0x1107F14", VA = "0x1107F14", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public override Transform Follow
		{
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x1107F1C", Offset = "0x1107F1C", VA = "0x1107F1C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x1107F28", Offset = "0x1107F28", VA = "0x1107F28", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public CinemachineVirtualCameraBase[] ChildCameras
		{
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x1108E90", Offset = "0x1108E90", VA = "0x1108E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public bool IsBlending
		{
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x1108EB4", Offset = "0x1108EB4", VA = "0x1108EB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x1107EB8", Offset = "0x1107EB8", VA = "0x1107EB8", Slot = "24")]
		public override bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1107F30", Offset = "0x1107F30", VA = "0x1107F30", Slot = "20")]
		public override void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x11081C0", Offset = "0x11081C0", VA = "0x11081C0", Slot = "30")]
		public override void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1108258", Offset = "0x1108258", VA = "0x1108258", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x1108DD8", Offset = "0x1108DD8", VA = "0x1108DD8", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1108E5C", Offset = "0x1108E5C", VA = "0x1108E5C")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1108E28", Offset = "0x1108E28", VA = "0x1108E28")]
		private void InvalidateListOfChildren()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1107FD8", Offset = "0x1107FD8", VA = "0x1107FD8")]
		private void UpdateListOfChildren()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1108EC4", Offset = "0x1108EC4", VA = "0x1108EC4")]
		public void ValidateInstructions()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1108874", Offset = "0x1108874", VA = "0x1108874")]
		private void AdvanceCurrentInstruction()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1108A14", Offset = "0x1108A14", VA = "0x1108A14")]
		private CinemachineBlend CreateBlend(ICinemachineCamera camA, ICinemachineCamera camB, AnimationCurve blendCurve, float duration, CinemachineBlend activeBlend, float deltaTime)
		{
			return null;
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x11090DC", Offset = "0x11090DC", VA = "0x11090DC")]
		public CinemachineBlendListCamera()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BB914", Offset = "0x7BB914")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BB914", Offset = "0x7BB914")]
	[SaveDuringPlay]
	public class CinemachineBrain : MonoBehaviour
	{
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD318", Offset = "0x7BD318")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4002209")]
			FixedUpdate,
			[Token(Token = "0x400220A")]
			LateUpdate,
			[Token(Token = "0x400220B")]
			SmartUpdate
		}

		[Serializable]
		[Token(Token = "0x20006FC")]
		public class BrainEvent : UnityEvent<CinemachineBrain>
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x110BFF8", Offset = "0x110BFF8", VA = "0x110BFF8")]
			public BrainEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006FD")]
		public class VcamEvent : UnityEvent<ICinemachineCamera>
		{
			[Token(Token = "0x6002964")]
			[Address(RVA = "0x110C048", Offset = "0x110C048", VA = "0x110C048")]
			public VcamEvent()
			{
			}
		}

		[Token(Token = "0x20006FE")]
		private class OverrideStackFrame
		{
			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ICinemachineCamera camera;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CinemachineBlend blend;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float deltaTime;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float timeOfOverride;

			[Token(Token = "0x1700048D")]
			public bool Active
			{
				[Token(Token = "0x6002965")]
				[Address(RVA = "0x1109990", Offset = "0x1109990", VA = "0x1109990")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700048E")]
			public bool Expired
			{
				[Token(Token = "0x6002966")]
				[Address(RVA = "0x110AD5C", Offset = "0x110AD5C", VA = "0x110AD5C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002967")]
			[Address(RVA = "0x11097E4", Offset = "0x11097E4", VA = "0x11097E4")]
			public OverrideStackFrame()
			{
			}
		}

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD334", Offset = "0x7BD334")]
		private sealed class <AfterPhysics>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CinemachineBrain <>4__this;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600296B")]
				[Address(RVA = "0x110C2D8", Offset = "0x110C2D8", VA = "0x110C2D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600296D")]
				[Address(RVA = "0x110C348", Offset = "0x110C348", VA = "0x110C348", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002968")]
			[Address(RVA = "0x110A54C", Offset = "0x110A54C", VA = "0x110A54C")]
			[DebuggerHidden]
			public <AfterPhysics>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002969")]
			[Address(RVA = "0x110C104", Offset = "0x110C104", VA = "0x110C104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600296A")]
			[Address(RVA = "0x110C108", Offset = "0x110C108", VA = "0x110C108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600296C")]
			[Address(RVA = "0x110C2E0", Offset = "0x110C2E0", VA = "0x110C2E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C85E4", Offset = "0x7C85E4")]
		public bool m_ShowDebugText;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C861C", Offset = "0x7C861C")]
		public bool m_ShowCameraFrustum;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8654", Offset = "0x7C8654")]
		public bool m_IgnoreTimeScale;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C868C", Offset = "0x7C868C")]
		public Transform m_WorldUpOverride;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C86C4", Offset = "0x7C86C4")]
		public UpdateMethod m_UpdateMethod;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[CinemachineBlendDefinitionProperty]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C86FC", Offset = "0x7C86FC")]
		public CinemachineBlendDefinition m_DefaultBlend;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8748", Offset = "0x7C8748")]
		public CinemachineBlenderSettings m_CustomBlends;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_OutputCamera;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8780", Offset = "0x7C8780")]
		public BrainEvent m_CameraCutEvent;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C87B8", Offset = "0x7C87B8")]
		public VcamEvent m_CameraActivatedEvent;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C87F0", Offset = "0x7C87F0")]
		private Component <PostProcessingComponent>k__BackingField;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static BrainEvent sPostProcessingHandler;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8800", Offset = "0x7C8800")]
		private static ICinemachineCamera <SoloCamera>k__BackingField;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ICinemachineCamera mActiveCameraPreviousFrame;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ICinemachineCamera mOutgoingCameraPreviousFrame;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CinemachineBlend mActiveBlend;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool mPreviousFrameWasOverride;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<OverrideStackFrame> mOverrideStack;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int mNextOverrideId;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OverrideStackFrame mOverrideBlendFromNothing;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WaitForFixedUpdate mWaitForFixedUpdate;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8810", Offset = "0x7C8810")]
		private CameraState <CurrentCameraState>k__BackingField;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int msCurrentFrame;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int msFirstBrainObjectId;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int msSubframes;

		[Token(Token = "0x17000275")]
		public Camera OutputCamera
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x1109398", Offset = "0x1109398", VA = "0x1109398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		internal Component PostProcessingComponent
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x1109448", Offset = "0x1109448", VA = "0x1109448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24C8", Offset = "0x7D24C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x1109450", Offset = "0x1109450", VA = "0x1109450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24D8", Offset = "0x7D24D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public static ICinemachineCamera SoloCamera
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x1109458", Offset = "0x1109458", VA = "0x1109458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24E8", Offset = "0x7D24E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x11094C0", Offset = "0x11094C0", VA = "0x11094C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D24F8", Offset = "0x7D24F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public Vector3 DefaultWorldUp
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x11095AC", Offset = "0x11095AC", VA = "0x11095AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000279")]
		public bool IsBlending
		{
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x110B99C", Offset = "0x110B99C", VA = "0x110B99C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		public CinemachineBlend ActiveBlend
		{
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x110B02C", Offset = "0x110B02C", VA = "0x110B02C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public ICinemachineCamera ActiveVirtualCamera
		{
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x110AF7C", Offset = "0x110AF7C", VA = "0x110AF7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public CameraState CurrentCameraState
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x110BBD0", Offset = "0x110BBD0", VA = "0x110BBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D256C", Offset = "0x7D256C")]
			get
			{
				return default(CameraState);
			}
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x110BBE0", Offset = "0x110BBE0", VA = "0x110BBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D257C", Offset = "0x7D257C")]
			private set
			{
			}
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1109530", Offset = "0x1109530", VA = "0x1109530")]
		public static Color GetSoloGUIColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1109684", Offset = "0x1109684", VA = "0x1109684")]
		private OverrideStackFrame GetOverrideFrame(int id)
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x11097EC", Offset = "0x11097EC", VA = "0x11097EC")]
		private OverrideStackFrame GetNextActiveFrame(int overrideId)
		{
			return null;
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1109BD0", Offset = "0x1109BD0", VA = "0x1109BD0")]
		private OverrideStackFrame GetActiveOverride()
		{
			return null;
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1109CC4", Offset = "0x1109CC4", VA = "0x1109CC4")]
		internal int SetCameraOverride(int overrideId, ICinemachineCamera camA, ICinemachineCamera camB, float weightB, float deltaTime)
		{
			return default(int);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1109F80", Offset = "0x1109F80", VA = "0x1109F80")]
		internal void ReleaseCameraOverride(int overrideId)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x110A08C", Offset = "0x110A08C", VA = "0x110A08C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x110A1BC", Offset = "0x110A1BC", VA = "0x110A1BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x110A2FC", Offset = "0x110A2FC", VA = "0x110A2FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x110A4CC", Offset = "0x110A4CC", VA = "0x110A4CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D2508", Offset = "0x7D2508")]
		private IEnumerator AfterPhysics()
		{
			return null;
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x110A578", Offset = "0x110A578", VA = "0x110A578")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x110A5D4", Offset = "0x110A5D4", VA = "0x110A5D4")]
		private float GetEffectiveDeltaTime(bool fixedDelta)
		{
			return default(float);
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x110A338", Offset = "0x110A338", VA = "0x110A338")]
		private void UpdateVirtualCameras(CinemachineCore.UpdateFilter updateFilter, float deltaTime)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x110A6F4", Offset = "0x110A6F4", VA = "0x110A6F4")]
		private void ProcessActiveCamera(float deltaTime)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x110B9F0", Offset = "0x110B9F0", VA = "0x110B9F0")]
		public bool IsLive(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x110BB58", Offset = "0x110BB58", VA = "0x110BB58")]
		private bool IsLiveItself(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x11099A0", Offset = "0x11099A0", VA = "0x11099A0")]
		private ICinemachineCamera TopCameraFromPriorityQueue()
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x110B0B4", Offset = "0x110B0B4", VA = "0x110B0B4")]
		private AnimationCurve LookupBlendCurve(ICinemachineCamera fromKey, ICinemachineCamera toKey, out float duration)
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x110B2F8", Offset = "0x110B2F8", VA = "0x110B2F8")]
		private CinemachineBlend CreateBlend(ICinemachineCamera camA, ICinemachineCamera camB, AnimationCurve blendCurve, float duration, CinemachineBlend activeBlend)
		{
			return null;
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x110B710", Offset = "0x110B710", VA = "0x110B710")]
		private void PushStateToUnityCamera(CameraState state, ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x110BCE0", Offset = "0x110BCE0", VA = "0x110BCE0")]
		private void AddSubframe()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x110BE14", Offset = "0x110BE14", VA = "0x110BE14")]
		internal static int GetSubframeCount()
		{
			return default(int);
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x110BEAC", Offset = "0x110BEAC", VA = "0x110BEAC")]
		public CinemachineBrain()
		{
		}
	}
	[Token(Token = "0x2000500")]
	internal class StaticPointVirtualCamera : ICinemachineCamera
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8820", Offset = "0x7C8820")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8830", Offset = "0x7C8830")]
		private int <Priority>k__BackingField;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8840", Offset = "0x7C8840")]
		private Transform <LookAt>k__BackingField;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8850", Offset = "0x7C8850")]
		private Transform <Follow>k__BackingField;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8860", Offset = "0x7C8860")]
		private CameraState <State>k__BackingField;

		[Token(Token = "0x1700027D")]
		public string Name
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xBE5BB8", Offset = "0xBE5BB8", VA = "0xBE5BB8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D258C", Offset = "0x7D258C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xBE5B80", Offset = "0xBE5B80", VA = "0xBE5B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D259C", Offset = "0x7D259C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public string Description
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xBE5BC0", Offset = "0xBE5BC0", VA = "0xBE5BC0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public int Priority
		{
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xBE5C08", Offset = "0xBE5C08", VA = "0xBE5C08", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25AC", Offset = "0x7D25AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xBE5C10", Offset = "0xBE5C10", VA = "0xBE5C10", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25BC", Offset = "0x7D25BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public Transform LookAt
		{
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0xBE5C18", Offset = "0xBE5C18", VA = "0xBE5C18", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25CC", Offset = "0x7D25CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xBE5C20", Offset = "0xBE5C20", VA = "0xBE5C20", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25DC", Offset = "0x7D25DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public Transform Follow
		{
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xBE5C28", Offset = "0xBE5C28", VA = "0xBE5C28", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25EC", Offset = "0x7D25EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0xBE5C30", Offset = "0xBE5C30", VA = "0xBE5C30", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D25FC", Offset = "0x7D25FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public CameraState State
		{
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xBE5C38", Offset = "0xBE5C38", VA = "0xBE5C38", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D260C", Offset = "0x7D260C")]
			get
			{
				return default(CameraState);
			}
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xBE5B50", Offset = "0xBE5B50", VA = "0xBE5B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D261C", Offset = "0x7D261C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public GameObject VirtualCameraGameObject
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xBE5C48", Offset = "0xBE5C48", VA = "0xBE5C48", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		public ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xBE5C50", Offset = "0xBE5C50", VA = "0xBE5C50", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		public ICinemachineCamera ParentCamera
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0xBE5C54", Offset = "0xBE5C54", VA = "0xBE5C54", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xBDCEF0", Offset = "0xBDCEF0", VA = "0xBDCEF0")]
		public StaticPointVirtualCamera(CameraState state, string name)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xBE5B88", Offset = "0xBE5B88", VA = "0xBE5B88")]
		public void SetState(CameraState state)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xBE5C5C", Offset = "0xBE5C5C", VA = "0xBE5C5C", Slot = "16")]
		public bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xBE5C64", Offset = "0xBE5C64", VA = "0xBE5C64", Slot = "17")]
		public void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xBE5C68", Offset = "0xBE5C68", VA = "0xBE5C68", Slot = "18")]
		public void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}
	}
	[Token(Token = "0x2000501")]
	internal class BlendSourceVirtualCamera : ICinemachineCamera
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8870", Offset = "0x7C8870")]
		private CinemachineBlend <Blend>k__BackingField;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8880", Offset = "0x7C8880")]
		private int <Priority>k__BackingField;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8890", Offset = "0x7C8890")]
		private Transform <LookAt>k__BackingField;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C88A0", Offset = "0x7C88A0")]
		private Transform <Follow>k__BackingField;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C88B0", Offset = "0x7C88B0")]
		private CameraState <State>k__BackingField;

		[Token(Token = "0x17000286")]
		public CinemachineBlend Blend
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x1104DF0", Offset = "0x1104DF0", VA = "0x1104DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D262C", Offset = "0x7D262C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x1104D2C", Offset = "0x1104D2C", VA = "0x1104D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D263C", Offset = "0x7D263C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public string Name
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x1104DF8", Offset = "0x1104DF8", VA = "0x1104DF8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public string Description
		{
			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x1104E40", Offset = "0x1104E40", VA = "0x1104E40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		public int Priority
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x1105074", Offset = "0x1105074", VA = "0x1105074", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D264C", Offset = "0x7D264C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021EB")]
			[Address(RVA = "0x110507C", Offset = "0x110507C", VA = "0x110507C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D265C", Offset = "0x7D265C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public Transform LookAt
		{
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x1105084", Offset = "0x1105084", VA = "0x1105084", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D266C", Offset = "0x7D266C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x110508C", Offset = "0x110508C", VA = "0x110508C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D267C", Offset = "0x7D267C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Transform Follow
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x1105094", Offset = "0x1105094", VA = "0x1105094", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D268C", Offset = "0x7D268C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x110509C", Offset = "0x110509C", VA = "0x110509C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D269C", Offset = "0x7D269C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public CameraState State
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x11050A4", Offset = "0x11050A4", VA = "0x11050A4", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26AC", Offset = "0x7D26AC")]
			get
			{
				return default(CameraState);
			}
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x11050B4", Offset = "0x11050B4", VA = "0x11050B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26BC", Offset = "0x7D26BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public GameObject VirtualCameraGameObject
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0x11050E4", Offset = "0x11050E4", VA = "0x11050E4", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x11050EC", Offset = "0x11050EC", VA = "0x11050EC", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public ICinemachineCamera ParentCamera
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x1105120", Offset = "0x1105120", VA = "0x1105120", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1104C10", Offset = "0x1104C10", VA = "0x1104C10")]
		public BlendSourceVirtualCamera(CinemachineBlend blend, float deltaTime)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1105128", Offset = "0x1105128", VA = "0x1105128", Slot = "16")]
		public bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1105190", Offset = "0x1105190", VA = "0x1105190")]
		public CameraState CalculateNewState(float deltaTime)
		{
			return default(CameraState);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1104D48", Offset = "0x1104D48", VA = "0x1104D48", Slot = "17")]
		public void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1105454", Offset = "0x1105454", VA = "0x1105454", Slot = "18")]
		public void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}
	}
	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BB998", Offset = "0x7BB998")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BB998", Offset = "0x7BB998")]
	public class CinemachineClearShot : CinemachineVirtualCameraBase
	{
		[Token(Token = "0x2000700")]
		private struct Pair
		{
			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int a;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float b;
		}

		[Serializable]
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD344", Offset = "0x7BD344")]
		private sealed class <>c
		{
			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Pair> <>9__46_0;

			[Token(Token = "0x600296F")]
			[Address(RVA = "0x110DAB0", Offset = "0x110DAB0", VA = "0x110DAB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002970")]
			[Address(RVA = "0x110DAB8", Offset = "0x110DAB8", VA = "0x110DAB8")]
			internal int <Randomize>b__46_0(Pair p1, Pair p2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C88C0", Offset = "0x7C88C0")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C890C", Offset = "0x7C890C")]
		[NoSaveDuringPlay]
		public Transform m_Follow;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8958", Offset = "0x7C8958")]
		[NoSaveDuringPlay]
		public bool m_ShowDebugText;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[HideInInspector]
		[NoSaveDuringPlay]
		public CinemachineVirtualCameraBase[] m_ChildCameras;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C89EC", Offset = "0x7C89EC")]
		public float m_ActivateAfter;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8A24", Offset = "0x7C8A24")]
		public float m_MinDuration;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8A5C", Offset = "0x7C8A5C")]
		public bool m_RandomizeChoice;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[CinemachineBlendDefinitionProperty]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8A94", Offset = "0x7C8A94")]
		public CinemachineBlendDefinition m_DefaultBlend;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public CinemachineBlenderSettings m_CustomBlends;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8AF0", Offset = "0x7C8AF0")]
		private ICinemachineCamera <LiveChild>k__BackingField;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CameraState m_State;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float mActivationTime;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float mPendingActivationTime;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private ICinemachineCamera mPendingCamera;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private CinemachineBlend mActiveBlend;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool mRandomizeNow;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private CinemachineVirtualCameraBase[] m_RandomizedChilden;

		[Token(Token = "0x17000290")]
		public override string Description
		{
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x110C350", Offset = "0x110C350", VA = "0x110C350", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public ICinemachineCamera LiveChild
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x110C450", Offset = "0x110C450", VA = "0x110C450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26DC", Offset = "0x7D26DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x110C458", Offset = "0x110C458", VA = "0x110C458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26CC", Offset = "0x7D26CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public override CameraState State
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x110C460", Offset = "0x110C460", VA = "0x110C460", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x17000293")]
		public override ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x110C470", Offset = "0x110C470", VA = "0x110C470", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public override Transform LookAt
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x110C4B8", Offset = "0x110C4B8", VA = "0x110C4B8", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x110C4C4", Offset = "0x110C4C4", VA = "0x110C4C4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public override Transform Follow
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x110C4CC", Offset = "0x110C4CC", VA = "0x110C4CC", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x110C4D8", Offset = "0x110C4D8", VA = "0x110C4D8", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public bool IsBlending
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0x110D5D4", Offset = "0x110D5D4", VA = "0x110D5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000297")]
		public CinemachineVirtualCameraBase[] ChildCameras
		{
			[Token(Token = "0x6002208")]
			[Address(RVA = "0x110D5E4", Offset = "0x110D5E4", VA = "0x110D5E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x110C478", Offset = "0x110C478", VA = "0x110C478", Slot = "24")]
		public override bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x110C4E0", Offset = "0x110C4E0", VA = "0x110C4E0", Slot = "20")]
		public override void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x110C798", Offset = "0x110C798", VA = "0x110C798", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x110D554", Offset = "0x110D554", VA = "0x110D554", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x110D5D0", Offset = "0x110D5D0", VA = "0x110D5D0")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x110D58C", Offset = "0x110D58C", VA = "0x110D58C")]
		private void InvalidateListOfChildren()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x110D608", Offset = "0x110D608", VA = "0x110D608")]
		public void ResetRandomization()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x110C588", Offset = "0x110C588", VA = "0x110C588")]
		private void UpdateListOfChildren()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x110CB0C", Offset = "0x110CB0C", VA = "0x110CB0C")]
		private ICinemachineCamera ChooseCurrentCamera(Vector3 worldUp, float deltaTime)
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x110D63C", Offset = "0x110D63C", VA = "0x110D63C")]
		private CinemachineVirtualCameraBase[] Randomize(CinemachineVirtualCameraBase[] src)
		{
			return null;
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x110D184", Offset = "0x110D184", VA = "0x110D184")]
		private AnimationCurve LookupBlendCurve(ICinemachineCamera fromKey, ICinemachineCamera toKey, out float duration)
		{
			return null;
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x110D3C8", Offset = "0x110D3C8", VA = "0x110D3C8")]
		private CinemachineBlend CreateBlend(ICinemachineCamera camA, ICinemachineCamera camB, AnimationCurve blendCurve, float duration, CinemachineBlend activeBlend, float deltaTime)
		{
			return null;
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x110D908", Offset = "0x110D908", VA = "0x110D908", Slot = "30")]
		public override void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x110D9B0", Offset = "0x110D9B0", VA = "0x110D9B0")]
		public CinemachineClearShot()
		{
		}
	}
	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBA0C", Offset = "0x7BBA0C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBA0C", Offset = "0x7BBA0C")]
	[SaveDuringPlay]
	public class CinemachineCollider : CinemachineExtension
	{
		[Token(Token = "0x2000702")]
		public enum ResolutionStrategy
		{
			[Token(Token = "0x4002219")]
			PullCameraForward,
			[Token(Token = "0x400221A")]
			PreserveCameraHeight,
			[Token(Token = "0x400221B")]
			PreserveCameraDistance
		}

		[Token(Token = "0x2000703")]
		private class VcamExtraState
		{
			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_previousDisplacement;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float colliderDisplacement;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool targetObscured;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> debugResolutionPath;

			[Token(Token = "0x6002971")]
			[Address(RVA = "0x110EDB4", Offset = "0x110EDB4", VA = "0x110EDB4")]
			public void AddPointToDebugPath(Vector3 p)
			{
			}

			[Token(Token = "0x6002972")]
			[Address(RVA = "0x11109C8", Offset = "0x11109C8", VA = "0x11109C8")]
			public VcamExtraState()
			{
			}
		}

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8B00", Offset = "0x7C8B00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8B00", Offset = "0x7C8B00")]
		public LayerMask m_CollideAgainst;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[TagField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8B60", Offset = "0x7C8B60")]
		public string m_IgnoreTag;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8BAC", Offset = "0x7C8BAC")]
		public float m_MinimumDistanceFromTarget;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8BE4", Offset = "0x7C8BE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8BE4", Offset = "0x7C8BE4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8BE4", Offset = "0x7C8BE4")]
		public bool m_AvoidObstacles;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8C54", Offset = "0x7C8C54")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8C54", Offset = "0x7C8C54")]
		public float m_DistanceLimit;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8CB4", Offset = "0x7C8CB4")]
		public float m_CameraRadius;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8CEC", Offset = "0x7C8CEC")]
		public ResolutionStrategy m_Strategy;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8D24", Offset = "0x7C8D24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8D24", Offset = "0x7C8D24")]
		public int m_MaximumEffort;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8D78", Offset = "0x7C8D78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8D78", Offset = "0x7C8D78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8D78", Offset = "0x7C8D78")]
		public float m_Damping;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8DF0", Offset = "0x7C8DF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8DF0", Offset = "0x7C8DF0")]
		public float m_OptimalTargetDistance;

		[Token(Token = "0x40019CE")]
		private const float PrecisionSlush = 0.001f;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit[] m_CornerBuffer;

		[Token(Token = "0x40019D0")]
		private const float AngleThreshold = 0.1f;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider[] mColliderBuffer;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SphereCollider mCameraCollider;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject mCameraColliderGameObject;

		[Token(Token = "0x17000298")]
		public List<List<Vector3>> DebugPaths
		{
			[Token(Token = "0x6002216")]
			[Address(RVA = "0x110DE78", Offset = "0x110DE78", VA = "0x110DE78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x110DAD8", Offset = "0x110DAD8", VA = "0x110DAD8")]
		public bool IsTargetObscured(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x110DB4C", Offset = "0x110DB4C", VA = "0x110DB4C")]
		public bool CameraWasDisplaced(CinemachineVirtualCameraBase vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x110DBC8", Offset = "0x110DBC8", VA = "0x110DBC8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x110DC88", Offset = "0x110DC88", VA = "0x110DC88", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x110E004", Offset = "0x110E004", VA = "0x110E004", Slot = "6")]
		protected override void PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState state, float deltaTime)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x110E460", Offset = "0x110E460", VA = "0x110E460")]
		private Vector3 PreserveLignOfSight(ref CameraState state, ref VcamExtraState extra)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x110EB00", Offset = "0x110EB00", VA = "0x110EB00")]
		private bool RaycastIgnoreTag(Ray ray, out RaycastHit hitInfo, float rayLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x110EDB8", Offset = "0x110EDB8", VA = "0x110EDB8")]
		private Vector3 PushCameraBack(Vector3 currentPos, Vector3 pushDir, RaycastHit obstacle, Vector3 lookAtPos, Plane startPlane, float targetDistance, int iterations, ref VcamExtraState extra)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x110F81C", Offset = "0x110F81C", VA = "0x110F81C")]
		private bool GetWalkingDirection(Vector3 pos, Vector3 pushDir, RaycastHit obstacle, ref Vector3 outDir)
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x110FF8C", Offset = "0x110FF8C", VA = "0x110FF8C")]
		private float GetPushBackDistance(Ray ray, Plane startPlane, float targetDistance, Vector3 lookAtPos)
		{
			return default(float);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1110208", Offset = "0x1110208", VA = "0x1110208")]
		private float ClampRayToBounds(Ray ray, float distance, Bounds bounds)
		{
			return default(float);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x110F3AC", Offset = "0x110F3AC", VA = "0x110F3AC")]
		private Vector3 RespectCameraRadius(Vector3 cameraPos, Vector3 lookAtPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x110DDB0", Offset = "0x110DDB0", VA = "0x110DDB0")]
		private void CleanupCameraCollider()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x110E94C", Offset = "0x110E94C", VA = "0x110E94C")]
		private bool CheckForTargetObstructions(CameraState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x11108D8", Offset = "0x11108D8", VA = "0x11108D8")]
		public CinemachineCollider()
		{
		}
	}
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBA80", Offset = "0x7BBA80")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBA80", Offset = "0x7BBA80")]
	[SaveDuringPlay]
	public class CinemachineConfiner : CinemachineExtension
	{
		[Token(Token = "0x2000704")]
		public enum Mode
		{
			[Token(Token = "0x4002221")]
			Confine2D,
			[Token(Token = "0x4002222")]
			Confine3D
		}

		[Token(Token = "0x2000705")]
		private class VcamExtraState
		{
			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_previousDisplacement;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float confinerDisplacement;

			[Token(Token = "0x6002973")]
			[Address(RVA = "0x111388C", Offset = "0x111388C", VA = "0x111388C")]
			public VcamExtraState()
			{
			}
		}

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8E50", Offset = "0x7C8E50")]
		public Mode m_ConfineMode;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8E88", Offset = "0x7C8E88")]
		public Collider m_BoundingVolume;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8EC0", Offset = "0x7C8EC0")]
		public Collider2D m_BoundingShape2D;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8EF8", Offset = "0x7C8EF8")]
		public bool m_ConfineScreenEdges;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8F30", Offset = "0x7C8F30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F30", Offset = "0x7C8F30")]
		public float m_Damping;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<List<Vector2>> m_pathCache;

		[Token(Token = "0x17000299")]
		public bool IsValid
		{
			[Token(Token = "0x6002224")]
			[Address(RVA = "0x11126EC", Offset = "0x11126EC", VA = "0x11126EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x11125F0", Offset = "0x11125F0", VA = "0x11125F0")]
		public bool CameraWasDisplaced(CinemachineVirtualCameraBase vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x111266C", Offset = "0x111266C", VA = "0x111266C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x11127C0", Offset = "0x11127C0", VA = "0x11127C0", Slot = "6")]
		protected override void PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState state, float deltaTime)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x1113370", Offset = "0x1113370", VA = "0x1113370")]
		public void InvalidatePathCache()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x111337C", Offset = "0x111337C", VA = "0x111337C")]
		private bool ValidatePathCache()
		{
			return default(bool);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x1112E30", Offset = "0x1112E30", VA = "0x1112E30")]
		private Vector3 ConfinePoint(Vector3 camPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1112A24", Offset = "0x1112A24", VA = "0x1112A24")]
		private Vector3 ConfineScreenEdges(CinemachineVirtualCameraBase vcam, ref CameraState state)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x111387C", Offset = "0x111387C", VA = "0x111387C")]
		public CinemachineConfiner()
		{
		}
	}
	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBAF4", Offset = "0x7BBAF4")]
	[ExecuteInEditMode]
	public class CinemachineDollyCart : MonoBehaviour
	{
		[Token(Token = "0x2000706")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4002226")]
			Update,
			[Token(Token = "0x4002227")]
			FixedUpdate
		}

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8F84", Offset = "0x7C8F84")]
		public CinemachinePathBase m_Path;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8FBC", Offset = "0x7C8FBC")]
		public UpdateMethod m_UpdateMethod;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8FF4", Offset = "0x7C8FF4")]
		public CinemachinePathBase.PositionUnits m_PositionUnits;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C902C", Offset = "0x7C902C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C902C", Offset = "0x7C902C")]
		public float m_Speed;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C908C", Offset = "0x7C908C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C908C", Offset = "0x7C908C")]
		public float m_Position;

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x1114EF0", Offset = "0x1114EF0", VA = "0x1114EF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x1115104", Offset = "0x1115104", VA = "0x1115104")]
		private void Update()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1114F4C", Offset = "0x1114F4C", VA = "0x1114F4C")]
		private void SetCartPosition(float distanceAlongPath)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1115170", Offset = "0x1115170", VA = "0x1115170")]
		public CinemachineDollyCart()
		{
		}
	}
	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBB34", Offset = "0x7BBB34")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BBB34", Offset = "0x7BBB34")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBB34", Offset = "0x7BBB34")]
	public class CinemachineExternalCamera : CinemachineVirtualCameraBase
	{
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C90EC", Offset = "0x7C90EC")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera m_Camera;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CameraState m_State;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9138", Offset = "0x7C9138")]
		private Transform <Follow>k__BackingField;

		[Token(Token = "0x1700029A")]
		public override CameraState State
		{
			[Token(Token = "0x600222F")]
			[Address(RVA = "0x1115370", Offset = "0x1115370", VA = "0x1115370", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x1700029B")]
		public override Transform LookAt
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x1115380", Offset = "0x1115380", VA = "0x1115380", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002231")]
			[Address(RVA = "0x1115388", Offset = "0x1115388", VA = "0x1115388", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public override Transform Follow
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0x1115390", Offset = "0x1115390", VA = "0x1115390", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26EC", Offset = "0x7D26EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002233")]
			[Address(RVA = "0x1115398", Offset = "0x1115398", VA = "0x1115398", Slot = "28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D26FC", Offset = "0x7D26FC")]
			set
			{
			}
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x11153A8", Offset = "0x11153A8", VA = "0x11153A8", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1115804", Offset = "0x1115804", VA = "0x1115804")]
		public CinemachineExternalCamera()
		{
		}
	}
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBBF4", Offset = "0x7BBBF4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBBF4", Offset = "0x7BBBF4")]
	[SaveDuringPlay]
	public class CinemachineFollowZoom : CinemachineExtension
	{
		[Token(Token = "0x2000707")]
		private class VcamExtraState
		{
			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_previousFrameZoom;

			[Token(Token = "0x6002974")]
			[Address(RVA = "0x1115C68", Offset = "0x1115C68", VA = "0x1115C68")]
			public VcamExtraState()
			{
			}
		}

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9148", Offset = "0x7C9148")]
		public float m_Width;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9180", Offset = "0x7C9180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9180", Offset = "0x7C9180")]
		public float m_Damping;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C91D4", Offset = "0x7C91D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C91D4", Offset = "0x7C91D4")]
		public float m_MinFOV;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C922C", Offset = "0x7C922C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C922C", Offset = "0x7C922C")]
		public float m_MaxFOV;

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1115898", Offset = "0x1115898", VA = "0x1115898")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1115958", Offset = "0x1115958", VA = "0x1115958", Slot = "6")]
		protected override void PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState state, float deltaTime)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1115C54", Offset = "0x1115C54", VA = "0x1115C54")]
		public CinemachineFollowZoom()
		{
		}
	}
	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBC68", Offset = "0x7BBC68")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBC68", Offset = "0x7BBC68")]
	public class CinemachineFreeLook : CinemachineVirtualCameraBase
	{
		[Serializable]
		[Token(Token = "0x2000708")]
		public struct Orbit
		{
			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_Height;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_Radius;

			[Token(Token = "0x6002975")]
			[Address(RVA = "0x87CD60", Offset = "0x87CD60", VA = "0x87CD60")]
			public Orbit(float h, float r)
			{
			}
		}

		[Token(Token = "0x2000709")]
		public delegate CinemachineVirtualCamera CreateRigDelegate(CinemachineFreeLook vcam, string name, CinemachineVirtualCamera copyFrom);

		[Token(Token = "0x200070A")]
		public delegate void DestroyRigDelegate(GameObject rig);

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9284", Offset = "0x7C9284")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C92D0", Offset = "0x7C92D0")]
		[NoSaveDuringPlay]
		public Transform m_Follow;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C931C", Offset = "0x7C931C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C931C", Offset = "0x7C931C")]
		public bool m_CommonLens;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C937C", Offset = "0x7C937C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C937C", Offset = "0x7C937C")]
		[LensSettingsProperty]
		public LensSettings m_Lens;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C93EC", Offset = "0x7C93EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C93EC", Offset = "0x7C93EC")]
		public AxisState m_YAxis;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C944C", Offset = "0x7C944C")]
		public AxisState m_XAxis;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9484", Offset = "0x7C9484")]
		public CinemachineOrbitalTransposer.Heading m_Heading;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C94BC", Offset = "0x7C94BC")]
		public CinemachineOrbitalTransposer.Recentering m_RecenterToTargetHeading;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C94F4", Offset = "0x7C94F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C94F4", Offset = "0x7C94F4")]
		public CinemachineTransposer.BindingMode m_BindingMode;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9554", Offset = "0x7C9554")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9554", Offset = "0x7C9554")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9554", Offset = "0x7C9554")]
		public float m_SplineCurvature;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C95CC", Offset = "0x7C95CC")]
		public Orbit[] m_Orbits;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9604", Offset = "0x7C9604")]
		private float m_LegacyHeadingBias;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool mUseLegacyRigDefinitions;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool mIsDestroyed;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private CameraState m_State;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		[NoSaveDuringPlay]
		private CinemachineVirtualCamera[] m_Rigs;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private CinemachineOrbitalTransposer[] mOrbitals;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private CinemachineBlend mBlendA;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private CinemachineBlend mBlendB;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CreateRigDelegate CreateRigOverride;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DestroyRigDelegate DestroyRigOverride;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Orbit[] m_CachedOrbits;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float m_CachedTension;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Vector4[] m_CachedKnots;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Vector4[] m_CachedCtrl1;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector4[] m_CachedCtrl2;

		[Token(Token = "0x1700029D")]
		public static string[] RigNames
		{
			[Token(Token = "0x600223B")]
			[Address(RVA = "0x1118194", Offset = "0x1118194", VA = "0x1118194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public override CameraState State
		{
			[Token(Token = "0x6002240")]
			[Address(RVA = "0x1118AA4", Offset = "0x1118AA4", VA = "0x1118AA4", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x1700029F")]
		public override Transform LookAt
		{
			[Token(Token = "0x6002241")]
			[Address(RVA = "0x1118AB4", Offset = "0x1118AB4", VA = "0x1118AB4", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002242")]
			[Address(RVA = "0x1118AC0", Offset = "0x1118AC0", VA = "0x1118AC0", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public override Transform Follow
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0x1118AC8", Offset = "0x1118AC8", VA = "0x1118AC8", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002244")]
			[Address(RVA = "0x1118AD4", Offset = "0x1118AD4", VA = "0x1118AD4", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public override ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0x1118ADC", Offset = "0x1118ADC", VA = "0x1118ADC", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1117704", Offset = "0x1117704", VA = "0x1117704", Slot = "33")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1117894", Offset = "0x1117894", VA = "0x1117894")]
		public CinemachineVirtualCamera GetRig(int i)
		{
			return null;
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1118310", Offset = "0x1118310", VA = "0x1118310", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1118344", Offset = "0x1118344", VA = "0x1118344", Slot = "32")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x11184D0", Offset = "0x11184D0", VA = "0x11184D0")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x11184E4", Offset = "0x11184E4", VA = "0x11184E4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x1118B2C", Offset = "0x1118B2C", VA = "0x1118B2C", Slot = "24")]
		public override bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1118B8C", Offset = "0x1118B8C", VA = "0x1118B8C", Slot = "20")]
		public override void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x1118C9C", Offset = "0x1118C9C", VA = "0x1118C9C", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x1119CB0", Offset = "0x1119CB0", VA = "0x1119CB0", Slot = "30")]
		public override void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1117880", Offset = "0x1117880", VA = "0x1117880")]
		private void InvalidateRigCache()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x11184E8", Offset = "0x11184E8", VA = "0x11184E8")]
		private void DestroyRigs()
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x111A1D4", Offset = "0x111A1D4", VA = "0x111A1D4")]
		private CinemachineVirtualCamera[] CreateRigs(CinemachineVirtualCamera[] copyFrom)
		{
			return null;
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x1117900", Offset = "0x1117900", VA = "0x1117900")]
		private void UpdateRigCache()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x111AC38", Offset = "0x111AC38", VA = "0x111AC38")]
		private int LocateExistingRigs(string[] rigNames, bool forceOrbital)
		{
			return default(int);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x1119564", Offset = "0x1119564", VA = "0x1119564")]
		private void PushSettingsToRigs()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x111942C", Offset = "0x111942C", VA = "0x111942C")]
		private CameraState CalculateNewState(Vector3 worldUp, float deltaTime)
		{
			return default(CameraState);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1119160", Offset = "0x1119160", VA = "0x1119160")]
		private CameraState PullStateFromVirtualCamera(Vector3 worldUp)
		{
			return default(CameraState);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x111B478", Offset = "0x111B478", VA = "0x111B478")]
		public Vector3 GetLocalPositionForCameraFromInput(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x111B6F8", Offset = "0x111B6F8", VA = "0x111B6F8")]
		private void UpdateCachedSpline()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x111BD58", Offset = "0x111BD58", VA = "0x111BD58")]
		public CinemachineFreeLook()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x111C058", Offset = "0x111C058", VA = "0x111C058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D270C", Offset = "0x7D270C")]
		private float <LocateExistingRigs>b__50_0(CinemachineOrbitalTransposer orbital, float deltaTime, Vector3 up)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBCDC", Offset = "0x7BBCDC")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBCDC", Offset = "0x7BBCDC")]
	public class CinemachineMixingCamera : CinemachineVirtualCameraBase
	{
		[Token(Token = "0x4001A01")]
		public const int MaxCameras = 8;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C96A8", Offset = "0x7C96A8")]
		public float m_Weight0;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C96E0", Offset = "0x7C96E0")]
		public float m_Weight1;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9718", Offset = "0x7C9718")]
		public float m_Weight2;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9750", Offset = "0x7C9750")]
		public float m_Weight3;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9788", Offset = "0x7C9788")]
		public float m_Weight4;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C97C0", Offset = "0x7C97C0")]
		public float m_Weight5;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C97F8", Offset = "0x7C97F8")]
		public float m_Weight6;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9830", Offset = "0x7C9830")]
		public float m_Weight7;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CameraState m_State;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9868", Offset = "0x7C9868")]
		private ICinemachineCamera <LiveChild>k__BackingField;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9878", Offset = "0x7C9878")]
		private Transform <LookAt>k__BackingField;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9888", Offset = "0x7C9888")]
		private Transform <Follow>k__BackingField;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CinemachineVirtualCameraBase[] m_ChildCameras;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Dictionary<CinemachineVirtualCameraBase, int> m_indexMap;

		[Token(Token = "0x170002A2")]
		private ICinemachineCamera LiveChild
		{
			[Token(Token = "0x600225B")]
			[Address(RVA = "0x111D944", Offset = "0x111D944", VA = "0x111D944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D272C", Offset = "0x7D272C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600225A")]
			[Address(RVA = "0x111D934", Offset = "0x111D934", VA = "0x111D934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D271C", Offset = "0x7D271C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public override CameraState State
		{
			[Token(Token = "0x600225C")]
			[Address(RVA = "0x111D94C", Offset = "0x111D94C", VA = "0x111D94C", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x170002A4")]
		public override Transform LookAt
		{
			[Token(Token = "0x600225D")]
			[Address(RVA = "0x111D95C", Offset = "0x111D95C", VA = "0x111D95C", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D273C", Offset = "0x7D273C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600225E")]
			[Address(RVA = "0x111D964", Offset = "0x111D964", VA = "0x111D964", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D274C", Offset = "0x7D274C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public override Transform Follow
		{
			[Token(Token = "0x600225F")]
			[Address(RVA = "0x111D974", Offset = "0x111D974", VA = "0x111D974", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D275C", Offset = "0x7D275C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002260")]
			[Address(RVA = "0x111D97C", Offset = "0x111D97C", VA = "0x111D97C", Slot = "28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D276C", Offset = "0x7D276C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public override ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x6002261")]
			[Address(RVA = "0x111D98C", Offset = "0x111D98C", VA = "0x111D98C", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public CinemachineVirtualCameraBase[] ChildCameras
		{
			[Token(Token = "0x6002267")]
			[Address(RVA = "0x111DEF8", Offset = "0x111DEF8", VA = "0x111DEF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x111D460", Offset = "0x111D460", VA = "0x111D460")]
		public float GetWeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x111D578", Offset = "0x111D578", VA = "0x111D578")]
		public void SetWeight(int index, float w)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x111D6A0", Offset = "0x111D6A0", VA = "0x111D6A0")]
		public float GetWeight(CinemachineVirtualCameraBase vcam)
		{
			return default(float);
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x111D7E0", Offset = "0x111D7E0", VA = "0x111D7E0")]
		public void SetWeight(CinemachineVirtualCameraBase vcam, float w)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x111D994", Offset = "0x111D994", VA = "0x111D994", Slot = "20")]
		public override void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x111DCD4", Offset = "0x111DCD4", VA = "0x111DCD4", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x111DD44", Offset = "0x111DD44", VA = "0x111DD44")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x111DD48", Offset = "0x111DD48", VA = "0x111DD48", Slot = "33")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x111DE00", Offset = "0x111DE00", VA = "0x111DE00", Slot = "24")]
		public override bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x111DCFC", Offset = "0x111DCFC", VA = "0x111DCFC")]
		protected void InvalidateListOfChildren()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x111DA3C", Offset = "0x111DA3C", VA = "0x111DA3C")]
		protected void ValidateListOfChildren()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x111DF1C", Offset = "0x111DF1C", VA = "0x111DF1C", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x111E174", Offset = "0x111E174", VA = "0x111E174")]
		public CinemachineMixingCamera()
		{
		}
	}
	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBD50", Offset = "0x7BBD50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBD50", Offset = "0x7BBD50")]
	[SaveDuringPlay]
	public class CinemachinePath : CinemachinePathBase
	{
		[Serializable]
		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD354", Offset = "0x7BD354")]
		public struct Waypoint
		{
			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC52C", Offset = "0x7CC52C")]
			public Vector3 position;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC564", Offset = "0x7CC564")]
			public Vector3 tangent;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC59C", Offset = "0x7CC59C")]
			public float roll;
		}

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9898", Offset = "0x7C9898")]
		public bool m_Looped;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C98D0", Offset = "0x7C98D0")]
		public Waypoint[] m_Waypoints;

		[Token(Token = "0x170002A8")]
		public override float MinPos
		{
			[Token(Token = "0x600226C")]
			[Address(RVA = "0xBD6708", Offset = "0xBD6708", VA = "0xBD6708", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A9")]
		public override float MaxPos
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0xBD6710", Offset = "0xBD6710", VA = "0xBD6710", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AA")]
		public override bool Looped
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xBD6764", Offset = "0xBD6764", VA = "0xBD6764", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AB")]
		public override int DistanceCacheSampleStepsPerSegment
		{
			[Token(Token = "0x600226F")]
			[Address(RVA = "0xBD676C", Offset = "0xBD676C", VA = "0xBD676C", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xBD6774", Offset = "0xBD6774", VA = "0xBD6774")]
		private float GetBoundingIndices(float pos, out int indexA, out int indexB)
		{
			return default(float);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xBD6914", Offset = "0xBD6914", VA = "0xBD6914", Slot = "8")]
		public override Vector3 EvaluatePosition(float pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xBD6DE0", Offset = "0xBD6DE0", VA = "0xBD6DE0", Slot = "9")]
		public override Vector3 EvaluateTangent(float pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xBD74A8", Offset = "0xBD74A8", VA = "0xBD74A8", Slot = "10")]
		public override Quaternion EvaluateOrientation(float pos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xBD7838", Offset = "0xBD7838", VA = "0xBD7838")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xBD7848", Offset = "0xBD7848", VA = "0xBD7848")]
		public CinemachinePath()
		{
		}
	}
	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBDB4", Offset = "0x7BBDB4")]
	public sealed class CinemachinePipeline : MonoBehaviour
	{
		[Token(Token = "0x6002276")]
		[Address(RVA = "0xBD8A00", Offset = "0xBD8A00", VA = "0xBD8A00")]
		public CinemachinePipeline()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBDEC", Offset = "0x7BBDEC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBDEC", Offset = "0x7BBDEC")]
	[SaveDuringPlay]
	public class CinemachineSmoothPath : CinemachinePathBase
	{
		[Serializable]
		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD370", Offset = "0x7BD370")]
		public struct Waypoint
		{
			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC5D4", Offset = "0x7CC5D4")]
			public Vector3 position;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC60C", Offset = "0x7CC60C")]
			public float roll;

			[Token(Token = "0x17000491")]
			internal Vector4 AsVector4
			{
				[Token(Token = "0x600297E")]
				[Address(RVA = "0x86542C", Offset = "0x86542C", VA = "0x86542C")]
				get
				{
					return default(Vector4);
				}
			}

			[Token(Token = "0x600297F")]
			[Address(RVA = "0xBDA158", Offset = "0xBDA158", VA = "0xBDA158")]
			internal static Waypoint FromVector4(Vector4 v)
			{
				return default(Waypoint);
			}
		}

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9908", Offset = "0x7C9908")]
		public bool m_Looped;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9940", Offset = "0x7C9940")]
		public Waypoint[] m_Waypoints;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Waypoint[] m_ControlPoints1;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Waypoint[] m_ControlPoints2;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_IsLoopedCache;

		[Token(Token = "0x170002AC")]
		public override float MinPos
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xBD8B3C", Offset = "0xBD8B3C", VA = "0xBD8B3C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AD")]
		public override float MaxPos
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xBD8B44", Offset = "0xBD8B44", VA = "0xBD8B44", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AE")]
		public override bool Looped
		{
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xBD8B98", Offset = "0xBD8B98", VA = "0xBD8B98", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public override int DistanceCacheSampleStepsPerSegment
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0xBD8BA0", Offset = "0xBD8BA0", VA = "0xBD8BA0", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xBD8BA8", Offset = "0xBD8BA8", VA = "0xBD8BA8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xBD8BB8", Offset = "0xBD8BB8", VA = "0xBD8BB8", Slot = "14")]
		public override void InvalidateDistanceCache()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xBD8C10", Offset = "0xBD8C10", VA = "0xBD8C10")]
		private void UpdateControlPoints()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xBDA208", Offset = "0xBDA208", VA = "0xBDA208")]
		private float GetBoundingIndices(float pos, out int indexA, out int indexB)
		{
			return default(float);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xBDA340", Offset = "0xBDA340", VA = "0xBDA340", Slot = "8")]
		public override Vector3 EvaluatePosition(float pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xBDA5BC", Offset = "0xBDA5BC", VA = "0xBDA5BC", Slot = "9")]
		public override Vector3 EvaluateTangent(float pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xBDA8C4", Offset = "0xBDA8C4", VA = "0xBDA8C4", Slot = "10")]
		public override Quaternion EvaluateOrientation(float pos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xBDAD48", Offset = "0xBDAD48", VA = "0xBDAD48")]
		public CinemachineSmoothPath()
		{
		}
	}
	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBE54", Offset = "0x7BBE54")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBE54", Offset = "0x7BBE54")]
	public class CinemachineStateDrivenCamera : CinemachineVirtualCameraBase
	{
		[Serializable]
		[Token(Token = "0x200070D")]
		public struct Instruction
		{
			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC644", Offset = "0x7CC644")]
			public int m_FullHash;

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC67C", Offset = "0x7CC67C")]
			public CinemachineVirtualCameraBase m_VirtualCamera;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC6B4", Offset = "0x7CC6B4")]
			public float m_ActivateAfter;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC6EC", Offset = "0x7CC6EC")]
			public float m_MinDuration;
		}

		[Serializable]
		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD38C", Offset = "0x7BD38C")]
		public struct ParentHash
		{
			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_Hash;

			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_ParentHash;

			[Token(Token = "0x6002980")]
			[Address(RVA = "0x865480", Offset = "0x865480", VA = "0x865480")]
			public ParentHash(int h, int p)
			{
			}
		}

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9978", Offset = "0x7C9978")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C99C4", Offset = "0x7C99C4")]
		[NoSaveDuringPlay]
		public Transform m_Follow;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C9A10", Offset = "0x7C9A10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9A10", Offset = "0x7C9A10")]
		public Animator m_AnimatedTarget;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9A5C", Offset = "0x7C9A5C")]
		public int m_LayerIndex;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9A94", Offset = "0x7C9A94")]
		public bool m_ShowDebugText;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9ACC", Offset = "0x7C9ACC")]
		public bool m_EnableAllChildCameras;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		[NoSaveDuringPlay]
		public CinemachineVirtualCameraBase[] m_ChildCameras;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9B4C", Offset = "0x7C9B4C")]
		public Instruction[] m_Instructions;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[CinemachineBlendDefinitionProperty]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9B84", Offset = "0x7C9B84")]
		public CinemachineBlendDefinition m_DefaultBlend;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9BD0", Offset = "0x7C9BD0")]
		public CinemachineBlenderSettings m_CustomBlends;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[SerializeField]
		public ParentHash[] m_ParentHash;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9C40", Offset = "0x7C9C40")]
		private ICinemachineCamera <LiveChild>k__BackingField;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CameraState m_State;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float mActivationTime;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Instruction mActiveInstruction;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float mPendingActivationTime;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Instruction mPendingInstruction;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private CinemachineBlend mActiveBlend;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Dictionary<int, int> mInstructionDictionary;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Dictionary<int, int> mStateParentLookup;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<AnimatorClipInfo> m_clipInfoList;

		[Token(Token = "0x170002B0")]
		public override string Description
		{
			[Token(Token = "0x6002283")]
			[Address(RVA = "0xBDADB4", Offset = "0xBDADB4", VA = "0xBDADB4", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public ICinemachineCamera LiveChild
		{
			[Token(Token = "0x6002285")]
			[Address(RVA = "0xBDAEB8", Offset = "0xBDAEB8", VA = "0xBDAEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D278C", Offset = "0x7D278C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xBDAEC0", Offset = "0xBDAEC0", VA = "0xBDAEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D277C", Offset = "0x7D277C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public override ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xBDAEC8", Offset = "0xBDAEC8", VA = "0xBDAEC8", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public override CameraState State
		{
			[Token(Token = "0x6002288")]
			[Address(RVA = "0xBDAF40", Offset = "0xBDAF40", VA = "0xBDAF40", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x170002B4")]
		public override Transform LookAt
		{
			[Token(Token = "0x6002289")]
			[Address(RVA = "0xBDAF50", Offset = "0xBDAF50", VA = "0xBDAF50", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x600228A")]
			[Address(RVA = "0xBDB074", Offset = "0xBDB074", VA = "0xBDB074", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public override Transform Follow
		{
			[Token(Token = "0x600228B")]
			[Address(RVA = "0xBDB07C", Offset = "0xBDB07C", VA = "0xBDB07C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x600228C")]
			[Address(RVA = "0xBDB1A0", Offset = "0xBDB1A0", VA = "0xBDB1A0", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public CinemachineVirtualCameraBase[] ChildCameras
		{
			[Token(Token = "0x6002291")]
			[Address(RVA = "0xBDC918", Offset = "0xBDC918", VA = "0xBDC918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public bool IsBlending
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0xBDC93C", Offset = "0xBDC93C", VA = "0xBDC93C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xBDAED0", Offset = "0xBDAED0", VA = "0xBDAED0", Slot = "24")]
		public override bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xBDB1A8", Offset = "0xBDB1A8", VA = "0xBDB1A8", Slot = "20")]
		public override void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xBDB4D8", Offset = "0xBDB4D8", VA = "0xBDB4D8", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xBDC67C", Offset = "0xBDC67C", VA = "0xBDC67C", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xBDC8E4", Offset = "0xBDC8E4", VA = "0xBDC8E4")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xBDC94C", Offset = "0xBDC94C", VA = "0xBDC94C")]
		public static string CreateFakeHashName(int parentHash, string stateName)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xBDC8B0", Offset = "0xBDC8B0", VA = "0xBDC8B0")]
		private void InvalidateListOfChildren()
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xBDB2E0", Offset = "0xBDB2E0", VA = "0xBDB2E0")]
		private void UpdateListOfChildren()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xBDC9BC", Offset = "0xBDC9BC", VA = "0xBDC9BC")]
		public void ValidateInstructions()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xBDBB98", Offset = "0xBDBB98", VA = "0xBDBB98")]
		private CinemachineVirtualCameraBase ChooseCurrentCamera(float deltaTime)
		{
			return null;
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xBDCD24", Offset = "0xBDCD24", VA = "0xBDCD24")]
		private int GetClipHash(int hash, List<AnimatorClipInfo> clips)
		{
			return default(int);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xBDC284", Offset = "0xBDC284", VA = "0xBDC284")]
		private AnimationCurve LookupBlendCurve(ICinemachineCamera fromKey, ICinemachineCamera toKey, out float duration)
		{
			return null;
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xBDC4D0", Offset = "0xBDC4D0", VA = "0xBDC4D0")]
		private CinemachineBlend CreateBlend(ICinemachineCamera camA, ICinemachineCamera camB, AnimationCurve blendCurve, float duration, CinemachineBlend activeBlend, float deltaTime)
		{
			return null;
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xBDCF4C", Offset = "0xBDCF4C", VA = "0xBDCF4C")]
		public CinemachineStateDrivenCamera()
		{
		}
	}
	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBEC8", Offset = "0x7BBEC8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBEC8", Offset = "0x7BBEC8")]
	[SaveDuringPlay]
	[ExecuteInEditMode]
	public class CinemachineTargetGroup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD3A8", Offset = "0x7BD3A8")]
		public struct Target
		{
			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC724", Offset = "0x7CC724")]
			public Transform target;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC75C", Offset = "0x7CC75C")]
			public float weight;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC794", Offset = "0x7CC794")]
			public float radius;
		}

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD3C4", Offset = "0x7BD3C4")]
		public enum PositionMode
		{
			[Token(Token = "0x400223A")]
			GroupCenter,
			[Token(Token = "0x400223B")]
			GroupAverage
		}

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD3E0", Offset = "0x7BD3E0")]
		public enum RotationMode
		{
			[Token(Token = "0x400223D")]
			Manual,
			[Token(Token = "0x400223E")]
			GroupAverage
		}

		[Token(Token = "0x2000712")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4002240")]
			Update,
			[Token(Token = "0x4002241")]
			FixedUpdate,
			[Token(Token = "0x4002242")]
			LateUpdate
		}

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9C50", Offset = "0x7C9C50")]
		public PositionMode m_PositionMode;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9C88", Offset = "0x7C9C88")]
		public RotationMode m_RotationMode;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9CC0", Offset = "0x7C9CC0")]
		public UpdateMethod m_UpdateMethod;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[NoSaveDuringPlay]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9CF8", Offset = "0x7C9CF8")]
		public Target[] m_Targets;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_lastRadius;

		[Token(Token = "0x170002B8")]
		public Bounds BoundingBox
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xBDD134", Offset = "0xBDD134", VA = "0xBDD134")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x170002B9")]
		public bool IsEmpty
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0xBDD87C", Offset = "0xBDD87C", VA = "0xBDD87C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xBDD9B8", Offset = "0xBDD9B8", VA = "0xBDD9B8")]
		public Bounds GetViewSpaceBoundingBox(Matrix4x4 mView)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xBDD500", Offset = "0xBDD500", VA = "0xBDD500")]
		private Vector3 CalculateAveragePosition(out float averageWeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xBDDE28", Offset = "0xBDDE28", VA = "0xBDDE28")]
		private Quaternion CalculateAverageOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xBDE068", Offset = "0xBDE068", VA = "0xBDE068")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xBDE198", Offset = "0xBDE198", VA = "0xBDE198")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xBDE2D8", Offset = "0xBDE2D8", VA = "0xBDE2D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xBDE318", Offset = "0xBDE318", VA = "0xBDE318")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xBDE1AC", Offset = "0xBDE1AC", VA = "0xBDE1AC")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xBDE32C", Offset = "0xBDE32C", VA = "0xBDE32C")]
		public CinemachineTargetGroup()
		{
		}
	}
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBF3C", Offset = "0x7BBF3C")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBF3C", Offset = "0x7BBF3C")]
	public class CinemachineVirtualCamera : CinemachineVirtualCameraBase
	{
		[Token(Token = "0x2000713")]
		public delegate Transform CreatePipelineDelegate(CinemachineVirtualCamera vcam, string name, CinemachineComponentBase[] copyFrom);

		[Token(Token = "0x2000714")]
		public delegate void DestroyPipelineDelegate(GameObject pipeline);

		[Serializable]
		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD3FC", Offset = "0x7BD3FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<CinemachineComponentBase> <>9__39_0;

			[Token(Token = "0x600298A")]
			[Address(RVA = "0xBE3738", Offset = "0xBE3738", VA = "0xBE3738")]
			public <>c()
			{
			}

			[Token(Token = "0x600298B")]
			[Address(RVA = "0xBE3740", Offset = "0xBE3740", VA = "0xBE3740")]
			internal int <UpdateComponentPipeline>b__39_0(CinemachineComponentBase c1, CinemachineComponentBase c2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9D44", Offset = "0x7C9D44")]
		[NoSaveDuringPlay]
		public Transform m_LookAt;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9D90", Offset = "0x7C9D90")]
		[NoSaveDuringPlay]
		public Transform m_Follow;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9DDC", Offset = "0x7C9DDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9DDC", Offset = "0x7C9DDC")]
		[LensSettingsProperty]
		public LensSettings m_Lens;

		[Token(Token = "0x4001A34")]
		public const string PipelineName = "cm";

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CreatePipelineDelegate CreatePipelineOverride;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DestroyPipelineDelegate DestroyPipelineOverride;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9E4C", Offset = "0x7C9E4C")]
		private bool <UserIsDragging>k__BackingField;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CameraState m_State;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private CinemachineComponentBase[] m_ComponentPipeline;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Transform m_ComponentOwner;

		[Token(Token = "0x170002BA")]
		public override CameraState State
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xBE0A74", Offset = "0xBE0A74", VA = "0xBE0A74", Slot = "22")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x170002BB")]
		public override Transform LookAt
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xBE0A84", Offset = "0xBE0A84", VA = "0xBE0A84", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xBE0A8C", Offset = "0xBE0A8C", VA = "0xBE0A8C", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public override Transform Follow
		{
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xBE0A94", Offset = "0xBE0A94", VA = "0xBE0A94", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xBE0A9C", Offset = "0xBE0A9C", VA = "0xBE0A9C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool UserIsDragging
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xBE130C", Offset = "0xBE130C", VA = "0xBE130C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D279C", Offset = "0x7D279C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xBE3380", Offset = "0xBE3380", VA = "0xBE3380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27AC", Offset = "0x7D27AC")]
			set
			{
			}
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xBE0AA4", Offset = "0xBE0AA4", VA = "0xBE0AA4", Slot = "29")]
		public override void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xBE1314", Offset = "0xBE1314", VA = "0xBE1314", Slot = "34")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xBE160C", Offset = "0xBE160C", VA = "0xBE160C", Slot = "32")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xBE19E0", Offset = "0xBE19E0", VA = "0xBE19E0", Slot = "33")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xBE1B24", Offset = "0xBE1B24", VA = "0xBE1B24")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xBE1B38", Offset = "0xBE1B38", VA = "0xBE1B38")]
		private void Reset()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xBE1B3C", Offset = "0xBE1B3C", VA = "0xBE1B3C")]
		private void DestroyPipeline()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xBE23C0", Offset = "0xBE23C0", VA = "0xBE23C0")]
		private Transform CreatePipeline(CinemachineVirtualCamera copyFrom)
		{
			return null;
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xBE14D8", Offset = "0xBE14D8", VA = "0xBE14D8")]
		public void InvalidateComponentPipeline()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xBE2BD4", Offset = "0xBE2BD4", VA = "0xBE2BD4")]
		public Transform GetComponentOwner()
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xBE2638", Offset = "0xBE2638", VA = "0xBE2638")]
		public CinemachineComponentBase[] GetComponentPipeline()
		{
			return null;
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xBE1568", Offset = "0xBE1568", VA = "0xBE1568")]
		public CinemachineComponentBase GetCinemachineComponent(CinemachineCore.Stage stage)
		{
			return null;
		}

		[Token(Token = "0x60022B8")]
		public T GetCinemachineComponent<T>() where T : CinemachineComponentBase
		{
			return null;
		}

		[Token(Token = "0x60022B9")]
		public T AddCinemachineComponent<T>() where T : CinemachineComponentBase
		{
			return null;
		}

		[Token(Token = "0x60022BA")]
		public void DestroyCinemachineComponent<T>() where T : CinemachineComponentBase
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xBE338C", Offset = "0xBE338C", VA = "0xBE338C")]
		public void OnPositionDragged(Vector3 delta)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xBE2BF8", Offset = "0xBE2BF8", VA = "0xBE2BF8")]
		private void UpdateComponentPipeline()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xBE0FF0", Offset = "0xBE0FF0", VA = "0xBE0FF0")]
		private CameraState CalculateNewState(Vector3 worldUp, float deltaTime)
		{
			return default(CameraState);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xBE3444", Offset = "0xBE3444", VA = "0xBE3444")]
		private CinemachineCore.Stage AdvancePipelineStage(ref CameraState state, float deltaTime, CinemachineCore.Stage curStage, int maxStage)
		{
			return default(CinemachineCore.Stage);
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xBE0D58", Offset = "0xBE0D58", VA = "0xBE0D58")]
		private CameraState PullStateFromVirtualCamera(Vector3 worldUp)
		{
			return default(CameraState);
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xBE35EC", Offset = "0xBE35EC", VA = "0xBE35EC")]
		internal void SetStateRawPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xBE35F8", Offset = "0xBE35F8", VA = "0xBE35F8")]
		public CinemachineVirtualCamera()
		{
		}
	}
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BBFB0", Offset = "0x7BBFB0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BBFB0", Offset = "0x7BBFB0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BBFB0", Offset = "0x7BBFB0")]
	[SaveDuringPlay]
	public class CinemachineBasicMultiChannelPerlin : CinemachineComponentBase
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9E94", Offset = "0x7C9E94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9E94", Offset = "0x7C9E94")]
		public NoiseSettings m_NoiseProfile;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9F04", Offset = "0x7C9F04")]
		public float m_AmplitudeGain;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9F3C", Offset = "0x7C9F3C")]
		public float m_FrequencyGain;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool mInitialized;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float mNoiseTime;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 mNoiseOffsets;

		[Token(Token = "0x170002BE")]
		public override bool IsValid
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x1106C70", Offset = "0x1106C70", VA = "0x1106C70", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x1106D00", Offset = "0x1106D00", VA = "0x1106D00", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x1106D08", Offset = "0x1106D08", VA = "0x1106D08", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x1106F34", Offset = "0x1106F34", VA = "0x1106F34")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1106FEC", Offset = "0x1106FEC", VA = "0x1106FEC")]
		private static Vector3 GetCombinedFilterResults(NoiseSettings.TransformNoiseParams[] noiseParams, float time, Vector3 noiseOffsets)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1107224", Offset = "0x1107224", VA = "0x1107224")]
		public CinemachineBasicMultiChannelPerlin()
		{
		}
	}
	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC060", Offset = "0x7BC060")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC060", Offset = "0x7BC060")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC060", Offset = "0x7BC060")]
	[SaveDuringPlay]
	public class CinemachineComposer : CinemachineComponentBase
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NoSaveDuringPlay]
		[HideInInspector]
		public Action OnGUICallback;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9FAC", Offset = "0x7C9FAC")]
		public Vector3 m_TrackedObjectOffset;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C9FE4", Offset = "0x7C9FE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9FE4", Offset = "0x7C9FE4")]
		public float m_LookaheadTime;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA038", Offset = "0x7CA038")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA038", Offset = "0x7CA038")]
		public float m_LookaheadSmoothing;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA08C", Offset = "0x7CA08C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA08C", Offset = "0x7CA08C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA08C", Offset = "0x7CA08C")]
		public float m_HorizontalDamping;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA0F0", Offset = "0x7CA0F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA0F0", Offset = "0x7CA0F0")]
		public float m_VerticalDamping;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA144", Offset = "0x7CA144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA144", Offset = "0x7CA144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA144", Offset = "0x7CA144")]
		public float m_ScreenX;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA1A8", Offset = "0x7CA1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA1A8", Offset = "0x7CA1A8")]
		public float m_ScreenY;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA1FC", Offset = "0x7CA1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA1FC", Offset = "0x7CA1FC")]
		public float m_DeadZoneWidth;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA250", Offset = "0x7CA250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA250", Offset = "0x7CA250")]
		public float m_DeadZoneHeight;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA2A4", Offset = "0x7CA2A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA2A4", Offset = "0x7CA2A4")]
		public float m_SoftZoneWidth;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA2F8", Offset = "0x7CA2F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA2F8", Offset = "0x7CA2F8")]
		public float m_SoftZoneHeight;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA34C", Offset = "0x7CA34C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA34C", Offset = "0x7CA34C")]
		public float m_BiasX;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA3A0", Offset = "0x7CA3A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA3A0", Offset = "0x7CA3A0")]
		public float m_BiasY;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CA3F4", Offset = "0x7CA3F4")]
		private Vector3 <TrackedPoint>k__BackingField;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_CameraPosPrevFrame;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_LookAtPrevFrame;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 m_ScreenOffsetPrevFrame;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion m_CameraOrientationPrevFrame;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PositionPredictor m_Predictor;

		[Token(Token = "0x170002C0")]
		public override bool IsValid
		{
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x1110D2C", Offset = "0x1110D2C", VA = "0x1110D2C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C1")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x1110DC8", Offset = "0x1110DC8", VA = "0x1110DC8", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x170002C2")]
		public Vector3 TrackedPoint
		{
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x1110DD0", Offset = "0x1110DD0", VA = "0x1110DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27BC", Offset = "0x7D27BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x1110DDC", Offset = "0x1110DDC", VA = "0x1110DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27CC", Offset = "0x7D27CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public Rect SoftGuideRect
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x1111788", Offset = "0x1111788", VA = "0x1111788")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x1111F50", Offset = "0x1111F50", VA = "0x1111F50")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public Rect HardGuideRect
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x1111E4C", Offset = "0x1111E4C", VA = "0x1111E4C")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x111207C", Offset = "0x111207C", VA = "0x111207C")]
			set
			{
			}
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x1110DE8", Offset = "0x1110DE8", VA = "0x1110DE8", Slot = "9")]
		protected virtual Vector3 GetLookAtPointAndSetTrackedPoint(Vector3 lookAt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x111101C", Offset = "0x111101C", VA = "0x111101C", Slot = "5")]
		public override void PrePipelineMutateCameraState(ref CameraState curState)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x111107C", Offset = "0x111107C", VA = "0x111107C", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x11117D4", Offset = "0x11117D4", VA = "0x11117D4")]
		private Rect ScreenToFOV(Rect rScreen, float fov, float fovH, float aspect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x1111BFC", Offset = "0x1111BFC", VA = "0x1111BFC")]
		private bool RotateToScreenBounds(ref CameraState state, Rect screenRect, ref Quaternion rigOrientation, float fov, float fovH, float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x11122A0", Offset = "0x11122A0", VA = "0x11122A0")]
		private bool ClampVerticalBounds(ref Rect r, Vector3 dir, Vector3 up, float fov)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x11124AC", Offset = "0x11124AC", VA = "0x11124AC")]
		public CinemachineComposer()
		{
		}
	}
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC120", Offset = "0x7BC120")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC120", Offset = "0x7BC120")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC120", Offset = "0x7BC120")]
	[SaveDuringPlay]
	public class CinemachineFramingTransposer : CinemachineComponentBase
	{
		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD40C", Offset = "0x7BD40C")]
		public enum FramingMode
		{
			[Token(Token = "0x4002246")]
			Horizontal,
			[Token(Token = "0x4002247")]
			Vertical,
			[Token(Token = "0x4002248")]
			HorizontalAndVertical,
			[Token(Token = "0x4002249")]
			None
		}

		[Token(Token = "0x2000717")]
		public enum AdjustmentMode
		{
			[Token(Token = "0x400224B")]
			ZoomOnly,
			[Token(Token = "0x400224C")]
			DollyOnly,
			[Token(Token = "0x400224D")]
			DollyThenZoom
		}

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NoSaveDuringPlay]
		[HideInInspector]
		public Action OnGUICallback;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA43C", Offset = "0x7CA43C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA43C", Offset = "0x7CA43C")]
		public float m_LookaheadTime;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA490", Offset = "0x7CA490")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA490", Offset = "0x7CA490")]
		public float m_LookaheadSmoothing;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA4E4", Offset = "0x7CA4E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA4E4", Offset = "0x7CA4E4")]
		public float m_XDamping;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA538", Offset = "0x7CA538")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA538", Offset = "0x7CA538")]
		public float m_YDamping;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA58C", Offset = "0x7CA58C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA58C", Offset = "0x7CA58C")]
		public float m_ZDamping;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA5E0", Offset = "0x7CA5E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA5E0", Offset = "0x7CA5E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA5E0", Offset = "0x7CA5E0")]
		public float m_ScreenX;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA644", Offset = "0x7CA644")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA644", Offset = "0x7CA644")]
		public float m_ScreenY;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA698", Offset = "0x7CA698")]
		public float m_CameraDistance;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA6D0", Offset = "0x7CA6D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA6D0", Offset = "0x7CA6D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA6D0", Offset = "0x7CA6D0")]
		public float m_DeadZoneWidth;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA734", Offset = "0x7CA734")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA734", Offset = "0x7CA734")]
		public float m_DeadZoneHeight;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA788", Offset = "0x7CA788")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CA788", Offset = "0x7CA788")]
		public float m_DeadZoneDepth;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA7E8", Offset = "0x7CA7E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA7E8", Offset = "0x7CA7E8")]
		public bool m_UnlimitedSoftZone;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA834", Offset = "0x7CA834")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA834", Offset = "0x7CA834")]
		public float m_SoftZoneWidth;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA888", Offset = "0x7CA888")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA888", Offset = "0x7CA888")]
		public float m_SoftZoneHeight;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA8DC", Offset = "0x7CA8DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA8DC", Offset = "0x7CA8DC")]
		public float m_BiasX;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CA930", Offset = "0x7CA930")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA930", Offset = "0x7CA930")]
		public float m_BiasY;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CA984", Offset = "0x7CA984")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA984", Offset = "0x7CA984")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CA984", Offset = "0x7CA984")]
		public FramingMode m_GroupFramingMode;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CA9F4", Offset = "0x7CA9F4")]
		public AdjustmentMode m_AdjustmentMode;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAA2C", Offset = "0x7CAA2C")]
		public float m_GroupFramingSize;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAA64", Offset = "0x7CAA64")]
		public float m_MaxDollyIn;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAA9C", Offset = "0x7CAA9C")]
		public float m_MaxDollyOut;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAAD4", Offset = "0x7CAAD4")]
		public float m_MinimumDistance;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAB0C", Offset = "0x7CAB0C")]
		public float m_MaximumDistance;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CAB44", Offset = "0x7CAB44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAB44", Offset = "0x7CAB44")]
		public float m_MinimumFOV;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CAB9C", Offset = "0x7CAB9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAB9C", Offset = "0x7CAB9C")]
		public float m_MaximumFOV;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CABF4", Offset = "0x7CABF4")]
		public float m_MinimumOrthoSize;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAC2C", Offset = "0x7CAC2C")]
		public float m_MaximumOrthoSize;

		[Token(Token = "0x4001A71")]
		private const float kMinimumCameraDistance = 0.01f;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_PreviousCameraPosition;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PositionPredictor m_Predictor;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC64", Offset = "0x7CAC64")]
		private Vector3 <TrackedPoint>k__BackingField;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_prevTargetHeight;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC74", Offset = "0x7CAC74")]
		private Bounds <m_LastBounds>k__BackingField;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAC84", Offset = "0x7CAC84")]
		private Matrix4x4 <m_lastBoundsMatrix>k__BackingField;

		[Token(Token = "0x170002C5")]
		public Rect SoftGuideRect
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x1115C70", Offset = "0x1115C70", VA = "0x1115C70")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x1115CBC", Offset = "0x1115CBC", VA = "0x1115CBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public Rect HardGuideRect
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x1115DE8", Offset = "0x1115DE8", VA = "0x1115DE8")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x1115EEC", Offset = "0x1115EEC", VA = "0x1115EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public override bool IsValid
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x1116270", Offset = "0x1116270", VA = "0x1116270", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C8")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x1116354", Offset = "0x1116354", VA = "0x1116354", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x170002C9")]
		public Vector3 TrackedPoint
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x111635C", Offset = "0x111635C", VA = "0x111635C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27DC", Offset = "0x7D27DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x1116368", Offset = "0x1116368", VA = "0x1116368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27EC", Offset = "0x7D27EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public Bounds m_LastBounds
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x11173F0", Offset = "0x11173F0", VA = "0x11173F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D27FC", Offset = "0x7D27FC")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x1117404", Offset = "0x1117404", VA = "0x1117404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D280C", Offset = "0x7D280C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public Matrix4x4 m_lastBoundsMatrix
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x1117418", Offset = "0x1117418", VA = "0x1117418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D281C", Offset = "0x7D281C")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x111743C", Offset = "0x111743C", VA = "0x111743C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D282C", Offset = "0x7D282C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public CinemachineTargetGroup TargetGroup
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x1116C2C", Offset = "0x1116C2C", VA = "0x1116C2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1116110", Offset = "0x1116110", VA = "0x1116110")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1116374", Offset = "0x1116374", VA = "0x1116374", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x11171C8", Offset = "0x11171C8", VA = "0x11171C8")]
		private Rect ScreenToOrtho(Rect rScreen, float orthoSize, float aspect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x11172A4", Offset = "0x11172A4", VA = "0x11172A4")]
		private Vector3 OrthoOffsetToScreenBounds(Vector3 targetPos2D, Rect screenRect)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1116CD8", Offset = "0x1116CD8", VA = "0x1116CD8")]
		private float AdjustCameraDepthAndLensForGroupFraming(CinemachineTargetGroup group, float targetZ, ref CameraState curState, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1117450", Offset = "0x1117450", VA = "0x1117450")]
		private float GetTargetHeight(Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x11175E8", Offset = "0x11175E8", VA = "0x11175E8")]
		public CinemachineFramingTransposer()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC1E0", Offset = "0x7BC1E0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC1E0", Offset = "0x7BC1E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC1E0", Offset = "0x7BC1E0")]
	[SaveDuringPlay]
	public class CinemachineGroupComposer : CinemachineComposer
	{
		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD428", Offset = "0x7BD428")]
		public enum FramingMode
		{
			[Token(Token = "0x400224F")]
			Horizontal,
			[Token(Token = "0x4002250")]
			Vertical,
			[Token(Token = "0x4002251")]
			HorizontalAndVertical
		}

		[Token(Token = "0x2000719")]
		public enum AdjustmentMode
		{
			[Token(Token = "0x4002253")]
			ZoomOnly,
			[Token(Token = "0x4002254")]
			DollyOnly,
			[Token(Token = "0x4002255")]
			DollyThenZoom
		}

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CAC94", Offset = "0x7CAC94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAC94", Offset = "0x7CAC94")]
		public float m_GroupFramingSize;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CACE0", Offset = "0x7CACE0")]
		public FramingMode m_FramingMode;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CAD18", Offset = "0x7CAD18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAD18", Offset = "0x7CAD18")]
		public float m_FrameDamping;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAD6C", Offset = "0x7CAD6C")]
		public AdjustmentMode m_AdjustmentMode;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CADA4", Offset = "0x7CADA4")]
		public float m_MaxDollyIn;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CADDC", Offset = "0x7CADDC")]
		public float m_MaxDollyOut;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAE14", Offset = "0x7CAE14")]
		public float m_MinimumDistance;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAE4C", Offset = "0x7CAE4C")]
		public float m_MaximumDistance;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CAE84", Offset = "0x7CAE84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAE84", Offset = "0x7CAE84")]
		public float m_MinimumFOV;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CAEDC", Offset = "0x7CAEDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAEDC", Offset = "0x7CAEDC")]
		public float m_MaximumFOV;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAF34", Offset = "0x7CAF34")]
		public float m_MinimumOrthoSize;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAF6C", Offset = "0x7CAF6C")]
		public float m_MaximumOrthoSize;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_prevTargetHeight;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAFA4", Offset = "0x7CAFA4")]
		private Bounds <m_LastBounds>k__BackingField;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAFB4", Offset = "0x7CAFB4")]
		private Matrix4x4 <m_lastBoundsMatrix>k__BackingField;

		[Token(Token = "0x170002CD")]
		public CinemachineTargetGroup TargetGroup
		{
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x111C508", Offset = "0x111C508", VA = "0x111C508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public Bounds m_LastBounds
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x111CDE8", Offset = "0x111CDE8", VA = "0x111CDE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D283C", Offset = "0x7D283C")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x111CDD4", Offset = "0x111CDD4", VA = "0x111CDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D284C", Offset = "0x7D284C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public Matrix4x4 m_lastBoundsMatrix
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x111CDA4", Offset = "0x111CDA4", VA = "0x111CDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D285C", Offset = "0x7D285C")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x111CD7C", Offset = "0x111CD7C", VA = "0x111CD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D286C", Offset = "0x7D286C")]
			private set
			{
			}
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x111C3D8", Offset = "0x111C3D8", VA = "0x111C3D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x111C5B4", Offset = "0x111C5B4", VA = "0x111C5B4", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x111CDFC", Offset = "0x111CDFC", VA = "0x111CDFC")]
		private float GetTargetHeight(Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x111D010", Offset = "0x111D010", VA = "0x111D010")]
		public CinemachineGroupComposer()
		{
		}
	}
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC2A0", Offset = "0x7BC2A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC2A0", Offset = "0x7BC2A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC2A0", Offset = "0x7BC2A0")]
	[SaveDuringPlay]
	public class CinemachineHardLockToTarget : CinemachineComponentBase
	{
		[Token(Token = "0x170002D0")]
		public override bool IsValid
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x111D044", Offset = "0x111D044", VA = "0x111D044", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D1")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x111D0E0", Offset = "0x111D0E0", VA = "0x111D0E0", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x111D0E8", Offset = "0x111D0E8", VA = "0x111D0E8", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x111D144", Offset = "0x111D144", VA = "0x111D144")]
		public CinemachineHardLockToTarget()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC350", Offset = "0x7BC350")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC350", Offset = "0x7BC350")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC350", Offset = "0x7BC350")]
	[SaveDuringPlay]
	public class CinemachineHardLookAt : CinemachineComponentBase
	{
		[Token(Token = "0x170002D2")]
		public override bool IsValid
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x111D14C", Offset = "0x111D14C", VA = "0x111D14C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D3")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x111D1E8", Offset = "0x111D1E8", VA = "0x111D1E8", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x111D1F0", Offset = "0x111D1F0", VA = "0x111D1F0", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x111D458", Offset = "0x111D458", VA = "0x111D458")]
		public CinemachineHardLookAt()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC400", Offset = "0x7BC400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC400", Offset = "0x7BC400")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC400", Offset = "0x7BC400")]
	[SaveDuringPlay]
	public class CinemachineOrbitalTransposer : CinemachineTransposer
	{
		[Serializable]
		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD444", Offset = "0x7BD444")]
		public struct Heading
		{
			[Token(Token = "0x2000741")]
			[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD608", Offset = "0x7BD608")]
			public enum HeadingDefinition
			{
				[Token(Token = "0x40022C0")]
				PositionDelta,
				[Token(Token = "0x40022C1")]
				Velocity,
				[Token(Token = "0x40022C2")]
				TargetForward,
				[Token(Token = "0x40022C3")]
				WorldForward
			}

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC7CC", Offset = "0x7CC7CC")]
			public HeadingDefinition m_HeadingDefinition;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC804", Offset = "0x7CC804")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC804", Offset = "0x7CC804")]
			public int m_VelocityFilterStrength;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC858", Offset = "0x7CC858")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC858", Offset = "0x7CC858")]
			public float m_HeadingBias;

			[Token(Token = "0x600298C")]
			[Address(RVA = "0x87CD68", Offset = "0x87CD68", VA = "0x87CD68")]
			public Heading(HeadingDefinition def, int filterStrength, float bias)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD460", Offset = "0x7BD460")]
		public struct Recentering
		{
			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC8B4", Offset = "0x7CC8B4")]
			public bool m_enabled;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC8EC", Offset = "0x7CC8EC")]
			public float m_RecenterWaitTime;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC924", Offset = "0x7CC924")]
			public float m_RecenteringTime;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[HideInInspector]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CC95C", Offset = "0x7CC95C")]
			private int m_LegacyHeadingDefinition;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CC9B8", Offset = "0x7CC9B8")]
			private int m_LegacyVelocityFilterStrength;

			[Token(Token = "0x600298D")]
			[Address(RVA = "0x87CDD8", Offset = "0x87CDD8", VA = "0x87CDD8")]
			public Recentering(bool enabled, float recenterWaitTime, float recenteringSpeed)
			{
			}

			[Token(Token = "0x600298E")]
			[Address(RVA = "0x87CDF0", Offset = "0x87CDF0", VA = "0x87CDF0")]
			public void Validate()
			{
			}

			[Token(Token = "0x600298F")]
			[Address(RVA = "0x87CDF8", Offset = "0x87CDF8", VA = "0x87CDF8")]
			internal bool LegacyUpgrade(ref Heading.HeadingDefinition heading, ref int velocityFilter)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200071C")]
		internal delegate float UpdateHeadingDelegate(CinemachineOrbitalTransposer orbital, float deltaTime, Vector3 up);

		[Token(Token = "0x200071D")]
		private class HeadingTracker
		{
			[Token(Token = "0x2000742")]
			private struct Item
			{
				[Token(Token = "0x40022C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Vector3 velocity;

				[Token(Token = "0x40022C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float weight;

				[Token(Token = "0x40022C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float time;
			}

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Item[] mHistory;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int mTop;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int mBottom;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int mCount;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Vector3 mHeadingSum;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float mWeightSum;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float mWeightTime;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 mLastGoodHeading;

			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static float mDecayExponent;

			[Token(Token = "0x17000492")]
			public int FilterSize
			{
				[Token(Token = "0x6002995")]
				[Address(RVA = "0x111F168", Offset = "0x111F168", VA = "0x111F168")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002994")]
			[Address(RVA = "0x111F194", Offset = "0x111F194", VA = "0x111F194")]
			public HeadingTracker(int filterSize)
			{
			}

			[Token(Token = "0x6002996")]
			[Address(RVA = "0x111F97C", Offset = "0x111F97C", VA = "0x111F97C")]
			private void ClearHistory()
			{
			}

			[Token(Token = "0x6002997")]
			[Address(RVA = "0x111F9F8", Offset = "0x111F9F8", VA = "0x111F9F8")]
			private static float Decay(float time)
			{
				return default(float);
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0x111F384", Offset = "0x111F384", VA = "0x111F384")]
			public void Add(Vector3 velocity)
			{
			}

			[Token(Token = "0x6002999")]
			[Address(RVA = "0x111FA78", Offset = "0x111FA78", VA = "0x111FA78")]
			private void PopBottom()
			{
			}

			[Token(Token = "0x600299A")]
			[Address(RVA = "0x111F29C", Offset = "0x111F29C", VA = "0x111F29C")]
			public void DecayHistory()
			{
			}

			[Token(Token = "0x600299B")]
			[Address(RVA = "0x111F564", Offset = "0x111F564", VA = "0x111F564")]
			public Vector3 GetReliableHeading()
			{
				return default(Vector3);
			}
		}

		[Serializable]
		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7BD478", Offset = "0x7BD478")]
		private sealed class <>c
		{
			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UpdateHeadingDelegate <>9__30_0;

			[Token(Token = "0x600299D")]
			[Address(RVA = "0x111F90C", Offset = "0x111F90C", VA = "0x111F90C")]
			public <>c()
			{
			}

			[Token(Token = "0x600299E")]
			[Address(RVA = "0x111F914", Offset = "0x111F914", VA = "0x111F914")]
			internal float <.ctor>b__30_0(CinemachineOrbitalTransposer orbital, float deltaTime, Vector3 up)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CAFC4", Offset = "0x7CAFC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CAFC4", Offset = "0x7CAFC4")]
		public Heading m_Heading;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB010", Offset = "0x7CB010")]
		public Recentering m_RecenterToTargetHeading;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB048", Offset = "0x7CB048")]
		public AxisState m_XAxis;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CB080", Offset = "0x7CB080")]
		private float m_LegacyRadius;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CB0DC", Offset = "0x7CB0DC")]
		private float m_LegacyHeightOffset;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CB138", Offset = "0x7CB138")]
		private float m_LegacyHeadingBias;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		[NoSaveDuringPlay]
		public bool m_HeadingIsSlave;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal UpdateHeadingDelegate HeadingUpdater;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float mLastHeadingAxisInputTime;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float mHeadingRecenteringVelocity;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 mLastTargetPosition;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private HeadingTracker mHeadingTracker;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Rigidbody mTargetRigidBody;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB1CC", Offset = "0x7CB1CC")]
		private Transform <PreviousTarget>k__BackingField;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion mHeadingPrevFrame;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 mOffsetPrevFrame;

		[Token(Token = "0x170002D4")]
		private Transform PreviousTarget
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x111E888", Offset = "0x111E888", VA = "0x111E888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D287C", Offset = "0x7D287C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x111E878", Offset = "0x111E878", VA = "0x111E878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D288C", Offset = "0x7D288C")]
			set
			{
			}
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x111E214", Offset = "0x111E214", VA = "0x111E214", Slot = "9")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x111C0BC", Offset = "0x111C0BC", VA = "0x111C0BC")]
		public float UpdateHeading(float deltaTime, Vector3 up, ref AxisState axis)
		{
			return default(float);
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x111E7DC", Offset = "0x111E7DC", VA = "0x111E7DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x111E890", Offset = "0x111E890", VA = "0x111E890", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x111EE4C", Offset = "0x111EE4C", VA = "0x111EE4C", Slot = "8")]
		public override void OnPositionDragged(Vector3 delta)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x111EFB0", Offset = "0x111EFB0", VA = "0x111EFB0")]
		private static string GetFullName(GameObject current)
		{
			return null;
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x111E314", Offset = "0x111E314", VA = "0x111E314")]
		private float GetTargetHeading(float currentHeading, Quaternion targetOrientation, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x111F684", Offset = "0x111F684", VA = "0x111F684")]
		public CinemachineOrbitalTransposer()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC4B0", Offset = "0x7BC4B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC4B0", Offset = "0x7BC4B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC4B0", Offset = "0x7BC4B0")]
	[SaveDuringPlay]
	public class CinemachinePOV : CinemachineComponentBase
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB1DC", Offset = "0x7CB1DC")]
		public AxisState m_VerticalAxis;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB214", Offset = "0x7CB214")]
		public AxisState m_HorizontalAxis;

		[Token(Token = "0x170002D5")]
		public override bool IsValid
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xBD6314", Offset = "0xBD6314", VA = "0xBD6314", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0xBD631C", Offset = "0xBD631C", VA = "0xBD631C", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xBD6324", Offset = "0xBD6324", VA = "0xBD6324")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xBD6354", Offset = "0xBD6354", VA = "0xBD6354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xBD63AC", Offset = "0xBD63AC", VA = "0xBD63AC", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xBD65E4", Offset = "0xBD65E4", VA = "0xBD65E4")]
		public CinemachinePOV()
		{
		}
	}
	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC560", Offset = "0x7BC560")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC560", Offset = "0x7BC560")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC560", Offset = "0x7BC560")]
	[SaveDuringPlay]
	public class CinemachineSameAsFollowObject : CinemachineComponentBase
	{
		[Token(Token = "0x170002D7")]
		public override bool IsValid
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0xBD8A08", Offset = "0xBD8A08", VA = "0xBD8A08", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D8")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0xBD8AA8", Offset = "0xBD8AA8", VA = "0xBD8AA8", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xBD8AB0", Offset = "0xBD8AB0", VA = "0xBD8AB0", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xBD8B34", Offset = "0xBD8B34", VA = "0xBD8B34")]
		public CinemachineSameAsFollowObject()
		{
		}
	}
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC610", Offset = "0x7BC610")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC610", Offset = "0x7BC610")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC610", Offset = "0x7BC610")]
	[SaveDuringPlay]
	public class CinemachineTrackedDolly : CinemachineComponentBase
	{
		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD488", Offset = "0x7BD488")]
		public enum CameraUpMode
		{
			[Token(Token = "0x400226A")]
			Default,
			[Token(Token = "0x400226B")]
			Path,
			[Token(Token = "0x400226C")]
			PathNoRoll,
			[Token(Token = "0x400226D")]
			FollowTarget,
			[Token(Token = "0x400226E")]
			FollowTargetNoRoll
		}

		[Serializable]
		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD4A4", Offset = "0x7BD4A4")]
		public struct AutoDolly
		{
			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCA14", Offset = "0x7CCA14")]
			public bool m_Enabled;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCA4C", Offset = "0x7CCA4C")]
			public float m_PositionOffset;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCA84", Offset = "0x7CCA84")]
			public int m_SearchRadius;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CCABC", Offset = "0x7CCABC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCABC", Offset = "0x7CCABC")]
			public int m_SearchResolution;

			[Token(Token = "0x600299F")]
			[Address(RVA = "0x865528", Offset = "0x865528", VA = "0x865528")]
			public AutoDolly(bool enabled, float positionOffset, int searchRadius, int stepsPerSegment)
			{
			}
		}

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB24C", Offset = "0x7CB24C")]
		public CinemachinePathBase m_Path;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB284", Offset = "0x7CB284")]
		public float m_PathPosition;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB2BC", Offset = "0x7CB2BC")]
		public CinemachinePathBase.PositionUnits m_PositionUnits;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB2F4", Offset = "0x7CB2F4")]
		public Vector3 m_PathOffset;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB32C", Offset = "0x7CB32C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB32C", Offset = "0x7CB32C")]
		public float m_XDamping;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB380", Offset = "0x7CB380")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB380", Offset = "0x7CB380")]
		public float m_YDamping;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB3D4", Offset = "0x7CB3D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB3D4", Offset = "0x7CB3D4")]
		public float m_ZDamping;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB428", Offset = "0x7CB428")]
		public CameraUpMode m_CameraUp;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB460", Offset = "0x7CB460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB460", Offset = "0x7CB460")]
		public float m_PitchDamping;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB4B4", Offset = "0x7CB4B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB4B4", Offset = "0x7CB4B4")]
		public float m_YawDamping;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB508", Offset = "0x7CB508")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB508", Offset = "0x7CB508")]
		public float m_RollDamping;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB55C", Offset = "0x7CB55C")]
		public AutoDolly m_AutoDolly;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_PreviousPathPosition;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_PreviousOrientation;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_PreviousCameraPosition;

		[Token(Token = "0x170002D9")]
		public override bool IsValid
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0xBDE3A4", Offset = "0xBDE3A4", VA = "0xBDE3A4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DA")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0xBDE434", Offset = "0xBDE434", VA = "0xBDE434", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x170002DB")]
		private Vector3 AngularDamping
		{
			[Token(Token = "0x6002317")]
			[Address(RVA = "0xBDF2F4", Offset = "0xBDF2F4", VA = "0xBDF2F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xBDE43C", Offset = "0xBDE43C", VA = "0xBDE43C", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xBDF45C", Offset = "0xBDF45C", VA = "0xBDF45C", Slot = "8")]
		public override void OnPositionDragged(Vector3 delta)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xBDEF78", Offset = "0xBDEF78", VA = "0xBDEF78")]
		private Quaternion GetTargetOrientationAtPathPoint(Quaternion pathOrientation, Vector3 up)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xBDF5CC", Offset = "0xBDF5CC", VA = "0xBDF5CC")]
		public CinemachineTrackedDolly()
		{
		}
	}
	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC6C0", Offset = "0x7BC6C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC6C0", Offset = "0x7BC6C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7BC6C0", Offset = "0x7BC6C0")]
	[SaveDuringPlay]
	public class CinemachineTransposer : CinemachineComponentBase
	{
		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD4C0", Offset = "0x7BD4C0")]
		public enum BindingMode
		{
			[Token(Token = "0x4002274")]
			LockToTargetOnAssign,
			[Token(Token = "0x4002275")]
			LockToTargetWithWorldUp,
			[Token(Token = "0x4002276")]
			LockToTargetNoRoll,
			[Token(Token = "0x4002277")]
			LockToTarget,
			[Token(Token = "0x4002278")]
			WorldSpace,
			[Token(Token = "0x4002279")]
			SimpleFollowWithWorldUp
		}

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB594", Offset = "0x7CB594")]
		public BindingMode m_BindingMode;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB5CC", Offset = "0x7CB5CC")]
		public Vector3 m_FollowOffset;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB604", Offset = "0x7CB604")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB604", Offset = "0x7CB604")]
		public float m_XDamping;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB658", Offset = "0x7CB658")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB658", Offset = "0x7CB658")]
		public float m_YDamping;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB6AC", Offset = "0x7CB6AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB6AC", Offset = "0x7CB6AC")]
		public float m_ZDamping;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB700", Offset = "0x7CB700")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB700", Offset = "0x7CB700")]
		public float m_PitchDamping;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB754", Offset = "0x7CB754")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB754", Offset = "0x7CB754")]
		public float m_YawDamping;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CB7A8", Offset = "0x7CB7A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB7A8", Offset = "0x7CB7A8")]
		public float m_RollDamping;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_PreviousTargetPosition;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_PreviousReferenceOrientation;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion m_targetOrientationOnAssign;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_previousTarget;

		[Token(Token = "0x170002DC")]
		protected Vector3 EffectiveOffset
		{
			[Token(Token = "0x600231A")]
			[Address(RVA = "0xBDF6D4", Offset = "0xBDF6D4", VA = "0xBDF6D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002DD")]
		public override bool IsValid
		{
			[Token(Token = "0x600231B")]
			[Address(RVA = "0xBDF768", Offset = "0xBDF768", VA = "0xBDF768", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DE")]
		public override CinemachineCore.Stage Stage
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0xBDF808", Offset = "0xBDF808", VA = "0xBDF808", Slot = "6")]
			get
			{
				return default(CinemachineCore.Stage);
			}
		}

		[Token(Token = "0x170002DF")]
		protected Vector3 Damping
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0xBE0660", Offset = "0xBE0660", VA = "0xBE0660")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002E0")]
		protected Vector3 AngularDamping
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0xBE0570", Offset = "0xBE0570", VA = "0xBE0570")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xBDF6AC", Offset = "0xBDF6AC", VA = "0xBDF6AC", Slot = "9")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xBDF810", Offset = "0xBDF810", VA = "0xBDF810", Slot = "7")]
		public override void MutateCameraState(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xBE009C", Offset = "0xBE009C", VA = "0xBE009C", Slot = "8")]
		public override void OnPositionDragged(Vector3 delta)
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xBDF9F8", Offset = "0xBDF9F8", VA = "0xBDF9F8")]
		protected void InitPrevFrameStateInfo(ref CameraState curState, float deltaTime)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xBDFB90", Offset = "0xBDFB90", VA = "0xBDFB90")]
		protected void TrackTarget(float deltaTime, Vector3 up, Vector3 desiredCameraOffset, out Vector3 outTargetPosition, out Quaternion outTargetOrient)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xBE06C0", Offset = "0xBE06C0", VA = "0xBE06C0")]
		public Vector3 GeTargetCameraPosition(Vector3 worldUp)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xBE0224", Offset = "0xBE0224", VA = "0xBE0224")]
		public Quaternion GetReferenceOrientation(Vector3 worldUp)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xBE0878", Offset = "0xBE0878", VA = "0xBE0878")]
		private static Quaternion Uppify(Quaternion q, Vector3 up)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xBE0988", Offset = "0xBE0988", VA = "0xBE0988")]
		public CinemachineTransposer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC770", Offset = "0x7BC770")]
	public struct AxisState
	{
		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[NoSaveDuringPlay]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB7FC", Offset = "0x7CB7FC")]
		public float Value;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB848", Offset = "0x7CB848")]
		public float m_MaxSpeed;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB880", Offset = "0x7CB880")]
		public float m_AccelTime;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB8B8", Offset = "0x7CB8B8")]
		public float m_DecelTime;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7CB8F0", Offset = "0x7CB8F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB8F0", Offset = "0x7CB8F0")]
		public string m_InputAxisName;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NoSaveDuringPlay]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB950", Offset = "0x7CB950")]
		public float m_InputAxisValue;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[NoSaveDuringPlay]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CB99C", Offset = "0x7CB99C")]
		public bool m_InvertAxis;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float mCurrentSpeed;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float mMinValue;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float mMaxValue;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool mWrapAround;

		[Token(Token = "0x4001ABF")]
		private const float Epsilon = 0.0001f;

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x861E90", Offset = "0x861E90", VA = "0x861E90")]
		public AxisState(float maxSpeed, float accelTime, float decelTime, float val, string name, bool invert)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x861ED8", Offset = "0x861ED8", VA = "0x861ED8")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x861EE0", Offset = "0x861EE0", VA = "0x861EE0")]
		public void SetThresholds(float minValue, float maxValue, bool wrapAround)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x861EF0", Offset = "0x861EF0", VA = "0x861EF0")]
		public bool Update(float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x861EF8", Offset = "0x861EF8", VA = "0x861EF8")]
		private float GetMaxSpeed()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200051C")]
	public struct CameraState
	{
		[Token(Token = "0x2000722")]
		public struct CustomBlendable
		{
			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Object m_Custom;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float m_Weight;

			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x87CB60", Offset = "0x87CB60", VA = "0x87CB60")]
			public CustomBlendable(UnityEngine.Object custom, float weight)
			{
			}
		}

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB9E8", Offset = "0x7CB9E8")]
		private LensSettings <Lens>k__BackingField;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB9F8", Offset = "0x7CB9F8")]
		private Vector3 <ReferenceUp>k__BackingField;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA08", Offset = "0x7CBA08")]
		private Vector3 <ReferenceLookAt>k__BackingField;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 kNoPoint;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA18", Offset = "0x7CBA18")]
		private Vector3 <RawPosition>k__BackingField;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA28", Offset = "0x7CBA28")]
		private Quaternion <RawOrientation>k__BackingField;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA38", Offset = "0x7CBA38")]
		private Vector3 <PositionDampingBypass>k__BackingField;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA48", Offset = "0x7CBA48")]
		private float <ShotQuality>k__BackingField;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA58", Offset = "0x7CBA58")]
		private Vector3 <PositionCorrection>k__BackingField;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA68", Offset = "0x7CBA68")]
		private Quaternion <OrientationCorrection>k__BackingField;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CustomBlendable mCustom0;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CustomBlendable mCustom1;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CustomBlendable mCustom2;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CustomBlendable mCustom3;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<CustomBlendable> m_CustomOverflow;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA78", Offset = "0x7CBA78")]
		private int <NumCustomBlendables>k__BackingField;

		[Token(Token = "0x170002E1")]
		public LensSettings Lens
		{
			[Token(Token = "0x600232C")]
			[Address(RVA = "0x87CA24", Offset = "0x87CA24", VA = "0x87CA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D289C", Offset = "0x7D289C")]
			get
			{
				return default(LensSettings);
			}
			[Token(Token = "0x600232D")]
			[Address(RVA = "0x87CA38", Offset = "0x87CA38", VA = "0x87CA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28AC", Offset = "0x7D28AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public Vector3 ReferenceUp
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0x87CA54", Offset = "0x87CA54", VA = "0x87CA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28BC", Offset = "0x7D28BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600232F")]
			[Address(RVA = "0x87CA60", Offset = "0x87CA60", VA = "0x87CA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28CC", Offset = "0x7D28CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public Vector3 ReferenceLookAt
		{
			[Token(Token = "0x6002330")]
			[Address(RVA = "0x87CA6C", Offset = "0x87CA6C", VA = "0x87CA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28DC", Offset = "0x7D28DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002331")]
			[Address(RVA = "0x87CA78", Offset = "0x87CA78", VA = "0x87CA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28EC", Offset = "0x7D28EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public bool HasLookAt
		{
			[Token(Token = "0x6002332")]
			[Address(RVA = "0x87CA84", Offset = "0x87CA84", VA = "0x87CA84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E5")]
		public Vector3 RawPosition
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0x87CA8C", Offset = "0x87CA8C", VA = "0x87CA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D28FC", Offset = "0x7D28FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002334")]
			[Address(RVA = "0x87CA98", Offset = "0x87CA98", VA = "0x87CA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D290C", Offset = "0x7D290C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public Quaternion RawOrientation
		{
			[Token(Token = "0x6002335")]
			[Address(RVA = "0x87CAA4", Offset = "0x87CAA4", VA = "0x87CAA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D291C", Offset = "0x7D291C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002336")]
			[Address(RVA = "0x87CAB0", Offset = "0x87CAB0", VA = "0x87CAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D292C", Offset = "0x7D292C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		internal Vector3 PositionDampingBypass
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x87CABC", Offset = "0x87CABC", VA = "0x87CABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D293C", Offset = "0x7D293C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002338")]
			[Address(RVA = "0x87CAC8", Offset = "0x87CAC8", VA = "0x87CAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D294C", Offset = "0x7D294C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public float ShotQuality
		{
			[Token(Token = "0x6002339")]
			[Address(RVA = "0x87CAD4", Offset = "0x87CAD4", VA = "0x87CAD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D295C", Offset = "0x7D295C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600233A")]
			[Address(RVA = "0x87CADC", Offset = "0x87CADC", VA = "0x87CADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D296C", Offset = "0x7D296C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public Vector3 PositionCorrection
		{
			[Token(Token = "0x600233B")]
			[Address(RVA = "0x87CAE4", Offset = "0x87CAE4", VA = "0x87CAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D297C", Offset = "0x7D297C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600233C")]
			[Address(RVA = "0x87CAF0", Offset = "0x87CAF0", VA = "0x87CAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D298C", Offset = "0x7D298C")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public Quaternion OrientationCorrection
		{
			[Token(Token = "0x600233D")]
			[Address(RVA = "0x87CAFC", Offset = "0x87CAFC", VA = "0x87CAFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D299C", Offset = "0x7D299C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600233E")]
			[Address(RVA = "0x87CB08", Offset = "0x87CB08", VA = "0x87CB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29AC", Offset = "0x7D29AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public Vector3 CorrectedPosition
		{
			[Token(Token = "0x600233F")]
			[Address(RVA = "0x87CB14", Offset = "0x87CB14", VA = "0x87CB14")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EC")]
		public Quaternion CorrectedOrientation
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0x87CB1C", Offset = "0x87CB1C", VA = "0x87CB1C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002ED")]
		public Vector3 FinalPosition
		{
			[Token(Token = "0x6002341")]
			[Address(RVA = "0x87CB24", Offset = "0x87CB24", VA = "0x87CB24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EE")]
		public Quaternion FinalOrientation
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0x87CB2C", Offset = "0x87CB2C", VA = "0x87CB2C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002EF")]
		public static CameraState Default
		{
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x110592C", Offset = "0x110592C", VA = "0x110592C")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x170002F0")]
		public int NumCustomBlendables
		{
			[Token(Token = "0x6002344")]
			[Address(RVA = "0x87CB34", Offset = "0x87CB34", VA = "0x87CB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29BC", Offset = "0x7D29BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002345")]
			[Address(RVA = "0x87CB3C", Offset = "0x87CB3C", VA = "0x87CB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29CC", Offset = "0x7D29CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x87CB44", Offset = "0x87CB44", VA = "0x87CB44")]
		public CustomBlendable GetCustomBlendable(int index)
		{
			return default(CustomBlendable);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x87CB4C", Offset = "0x87CB4C", VA = "0x87CB4C")]
		private int FindCustomBlendable(UnityEngine.Object custom)
		{
			return default(int);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x87CB54", Offset = "0x87CB54", VA = "0x87CB54")]
		public void AddCustomBlendable(CustomBlendable b)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x110603C", Offset = "0x110603C", VA = "0x110603C")]
		public static CameraState Lerp(CameraState stateA, CameraState stateB, float t)
		{
			return default(CameraState);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x87CB5C", Offset = "0x87CB5C", VA = "0x87CB5C")]
		private float InterpolateFOV(float fovA, float fovB, float dA, float dB, float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200051D")]
	public class CinemachineBlend
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA88", Offset = "0x7CBA88")]
		private ICinemachineCamera <CamA>k__BackingField;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBA98", Offset = "0x7CBA98")]
		private ICinemachineCamera <CamB>k__BackingField;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBAA8", Offset = "0x7CBAA8")]
		private AnimationCurve <BlendCurve>k__BackingField;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBAB8", Offset = "0x7CBAB8")]
		private float <TimeInBlend>k__BackingField;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBAC8", Offset = "0x7CBAC8")]
		private float <Duration>k__BackingField;

		[Token(Token = "0x170002F1")]
		public ICinemachineCamera CamA
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0x1104D34", Offset = "0x1104D34", VA = "0x1104D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29DC", Offset = "0x7D29DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x11072AC", Offset = "0x11072AC", VA = "0x11072AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29EC", Offset = "0x7D29EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public ICinemachineCamera CamB
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x1105118", Offset = "0x1105118", VA = "0x1105118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D29FC", Offset = "0x7D29FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600234F")]
			[Address(RVA = "0x11072B4", Offset = "0x11072B4", VA = "0x11072B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A0C", Offset = "0x7D2A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public AnimationCurve BlendCurve
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0x11072BC", Offset = "0x11072BC", VA = "0x11072BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A1C", Offset = "0x7D2A1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002351")]
			[Address(RVA = "0x11072C4", Offset = "0x11072C4", VA = "0x11072C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A2C", Offset = "0x7D2A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public float TimeInBlend
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0x11072CC", Offset = "0x11072CC", VA = "0x11072CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A3C", Offset = "0x7D2A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x11072D4", Offset = "0x11072D4", VA = "0x11072D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A4C", Offset = "0x7D2A4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public float BlendWeight
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0x11072DC", Offset = "0x11072DC", VA = "0x11072DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F6")]
		public bool IsValid
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x11072FC", Offset = "0x11072FC", VA = "0x11072FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F7")]
		public float Duration
		{
			[Token(Token = "0x6002356")]
			[Address(RVA = "0x110731C", Offset = "0x110731C", VA = "0x110731C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A5C", Offset = "0x7D2A5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x1107324", Offset = "0x1107324", VA = "0x1107324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A6C", Offset = "0x7D2A6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public bool IsComplete
		{
			[Token(Token = "0x6002358")]
			[Address(RVA = "0x110732C", Offset = "0x110732C", VA = "0x110732C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public string Description
		{
			[Token(Token = "0x6002359")]
			[Address(RVA = "0x1104E6C", Offset = "0x1104E6C", VA = "0x1104E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public CameraState State
		{
			[Token(Token = "0x600235D")]
			[Address(RVA = "0x1105284", Offset = "0x1105284", VA = "0x1105284")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x110733C", Offset = "0x110733C", VA = "0x110733C")]
		public bool Uses(ICinemachineCamera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1107460", Offset = "0x1107460", VA = "0x1107460")]
		public CinemachineBlend(ICinemachineCamera a, ICinemachineCamera b, AnimationCurve curve, float duration, float t)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x11051A0", Offset = "0x11051A0", VA = "0x11051A0")]
		public void UpdateCameraState(Vector3 worldUp, float deltaTime)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC78C", Offset = "0x7BC78C")]
	public struct CinemachineBlendDefinition
	{
		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD4DC", Offset = "0x7BD4DC")]
		public enum Style
		{
			[Token(Token = "0x400227D")]
			Cut,
			[Token(Token = "0x400227E")]
			EaseInOut,
			[Token(Token = "0x400227F")]
			EaseIn,
			[Token(Token = "0x4002280")]
			EaseOut,
			[Token(Token = "0x4002281")]
			HardIn,
			[Token(Token = "0x4002282")]
			HardOut,
			[Token(Token = "0x4002283")]
			Linear
		}

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBAD8", Offset = "0x7CBAD8")]
		public Style m_Style;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBB10", Offset = "0x7CBB10")]
		public float m_Time;

		[Token(Token = "0x170002FB")]
		public AnimationCurve BlendCurve
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0x87CBA4", Offset = "0x87CBA4", VA = "0x87CBA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x87CB98", Offset = "0x87CB98", VA = "0x87CB98")]
		public CinemachineBlendDefinition(Style style, float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC7A8", Offset = "0x7BC7A8")]
	public sealed class CinemachineBlenderSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD4F8", Offset = "0x7BD4F8")]
		public struct CustomBlend
		{
			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCB1C", Offset = "0x7CCB1C")]
			public string m_From;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCB54", Offset = "0x7CCB54")]
			public string m_To;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCB8C", Offset = "0x7CCB8C")]
			public CinemachineBlendDefinition m_Blend;
		}

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBB48", Offset = "0x7CBB48")]
		public CustomBlend[] m_CustomBlends;

		[Token(Token = "0x4001AD8")]
		public const string kBlendFromAnyCameraLabel = "**ANY CAMERA**";

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x1109178", Offset = "0x1109178", VA = "0x1109178")]
		public AnimationCurve GetBlendCurveForVirtualCameras(string fromCameraName, string toCameraName, AnimationCurve defaultCurve)
		{
			return null;
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x1109390", Offset = "0x1109390", VA = "0x1109390")]
		public CinemachineBlenderSettings()
		{
		}
	}
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC7C0", Offset = "0x7BC7C0")]
	public abstract class CinemachineComponentBase : MonoBehaviour
	{
		[Token(Token = "0x4001AD9")]
		protected const float Epsilon = 0.0001f;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CinemachineVirtualCameraBase m_vcamOwner;

		[Token(Token = "0x170002FC")]
		public CinemachineVirtualCameraBase VirtualCamera
		{
			[Token(Token = "0x6002362")]
			[Address(RVA = "0x11109D0", Offset = "0x11109D0", VA = "0x11109D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public Transform FollowTarget
		{
			[Token(Token = "0x6002363")]
			[Address(RVA = "0x1110AE0", Offset = "0x1110AE0", VA = "0x1110AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public Transform LookAtTarget
		{
			[Token(Token = "0x6002364")]
			[Address(RVA = "0x1110B90", Offset = "0x1110B90", VA = "0x1110B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public CameraState VcamState
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x1110C40", Offset = "0x1110C40", VA = "0x1110C40")]
			get
			{
				return default(CameraState);
			}
		}

		[Token(Token = "0x17000300")]
		public abstract bool IsValid
		{
			[Token(Token = "0x6002366")]
			get;
		}

		[Token(Token = "0x17000301")]
		public abstract CinemachineCore.Stage Stage
		{
			[Token(Token = "0x6002368")]
			get;
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1110D24", Offset = "0x1110D24", VA = "0x1110D24", Slot = "5")]
		public virtual void PrePipelineMutateCameraState(ref CameraState state)
		{
		}

		[Token(Token = "0x6002369")]
		public abstract void MutateCameraState(ref CameraState curState, float deltaTime);

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1110D28", Offset = "0x1110D28", VA = "0x1110D28", Slot = "8")]
		public virtual void OnPositionDragged(Vector3 delta)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x11072A4", Offset = "0x11072A4", VA = "0x11072A4")]
		protected CinemachineComponentBase()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public sealed class CinemachineCore
	{
		[Token(Token = "0x2000725")]
		public enum Stage
		{
			[Token(Token = "0x4002288")]
			Body,
			[Token(Token = "0x4002289")]
			Aim,
			[Token(Token = "0x400228A")]
			Noise
		}

		[Token(Token = "0x2000726")]
		public delegate float AxisInputDelegate(string axisName);

		[Token(Token = "0x2000727")]
		private struct UpdateStatus
		{
			[Token(Token = "0x400228B")]
			private const int kWindowSize = 30;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int lastUpdateFrame;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lastUpdateSubframe;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int windowStart;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int numWindowLateUpdateMoves;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int numWindowFixedUpdateMoves;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int numWindows;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UpdateFilter preferredUpdate;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Matrix4x4 targetPos;

			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x87CD14", Offset = "0x87CD14", VA = "0x87CD14")]
			public UpdateStatus(int currentFrame)
			{
			}

			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x87CD1C", Offset = "0x87CD1C", VA = "0x87CD1C")]
			public UpdateFilter ChoosePreferredUpdate(int currentFrame, Matrix4x4 pos, UpdateFilter updateFilter)
			{
				return default(UpdateFilter);
			}
		}

		[Token(Token = "0x2000728")]
		public enum UpdateFilter
		{
			[Token(Token = "0x4002295")]
			Fixed,
			[Token(Token = "0x4002296")]
			ForcedFixed,
			[Token(Token = "0x4002297")]
			Late,
			[Token(Token = "0x4002298")]
			ForcedLate
		}

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int kStreamingVersion;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string kVersionString;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CinemachineCore sInstance;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool sShowHiddenObjects;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static AxisInputDelegate GetInputAxis;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CinemachineBrain> mActiveBrains;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ICinemachineCamera> mActiveCameras;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<List<ICinemachineCamera>> mChildCameras;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ICinemachineCamera, UpdateStatus> mUpdateStatus;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBB80", Offset = "0x7CBB80")]
		private UpdateFilter <CurrentUpdateFilter>k__BackingField;

		[Token(Token = "0x17000302")]
		public static CinemachineCore Instance
		{
			[Token(Token = "0x600236C")]
			[Address(RVA = "0x1107558", Offset = "0x1107558", VA = "0x1107558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public int BrainCount
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0x1113978", Offset = "0x1113978", VA = "0x1113978")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000304")]
		public int VirtualCameraCount
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x110BC10", Offset = "0x110BC10", VA = "0x110BC10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000305")]
		internal UpdateFilter CurrentUpdateFilter
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0x1113F30", Offset = "0x1113F30", VA = "0x1113F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A7C", Offset = "0x7D2A7C")]
			get
			{
				return default(UpdateFilter);
			}
			[Token(Token = "0x600237A")]
			[Address(RVA = "0x110ADB8", Offset = "0x110ADB8", VA = "0x110ADB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A8C", Offset = "0x7D2A8C")]
			set
			{
			}
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x11139D8", Offset = "0x11139D8", VA = "0x11139D8")]
		public CinemachineBrain GetActiveBrain(int index)
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x110A13C", Offset = "0x110A13C", VA = "0x110A13C")]
		internal void AddActiveBrain(CinemachineBrain brain)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x110A28C", Offset = "0x110A28C", VA = "0x110A28C")]
		internal void RemoveActiveBrain(CinemachineBrain brain)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x110BC70", Offset = "0x110BC70", VA = "0x110BC70")]
		public ICinemachineCamera GetVirtualCamera(int index)
		{
			return null;
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1113A48", Offset = "0x1113A48", VA = "0x1113A48")]
		internal void AddActiveCamera(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1113C2C", Offset = "0x1113C2C", VA = "0x1113C2C")]
		internal void RemoveActiveCamera(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1113C9C", Offset = "0x1113C9C", VA = "0x1113C9C")]
		internal void AddChildCamera(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1113E50", Offset = "0x1113E50", VA = "0x1113E50")]
		internal void RemoveChildCamera(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x110ADC0", Offset = "0x110ADC0", VA = "0x110ADC0")]
		internal void UpdateAllActiveVirtualCameras(Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1107620", Offset = "0x1107620", VA = "0x1107620")]
		internal bool UpdateVirtualCamera(ICinemachineCamera vcam, Vector3 worldUp, float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1113FF0", Offset = "0x1113FF0", VA = "0x1113FF0")]
		private static bool GetTargetPosition(ICinemachineCamera vcam, out Matrix4x4 targetPos)
		{
			return default(bool);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x1114680", Offset = "0x1114680", VA = "0x1114680")]
		public UpdateFilter GetVcamUpdateStatus(ICinemachineCamera vcam)
		{
			return default(UpdateFilter);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1114714", Offset = "0x1114714", VA = "0x1114714")]
		public bool IsLive(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1108BA0", Offset = "0x1108BA0", VA = "0x1108BA0")]
		public void GenerateCameraActivationEvent(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1108CB8", Offset = "0x1108CB8", VA = "0x1108CB8")]
		public void GenerateCameraCutEvent(ICinemachineCamera vcam)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1114804", Offset = "0x1114804", VA = "0x1114804")]
		public CinemachineBrain FindPotentialTargetBrain(ICinemachineCamera vcam)
		{
			return null;
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1113894", Offset = "0x1113894", VA = "0x1113894")]
		public CinemachineCore()
		{
		}
	}
	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC7D8", Offset = "0x7BC7D8")]
	public abstract class CinemachineExtension : MonoBehaviour
	{
		[Token(Token = "0x4001AE5")]
		protected const float Epsilon = 0.0001f;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CinemachineVirtualCameraBase m_vcamOwner;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ICinemachineCamera, object> mExtraState;

		[Token(Token = "0x17000306")]
		public CinemachineVirtualCameraBase VirtualCamera
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x1115180", Offset = "0x1115180", VA = "0x1115180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1115230", Offset = "0x1115230", VA = "0x1115230", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x110DCAC", Offset = "0x110DCAC", VA = "0x110DCAC", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1115234", Offset = "0x1115234", VA = "0x1115234")]
		private void ConnectToVcam()
		{
		}

		[Token(Token = "0x6002387")]
		protected abstract void PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState state, float deltaTime);

		[Token(Token = "0x6002388")]
		protected T GetExtraState<T>(ICinemachineCamera vcam) where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x6002389")]
		protected List<T> GetAllExtraStates<T>() where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x11109C0", Offset = "0x11109C0", VA = "0x11109C0")]
		protected CinemachineExtension()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public abstract class CinemachinePathBase : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD514", Offset = "0x7BD514")]
		public class Appearance
		{
			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCBC4", Offset = "0x7CCBC4")]
			public Color pathColor;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCBFC", Offset = "0x7CCBFC")]
			public Color inactivePathColor;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCC34", Offset = "0x7CCC34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CCC34", Offset = "0x7CCC34")]
			public float width;

			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xBD89B0", Offset = "0xBD89B0", VA = "0xBD89B0")]
			public Appearance()
			{
			}
		}

		[Token(Token = "0x200072A")]
		public enum PositionUnits
		{
			[Token(Token = "0x400229D")]
			PathUnits,
			[Token(Token = "0x400229E")]
			Distance
		}

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBB90", Offset = "0x7CBB90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CBB90", Offset = "0x7CBB90")]
		public int m_Resolution;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBBE8", Offset = "0x7CBBE8")]
		public Appearance m_Appearance;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] m_DistanceToPos;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] m_PosToDistance;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_CachedSampleSteps;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_PathLength;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_cachedPosStepSize;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_cachedDistanceStepSize;

		[Token(Token = "0x17000307")]
		public abstract float MinPos
		{
			[Token(Token = "0x600238B")]
			get;
		}

		[Token(Token = "0x17000308")]
		public abstract float MaxPos
		{
			[Token(Token = "0x600238C")]
			get;
		}

		[Token(Token = "0x17000309")]
		public abstract bool Looped
		{
			[Token(Token = "0x600238D")]
			get;
		}

		[Token(Token = "0x1700030A")]
		public abstract int DistanceCacheSampleStepsPerSegment
		{
			[Token(Token = "0x6002399")]
			get;
		}

		[Token(Token = "0x1700030B")]
		public float PathLength
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0xBD7F24", Offset = "0xBD7F24", VA = "0xBD7F24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xBD792C", Offset = "0xBD792C", VA = "0xBD792C", Slot = "7")]
		public virtual float NormalizePos(float pos)
		{
			return default(float);
		}

		[Token(Token = "0x600238F")]
		public abstract Vector3 EvaluatePosition(float pos);

		[Token(Token = "0x6002390")]
		public abstract Vector3 EvaluateTangent(float pos);

		[Token(Token = "0x6002391")]
		public abstract Quaternion EvaluateOrientation(float pos);

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xBD7A34", Offset = "0xBD7A34", VA = "0xBD7A34", Slot = "11")]
		public virtual float FindClosestPoint(Vector3 p, int startSegment, int searchRadius, int stepsPerSegment)
		{
			return default(float);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xBD7EF0", Offset = "0xBD7EF0", VA = "0xBD7EF0")]
		public float MinUnit(PositionUnits units)
		{
			return default(float);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xBD7F0C", Offset = "0xBD7F0C", VA = "0xBD7F0C")]
		public float MaxUnit(PositionUnits units)
		{
			return default(float);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xBD7F90", Offset = "0xBD7F90", VA = "0xBD7F90", Slot = "12")]
		public virtual float NormalizeUnit(float pos, PositionUnits units)
		{
			return default(float);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xBD8084", Offset = "0xBD8084", VA = "0xBD8084")]
		public Vector3 EvaluatePositionAtUnit(float pos, PositionUnits units)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xBD82B8", Offset = "0xBD82B8", VA = "0xBD82B8")]
		public Vector3 EvaluateTangentAtUnit(float pos, PositionUnits units)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xBD82F0", Offset = "0xBD82F0", VA = "0xBD82F0")]
		public Quaternion EvaluateOrientationAtUnit(float pos, PositionUnits units)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xBD8328", Offset = "0xBD8328", VA = "0xBD8328", Slot = "14")]
		public virtual void InvalidateDistanceCache()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xBD8364", Offset = "0xBD8364", VA = "0xBD8364")]
		public bool DistanceCacheIsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xBD7FA8", Offset = "0xBD7FA8", VA = "0xBD7FA8")]
		public float NormalizePathDistance(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xBD80BC", Offset = "0xBD80BC", VA = "0xBD80BC")]
		public float GetPathPositionFromDistance(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xBD87E0", Offset = "0xBD87E0", VA = "0xBD87E0")]
		public float GetPathDistanceFromPosition(float pos)
		{
			return default(float);
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xBD83FC", Offset = "0xBD83FC", VA = "0xBD83FC")]
		private void ResamplePath(int stepsPerSegment)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xBD78B4", Offset = "0xBD78B4", VA = "0xBD78B4")]
		protected CinemachinePathBase()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public sealed class LensSettingsPropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xBE465C", Offset = "0xBE465C", VA = "0xBE465C")]
		public LensSettingsPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public sealed class CinemachineBlendDefinitionPropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1107D98", Offset = "0x1107D98", VA = "0x1107D98")]
		public CinemachineBlendDefinitionPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public sealed class SaveDuringPlayAttribute : Attribute
	{
		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xBE5B48", Offset = "0xBE5B48", VA = "0xBE5B48")]
		public SaveDuringPlayAttribute()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public sealed class NoSaveDuringPlayAttribute : PropertyAttribute
	{
		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xBE4664", Offset = "0xBE4664", VA = "0xBE4664")]
		public NoSaveDuringPlayAttribute()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public sealed class TagFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xBE5C6C", Offset = "0xBE5C6C", VA = "0xBE5C6C")]
		public TagFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC7F0", Offset = "0x7BC7F0")]
	public sealed class DocumentationSortingAttribute : Attribute
	{
		[Token(Token = "0x200072B")]
		public enum Level
		{
			[Token(Token = "0x40022A0")]
			Undoc,
			[Token(Token = "0x40022A1")]
			API,
			[Token(Token = "0x40022A2")]
			UserRef
		}

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBC20", Offset = "0x7CBC20")]
		private float <SortOrder>k__BackingField;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBC30", Offset = "0x7CBC30")]
		private Level <Category>k__BackingField;

		[Token(Token = "0x1700030C")]
		public float SortOrder
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xBE4214", Offset = "0xBE4214", VA = "0xBE4214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2A9C", Offset = "0x7D2A9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xBE421C", Offset = "0xBE421C", VA = "0xBE421C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2AAC", Offset = "0x7D2AAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public Level Category
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xBE4224", Offset = "0xBE4224", VA = "0xBE4224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2ABC", Offset = "0x7D2ABC")]
			get
			{
				return default(Level);
			}
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xBE422C", Offset = "0xBE422C", VA = "0xBE422C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2ACC", Offset = "0x7D2ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xBE4234", Offset = "0xBE4234", VA = "0xBE4234")]
		public DocumentationSortingAttribute(float sortOrder, Level category)
		{
		}
	}
	[Token(Token = "0x200052A")]
	[SaveDuringPlay]
	public abstract class CinemachineVirtualCameraBase : MonoBehaviour, ICinemachineCamera
	{
		[Token(Token = "0x200072C")]
		public delegate void OnPostPipelineStageDelegate(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState newState, float deltaTime);

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[NoSaveDuringPlay]
		public Action CinemachineGUIDebuggerCallback;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[NoSaveDuringPlay]
		public string[] m_ExcludedPropertiesInInspector;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[NoSaveDuringPlay]
		public CinemachineCore.Stage[] m_LockStageInInspector;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_ValidatingStreamVersion;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_OnValidateCalled;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		[NoSaveDuringPlay]
		private int m_StreamingVersion;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[NoSaveDuringPlay]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBD50", Offset = "0x7CBD50")]
		public int m_Priority;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected OnPostPipelineStageDelegate OnPostPipelineStage;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_previousStateIsValid;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_previousLookAtTarget;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_previousFollowTarget;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool mSlaveStatusUpdated;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CinemachineVirtualCameraBase m_parentVcam;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_QueuePriority;

		[Token(Token = "0x1700030E")]
		public int ValidatingStreamVersion
		{
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xBE14EC", Offset = "0xBE14EC", VA = "0xBE14EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xBE3834", Offset = "0xBE3834", VA = "0xBE3834")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public string Name
		{
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xBE3D7C", Offset = "0xBE3D7C", VA = "0xBE3D7C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public virtual string Description
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xBE3D84", Offset = "0xBE3D84", VA = "0xBE3D84", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		public int Priority
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xBDCEE8", Offset = "0xBDCEE8", VA = "0xBDCEE8", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xBE3DCC", Offset = "0xBE3DCC", VA = "0xBE3DCC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public GameObject VirtualCameraGameObject
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xBDC1F8", Offset = "0xBDC1F8", VA = "0xBDC1F8", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		public abstract CameraState State
		{
			[Token(Token = "0x60023B6")]
			get;
		}

		[Token(Token = "0x17000314")]
		public virtual ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xBE3DD4", Offset = "0xBE3DD4", VA = "0xBE3DD4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		public ICinemachineCamera ParentCamera
		{
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xBE3D40", Offset = "0xBE3D40", VA = "0xBE3D40", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public abstract Transform LookAt
		{
			[Token(Token = "0x60023BA")]
			get;
			[Token(Token = "0x60023BB")]
			set;
		}

		[Token(Token = "0x17000317")]
		public abstract Transform Follow
		{
			[Token(Token = "0x60023BC")]
			get;
			[Token(Token = "0x60023BD")]
			set;
		}

		[Token(Token = "0x17000318")]
		public bool PreviousStateIsValid
		{
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xBDBA34", Offset = "0xBDBA34", VA = "0xBDBA34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xBDC670", Offset = "0xBDC670", VA = "0xBDC670")]
			set
			{
			}
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xBE383C", Offset = "0xBE383C", VA = "0xBE383C", Slot = "19")]
		public virtual void AddPostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xBDB24C", Offset = "0xBDB24C", VA = "0xBDB24C", Slot = "20")]
		public virtual void RemovePostPipelineStageHook(OnPostPipelineStageDelegate d)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xBE34B4", Offset = "0xBE34B4", VA = "0xBE34B4")]
		protected void InvokePostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState newState, float deltaTime)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xBE3ED0", Offset = "0xBE3ED0", VA = "0xBE3ED0", Slot = "24")]
		public virtual bool IsLiveChild(ICinemachineCamera vcam)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C0")]
		public abstract void UpdateCameraState(Vector3 worldUp, float deltaTime);

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xBE3ED8", Offset = "0xBE3ED8", VA = "0xBE3ED8", Slot = "30")]
		public virtual void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime)
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xBE3F1C", Offset = "0xBE3F1C", VA = "0xBE3F1C", Slot = "31")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xBE1960", Offset = "0xBE1960", VA = "0xBE1960", Slot = "32")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xBE1A04", Offset = "0xBE1A04", VA = "0xBE1A04", Slot = "33")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xBDC6C8", Offset = "0xBDC6C8", VA = "0xBDC6C8", Slot = "34")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xBE40B8", Offset = "0xBE40B8", VA = "0xBE40B8", Slot = "35")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xBE40BC", Offset = "0xBE40BC", VA = "0xBE40BC", Slot = "36")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xBE40D4", Offset = "0xBE40D4", VA = "0xBE40D4", Slot = "37")]
		protected virtual void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xBE3DD8", Offset = "0xBE3DD8", VA = "0xBE3DD8")]
		private void UpdateSlaveStatus()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xBDAF58", Offset = "0xBDAF58", VA = "0xBDAF58")]
		protected Transform ResolveLookAt(Transform localLookAt)
		{
			return null;
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xBDB084", Offset = "0xBDB084", VA = "0xBDB084")]
		protected Transform ResolveFollow(Transform localFollow)
		{
			return null;
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xBE3F20", Offset = "0xBE3F20", VA = "0xBE3F20")]
		private void UpdateVcamPoolStatus()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xBE40F8", Offset = "0xBE40F8", VA = "0xBE40F8")]
		public void MoveToTopOfPrioritySubqueue()
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xBDD040", Offset = "0xBDD040", VA = "0xBDD040")]
		protected CinemachineVirtualCameraBase()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public interface ICinemachineCamera
	{
		[Token(Token = "0x17000319")]
		string Name
		{
			[Token(Token = "0x60023CF")]
			get;
		}

		[Token(Token = "0x1700031A")]
		string Description
		{
			[Token(Token = "0x60023D0")]
			get;
		}

		[Token(Token = "0x1700031B")]
		int Priority
		{
			[Token(Token = "0x60023D1")]
			get;
			[Token(Token = "0x60023D2")]
			set;
		}

		[Token(Token = "0x1700031C")]
		Transform LookAt
		{
			[Token(Token = "0x60023D3")]
			get;
			[Token(Token = "0x60023D4")]
			set;
		}

		[Token(Token = "0x1700031D")]
		Transform Follow
		{
			[Token(Token = "0x60023D5")]
			get;
			[Token(Token = "0x60023D6")]
			set;
		}

		[Token(Token = "0x1700031E")]
		CameraState State
		{
			[Token(Token = "0x60023D7")]
			get;
		}

		[Token(Token = "0x1700031F")]
		GameObject VirtualCameraGameObject
		{
			[Token(Token = "0x60023D8")]
			get;
		}

		[Token(Token = "0x17000320")]
		ICinemachineCamera LiveChildOrSelf
		{
			[Token(Token = "0x60023D9")]
			get;
		}

		[Token(Token = "0x17000321")]
		ICinemachineCamera ParentCamera
		{
			[Token(Token = "0x60023DA")]
			get;
		}

		[Token(Token = "0x60023DB")]
		bool IsLiveChild(ICinemachineCamera vcam);

		[Token(Token = "0x60023DC")]
		void UpdateCameraState(Vector3 worldUp, float deltaTime);

		[Token(Token = "0x60023DD")]
		void OnTransitionFromCamera(ICinemachineCamera fromCam, Vector3 worldUp, float deltaTime);
	}
	[Serializable]
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC818", Offset = "0x7BC818")]
	public struct LensSettings
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LensSettings Default;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CBD9C", Offset = "0x7CBD9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBD9C", Offset = "0x7CBD9C")]
		public float FieldOfView;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBDF4", Offset = "0x7CBDF4")]
		public float OrthographicSize;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBE2C", Offset = "0x7CBE2C")]
		public float NearClipPlane;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBE64", Offset = "0x7CBE64")]
		public float FarClipPlane;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CBE9C", Offset = "0x7CBE9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBE9C", Offset = "0x7CBE9C")]
		public float Dutch;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBEF8", Offset = "0x7CBEF8")]
		private bool <Orthographic>k__BackingField;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CBF08", Offset = "0x7CBF08")]
		private float <Aspect>k__BackingField;

		[Token(Token = "0x17000322")]
		internal bool Orthographic
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x8655C0", Offset = "0x8655C0", VA = "0x8655C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2ADC", Offset = "0x7D2ADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x8655C8", Offset = "0x8655C8", VA = "0x8655C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2AEC", Offset = "0x7D2AEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		internal float Aspect
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x8655D4", Offset = "0x8655D4", VA = "0x8655D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2AFC", Offset = "0x7D2AFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x8655DC", Offset = "0x8655DC", VA = "0x8655DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2B0C", Offset = "0x7D2B0C")]
			set
			{
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xBE4280", Offset = "0xBE4280", VA = "0xBE4280")]
		public static LensSettings FromCamera(Camera fromCamera)
		{
			return default(LensSettings);
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x8655E4", Offset = "0x8655E4", VA = "0x8655E4")]
		public LensSettings(float fov, float orthographicSize, float nearClip, float farClip, float dutch, bool ortho, float aspect)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xBE44A0", Offset = "0xBE44A0", VA = "0xBE44A0")]
		public static LensSettings Lerp(LensSettings lensA, LensSettings lensB, float t)
		{
			return default(LensSettings);
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x865608", Offset = "0x865608", VA = "0x865608")]
		public void Validate()
		{
		}
	}
	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC830", Offset = "0x7BC830")]
	public sealed class NoiseSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD530", Offset = "0x7BD530")]
		public struct NoiseParams
		{
			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCC88", Offset = "0x7CCC88")]
			public float Amplitude;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCCC0", Offset = "0x7CCCC0")]
			public float Frequency;
		}

		[Serializable]
		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BD54C", Offset = "0x7BD54C")]
		public struct TransformNoiseParams
		{
			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCCF8", Offset = "0x7CCCF8")]
			public NoiseParams X;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCD30", Offset = "0x7CCD30")]
			public NoiseParams Y;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCD68", Offset = "0x7CCD68")]
			public NoiseParams Z;
		}

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBF18", Offset = "0x7CBF18")]
		private TransformNoiseParams[] m_Position;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBF64", Offset = "0x7CBF64")]
		private TransformNoiseParams[] m_Orientation;

		[Token(Token = "0x17000324")]
		public TransformNoiseParams[] PositionNoise
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xBE466C", Offset = "0xBE466C", VA = "0xBE466C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public TransformNoiseParams[] OrientationNoise
		{
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xBE4674", Offset = "0xBE4674", VA = "0xBE4674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xBE467C", Offset = "0xBE467C", VA = "0xBE467C")]
		public void CopyFrom(NoiseSettings other)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xBE4794", Offset = "0xBE4794", VA = "0xBE4794")]
		public NoiseSettings()
		{
		}
	}
}
namespace Cinemachine.Timeline
{
	[Token(Token = "0x200052E")]
	public sealed class CinemachineMixer : PlayableBehaviour
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CinemachineBrain mBrain;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int mBrainOverrideId;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool mPlaying;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float mLastOverrideFrame;

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xBE5C74", Offset = "0xBE5C74", VA = "0xBE5C74", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xBE5D28", Offset = "0xBE5D28", VA = "0xBE5D28", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xBE6164", Offset = "0xBE6164", VA = "0xBE6164", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xBE6198", Offset = "0xBE6198", VA = "0xBE6198")]
		public CinemachineMixer()
		{
		}
	}
	[Token(Token = "0x200052F")]
	internal sealed class CinemachineShotPlayable : PlayableBehaviour
	{
		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CinemachineVirtualCameraBase VirtualCamera;

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xBE6874", Offset = "0xBE6874", VA = "0xBE6874")]
		public CinemachineShotPlayable()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public sealed class CinemachineShot : PlayableAsset, IPropertyPreview
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<CinemachineVirtualCameraBase> VirtualCamera;

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xBE61A8", Offset = "0xBE61A8", VA = "0xBE61A8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xBE62C0", Offset = "0xBE62C0", VA = "0xBE62C0", Slot = "9")]
		public void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xBE686C", Offset = "0xBE686C", VA = "0xBE686C")]
		public CinemachineShot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x7BC848", Offset = "0x7BC848")]
	[AttributeAttribute(Name = "TrackMediaType", RVA = "0x7BC848", Offset = "0x7BC848")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x7BC848", Offset = "0x7BC848")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x7BC848", Offset = "0x7BC848")]
	public class CinemachineTrack : TrackAsset
	{
		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xBE687C", Offset = "0xBE687C", VA = "0xBE687C", Slot = "19")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xBE6CA8", Offset = "0xBE6CA8", VA = "0xBE6CA8")]
		public CinemachineTrack()
		{
		}
	}
}
namespace Cinemachine.PostFX
{
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC90C", Offset = "0x7BC90C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7BC90C", Offset = "0x7BC90C")]
	[SaveDuringPlay]
	public class CinemachinePostProcessing : CinemachineExtension
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBFB0", Offset = "0x7CBFB0")]
		public bool m_FocusTracksTarget;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CBFE8", Offset = "0x7CBFE8")]
		public float m_FocusOffset;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CC020", Offset = "0x7CC020")]
		public PostProcessProfile m_Profile;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool mCachedProfileIsInvalid;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PostProcessProfile mProfileCopy;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string sVolumeOwnerName;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<PostProcessVolume> sVolumes;

		[Token(Token = "0x17000326")]
		public PostProcessProfile Profile
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xBE4824", Offset = "0xBE4824", VA = "0xBE4824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public bool IsValid
		{
			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xBE48B4", Offset = "0xBE48B4", VA = "0xBE48B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xBE4970", Offset = "0xBE4970", VA = "0xBE4970")]
		public void InvalidateCachedProfile()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0xBE497C", Offset = "0xBE497C", VA = "0xBE497C")]
		private void CreateProfileCopy()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xBE4B8C", Offset = "0xBE4B8C", VA = "0xBE4B8C")]
		private void DestroyProfileCopy()
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0xBE4C40", Offset = "0xBE4C40", VA = "0xBE4C40", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xBE4C68", Offset = "0xBE4C68", VA = "0xBE4C68", Slot = "6")]
		protected override void PostPipelineStageCallback(CinemachineVirtualCameraBase vcam, CinemachineCore.Stage stage, ref CameraState state, float deltaTime)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xBE4E78", Offset = "0xBE4E78", VA = "0xBE4E78")]
		private static void OnCameraCut(CinemachineBrain brain)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xBE4F60", Offset = "0xBE4F60", VA = "0xBE4F60")]
		private static void ApplyPostFX(CinemachineBrain brain)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0xBE52F8", Offset = "0xBE52F8", VA = "0xBE52F8")]
		private static List<PostProcessVolume> GetDynamicBrainVolumes(CinemachineBrain brain, PostProcessLayer ppLayer, int minVolumes)
		{
			return null;
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xBE5738", Offset = "0xBE5738", VA = "0xBE5738")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x7D2B1C", Offset = "0x7D2B1C")]
		public static void InitializeModule()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0xBE5850", Offset = "0xBE5850", VA = "0xBE5850")]
		private static void StaticPostFXHandler(CinemachineBrain brain)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xBE5AA4", Offset = "0xBE5AA4", VA = "0xBE5AA4")]
		public CinemachinePostProcessing()
		{
		}
	}
}
namespace Cinemachine.Utility
{
	[Token(Token = "0x2000533")]
	public class CinemachineGameWindowDebug
	{
		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<UnityEngine.Object> mClients;

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xBE6D10", Offset = "0xBE6D10", VA = "0xBE6D10")]
		public static void ReleaseScreenPos(UnityEngine.Object client)
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xBE6DB8", Offset = "0xBE6DB8", VA = "0xBE6DB8")]
		public static Rect GetScreenPos(UnityEngine.Object client, string text, GUIStyle style)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xBE7064", Offset = "0xBE7064", VA = "0xBE7064")]
		public CinemachineGameWindowDebug()
		{
		}
	}
	[Token(Token = "0x2000534")]
	internal abstract class GaussianWindow1d<T>
	{
		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] mData;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float[] mKernel;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float mKernelSum;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int mCurrentPos;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC058", Offset = "0x7CC058")]
		private float <Sigma>k__BackingField;

		[Token(Token = "0x17000328")]
		public float Sigma
		{
			[Token(Token = "0x6002406")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2B2C", Offset = "0x7D2B2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002407")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D2B3C", Offset = "0x7D2B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public int KernelSize
		{
			[Token(Token = "0x6002408")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002409")]
		private void GenerateKernel(float sigma, int maxKernelRadius)
		{
		}

		[Token(Token = "0x600240A")]
		protected abstract T Compute(int windowPos);

		[Token(Token = "0x600240B")]
		public GaussianWindow1d(float sigma, int maxKernelRadius = 10)
		{
		}

		[Token(Token = "0x600240C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600240D")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x600240E")]
		public void AddValue(T v)
		{
		}

		[Token(Token = "0x600240F")]
		public T Filter(T v)
		{
			return (T)null;
		}

		[Token(Token = "0x6002410")]
		public T Value()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000535")]
	internal class GaussianWindow1D_Vector3 : GaussianWindow1d<Vector3>
	{
		[Token(Token = "0x6002411")]
		[Address(RVA = "0xBE77F8", Offset = "0xBE77F8", VA = "0xBE77F8")]
		public GaussianWindow1D_Vector3(float sigma, int maxKernelRadius = 10)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xBE7868", Offset = "0xBE7868", VA = "0xBE7868", Slot = "4")]
		protected override Vector3 Compute(int windowPos)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000536")]
	internal class GaussianWindow1D_Quaternion : GaussianWindow1d<Quaternion>
	{
		[Token(Token = "0x6002413")]
		[Address(RVA = "0xBE7490", Offset = "0xBE7490", VA = "0xBE7490")]
		public GaussianWindow1D_Quaternion(float sigma, int maxKernelRadius = 10)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xBE7500", Offset = "0xBE7500", VA = "0xBE7500", Slot = "4")]
		protected override Quaternion Compute(int windowPos)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000537")]
	internal class GaussianWindow1D_CameraRotation : GaussianWindow1d<Vector2>
	{
		[Token(Token = "0x6002415")]
		[Address(RVA = "0xBE716C", Offset = "0xBE716C", VA = "0xBE716C")]
		public GaussianWindow1D_CameraRotation(float sigma, int maxKernelRadius = 10)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0xBE71DC", Offset = "0xBE71DC", VA = "0xBE71DC", Slot = "4")]
		protected override Vector2 Compute(int windowPos)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000538")]
	internal class PositionPredictor
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_Position;

		[Token(Token = "0x4001B1E")]
		private const float kSmoothingDefault = 10f;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float mSmoothing;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GaussianWindow1D_Vector3 m_Velocity;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GaussianWindow1D_Vector3 m_Accel;

		[Token(Token = "0x1700032A")]
		public float Smoothing
		{
			[Token(Token = "0x6002417")]
			[Address(RVA = "0xBE7A6C", Offset = "0xBE7A6C", VA = "0xBE7A6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002418")]
			[Address(RVA = "0xBE7A74", Offset = "0xBE7A74", VA = "0xBE7A74")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public bool IsEmpty
		{
			[Token(Token = "0x6002419")]
			[Address(RVA = "0xBE7B90", Offset = "0xBE7B90", VA = "0xBE7B90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xBE7BF0", Offset = "0xBE7BF0", VA = "0xBE7BF0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xBE7C74", Offset = "0xBE7C74", VA = "0xBE7C74")]
		public void AddPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0xBE7EC4", Offset = "0xBE7EC4", VA = "0xBE7EC4")]
		public Vector3 PredictPosition(float lookaheadTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xBE81D0", Offset = "0xBE81D0", VA = "0xBE81D0")]
		public PositionPredictor()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public static class Damper
	{
		[Token(Token = "0x4001B22")]
		private const float Epsilon = 0.0001f;

		[Token(Token = "0x4001B23")]
		public const float kNegligibleResidual = 0.01f;

		[Token(Token = "0x600241E")]
		[Address(RVA = "0xBE706C", Offset = "0xBE706C", VA = "0xBE706C")]
		private static float DecayConstant(float time, float residual)
		{
			return default(float);
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xBE70E8", Offset = "0xBE70E8", VA = "0xBE70E8")]
		private static float Decay(float initial, float decayConstant, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xBDEE30", Offset = "0xBDEE30", VA = "0xBDEE30")]
		public static float Damp(float initial, float dampTime, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xBDF3C4", Offset = "0xBDF3C4", VA = "0xBDF3C4")]
		public static Vector3 Damp(Vector3 initial, Vector3 dampTime, float deltaTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0xBDEEFC", Offset = "0xBDEEFC", VA = "0xBDEEFC")]
		public static Vector3 Damp(Vector3 initial, float dampTime, float deltaTime)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "DocumentationSortingAttribute", RVA = "0x7BC984", Offset = "0x7BC984")]
	public static class ReflectionHelpers
	{
		[Token(Token = "0x6002423")]
		[Address(RVA = "0xBE2A6C", Offset = "0xBE2A6C", VA = "0xBE2A6C")]
		public static void CopyFields(object src, object dst, BindingFlags bindingAttr = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)
		{
		}

		[Token(Token = "0x6002424")]
		public static T AccessInternalField<T>(this Type type, object obj, string memberName)
		{
			return (T)null;
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xBE828C", Offset = "0xBE828C", VA = "0xBE828C")]
		public static object GetParentObject(string path, object obj)
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		public static string GetFieldPath<TType, TValue>(Expression<Func<TType, TValue>> expr)
		{
			return null;
		}
	}
	[Token(Token = "0x200053B")]
	internal static class SplineHelpers
	{
		[Token(Token = "0x6002427")]
		[Address(RVA = "0xBD6BE8", Offset = "0xBD6BE8", VA = "0xBD6BE8")]
		public static Vector3 Bezier3(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0xBD713C", Offset = "0xBD713C", VA = "0xBD713C")]
		public static Vector3 BezierTangent3(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xBDAC68", Offset = "0xBDAC68", VA = "0xBDAC68")]
		public static float Bezier1(float t, float p0, float p1, float p2, float p3)
		{
			return default(float);
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xBE8420", Offset = "0xBE8420", VA = "0xBE8420")]
		public static float BezierTangent1(float t, float p0, float p1, float p2, float p3)
		{
			return default(float);
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xBD9480", Offset = "0xBD9480", VA = "0xBD9480")]
		public static void ComputeSmoothControlPoints(ref Vector4[] knot, ref Vector4[] ctrl1, ref Vector4[] ctrl2)
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xBD8FC4", Offset = "0xBD8FC4", VA = "0xBD8FC4")]
		public static void ComputeSmoothControlPointsLooped(ref Vector4[] knot, ref Vector4[] ctrl1, ref Vector4[] ctrl2)
		{
		}
	}
	[Token(Token = "0x200053C")]
	public static class UnityVectorExtensions
	{
		[Token(Token = "0x4001B24")]
		public const float Epsilon = 0.0001f;

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xBD7D7C", Offset = "0xBD7D7C", VA = "0xBD7D7C")]
		public static float ClosestPointOnSegment(this Vector3 p, Vector3 s0, Vector3 s1)
		{
			return default(float);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xBE90F8", Offset = "0xBE90F8", VA = "0xBE90F8")]
		public static float ClosestPointOnSegment(this Vector2 p, Vector2 s0, Vector2 s1)
		{
			return default(float);
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xBE8880", Offset = "0xBE8880", VA = "0xBE8880")]
		public static Vector3 ProjectOntoPlane(this Vector3 vector, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xBD77FC", Offset = "0xBD77FC", VA = "0xBD77FC")]
		public static bool AlmostZero(this Vector3 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xBE8D44", Offset = "0xBE8D44", VA = "0xBE8D44")]
		public static float SignedAngle(Vector3 from, Vector3 to, Vector3 refNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xBE9254", Offset = "0xBE9254", VA = "0xBE9254")]
		public static Vector3 SlerpWithReferenceUp(Vector3 vA, Vector3 vB, float t, Vector3 up)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200053D")]
	public static class UnityQuaternionExtensions
	{
		[Token(Token = "0x6002433")]
		[Address(RVA = "0xBE8510", Offset = "0xBE8510", VA = "0xBE8510")]
		public static Quaternion SlerpWithReferenceUp(Quaternion qA, Quaternion qB, float t, Vector3 up)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xBDE010", Offset = "0xBDE010", VA = "0xBDE010")]
		public static Quaternion Normalized(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xBE895C", Offset = "0xBE895C", VA = "0xBE895C")]
		public static Vector2 GetCameraRotationToTarget(this Quaternion orient, Vector3 lookAtDir, Vector3 worldUp)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xBE8F10", Offset = "0xBE8F10", VA = "0xBE8F10")]
		public static Quaternion ApplyCameraRotation(this Quaternion orient, Vector2 rot, Vector3 worldUp)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200053E")]
	public static class UnityRectExtensions
	{
		[Token(Token = "0x6002437")]
		[Address(RVA = "0xBE9048", Offset = "0xBE9048", VA = "0xBE9048")]
		public static Rect Inflated(this Rect r, Vector2 delta)
		{
			return default(Rect);
		}
	}
}
