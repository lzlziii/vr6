using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using DigitalOpus.MB.Core;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using Il2CppDummyDll;
using InsaneSystems.Radar.UI;
using MK.Glow.Legacy;
using Pico.Platform;
using Pico.Platform.Models;
using Rewired;
using Rewired.Components;
using Rewired.ControllerExtensions;
using Rewired.Integration.UnityUI;
using Rewired.UI;
using Rewired.UI.ControlMapper;
using Rewired.Utils.Interfaces;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.ParticleSystemJobs;
using UnityEngine.PostProcessing;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VolumetricFogAndMist;
using VortexStudios.PostProcessing;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CubosMisteriosos : TriggerAnimation
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <PlayAnimation>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubosMisteriosos <>4__this;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animation _animation;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <miRigidBody>5__2;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000008")]
			[Address(RVA = "0x72E5D0", Offset = "0x72E5D0", VA = "0x72E5D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000A")]
			[Address(RVA = "0x72E618", Offset = "0x72E618", VA = "0x72E618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0x72E228", Offset = "0x72E228", VA = "0x72E228")]
		[DebuggerHidden]
		public <PlayAnimation>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x72E2F0", Offset = "0x72E2F0", VA = "0x72E2F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0x72E2F4", Offset = "0x72E2F4", VA = "0x72E2F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x72E5D8", Offset = "0x72E5D8", VA = "0x72E5D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 possiblesDelay;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Animation> animations;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float retraso;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool YaLoHice;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x72DFF4", Offset = "0x72DFF4", VA = "0x72DFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x72DFFC", Offset = "0x72DFFC", VA = "0x72DFFC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x72E198", Offset = "0x72E198", VA = "0x72E198")]
	[IteratorStateMachine(typeof(<PlayAnimation>d__6))]
	private IEnumerator PlayAnimation(Animation _animation)
	{
		return null;
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x72E250", Offset = "0x72E250", VA = "0x72E250")]
	public CubosMisteriosos()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class AirplaneNode : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tangentStrength;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tangentAngleOffset;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float multiplier;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3[] controlPoints;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AirplanePath path;

	[Token(Token = "0x17000003")]
	public Vector3 Position
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x72E620", Offset = "0x72E620", VA = "0x72E620")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000004")]
	public Vector3 this[int i]
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0x72E640", Offset = "0x72E640", VA = "0x72E640")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x72E69C", Offset = "0x72E69C", VA = "0x72E69C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x72E9F0", Offset = "0x72E9F0", VA = "0x72E9F0")]
	public AirplaneNode()
	{
	}
}
[Token(Token = "0x2000005")]
[AddComponentMenu("Airplane Path/Airplane Path")]
public class AirplanePath : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	public enum PathLoopingType
	{
		[Token(Token = "0x4000035")]
		Once,
		[Token(Token = "0x4000036")]
		Looping
	}

	[Serializable]
	[Token(Token = "0x2000007")]
	public class GizmoColors
	{
		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color pathColor;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color nodeTangentsColor;

		[Token(Token = "0x6000033")]
		[Address(RVA = "0x732108", Offset = "0x732108", VA = "0x732108")]
		public GizmoColors()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000008")]
	public class AdvancedSettings
	{
		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useLegacyPathAlgorithm;

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x732124", Offset = "0x732124", VA = "0x732124")]
		public AdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PathLoopingType loopingType;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playAtStart;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool deactivatePlaneOnStop;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool destroyOnDeactivate;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[FormerlySerializedAs("keepUpdatingPositions")]
	public bool useWorldSpaceMovement;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useWorldSpaceMovementForRotation;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showGizmos;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GizmoColors gizmoColors;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rollIntensity;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform plane;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AirplaneNode[] nodes;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Enemigo.TipoEnemigo tipoEnemigo;

	[Token(Token = "0x400001E")]
	private const float rollSmoothing = 5f;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float smoothRoll;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float time;

	[Token(Token = "0x4000021")]
	private const int gizmoSplinePrecision = 20;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool SinRotar;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 p0;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 p1;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 p2;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 p3;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 lastSystemPosition;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 lastSystemVelocity;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public GameObject nodeParent;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public Transform lastCreatedNode;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool helicoptero;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float speedMultiplier;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int ticksQueSalto;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float velocidadLerpRotacionBoss;

	[Token(Token = "0x17000005")]
	public bool Playing
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0x72EB64", Offset = "0x72EB64", VA = "0x72EB64")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000012")]
		[Address(RVA = "0x72EB6C", Offset = "0x72EB6C", VA = "0x72EB6C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public int Index
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x72EB78", Offset = "0x72EB78", VA = "0x72EB78")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000014")]
		[Address(RVA = "0x72EB80", Offset = "0x72EB80", VA = "0x72EB80")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0x72EB88", Offset = "0x72EB88", VA = "0x72EB88")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000016")]
		[Address(RVA = "0x72EB94", Offset = "0x72EB94", VA = "0x72EB94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float RollOffset
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x72EBA0", Offset = "0x72EBA0", VA = "0x72EBA0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x72EBA8", Offset = "0x72EBA8", VA = "0x72EBA8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float TurnRollAngle
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x72EBB0", Offset = "0x72EBB0", VA = "0x72EBB0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x72EBB8", Offset = "0x72EBB8", VA = "0x72EBB8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event EventHandler<PathOverEventArgs> PathOver
	{
		[Token(Token = "0x600000F")]
		[Address(RVA = "0x72EA04", Offset = "0x72EA04", VA = "0x72EA04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000010")]
		[Address(RVA = "0x72EAB4", Offset = "0x72EAB4", VA = "0x72EAB4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x72EBC0", Offset = "0x72EBC0", VA = "0x72EBC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x72F890", Offset = "0x72F890", VA = "0x72F890")]
	public void StartPath()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x72F730", Offset = "0x72F730", VA = "0x72F730")]
	public void StartPath(int firstNodeIndex)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x72FA1C", Offset = "0x72FA1C", VA = "0x72FA1C")]
	public void StopPath()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x72FA24", Offset = "0x72FA24", VA = "0x72FA24")]
	public void StopPath(bool deactivatePlane)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x72F898", Offset = "0x72F898", VA = "0x72F898")]
	private bool CheckForProblems(int firstNodeIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x72FC08", Offset = "0x72FC08", VA = "0x72FC08")]
	private void LogNanError()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x72FCB4", Offset = "0x72FCB4", VA = "0x72FCB4")]
	private void UpdateSpeedMultiplier()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x72FD5C", Offset = "0x72FD5C", VA = "0x72FD5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x7310A0", Offset = "0x7310A0", VA = "0x7310A0")]
	private float CalculateRollAngle(float rollFactor)
	{
		return default(float);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x72EE50", Offset = "0x72EE50", VA = "0x72EE50")]
	public void SetControlPoints()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x7313B0", Offset = "0x7313B0", VA = "0x7313B0")]
	private Vector3 CalculateTangent(Vector3 previous, Vector3 next, Vector3 current)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x730F7C", Offset = "0x730F7C", VA = "0x730F7C")]
	private static Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x730EC8", Offset = "0x730EC8", VA = "0x730EC8")]
	private static Vector3 CalculateBezierDerivative(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x731010", Offset = "0x731010", VA = "0x731010")]
	private static Vector3 CalculateBezierSecondDerivative(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x731460", Offset = "0x731460", VA = "0x731460")]
	private void SetPathParent()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x731684", Offset = "0x731684", VA = "0x731684")]
	public void CreateNode()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x72E720", Offset = "0x72E720", VA = "0x72E720")]
	public void OnDestroyedNode(AirplaneNode destroyedNode)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x731A2C", Offset = "0x731A2C", VA = "0x731A2C")]
	public UnityEngine.Object[] GetAllObjects()
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x731BD8", Offset = "0x731BD8", VA = "0x731BD8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x731EA8", Offset = "0x731EA8", VA = "0x731EA8")]
	public bool IsLast(AirplaneNode node)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x731F4C", Offset = "0x731F4C", VA = "0x731F4C")]
	public bool IsFirst(AirplaneNode node)
	{
		return default(bool);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x731128", Offset = "0x731128", VA = "0x731128")]
	public void FixNullErrors()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x731FE4", Offset = "0x731FE4", VA = "0x731FE4")]
	public AirplanePath()
	{
	}
}
[Token(Token = "0x2000009")]
public class PathRealisticSpeed : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mass;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minSpeed;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float baseSpeed;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AirplanePath path;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x73212C", Offset = "0x73212C", VA = "0x73212C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x732294", Offset = "0x732294", VA = "0x732294")]
	private void HandlePathOver(object sender, PathOverEventArgs e)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x7322B4", Offset = "0x7322B4", VA = "0x7322B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x7323FC", Offset = "0x7323FC", VA = "0x7323FC")]
	public PathRealisticSpeed()
	{
	}
}
[Token(Token = "0x200000A")]
public class PathBarrelRoll : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rollingSpeed;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AirplanePath path;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool rolling;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float t;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x732410", Offset = "0x732410", VA = "0x732410")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x732468", Offset = "0x732468", VA = "0x732468")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x732478", Offset = "0x732478", VA = "0x732478")]
	private void Roll()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x7324F0", Offset = "0x7324F0", VA = "0x7324F0")]
	public PathBarrelRoll()
	{
	}
}
[Token(Token = "0x200000B")]
public class PathFreeFall : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gravity;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float drag;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rollWhenFalling;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AirplanePath path;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool falling;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 velocity;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float offsetAngle;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rollingSpeed;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x732500", Offset = "0x732500", VA = "0x732500")]
	private void Start()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x7325C4", Offset = "0x7325C4", VA = "0x7325C4")]
	private void BeginFall(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x7325FC", Offset = "0x7325FC", VA = "0x7325FC")]
	public void FallNow()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x732628", Offset = "0x732628", VA = "0x732628")]
	public void FallNow(Vector3 vel)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x73263C", Offset = "0x73263C", VA = "0x73263C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x732670", Offset = "0x732670", VA = "0x732670")]
	private void Fall()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x732904", Offset = "0x732904", VA = "0x732904")]
	public PathFreeFall()
	{
	}
}
[Token(Token = "0x200000C")]
public class PathStarter : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AirplanePath path;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasFreeFall;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x732920", Offset = "0x732920", VA = "0x732920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x7329EC", Offset = "0x7329EC", VA = "0x7329EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x732A40", Offset = "0x732A40", VA = "0x732A40")]
	public void StartPath()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x732A84", Offset = "0x732A84", VA = "0x732A84")]
	public PathStarter()
	{
	}
}
[Token(Token = "0x200000D")]
public class PathOverEventArgs : EventArgs
{
	[Token(Token = "0x1700000A")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x732A8C", Offset = "0x732A8C", VA = "0x732A8C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x732A98", Offset = "0x732A98", VA = "0x732A98")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float OffsetRollAngle
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x732AA4", Offset = "0x732AA4", VA = "0x732AA4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x732AAC", Offset = "0x732AAC", VA = "0x732AAC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool Deactivated
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x732AB4", Offset = "0x732AB4", VA = "0x732AB4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x732ABC", Offset = "0x732ABC", VA = "0x732ABC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x72FB70", Offset = "0x72FB70", VA = "0x72FB70")]
	public PathOverEventArgs(Vector3 velocity, float offsetRollAngle, bool deactivated)
	{
	}
}
[Token(Token = "0x200000E")]
public class MovingInCircles : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pivot;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool clockwise;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool oscillate;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float t;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x732AC8", Offset = "0x732AC8", VA = "0x732AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x732CE8", Offset = "0x732CE8", VA = "0x732CE8")]
	public MovingInCircles()
	{
	}
}
[Token(Token = "0x200000F")]
public class AQUAS_BubbleBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float averageUpdrift;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterLevel;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainCamera;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject smallBubble;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int smallBubbleCount;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maxSmallBubbleCount;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AQUAS_SmallBubbleBehaviour smallBubbleBehaviour;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x732CF8", Offset = "0x732CF8", VA = "0x732CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x732D70", Offset = "0x732D70", VA = "0x732D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x732ED8", Offset = "0x732ED8", VA = "0x732ED8")]
	private void SmallBubbleSpawner()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x73313C", Offset = "0x73313C", VA = "0x73313C")]
	public AQUAS_BubbleBehaviour()
	{
	}
}
[Token(Token = "0x2000010")]
public class AQUAS_BubbleMorph : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float t2;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Duration of a full morphing cycle")]
	[Space(5f)]
	public float tTarget;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x733144", Offset = "0x733144", VA = "0x733144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x73319C", Offset = "0x73319C", VA = "0x73319C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x733410", Offset = "0x733410", VA = "0x733410")]
	public AQUAS_BubbleMorph()
	{
	}
}
[Token(Token = "0x2000011")]
[RequireComponent(typeof(Rigidbody))]
[AddComponentMenu("AQUAS/Buoyancy")]
public class AQUAS_Buoyancy : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	public enum debugModes
	{
		[Token(Token = "0x400006E")]
		none,
		[Token(Token = "0x400006F")]
		showAffectedFaces,
		[Token(Token = "0x4000070")]
		showForceRepresentation,
		[Token(Token = "0x4000071")]
		showReferenceVolume
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waterLevel;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterDensity;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(5f)]
	public bool useBalanceFactor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 balanceFactor;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(20f)]
	[Range(0f, 1f)]
	public float dynamicSurface;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(1f, 10f)]
	public float bounceFrequency;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Debugging can be ver performance heavy!")]
	[Space(5f)]
	public debugModes debug;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] vertices;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] triangles;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh mesh;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float effWaterDensity;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float regWaterDensity;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float maxWaterDensity;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x733418", Offset = "0x733418", VA = "0x733418")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x733518", Offset = "0x733518", VA = "0x733518")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x734674", Offset = "0x734674", VA = "0x734674")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x73356C", Offset = "0x73356C", VA = "0x73356C")]
	private void AddForce()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x7346E8", Offset = "0x7346E8", VA = "0x7346E8")]
	private Vector3 Center(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x734774", Offset = "0x734774", VA = "0x734774")]
	private Vector3 Normal(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x734974", Offset = "0x734974", VA = "0x734974")]
	private float Area(Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(float);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x73502C", Offset = "0x73502C", VA = "0x73502C")]
	public AQUAS_Buoyancy()
	{
	}
}
[Token(Token = "0x2000013")]
[AddComponentMenu("AQUAS/AQUAS Camera")]
[RequireComponent(typeof(Camera))]
public class AQUAS_Camera : MonoBehaviour
{
	[Token(Token = "0x6000060")]
	[Address(RVA = "0x735040", Offset = "0x735040", VA = "0x735040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x735044", Offset = "0x735044", VA = "0x735044")]
	private void Set()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x7350C8", Offset = "0x7350C8", VA = "0x7350C8")]
	public AQUAS_Camera()
	{
	}
}
[Token(Token = "0x2000014")]
public class AQUAS_Caustics : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] frames;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxCausticDepth;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int frameIndex;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Projector projector;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x7350D0", Offset = "0x7350D0", VA = "0x7350D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x735300", Offset = "0x735300", VA = "0x735300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x735258", Offset = "0x735258", VA = "0x735258")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x7353A0", Offset = "0x7353A0", VA = "0x7353A0")]
	public AQUAS_Caustics()
	{
	}
}
[Token(Token = "0x2000015")]
public class AQUAS_LensEffects : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AQUAS_Parameters.UnderWaterParameters underWaterParameters;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AQUAS_Parameters.GameObjects gameObjects;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AQUAS_Parameters.BubbleSpawnCriteria bubbleSpawnCriteria;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AQUAS_Parameters.WetLens wetLens;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AQUAS_Parameters.CausticSettings causticSettings;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AQUAS_Parameters.Audio soundEffects;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int sprayFrameIndex;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject tenkokuObj;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material airLensMaterial;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material waterPlaneMaterial;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float t;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float t2;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bubbleSpawnTimer;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float defaultFogDensity;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color defaultFogColor;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float defaultFoamContrast;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float defaultBloomIntensity;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float defaultSpecularity;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float defaultRefraction;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool defaultFog;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool defaultSunShaftsEnabled;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool defaultBloomEnabled;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool defaultBlurEnabled;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool defaultVignetteEnabled;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool defaultNoiseEnabled;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	[HideInInspector]
	public bool setAfloatFog;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public bool rundown;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool playSurfaceSplash;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool playDiveSplash;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	private bool playUnderwater;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int bubbleCount;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int maxBubbleCount;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int activePlane;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lastActivePlane;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FieldInfo fi;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PostProcessingBehaviour postProcessing;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource waterLensAudio;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource airLensAudio;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource audioComp;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource cameraAudio;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Projector primaryCausticsProjector;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Projector secondaryCausticsProjector;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AQUAS_Caustics primaryAquasCaustics;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AQUAS_Caustics secondaryAquasCaustics;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AQUAS_BubbleBehaviour bubbleBehaviour;

	[Token(Token = "0x1700000D")]
	public bool underWater
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x7353A8", Offset = "0x7353A8", VA = "0x7353A8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x7353B0", Offset = "0x7353B0", VA = "0x7353B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x7353BC", Offset = "0x7353BC", VA = "0x7353BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x735918", Offset = "0x735918", VA = "0x735918")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x736D48", Offset = "0x736D48", VA = "0x736D48")]
	private bool CheckIfUnderWater(int waterPlanesCount)
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x7362C8", Offset = "0x7362C8", VA = "0x7362C8")]
	private void CheckIfStillUnderWater()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x736C1C", Offset = "0x736C1C", VA = "0x736C1C")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x73668C", Offset = "0x73668C", VA = "0x73668C")]
	private void BubbleSpawner()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x737744", Offset = "0x737744", VA = "0x737744")]
	public AQUAS_LensEffects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class AQUAS_Parameters
{
	[Serializable]
	[Token(Token = "0x2000017")]
	public class UnderWaterParameters
	{
		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(5f)]
		[Header("The following parameters apply for underwater only!")]
		public float fogDensity;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color fogColor;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(5f)]
		[Header("Post Processing Profiles (Must NOT be empty!)")]
		[Space(5f)]
		public UnityEngine.PostProcessing.PostProcessingProfile underwaterProfile;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.PostProcessing.PostProcessingProfile defaultProfile;

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x737940", Offset = "0x737940", VA = "0x737940")]
		public UnderWaterParameters()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000018")]
	public class GameObjects
	{
		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Space(5f)]
		[Header("Set the game objects required for underwater mode.")]
		public GameObject mainCamera;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterLens;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject airLens;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bubble;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(5f)]
		[Header("Set waterplanes array size = number of waterplanes")]
		public List<GameObject> waterPlanes;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useSquaredPlanes;

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x737954", Offset = "0x737954", VA = "0x737954")]
		public GameObjects()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000019")]
	public class WetLens
	{
		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Set how long the lens stays wet after diving up.")]
		public float wetTime;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space(5f)]
		[Header("Set how long the lens needs to dry.")]
		public float dryingTime;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		public Texture2D[] sprayFrames;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D[] sprayFramesCutout;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rundownSpeed;

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x737A08", Offset = "0x737A08", VA = "0x737A08")]
		public WetLens()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001A")]
	public class CausticSettings
	{
		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("The following values are 'Afloat'/'Underwater'")]
		public Vector2 causticIntensity;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 causticTiling;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxCausticDepth;

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x737A24", Offset = "0x737A24", VA = "0x737A24")]
		public CausticSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001B")]
	public class Audio
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip[] sounds;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float underwaterVolume;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float surfacingVolume;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float diveVolume;

		[Token(Token = "0x6000075")]
		[Address(RVA = "0x737A38", Offset = "0x737A38", VA = "0x737A38")]
		public Audio()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001C")]
	public class BubbleSpawnCriteria
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Spawn Criteria for big bubbles")]
		public int minBubbleCount;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxBubbleCount;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		public float maxSpawnDistance;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float averageUpdrift;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(5f)]
		public float baseScale;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float avgScaleSummand;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Spawn Timer for initial dive")]
		[Space(5f)]
		public float minSpawnTimer;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxSpawnTimer;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(5f)]
		[Header("Spawn Timer for long dive")]
		public float minSpawnTimerL;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxSpawnTimerL;

		[Token(Token = "0x6000076")]
		[Address(RVA = "0x7379DC", Offset = "0x7379DC", VA = "0x7379DC")]
		public BubbleSpawnCriteria()
		{
		}
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x737A40", Offset = "0x737A40", VA = "0x737A40")]
	public AQUAS_Parameters()
	{
	}
}
[Token(Token = "0x200001D")]
[AddComponentMenu("AQUAS/Reflection")]
[ExecuteInEditMode]
public class AQUAS_Reflection : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ignoreOcclusionCulling;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x737A48", Offset = "0x737A48", VA = "0x737A48")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x738F04", Offset = "0x738F04", VA = "0x738F04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x7388A0", Offset = "0x7388A0", VA = "0x7388A0")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x738350", Offset = "0x738350", VA = "0x738350")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x7392D4", Offset = "0x7392D4", VA = "0x7392D4")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x738C04", Offset = "0x738C04", VA = "0x738C04")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x738DB4", Offset = "0x738DB4", VA = "0x738DB4")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x738B70", Offset = "0x738B70", VA = "0x738B70")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x7392F4", Offset = "0x7392F4", VA = "0x7392F4")]
	public AQUAS_Reflection()
	{
	}
}
[Token(Token = "0x200001E")]
[AddComponentMenu("AQUAS/Render Queue Controller")]
[ExecuteInEditMode]
public class AQUAS_RenderQueueEditor : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int renderQueueIndex;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x739390", Offset = "0x739390", VA = "0x739390")]
	public AQUAS_RenderQueueEditor()
	{
	}
}
[Token(Token = "0x200001F")]
public class AQUAS_SmallBubbleBehaviour : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float averageUpdrift;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterLevel;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainCamera;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float updriftFactor;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x7393A0", Offset = "0x7393A0", VA = "0x7393A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x7393D0", Offset = "0x7393D0", VA = "0x7393D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x739538", Offset = "0x739538", VA = "0x739538")]
	public AQUAS_SmallBubbleBehaviour()
	{
	}
}
[Token(Token = "0x2000020")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("KriptoFX/Explosion_Bloom")]
[ExecuteInEditMode]
[ImageEffectAllowedInSceneView]
public class Explosion_Bloom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000021")]
	public struct Settings
	{
		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[Tooltip("Filters out pixels under this level of brightness.")]
		public float threshold;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		[Tooltip("Makes transition between under/over-threshold gradual.")]
		[Range(0f, 1f)]
		public float softKnee;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		[Tooltip("Changes extent of veiling effects in a screen resolution-independent fashion.")]
		[Range(1f, 7f)]
		public float radius;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[Tooltip("Blend factor of the result image.")]
		public float intensity;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[Tooltip("Controls filter quality and buffer resolution.")]
		public bool highQuality;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Reduces flashing noise with an additional filter.")]
		[SerializeField]
		public bool antiFlicker;

		[Token(Token = "0x17000011")]
		public float thresholdGamma
		{
			[Token(Token = "0x600008E")]
			[Address(RVA = "0x73A3A8", Offset = "0x73A3A8", VA = "0x73A3A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000012")]
		public float thresholdLinear
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x73A2E8", Offset = "0x73A2E8", VA = "0x73A2E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000013")]
		public static Settings defaultSettings
		{
			[Token(Token = "0x6000090")]
			[Address(RVA = "0x73A390", Offset = "0x73A390", VA = "0x73A390")]
			get
			{
				return default(Settings);
			}
		}
	}

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Settings settings;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private Shader m_Shader;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material m_Material;

	[Token(Token = "0x40000D6")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_Threshold;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_Curve;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_PrefilterOffs;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_SampleScale;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_Intensity;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_BaseTex;

	[Token(Token = "0x1700000E")]
	public Shader shader
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x739540", Offset = "0x739540", VA = "0x739540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public Material material
	{
		[Token(Token = "0x6000085")]
		[Address(RVA = "0x7395DC", Offset = "0x7395DC", VA = "0x7395DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public static bool supportsDX11
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x7399A4", Offset = "0x7399A4", VA = "0x7399A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x739738", Offset = "0x739738", VA = "0x739738")]
	public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x739670", Offset = "0x739670", VA = "0x739670")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x7399D0", Offset = "0x7399D0", VA = "0x7399D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x739AEC", Offset = "0x739AEC", VA = "0x739AEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x739B28", Offset = "0x739B28", VA = "0x739B28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x739BBC", Offset = "0x739BBC", VA = "0x739BBC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x73A2FC", Offset = "0x73A2FC", VA = "0x73A2FC")]
	public Explosion_Bloom()
	{
	}
}
[Token(Token = "0x2000022")]
public class ExplosionsBillboard : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Camera;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Active;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoInitCamera;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myContainer;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camT;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform contT;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x73A3B8", Offset = "0x73A3B8", VA = "0x73A3B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x73A5F4", Offset = "0x73A5F4", VA = "0x73A5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x73A778", Offset = "0x73A778", VA = "0x73A778")]
	public ExplosionsBillboard()
	{
	}
}
[Token(Token = "0x2000023")]
public class ExplosionsDeactivateRendererByTime : MonoBehaviour
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelay;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x73A788", Offset = "0x73A788", VA = "0x73A788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x73A7E0", Offset = "0x73A7E0", VA = "0x73A7E0")]
	private void DeactivateRenderer()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x73A800", Offset = "0x73A800", VA = "0x73A800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x73A868", Offset = "0x73A868", VA = "0x73A868")]
	public ExplosionsDeactivateRendererByTime()
	{
	}
}
[Token(Token = "0x2000024")]
public class ExplosionsLightCurves : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x73A878", Offset = "0x73A878", VA = "0x73A878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x73A8FC", Offset = "0x73A8FC", VA = "0x73A8FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x73A920", Offset = "0x73A920", VA = "0x73A920")]
	private void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x73A994", Offset = "0x73A994", VA = "0x73A994")]
	public ExplosionsLightCurves()
	{
	}
}
[Token(Token = "0x2000025")]
[ExecuteInEditMode]
public class ExplosionsParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x73A9DC", Offset = "0x73A9DC", VA = "0x73A9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x73A9E8", Offset = "0x73A9E8", VA = "0x73A9E8")]
	public ExplosionsParticleSystemScaler()
	{
	}
}
[Token(Token = "0x2000026")]
public class ExplosionsScaleCurves : MonoBehaviour
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ScaleCurveX;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ScaleCurveY;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ScaleCurveZ;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 GraphTimeMultiplier;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 GraphScaleMultiplier;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startTime;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform t;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float evalX;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float evalY;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float evalZ;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x73A9F8", Offset = "0x73A9F8", VA = "0x73A9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x73AA1C", Offset = "0x73AA1C", VA = "0x73AA1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x73AA40", Offset = "0x73AA40", VA = "0x73AA40")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x73AB04", Offset = "0x73AB04", VA = "0x73AB04")]
	public ExplosionsScaleCurves()
	{
	}
}
[Token(Token = "0x2000027")]
public class ExplosionsShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient Color;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeMultiplier;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material matInstance;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color oldColor;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x73ABFC", Offset = "0x73ABFC", VA = "0x73ABFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x73AD90", Offset = "0x73AD90", VA = "0x73AD90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x73ADB4", Offset = "0x73ADB4", VA = "0x73ADB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x73AE3C", Offset = "0x73AE3C", VA = "0x73AE3C")]
	public ExplosionsShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000028")]
public class ExplosionsShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x73AEE4", Offset = "0x73AEE4", VA = "0x73AEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x73B058", Offset = "0x73B058", VA = "0x73B058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x73B07C", Offset = "0x73B07C", VA = "0x73B07C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x73B0F4", Offset = "0x73B0F4", VA = "0x73B0F4")]
	public ExplosionsShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000029")]
public class ExplosionsShaderQueue : MonoBehaviour
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int AddQueue;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x73B17C", Offset = "0x73B17C", VA = "0x73B17C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x73B28C", Offset = "0x73B28C", VA = "0x73B28C")]
	private void SetProjectorQueue()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x73B308", Offset = "0x73B308", VA = "0x73B308")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x73B39C", Offset = "0x73B39C", VA = "0x73B39C")]
	public ExplosionsShaderQueue()
	{
	}
}
[Token(Token = "0x200002A")]
internal class ExplosionsSpriteSheetAnimation : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	[CompilerGenerated]
	private sealed class <UpdateCorutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionsSpriteSheetAnimation <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x73BD60", Offset = "0x73BD60", VA = "0x73BD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BE")]
			[Address(RVA = "0x73BDA8", Offset = "0x73BDA8", VA = "0x73BDA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x73B824", Offset = "0x73B824", VA = "0x73B824")]
		[DebuggerHidden]
		public <UpdateCorutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x73BBFC", Offset = "0x73BBFC", VA = "0x73BBFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x73BC00", Offset = "0x73BC00", VA = "0x73BC00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x73BD68", Offset = "0x73BD68", VA = "0x73BD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AnimationFPS;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartFrameOffset;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float StartDelay;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isInizialised;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int index;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int allCount;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float animationLifeTime;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isVisible;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float animationStartTime;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool animationStoped;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x73B3AC", Offset = "0x73B3AC", VA = "0x73B3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x73B420", Offset = "0x73B420", VA = "0x73B420")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x73B674", Offset = "0x73B674", VA = "0x73B674")]
	private void Play()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x73B778", Offset = "0x73B778", VA = "0x73B778")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x73B798", Offset = "0x73B798", VA = "0x73B798")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x73B7C8", Offset = "0x73B7C8", VA = "0x73B7C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x73B704", Offset = "0x73B704", VA = "0x73B704")]
	[IteratorStateMachine(typeof(<UpdateCorutine>d__26))]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x73B84C", Offset = "0x73B84C", VA = "0x73B84C")]
	private void UpdateFrame()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x73B970", Offset = "0x73B970", VA = "0x73B970")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x73BB04", Offset = "0x73BB04", VA = "0x73BB04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x73BBA4", Offset = "0x73BBA4", VA = "0x73BBA4")]
	public ExplosionsSpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
public class InverseKinematics : MonoBehaviour
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform upperArm;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform forearm;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hand;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform elbow;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform target;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(20f)]
	public Vector3 uppperArm_OffsetRotation;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 forearm_OffsetRotation;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 hand_OffsetRotation;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Space(20f)]
	public bool handMatchesTargetRotation;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Space(20f)]
	public bool debug;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float angle;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float upperArm_Length;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float forearm_Length;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float arm_Length;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float targetDistance;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float adyacent;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x73BDB0", Offset = "0x73BDB0", VA = "0x73BDB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x73C49C", Offset = "0x73C49C", VA = "0x73C49C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x73C748", Offset = "0x73C748", VA = "0x73C748")]
	public InverseKinematics()
	{
	}
}
[Token(Token = "0x200002D")]
public class LanguageManager
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TMP_FontAsset fuenteOccidental;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset fuenteOccidentalNegra;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset fuenteOccidentalSinBorde;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font fuenteStandardOccidental;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset fuenteOccidental2;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_FontAsset fuenteOccidentalNegra2;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_FontAsset fuenteOccidentalSinBorde2;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Font fuenteStandardOccidental2;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_FontAsset fuenteOccidental3;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TMP_FontAsset fuenteOccidentalNegra3;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_FontAsset fuenteOccidentalSinBorde3;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Font fuenteStandardOccidental3;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_FontAsset fuenteJaponesa;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TMP_FontAsset fuenteJaponesaNegra;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TMP_FontAsset fuenteJaponesaSinBorde;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Font fuenteStandardJaponesa;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_FontAsset fuenteChina;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_FontAsset fuenteChinaNegra;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_FontAsset fuenteChinaSinBorde;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Font fuenteStandardChina;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_FontAsset fuenteKoreana;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_FontAsset fuenteKoreanaNegra;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_FontAsset fuenteKoreanaSinBorde;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Font fuenteStandardKoreana;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TMP_FontAsset fuenteRusa;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TMP_FontAsset fuenteRusaNegra;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TMP_FontAsset fuenteRusaSinBorde;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Font fuenteStandardRusa;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager sharedinstance;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public UnityEvent enCambioDeIdioma;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<string> idiomas;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Dictionary<string, string> Idioma;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string idiomaActual;

	[Token(Token = "0x17000016")]
	public static LanguageManager instance
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x73C758", Offset = "0x73C758", VA = "0x73C758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x73C810", Offset = "0x73C810", VA = "0x73C810")]
	public LanguageManager()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x73D5C4", Offset = "0x73D5C4", VA = "0x73D5C4")]
	private void CargarIdioma(string idiomaActual)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x73D9B8", Offset = "0x73D9B8", VA = "0x73D9B8")]
	public string DameTexto(string key, [Optional] TextMeshProUGUI texto, bool fuenteNegra = false, bool fuenteAzulSinBorde = false, bool cambioDeFuente = true, int occidental = 1)
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x73DB2C", Offset = "0x73DB2C", VA = "0x73DB2C")]
	public TMP_FontAsset GetFontAsset(bool cambioDeFuente = true, int occidental = 1)
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x73DC50", Offset = "0x73DC50", VA = "0x73DC50")]
	public TMP_FontAsset GetFuentePro(bool fuenteNegra = false, bool fuenteAzulSinBorde = false, bool cambioDeFuente = true, int occidental = 1)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x73DE20", Offset = "0x73DE20", VA = "0x73DE20")]
	public Font GetFuenteStandar(int occidental = 1)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x73DF44", Offset = "0x73DF44", VA = "0x73DF44")]
	public string DameTexto(string key, [Optional] Text texto, bool cambioDeFuente = true, int occidental = 1)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x73E0B4", Offset = "0x73E0B4", VA = "0x73E0B4")]
	public bool ContieneKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x73E10C", Offset = "0x73E10C", VA = "0x73E10C")]
	public string DameTexto(string key)
	{
		return null;
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x73E210", Offset = "0x73E210", VA = "0x73E210")]
	public void CambiarIdioma([Optional] TextMeshProUGUI texto, [Optional] TextMeshProUGUI texto2)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x73E31C", Offset = "0x73E31C", VA = "0x73E31C")]
	public void EventoCambioIdioma()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x73D518", Offset = "0x73D518", VA = "0x73D518")]
	private bool ComprobarSiExisteIdioma(string idioma)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(TextMeshProUGUI))]
public class TraducirEsteTexto : MonoBehaviour
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string textoOriginal;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI texto;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool esTituloPausa;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fuenteNegra;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool fuenteSinBorde;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool enMinuscula;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool enMayuscula;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool combinar;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool cambiarFuente;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int occidental;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x73F338", Offset = "0x73F338", VA = "0x73F338")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x73F468", Offset = "0x73F468", VA = "0x73F468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x73F7DC", Offset = "0x73F7DC", VA = "0x73F7DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x73F874", Offset = "0x73F874", VA = "0x73F874")]
	private void TraducemeEsto()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x73F66C", Offset = "0x73F66C", VA = "0x73F66C")]
	private void Combinar()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x73F9B4", Offset = "0x73F9B4", VA = "0x73F9B4")]
	public TraducirEsteTexto()
	{
	}
}
[Token(Token = "0x200002F")]
public class TraducirEsteTextoNormal : MonoBehaviour
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string textoOriginal;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text texto;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMesh textoM;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro textoP;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool TextMesh;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool TextMeshPro;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool fuenteNegra;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int occidental;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x73F9C8", Offset = "0x73F9C8", VA = "0x73F9C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x73FAF4", Offset = "0x73FAF4", VA = "0x73FAF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x73FCC0", Offset = "0x73FCC0", VA = "0x73FCC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x73FD58", Offset = "0x73FD58", VA = "0x73FD58")]
	private void TraducemeEsto()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x73FE3C", Offset = "0x73FE3C", VA = "0x73FE3C")]
	public TraducirEsteTextoNormal()
	{
	}
}
[Token(Token = "0x2000030")]
public class LoadingCamera : MonoBehaviour
{
	[Token(Token = "0x2000031")]
	public enum EstadosCamaraLoading
	{
		[Token(Token = "0x400017F")]
		desactivada,
		[Token(Token = "0x4000180")]
		enTransicionActivar,
		[Token(Token = "0x4000181")]
		enTransicionDesactivar,
		[Token(Token = "0x4000182")]
		pantallaNegraActivada,
		[Token(Token = "0x4000183")]
		cargandoEscena
	}

	[Token(Token = "0x2000032")]
	[CompilerGenerated]
	private sealed class <ActivarPantallaNegraSync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocidad;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool sinImagen;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <aux>5__2;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <aux2>5__3;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000EE")]
			[Address(RVA = "0x740CBC", Offset = "0x740CBC", VA = "0x740CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F0")]
			[Address(RVA = "0x740D04", Offset = "0x740D04", VA = "0x740D04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x7405A8", Offset = "0x7405A8", VA = "0x7405A8")]
		[DebuggerHidden]
		public <ActivarPantallaNegraSync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x7408BC", Offset = "0x7408BC", VA = "0x7408BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x7408C0", Offset = "0x7408C0", VA = "0x7408C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x740CC4", Offset = "0x740CC4", VA = "0x740CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[CompilerGenerated]
	private sealed class <DesactivarPantallaNegraSync>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocidad;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <aux>5__2;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <aux2>5__3;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <t>5__4;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0x7410E0", Offset = "0x7410E0", VA = "0x7410E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0x741128", Offset = "0x741128", VA = "0x741128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x7406F0", Offset = "0x7406F0", VA = "0x7406F0")]
		[DebuggerHidden]
		public <DesactivarPantallaNegraSync>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x740D0C", Offset = "0x740D0C", VA = "0x740D0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x740D10", Offset = "0x740D10", VA = "0x740D10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x7410E8", Offset = "0x7410E8", VA = "0x7410E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <CargarEscenaAsync>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingCamera <>4__this;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocidad;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string escena;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool nivel;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool desactivarPantallaNegraAutomaticamente;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperation <async2>5__3;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <t2>5__5;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FA")]
			[Address(RVA = "0x741620", Offset = "0x741620", VA = "0x741620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FC")]
			[Address(RVA = "0x741668", Offset = "0x741668", VA = "0x741668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x74088C", Offset = "0x74088C", VA = "0x74088C")]
		[DebuggerHidden]
		public <CargarEscenaAsync>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x741130", Offset = "0x741130", VA = "0x741130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x741134", Offset = "0x741134", VA = "0x741134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x741628", Offset = "0x741628", VA = "0x741628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoadingCamera instance;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Imagenes y Textos LoadingScreen")]
	public Image imagenLoading;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject canvasImagenes;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvas1976;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvas2076;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Fondo Negro")]
	public Image fondoNegro;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject canvasLoading;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform posicionCabeza;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform camara;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera m_camera;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EstadosCamaraLoading estadoActual;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine ActivacionCor;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine DesactivacionCor;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine corrutina;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool pararCorrutina;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine cargandoEscena;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x73FE4C", Offset = "0x73FE4C", VA = "0x73FE4C")]
	private void RecolocarCamara()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x7401DC", Offset = "0x7401DC", VA = "0x7401DC")]
	private void informarCanvasSegunJuego()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x73FF48", Offset = "0x73FF48", VA = "0x73FF48")]
	private void RecolocarCanvasImagenes(bool reposicionar)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x740210", Offset = "0x740210", VA = "0x740210")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x740250", Offset = "0x740250", VA = "0x740250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x740468", Offset = "0x740468", VA = "0x740468")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x74046C", Offset = "0x74046C", VA = "0x74046C")]
	public Coroutine ActivarCamaraNegraAsync(float velocidad = 1f, bool sinImagen = false)
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x740574", Offset = "0x740574", VA = "0x740574")]
	public void ActivarCamaraNegraInstantanea()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x7405A0", Offset = "0x7405A0", VA = "0x7405A0")]
	public EstadosCamaraLoading GetEstado()
	{
		return default(EstadosCamaraLoading);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x7404DC", Offset = "0x7404DC", VA = "0x7404DC")]
	[IteratorStateMachine(typeof(<ActivarPantallaNegraSync>d__25))]
	public IEnumerator ActivarPantallaNegraSync(float velocidad = 1f, bool sinImagen = false)
	{
		return null;
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x7405D0", Offset = "0x7405D0", VA = "0x7405D0")]
	public void TerminarTodasLasCorrutinas()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x74060C", Offset = "0x74060C", VA = "0x74060C")]
	public Coroutine DesactivarCamaraNegraAsync(float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x74066C", Offset = "0x74066C", VA = "0x74066C")]
	[IteratorStateMachine(typeof(<DesactivarPantallaNegraSync>d__28))]
	public IEnumerator DesactivarPantallaNegraSync(float velocidad = 1f)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x740718", Offset = "0x740718", VA = "0x740718")]
	public void CargarEscena(string escena, bool nivel = false, bool desactivarPantallaNegraAutomaticamente = true, float velocidad = 0.5f)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x740860", Offset = "0x740860", VA = "0x740860")]
	public void PonerPantallaNegraSiEstaDesactivada()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x7407A0", Offset = "0x7407A0", VA = "0x7407A0")]
	[IteratorStateMachine(typeof(<CargarEscenaAsync>d__32))]
	public IEnumerator CargarEscenaAsync(string escena, bool nivel = false, bool desactivarPantallaNegraAutomaticamente = true, float velocidad = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x7408B4", Offset = "0x7408B4", VA = "0x7408B4")]
	public LoadingCamera()
	{
	}
}
[Token(Token = "0x2000035")]
public class Roll_Wheels : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wheelDiameter;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float wheelLength;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 oldPosition;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 newPosition;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distance;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x741670", Offset = "0x741670", VA = "0x741670")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x741690", Offset = "0x741690", VA = "0x741690")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x741798", Offset = "0x741798", VA = "0x741798")]
	public Roll_Wheels()
	{
	}
}
[Token(Token = "0x2000036")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x7417A8", Offset = "0x7417A8", VA = "0x7417A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x741CBC", Offset = "0x741CBC", VA = "0x741CBC")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x741EB0", Offset = "0x741EB0", VA = "0x741EB0")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000037")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000103")]
	[Address(RVA = "0x741F24", Offset = "0x741F24", VA = "0x741F24")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x741FBC", Offset = "0x741FBC", VA = "0x741FBC")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000038")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x741FC4", Offset = "0x741FC4", VA = "0x741FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x742118", Offset = "0x742118", VA = "0x742118")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7422B0", Offset = "0x7422B0", VA = "0x7422B0")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x7428E8", Offset = "0x7428E8", VA = "0x7428E8")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000039")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000109")]
	[Address(RVA = "0x7428F0", Offset = "0x7428F0", VA = "0x7428F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x742988", Offset = "0x742988", VA = "0x742988")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200003A")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	[CompilerGenerated]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0x7431A8", Offset = "0x7431A8", VA = "0x7431A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000115")]
			[Address(RVA = "0x7431F0", Offset = "0x7431F0", VA = "0x7431F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x742EEC", Offset = "0x742EEC", VA = "0x742EEC")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x743034", Offset = "0x743034", VA = "0x743034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x743038", Offset = "0x743038", VA = "0x743038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x7431B0", Offset = "0x7431B0", VA = "0x7431B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x742990", Offset = "0x742990", VA = "0x742990")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x742A14", Offset = "0x742A14", VA = "0x742A14")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x742E78", Offset = "0x742E78", VA = "0x742E78")]
	[IteratorStateMachine(typeof(<largeNumber>d__6))]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x742F14", Offset = "0x742F14", VA = "0x742F14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x742FAC", Offset = "0x742FAC", VA = "0x742FAC")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x200003C")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x7431F8", Offset = "0x7431F8", VA = "0x7431F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x743248", Offset = "0x743248", VA = "0x743248")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x7432C8", Offset = "0x7432C8", VA = "0x7432C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x743360", Offset = "0x743360", VA = "0x743360")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x200003D")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x743368", Offset = "0x743368", VA = "0x743368")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x743498", Offset = "0x743498", VA = "0x743498")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200003E")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x600011C")]
	[Address(RVA = "0x7434A0", Offset = "0x7434A0", VA = "0x7434A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x743538", Offset = "0x743538", VA = "0x743538")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x200003F")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x743540", Offset = "0x743540", VA = "0x743540")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x743734", Offset = "0x743734", VA = "0x743734")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x7444A0", Offset = "0x7444A0", VA = "0x7444A0")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x7445AC", Offset = "0x7445AC", VA = "0x7445AC")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000040")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x7445B4", Offset = "0x7445B4", VA = "0x7445B4")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x74464C", Offset = "0x74464C", VA = "0x74464C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x7446EC", Offset = "0x7446EC", VA = "0x7446EC")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x2000041")]
[AddComponentMenu("KriptoFX/RFX1_BloomAndDistortion")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
public class FPS_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Camera render texture resolution")]
	[Range(0.05f, 1f)]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseBloom;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.1f, 3f)]
	[Tooltip("Filters out pixels under this level of brightness.")]
	public float Threshold;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Makes transition between under/over-threshold gradual.")]
	[SerializeField]
	[Range(0f, 1f)]
	public float SoftKnee;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Changes extent of veiling effects in A screen resolution-independent fashion.")]
	[Range(1f, 7f)]
	public float Radius;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Blend factor of the result image.")]
	public float Intensity;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Controls filter quality and buffer resolution.")]
	public bool HighQuality;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[Tooltip("Reduces flashing noise with an additional filter.")]
	public bool AntiFlicker;

	[Token(Token = "0x40001C8")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/FPS_Bloom";

	[Token(Token = "0x40001C9")]
	private const string shaderAdditiveName = "Hidden/KriptoFX/PostEffects/FPS_BloomAdditive";

	[Token(Token = "0x40001CA")]
	private const string cameraName = "MobileCamera(Distort_Bloom_Depth)";

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture source;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture depth;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture destination;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previuosFrameWidth;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int previuosFrameHeight;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float previousScale;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera addCamera;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempGO;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool HDRSupported;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material m_Material;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_MaterialAdditive;

	[Token(Token = "0x40001D6")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x1700001F")]
	public Material mat
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x7446F4", Offset = "0x7446F4", VA = "0x7446F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public Material matAdditive
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x74485C", Offset = "0x74485C", VA = "0x74485C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x744794", Offset = "0x744794", VA = "0x744794")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x744914", Offset = "0x744914", VA = "0x744914")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x744A98", Offset = "0x744A98", VA = "0x744A98")]
	private void Start()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x744CBC", Offset = "0x744CBC", VA = "0x744CBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x745854", Offset = "0x745854", VA = "0x745854")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x744A9C", Offset = "0x744A9C", VA = "0x744A9C")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x74507C", Offset = "0x74507C", VA = "0x74507C")]
	private void UpdateBloom()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x744E34", Offset = "0x744E34", VA = "0x744E34")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x7458C8", Offset = "0x7458C8", VA = "0x7458C8")]
	public FPS_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000042")]
public class FPSLightCurves : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x7459B4", Offset = "0x7459B4", VA = "0x7459B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x745A38", Offset = "0x745A38", VA = "0x745A38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x745A5C", Offset = "0x745A5C", VA = "0x745A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x745AD0", Offset = "0x745AD0", VA = "0x745AD0")]
	public FPSLightCurves()
	{
	}
}
[Token(Token = "0x2000043")]
[ExecuteInEditMode]
public class FPSParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x745B18", Offset = "0x745B18", VA = "0x745B18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x745B24", Offset = "0x745B24", VA = "0x745B24")]
	public FPSParticleSystemScaler()
	{
	}
}
[Token(Token = "0x2000044")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x745B34", Offset = "0x745B34", VA = "0x745B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x745B58", Offset = "0x745B58", VA = "0x745B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x745C2C", Offset = "0x745C2C", VA = "0x745C2C")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000045")]
public class FPSShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient Color;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeMultiplier;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material matInstance;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color oldColor;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x745C3C", Offset = "0x745C3C", VA = "0x745C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x745F20", Offset = "0x745F20", VA = "0x745F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x745F44", Offset = "0x745F44", VA = "0x745F44")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x745FCC", Offset = "0x745FCC", VA = "0x745FCC")]
	public FPSShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000046")]
public class FPSShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x746074", Offset = "0x746074", VA = "0x746074")]
	private void Start()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x746338", Offset = "0x746338", VA = "0x746338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x74635C", Offset = "0x74635C", VA = "0x74635C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x7463D4", Offset = "0x7463D4", VA = "0x7463D4")]
	public FPSShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000047")]
public class MaterialType : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000048")]
	public enum MaterialTypeEnum
	{
		[Token(Token = "0x40001FA")]
		Plaster,
		[Token(Token = "0x40001FB")]
		Metall,
		[Token(Token = "0x40001FC")]
		Folliage,
		[Token(Token = "0x40001FD")]
		Rock,
		[Token(Token = "0x40001FE")]
		Wood,
		[Token(Token = "0x40001FF")]
		Brick,
		[Token(Token = "0x4000200")]
		Concrete,
		[Token(Token = "0x4000201")]
		Dirt,
		[Token(Token = "0x4000202")]
		Glass,
		[Token(Token = "0x4000203")]
		Water
	}

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialTypeEnum TypeOfMaterial;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x74645C", Offset = "0x74645C", VA = "0x74645C")]
	public MaterialType()
	{
	}
}
[Token(Token = "0x2000049")]
internal class Simtools
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Roll;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Pitch;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Yaw;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Heave;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Sway;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Surge;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Extra1;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Extra2;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Extra3;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x74646C", Offset = "0x74646C", VA = "0x74646C")]
	public Simtools(string Roll, string Pitch, string Yaw, string Heave, string Sway, string Surge, string Extra1, string Extra2, string Extra3)
	{
	}
}
[Token(Token = "0x200004A")]
public class QuPlaySimtools : MonoBehaviour
{
	[Token(Token = "0x200004B")]
	[CompilerGenerated]
	private sealed class <QuSimtools_Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuPlaySimtools <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014A")]
			[Address(RVA = "0x746B50", Offset = "0x746B50", VA = "0x746B50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0x746B98", Offset = "0x746B98", VA = "0x746B98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x746708", Offset = "0x746708", VA = "0x746708")]
		[DebuggerHidden]
		public <QuSimtools_Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x746790", Offset = "0x746790", VA = "0x746790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x746794", Offset = "0x746794", VA = "0x746794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x746B58", Offset = "0x746B58", VA = "0x746B58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string IP;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int port;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IPEndPoint remoteEndPoint;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UdpClient client;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Simtools simtools;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x746558", Offset = "0x746558", VA = "0x746558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x7465B0", Offset = "0x7465B0", VA = "0x7465B0")]
	public static void QuSimtools_SendTelemetry(string Roll, string Pitch, string Yaw, string Heave, string Sway, string Surge, string Extra1, string Extra2, string Extra3)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x746694", Offset = "0x746694", VA = "0x746694")]
	[IteratorStateMachine(typeof(<QuSimtools_Start>d__7))]
	private IEnumerator QuSimtools_Start()
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x746730", Offset = "0x746730", VA = "0x746730")]
	public QuPlaySimtools()
	{
	}
}
[Token(Token = "0x200004C")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/GlitchEffect")]
public class GlitchEffect : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D displacementMap;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader Shader;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	[Header("Glitch Intensity")]
	public float intensity;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float flipIntensity;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float colorIntensity;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _glitchup;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _glitchdown;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float flicker;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _glitchupTime;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _glitchdownTime;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _flickerTime;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x746BA0", Offset = "0x746BA0", VA = "0x746BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x746C10", Offset = "0x746C10", VA = "0x746C10")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x74711C", Offset = "0x74711C", VA = "0x74711C")]
	public GlitchEffect()
	{
	}
}
[Token(Token = "0x200004D")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("")]
public class FilterBehavior : MonoBehaviour
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _Material;

	[Token(Token = "0x17000023")]
	protected Material material
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x7471DC", Offset = "0x7471DC", VA = "0x7471DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x74713C", Offset = "0x74713C", VA = "0x74713C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x7472B0", Offset = "0x7472B0", VA = "0x7472B0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x74733C", Offset = "0x74733C", VA = "0x74733C")]
	public FilterBehavior()
	{
	}
}
[Token(Token = "0x200004E")]
[ExecuteInEditMode]
public class OLDTVScreen : FilterBehavior
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float screenSaturation;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture chromaticAberrationPattern;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chromaticAberrationMagnetude;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture noisePattern;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseMagnetude;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture staticPattern;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture staticMask;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float staticVertical;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float staticMagnetude;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x747344", Offset = "0x747344", VA = "0x747344")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x747450", Offset = "0x747450", VA = "0x747450")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x74770C", Offset = "0x74770C", VA = "0x74770C")]
	public OLDTVScreen()
	{
	}
}
[Token(Token = "0x200004F")]
[ExecuteInEditMode]
public class OLDTVTube : FilterBehavior
{
	[Token(Token = "0x2000050")]
	public delegate void RepaintAction();

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture scanlinePattern;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool scanlineCountAuto;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scanlineCount;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scanlineBrightMin;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scanlineBrightMax;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture mask;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture reflex;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float reflexMagnetude;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float radialDistortion;

	[Token(Token = "0x14000002")]
	public event RepaintAction WantRepaint
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x747730", Offset = "0x747730", VA = "0x747730")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x7477CC", Offset = "0x7477CC", VA = "0x7477CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x747868", Offset = "0x747868", VA = "0x747868")]
	private void Repaint()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x747884", Offset = "0x747884", VA = "0x747884")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x747AAC", Offset = "0x747AAC", VA = "0x747AAC")]
	public OLDTVTube()
	{
	}
}
[Token(Token = "0x2000051")]
public class CameraReflex : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OLDTVTube _oldtvtube;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x747B90", Offset = "0x747B90", VA = "0x747B90")]
	private void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x747BE8", Offset = "0x747BE8", VA = "0x747BE8")]
	public CameraReflex()
	{
	}
}
[Token(Token = "0x2000052")]
[ExecuteInEditMode]
public class OLDTVFilter3 : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OLDTVPreset _preset;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool customAspectRatio;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector2 _aspectRatio;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool timeScale;

	[Token(Token = "0x17000024")]
	public OLDTVPreset preset
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x747BF0", Offset = "0x747BF0", VA = "0x747BF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x747BF8", Offset = "0x747BF8", VA = "0x747BF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Vector2 aspectRatio
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x747C08", Offset = "0x747C08", VA = "0x747C08")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x747C00", Offset = "0x747C00", VA = "0x747C00")]
		set
		{
		}
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x747C10", Offset = "0x747C10", VA = "0x747C10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x747C18", Offset = "0x747C18", VA = "0x747C18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x747C14", Offset = "0x747C14", VA = "0x747C14")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x747D68", Offset = "0x747D68", VA = "0x747D68")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x747F2C", Offset = "0x747F2C", VA = "0x747F2C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x7486EC", Offset = "0x7486EC", VA = "0x7486EC")]
	public OLDTVFilter3()
	{
	}
}
[Token(Token = "0x2000053")]
public class CameraReflexNew : MonoBehaviour
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OLDTVFilter3 _oldtvfilter;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x748700", Offset = "0x748700", VA = "0x748700")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x748758", Offset = "0x748758", VA = "0x748758")]
	public CameraReflexNew()
	{
	}
}
[Token(Token = "0x2000054")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x748760", Offset = "0x748760", VA = "0x748760")]
	private void Update()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x7487BC", Offset = "0x7487BC", VA = "0x7487BC")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000055")]
public class AutoMovimientoProvisional : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Velocidad Rotacion")]
	public float rotacionX;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotacionY;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotacionZ;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Velocidad Movimiento")]
	public float movimientoX;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float movimientoY;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float movimientoZ;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x7487D8", Offset = "0x7487D8", VA = "0x7487D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x7488F0", Offset = "0x7488F0", VA = "0x7488F0")]
	public AutoMovimientoProvisional()
	{
	}
}
[Token(Token = "0x2000056")]
public class DebugTexto : MonoBehaviour
{
	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <Apagar>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugTexto <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x748B44", Offset = "0x748B44", VA = "0x748B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0x748B8C", Offset = "0x748B8C", VA = "0x748B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x748A38", Offset = "0x748A38", VA = "0x748A38")]
		[DebuggerHidden]
		public <Apagar>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x748A68", Offset = "0x748A68", VA = "0x748A68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x748A6C", Offset = "0x748A6C", VA = "0x748A6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x748B4C", Offset = "0x748B4C", VA = "0x748B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textDebug;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine cor;

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x7488F8", Offset = "0x7488F8", VA = "0x7488F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x748954", Offset = "0x748954", VA = "0x748954")]
	public void Escribir(string st)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x7489C4", Offset = "0x7489C4", VA = "0x7489C4")]
	[IteratorStateMachine(typeof(<Apagar>d__4))]
	private IEnumerator Apagar()
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x748A60", Offset = "0x748A60", VA = "0x748A60")]
	public DebugTexto()
	{
	}
}
[Token(Token = "0x2000058")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x748B94", Offset = "0x748B94", VA = "0x748B94")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x748C94", Offset = "0x748C94", VA = "0x748C94")]
	private void Update()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x748D54", Offset = "0x748D54", VA = "0x748D54")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x2000059")]
public static class FmodGvrAudio
{
	[Token(Token = "0x200005A")]
	private struct RoomProperties
	{
		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FmodGvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FmodGvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FmodGvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly string listenerPluginName;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int roomPropertiesSize;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int roomPropertiesIndex;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Bounds bounds;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<FmodGvrAudioRoom> enabledRooms;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static VECTOR listenerPositionFmod;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static DSP listenerPlugin;

	[Token(Token = "0x17000028")]
	private static DSP ListenerPlugin
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x7491B0", Offset = "0x7491B0", VA = "0x7491B0")]
		get
		{
			return default(DSP);
		}
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x748D68", Offset = "0x748D68", VA = "0x748D68")]
	public static void UpdateAudioRoom(FmodGvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x749330", Offset = "0x749330", VA = "0x749330")]
	public static bool IsListenerInsideRoom(FmodGvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x7498B4", Offset = "0x7498B4", VA = "0x7498B4")]
	private static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x7498C8", Offset = "0x7498C8", VA = "0x7498C8")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x749254", Offset = "0x749254", VA = "0x749254")]
	private static byte[] GetBytes(IntPtr ptr, int length)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x749040", Offset = "0x749040", VA = "0x749040")]
	private static RoomProperties GetRoomProperties(FmodGvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x74950C", Offset = "0x74950C", VA = "0x74950C")]
	private static DSP Initialize()
	{
		return default(DSP);
	}
}
[Token(Token = "0x200005B")]
[AddComponentMenu("GoogleVR/Audio/FmodGvrAudioRoom")]
public class FmodGvrAudioRoom : MonoBehaviour
{
	[Token(Token = "0x200005C")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4000278")]
		Transparent,
		[Token(Token = "0x4000279")]
		AcousticCeilingTiles,
		[Token(Token = "0x400027A")]
		BrickBare,
		[Token(Token = "0x400027B")]
		BrickPainted,
		[Token(Token = "0x400027C")]
		ConcreteBlockCoarse,
		[Token(Token = "0x400027D")]
		ConcreteBlockPainted,
		[Token(Token = "0x400027E")]
		CurtainHeavy,
		[Token(Token = "0x400027F")]
		FiberglassInsulation,
		[Token(Token = "0x4000280")]
		GlassThin,
		[Token(Token = "0x4000281")]
		GlassThick,
		[Token(Token = "0x4000282")]
		Grass,
		[Token(Token = "0x4000283")]
		LinoleumOnConcrete,
		[Token(Token = "0x4000284")]
		Marble,
		[Token(Token = "0x4000285")]
		Metal,
		[Token(Token = "0x4000286")]
		ParquetOnConcrete,
		[Token(Token = "0x4000287")]
		PlasterRough,
		[Token(Token = "0x4000288")]
		PlasterSmooth,
		[Token(Token = "0x4000289")]
		PlywoodPanel,
		[Token(Token = "0x400028A")]
		PolishedConcreteOrTile,
		[Token(Token = "0x400028B")]
		Sheetrock,
		[Token(Token = "0x400028C")]
		WaterOrIceSurface,
		[Token(Token = "0x400028D")]
		WoodCeiling,
		[Token(Token = "0x400028E")]
		WoodPanel
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x749D2C", Offset = "0x749D2C", VA = "0x749D2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x749D8C", Offset = "0x749D8C", VA = "0x749D8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x749DE4", Offset = "0x749DE4", VA = "0x749DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x749E44", Offset = "0x749E44", VA = "0x749E44")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x749F10", Offset = "0x749F10", VA = "0x749F10")]
	public FmodGvrAudioRoom()
	{
	}
}
[Token(Token = "0x200005D")]
public class HitGlowEffect : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshRenderer> glowRenderers;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeshRenderer> meshRendererQueHayQueApagar;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hitEffectDuration;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 glowIntensityMinMax;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool glowOn;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float intensity;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float glowTimer;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color baseColor;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x749F90", Offset = "0x749F90", VA = "0x749F90")]
	private void Start()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x74A264", Offset = "0x74A264", VA = "0x74A264")]
	public void DoHitEffect()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x749FB0", Offset = "0x749FB0", VA = "0x749FB0")]
	public void DisableGlow()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x74A524", Offset = "0x74A524", VA = "0x74A524")]
	public static float CircEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x74A54C", Offset = "0x74A54C", VA = "0x74A54C")]
	public HitGlowEffect()
	{
	}
}
[Token(Token = "0x200005E")]
public class ControladorLluvia : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particulasRayo;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light luzEscena;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float intensidadInicialLuz;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float intensidadMaximaLuz;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialSkybox;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float exposureInicialSkybox;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float exposureMaximoSkybox;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float probabilidadDeRayoEnCadaTick;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float tiempoDelUltimoRayo;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tiempoRandomEntreRayos;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool haciendoRayo;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool rayoIda;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float tFadeRayo;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float intensidadAcutalLuz;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float exposureActualSkybox;

	[Token(Token = "0x40002A6")]
	private const string exposure = "_Exposure";

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x74A618", Offset = "0x74A618", VA = "0x74A618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x74A7B0", Offset = "0x74A7B0", VA = "0x74A7B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x74A818", Offset = "0x74A818", VA = "0x74A818")]
	public void PonerEnPosicionBoss()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x74A8E4", Offset = "0x74A8E4", VA = "0x74A8E4")]
	public void PararRayo()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x74A97C", Offset = "0x74A97C", VA = "0x74A97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x74AC5C", Offset = "0x74AC5C", VA = "0x74AC5C")]
	private void PonerRayoEnPosicionAleatoria()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x74AD4C", Offset = "0x74AD4C", VA = "0x74AD4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x74ADFC", Offset = "0x74ADFC", VA = "0x74ADFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x74AEAC", Offset = "0x74AEAC", VA = "0x74AEAC")]
	public ControladorLluvia()
	{
	}
}
[Token(Token = "0x200005F")]
public class Nube2D : MonoBehaviour
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int tickSinHacerNada;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x74AEBC", Offset = "0x74AEBC", VA = "0x74AEBC")]
	public void Start()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x74AF1C", Offset = "0x74AF1C", VA = "0x74AF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x74B210", Offset = "0x74B210", VA = "0x74B210")]
	public Nube2D()
	{
	}
}
[Token(Token = "0x2000060")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	private static class Uniforms
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x74B218", Offset = "0x74B218", VA = "0x74B218")]
	private void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x74B28C", Offset = "0x74B28C", VA = "0x74B28C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x74B3E8", Offset = "0x74B3E8", VA = "0x74B3E8")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x2000062")]
public static class FmodResonanceAudio
{
	[Token(Token = "0x2000063")]
	private struct RoomProperties
	{
		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly string listenerPluginName;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int roomPropertiesSize;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int roomPropertiesIndex;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Bounds bounds;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<FmodResonanceAudioRoom> enabledRooms;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static VECTOR listenerPositionFmod;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static DSP listenerPlugin;

	[Token(Token = "0x17000029")]
	private static DSP ListenerPlugin
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x74B8A0", Offset = "0x74B8A0", VA = "0x74B8A0")]
		get
		{
			return default(DSP);
		}
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x74B458", Offset = "0x74B458", VA = "0x74B458")]
	public static void UpdateAudioRoom(FmodResonanceAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x74BA20", Offset = "0x74BA20", VA = "0x74BA20")]
	public static bool IsListenerInsideRoom(FmodResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x74BFA4", Offset = "0x74BFA4", VA = "0x74BFA4")]
	private static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x74BFB8", Offset = "0x74BFB8", VA = "0x74BFB8")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x74B944", Offset = "0x74B944", VA = "0x74B944")]
	private static byte[] GetBytes(IntPtr ptr, int length)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x74B730", Offset = "0x74B730", VA = "0x74B730")]
	private static RoomProperties GetRoomProperties(FmodResonanceAudioRoom room)
	{
		return default(RoomProperties);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x74BBFC", Offset = "0x74BBFC", VA = "0x74BBFC")]
	private static DSP Initialize()
	{
		return default(DSP);
	}
}
[Token(Token = "0x2000064")]
[AddComponentMenu("ResonanceAudio/FmodResonanceAudioRoom")]
public class FmodResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x2000065")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x40002D5")]
		Transparent,
		[Token(Token = "0x40002D6")]
		AcousticCeilingTiles,
		[Token(Token = "0x40002D7")]
		BrickBare,
		[Token(Token = "0x40002D8")]
		BrickPainted,
		[Token(Token = "0x40002D9")]
		ConcreteBlockCoarse,
		[Token(Token = "0x40002DA")]
		ConcreteBlockPainted,
		[Token(Token = "0x40002DB")]
		CurtainHeavy,
		[Token(Token = "0x40002DC")]
		FiberglassInsulation,
		[Token(Token = "0x40002DD")]
		GlassThin,
		[Token(Token = "0x40002DE")]
		GlassThick,
		[Token(Token = "0x40002DF")]
		Grass,
		[Token(Token = "0x40002E0")]
		LinoleumOnConcrete,
		[Token(Token = "0x40002E1")]
		Marble,
		[Token(Token = "0x40002E2")]
		Metal,
		[Token(Token = "0x40002E3")]
		ParquetOnConcrete,
		[Token(Token = "0x40002E4")]
		PlasterRough,
		[Token(Token = "0x40002E5")]
		PlasterSmooth,
		[Token(Token = "0x40002E6")]
		PlywoodPanel,
		[Token(Token = "0x40002E7")]
		PolishedConcreteOrTile,
		[Token(Token = "0x40002E8")]
		Sheetrock,
		[Token(Token = "0x40002E9")]
		WaterOrIceSurface,
		[Token(Token = "0x40002EA")]
		WoodCeiling,
		[Token(Token = "0x40002EB")]
		WoodPanel
	}

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x74C41C", Offset = "0x74C41C", VA = "0x74C41C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x74C47C", Offset = "0x74C47C", VA = "0x74C47C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x74C4D4", Offset = "0x74C4D4", VA = "0x74C4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x74C534", Offset = "0x74C534", VA = "0x74C534")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x74C600", Offset = "0x74C600", VA = "0x74C600")]
	public FmodResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x2000066")]
public class ajustarCamaraTV : MonoBehaviour
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera camara;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x74C680", Offset = "0x74C680", VA = "0x74C680")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x74C6D8", Offset = "0x74C6D8", VA = "0x74C6D8")]
	public ajustarCamaraTV()
	{
	}
}
[Token(Token = "0x2000067")]
public class ajustarNearFar : MonoBehaviour
{
	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float far;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x74C6E0", Offset = "0x74C6E0", VA = "0x74C6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x74C8DC", Offset = "0x74C8DC", VA = "0x74C8DC")]
	public void PonerFarCoreMenu()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x74C9A4", Offset = "0x74C9A4", VA = "0x74C9A4")]
	public void PonerFarZdi()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x74CA44", Offset = "0x74CA44", VA = "0x74CA44")]
	public ajustarNearFar()
	{
	}
}
[Token(Token = "0x2000068")]
public class ApagarEncenderSiTieneMandos : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject detectado;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noDetectado;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image imgMandoMove;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool cambiarBoton;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BotonOvaloGenerico botonACambiar;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject texto1;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject texto1focus;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject texto2;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject texto2focus;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x74CA58", Offset = "0x74CA58", VA = "0x74CA58")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x74CB74", Offset = "0x74CB74", VA = "0x74CB74")]
	public ApagarEncenderSiTieneMandos()
	{
	}
}
[Token(Token = "0x2000069")]
public class ApagarMesh : MonoBehaviour
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x74CB7C", Offset = "0x74CB7C", VA = "0x74CB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x74CBD8", Offset = "0x74CBD8", VA = "0x74CBD8")]
	public ApagarMesh()
	{
	}
}
[Token(Token = "0x200006A")]
public class ApagarRecomendado : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool esManoVirtual;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x74CBE0", Offset = "0x74CBE0", VA = "0x74CBE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x74CC94", Offset = "0x74CC94", VA = "0x74CC94")]
	public ApagarRecomendado()
	{
	}
}
[Token(Token = "0x200006B")]
public class apagarSiCalidadBaja : MonoBehaviour
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool calidadBaja;

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x74CC9C", Offset = "0x74CC9C", VA = "0x74CC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x74CF38", Offset = "0x74CF38", VA = "0x74CF38")]
	public apagarSiCalidadBaja()
	{
	}
}
[Token(Token = "0x200006C")]
public class apagarSiCalidadBajaEnJuego : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool calidadBaja;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int ticksSinHacerNada;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool soloApagarSiEstamosEnJuego;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x74CF40", Offset = "0x74CF40", VA = "0x74CF40")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x74D00C", Offset = "0x74D00C", VA = "0x74D00C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x74D2DC", Offset = "0x74D2DC", VA = "0x74D2DC")]
	public apagarSiCalidadBajaEnJuego()
	{
	}
}
[Token(Token = "0x200006D")]
public class apagayEnciende : MonoBehaviour
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int contador;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x74D2EC", Offset = "0x74D2EC", VA = "0x74D2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x74D358", Offset = "0x74D358", VA = "0x74D358")]
	private void actiarTodosComponentes(bool value)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x74D404", Offset = "0x74D404", VA = "0x74D404")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x74D4FC", Offset = "0x74D4FC", VA = "0x74D4FC")]
	public apagayEnciende()
	{
	}
}
[Token(Token = "0x200006E")]
public class CambiarAUnlit : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture textura;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool soloEnQuest1;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x74D504", Offset = "0x74D504", VA = "0x74D504")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x74D6D8", Offset = "0x74D6D8", VA = "0x74D6D8")]
	public CambiarAUnlit()
	{
	}
}
[Token(Token = "0x200006F")]
public class CambiarRenderQueue : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int renderQueueValue;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mesh;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x74D6E0", Offset = "0x74D6E0", VA = "0x74D6E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x74D770", Offset = "0x74D770", VA = "0x74D770")]
	public CambiarRenderQueue()
	{
	}
}
[Token(Token = "0x2000070")]
public class cargaInicial : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	[CompilerGenerated]
	private sealed class <VamosAlJuego>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cargaInicial <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CF")]
			[Address(RVA = "0x74DF60", Offset = "0x74DF60", VA = "0x74DF60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0x74DFA8", Offset = "0x74DFA8", VA = "0x74DFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x74DB90", Offset = "0x74DB90", VA = "0x74DB90")]
		[DebuggerHidden]
		public <VamosAlJuego>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x74DBC0", Offset = "0x74DBC0", VA = "0x74DBC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x74DBC4", Offset = "0x74DBC4", VA = "0x74DBC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x74DF68", Offset = "0x74DF68", VA = "0x74DF68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject negroCamara;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform posJugador;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x74D780", Offset = "0x74D780", VA = "0x74D780")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x74DA14", Offset = "0x74DA14", VA = "0x74DA14")]
	private void Recolocar()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x74DAE4", Offset = "0x74DAE4", VA = "0x74DAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x74D9A0", Offset = "0x74D9A0", VA = "0x74D9A0")]
	[IteratorStateMachine(typeof(<VamosAlJuego>d__5))]
	private IEnumerator VamosAlJuego()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x74DBB8", Offset = "0x74DBB8", VA = "0x74DBB8")]
	public cargaInicial()
	{
	}
}
[Token(Token = "0x2000072")]
public class ColliderArboles : MonoBehaviour
{
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x74DFB0", Offset = "0x74DFB0", VA = "0x74DFB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x74E10C", Offset = "0x74E10C", VA = "0x74E10C")]
	public ColliderArboles()
	{
	}
}
[Token(Token = "0x2000073")]
public class ControladorDetectoresLimites : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	public enum Limites
	{
		[Token(Token = "0x400030B")]
		LimiteArriba,
		[Token(Token = "0x400030C")]
		LimiteAbajo,
		[Token(Token = "0x400030D")]
		LimiteDerecha,
		[Token(Token = "0x400030E")]
		LimiteIzquierda
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DetectorLimite limiteArriba;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DetectorLimite limiteAbajo;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DetectorLimite limiteDerecha;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DetectorLimite limiteIzquierda;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x74E114", Offset = "0x74E114", VA = "0x74E114")]
	public bool PuedoMoverme(Limites limite)
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x74E184", Offset = "0x74E184", VA = "0x74E184")]
	public ControladorDetectoresLimites()
	{
	}
}
[Token(Token = "0x2000075")]
public class AreaDeJuego : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float largo;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ancho;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alto;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float extraAltoNegativo;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float extraAltoPositivo;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float extraAnchoNegativo;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float extraAnchoPositivo;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x74E18C", Offset = "0x74E18C", VA = "0x74E18C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x74E1C0", Offset = "0x74E1C0", VA = "0x74E1C0")]
	public AreaDeJuego()
	{
	}
}
[Token(Token = "0x2000076")]
public class CambiosEntreRecreativaYAvion : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	[CompilerGenerated]
	private sealed class <ReposicionarDespuesDeUnTiempo>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0x74F290", Offset = "0x74F290", VA = "0x74F290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001ED")]
			[Address(RVA = "0x74F2D8", Offset = "0x74F2D8", VA = "0x74F2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x74F184", Offset = "0x74F184", VA = "0x74F184")]
		[DebuggerHidden]
		public <ReposicionarDespuesDeUnTiempo>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x74F1B8", Offset = "0x74F1B8", VA = "0x74F1B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x74F1BC", Offset = "0x74F1BC", VA = "0x74F1BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x74F298", Offset = "0x74F298", VA = "0x74F298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject aguaArriba;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject aguaAbajo;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject aguaLOW;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lluviaArriba;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lluviaAbajo;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lluviaAbajoG;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ControladorNiebla niebla;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ControladorAvionPrincipal cap;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera[] camaras;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool posicion;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool camarasReady;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ColliderBalas;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform areadeJuego;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform jugador;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform avionjugador;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x74E1C8", Offset = "0x74E1C8", VA = "0x74E1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x74E9CC", Offset = "0x74E9CC", VA = "0x74E9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x74E354", Offset = "0x74E354", VA = "0x74E354")]
	public void AguaLowConReflection(bool enable)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x74E464", Offset = "0x74E464", VA = "0x74E464")]
	public void AguaArribaConReflection(bool enable)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x74E574", Offset = "0x74E574", VA = "0x74E574")]
	public void AguaAbajoConReflection(bool enable)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x74EAB0", Offset = "0x74EAB0", VA = "0x74EAB0")]
	public void BuscarCamara()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x74EC3C", Offset = "0x74EC3C", VA = "0x74EC3C")]
	public void CambiosEntreArribaYAbajo()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x74F124", Offset = "0x74F124", VA = "0x74F124")]
	[IteratorStateMachine(typeof(<ReposicionarDespuesDeUnTiempo>d__22))]
	private IEnumerator ReposicionarDespuesDeUnTiempo()
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x74ECEC", Offset = "0x74ECEC", VA = "0x74ECEC")]
	public void CambiarAguas()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x74ED9C", Offset = "0x74ED9C", VA = "0x74ED9C")]
	public void CambiarMascara()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x74E8D8", Offset = "0x74E8D8", VA = "0x74E8D8")]
	public void DesactivarLluvia()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x74F024", Offset = "0x74F024", VA = "0x74F024")]
	public void CambiarLluvia()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x74EBB8", Offset = "0x74EBB8", VA = "0x74EBB8")]
	public void BuscarNieblaEnCamara()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x74E684", Offset = "0x74E684", VA = "0x74E684")]
	public void CambiarNiebla()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x74F1AC", Offset = "0x74F1AC", VA = "0x74F1AC")]
	public void AjustarAguaAbajo(int num)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x74F1B0", Offset = "0x74F1B0", VA = "0x74F1B0")]
	public CambiosEntreRecreativaYAvion()
	{
	}
}
[Token(Token = "0x2000078")]
public class ComprobadorCalidadEnParticulas : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	public enum Tipo
	{
		[Token(Token = "0x400032C")]
		Bala,
		[Token(Token = "0x400032D")]
		Enemigo
	}

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject alta;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject baja;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject explosion;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Tipo tipoEx;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x74F2E0", Offset = "0x74F2E0", VA = "0x74F2E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x74F46C", Offset = "0x74F46C", VA = "0x74F46C")]
	public ComprobadorCalidadEnParticulas()
	{
	}
}
[Token(Token = "0x200007A")]
public class Config
{
	[Token(Token = "0x200007B")]
	public enum PlataformaJuego
	{
		[Token(Token = "0x4000336")]
		SteamVR,
		[Token(Token = "0x4000337")]
		PS4,
		[Token(Token = "0x4000338")]
		Oculus,
		[Token(Token = "0x4000339")]
		Pico,
		[Token(Token = "0x400033A")]
		ninguna,
		[Token(Token = "0x400033B")]
		Viveport
	}

	[Token(Token = "0x200007C")]
	public enum TipoInput
	{
		[Token(Token = "0x400033D")]
		VR,
		[Token(Token = "0x400033E")]
		NoVR
	}

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlataformaJuego plataforma;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool recordsLogrosBloqueados;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TipoInput tipoInput;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool controlSeleccionado;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool manoVirtual;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool tiene2Sensores;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool preguntarSiQuieroVR;
}
[Token(Token = "0x200007D")]
public class ControladorAvionPrincipal : MonoBehaviour
{
	[Token(Token = "0x200007E")]
	public enum EstadosJugador
	{
		[Token(Token = "0x40003A5")]
		EnRecreativa,
		[Token(Token = "0x40003A6")]
		EnAvionPequeno,
		[Token(Token = "0x40003A7")]
		EnAvionGrande,
		[Token(Token = "0x40003A8")]
		EnAvionGrandeMetralleta,
		[Token(Token = "0x40003A9")]
		EnPuntoInmersion
	}

	[Token(Token = "0x200007F")]
	[CompilerGenerated]
	private sealed class <ReposicionarDespuesDeUnTiempo>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0x81E074", Offset = "0x81E074", VA = "0x81E074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021A")]
			[Address(RVA = "0x81E0BC", Offset = "0x81E0BC", VA = "0x81E0BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x81DF68", Offset = "0x81DF68", VA = "0x81DF68")]
		[DebuggerHidden]
		public <ReposicionarDespuesDeUnTiempo>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x81DF90", Offset = "0x81DF90", VA = "0x81DF90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x81DF94", Offset = "0x81DF94", VA = "0x81DF94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x81E07C", Offset = "0x81E07C", VA = "0x81E07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000080")]
	[CompilerGenerated]
	private sealed class <RetrocederCor>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorAvionPrincipal <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x81E150", Offset = "0x81E150", VA = "0x81E150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0x81E198", Offset = "0x81E198", VA = "0x81E198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x81E0C4", Offset = "0x81E0C4", VA = "0x81E0C4")]
		[DebuggerHidden]
		public <RetrocederCor>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x81E0EC", Offset = "0x81E0EC", VA = "0x81E0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x81E0F0", Offset = "0x81E0F0", VA = "0x81E0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x81E158", Offset = "0x81E158", VA = "0x81E158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000081")]
	[CompilerGenerated]
	private sealed class <FxFantasmal>d__120 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorAvionPrincipal <>4__this;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activarPrimerAvion;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int primerAvion;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool activarSegundoAvion;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int segundoAvion;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startingScale>5__3;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <startingPos>5__4;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <scaleDeseada>5__5;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <posDeseada>5__6;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0x81E614", Offset = "0x81E614", VA = "0x81E614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0x81E65C", Offset = "0x81E65C", VA = "0x81E65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x81E1A0", Offset = "0x81E1A0", VA = "0x81E1A0")]
		[DebuggerHidden]
		public <FxFantasmal>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x81E1C8", Offset = "0x81E1C8", VA = "0x81E1C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x81E1CC", Offset = "0x81E1CC", VA = "0x81E1CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x81E61C", Offset = "0x81E61C", VA = "0x81E61C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <CambiarAAvionGrandeCor>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorAvionPrincipal <>4__this;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activarPrimerAvion;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int primerAvion;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool activarSegundoAvion;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int segundoAvion;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startingScale>5__3;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <startingPos>5__4;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <scaleDeseada>5__5;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <posDeseada>5__6;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022A")]
			[Address(RVA = "0x81EA74", Offset = "0x81EA74", VA = "0x81EA74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022C")]
			[Address(RVA = "0x81EABC", Offset = "0x81EABC", VA = "0x81EABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x81E664", Offset = "0x81E664", VA = "0x81E664")]
		[DebuggerHidden]
		public <CambiarAAvionGrandeCor>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x81E68C", Offset = "0x81E68C", VA = "0x81E68C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x81E690", Offset = "0x81E690", VA = "0x81E690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x81EA7C", Offset = "0x81EA7C", VA = "0x81EA7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[CompilerGenerated]
	private sealed class <LoopInvulnerable>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorAvionPrincipal <>4__this;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enZDI;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <ultimaPosicionAvion>5__2;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <minaAvion>5__3;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000230")]
			[Address(RVA = "0x81F140", Offset = "0x81F140", VA = "0x81F140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000232")]
			[Address(RVA = "0x81F188", Offset = "0x81F188", VA = "0x81F188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x81EAC4", Offset = "0x81EAC4", VA = "0x81EAC4")]
		[DebuggerHidden]
		public <LoopInvulnerable>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x81EAEC", Offset = "0x81EAEC", VA = "0x81EAEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x81EAF0", Offset = "0x81EAF0", VA = "0x81EAF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0x81F148", Offset = "0x81F148", VA = "0x81F148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033F")]
	public const float TIEMPO_PARA_MAXIMA_VELOCIDAD_VERTICAL = 3f;

	[Token(Token = "0x4000340")]
	public const float LIMITACION_VELOCIDAD_VERTICAL = 0.5f;

	[Token(Token = "0x4000341")]
	public const float LIMITE_ALTURA_MINIMA_MOVIMIENTO_VERTICAL = -43f;

	[Token(Token = "0x4000342")]
	public const float LIMITE_ALTURA_MAXIMA_MOVIMIENTO_VERTICAL = 600f;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("General")]
	public ControladorPalancaAvion input;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cuboNegroJoystick;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float distanciaParaAgarrarPalanca;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float distanciaParaSoltarPalanca;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public AreaDeJuego tamanoPantalla;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float velocidadGeneralArea;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float velocidadMovimineto;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 velocidadMovimientoVertical;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float velocidadMetralletas;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float tiempoRespuesta;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float tiempoRespuestaInicial;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector3 starterTargetAvionesPosition;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform targetAviones;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 posicionDeseada;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioManager mM;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CambiosEntreRecreativaYAvion cambiarEntreRYA;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Los valores de su transform se definen en el Start")]
	public GameObject pausa;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject textoFinal;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject almacenBalas;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject almacenBalasMisilNivel16;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool enRecreativa;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Mesh aviones")]
	public GameObject MeshAvionPequeIn;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject MeshAvionPequeOut;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject MeshAvionGrandeIn;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MeshAvionGrandeOut;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject MeshAvionGrandeInM;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject avionGrafico;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject avionGraficoPeque;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject avionGraficoGrande;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float valorActual;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float valorActualY;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float valorVerticalActual;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float valorNuevo;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float valorNuevoY;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[HideInInspector]
	public float valorVerticalNuevo;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Estados")]
	public bool enAvionGrande;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public EstadosJugador estadoActual;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public EstadosJugador estadoAnterior;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform playerConJoysick;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject salaRecreativa;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform avion;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform avionPequeno;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform avionGrande;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform posicionEnRecreativa;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform posicionEnAvionPeque;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform posicionEnAvionGrande;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform posicionEnAvionGrandeM;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SonidosAvion sonidosAvion;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Material matStandardGrande;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Material matFantasmal;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("PowerUps")]
	public bool movimientoControlado;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public bool avionesClones;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool[] avionClon;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject avionesClonesP;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject avionesClonesG;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool megaBoom;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool realentizado;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	public bool zonaAltaVelocidad;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
	[Header("Metralletas")]
	public bool metralletas;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform objetivoMetralletas;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Vector3 direccionObjetivo;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public Vector4 limitesObjetivo;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AvionJugador avionJugadorGrande;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AvionJugador avionJugadorPeque;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float inclinacionAvion;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float inclinacionVerticalAvion;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float inclinacionVerticalAvionExagerada;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[HideInInspector]
	public float porcentageVelocidadVerticalTotal;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[HideInInspector]
	public float valorMoverVertical;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float previousDirectionOnVertical;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private string masterBusString;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Bus masterBus;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	public bool enZonaLenta;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	[HideInInspector]
	public bool masInclinacionVertical;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
	[HideInInspector]
	public bool caidaEnPicado;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[HideInInspector]
	public List<GirarArmaCentral> modelosArmaCentralActivos;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[HideInInspector]
	public List<GirarArmaCentral> modelosArmaLateralDActivos;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[HideInInspector]
	public List<GirarArmaCentral> modelosArmaLateralIActivos;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	public bool muerto;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[HideInInspector]
	public Vector2 seguirAvionEnX;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	[HideInInspector]
	public Vector2 seguirAvionEnY;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool modelosApagados;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Vector3[] ultimasPosAreaJuego;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3[] ultimasPosAvioncito;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public bool retrocediendo;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private int ticksPerdido;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float tiempoRegistroPosiciones;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[HideInInspector]
	public Vector3 posDeseadaRecreativa;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public float tiempoLoop;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool fantasmalActivo;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Coroutine corCambiarAGrande;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public bool siguienteDisparoEsLoop;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	[HideInInspector]
	public bool cambiaVista;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private Vector3 posicion3raPJoystickInicial;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Vector3 posicion3raPJoystick;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int loopingsDisponibles;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public bool enLooping;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x74F4C8", Offset = "0x74F4C8", VA = "0x74F4C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x74F540", Offset = "0x74F540", VA = "0x74F540")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x750220", Offset = "0x750220", VA = "0x750220")]
	[IteratorStateMachine(typeof(<ReposicionarDespuesDeUnTiempo>d__89))]
	private IEnumerator ReposicionarDespuesDeUnTiempo(float tiempo = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x75029C", Offset = "0x75029C", VA = "0x75029C")]
	private void ponerAguaPlana(bool quest1, MeshRenderer mesh, bool core)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x750538", Offset = "0x750538", VA = "0x750538")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x75258C", Offset = "0x75258C", VA = "0x75258C")]
	public void CambiarMaterialAguaAndroid(bool normal)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x75214C", Offset = "0x75214C", VA = "0x75214C")]
	private void UpdateMovimientoAvion()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x752834", Offset = "0x752834", VA = "0x752834")]
	public void ApagarAguaLow()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x7528EC", Offset = "0x7528EC", VA = "0x7528EC")]
	public void EncenderAguaLow()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x7529A4", Offset = "0x7529A4", VA = "0x7529A4")]
	private void RegistrarUltimasPosiciones()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x752B30", Offset = "0x752B30", VA = "0x752B30")]
	private void Retroceder()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x752C3C", Offset = "0x752C3C", VA = "0x752C3C")]
	[IteratorStateMachine(typeof(<RetrocederCor>d__101))]
	private IEnumerator RetrocederCor()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x7514F0", Offset = "0x7514F0", VA = "0x7514F0")]
	private void UpdateMovimientoTargetAviones()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x74FCF0", Offset = "0x74FCF0", VA = "0x74FCF0")]
	private void CambiarPadreJoystick(int caso)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x752CB0", Offset = "0x752CB0", VA = "0x752CB0")]
	public void AguaLowConReflection(bool enable)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x752D40", Offset = "0x752D40", VA = "0x752D40")]
	public void CambioEstado(int num)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x74F85C", Offset = "0x74F85C", VA = "0x74F85C")]
	public void CambiarEntreAvionPequeñoYGrande(int num)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x75333C", Offset = "0x75333C", VA = "0x75333C")]
	public void CambioCamaraInterior(int num)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x752234", Offset = "0x752234", VA = "0x752234")]
	private void MoverObjetivo()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x75338C", Offset = "0x75338C", VA = "0x75338C")]
	public void ResetearPosicion(bool haciaCore)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x7513CC", Offset = "0x7513CC", VA = "0x7513CC")]
	public void ResetearPosicionLerp()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x753410", Offset = "0x753410", VA = "0x753410")]
	public void Continuar()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x75347C", Offset = "0x75347C", VA = "0x75347C")]
	public void Reiniciar()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x7534EC", Offset = "0x7534EC", VA = "0x7534EC")]
	public void Salir()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x750290", Offset = "0x750290", VA = "0x750290")]
	public void SonidoFmod(float num)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x753558", Offset = "0x753558", VA = "0x753558")]
	[IteratorStateMachine(typeof(<FxFantasmal>d__120))]
	public IEnumerator FxFantasmal(float time, bool activarPrimerAvion, int primerAvion, bool activarSegundoAvion, int segundoAvion)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x753614", Offset = "0x753614", VA = "0x753614")]
	public void CambiarAAvionGrande()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x7532DC", Offset = "0x7532DC", VA = "0x7532DC")]
	public void StopCambiarAAvionGrande()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x753680", Offset = "0x753680", VA = "0x753680")]
	[IteratorStateMachine(typeof(<CambiarAAvionGrandeCor>d__124))]
	public IEnumerator CambiarAAvionGrandeCor(float time, bool activarPrimerAvion, int primerAvion, bool activarSegundoAvion, int segundoAvion)
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x753968", Offset = "0x753968", VA = "0x753968")]
	public void EnableMeshesAvion(bool activo)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x75373C", Offset = "0x75373C", VA = "0x75373C")]
	public void EfectoFantasmal(bool activar, int enQueAvion)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x753AE0", Offset = "0x753AE0", VA = "0x753AE0")]
	public void QuitarTiempoLento()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x753B6C", Offset = "0x753B6C", VA = "0x753B6C")]
	public void HacerLoopInvulnerable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x753CA4", Offset = "0x753CA4", VA = "0x753CA4")]
	public void NuevaVista(bool dePausa = false)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x753C1C", Offset = "0x753C1C", VA = "0x753C1C")]
	[IteratorStateMachine(typeof(<LoopInvulnerable>d__136))]
	private IEnumerator LoopInvulnerable(bool enZDI)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x7544F8", Offset = "0x7544F8", VA = "0x7544F8")]
	public ControladorAvionPrincipal()
	{
	}
}
[Token(Token = "0x2000084")]
public class ControladorCabeza : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject manoD;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject manoI;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject soldado;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AccionesJugador aJ;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool recolocado;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x81F190", Offset = "0x81F190", VA = "0x81F190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x81F204", Offset = "0x81F204", VA = "0x81F204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x81F314", Offset = "0x81F314", VA = "0x81F314")]
	public ControladorCabeza()
	{
	}
}
[Token(Token = "0x2000085")]
public class ControladorDificultad : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int nivelActual;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float velocidadInicialBasico;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocidadInicialBasicoDisparo;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float velocidadInicialBasicoAcrobatico;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float velocidadInicialHelicoptero;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float velocidadInicialHeinkel;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float velocidadInicialHeinkelTorreta;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float velocidadInicialBarco;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float velocidadInicialBoss;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float vidaInicialBasico;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float vidaInicialBasicoDisparo;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float vidaInicialBasicoAcrobatico;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float vidaInicialHelicoptero;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float vidaInicialHeinkel;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float vidaInicialHeinkelTorreta;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float vidaInicialBunker;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float vidaInicialBarco;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float vidaInicialBoss;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int minTicksInicialBasico;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int minTicksInicialBasicoDisparo;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int minTicksInicialBasicoAcrobatico;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int minTicksInicialHelicoptero;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int minTicksInicialHeinkel;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int minTicksInicialHeinkelTorreta;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int minTicksInicialBunker;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int minTicksInicialBarco;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int maxTicksInicialBasico;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int maxTicksInicialBasicoDisparo;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int maxTicksInicialBasicoAcrobatico;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int maxTicksInicialHelicoptero;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int maxTicksInicialHeinkel;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int maxTicksInicialHeinkelTorreta;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int maxTicksInicialBunker;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int maxTicksInicialBarco;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float cooldownInicialBasico;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cooldownInicialBasicoDisparo;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cooldownInicialBasicoAcrobatico;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float cooldownInicialHelicoptero;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cooldownInicialHeinkel;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cooldownInicialHeinkelTorreta;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cooldownInicialBunker;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cooldownInicialBarco;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float cooldownInicialBoss;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int dañoInicialBasico;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int dañoInicialBasicoDisparo;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int dañoInicialBasicoAcrobatico;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int dañoInicialHelicoptero;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int dañoInicialHeinkel;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int dañoInicialHeinkelTorreta;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int dañoInicialBunker;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int dañoInicialBarco;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int dañoInicialBoss;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float maxHpArmaInicialBasico;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float maxHpArmaInicialBasicoDisparo;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float maxHpArmaInicialBasicoAcrobatico;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float maxHpArmaInicialHelicoptero;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float maxHpArmaInicialHeinkel;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float maxHpArmaInicialHeinkelTorreta;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float maxHpArmaInicialBunker;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float maxHpArmaInicialBarco;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float maxHpArmaInicialBoss;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float velocidadBalasInicialBasico;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float velocidadBalasInicialBasicoDisparo;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float velocidadBalasInicialBasicoAcrobatico;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float velocidadBalasInicialHelicoptero;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float velocidadBalasInicialHeinkel;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float velocidadBalasInicialHeinkelTorreta;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float velocidadBalasInicialBunker;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float velocidadBalasInicialBarco;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float velocidadBalasInicialBoss;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x81F31C", Offset = "0x81F31C", VA = "0x81F31C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x81F378", Offset = "0x81F378", VA = "0x81F378")]
	private float GetFactorMultiplicador()
	{
		return default(float);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x81F438", Offset = "0x81F438", VA = "0x81F438")]
	public float GetVelocidadEnemigo(Enemigo.TipoEnemigo tipo, float porcentaje)
	{
		return default(float);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x81F4F4", Offset = "0x81F4F4", VA = "0x81F4F4")]
	public float GetDañoDisparosEnemigo(Enemigo.TipoEnemigo tipo)
	{
		return default(float);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x81F5E0", Offset = "0x81F5E0", VA = "0x81F5E0")]
	public float GetGiroMisil()
	{
		return default(float);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x81F60C", Offset = "0x81F60C", VA = "0x81F60C")]
	public float GetVidaMaximaEnemigoZDI(Enemigo.TipoEnemigo tipo, float porcentaje)
	{
		return default(float);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x81F630", Offset = "0x81F630", VA = "0x81F630")]
	public float GetVidaMaximaEnemigo(Enemigo.TipoEnemigo tipo, float porcentaje)
	{
		return default(float);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x81F854", Offset = "0x81F854", VA = "0x81F854")]
	public float GetDañoArmaPlayer(ArmaPlayer.TiposArmasPlayer tipoArma, float nivel, float nivelMaximo)
	{
		return default(float);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x81F8DC", Offset = "0x81F8DC", VA = "0x81F8DC")]
	public ControladorDificultad()
	{
	}
}
[Token(Token = "0x2000086")]
public class ControladorEnemigosTerrestresZDI : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activar;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] enemigos;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x81F9C4", Offset = "0x81F9C4", VA = "0x81F9C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x81FA7C", Offset = "0x81FA7C", VA = "0x81FA7C")]
	public ControladorEnemigosTerrestresZDI()
	{
	}
}
[Token(Token = "0x2000087")]
public class ControladorFondo : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	private enum Estado
	{
		[Token(Token = "0x4000422")]
		apagado,
		[Token(Token = "0x4000423")]
		empezado,
		[Token(Token = "0x4000424")]
		empezando
	}

	[Token(Token = "0x2000089")]
	[CompilerGenerated]
	private sealed class <EsperarVideo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorFondo <>4__this;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000249")]
			[Address(RVA = "0x820408", Offset = "0x820408", VA = "0x820408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600024B")]
			[Address(RVA = "0x820450", Offset = "0x820450", VA = "0x820450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x81FE6C", Offset = "0x81FE6C", VA = "0x81FE6C")]
		[DebuggerHidden]
		public <EsperarVideo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x81FFC4", Offset = "0x81FFC4", VA = "0x81FFC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x81FFC8", Offset = "0x81FFC8", VA = "0x81FFC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x820410", Offset = "0x820410", VA = "0x820410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage fondoEstatico;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer video;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine corrutinaEmpezar;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Estado estado;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x81FA84", Offset = "0x81FA84", VA = "0x81FA84")]
	public void Encender()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x81FDCC", Offset = "0x81FDCC", VA = "0x81FDCC")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x81FD58", Offset = "0x81FD58", VA = "0x81FD58")]
	[IteratorStateMachine(typeof(<EsperarVideo>d__7))]
	private IEnumerator EsperarVideo()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x81FE94", Offset = "0x81FE94", VA = "0x81FE94")]
	private void MirarCuandoEmpieza(VideoPlayer source, long frameIdx)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x81FFBC", Offset = "0x81FFBC", VA = "0x81FFBC")]
	public ControladorFondo()
	{
	}
}
[Token(Token = "0x200008A")]
public class ControladorHologramasSalaRecreativa : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <AlternarHologramas>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorHologramasSalaRecreativa <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000252")]
			[Address(RVA = "0x82078C", Offset = "0x82078C", VA = "0x82078C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000254")]
			[Address(RVA = "0x8207D4", Offset = "0x8207D4", VA = "0x8207D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x8204FC", Offset = "0x8204FC", VA = "0x8204FC")]
		[DebuggerHidden]
		public <AlternarHologramas>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x820534", Offset = "0x820534", VA = "0x820534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x820538", Offset = "0x820538", VA = "0x820538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x820794", Offset = "0x820794", VA = "0x820794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] basesHologramas;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tiempoEntreCambios;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool hologramasCambiantes;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x820458", Offset = "0x820458", VA = "0x820458")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x820488", Offset = "0x820488", VA = "0x820488")]
	[IteratorStateMachine(typeof(<AlternarHologramas>d__4))]
	private IEnumerator AlternarHologramas()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x820524", Offset = "0x820524", VA = "0x820524")]
	public ControladorHologramasSalaRecreativa()
	{
	}
}
[Token(Token = "0x200008C")]
public class ControladorHumoFuego : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	private struct ParticulasHumoFuego
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParticleSystem humo;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParticleSystem fuego;
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool customPosition;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float porcentajeVida;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticulasHumoFuego[] particulas;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] particulasHumoFuego;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int porcentajeMinimo;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int porcentajeMaximo;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool startLifetimePrimeraVez;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.MinMaxCurve startLifetimeIniHumo;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MinMaxCurve startLifetimeIniFuego;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x8207DC", Offset = "0x8207DC", VA = "0x8207DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x820BE4", Offset = "0x820BE4", VA = "0x820BE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x820F30", Offset = "0x820F30", VA = "0x820F30")]
	public void SetPorcentajeVida(float nuevoPorcentajeVida)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x821070", Offset = "0x821070", VA = "0x821070")]
	private void UpdateFuego()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x8215F8", Offset = "0x8215F8", VA = "0x8215F8")]
	private void ModificarParticulas(ParticleSystem ps, float factor, bool esHumo)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x8216F8", Offset = "0x8216F8", VA = "0x8216F8")]
	public void SetObjetoDestruido(int numObjeto, int destruido)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x82180C", Offset = "0x82180C", VA = "0x82180C")]
	private void UpdateEstadoFuego(int numObjeto, int destruido)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x821C24", Offset = "0x821C24", VA = "0x821C24")]
	public ControladorHumoFuego()
	{
	}
}
[Token(Token = "0x200008E")]
public class ControladorIndicadores : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum Estado
	{
		[Token(Token = "0x4000459")]
		Arriba,
		[Token(Token = "0x400045A")]
		ABoss,
		[Token(Token = "0x400045B")]
		AMetralleta
	}

	[Token(Token = "0x2000090")]
	[CompilerGenerated]
	private sealed class <TiemposAnimArranque>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorIndicadores <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0x823B5C", Offset = "0x823B5C", VA = "0x823B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x823BA4", Offset = "0x823BA4", VA = "0x823BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x823A24", Offset = "0x823A24", VA = "0x823A24")]
		[DebuggerHidden]
		public <TiemposAnimArranque>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x823A70", Offset = "0x823A70", VA = "0x823A70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x823A74", Offset = "0x823A74", VA = "0x823A74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x823B64", Offset = "0x823B64", VA = "0x823B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Estado estadoAvion;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool activado;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject panel;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float altura;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float inclinacionAvion;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float velocidad;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float porcentajeMision;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform transformAltura;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform transformInclinacion;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform transformVelocidad;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform transformPorcentajeMision;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform transformRadar;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform transformVida;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float velocidadRadar;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float velocidadSpeed;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int estadoVelocidad;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControladorNivel cN;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool controladorNivelCargado;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool panelAvion;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControladorPalancaAvion input;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool radar;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 boss;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float bossDist;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform flecha;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SpriteRenderer flechaSprite;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float angulo;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator anim;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float velToZero;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float ultimaYVelocidad;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float ultimaVelocidad;

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x821C48", Offset = "0x821C48", VA = "0x821C48")]
	private void Start()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x8221FC", Offset = "0x8221FC", VA = "0x8221FC")]
	public void CargarControladorNivel()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x822208", Offset = "0x822208", VA = "0x822208")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x822358", Offset = "0x822358", VA = "0x822358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x8224CC", Offset = "0x8224CC", VA = "0x8224CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x822A84", Offset = "0x822A84", VA = "0x822A84")]
	private void SpeedMovimiento()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x82316C", Offset = "0x82316C", VA = "0x82316C")]
	public void IndicarAlturaEnZDI()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x822D98", Offset = "0x822D98", VA = "0x822D98")]
	private void ProgresoMision()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x822E7C", Offset = "0x822E7C", VA = "0x822E7C")]
	private void InclinacionAvion(bool opcion)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x822FDC", Offset = "0x822FDC", VA = "0x822FDC")]
	private void VidaAvion()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x8235A4", Offset = "0x8235A4", VA = "0x8235A4")]
	private float CalcularAngulo(Vector3 direccion)
	{
		return default(float);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x823334", Offset = "0x823334", VA = "0x823334")]
	private void PosicionRadar(bool portaaviones)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x823560", Offset = "0x823560", VA = "0x823560")]
	private void BajarAlphaFlechaRadar()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x8237D4", Offset = "0x8237D4", VA = "0x8237D4")]
	public void SetupMenuIndicadores()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x823974", Offset = "0x823974", VA = "0x823974")]
	public void SimularArranqueIndicadores()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x8239B0", Offset = "0x8239B0", VA = "0x8239B0")]
	[IteratorStateMachine(typeof(<TiemposAnimArranque>d__46))]
	private IEnumerator TiemposAnimArranque()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x823A4C", Offset = "0x823A4C", VA = "0x823A4C")]
	public ControladorIndicadores()
	{
	}
}
[Token(Token = "0x2000091")]
public class ControladorInfoIngame : MonoBehaviour
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI monedas;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI monedasSombra;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI score;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI scoreSombra;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m1text;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI m2text;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI m3text;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject interfaz3misiones;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject derechaUI;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject izquierdaUI;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Vector3 derechaPos;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public Vector3 izquierdaPos;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Canvas canvasUI;

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x823BAC", Offset = "0x823BAC", VA = "0x823BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x823E08", Offset = "0x823E08", VA = "0x823E08")]
	public void ModificarMonedas()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x823CD8", Offset = "0x823CD8", VA = "0x823CD8")]
	public void ModificarScore()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x823ED8", Offset = "0x823ED8", VA = "0x823ED8")]
	public ControladorInfoIngame()
	{
	}
}
[Token(Token = "0x2000092")]
public class ControladorIslas : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000093")]
	public class islasZDI
	{
		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject zonaI;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gruposZDI;

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x824408", Offset = "0x824408", VA = "0x824408")]
		public islasZDI()
		{
		}
	}

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] islas;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool noActivarMasIslas;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public islasZDI[] zDI;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x823EE0", Offset = "0x823EE0", VA = "0x823EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x82410C", Offset = "0x82410C", VA = "0x82410C")]
	public void ActivarPackIsla(int num)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x8241CC", Offset = "0x8241CC", VA = "0x8241CC")]
	public void DesactivarPackIsla(int num)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x8240A8", Offset = "0x8240A8", VA = "0x8240A8")]
	public void DesactivarIslas()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x824284", Offset = "0x824284", VA = "0x824284")]
	public void ActivarIslas()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x8242F0", Offset = "0x8242F0", VA = "0x8242F0")]
	public void ActivarZDI(int num, int num2)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x824360", Offset = "0x824360", VA = "0x824360")]
	public void DesactivarZDI(int num, int num2)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x8243BC", Offset = "0x8243BC", VA = "0x8243BC")]
	public void DesactivarGrupoZDI(int num)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x824400", Offset = "0x824400", VA = "0x824400")]
	public ControladorIslas()
	{
	}
}
[Token(Token = "0x2000094")]
public class ControladorMejorasAvionTaller : MonoBehaviour
{
	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <AnimacionAcercarAvion>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMejorasAvionTaller <>4__this;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029B")]
			[Address(RVA = "0x827508", Offset = "0x827508", VA = "0x827508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029D")]
			[Address(RVA = "0x827550", Offset = "0x827550", VA = "0x827550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x824F94", Offset = "0x824F94", VA = "0x824F94")]
		[DebuggerHidden]
		public <AnimacionAcercarAvion>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x827438", Offset = "0x827438", VA = "0x827438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x82743C", Offset = "0x82743C", VA = "0x82743C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x827510", Offset = "0x827510", VA = "0x827510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <AnimacionSalirArmaYEntrarNueva>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool lanzarConfeti;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorMejorasAvionTaller <>4__this;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform objetoAnimacion;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int tipo;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <t>5__2;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <inicio>5__3;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0x8276F4", Offset = "0x8276F4", VA = "0x8276F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A3")]
			[Address(RVA = "0x82773C", Offset = "0x82773C", VA = "0x82773C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x825BCC", Offset = "0x825BCC", VA = "0x825BCC")]
		[DebuggerHidden]
		public <AnimacionSalirArmaYEntrarNueva>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x827558", Offset = "0x827558", VA = "0x827558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x82755C", Offset = "0x82755C", VA = "0x82755C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x8276FC", Offset = "0x8276FC", VA = "0x8276FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <meshFantasmal>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool getChildren;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool esMesh2;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorMejorasAvionTaller <>4__this;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject mesh;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0x827994", Offset = "0x827994", VA = "0x827994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A9")]
			[Address(RVA = "0x8279DC", Offset = "0x8279DC", VA = "0x8279DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x826E10", Offset = "0x826E10", VA = "0x826E10")]
		[DebuggerHidden]
		public <meshFantasmal>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x827744", Offset = "0x827744", VA = "0x827744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x827748", Offset = "0x827748", VA = "0x827748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x82799C", Offset = "0x82799C", VA = "0x82799C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fantasmal;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material ultimoMaterial;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ultimoMaterialP38;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] partesMetralletaCentral;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] partesMetralletaSecundariaDerecha;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] partesMetralletaSecundariaIzquierda;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] partesMetralletaLateralDerecha;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] partesMetralletaLateralIzquierda;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] partesMetralletaVDerecha;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] partesMetralletaVIzquierda;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject misilesGuiados;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject bonusMonedas;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject reparadorDano;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3[] posicionAvionPorMejora;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int posicionRotacion;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem confeti;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource confeti_audio;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool esInicio;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion rotInicial;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int posRotacionInicial;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float tRot;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine acercarCor;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float tiempoDelante;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool enAnimacionAcercar;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool avionEstaCerca;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 inicio;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 inicioEscala;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 final;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 finalEscala;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine armaCentral;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine armaSecundariaD;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine armaSecundariaI;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine armaLateralD;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine armaLateralI;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine armaVD;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Coroutine armaVI;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Coroutine misilesG;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Coroutine bonusM;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Coroutine reparadorD;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AnimationCurve curva;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool accesorioMoviendose;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public MeshRenderer[] meshes;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeshRenderer[] meshes2;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject hologramaDescriptivo;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshProUGUI textoHologramaDescriptivo;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public LineRenderer LineRend1;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public LineRenderer LineRend2;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform originLRposition;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool LineRend1Activo;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool LineRend2Activo;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Transform targetTransform1;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Transform targetTransform2;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x824410", Offset = "0x824410", VA = "0x824410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x8244A0", Offset = "0x8244A0", VA = "0x8244A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x824E44", Offset = "0x824E44", VA = "0x824E44")]
	public void RotarSegunStickDerecho(float valor, bool rotarEnX)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x824EAC", Offset = "0x824EAC", VA = "0x824EAC")]
	public void AcercarAvion()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x824F20", Offset = "0x824F20", VA = "0x824F20")]
	[IteratorStateMachine(typeof(<AnimacionAcercarAvion>d__34))]
	private IEnumerator AnimacionAcercarAvion()
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x824FBC", Offset = "0x824FBC", VA = "0x824FBC")]
	public void ApagarTodasLasMeshes()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x82520C", Offset = "0x82520C", VA = "0x82520C")]
	public void CambiarMeshMetralletaCentral(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x8253A4", Offset = "0x8253A4", VA = "0x8253A4")]
	public void CambiarMeshMetralletasSecundarias(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x825558", Offset = "0x825558", VA = "0x825558")]
	public void CambiarMeshMetralletasLaterales(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x82570C", Offset = "0x82570C", VA = "0x82570C")]
	public void CambiarMeshMetralletasV(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x8258C0", Offset = "0x8258C0", VA = "0x8258C0")]
	public void CambiarMeshMisilesGuiados(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x8259C4", Offset = "0x8259C4", VA = "0x8259C4")]
	public void CambiarMeshBonusMonedas(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x825AC8", Offset = "0x825AC8", VA = "0x825AC8")]
	public void CambiarMeshReparadorDano(bool lanzarConfeti, bool inicio = false)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x8252F8", Offset = "0x8252F8", VA = "0x8252F8")]
	[IteratorStateMachine(typeof(<AnimacionSalirArmaYEntrarNueva>d__55))]
	private IEnumerator AnimacionSalirArmaYEntrarNueva(Transform objetoAnimacion, int tipo, bool deInicio, bool lanzarConfeti)
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x825BF4", Offset = "0x825BF4", VA = "0x825BF4")]
	private void CambiarMesh(int tipo)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x826A44", Offset = "0x826A44", VA = "0x826A44")]
	public void ActualizarMeshesEnNivelZero(int meshIgnorada)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x826994", Offset = "0x826994", VA = "0x826994")]
	[IteratorStateMachine(typeof(<meshFantasmal>d__60))]
	private IEnumerator meshFantasmal(GameObject mesh, bool getChildren, bool esMesh2 = false)
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x826E38", Offset = "0x826E38", VA = "0x826E38")]
	public void ResetMaterialesMeshes()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x82707C", Offset = "0x82707C", VA = "0x82707C")]
	public void LanzarConfeti()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x8270AC", Offset = "0x8270AC", VA = "0x8270AC")]
	public void CambiarTextoDescriptivoTaller(int nivelMejora)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x824878", Offset = "0x824878", VA = "0x824878")]
	public void ActualizarLineRenderers()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x827360", Offset = "0x827360", VA = "0x827360")]
	public ControladorMejorasAvionTaller()
	{
	}
}
[Token(Token = "0x2000098")]
public class ControladorMisionHolografica : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000099")]
	public struct Mision
	{
		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI descripcion;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI progreso;
	}

	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <ActualizarCadaSegundo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMisionHolografica <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x828D0C", Offset = "0x828D0C", VA = "0x828D0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BA")]
			[Address(RVA = "0x828D54", Offset = "0x828D54", VA = "0x828D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x827B14", Offset = "0x827B14", VA = "0x827B14")]
		[DebuggerHidden]
		public <ActualizarCadaSegundo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x828BE0", Offset = "0x828BE0", VA = "0x828BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x828BE4", Offset = "0x828BE4", VA = "0x828BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x828D14", Offset = "0x828D14", VA = "0x828D14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009B")]
	[CompilerGenerated]
	private sealed class <EnsenarHolograma>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMisionHolografica <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x828F08", Offset = "0x828F08", VA = "0x828F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x828F50", Offset = "0x828F50", VA = "0x828F50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x828220", Offset = "0x828220", VA = "0x828220")]
		[DebuggerHidden]
		public <EnsenarHolograma>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x828D5C", Offset = "0x828D5C", VA = "0x828D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x828D60", Offset = "0x828D60", VA = "0x828D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x828F10", Offset = "0x828F10", VA = "0x828F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mision misionesZDI1;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine actualizacion;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine mostrandoPuntos;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ManagerMisiones.OutResultadoEstrella resultadoZDI1;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ManagerMisiones.OutResultadoEstrella resultadoZDI2;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool haCambiadoValor;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool ensenandoHolograma;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool flag_m_1;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool flag_m_2;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool flag_m_3;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool flag_m_4;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool flag_m_5;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool flag_mExtra_4;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool flag_mExtra_5;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x8279E4", Offset = "0x8279E4", VA = "0x8279E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x827A44", Offset = "0x827A44", VA = "0x827A44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x827AE8", Offset = "0x827AE8", VA = "0x827AE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x827A74", Offset = "0x827A74", VA = "0x827A74")]
	[IteratorStateMachine(typeof(<ActualizarCadaSegundo>d__7))]
	private IEnumerator ActualizarCadaSegundo()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x827B3C", Offset = "0x827B3C", VA = "0x827B3C")]
	public void ActualizarTextoDorado(int numMision)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x827E5C", Offset = "0x827E5C", VA = "0x827E5C")]
	private int cantidadObjetivoDeEstaMision(int numMision)
	{
		return default(int);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x827D1C", Offset = "0x827D1C", VA = "0x827D1C")]
	private string explicacionLargaDeEstaMision(int numMision)
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x827FE4", Offset = "0x827FE4", VA = "0x827FE4")]
	public bool ComprobarValorCambiado()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x8281AC", Offset = "0x8281AC", VA = "0x8281AC")]
	[IteratorStateMachine(typeof(<EnsenarHolograma>d__16))]
	private IEnumerator EnsenarHolograma()
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x828248", Offset = "0x828248", VA = "0x828248")]
	public void PonerInformacionMisiones()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x828BD8", Offset = "0x828BD8", VA = "0x828BD8")]
	public ControladorMisionHolografica()
	{
	}
}
[Token(Token = "0x200009C")]
public class ControladorMonedas : MonoBehaviour
{
	[Token(Token = "0x200009D")]
	[CompilerGenerated]
	private sealed class <InvocarMonedasParaPerderlasCorrutina>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numMonedasPerdidas;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorMonedas <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CE")]
			[Address(RVA = "0x83D274", Offset = "0x83D274", VA = "0x83D274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D0")]
			[Address(RVA = "0x83D2BC", Offset = "0x83D2BC", VA = "0x83D2BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x83D144", Offset = "0x83D144", VA = "0x83D144")]
		[DebuggerHidden]
		public <InvocarMonedasParaPerderlasCorrutina>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x83D16C", Offset = "0x83D16C", VA = "0x83D16C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x83D170", Offset = "0x83D170", VA = "0x83D170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x83D27C", Offset = "0x83D27C", VA = "0x83D27C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject moneda;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Moneda[] monedas;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform posicionArray;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Moneda> monedasActivas;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int monedaActual;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject estrella;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Moneda[] estrellas;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform posicionArrayEstrella;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Moneda> estrellasActivas;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int estrellaActual;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Anade offset Y a la altura de aparicion de las monedas")]
	private float offsetY;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float timerMonedas;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float auxTimerMonedas;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int contadorMonedasFMOD;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool perdiendoMonedas;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x828F58", Offset = "0x828F58", VA = "0x828F58")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x8292DC", Offset = "0x8292DC", VA = "0x8292DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x829314", Offset = "0x829314", VA = "0x829314")]
	public void InvocarMonedasParaPerderlas(int numMonedasPerdidas)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x829334", Offset = "0x829334", VA = "0x829334")]
	[IteratorStateMachine(typeof(<InvocarMonedasParaPerderlasCorrutina>d__18))]
	private IEnumerator InvocarMonedasParaPerderlasCorrutina(int numMonedasPerdidas)
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x8293B8", Offset = "0x8293B8", VA = "0x8293B8")]
	public List<Moneda> InvocarMonedas(int num, Vector3 posicionPadre, int muchaDispersion, Transform customTransform, bool useTransform = false, bool deBoss = false, bool perderlasPorMuerte = false)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x829E94", Offset = "0x829E94", VA = "0x829E94")]
	public void InvocarEstrella(Vector3 posicionPadre, bool muchaDispersion)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x82A448", Offset = "0x82A448", VA = "0x82A448")]
	public void DevolverALaPull(Moneda moneda, bool esEstrella)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x82A548", Offset = "0x82A548", VA = "0x82A548")]
	public void DevolverTodasLasMonedas()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x82A740", Offset = "0x82A740", VA = "0x82A740")]
	public void TimerMonedas()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x82A7E8", Offset = "0x82A7E8", VA = "0x82A7E8")]
	public ControladorMonedas()
	{
	}
}
[Token(Token = "0x200009E")]
public class ControladorNiebla : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] camaras;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nivel;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VolumetricFog[] fogCamaras;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VolumetricFogProfile menuProfile;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VolumetricFogProfile[] profilesSegunNiveles;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VolumetricFogProfile[] profilesSegunNivelesRecreativa;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x83D2C4", Offset = "0x83D2C4", VA = "0x83D2C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x83D374", Offset = "0x83D374", VA = "0x83D374")]
	public void BuscarCamara()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x83D6A4", Offset = "0x83D6A4", VA = "0x83D6A4")]
	public void RecogerNivel()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x83D700", Offset = "0x83D700", VA = "0x83D700")]
	public void CambiarProfileArribaYAbajo(bool posicion)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x83DD9C", Offset = "0x83DD9C", VA = "0x83DD9C")]
	public ControladorNiebla()
	{
	}
}
[Token(Token = "0x200009F")]
public class ControladorNivel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A0")]
	public class GrupoEnemgosZDI
	{
		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GrupoEnemigos> gruposEnemigosIn;

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x848598", Offset = "0x848598", VA = "0x848598")]
		public GrupoEnemgosZDI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000A1")]
	public class GrupoEnemgosTerrestresZDI
	{
		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> gruposEnemigosTerrestresIn;

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x8485A0", Offset = "0x8485A0", VA = "0x8485A0")]
		public GrupoEnemgosTerrestresZDI()
		{
		}
	}

	[Token(Token = "0x20000A2")]
	public enum TipoDeVista
	{
		[Token(Token = "0x4000571")]
		Cenital,
		[Token(Token = "0x4000572")]
		Lateral,
		[Token(Token = "0x4000573")]
		Trasera,
		[Token(Token = "0x4000574")]
		FijaCenital,
		[Token(Token = "0x4000575")]
		FijaLateral,
		[Token(Token = "0x4000576")]
		FijaTrasera
	}

	[Token(Token = "0x20000A3")]
	public enum FiligranaAnimacion
	{
		[Token(Token = "0x4000578")]
		SinAnimacion,
		[Token(Token = "0x4000579")]
		Looping1,
		[Token(Token = "0x400057A")]
		Looping2,
		[Token(Token = "0x400057B")]
		Tirabuzon1,
		[Token(Token = "0x400057C")]
		Tirabuzon2
	}

	[Serializable]
	[Token(Token = "0x20000A4")]
	public class TriggerNivel
	{
		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool haSidoActivado;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Coordenada Z del nivel en el que se activará el trigger")]
		public Transform triggerTransform;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TipoDeVista tipoDeVista;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocidadCore;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 seguirAvionEnX;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 seguirAvionEnY;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ocultarSalaRecreativa;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float tamañoCamara;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float distanciaAAvion;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform PuntoDeVistaFija;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color directionalLightColor;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FiligranaAnimacion filigranaAvionAnimacion;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("La posición (0, 0, 0) es el centro del area de juego")]
		public Vector3 nuevaPosicionNave;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float velocidadAnimacion;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float retrasoCambioVista;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("1 sería lo 'normal'")]
		public float velocidadReposicion;

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x8485A8", Offset = "0x8485A8", VA = "0x8485A8")]
		public TriggerNivel()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	[CompilerGenerated]
	private sealed class <FinZdiPorTiempo>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorNivel <>4__this;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000308")]
			[Address(RVA = "0x8486E8", Offset = "0x8486E8", VA = "0x8486E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600030A")]
			[Address(RVA = "0x848730", Offset = "0x848730", VA = "0x848730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x8444BC", Offset = "0x8444BC", VA = "0x8444BC")]
		[DebuggerHidden]
		public <FinZdiPorTiempo>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x848634", Offset = "0x848634", VA = "0x848634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x848638", Offset = "0x848638", VA = "0x848638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x8486F0", Offset = "0x8486F0", VA = "0x8486F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A6")]
	[CompilerGenerated]
	private sealed class <FinZDIPantallaNegra>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorNivel <>4__this;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool muerte;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0x84892C", Offset = "0x84892C", VA = "0x84892C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0x848974", Offset = "0x848974", VA = "0x848974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x84456C", Offset = "0x84456C", VA = "0x84456C")]
		[DebuggerHidden]
		public <FinZDIPantallaNegra>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x848738", Offset = "0x848738", VA = "0x848738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x84873C", Offset = "0x84873C", VA = "0x84873C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x848934", Offset = "0x848934", VA = "0x848934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A7")]
	[CompilerGenerated]
	private sealed class <DesactivarPantallaNegraPorTiempo>d__134 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000314")]
			[Address(RVA = "0x848A60", Offset = "0x848A60", VA = "0x848A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000316")]
			[Address(RVA = "0x848AA8", Offset = "0x848AA8", VA = "0x848AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x844604", Offset = "0x844604", VA = "0x844604")]
		[DebuggerHidden]
		public <DesactivarPantallaNegraPorTiempo>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x84897C", Offset = "0x84897C", VA = "0x84897C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x848980", Offset = "0x848980", VA = "0x848980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x848A68", Offset = "0x848A68", VA = "0x848A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A8")]
	[CompilerGenerated]
	private sealed class <AnimacionInicio>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorNivel <>4__this;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <delta>5__2;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0x848BE8", Offset = "0x848BE8", VA = "0x848BE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031C")]
			[Address(RVA = "0x848C30", Offset = "0x848C30", VA = "0x848C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x846430", Offset = "0x846430", VA = "0x846430")]
		[DebuggerHidden]
		public <AnimacionInicio>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x848AB0", Offset = "0x848AB0", VA = "0x848AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x848AB4", Offset = "0x848AB4", VA = "0x848AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x848BF0", Offset = "0x848BF0", VA = "0x848BF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A9")]
	[CompilerGenerated]
	private sealed class <EncenderRecreativaParaEfecctoDesaparecer>d__146 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorNivel <>4__this;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000320")]
			[Address(RVA = "0x849018", Offset = "0x849018", VA = "0x849018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000322")]
			[Address(RVA = "0x849060", Offset = "0x849060", VA = "0x849060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x84744C", Offset = "0x84744C", VA = "0x84744C")]
		[DebuggerHidden]
		public <EncenderRecreativaParaEfecctoDesaparecer>d__146(int <>1__state)
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x848C38", Offset = "0x848C38", VA = "0x848C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x848C3C", Offset = "0x848C3C", VA = "0x848C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x849020", Offset = "0x849020", VA = "0x849020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	[CompilerGenerated]
	private sealed class <FinZDIPorTiempo>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorNivel <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0x84926C", Offset = "0x84926C", VA = "0x84926C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0x8492B4", Offset = "0x8492B4", VA = "0x8492B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x84753C", Offset = "0x84753C", VA = "0x84753C")]
		[DebuggerHidden]
		public <FinZDIPorTiempo>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x849068", Offset = "0x849068", VA = "0x849068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x84906C", Offset = "0x84906C", VA = "0x84906C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x849274", Offset = "0x849274", VA = "0x849274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AB")]
	[CompilerGenerated]
	private sealed class <DoubleCheck3raPersona>d__158 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool toTerceraPersona;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032C")]
			[Address(RVA = "0x8493F4", Offset = "0x8493F4", VA = "0x8493F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032E")]
			[Address(RVA = "0x84943C", Offset = "0x84943C", VA = "0x84943C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x8478E8", Offset = "0x8478E8", VA = "0x8478E8")]
		[DebuggerHidden]
		public <DoubleCheck3raPersona>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x8492BC", Offset = "0x8492BC", VA = "0x8492BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x8492C0", Offset = "0x8492C0", VA = "0x8492C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x8493FC", Offset = "0x8493FC", VA = "0x8493FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AC")]
	[CompilerGenerated]
	private sealed class <CambioVelocidadConLerp>d__178 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velLerp;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float newVel;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <velIni>5__3;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0x849590", Offset = "0x849590", VA = "0x849590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x8495D8", Offset = "0x8495D8", VA = "0x8495D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x847AC8", Offset = "0x847AC8", VA = "0x847AC8")]
		[DebuggerHidden]
		public <CambioVelocidadConLerp>d__178(int <>1__state)
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x849444", Offset = "0x849444", VA = "0x849444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x849448", Offset = "0x849448", VA = "0x849448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x849598", Offset = "0x849598", VA = "0x849598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[CompilerGenerated]
	private sealed class <CambioZoomConLerp>d__179 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float newZoom;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velLerp;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <zoomIni>5__3;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <zoomEnd>5__4;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000338")]
			[Address(RVA = "0x8499C0", Offset = "0x8499C0", VA = "0x8499C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033A")]
			[Address(RVA = "0x849A08", Offset = "0x849A08", VA = "0x849A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x847AF0", Offset = "0x847AF0", VA = "0x847AF0")]
		[DebuggerHidden]
		public <CambioZoomConLerp>d__179(int <>1__state)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x8495E0", Offset = "0x8495E0", VA = "0x8495E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x8495E4", Offset = "0x8495E4", VA = "0x8495E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x8499C8", Offset = "0x8499C8", VA = "0x8499C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Controladores")]
	public ControladorDificultad controladorDificultad;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Caracteristicas")]
	private Nivel nivelActual;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MultiplicadorVelocidadCore;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform areaJuego;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform jugador;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool iniciado;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float porcentajeCompletado;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioManager mM;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvionJugador player;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvionJugador avionGrande;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AvionJugador avionPeque;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SonidosAvion sonidosAvion;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControladorIndicadores[] cI;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool bossActivo;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool bossInstanciado;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool final;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool enAvionGrande;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tiempoInicio;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public NivelZDI.TipoZonaDeImersion tipoZDI;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("Color default es R: 0.5529, G: 0.5882, B: 0.6313, A: 0.5019")]
	public Color skyboxColor;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float intensidadExposure;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Util para cambiar el color de los materiales cuando es un ambiente diferente")]
	public Material[] materialesVegetacion;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Color default es Blanco (RGBA = 255)")]
	public Color nuevoColorVegetacion;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Grupos Enemigos Nivel")]
	public GameObject grupoEnemigos;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject enemigosActivos;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GrupoEnemigos[] gruposEnemigos;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int totalGrupoEnemigos;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int numGruposEnemigos;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int grupoActual;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Enemigo> enemigosEnPantalla;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public GameObject objetoAlmacenBalas;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Proyectil> almacenBalas;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject[] grupoEnemigosTerrestres;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] grupoEnemigosMinas;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SpawnerMonedas[] grupoMonedas;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int numGrupoTerrestre;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int numGrupoMina;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int numGrupoMonedas;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Grupos Enemigos ZDI")]
	public NivelZDI[] zonasDeImersion;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool enZonaDeImersion;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	public bool inicioZDI;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public int contadorZDI;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector3 posicionAntesZDI;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ControladorAvionPrincipal cap;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public bool zdi1Finalizada;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool zdi2Finalizada;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool yendomeAMenu;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public List<VolumetricFog> volumetricsFog;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public bool[] conseguidoEstrella;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public bool nivelAcabado;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GrupoEnemgosZDI[] gruposEnemigosZDI;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int numGruposEnemigosZDI;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int grupoActualZDI;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int puntoDeImersionActual;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public List<GrupoEnemigos> grupoEnemigosActivos;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[HideInInspector]
	public bool salaAlHacerPausaEncendida;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GrupoEnemgosTerrestresZDI[] gruposEnemigosTerrestresZDI;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int numGrupoEnemigosTerrestresZDI;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int grupoActualTerrestresZDI;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Header("PartesZDI")]
	public GameObject zonas;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int parteNivel;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int totalPartesNivel;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public int parteNivelZDI;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public int totalPartesNivelZDI;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[Header("Tiempo entre enemigos")]
	public float contadorTiempo;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float tiempoMaximo;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool spawn;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[Header("Monedas")]
	public ControladorMonedas c_monedas;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[HideInInspector]
	public PoolEnemigos poolEnemigos;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[HideInInspector]
	public PoolExplosiones poolExplosiones;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[HideInInspector]
	public GameObject lensFlare;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	public bool bossDerrotado;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	[HideInInspector]
	public bool enTransicionDeZdi;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[HideInInspector]
	public Vector3 posicionUltimoMegaBoom;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[HideInInspector]
	public Transform portaAviones;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	public PoolSplashes poolSplashes;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	public List<Moneda> monedasSoltadasPorBoss;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[HideInInspector]
	public bool bossHaSoltadoMonedas;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
	[HideInInspector]
	public bool bossEntrando;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[HideInInspector]
	public EnemigoBoss boss;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[HideInInspector]
	public ControladorLluvia controladorLluviaActual;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[HideInInspector]
	public float tiempoDeUltimamonedaDropeada;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[HideInInspector]
	public bool[] estrellasDoradasConseguidas;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[HideInInspector]
	public int muertesEnelNivel;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Material skyboxNocheParaQuest;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int playerId;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Player playerRewired;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[HideInInspector]
	public Material skyboxMaterial;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public Color skyboxcolor;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float journeyLength;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private float journeyLengthZDI;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private float tiempoTransicionDeZdi;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private float sumaVelocidadDebug;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public bool superZoom;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	private bool bossSoltado;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int triggerActual;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private float updateRateSeconds;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int frameCount;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float dt;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float fps;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float tiempoDesdeCambioDeResolucion;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float ticksMirarFinZdi;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public float contadorTiempoRealentizado;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[HideInInspector]
	public bool tiempoRealentizado;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29D")]
	[HideInInspector]
	public bool texturaTrozosRotosAvionesCambiada;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29E")]
	[HideInInspector]
	public bool texturaTorretasCambiada;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29F")]
	[HideInInspector]
	public bool texturaAvionSimpleCambiada;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public bool texturaAvionDisparosCambiada;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	[HideInInspector]
	public bool texturaAvionAcrobaciasCambiada;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	[HideInInspector]
	public bool texturaHeinkelCambiada;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
	[HideInInspector]
	public bool texturaHeinkelTorretaCambiada;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	[HideInInspector]
	public bool texturaBarcoPequeCambiada;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
	[HideInInspector]
	public bool texturaHelicopteroCambiada;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A6")]
	[HideInInspector]
	public bool texturaHelicopteroRojoCambiada;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Coroutine finZdiPorTiempoCor;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Coroutine finZdiCor;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[HideInInspector]
	public bool finalizandoZDI;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<GameObject> bunkersActivosAlIrAZDI;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector3 posIniAvionFake;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private Vector3 rotIniAvionFake;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Vector3 escalaIniAvionFake;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Coroutine corFinZDIPorTiempo;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[Header("2076")]
	public bool esSideView;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	[HideInInspector]
	public int vistaActual;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[HideInInspector]
	public Transform tVistaFija;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[HideInInspector]
	public int nivelDeVelocidad;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float[] velocidades;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public float nivelDeZoom;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float[] zooms;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public float valorScrollUniversoMat;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float valorScrollUniversoMatZDI;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private Material universomaterial;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private Light directionalLight;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public TriggerNivel[] triggersNivel;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private Coroutine corCambioVelocidad;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private Coroutine corCambioZoom;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private TipoDeVista oldTipoDeVista;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x83DDA4", Offset = "0x83DDA4", VA = "0x83DDA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x83E244", Offset = "0x83E244", VA = "0x83E244")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x83ED68", Offset = "0x83ED68", VA = "0x83ED68")]
	private void ApagarSkybox()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x83EE6C", Offset = "0x83EE6C", VA = "0x83EE6C")]
	private void EncenderSkybox()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x83EF74", Offset = "0x83EF74", VA = "0x83EF74")]
	public void EntrarDirectamenteEnZDI(int num)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x83F1B4", Offset = "0x83F1B4", VA = "0x83F1B4")]
	public void AcabarNivelQueJugar()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x83ECE0", Offset = "0x83ECE0", VA = "0x83ECE0")]
	public void CargarEnCI()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x83F214", Offset = "0x83F214", VA = "0x83F214")]
	public void AddVolumetricFog(VolumetricFog vol)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x83F380", Offset = "0x83F380", VA = "0x83F380")]
	public void IniciarNivel()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x840250", Offset = "0x840250", VA = "0x840250")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x844288", Offset = "0x844288", VA = "0x844288")]
	public void TiempoLento(float tiempo, bool modificarAudio = true)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x844380", Offset = "0x844380", VA = "0x844380")]
	public void QuitarTiempoLento(bool modificarAudio = true)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x844438", Offset = "0x844438", VA = "0x844438")]
	private void IniciarTransicion(float tiempo)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x844214", Offset = "0x844214", VA = "0x844214")]
	[IteratorStateMachine(typeof(<FinZdiPorTiempo>d__130))]
	private IEnumerator FinZdiPorTiempo()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x844164", Offset = "0x844164", VA = "0x844164")]
	public void FinalizarZDI(bool muerte = false)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x8444E4", Offset = "0x8444E4", VA = "0x8444E4")]
	[IteratorStateMachine(typeof(<FinZDIPantallaNegra>d__133))]
	private IEnumerator FinZDIPantallaNegra(bool muerte = false)
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x844594", Offset = "0x844594", VA = "0x844594")]
	[IteratorStateMachine(typeof(<DesactivarPantallaNegraPorTiempo>d__134))]
	private IEnumerator DesactivarPantallaNegraPorTiempo(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x84462C", Offset = "0x84462C", VA = "0x84462C")]
	public void FinZDI(bool muerte = false)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x843B58", Offset = "0x843B58", VA = "0x843B58")]
	public void VaciarGruposActivos(bool zdi)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x845E34", Offset = "0x845E34", VA = "0x845E34")]
	private void VolverAActivarBunkersCore()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x83F004", Offset = "0x83F004", VA = "0x83F004")]
	public void AnimacionZonaDeImersion(int num)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x8463BC", Offset = "0x8463BC", VA = "0x8463BC")]
	[IteratorStateMachine(typeof(<AnimacionInicio>d__141))]
	public IEnumerator AnimacionInicio()
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x846458", Offset = "0x846458", VA = "0x846458")]
	public void IniciarZonaDeImersion()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x846DA4", Offset = "0x846DA4", VA = "0x846DA4")]
	[IteratorStateMachine(typeof(<EncenderRecreativaParaEfecctoDesaparecer>d__146))]
	private IEnumerator EncenderRecreativaParaEfecctoDesaparecer()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x847474", Offset = "0x847474", VA = "0x847474")]
	private void InicioZDIPorTiempo()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x8474C8", Offset = "0x8474C8", VA = "0x8474C8")]
	[IteratorStateMachine(typeof(<FinZDIPorTiempo>d__149))]
	private IEnumerator FinZDIPorTiempo()
	{
		return null;
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x83FED4", Offset = "0x83FED4", VA = "0x83FED4")]
	public void CambiarEntreAviones()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x83FD14", Offset = "0x83FD14", VA = "0x83FD14")]
	public void CambiarParteNivel(int num)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x843F5C", Offset = "0x843F5C", VA = "0x843F5C")]
	public void CambiarParteNivelZDI(int num)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x847564", Offset = "0x847564", VA = "0x847564")]
	public void LimpiarEnemigosMissing()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x83FDD4", Offset = "0x83FDD4", VA = "0x83FDD4")]
	public void CrearAlmacenBalas()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x844028", Offset = "0x844028", VA = "0x844028")]
	public void EliminarAlmacenBalas()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x847670", Offset = "0x847670", VA = "0x847670")]
	public int BuscarEntreRutas()
	{
		return default(int);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x8477FC", Offset = "0x8477FC", VA = "0x8477FC")]
	public void CambiarPanelAvion(bool grande)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x84787C", Offset = "0x84787C", VA = "0x84787C")]
	[IteratorStateMachine(typeof(<DoubleCheck3raPersona>d__158))]
	private IEnumerator DoubleCheck3raPersona(bool toTerceraPersona)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x847910", Offset = "0x847910", VA = "0x847910")]
	private void CambiarVelocidadConLerp(float newVel, float velLerp)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x8479EC", Offset = "0x8479EC", VA = "0x8479EC")]
	private void CambiarZoomConLerp(float newZoom, float velLerp)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x847978", Offset = "0x847978", VA = "0x847978")]
	[IteratorStateMachine(typeof(<CambioVelocidadConLerp>d__178))]
	private IEnumerator CambioVelocidadConLerp(float newVel, float velLerp)
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x847A54", Offset = "0x847A54", VA = "0x847A54")]
	[IteratorStateMachine(typeof(<CambioZoomConLerp>d__179))]
	private IEnumerator CambioZoomConLerp(float newZoom, float velLerp)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x843060", Offset = "0x843060", VA = "0x843060")]
	public void ActivarTrigger(TriggerNivel trigger)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x847B18", Offset = "0x847B18", VA = "0x847B18")]
	private void LlamarCambioVista()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x848074", Offset = "0x848074", VA = "0x848074")]
	private void PosicionarNaveEnEjeBloqueado(TipoDeVista tipoVista)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x848228", Offset = "0x848228", VA = "0x848228")]
	public void SobreescribirArrays()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x848384", Offset = "0x848384", VA = "0x848384")]
	public ControladorNivel()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ControladorPalancaAvion : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	public enum ladoManoAgarrada
	{
		[Token(Token = "0x40005BB")]
		derecha,
		[Token(Token = "0x40005BC")]
		izquieda,
		[Token(Token = "0x40005BD")]
		ninguna
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform palo;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform mango;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform plataforma;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ladoManoAgarrada ladoManoActual;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform manoAgarrada;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 direccionMovimiento;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool sinVR;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float esperarTiempoInicio;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float distanciaManoPrincipal;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x849A10", Offset = "0x849A10", VA = "0x849A10")]
	private void Start()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x849A70", Offset = "0x849A70", VA = "0x849A70")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x84A5A4", Offset = "0x84A5A4", VA = "0x84A5A4")]
	private void CambioAgarrado()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x845CB4", Offset = "0x845CB4", VA = "0x845CB4")]
	public void SoltarPalanca()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x84AF2C", Offset = "0x84AF2C", VA = "0x84AF2C")]
	public ControladorPalancaAvion()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ControladorPlayer : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform posicionCabeza;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x84AF3C", Offset = "0x84AF3C", VA = "0x84AF3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x84B034", Offset = "0x84B034", VA = "0x84B034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x84AF40", Offset = "0x84AF40", VA = "0x84AF40")]
	public void ResposicionarCabeza()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x84B0A0", Offset = "0x84B0A0", VA = "0x84B0A0")]
	public ControladorPlayer()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ControladorRecreativa : MonoBehaviour
{
	[Token(Token = "0x20000B2")]
	[CompilerGenerated]
	private sealed class <AnimacionFechas>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int num;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000364")]
			[Address(RVA = "0x84DE28", Offset = "0x84DE28", VA = "0x84DE28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000366")]
			[Address(RVA = "0x84DE70", Offset = "0x84DE70", VA = "0x84DE70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x84DC70", Offset = "0x84DC70", VA = "0x84DC70")]
		[DebuggerHidden]
		public <AnimacionFechas>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x84DC98", Offset = "0x84DC98", VA = "0x84DC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x84DC9C", Offset = "0x84DC9C", VA = "0x84DC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x84DE30", Offset = "0x84DE30", VA = "0x84DE30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[CompilerGenerated]
	private sealed class <Lerp>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool acercar;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool masLentoElLerp;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__2;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600036A")]
			[Address(RVA = "0x84E2F8", Offset = "0x84E2F8", VA = "0x84E2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600036C")]
			[Address(RVA = "0x84E340", Offset = "0x84E340", VA = "0x84E340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x84DE78", Offset = "0x84DE78", VA = "0x84DE78")]
		[DebuggerHidden]
		public <Lerp>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x84DEA0", Offset = "0x84DEA0", VA = "0x84DEA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x84DEA4", Offset = "0x84DEA4", VA = "0x84DEA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x84E300", Offset = "0x84E300", VA = "0x84E300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <LerpsEscalaCuandoBoss>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <quadPantallaPosIni>5__2;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <quadPantallaPosFin>5__3;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <SueloPosIni>5__4;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <SueloScaleIni>5__5;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <PosPlayerPosIni>5__6;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <PosPlayerScaleIni>5__7;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 <cabinaPosIni>5__8;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 <cabinaScaleIni>5__9;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 <paredesPosIni>5__10;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 <paredesScaleIni>5__11;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 <posIniIndicador>5__12;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float <yIniAreaJuego>5__13;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float <i>5__14;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000370")]
			[Address(RVA = "0x84ED50", Offset = "0x84ED50", VA = "0x84ED50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000372")]
			[Address(RVA = "0x84ED98", Offset = "0x84ED98", VA = "0x84ED98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x84E348", Offset = "0x84E348", VA = "0x84E348")]
		[DebuggerHidden]
		public <LerpsEscalaCuandoBoss>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x84E370", Offset = "0x84E370", VA = "0x84E370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x84E374", Offset = "0x84E374", VA = "0x84E374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x84ED58", Offset = "0x84ED58", VA = "0x84ED58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private sealed class <LerpVelocidad>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocidad;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool rapido;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <velIni>5__2;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <velFin>5__3;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__4;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000376")]
			[Address(RVA = "0x84EF24", Offset = "0x84EF24", VA = "0x84EF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000378")]
			[Address(RVA = "0x84EF6C", Offset = "0x84EF6C", VA = "0x84EF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x84EDA0", Offset = "0x84EDA0", VA = "0x84EDA0")]
		[DebuggerHidden]
		public <LerpVelocidad>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x84EDC8", Offset = "0x84EDC8", VA = "0x84EDC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x84EDCC", Offset = "0x84EDCC", VA = "0x84EDCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x84EF2C", Offset = "0x84EF2C", VA = "0x84EF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <EfectoLuzLedGolpe>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float vel;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tDelta>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x84F1F8", Offset = "0x84F1F8", VA = "0x84F1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600037E")]
			[Address(RVA = "0x84F240", Offset = "0x84F240", VA = "0x84F240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x84EF74", Offset = "0x84EF74", VA = "0x84EF74")]
		[DebuggerHidden]
		public <EfectoLuzLedGolpe>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x84EF9C", Offset = "0x84EF9C", VA = "0x84EF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x84EFA0", Offset = "0x84EFA0", VA = "0x84EFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x84F200", Offset = "0x84F200", VA = "0x84F200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <EfectoLuzLedBoss>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float vel;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tDelta>5__3;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x84F4F8", Offset = "0x84F4F8", VA = "0x84F4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x84F540", Offset = "0x84F540", VA = "0x84F540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x84F248", Offset = "0x84F248", VA = "0x84F248")]
		[DebuggerHidden]
		public <EfectoLuzLedBoss>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x84F270", Offset = "0x84F270", VA = "0x84F270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x84F274", Offset = "0x84F274", VA = "0x84F274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x84F500", Offset = "0x84F500", VA = "0x84F500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B8")]
	[CompilerGenerated]
	private sealed class <ZoomLerpCor>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float retraso;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorRecreativa <>4__this;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 posPosicionCabezaIniCamFija;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float zoom;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool conLerp;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velLerp;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool camFija;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 posCamFijaPadre;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 distancia;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <t>5__2;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <posPosicionCabezaIni>5__3;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000388")]
			[Address(RVA = "0x84FFD8", Offset = "0x84FFD8", VA = "0x84FFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038A")]
			[Address(RVA = "0x850020", Offset = "0x850020", VA = "0x850020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x84F548", Offset = "0x84F548", VA = "0x84F548")]
		[DebuggerHidden]
		public <ZoomLerpCor>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x84F570", Offset = "0x84F570", VA = "0x84F570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x84F574", Offset = "0x84F574", VA = "0x84F574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x84FFE0", Offset = "0x84FFE0", VA = "0x84FFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PosPlayer;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cabina;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform paredes;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIIngame;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform avionFake;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gameOver;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform gameOver_Letras;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform negroJoystick;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform joystick;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer suelo;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer quadPantalla;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 posPlayerEscalaLejos;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 cabinaEscalaLejos;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 paredesEscalaLejos;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 posPlayerEscalaCerca;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 cabinaEscalaCerca;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 paredesEscalaCerca;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 posPlayerEscalaHyperCerca;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 cabinaEscalaHyperCerca;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 paredesEscalaHyperCerca;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 posPlayerEscalaHyperCercaEvento;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 cabinaEscalaHyperCercaEvento;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 paredesEscalaHyperCercaEvento;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 posPlayerPosLejos;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 cabinaPosLejos;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 paredesPosLejos;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 posPlayerPosCerca;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 cabinaPosCerca;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 paredesPosCerca;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 posPlayerPosHyperCerca;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 cabinaPosHyperCerca;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 paredesPosHyperCerca;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 posPlayerPosHyperCercaEvento;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 cabinaPosHyperCercaEvento;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 paredesPosHyperCercaEvento;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public MeshRenderer meshLuzLed;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Material matLuzLed;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Color colorInicialLuzLed;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public EfectoDesaparecer efectoDesaparicionAvion;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public EfectoDesaparecer efectoDesaparecerMaquinas;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[Header("Fechas")]
	public TextMeshProUGUI textoPresente;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshProUGUI textoTeleport;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string stringPresente;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string[] stringsTeleport;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Header("Altavoz")]
	public GameObject altavozNormal;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject altavozZoomOut;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Header("Pausa InGame")]
	public GameObject pausaBotones;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject pausaMisiones;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	public bool actualizandoFechas;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	[HideInInspector]
	public int ultimoNivelConFocus;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Coroutine lerpCor;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[HideInInspector]
	public bool acercarParaBoss;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	[HideInInspector]
	public bool acercarParaEvento;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Coroutine corLeds;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Coroutine corZoomLerp;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 posicionCabezaAntesZdi;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector3 escalaAntesZdi;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[Header("Menu Pausa Misiones")]
	public GameObject menuPausaCore;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject menuPausaZDI;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public TextMeshProUGUI[] titulosMisiones;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public TextMeshProUGUI[] textosMisiones;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public TextMeshProUGUI[] estadoMisiones;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Image[] completadoMisiones;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Image[] falladoMisiones;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Header("Menu Pausa ZDI Misiones")]
	public TextMeshProUGUI tituloZDI;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject zdi1;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject zdi2;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public TextMeshProUGUI tituloMisionZDI1;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public TextMeshProUGUI tituloMisionZDI2;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public TextMeshProUGUI textoMisionZDI1;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public TextMeshProUGUI textoMisionZDI2;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public TextMeshProUGUI estadoMisionZDI1;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public TextMeshProUGUI estadoMisionZDI2;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Image completadoMisionZDI1;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public Image completadoMisionZDI2;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Image falladoMisionZDI1;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Image falladoMisionZDI2;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x84B0A8", Offset = "0x84B0A8", VA = "0x84B0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x84B108", Offset = "0x84B108", VA = "0x84B108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x84BDF0", Offset = "0x84BDF0", VA = "0x84BDF0")]
	public void ActualizarFechas(int index)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x84BEC8", Offset = "0x84BEC8", VA = "0x84BEC8")]
	[IteratorStateMachine(typeof(<AnimacionFechas>d__53))]
	private IEnumerator AnimacionFechas(int num)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x84BF4C", Offset = "0x84BF4C", VA = "0x84BF4C")]
	public string GenerarStringAleatoria()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x84BA24", Offset = "0x84BA24", VA = "0x84BA24")]
	public void CambiarSuelo(bool normal)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x84C550", Offset = "0x84C550", VA = "0x84C550")]
	private void Update()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x840078", Offset = "0x840078", VA = "0x840078")]
	public void Acercar()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x846BAC", Offset = "0x846BAC", VA = "0x846BAC")]
	public void Alejar(bool sinLerp = false)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x84CA58", Offset = "0x84CA58", VA = "0x84CA58")]
	[IteratorStateMachine(typeof(<Lerp>d__60))]
	private IEnumerator Lerp(bool acercar, bool masLentoElLerp = false)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x84CAEC", Offset = "0x84CAEC", VA = "0x84CAEC")]
	private void PonerRecreativa(bool acercar)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x84CC3C", Offset = "0x84CC3C", VA = "0x84CC3C")]
	public void AcercarParaBoss()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x84D1CC", Offset = "0x84D1CC", VA = "0x84D1CC")]
	[IteratorStateMachine(typeof(<LerpsEscalaCuandoBoss>d__65))]
	private IEnumerator LerpsEscalaCuandoBoss()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x84D240", Offset = "0x84D240", VA = "0x84D240")]
	public void CambiarVelocidadBoss(bool rapido = true, float velocidad = 65f)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x84D264", Offset = "0x84D264", VA = "0x84D264")]
	[IteratorStateMachine(typeof(<LerpVelocidad>d__67))]
	private IEnumerator LerpVelocidad(bool rapido, float velocidad = 65f)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x84D2E0", Offset = "0x84D2E0", VA = "0x84D2E0")]
	public void EfectoLucesLed(float tiempo, bool boss)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x84D358", Offset = "0x84D358", VA = "0x84D358")]
	[IteratorStateMachine(typeof(<EfectoLuzLedGolpe>d__70))]
	private IEnumerator EfectoLuzLedGolpe(float vel)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x84D3DC", Offset = "0x84D3DC", VA = "0x84D3DC")]
	[IteratorStateMachine(typeof(<EfectoLuzLedBoss>d__71))]
	private IEnumerator EfectoLuzLedBoss(float vel)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x84D460", Offset = "0x84D460", VA = "0x84D460")]
	public void EfectoLucesLedManual(float tDelta)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x84D4D8", Offset = "0x84D4D8", VA = "0x84D4D8")]
	public void ResetEfectoLucesLed()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x84D57C", Offset = "0x84D57C", VA = "0x84D57C")]
	public void TransicionRecreativaAvion_EncenderAvion()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x8481E8", Offset = "0x8481E8", VA = "0x8481E8")]
	public void EventoZoom(float zoom, Vector3 distancia, bool camFija, Vector3 posPosicionCabezaIniCamFija, Vector3 posCamFijaPadre, bool conLerp, float retraso)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x84D640", Offset = "0x84D640", VA = "0x84D640")]
	public void ZoomLerp(float zoom, float velLerp, Vector3 distancia, bool camFija, Vector3 posPosicionCabezaIniCamFija, Vector3 posCamFijaPadre, bool conLerp, float retraso)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x84D72C", Offset = "0x84D72C", VA = "0x84D72C")]
	[IteratorStateMachine(typeof(<ZoomLerpCor>d__78))]
	private IEnumerator ZoomLerpCor(float zoom, float velLerp, Vector3 distancia, bool camFija, Vector3 posPosicionCabezaIniCamFija, Vector3 posCamFijaPadre, bool conLerp, float retraso = 0f)
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x846E18", Offset = "0x846E18", VA = "0x846E18")]
	public void ZoomNormal()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x845FCC", Offset = "0x845FCC", VA = "0x845FCC")]
	public void PonerZoomComoAntesDeZDI()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x847B74", Offset = "0x847B74", VA = "0x847B74")]
	public void ApagarEncenderSalaRecrativa(bool enabled)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x84D83C", Offset = "0x84D83C", VA = "0x84D83C")]
	public void CambiarMenuPausaCoreZDI(bool core)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x84DA10", Offset = "0x84DA10", VA = "0x84DA10")]
	public ControladorRecreativa()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ControladorSoldado : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform joystikD;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform joystikI;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool manoDerechaAnclada;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool manoIzquierdaAnclada;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool iniciado;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform posicionManoD;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform posicionManoI;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rotacionInicial;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int posicionD;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int posicionI;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator animacion;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3[] rotacionManoR;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] rotacionManoL;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 rotacionJoystick;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 rotacionJoystickAbajo;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x850028", Offset = "0x850028", VA = "0x850028")]
	public void Iniciar()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x85017C", Offset = "0x85017C", VA = "0x85017C")]
	private void Update()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x850C94", Offset = "0x850C94", VA = "0x850C94")]
	public void CambiarControladorMano(int mano, int opcion)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x850DE8", Offset = "0x850DE8", VA = "0x850DE8")]
	public ControladorSoldado()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ControladorTablaLeaderboards : MonoBehaviour
{
	[Token(Token = "0x20000BB")]
	public class JugadorEnTabla
	{
		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI txt_Posicion;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text txt_NombreJugador;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI txt_Score;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform transform;

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x852628", Offset = "0x852628", VA = "0x852628")]
		public JugadorEnTabla()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x852630", Offset = "0x852630", VA = "0x852630")]
		public JugadorEnTabla(Transform transform)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x852428", Offset = "0x852428", VA = "0x852428")]
		public void SetInfoJugador(LogrosRecords.Resultado info)
		{
		}
	}

	[Token(Token = "0x20000BC")]
	public class TablaLeaderboard
	{
		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JugadorEnTabla[] jugadores9primeros;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JugadorEnTabla[] jugadoresTorneo;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JugadorEnTabla[] jugadoresNo9primeros;

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x850EB8", Offset = "0x850EB8", VA = "0x850EB8")]
		public TablaLeaderboard(Transform padre)
		{
		}
	}

	[Token(Token = "0x20000BD")]
	[CompilerGenerated]
	private sealed class <EsperaParaVerSiHayServicios>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nombreMundo;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool esEvento;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControladorTablaLeaderboards <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x8529DC", Offset = "0x8529DC", VA = "0x8529DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x852A24", Offset = "0x852A24", VA = "0x852A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x851564", Offset = "0x851564", VA = "0x851564")]
		[DebuggerHidden]
		public <EsperaParaVerSiHayServicios>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x852770", Offset = "0x852770", VA = "0x852770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x852774", Offset = "0x852774", VA = "0x852774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x8529E4", Offset = "0x8529E4", VA = "0x8529E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	[CompilerGenerated]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorTablaLeaderboards <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x852C10", Offset = "0x852C10", VA = "0x852C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0x852C58", Offset = "0x852C58", VA = "0x852C58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x8518D8", Offset = "0x8518D8", VA = "0x8518D8")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x852A2C", Offset = "0x852A2C", VA = "0x852A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x852A30", Offset = "0x852A30", VA = "0x852A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x852C18", Offset = "0x852C18", VA = "0x852C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject loading;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tablas;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject errorConexion;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent accionBotonCerrar;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform seleccion;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BotonBase botonCerrar;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TablaLeaderboard leaderboardMenu;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine pedirLeaderboardPS4;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool b_OnResultadosObtenidos;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool OnResultadosObtenidosCreado;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool tablaCargada;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshProUGUI textoEnAmarillo1;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text textoEnAmarillo2;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject fondoComun;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x850DF8", Offset = "0x850DF8", VA = "0x850DF8")]
	public void AbrirTabla(string mundo, bool esEvento, bool despuesDeCarrera = false)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x851138", Offset = "0x851138", VA = "0x851138")]
	public void PonerTablaCargando()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x851340", Offset = "0x851340", VA = "0x851340")]
	public void PonerTablaConectionError()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x851184", Offset = "0x851184", VA = "0x851184")]
	public void CargarTabla(string nombreMundo, bool esEvento, bool despuesDeCarrera)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x8514C8", Offset = "0x8514C8", VA = "0x8514C8")]
	[IteratorStateMachine(typeof(<EsperaParaVerSiHayServicios>d__14))]
	private IEnumerator EsperaParaVerSiHayServicios(string nombreMundo, bool esEvento, bool despuesDeCarrera)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x85158C", Offset = "0x85158C", VA = "0x85158C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x851760", Offset = "0x851760", VA = "0x851760")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x851864", Offset = "0x851864", VA = "0x851864")]
	[IteratorStateMachine(typeof(<Start>d__19))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x851900", Offset = "0x851900", VA = "0x851900")]
	private void OnRecordSubido(object sender, int miScoreRecibido, string tabla)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x85196C", Offset = "0x85196C", VA = "0x85196C")]
	private bool ValidarListaResultados(List<LogrosRecords.Resultado> resultados)
	{
		return default(bool);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x851BBC", Offset = "0x851BBC", VA = "0x851BBC")]
	private void OnResultadosObtenidos(object sender, List<LogrosRecords.Resultado> resultados, bool dosListas, string tabla)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x852604", Offset = "0x852604", VA = "0x852604")]
	public void BotonCerrar()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x852620", Offset = "0x852620", VA = "0x852620")]
	public ControladorTablaLeaderboards()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ControladorTVs : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	public enum PosicionEnMenu
	{
		[Token(Token = "0x4000691")]
		Inicio,
		[Token(Token = "0x4000692")]
		Misiones,
		[Token(Token = "0x4000693")]
		Dialogos,
		[Token(Token = "0x4000694")]
		MisionesMenu
	}

	[Serializable]
	[Token(Token = "0x20000C1")]
	public struct Mision
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI titulo;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI descripcion;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI progreso;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image completa;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image fallada;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image completaExtra;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image falladaExtra;
	}

	[Token(Token = "0x20000C2")]
	[CompilerGenerated]
	private sealed class <EfectoTV>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorTVs <>4__this;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x85BA44", Offset = "0x85BA44", VA = "0x85BA44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x85BA8C", Offset = "0x85BA8C", VA = "0x85BA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x85B928", Offset = "0x85B928", VA = "0x85B928")]
		[DebuggerHidden]
		public <EfectoTV>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x85B950", Offset = "0x85B950", VA = "0x85B950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x85B954", Offset = "0x85B954", VA = "0x85B954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x85BA4C", Offset = "0x85BA4C", VA = "0x85BA4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PosicionEnMenu posicionActual;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PosicionEnMenu posicionAnterior;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform altavocesRecreativa;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mision[] misiones;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject panelInicio;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject panelMisiones;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject panelDialogos;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject panelMisionesMenu;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera camara;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool activarCamara;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OLDTVScreen efectoTele;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI textoDistanciaObjetivo;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite spriteEstrellaDorada;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite spriteEstrellaNormal;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hanHabidoCambios;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControladorMenu[] controladorMenu;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeDelay;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine mostrandoPuntos;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool flag_m_1;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool flag_m_2;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool flag_m_3;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	private bool flag_m_4;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool flag_m_5;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool flag_mExtra_4;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool flag_mExtra_5;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] misionesTV;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Misiones Velocidad")]
	public GameObject misionVelocidad;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image estrellaVelocidad;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image falloVelocidad;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI textoVelocidad;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x852C60", Offset = "0x852C60", VA = "0x852C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x852CE8", Offset = "0x852CE8", VA = "0x852CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x852DF4", Offset = "0x852DF4", VA = "0x852DF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x852F64", Offset = "0x852F64", VA = "0x852F64")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x852DF8", Offset = "0x852DF8", VA = "0x852DF8")]
	public void ActualizarTitulos()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x8580FC", Offset = "0x8580FC", VA = "0x8580FC")]
	public void AbrirDialogo(Dialogos.Dialogo dialogo)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x8582E8", Offset = "0x8582E8", VA = "0x8582E8")]
	public void CerrarDialogo()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x858170", Offset = "0x858170", VA = "0x858170")]
	public void CambiarTV(PosicionEnMenu estado)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x858300", Offset = "0x858300", VA = "0x858300")]
	private void ApagarPaneles()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x8580EC", Offset = "0x8580EC", VA = "0x8580EC")]
	private void ActivarDesactivarCamara()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x85834C", Offset = "0x85834C", VA = "0x85834C")]
	private bool flagDeEstaMision(int iMision)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x85839C", Offset = "0x85839C", VA = "0x85839C")]
	private void setFlagDeEstaMision(int iMision, bool valor)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x8583EC", Offset = "0x8583EC", VA = "0x8583EC")]
	public void ActualizarTextoDorado(int numMision)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x859200", Offset = "0x859200", VA = "0x859200")]
	private int cantidadObjetivoDeEstaMision(int numMision)
	{
		return default(int);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x858F38", Offset = "0x858F38", VA = "0x858F38")]
	private string explicacionLargaDeEstaMision(int numMision)
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x8596B8", Offset = "0x8596B8", VA = "0x8596B8")]
	private void PonerInformacionMision(int numMision)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x8533D8", Offset = "0x8533D8", VA = "0x8533D8")]
	public void PonerInformacionMisiones()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x85B22C", Offset = "0x85B22C", VA = "0x85B22C")]
	public void EsconderInterfaz(int tipoInterfaz)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x85B6E4", Offset = "0x85B6E4", VA = "0x85B6E4")]
	public void ActualizarMisionVelocidad()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x857370", Offset = "0x857370", VA = "0x857370")]
	public void CheckVelocidadFallada()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x85B8AC", Offset = "0x85B8AC", VA = "0x85B8AC")]
	[IteratorStateMachine(typeof(<EfectoTV>d__52))]
	private IEnumerator EfectoTV()
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x85B920", Offset = "0x85B920", VA = "0x85B920")]
	public ControladorTVs()
	{
	}
}
[Token(Token = "0x20000C3")]
public abstract class ControladorVR : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float a;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x85BA94", Offset = "0x85BA94", VA = "0x85BA94", Slot = "4")]
	public virtual void Vibracion(bool derecho, float potencia, float duration)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x85BBC4", Offset = "0x85BBC4", VA = "0x85BBC4")]
	protected ControladorVR()
	{
	}
}
[Token(Token = "0x20000C4")]
public class ControladorVROculus : ControladorVR
{
	[Token(Token = "0x20000C5")]
	[CompilerGenerated]
	private sealed class <WaitEnable>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x85C314", Offset = "0x85C314", VA = "0x85C314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x85C35C", Offset = "0x85C35C", VA = "0x85C35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x85BC4C", Offset = "0x85BC4C", VA = "0x85BC4C")]
		[DebuggerHidden]
		public <WaitEnable>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x85C270", Offset = "0x85C270", VA = "0x85C270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x85C274", Offset = "0x85C274", VA = "0x85C274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x85C31C", Offset = "0x85C31C", VA = "0x85C31C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MandoOculus mandoDerecho;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MandoOculus mandoIzquierdo;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MandoOculus tracker;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isHandleHMDUnmounted;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isDashOpen;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int ticksSinHacerNada;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool quest1;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform oculusOffsetDer;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform oculusOffsetIzq;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int mano;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x85BBCC", Offset = "0x85BBCC", VA = "0x85BBCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x85BBEC", Offset = "0x85BBEC", VA = "0x85BBEC")]
	[IteratorStateMachine(typeof(<WaitEnable>d__9))]
	private IEnumerator WaitEnable()
	{
		return null;
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x85BC74", Offset = "0x85BC74", VA = "0x85BC74")]
	private void Recolocar()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x85BCCC", Offset = "0x85BCCC", VA = "0x85BCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x85BD20", Offset = "0x85BD20", VA = "0x85BD20")]
	private bool CheckDashOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x85BD28", Offset = "0x85BD28", VA = "0x85BD28")]
	public float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x85BD7C", Offset = "0x85BD7C", VA = "0x85BD7C")]
	public Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x85BE44", Offset = "0x85BE44", VA = "0x85BE44")]
	public bool GetAtras(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x85BE98", Offset = "0x85BE98", VA = "0x85BE98")]
	public bool GetPausa(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x85BEEC", Offset = "0x85BEEC", VA = "0x85BEEC")]
	public bool GetReposicionarCabeza(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x85BF40", Offset = "0x85BF40", VA = "0x85BF40")]
	public bool GetDispararConBoton()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x85BF94", Offset = "0x85BF94", VA = "0x85BF94")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x85C0C8", Offset = "0x85C0C8", VA = "0x85C0C8")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x85C1AC", Offset = "0x85C1AC", VA = "0x85C1AC")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x85BFA4", Offset = "0x85BFA4", VA = "0x85BFA4")]
	private void DashOpened()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x85C034", Offset = "0x85C034", VA = "0x85C034")]
	private void DashClosed()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x85C240", Offset = "0x85C240", VA = "0x85C240")]
	public bool IsRightie()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x85C248", Offset = "0x85C248", VA = "0x85C248")]
	public bool IsLeftie()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x85C250", Offset = "0x85C250", VA = "0x85C250")]
	public ControladorVROculus()
	{
	}
}
[Token(Token = "0x20000C6")]
public class MandoOculus
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private XRNode index;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float trigger;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerPress;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool triggerUp;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool triggerDown;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grip;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool gripPress;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool gripPressDown;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool gripPressUp;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool botonAplicationPress;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool botonAplicationPressDown;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool botonAplicationPressUp;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool touchPress;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool touchPressUp;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool touchPressDown;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 stick;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool botonAXOculusPress;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool botonAXOculusPressUp;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool botonAXOculusPressDown;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool botonBYOculusPress;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool botonBYOculusPressUp;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool botonBYOculusPressDown;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool botonMenu;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool atras;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 velocidadMando;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mando_Go;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool algunBotonTocado;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool pulsandoTrigger;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool pulsandoGrip;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool pulsandoAX;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool pulsandoBY;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool pulsandoMenu;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 localPosition;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 localrotation;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 oldLocalPosition;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 oldLocalrotation;
}
[Token(Token = "0x20000C7")]
public class ControladorVRPico : ControladorVR
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int indexDerecha;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int indexIzquierda;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mandoDerechoCargado;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool mandoIzquierdoCargado;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int ticksSinHacerNada;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MandoPico mandoDerecho;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MandoPico mandoIzquierdo;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float triggerDer;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float triggerIzq;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool recolocarCabeza;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool atras;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 stickD;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 stickI;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool PicoHome;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool invertirMandos;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 posIniDer;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 posIniIzq;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool sensorIniciado;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tiempoF;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float ticksComprobacion;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool manoEncendida;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool onFocus;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool oncasco;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PXR_ScreenFade screenFade;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x85C364", Offset = "0x85C364", VA = "0x85C364")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x85C7D8", Offset = "0x85C7D8", VA = "0x85C7D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x85C948", Offset = "0x85C948", VA = "0x85C948")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x85D38C", Offset = "0x85D38C", VA = "0x85D38C")]
	private void FocoPorFocused(bool focus)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x85D110", Offset = "0x85D110", VA = "0x85D110")]
	private void FocoPorCasco(bool focus)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x85D608", Offset = "0x85D608", VA = "0x85D608")]
	public void HacerFade(bool on)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x85D69C", Offset = "0x85D69C", VA = "0x85D69C")]
	public float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x85D6B4", Offset = "0x85D6B4", VA = "0x85D6B4")]
	public Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x85D6DC", Offset = "0x85D6DC", VA = "0x85D6DC")]
	public bool GetAtras(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x85D6E4", Offset = "0x85D6E4", VA = "0x85D6E4")]
	public bool GetPausa(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x85D6EC", Offset = "0x85D6EC", VA = "0x85D6EC")]
	public bool GetReposicionarCabeza(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x85D6F4", Offset = "0x85D6F4", VA = "0x85D6F4")]
	public bool GetHOMEPicoButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x85D6FC", Offset = "0x85D6FC", VA = "0x85D6FC", Slot = "4")]
	public override void Vibracion(bool derecho, float potencia, float duration)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x85D860", Offset = "0x85D860", VA = "0x85D860", Slot = "5")]
	public virtual void StopVibracion()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x85D92C", Offset = "0x85D92C", VA = "0x85D92C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x85D938", Offset = "0x85D938", VA = "0x85D938")]
	public ControladorVRPico()
	{
	}
}
[Token(Token = "0x20000C8")]
public class MandoPico
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float trigger;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerPress;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool triggerUp;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool triggerDown;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grip;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool gripPress;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool gripPressDown;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool gripPressUp;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool botonAplicationPress;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool botonAplicationPressDown;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool botonAplicationPressUp;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool touchPress;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool touchPressUp;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool touchPressDown;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 stick;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool botonAXOculusPress;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool botonAXOculusPressUp;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool botonAXOculusPressDown;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool botonBYOculusPress;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool botonBYOculusPressUp;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool botonBYOculusPressDown;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool botonMenu;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool botonPICO;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 velocidadMando;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool algunBotonTocado;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 posicion;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform mando;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool pulsandoTrigger;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool pulsandoGrip;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool pulsandoAX;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool pulsandoBY;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool pulsandoMenu;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool pulsandoPico;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 localPosition;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion localrotation;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected InputDevice device;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x85C718", Offset = "0x85C718", VA = "0x85C718")]
	public MandoPico(Transform mando, int index)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x85D9C4", Offset = "0x85D9C4", VA = "0x85D9C4")]
	protected void GetDevice()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x85CE7C", Offset = "0x85CE7C", VA = "0x85CE7C")]
	public void LeerBotones()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ControladorVRPs4 : ControladorVR
{
	[Token(Token = "0x20000CA")]
	private enum EstadoVibracionMano
	{
		[Token(Token = "0x4000744")]
		noVibra,
		[Token(Token = "0x4000745")]
		shortVibrando,
		[Token(Token = "0x4000746")]
		longVibrando
	}

	[Token(Token = "0x20000CB")]
	[CompilerGenerated]
	private sealed class <EsperarCambiarResolucionMenu>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float resolution;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x85E55C", Offset = "0x85E55C", VA = "0x85E55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000409")]
			[Address(RVA = "0x85E5A4", Offset = "0x85E5A4", VA = "0x85E5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x85DA60", Offset = "0x85DA60", VA = "0x85DA60")]
		[DebuggerHidden]
		public <EsperarCambiarResolucionMenu>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x85E374", Offset = "0x85E374", VA = "0x85E374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x85E378", Offset = "0x85E378", VA = "0x85E378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x85E564", Offset = "0x85E564", VA = "0x85E564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int cantidadMoves;

	[Token(Token = "0x4000711")]
	private const int gatillo = 2;

	[Token(Token = "0x4000712")]
	private const int btCentralGrande = 4;

	[Token(Token = "0x4000713")]
	private const int btStart = 8;

	[Token(Token = "0x4000714")]
	private const int btTriangulo = 16;

	[Token(Token = "0x4000715")]
	private const int btCirculo = 32;

	[Token(Token = "0x4000716")]
	private const int btCruz = 64;

	[Token(Token = "0x4000717")]
	private const int btCuadrado = 128;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string aimEquis;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string aimCirculo;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string aimCuadrado;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string aimTriangulo;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string aimOptions;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string aimTouchpad;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string aimDPADHorizontal;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string aimDPADVertical;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string aimL1;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string aimR1;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string aimL2;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static string aimR2;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string aimStickDerechoVertical;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static string aimStickDerechoHorizontal;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static string aimStickIzquierdoVertical;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static string aimStickIzquierdoHorizontal;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool botonApretado;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool botonRecolocarPresionadoDerecha;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool botonRecolocarPresionadoIzquierda;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool botonEquisPresionadoDerecha;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool botonEquisPresionadoIzquierda;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool botonEquisDerecha;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool botonEquisIzquierda;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool botonCuadroDerecha;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool botonCuadroIzquierda;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool botonTrianguloDerecha;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool botonTrianguloIzquierda;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	private bool botonCirculoDerecha;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool botonCirculoIzquierda;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float triggerDer;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float triggerIzq;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool recolocarCabeza;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool pausa;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool atras;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool cuadrado;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triangulo;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 stickD;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 stickI;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 posAnteriorManoDerecha;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EstadoVibracionMano estadoVibracionManoDcha;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private EstadoVibracionMano estadoVibracionManoIzda;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hayPeticionDevibrarDchaEsteFrame;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool hayPeticionDevibrarIzdaEsteFrame;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x85D9F0", Offset = "0x85D9F0", VA = "0x85D9F0")]
	[IteratorStateMachine(typeof(<EsperarCambiarResolucionMenu>d__48))]
	private IEnumerator EsperarCambiarResolucionMenu(float resolution)
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x85DA88", Offset = "0x85DA88", VA = "0x85DA88")]
	public float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x85DAA0", Offset = "0x85DAA0", VA = "0x85DAA0")]
	public Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x85DAC8", Offset = "0x85DAC8", VA = "0x85DAC8")]
	public bool GetAtras(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x85DAD0", Offset = "0x85DAD0", VA = "0x85DAD0")]
	public bool GetPausa(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x85DAD8", Offset = "0x85DAD8", VA = "0x85DAD8")]
	public bool GetReposicionarCabeza(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x85DAE0", Offset = "0x85DAE0", VA = "0x85DAE0")]
	public bool GetTriangulo(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x85DAE8", Offset = "0x85DAE8", VA = "0x85DAE8")]
	public bool GetCuadrado(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x85DAF0", Offset = "0x85DAF0", VA = "0x85DAF0")]
	private void UpdateMoves()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x85DD5C", Offset = "0x85DD5C", VA = "0x85DD5C")]
	private void UpdateDualshock()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x85DDD4", Offset = "0x85DDD4", VA = "0x85DDD4")]
	private void UpdateAimController()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x85E000", Offset = "0x85E000", VA = "0x85E000")]
	private void UpdateTodo()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x85E094", Offset = "0x85E094", VA = "0x85E094")]
	public ControladorVRPs4()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ControladorVRSteam : ControladorVR
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tiempo;

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x85E5AC", Offset = "0x85E5AC", VA = "0x85E5AC")]
	private bool UserPresence()
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x85E5B4", Offset = "0x85E5B4", VA = "0x85E5B4")]
	public float GetTrigger(bool derecha)
	{
		return default(float);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x85E5BC", Offset = "0x85E5BC", VA = "0x85E5BC")]
	public Vector2 GetStick(bool derecha)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x85E5FC", Offset = "0x85E5FC", VA = "0x85E5FC")]
	public bool GetAtras(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x85E604", Offset = "0x85E604", VA = "0x85E604")]
	public bool GetPausa(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x85E60C", Offset = "0x85E60C", VA = "0x85E60C")]
	public bool GetReposicionarCabeza(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x85E614", Offset = "0x85E614", VA = "0x85E614")]
	public bool GetDispararConBoton(bool derecha)
	{
		return default(bool);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x85E61C", Offset = "0x85E61C", VA = "0x85E61C")]
	public ControladorVRSteam()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ControladorZDIComb : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControladorNivel cN;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalCombustible;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float combustibleActual;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x85E624", Offset = "0x85E624", VA = "0x85E624")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x85E658", Offset = "0x85E658", VA = "0x85E658")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x85E754", Offset = "0x85E754", VA = "0x85E754")]
	public ControladorZDIComb()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ForcesController : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum EstadosAvion
	{
		[Token(Token = "0x4000767")]
		Neutral,
		[Token(Token = "0x4000768")]
		Recreativa,
		[Token(Token = "0x4000769")]
		Libre,
		[Token(Token = "0x400076A")]
		Metralleta
	}

	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <ChafadoForce>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x85EAE8", Offset = "0x85EAE8", VA = "0x85EAE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x85EB30", Offset = "0x85EB30", VA = "0x85EB30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x85E87C", Offset = "0x85E87C", VA = "0x85E87C")]
		[DebuggerHidden]
		public <ChafadoForce>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x85EACC", Offset = "0x85EACC", VA = "0x85EACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x85EAD0", Offset = "0x85EAD0", VA = "0x85EAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x85EAF0", Offset = "0x85EAF0", VA = "0x85EAF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <GolpeArribaAbajo>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042C")]
			[Address(RVA = "0x85EB54", Offset = "0x85EB54", VA = "0x85EB54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042E")]
			[Address(RVA = "0x85EB9C", Offset = "0x85EB9C", VA = "0x85EB9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x85E904", Offset = "0x85E904", VA = "0x85E904")]
		[DebuggerHidden]
		public <GolpeArribaAbajo>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x85EB38", Offset = "0x85EB38", VA = "0x85EB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x85EB3C", Offset = "0x85EB3C", VA = "0x85EB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x85EB5C", Offset = "0x85EB5C", VA = "0x85EB5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D2")]
	[CompilerGenerated]
	private sealed class <GolpeLateral>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x85EBC0", Offset = "0x85EBC0", VA = "0x85EBC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x85EC08", Offset = "0x85EC08", VA = "0x85EC08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x85E98C", Offset = "0x85E98C", VA = "0x85E98C")]
		[DebuggerHidden]
		public <GolpeLateral>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x85EBA4", Offset = "0x85EBA4", VA = "0x85EBA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x85EBA8", Offset = "0x85EBA8", VA = "0x85EBA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x85EBC8", Offset = "0x85EBC8", VA = "0x85EBC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D3")]
	[CompilerGenerated]
	private sealed class <VibracionDisparo>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x85EC2C", Offset = "0x85EC2C", VA = "0x85EC2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0x85EC74", Offset = "0x85EC74", VA = "0x85EC74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x85EA90", Offset = "0x85EA90", VA = "0x85EA90")]
		[DebuggerHidden]
		public <VibracionDisparo>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x85EC10", Offset = "0x85EC10", VA = "0x85EC10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x85EC14", Offset = "0x85EC14", VA = "0x85EC14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x85EC34", Offset = "0x85EC34", VA = "0x85EC34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EstadosAvion estadoC;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EstadosAvion estadoAnterior;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Roll;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Pitch;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Yaw;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Vibration;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fuerzaMotionSystem;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool vibracionActivada;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerId;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool vibracion;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool parado;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool movimiento;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool golpe;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool muerte;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool disparo;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool pausa;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool finalDeNivel;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool variante;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool cuentaPrincipio;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float velocidad;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float incremental;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float valorDisparo;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool nextLevel;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool arrancar;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x85E75C", Offset = "0x85E75C", VA = "0x85E75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x85E80C", Offset = "0x85E80C", VA = "0x85E80C")]
	public void Parado()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x85E818", Offset = "0x85E818", VA = "0x85E818")]
	public void GolpeFlojo()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x85E81C", Offset = "0x85E81C", VA = "0x85E81C")]
	[IteratorStateMachine(typeof(<ChafadoForce>d__33))]
	private IEnumerator ChafadoForce()
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x85E8A4", Offset = "0x85E8A4", VA = "0x85E8A4")]
	[IteratorStateMachine(typeof(<GolpeArribaAbajo>d__34))]
	private IEnumerator GolpeArribaAbajo()
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x85E92C", Offset = "0x85E92C", VA = "0x85E92C")]
	[IteratorStateMachine(typeof(<GolpeLateral>d__35))]
	private IEnumerator GolpeLateral()
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x85E9B4", Offset = "0x85E9B4", VA = "0x85E9B4")]
	public void Respawn()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x85E9BC", Offset = "0x85E9BC", VA = "0x85E9BC")]
	public void Disparo(bool activo)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x85E9B8", Offset = "0x85E9B8", VA = "0x85E9B8")]
	public void ResetForces()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x85EA60", Offset = "0x85EA60", VA = "0x85EA60")]
	public void Pausa(bool estado)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x85EA88", Offset = "0x85EA88", VA = "0x85EA88")]
	public void FinalizarCarrera(int estado)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x85EA00", Offset = "0x85EA00", VA = "0x85EA00")]
	[IteratorStateMachine(typeof(<VibracionDisparo>d__42))]
	private IEnumerator VibracionDisparo()
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x85EAB8", Offset = "0x85EAB8", VA = "0x85EAB8")]
	public void SetFuerzaMotionSystem(float valor)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x85EAC4", Offset = "0x85EAC4", VA = "0x85EAC4")]
	public ForcesController()
	{
	}
}
[Token(Token = "0x20000D4")]
public class GrupoEnemigos : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	public enum TipoDeEnemigo
	{
		[Token(Token = "0x40007A0")]
		EnemigoNormal,
		[Token(Token = "0x40007A1")]
		Boss,
		[Token(Token = "0x40007A2")]
		Aliado
	}

	[Serializable]
	[Token(Token = "0x20000D6")]
	public class PosicionesDependendoEnemigo
	{
		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] posicionEnemigo;

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x860444", Offset = "0x860444", VA = "0x860444")]
		public PosicionesDependendoEnemigo()
		{
		}
	}

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Si está en true todos los enemigos instanciados ignoraran el progreso, puntuacion y monedas")]
	public bool ignorarProgreso;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool esDeZDI;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TipoDeEnemigo tipoEnemigo;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Enemigo.TipoEnemigo tipoDeEnemigo;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject enemigoPrincipal;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool enemigosSec;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool sinModificarEscalaEnLaEntrada;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] enemigosSecundarios;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool deBoss16;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PosicionesDependendoEnemigo[] posicionEnemigosSec;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool enemigoSpawn;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int cantidadEnemigos;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Aviones normales: 40Km/h  ||  helicoptero: 10km/h  ||  Heinkel: 10Km/h")]
	public float velocidadEnemigos;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float velocidadEnemigosInicial;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float intensidadRoll;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float tiempoEntreEnemigos;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AirplanePath[] rutaGrupo;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool spawnEnemigo;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float contadorTiempo;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int contadorEnemigos;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Enemigo> enemigosActivos;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Boss bossActivo;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnemigoBoss enemigoBossActivo;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform eliminados;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ControladorNivel cN;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject enemigoIntance;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("MODIFICADOR ENEMIGOS")]
	public Torreta.TipoDeApuntadoYDisparo tipoDisparoEnemigo;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Proyectil.TipoProyectil tipoProyectil;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float vidaMaxima;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cooldownDisparos;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float cooldownExtraPrimerDisparo;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float velocidadBala;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float dañoBala;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float tiempoRacha;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float numRachas;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float minAnguloRotGiratorioMode;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float maxAnguloRotGiratorioMode;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float velocidadGiroGiratorioMode;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float minaFuerzaLanzamiento;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float escudoEnTorretas;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float tiempoLaser;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float distanciaLaser;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool movimientoMundoGlobal;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool grupoEliminadoFlag;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x85EC7C", Offset = "0x85EC7C", VA = "0x85EC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x85EF10", Offset = "0x85EF10", VA = "0x85EF10")]
	private void Update()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x85F0AC", Offset = "0x85F0AC", VA = "0x85F0AC")]
	public bool SeHanInstanciadoTodos()
	{
		return default(bool);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x85F000", Offset = "0x85F000", VA = "0x85F000")]
	public void EliminarGrupo()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x85F0C0", Offset = "0x85F0C0", VA = "0x85F0C0")]
	public void SoltarEnemigos()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x85EFD8", Offset = "0x85EFD8", VA = "0x85EFD8")]
	private void SpawnEnemigoSegunTipo()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x85F0E0", Offset = "0x85F0E0", VA = "0x85F0E0")]
	private void SpawnEnemigo()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x85F9B4", Offset = "0x85F9B4", VA = "0x85F9B4")]
	private void SpawnBoss()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x86012C", Offset = "0x86012C", VA = "0x86012C")]
	public void SpawnAliado()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x860414", Offset = "0x860414", VA = "0x860414")]
	public GrupoEnemigos()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Nivel : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform inicio;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform final;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float velocidadNivel;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float posicionActual;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool zonaImersion;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AreaDeJuego screenSize;

	[Token(Token = "0x1700007C")]
	public float VelocidadNivel
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x86044C", Offset = "0x86044C", VA = "0x86044C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x860454", Offset = "0x860454", VA = "0x860454")]
		set
		{
		}
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x86045C", Offset = "0x86045C", VA = "0x86045C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x8605B4", Offset = "0x8605B4", VA = "0x8605B4")]
	public Nivel()
	{
	}
}
[Token(Token = "0x20000D8")]
public class NivelZDI : Nivel
{
	[Token(Token = "0x20000D9")]
	public enum TipoZonaDeImersion
	{
		[Token(Token = "0x40007D2")]
		PrimeraPersona = 0,
		[Token(Token = "0x40007D3")]
		TerceraPersona = 1,
		[Token(Token = "0x40007D4")]
		Metralleta = 2,
		[Token(Token = "0x40007D5")]
		PrimeraPersonaCombustible = 3,
		[Token(Token = "0x40007D6")]
		PrimeraPersonaAterrizar = 4,
		[Token(Token = "0x40007D7")]
		NULL = -1
	}

	[Token(Token = "0x20000DA")]
	[CompilerGenerated]
	private sealed class <IncrementarVelocidad>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NivelZDI <>4__this;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045C")]
			[Address(RVA = "0x8618D8", Offset = "0x8618D8", VA = "0x8618D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045E")]
			[Address(RVA = "0x861920", Offset = "0x861920", VA = "0x861920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x8611B4", Offset = "0x8611B4", VA = "0x8611B4")]
		[DebuggerHidden]
		public <IncrementarVelocidad>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x8617BC", Offset = "0x8617BC", VA = "0x8617BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x8617C0", Offset = "0x8617C0", VA = "0x8617C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x8618E0", Offset = "0x8618E0", VA = "0x8618E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DB")]
	[CompilerGenerated]
	private sealed class <IniciarMuerte>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NivelZDI <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0x861B2C", Offset = "0x861B2C", VA = "0x861B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000464")]
			[Address(RVA = "0x861B74", Offset = "0x861B74", VA = "0x861B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x8612B0", Offset = "0x8612B0", VA = "0x8612B0")]
		[DebuggerHidden]
		public <IniciarMuerte>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x861928", Offset = "0x861928", VA = "0x861928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x86192C", Offset = "0x86192C", VA = "0x86192C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x861B34", Offset = "0x861B34", VA = "0x861B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DC")]
	[CompilerGenerated]
	private sealed class <ColorBlancoYNegro>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NivelZDI <>4__this;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <f>5__2;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x861CDC", Offset = "0x861CDC", VA = "0x861CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x861D24", Offset = "0x861D24", VA = "0x861D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x8615AC", Offset = "0x8615AC", VA = "0x8615AC")]
		[DebuggerHidden]
		public <ColorBlancoYNegro>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x861B7C", Offset = "0x861B7C", VA = "0x861B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x861B80", Offset = "0x861B80", VA = "0x861B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x861CE4", Offset = "0x861CE4", VA = "0x861CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DD")]
	[CompilerGenerated]
	private sealed class <TiempoParado>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <f>5__2;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x861EA8", Offset = "0x861EA8", VA = "0x861EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0x861EF0", Offset = "0x861EF0", VA = "0x861EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x861634", Offset = "0x861634", VA = "0x861634")]
		[DebuggerHidden]
		public <TiempoParado>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x861D2C", Offset = "0x861D2C", VA = "0x861D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x861D30", Offset = "0x861D30", VA = "0x861D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x861EB0", Offset = "0x861EB0", VA = "0x861EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DE")]
	[CompilerGenerated]
	private sealed class <SonidoBajado>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NivelZDI <>4__this;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <f>5__2;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000474")]
			[Address(RVA = "0x861FF8", Offset = "0x861FF8", VA = "0x861FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000476")]
			[Address(RVA = "0x862040", Offset = "0x862040", VA = "0x862040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x8616D0", Offset = "0x8616D0", VA = "0x8616D0")]
		[DebuggerHidden]
		public <SonidoBajado>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x861EF8", Offset = "0x861EF8", VA = "0x861EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x861EFC", Offset = "0x861EFC", VA = "0x861EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x862000", Offset = "0x862000", VA = "0x862000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DF")]
	[CompilerGenerated]
	private sealed class <SonidoSubir>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NivelZDI <>4__this;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <f>5__2;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x8621E8", Offset = "0x8621E8", VA = "0x8621E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x862230", Offset = "0x862230", VA = "0x862230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x8616F8", Offset = "0x8616F8", VA = "0x8616F8")]
		[DebuggerHidden]
		public <SonidoSubir>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x862048", Offset = "0x862048", VA = "0x862048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x86204C", Offset = "0x86204C", VA = "0x86204C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x8621F0", Offset = "0x8621F0", VA = "0x8621F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Caracteristicas")]
	public TipoZonaDeImersion tipoZDI;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("EfectoMuerte")]
	public bool efectoMorir;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.PostProcessing.PostProcessingProfile postPo;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ColorGradingModel.Settings original;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ColorGradingModel.Settings modificar;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public float totalTiempo;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string masterBusString;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Bus masterBus;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool iniciada;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
	public bool finalizado;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
	public bool spawnBossAlInicio;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float distancia;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Vector3 direccion;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public MiniBoss objetivoMiniboss;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public bool objectivoActivo;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public ControladorIndicadores cI;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public SonidosAvion sonidos;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[Header("ZDI Tiempo y Parabola")]
	public float maxTiempo;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public float zdiTiempoCount;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[HideInInspector]
	public bool tiempoAgotado;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject tanque;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject[] enemigosParabola;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private int contadorEnemigos;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private bool puedeSpawnear;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float segundosEnemigoSpawn;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	[Header("Parametros ZDI Vertical")]
	public bool tienePortaaviones;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
	public bool muerteConParacaidas;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DE")]
	public bool portaavionesResposoYDespegue;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float combustible;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float refillCombustible;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool combustibleFlag;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	[HideInInspector]
	public float velocidadInicialNivel;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[HideInInspector]
	public bool yaPuedeDespegar;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F1")]
	public bool exagerarInclinacionVertical;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F2")]
	[HideInInspector]
	public bool tipoMiniboss;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F3")]
	private bool a;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	[Tooltip("19.0 Default")]
	public float decreasionVelocityTest;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[Tooltip("Sirve para cambiar la velocidad en las ZDIs donde sigues a un Miniboss")]
	public int nuevaVelocidadNivel;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public int velocidadReducidaEjeX;

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x8605C4", Offset = "0x8605C4", VA = "0x8605C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x8607F8", Offset = "0x8607F8", VA = "0x8607F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x860F98", Offset = "0x860F98", VA = "0x860F98")]
	public void SetupJugadorParabola()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x861070", Offset = "0x861070", VA = "0x861070")]
	public void ResetJugadorParabola()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x860EC0", Offset = "0x860EC0", VA = "0x860EC0")]
	public void VelocidadSeguimientoMiniboss()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x861140", Offset = "0x861140", VA = "0x861140")]
	[IteratorStateMachine(typeof(<IncrementarVelocidad>d__45))]
	private IEnumerator IncrementarVelocidad()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x860F3C", Offset = "0x860F3C", VA = "0x860F3C")]
	public void CombustibleNulo()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8611DC", Offset = "0x8611DC", VA = "0x8611DC")]
	public void morirPlayer()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x86123C", Offset = "0x86123C", VA = "0x86123C")]
	[IteratorStateMachine(typeof(<IniciarMuerte>d__48))]
	private IEnumerator IniciarMuerte()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8612D8", Offset = "0x8612D8", VA = "0x8612D8")]
	public void PonerTodoComoAntes()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x861538", Offset = "0x861538", VA = "0x861538")]
	[IteratorStateMachine(typeof(<ColorBlancoYNegro>d__50))]
	private IEnumerator ColorBlancoYNegro()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8615D4", Offset = "0x8615D4", VA = "0x8615D4")]
	[IteratorStateMachine(typeof(<TiempoParado>d__51))]
	private IEnumerator TiempoParado()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x86165C", Offset = "0x86165C", VA = "0x86165C")]
	[IteratorStateMachine(typeof(<SonidoBajado>d__52))]
	private IEnumerator SonidoBajado()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8614C4", Offset = "0x8614C4", VA = "0x8614C4")]
	[IteratorStateMachine(typeof(<SonidoSubir>d__53))]
	private IEnumerator SonidoSubir()
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x861720", Offset = "0x861720", VA = "0x861720")]
	public NivelZDI()
	{
	}
}
[Token(Token = "0x20000E0")]
public class PartesSoldado : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject manoDerecha;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject manoIzquierda;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controladorMD;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject controladorMI;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animacion;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform mandoD;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform mandoI;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMeshRenderer manosRenderer;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject camaraTV;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool anteriorValorCascoQuitado;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x862238", Offset = "0x862238", VA = "0x862238")]
	public void EncenderApagarManosRender(bool enable, bool porCascoQuitado = false)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x8622FC", Offset = "0x8622FC", VA = "0x8622FC")]
	public PartesSoldado()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PlayerSteam : MonoBehaviour
{
	[Token(Token = "0x20000E2")]
	public enum TipoVibracion
	{
		[Token(Token = "0x4000825")]
		ninguno,
		[Token(Token = "0x4000826")]
		golpe,
		[Token(Token = "0x4000827")]
		muerte,
		[Token(Token = "0x4000828")]
		inicioZDI,
		[Token(Token = "0x4000829")]
		powerUp,
		[Token(Token = "0x400082A")]
		monedas,
		[Token(Token = "0x400082B")]
		agarrarSoltarPalanca
	}

	[Token(Token = "0x20000E3")]
	public enum Controller
	{
		[Token(Token = "0x400082D")]
		Oculus,
		[Token(Token = "0x400082E")]
		TFlight
	}

	[Token(Token = "0x20000E4")]
	public enum TipoAnimacionVibracion
	{
		[Token(Token = "0x4000830")]
		In,
		[Token(Token = "0x4000831")]
		Out,
		[Token(Token = "0x4000832")]
		Constant,
		[Token(Token = "0x4000833")]
		All
	}

	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <Vibracion>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerSteam <>4__this;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool dosMandos;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public ushort potencia;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duracion;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool lado;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049B")]
			[Address(RVA = "0x8660A0", Offset = "0x8660A0", VA = "0x8660A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049D")]
			[Address(RVA = "0x8660E8", Offset = "0x8660E8", VA = "0x8660E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x865830", Offset = "0x865830", VA = "0x865830")]
		[DebuggerHidden]
		public <Vibracion>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x865ECC", Offset = "0x865ECC", VA = "0x865ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x865ED0", Offset = "0x865ED0", VA = "0x865ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x8660A8", Offset = "0x8660A8", VA = "0x8660A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[CompilerGenerated]
	private sealed class <PonerCabinaLucesRojas>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerSteam <>4__this;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float velocidad;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duracion;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <tSeno>5__3;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <ini>5__4;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <end>5__5;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A1")]
			[Address(RVA = "0x866424", Offset = "0x866424", VA = "0x866424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A3")]
			[Address(RVA = "0x86646C", Offset = "0x86646C", VA = "0x86646C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x86594C", Offset = "0x86594C", VA = "0x86594C")]
		[DebuggerHidden]
		public <PonerCabinaLucesRojas>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x8660F0", Offset = "0x8660F0", VA = "0x8660F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x8660F4", Offset = "0x8660F4", VA = "0x8660F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x86642C", Offset = "0x86642C", VA = "0x86642C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private sealed class <HacerVibrarCamara>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerSteam <>4__this;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TipoAnimacionVibracion tipoAnimation;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duracion;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float potencia;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxAngulo;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__2;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <tSeno>5__3;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve <animCurve>5__4;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0x8666EC", Offset = "0x8666EC", VA = "0x8666EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0x866734", Offset = "0x866734", VA = "0x866734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x865C3C", Offset = "0x865C3C", VA = "0x865C3C")]
		[DebuggerHidden]
		public <HacerVibrarCamara>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x866474", Offset = "0x866474", VA = "0x866474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x866478", Offset = "0x866478", VA = "0x866478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x8666F4", Offset = "0x8666F4", VA = "0x8666F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private sealed class <HacerPararVibrarCamara>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerSteam <>4__this;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <zIni>5__2;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__3;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x866958", Offset = "0x866958", VA = "0x866958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0x8669A0", Offset = "0x8669A0", VA = "0x8669A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x865C64", Offset = "0x865C64", VA = "0x865C64")]
		[DebuggerHidden]
		public <HacerPararVibrarCamara>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x86673C", Offset = "0x86673C", VA = "0x86673C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x866740", Offset = "0x866740", VA = "0x866740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x866960", Offset = "0x866960", VA = "0x866960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TipoVibracion tipoVibracionActual;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pararVibracion;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool vibracionIniciada;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fuerzaVibracion;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool vibracionPermitida;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerId;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Player player;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ControladorVRSteam controladorVRSteam;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControladorVRPs4 controladorVRPs4;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ControladorVROculus controladorVROculus;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ControladorVRPico controladorVRPico;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ControladorVR controladorVR;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedPoseDriver mandoDer;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrackedPoseDriver mandoIzq;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Transform mandoDerecho;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Transform mandoIzquierdo;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool playerIniciado;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject camaraTv;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject canvasTv;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Controller control;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int tFlight;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string inputRecolocar;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string inputPausa;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AccionesJugador.TipoSensores tipoSensorAnterior;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public bool stopUpdate;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float ticksEspera;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int camApagada;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera camCabeza;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve Out;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AnimationCurve Constant;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve In;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve InOut;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine vibracion;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine corVibrarCamara;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Coroutine corCabinaLucesRojas;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Light lightCabina;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Color colorInicialLightCabina;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float intensidadInicialLightCabina;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine pararVibrar;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool oldAceptar;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool oldPause;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool oldAAtras;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float oldY;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int ticksRecuperacionAceptarPorTrigger;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x86230C", Offset = "0x86230C", VA = "0x86230C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x8623F8", Offset = "0x8623F8", VA = "0x8623F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x86296C", Offset = "0x86296C", VA = "0x86296C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x862DC0", Offset = "0x862DC0", VA = "0x862DC0")]
	public void Vibra(TipoVibracion tipoVibracion, bool aux = false)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x8653E8", Offset = "0x8653E8", VA = "0x8653E8")]
	public void Golpe(float duration, int motor)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x8656E0", Offset = "0x8656E0", VA = "0x8656E0")]
	public void AgarrarSoltarPalanca(float duration, int motor, bool manoDer)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x865480", Offset = "0x865480", VA = "0x865480")]
	public void Muerte(float duration, int motor)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x865518", Offset = "0x865518", VA = "0x865518")]
	public void InicioZDI(float duration, int motor)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x8655B0", Offset = "0x8655B0", VA = "0x8655B0")]
	public void PowerUp(float duration, int motor)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x865648", Offset = "0x865648", VA = "0x865648")]
	public void Monedas(float duration, int motor)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x8652B8", Offset = "0x8652B8", VA = "0x8652B8")]
	public void PararVibracion()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x86577C", Offset = "0x86577C", VA = "0x86577C")]
	[IteratorStateMachine(typeof(<Vibracion>d__47))]
	private IEnumerator Vibracion(AnimationCurve animation, float duracion, int motor, string nombre, bool lado, ushort potencia = 1000, bool dosMandos = true)
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x865858", Offset = "0x865858", VA = "0x865858")]
	public void CabinaLucesRojas(float duracion, float velocidad)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x8658C4", Offset = "0x8658C4", VA = "0x8658C4")]
	[IteratorStateMachine(typeof(<PonerCabinaLucesRojas>d__54))]
	private IEnumerator PonerCabinaLucesRojas(float duracion, float velocidad)
	{
		return null;
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x865974", Offset = "0x865974", VA = "0x865974")]
	public void VibrarCamara(TipoAnimacionVibracion tipoAnimation, float duracion, float potencia, float maxAngulo, TipoVibracion tipoVibracion = TipoVibracion.golpe)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x865B60", Offset = "0x865B60", VA = "0x865B60")]
	public void PararVibrarCamara()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x865AB8", Offset = "0x865AB8", VA = "0x865AB8")]
	[IteratorStateMachine(typeof(<HacerVibrarCamara>d__58))]
	private IEnumerator HacerVibrarCamara(TipoAnimacionVibracion tipoAnimation, float duracion, float potencia, float maxAngulo)
	{
		return null;
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x865BC8", Offset = "0x865BC8", VA = "0x865BC8")]
	[IteratorStateMachine(typeof(<HacerPararVibrarCamara>d__59))]
	private IEnumerator HacerPararVibrarCamara()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x865C8C", Offset = "0x865C8C", VA = "0x865C8C")]
	public ControladorVRPico GetVRPico()
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x86496C", Offset = "0x86496C", VA = "0x86496C")]
	private void ControlesVR()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x865C94", Offset = "0x865C94", VA = "0x865C94")]
	private void SinInput()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x863E20", Offset = "0x863E20", VA = "0x863E20")]
	private void ControlesNoVR()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x862F2C", Offset = "0x862F2C", VA = "0x862F2C")]
	private void ControlesTotales()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x865DE8", Offset = "0x865DE8", VA = "0x865DE8")]
	public void Vibrar(bool derecha, float potencia, float duracion)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x865E0C", Offset = "0x865E0C", VA = "0x865E0C")]
	public PlayerSteam()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PoolEnemigos : MonoBehaviour
{
	[Token(Token = "0x20000EA")]
	[CompilerGenerated]
	private sealed class <ApagarProyectilFrameSiguiente>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bala;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PoolEnemigos <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x868A68", Offset = "0x868A68", VA = "0x868A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x868AB0", Offset = "0x868AB0", VA = "0x868AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x86873C", Offset = "0x86873C", VA = "0x86873C")]
		[DebuggerHidden]
		public <ApagarProyectilFrameSiguiente>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x8688A8", Offset = "0x8688A8", VA = "0x8688A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x8688AC", Offset = "0x8688AC", VA = "0x8688AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x868A70", Offset = "0x868A70", VA = "0x868A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] balasPrefab;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] padresDeBalas;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int NUM_BALAS_ESCALABLES;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int NUM_MISILES;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int NUM_BALA_ESTANDAR;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int NUM_MINAS;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int NUM_BALAS_GUSANO;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int contBalasEscalables;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int contMisiles;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int contBalasEstandar;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int contMinas;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int contBalasGusano;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> balasEscalables;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> misiles;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> balasEstandar;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> minas;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> balasgusano;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x8669A8", Offset = "0x8669A8", VA = "0x8669A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x8669AC", Offset = "0x8669AC", VA = "0x8669AC")]
	private void Init()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x8673EC", Offset = "0x8673EC", VA = "0x8673EC")]
	public GameObject InstanciarBala(Proyectil.TipoProyectil tipo, Vector3 position, Vector3 eulerAngles)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x8682A0", Offset = "0x8682A0", VA = "0x8682A0")]
	public void DestruirBala(Proyectil.TipoProyectil tipo, GameObject bala)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x8686AC", Offset = "0x8686AC", VA = "0x8686AC")]
	[IteratorStateMachine(typeof(<ApagarProyectilFrameSiguiente>d__21))]
	private IEnumerator ApagarProyectilFrameSiguiente(GameObject bala)
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x868764", Offset = "0x868764", VA = "0x868764")]
	public PoolEnemigos()
	{
	}
}
[Token(Token = "0x20000EB")]
public class PoolExplosiones : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	public class Explosiones
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool usandose;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject explosionGo;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particula;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem[] particulas;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystemRenderer[] rendererParticulas;

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x8697BC", Offset = "0x8697BC", VA = "0x8697BC")]
		public Explosiones(GameObject explosion)
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x869930", Offset = "0x869930", VA = "0x869930")]
		public bool GetUsandose()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x869938", Offset = "0x869938", VA = "0x869938")]
		public void SetUsandose(bool uso)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x869944", Offset = "0x869944", VA = "0x869944")]
		public GameObject GetExplosionGo()
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x86994C", Offset = "0x86994C", VA = "0x86994C")]
		public ParticleSystem GetParticula()
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x869954", Offset = "0x869954", VA = "0x869954")]
		public void CambiarCaracteristicas(bool enZdi, int local = -1, bool billboardNormal = false)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x869B20", Offset = "0x869B20", VA = "0x869B20")]
		public void Reset(Transform padre)
		{
		}
	}

	[Token(Token = "0x20000ED")]
	public enum TipoExplosion
	{
		[Token(Token = "0x400087C")]
		proyectil,
		[Token(Token = "0x400087D")]
		enemigo
	}

	[Token(Token = "0x20000EE")]
	[CompilerGenerated]
	private sealed class <DevolverEnUnTiempo>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explosiones explo;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PoolExplosiones <>4__this;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CE")]
			[Address(RVA = "0x869E7C", Offset = "0x869E7C", VA = "0x869E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D0")]
			[Address(RVA = "0x869EC4", Offset = "0x869EC4", VA = "0x869EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x869D84", Offset = "0x869D84", VA = "0x869D84")]
		[DebuggerHidden]
		public <DevolverEnUnTiempo>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x869DAC", Offset = "0x869DAC", VA = "0x869DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x869DB0", Offset = "0x869DB0", VA = "0x869DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x869E84", Offset = "0x869E84", VA = "0x869E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] explosionesAltasPrefab;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] explosionesBajasPrefab;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject explosionMetalicaPrefab;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject explosionesAltasPadre;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject explosionesBajasPadre;

	[Token(Token = "0x400086D")]
	private const int NUM_EXPLOSIONES = 40;

	[Token(Token = "0x400086E")]
	private const int NUM_EXPLOSIONES_METALICAS = 15;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Explosiones> explosion;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Explosiones> explosionMetalica;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int explosionActual;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int explosionActualMetalico;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject padre;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float tiempoEntreExplosionForces;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<Rigidbody> trozosRotos;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x868AB8", Offset = "0x868AB8", VA = "0x868AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x868EC4", Offset = "0x868EC4", VA = "0x868EC4")]
	public Explosiones DameExplosion(TipoExplosion tipoExplosion, Transform padreExp, bool metalica = false)
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x8690D8", Offset = "0x8690D8", VA = "0x8690D8")]
	public void ExplosionForcePorExplosion(Vector3 posExplosion, float distMaxima, float fuerza)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x869354", Offset = "0x869354", VA = "0x869354")]
	public void AddPiezaRota(Rigidbody newRb)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x869458", Offset = "0x869458", VA = "0x869458")]
	public void RemovePiezaRota(Rigidbody rb)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x86952C", Offset = "0x86952C", VA = "0x86952C")]
	public void DevolverExplosion(Explosiones explo, bool instantaneo = false)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x869624", Offset = "0x869624", VA = "0x869624")]
	[IteratorStateMachine(typeof(<DevolverEnUnTiempo>d__22))]
	private IEnumerator DevolverEnUnTiempo(Explosiones explo)
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8696B4", Offset = "0x8696B4", VA = "0x8696B4")]
	public PoolExplosiones()
	{
	}
}
[Token(Token = "0x20000EF")]
public class PoolSplashes : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	[CompilerGenerated]
	private sealed class <ApagarParticula>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PoolSplashes <>4__this;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int indice;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x86A838", Offset = "0x86A838", VA = "0x86A838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x86A880", Offset = "0x86A880", VA = "0x86A880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x86A5B4", Offset = "0x86A5B4", VA = "0x86A5B4")]
		[DebuggerHidden]
		public <ApagarParticula>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x86A754", Offset = "0x86A754", VA = "0x86A754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x86A758", Offset = "0x86A758", VA = "0x86A758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x86A840", Offset = "0x86A840", VA = "0x86A840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int NUM_TOTAL_SPLASHES;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int contActualSplashes;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] particlesSplashes;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x869ECC", Offset = "0x869ECC", VA = "0x869ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x86A2EC", Offset = "0x86A2EC", VA = "0x86A2EC")]
	public void InstanciarParticula(Vector3 pos, float size = 3f)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x86A530", Offset = "0x86A530", VA = "0x86A530")]
	[IteratorStateMachine(typeof(<ApagarParticula>d__5))]
	private IEnumerator ApagarParticula(int indice)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x86A5DC", Offset = "0x86A5DC", VA = "0x86A5DC")]
	private void DestruirParticula(int indice)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x86A744", Offset = "0x86A744", VA = "0x86A744")]
	public PoolSplashes()
	{
	}
}
[Token(Token = "0x20000F1")]
public class RotacionHelices : MonoBehaviour
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rotacion;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enUnscaledTime;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x86A888", Offset = "0x86A888", VA = "0x86A888")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x86A954", Offset = "0x86A954", VA = "0x86A954")]
	public RotacionHelices()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ControladorGusano : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	private enum Estado
	{
		[Token(Token = "0x400089A")]
		Generando,
		[Token(Token = "0x400089B")]
		Moviendo
	}

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Proyectil[] partes;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Torreta torreta;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VelocidadLerpEscalaRotacion;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float velocidadMovimiento;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numeroBalas;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distanciaEntreObjetos;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform objetoQueSigo;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float velocidadMov;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform pLanzamiento;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 escalaInicial;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int indiceActual;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Estado estado;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float tiempoParaEmpezar;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x86A95C", Offset = "0x86A95C", VA = "0x86A95C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x86ADA8", Offset = "0x86ADA8", VA = "0x86ADA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x86B1A8", Offset = "0x86B1A8", VA = "0x86B1A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x86B2C0", Offset = "0x86B2C0", VA = "0x86B2C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x86B3E0", Offset = "0x86B3E0", VA = "0x86B3E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x86C20C", Offset = "0x86C20C", VA = "0x86C20C")]
	public ControladorGusano()
	{
	}
}
[Token(Token = "0x20000F4")]
public class DesactivarPlantas : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> plantasParaDesactivar;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x86C22C", Offset = "0x86C22C", VA = "0x86C22C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x86C3AC", Offset = "0x86C3AC", VA = "0x86C3AC")]
	public DesactivarPlantas()
	{
	}
}
[Token(Token = "0x20000F5")]
public class DestruirSegunCalidad : MonoBehaviour
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destruirSiEsPicoOQuest1;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool destruirSiEsOQuest2OPs4Base;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool soloApagarRender;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x86C434", Offset = "0x86C434", VA = "0x86C434")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x86C700", Offset = "0x86C700", VA = "0x86C700")]
	public DestruirSegunCalidad()
	{
	}
}
[Token(Token = "0x20000F6")]
public class DestruirSiEsPico : MonoBehaviour
{
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x86C710", Offset = "0x86C710", VA = "0x86C710")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x86C77C", Offset = "0x86C77C", VA = "0x86C77C")]
	public DestruirSiEsPico()
	{
	}
}
[Token(Token = "0x20000F7")]
public class DeteccionDispositivos : MonoBehaviour
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float ticks;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool yaNoBuscar;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x86C784", Offset = "0x86C784", VA = "0x86C784")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x86C7F0", Offset = "0x86C7F0", VA = "0x86C7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x86C94C", Offset = "0x86C94C", VA = "0x86C94C")]
	private void DetectarDispositivos()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x86D548", Offset = "0x86D548", VA = "0x86D548")]
	public DeteccionDispositivos()
	{
	}
}
[Token(Token = "0x20000F8")]
public class DetectorBalasAvion : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool avionPequeño;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvionJugador avion;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Collider heDetectadoColisionEnElOtroCollider;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool detectadoEnOtroCollider;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float tiempoUltimaDeteccion;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x86D558", Offset = "0x86D558", VA = "0x86D558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x86D6E4", Offset = "0x86D6E4", VA = "0x86D6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x86D7AC", Offset = "0x86D7AC", VA = "0x86D7AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x86D7D0", Offset = "0x86D7D0", VA = "0x86D7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x86DDC4", Offset = "0x86DDC4", VA = "0x86DDC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x86D858", Offset = "0x86D858", VA = "0x86D858")]
	private void Deteccion(Collider other)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x86DDC8", Offset = "0x86DDC8", VA = "0x86DDC8")]
	public DetectorBalasAvion()
	{
	}
}
[Token(Token = "0x20000F9")]
public class detectorColisionesFantasmaEnAlturaDeVuelo : MonoBehaviour
{
	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Torreta miPadreTorreta;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x86DDD0", Offset = "0x86DDD0", VA = "0x86DDD0")]
	public void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x86DEA0", Offset = "0x86DEA0", VA = "0x86DEA0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x86E100", Offset = "0x86E100", VA = "0x86E100")]
	public detectorColisionesFantasmaEnAlturaDeVuelo()
	{
	}
}
[Token(Token = "0x20000FA")]
public class DetectorLimite : MonoBehaviour
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool detectando;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x86E108", Offset = "0x86E108", VA = "0x86E108")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x86E114", Offset = "0x86E114", VA = "0x86E114")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x86E11C", Offset = "0x86E11C", VA = "0x86E11C")]
	public DetectorLimite()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Dialogos : MonoBehaviour
{
	[Token(Token = "0x20000FC")]
	public enum Dialogo
	{
		[Token(Token = "0x40008BC")]
		intro,
		[Token(Token = "0x40008BD")]
		uno,
		[Token(Token = "0x40008BE")]
		dos,
		[Token(Token = "0x40008BF")]
		tres,
		[Token(Token = "0x40008C0")]
		cuatro,
		[Token(Token = "0x40008C1")]
		cinco,
		[Token(Token = "0x40008C2")]
		seis,
		[Token(Token = "0x40008C3")]
		siete,
		[Token(Token = "0x40008C4")]
		ocho,
		[Token(Token = "0x40008C5")]
		nueve,
		[Token(Token = "0x40008C6")]
		diez,
		[Token(Token = "0x40008C7")]
		once,
		[Token(Token = "0x40008C8")]
		doce,
		[Token(Token = "0x40008C9")]
		trece,
		[Token(Token = "0x40008CA")]
		catorce,
		[Token(Token = "0x40008CB")]
		quince,
		[Token(Token = "0x40008CC")]
		dieciseis,
		[Token(Token = "0x40008CD")]
		end,
		[Token(Token = "0x40008CE")]
		NONE
	}

	[Token(Token = "0x20000FD")]
	[CompilerGenerated]
	private sealed class <TerminarConTiempo>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dialogos <>4__this;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ControladorMenuConBotones <c>5__2;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x86F090", Offset = "0x86F090", VA = "0x86F090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x86F0D8", Offset = "0x86F0D8", VA = "0x86F0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x86E51C", Offset = "0x86E51C", VA = "0x86E51C")]
		[DebuggerHidden]
		public <TerminarConTiempo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x86EED8", Offset = "0x86EED8", VA = "0x86EED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x86EEDC", Offset = "0x86EEDC", VA = "0x86EEDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x86F098", Offset = "0x86F098", VA = "0x86F098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FE")]
	[CompilerGenerated]
	private sealed class <PasarAlAcabarAudio>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dialogos <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x86F3A0", Offset = "0x86F3A0", VA = "0x86F3A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x86F3E8", Offset = "0x86F3E8", VA = "0x86F3E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x86EB88", Offset = "0x86EB88", VA = "0x86EB88")]
		[DebuggerHidden]
		public <PasarAlAcabarAudio>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x86F0E0", Offset = "0x86F0E0", VA = "0x86F0E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x86F0E4", Offset = "0x86F0E4", VA = "0x86F0E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x86F3A8", Offset = "0x86F3A8", VA = "0x86F3A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	[CompilerGenerated]
	private sealed class <LerpTiempoCor>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool parar;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dialogos <>4__this;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <min>5__3;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <max>5__4;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x86F694", Offset = "0x86F694", VA = "0x86F694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x86F6DC", Offset = "0x86F6DC", VA = "0x86F6DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x86EC38", Offset = "0x86EC38", VA = "0x86EC38")]
		[DebuggerHidden]
		public <LerpTiempoCor>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x86F3F0", Offset = "0x86F3F0", VA = "0x86F3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x86F3F4", Offset = "0x86F3F4", VA = "0x86F3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x86F69C", Offset = "0x86F69C", VA = "0x86F69C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000100")]
	[CompilerGenerated]
	private sealed class <CargarTextoPorLetras>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string st;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dialogos <>4__this;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <cont>5__2;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <textoPintado>5__3;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <lineas>5__4;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <lineaActual>5__5;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <countLineas>5__6;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x86FA84", Offset = "0x86FA84", VA = "0x86FA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x86FACC", Offset = "0x86FACC", VA = "0x86FACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x86EC60", Offset = "0x86EC60", VA = "0x86EC60")]
		[DebuggerHidden]
		public <CargarTextoPorLetras>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x86F6E4", Offset = "0x86F6E4", VA = "0x86F6E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x86F6E8", Offset = "0x86F6E8", VA = "0x86F6E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x86FA8C", Offset = "0x86FA8C", VA = "0x86FA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControladorMenu controladorMenu;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image fondo;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image doctor;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string rutaEventoDialogos;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance eventoDialogos;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float nivelDialogosParaFmod;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private PLAYBACK_STATE estadoReproduccion;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float tiempoAntimonkey;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine corTerminar;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int contDialogoActual;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine corEscribir;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dialogo currentDialogo;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string keyPrefijoActual;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool esDePantallaCine;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine PasarAlAcabarAudioCor;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine lerpCor;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float tiempoDeltaEscribir;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x86E124", Offset = "0x86E124", VA = "0x86E124")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x86E2E0", Offset = "0x86E2E0", VA = "0x86E2E0")]
	private void Siguiente()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x86E370", Offset = "0x86E370", VA = "0x86E370")]
	private void Terminar()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x86E4A8", Offset = "0x86E4A8", VA = "0x86E4A8")]
	[IteratorStateMachine(typeof(<TerminarConTiempo>d__14))]
	private IEnumerator TerminarConTiempo()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x86E544", Offset = "0x86E544", VA = "0x86E544")]
	public void EmpezarAEscribir(Dialogo dialogo, bool esPantallaCine = false)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x86E6C4", Offset = "0x86E6C4", VA = "0x86E6C4")]
	public void GetKeyPrefijoActual()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x86E3C0", Offset = "0x86E3C0", VA = "0x86E3C0")]
	public void Escribir()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x86E7D0", Offset = "0x86E7D0", VA = "0x86E7D0")]
	private void SetFondoYAudio()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x86EA48", Offset = "0x86EA48", VA = "0x86EA48")]
	private void PasarAlFinalizatAudio()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x86EB14", Offset = "0x86EB14", VA = "0x86EB14")]
	[IteratorStateMachine(typeof(<PasarAlAcabarAudio>d__26))]
	private IEnumerator PasarAlAcabarAudio()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x86E784", Offset = "0x86E784", VA = "0x86E784")]
	private void LerpTiempo(bool parar)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x86EBB0", Offset = "0x86EBB0", VA = "0x86EBB0")]
	[IteratorStateMachine(typeof(<LerpTiempoCor>d__29))]
	private IEnumerator LerpTiempoCor(bool parar)
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x86E9B8", Offset = "0x86E9B8", VA = "0x86E9B8")]
	[IteratorStateMachine(typeof(<CargarTextoPorLetras>d__31))]
	private IEnumerator CargarTextoPorLetras(string st)
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x86EC88", Offset = "0x86EC88", VA = "0x86EC88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x86ED90", Offset = "0x86ED90", VA = "0x86ED90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x86EE78", Offset = "0x86EE78", VA = "0x86EE78")]
	public Dialogos()
	{
	}
}
[Token(Token = "0x2000101")]
[RequireComponent(typeof(ParticleSystem))]
public class DisableParticleRoll : MonoBehaviour
{
	[Token(Token = "0x2000102")]
	private struct Job : IJobParticleSystemParallelForBatch
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_RotationDifference;

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x86FC60", Offset = "0x86FC60", VA = "0x86FC60", Slot = "4")]
		public void Execute(ParticleSystemJobData particles, int startIndex, int count)
		{
		}
	}

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Job m_Job;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_LastRotation;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x86FAD4", Offset = "0x86FAD4", VA = "0x86FAD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x86FB2C", Offset = "0x86FB2C", VA = "0x86FB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x86FBEC", Offset = "0x86FBEC", VA = "0x86FBEC")]
	private void OnParticleUpdateJobScheduled()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x86FC58", Offset = "0x86FC58", VA = "0x86FC58")]
	public DisableParticleRoll()
	{
	}
}
[Token(Token = "0x2000103")]
public class EfectoDesaparecer : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private sealed class <HacerEfectoDesaparecer>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EfectoDesaparecer <>4__this;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0x870E7C", Offset = "0x870E7C", VA = "0x870E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x870EC4", Offset = "0x870EC4", VA = "0x870EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x87084C", Offset = "0x87084C", VA = "0x87084C")]
		[DebuggerHidden]
		public <HacerEfectoDesaparecer>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x870AB0", Offset = "0x870AB0", VA = "0x870AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x870AB4", Offset = "0x870AB4", VA = "0x870AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x870E84", Offset = "0x870E84", VA = "0x870E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000105")]
	[CompilerGenerated]
	private sealed class <HacerEfectoAparecer>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EfectoDesaparecer <>4__this;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tIni>5__3;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0x871318", Offset = "0x871318", VA = "0x871318", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x871360", Offset = "0x871360", VA = "0x871360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x8709C0", Offset = "0x8709C0", VA = "0x8709C0")]
		[DebuggerHidden]
		public <HacerEfectoAparecer>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x870ECC", Offset = "0x870ECC", VA = "0x870ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x870ED0", Offset = "0x870ED0", VA = "0x870ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x871320", Offset = "0x871320", VA = "0x871320", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texturaSlice;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] renderers;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] renderersCristales;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem[] particulasQueParar;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader shaderDesaparecer;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture texturaSliceDefault;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture myText;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float velocidadAparicion;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float velocidadDesaparicion;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] objetosQueApagarAlDesaparecer;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float alfaOscurecer;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color colorOscurecer;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine aparecerCor;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine efectoYDestruirObjeto;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Material> materiales;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Material> startMaterials;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x86FC98", Offset = "0x86FC98", VA = "0x86FC98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x86FFD4", Offset = "0x86FFD4", VA = "0x86FFD4")]
	public void Aparecer(float desdeTIgualA = -1f)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x870424", Offset = "0x870424", VA = "0x870424")]
	public void Desaparecer(bool rapido = false)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x8707D8", Offset = "0x8707D8", VA = "0x8707D8")]
	[IteratorStateMachine(typeof(<HacerEfectoDesaparecer>d__19))]
	private IEnumerator HacerEfectoDesaparecer(bool rapido = false)
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x870874", Offset = "0x870874", VA = "0x870874")]
	public Texture2D ToTexture2D(Texture texture)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x8708E4", Offset = "0x8708E4", VA = "0x8708E4")]
	public Texture2D OscurecerTextura(Texture2D text, float alfa)
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x8703B0", Offset = "0x8703B0", VA = "0x8703B0")]
	[IteratorStateMachine(typeof(<HacerEfectoAparecer>d__22))]
	private IEnumerator HacerEfectoAparecer(float desdeTIgualA = -1f)
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x8709E8", Offset = "0x8709E8", VA = "0x8709E8")]
	public EfectoDesaparecer()
	{
	}
}
[Token(Token = "0x2000106")]
public class encenderSoloSegunSea2076 : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool es2076;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x871368", Offset = "0x871368", VA = "0x871368")]
	private void Start()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x871418", Offset = "0x871418", VA = "0x871418")]
	public encenderSoloSegunSea2076()
	{
	}
}
[Token(Token = "0x2000107")]
public abstract class ArmaEnemiga : ParteBoss
{
	[Token(Token = "0x2000108")]
	public enum TiposArmasEnemigas
	{
		[Token(Token = "0x4000914")]
		principal,
		[Token(Token = "0x4000915")]
		lanzamisiles,
		[Token(Token = "0x4000916")]
		laser
	}

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TiposArmasEnemigas m_tipo;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float cooldown;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int danoArma;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject balaPrefab;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject explosion1;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject explosion2;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject explosion3;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem explosion4;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material torreta;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Renderer rendererTorreta;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool cambioMaterial;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float contadorCambioMaterial;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool esTorreta;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject meshTorreta;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject meshTorretaDestruida;

	[Token(Token = "0x600053E")]
	public abstract void Disparar();

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x871420", Offset = "0x871420", VA = "0x871420", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x871484", Offset = "0x871484", VA = "0x871484", Slot = "4")]
	public override void EfectoExplotar()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x8715AC", Offset = "0x8715AC", VA = "0x8715AC", Slot = "5")]
	public override void EfectoRecibirDano()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x87168C", Offset = "0x87168C", VA = "0x87168C")]
	protected ArmaEnemiga()
	{
	}
}
[Token(Token = "0x2000109")]
public class ArmaRotatoria : ArmaEnemiga
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float escalaBala;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float tiempoEntreBalas;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float cooldownEntreBalas;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int numeroBalasPorRafaga;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int posicionRafaga;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int numRafaga;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float anguloRotacion;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool direccionRotacion;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float valorActual;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float valorFinal;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float valorProximo;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float anguloInicio;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float velocidadBalas;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool finalAlcanzado;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool puedoDisparar;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x871694", Offset = "0x871694", VA = "0x871694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x871784", Offset = "0x871784", VA = "0x871784", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x8718C8", Offset = "0x8718C8", VA = "0x8718C8")]
	public void RafagaDisparo()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x871730", Offset = "0x871730", VA = "0x871730")]
	private void InvertirDireccion()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x8719E0", Offset = "0x8719E0", VA = "0x8719E0", Slot = "6")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x871B88", Offset = "0x871B88", VA = "0x871B88")]
	public ArmaRotatoria()
	{
	}
}
[Token(Token = "0x200010A")]
public class ArmaRotatoriaSimple : ArmaEnemiga
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float escalaBala;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float tiempoEntreBalas;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float cooldownEntreBalas;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int numeroBalasPorRafaga;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int posicionRafaga;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int numRafaga;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float velocidadBalas;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform player;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 direccionObjetivo;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool puedoDisparar;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float ultimaVezQueDispare;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x871B90", Offset = "0x871B90", VA = "0x871B90")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x871BA4", Offset = "0x871BA4", VA = "0x871BA4", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x871E5C", Offset = "0x871E5C", VA = "0x871E5C")]
	public void RafagaDisparo()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x871ECC", Offset = "0x871ECC", VA = "0x871ECC", Slot = "6")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x872074", Offset = "0x872074", VA = "0x872074")]
	public ArmaRotatoriaSimple()
	{
	}
}
[Token(Token = "0x200010B")]
public class ArmaSimpleEnemiga : ArmaEnemiga
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float escalaBala;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool puedoDisparar;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x87207C", Offset = "0x87207C", VA = "0x87207C")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x872090", Offset = "0x872090", VA = "0x872090")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x8720E8", Offset = "0x8720E8", VA = "0x8720E8", Slot = "6")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x872278", Offset = "0x872278", VA = "0x872278", Slot = "4")]
	public override void EfectoExplotar()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x87229C", Offset = "0x87229C", VA = "0x87229C", Slot = "5")]
	public override void EfectoRecibirDano()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x8722A0", Offset = "0x8722A0", VA = "0x8722A0")]
	public ArmaSimpleEnemiga()
	{
	}
}
[Token(Token = "0x200010C")]
public abstract class Boss : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	public enum EstadosBoss
	{
		[Token(Token = "0x4000947")]
		entrando,
		[Token(Token = "0x4000948")]
		movimiento,
		[Token(Token = "0x4000949")]
		cambioDeOleada,
		[Token(Token = "0x400094A")]
		muriendo
	}

	[Serializable]
	[Token(Token = "0x200010E")]
	public struct Oleada
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParteBoss[] partes;
	}

	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <IniciarFinalZDI>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boss <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0x87302C", Offset = "0x87302C", VA = "0x87302C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x873074", Offset = "0x873074", VA = "0x873074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x872B7C", Offset = "0x872B7C", VA = "0x872B7C")]
		[DebuggerHidden]
		public <IniciarFinalZDI>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x872F3C", Offset = "0x872F3C", VA = "0x872F3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x872F40", Offset = "0x872F40", VA = "0x872F40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x873034", Offset = "0x873034", VA = "0x873034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000110")]
	[CompilerGenerated]
	private sealed class <FinalNivel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boss <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056A")]
			[Address(RVA = "0x873164", Offset = "0x873164", VA = "0x873164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600056C")]
			[Address(RVA = "0x8731AC", Offset = "0x8731AC", VA = "0x8731AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x872BA4", Offset = "0x872BA4", VA = "0x872BA4")]
		[DebuggerHidden]
		public <FinalNivel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x87307C", Offset = "0x87307C", VA = "0x87307C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x873080", Offset = "0x873080", VA = "0x873080", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x87316C", Offset = "0x87316C", VA = "0x87316C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sinArmas;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool armasActivas;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EstadosBoss estadoActual;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Oleada[] oleadas;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int oleadaActual;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int cantidadPartesOleadaActual;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControladorHumoFuego controladorHumoFuego;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrupoEnemigos miGrupo;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform eliminados;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool muerto;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool destruido;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x8722A8", Offset = "0x8722A8", VA = "0x8722A8")]
	public void ActivarArmas()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x872328", Offset = "0x872328", VA = "0x872328")]
	public void InicializarBoss()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x872360", Offset = "0x872360", VA = "0x872360")]
	public void parteDestruida()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x872460", Offset = "0x872460", VA = "0x872460", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x87294C", Offset = "0x87294C", VA = "0x87294C")]
	[ContextMenu("llenar")]
	private void LlenarArrayOleadas()
	{
	}

	[Token(Token = "0x6000559")]
	public abstract void EfectoExplotar();

	[Token(Token = "0x600055A")]
	public abstract void MovimientoOleadaActual(int oleadaActual);

	[Token(Token = "0x600055B")]
	public abstract void MovimientoEntrada();

	[Token(Token = "0x600055C")]
	public abstract void CambioOleada();

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x872864", Offset = "0x872864", VA = "0x872864")]
	[IteratorStateMachine(typeof(<IniciarFinalZDI>d__23))]
	private IEnumerator IniciarFinalZDI()
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x8728D8", Offset = "0x8728D8", VA = "0x8728D8")]
	[IteratorStateMachine(typeof(<FinalNivel>d__24))]
	private IEnumerator FinalNivel()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x872BCC", Offset = "0x872BCC", VA = "0x872BCC")]
	public void ActualizarMisionesContadorEnemigos(int indexMision, int varMision)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x872F34", Offset = "0x872F34", VA = "0x872F34")]
	protected Boss()
	{
	}
}
[Token(Token = "0x2000111")]
public class BossPrueba : Boss
{
	[Token(Token = "0x2000112")]
	[CompilerGenerated]
	private sealed class <ExplosionesFinalesBoss>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossPrueba <>4__this;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0x873C5C", Offset = "0x873C5C", VA = "0x873C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0x873CA4", Offset = "0x873CA4", VA = "0x873CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x87355C", Offset = "0x87355C", VA = "0x87355C")]
		[DebuggerHidden]
		public <ExplosionesFinalesBoss>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x873AB8", Offset = "0x873AB8", VA = "0x873AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x873ABC", Offset = "0x873ABC", VA = "0x873ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x873C64", Offset = "0x873C64", VA = "0x873C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <IniciarBoss>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossPrueba <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0x873E38", Offset = "0x873E38", VA = "0x873E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000582")]
			[Address(RVA = "0x873E80", Offset = "0x873E80", VA = "0x873E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x873A64", Offset = "0x873A64", VA = "0x873A64")]
		[DebuggerHidden]
		public <IniciarBoss>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x873CAC", Offset = "0x873CAC", VA = "0x873CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x873CB0", Offset = "0x873CB0", VA = "0x873CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x873E40", Offset = "0x873E40", VA = "0x873E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float velocidadMovimiento;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 posicionDeseada;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 rotacionDeseada;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float velocidadEnX;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float xAnterior;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform pivot;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AirplanePath controladorPath;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PathFreeFall scriptCaida;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float valorActual;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float valorNuevo;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool armasActivadas;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool finalRuta;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem finalExplosion1;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem finalExplosion2;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem finalExplosion3;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private pruebaSonidoOneShot sonidoExplosionFinal;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine iniciarBoss;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x8731B4", Offset = "0x8731B4", VA = "0x8731B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x873360", Offset = "0x873360", VA = "0x873360", Slot = "6")]
	public override void MovimientoOleadaActual(int oleadaActual)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x8734E8", Offset = "0x8734E8", VA = "0x8734E8")]
	[IteratorStateMachine(typeof(<ExplosionesFinalesBoss>d__19))]
	private IEnumerator ExplosionesFinalesBoss()
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x873584", Offset = "0x873584", VA = "0x873584", Slot = "5")]
	public override void EfectoExplotar()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x87383C", Offset = "0x87383C", VA = "0x87383C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x8739F0", Offset = "0x8739F0", VA = "0x8739F0")]
	[IteratorStateMachine(typeof(<IniciarBoss>d__23))]
	private IEnumerator IniciarBoss()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x873A8C", Offset = "0x873A8C", VA = "0x873A8C", Slot = "7")]
	public override void MovimientoEntrada()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x873AA8", Offset = "0x873AA8", VA = "0x873AA8")]
	private void FinDePath(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x873AAC", Offset = "0x873AAC", VA = "0x873AAC", Slot = "8")]
	public override void CambioOleada()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x873AB0", Offset = "0x873AB0", VA = "0x873AB0")]
	public BossPrueba()
	{
	}
}
[Token(Token = "0x2000114")]
public class DestructorBalas : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool soloLosMios;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool soloSalida;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x873E88", Offset = "0x873E88", VA = "0x873E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x873F30", Offset = "0x873F30", VA = "0x873F30")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x8740B0", Offset = "0x8740B0", VA = "0x8740B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x8741C8", Offset = "0x8741C8", VA = "0x8741C8")]
	public DestructorBalas()
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class Armas
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Torreta[] armasRonda;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x8741D8", Offset = "0x8741D8", VA = "0x8741D8")]
	public Armas()
	{
	}
}
[Token(Token = "0x2000116")]
public abstract class Enemigo : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	public enum TipoEnemigo
	{
		[Token(Token = "0x400099A")]
		desconocido,
		[Token(Token = "0x400099B")]
		basico,
		[Token(Token = "0x400099C")]
		basicoDisparo,
		[Token(Token = "0x400099D")]
		basicoAcrobatico,
		[Token(Token = "0x400099E")]
		helicoptero,
		[Token(Token = "0x400099F")]
		heinkel,
		[Token(Token = "0x40009A0")]
		bunker,
		[Token(Token = "0x40009A1")]
		boss,
		[Token(Token = "0x40009A2")]
		vehiculo4torretas,
		[Token(Token = "0x40009A3")]
		HeinkelTorretas,
		[Token(Token = "0x40009A4")]
		MiniBoss,
		[Token(Token = "0x40009A5")]
		vehiculoNoVoladorConTorreta,
		[Token(Token = "0x40009A6")]
		BunkerRojo,
		[Token(Token = "0x40009A7")]
		HelicopteroRojo
	}

	[Token(Token = "0x2000118")]
	[CompilerGenerated]
	private sealed class <DesaparecerAlMorir>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemigo <>4__this;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EnemigoAereo <enemigoAereo>5__2;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <f>5__3;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x8784F8", Offset = "0x8784F8", VA = "0x8784F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x878540", Offset = "0x878540", VA = "0x878540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x877A34", Offset = "0x877A34", VA = "0x877A34")]
		[DebuggerHidden]
		public <DesaparecerAlMorir>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x87826C", Offset = "0x87826C", VA = "0x87826C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x878270", Offset = "0x878270", VA = "0x878270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x878500", Offset = "0x878500", VA = "0x878500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000119")]
	[CompilerGenerated]
	private sealed class <ComprobarEnRuta>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemigo <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x878620", Offset = "0x878620", VA = "0x878620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x878668", Offset = "0x878668", VA = "0x878668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x877AD0", Offset = "0x877AD0", VA = "0x877AD0")]
		[DebuggerHidden]
		public <ComprobarEnRuta>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x878548", Offset = "0x878548", VA = "0x878548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x87854C", Offset = "0x87854C", VA = "0x87854C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x878628", Offset = "0x878628", VA = "0x878628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011A")]
	[CompilerGenerated]
	private sealed class <AparecerAlSpawn>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemigo <>4__this;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <escalaInicial>5__2;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <delta>5__3;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <f>5__4;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x878790", Offset = "0x878790", VA = "0x878790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x8787D8", Offset = "0x8787D8", VA = "0x8787D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x877B6C", Offset = "0x877B6C", VA = "0x877B6C")]
		[DebuggerHidden]
		public <AparecerAlSpawn>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x878670", Offset = "0x878670", VA = "0x878670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x878674", Offset = "0x878674", VA = "0x878674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x878798", Offset = "0x878798", VA = "0x878798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011B")]
	[CompilerGenerated]
	private sealed class <IncrementarRoll>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemigo <>4__this;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x878880", Offset = "0x878880", VA = "0x878880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x8788C8", Offset = "0x8788C8", VA = "0x8788C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x877E2C", Offset = "0x877E2C", VA = "0x877E2C")]
		[DebuggerHidden]
		public <IncrementarRoll>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x8787E0", Offset = "0x8787E0", VA = "0x8787E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x8787E4", Offset = "0x8787E4", VA = "0x8787E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x878888", Offset = "0x878888", VA = "0x878888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool esDeZDI;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Aviones normales: 1  ||  helicoptero: 10  ||  Heinkel: 10 || Bunker: 10")]
	private float vidaMaxima;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float vidaActual;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool muerto;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TipoEnemigo miTipoEnemigo;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HitGlowEffect hitGlowEffect;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PoolExplosiones.Explosiones particulaExplosion;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform explosionPadre;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public pruebaSonidoOneShot golpeo;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public pruebaSonidoOneShot explosionMorir;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public pruebaSonidoOneShot splashAgua;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Armas[] armas;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject meshNormal;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject meshDetruccion;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Rigidbody[] rigiBody;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RotacionHelices[] helices;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem[] explosionesFinales;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem[] explosionesIntermedias;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ParticleSystemRenderer[][] explosionesIntermediasRender;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ParticleSystemRenderer[][] explosionesFinalesRender;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool enAreaDeJuego;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ControladorNivel cN;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Transform padre;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AirplanePath miAirplanePath;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GrupoEnemigos miGrupo;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform eliminados;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Transform opcional para sobreescribir el actual punto de spawn de monedas")]
	public Transform transformMonedas;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("El parent de ParticulasAgua se tomara como referencia para comparar la altura y activar las particulas. Importante ponerlo en alguna mesh/objeto que llegue hasta el mar y en WORLD simulation space.")]
	[Header("Particulas Agua")]
	public ParticulaAguaSplash[] particulasAgua;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public float alturaDelMar;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[HideInInspector]
	public bool fxAguaFlag;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[EventRef]
	[Header("SonidoMotorEnCore")]
	public string rutaEventoCore;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("SonidoMotorEnZDI")]
	[EventRef]
	public string rutaEventoZDI;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public EventInstance sfxEnemigo;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform posicion;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool desapareciendo;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float intensidadRoll;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int rondaActual;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool esDeOleada;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool SetValoresManualmente;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool sinModificarEscalaEnLaEntrada;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<PoolExplosiones.Explosiones> explosionesQueTengo;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float tiempoEntreDaño;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool flagStopSumar;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Rigidbody> partesQueDestruir;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x8741E0", Offset = "0x8741E0", VA = "0x8741E0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x8749EC", Offset = "0x8749EC", VA = "0x8749EC")]
	public void FrenarHelices(RotacionHelices heli)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x874A2C", Offset = "0x874A2C", VA = "0x874A2C")]
	public void PararHelices(RotacionHelices heli)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x874A44", Offset = "0x874A44", VA = "0x874A44", Slot = "5")]
	public virtual void RecibirDano(float dano, bool porBala = false, bool porMegaBoom = false, bool sinTiempo = false, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x874C7C", Offset = "0x874C7C", VA = "0x874C7C")]
	public void ComprobarMuerte()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x874DF4", Offset = "0x874DF4", VA = "0x874DF4", Slot = "6")]
	public virtual void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x875E1C", Offset = "0x875E1C", VA = "0x875E1C")]
	public void ActualizarMisionesContadorEnemigos(int indexMision, int varMision)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x874DE8", Offset = "0x874DE8", VA = "0x874DE8")]
	protected void PasarDeRonda()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x876184", Offset = "0x876184", VA = "0x876184", Slot = "7")]
	public virtual void PasamosDeRonda()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x876298", Offset = "0x876298", VA = "0x876298", Slot = "8")]
	public virtual void AnimacionExplotar(bool efectoExplosion, bool porMegaBoom = false, [Optional] Transform posMegaboom)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x876E38", Offset = "0x876E38", VA = "0x876E38")]
	public void PasarExplosionAlEnemigo(PoolExplosiones.Explosiones explo)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x876644", Offset = "0x876644", VA = "0x876644")]
	public void ExplotrarPartesPorMegaBoom(Transform posMegaboom)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x876F20", Offset = "0x876F20", VA = "0x876F20")]
	private Vector3 CalcularDireccionEnMegaBoom(Vector3 posPieza, Transform posMegaboom)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x8769B0", Offset = "0x8769B0", VA = "0x8769B0")]
	public void ExplotrarPartes()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x87711C", Offset = "0x87711C", VA = "0x87711C")]
	public Vector3 CalcularFuerzaMuerte(int opcion)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x8773BC", Offset = "0x8773BC", VA = "0x8773BC", Slot = "9")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x87764C", Offset = "0x87764C", VA = "0x87764C", Slot = "10")]
	protected virtual void EnAreaDeJuego()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x8779C0", Offset = "0x8779C0", VA = "0x8779C0")]
	[IteratorStateMachine(typeof(<DesaparecerAlMorir>d__62))]
	private IEnumerator DesaparecerAlMorir()
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x877A5C", Offset = "0x877A5C", VA = "0x877A5C")]
	[IteratorStateMachine(typeof(<ComprobarEnRuta>d__63))]
	public IEnumerator ComprobarEnRuta()
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x877AF8", Offset = "0x877AF8", VA = "0x877AF8")]
	[IteratorStateMachine(typeof(<AparecerAlSpawn>d__64))]
	public IEnumerator AparecerAlSpawn()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x877B94", Offset = "0x877B94", VA = "0x877B94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x877DB8", Offset = "0x877DB8", VA = "0x877DB8")]
	[IteratorStateMachine(typeof(<IncrementarRoll>d__66))]
	private IEnumerator IncrementarRoll()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x877E54", Offset = "0x877E54", VA = "0x877E54", Slot = "11")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x878184", Offset = "0x878184", VA = "0x878184")]
	protected Enemigo()
	{
	}
}
[Token(Token = "0x200011C")]
public abstract class EnemigoAereo : Enemigo
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float dist;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Shader shaderUnlitCore;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public MeshRenderer[] meshesAUnlitEnCore;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x8788D0", Offset = "0x8788D0", VA = "0x8788D0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x878A78", Offset = "0x878A78", VA = "0x878A78")]
	public void Update()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x878A84", Offset = "0x878A84", VA = "0x878A84", Slot = "5")]
	public override void RecibirDano(float dano, bool porBala = false, bool porMegaBoom = false, bool sinTiempo = false, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x878AA4", Offset = "0x878AA4", VA = "0x878AA4", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x878AB4", Offset = "0x878AB4", VA = "0x878AB4", Slot = "8")]
	public override void AnimacionExplotar(bool efectoExplosion, bool porMegaBoom = false, [Optional] Transform posMegaboom)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x878AC0", Offset = "0x878AC0", VA = "0x878AC0", Slot = "9")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x878C7C", Offset = "0x878C7C", VA = "0x878C7C")]
	protected EnemigoAereo()
	{
	}
}
[Token(Token = "0x200011D")]
public class EnemigoBarco : Enemigo
{
	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private sealed class <VolverAEncenderCollider>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBarco <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x879CB0", Offset = "0x879CB0", VA = "0x879CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0x879CF8", Offset = "0x879CF8", VA = "0x879CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x879B84", Offset = "0x879B84", VA = "0x879B84")]
		[DebuggerHidden]
		public <VolverAEncenderCollider>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x879BAC", Offset = "0x879BAC", VA = "0x879BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x879BB0", Offset = "0x879BB0", VA = "0x879BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x879CB8", Offset = "0x879CB8", VA = "0x879CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011F")]
	[CompilerGenerated]
	private sealed class <GranExplosionFinal>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBarco <>4__this;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem[] <>7__wrap1;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x87A110", Offset = "0x87A110", VA = "0x87A110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x87A158", Offset = "0x87A158", VA = "0x87A158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x879D00", Offset = "0x879D00", VA = "0x879D00")]
		[DebuggerHidden]
		public <GranExplosionFinal>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x879D28", Offset = "0x879D28", VA = "0x879D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x879D2C", Offset = "0x879D2C", VA = "0x879D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x87A118", Offset = "0x87A118", VA = "0x87A118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool activado;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Collider[] colliders;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Collider colliderZdi;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject trailBarco;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 posOld;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int rondaAnterior;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool fxAguaFlag2;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x878C80", Offset = "0x878C80", VA = "0x878C80")]
	private new void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x87901C", Offset = "0x87901C", VA = "0x87901C")]
	[IteratorStateMachine(typeof(<VolverAEncenderCollider>d__6))]
	private IEnumerator VolverAEncenderCollider()
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x879090", Offset = "0x879090", VA = "0x879090")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8794FC", Offset = "0x8794FC", VA = "0x8794FC", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x879604", Offset = "0x879604", VA = "0x879604")]
	[IteratorStateMachine(typeof(<GranExplosionFinal>d__11))]
	private IEnumerator GranExplosionFinal()
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x879678", Offset = "0x879678", VA = "0x879678")]
	private void AcabarDeMorir()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x879B28", Offset = "0x879B28", VA = "0x879B28")]
	public EnemigoBarco()
	{
	}
}
[Token(Token = "0x2000120")]
public class EnemigoBasico : EnemigoAereo
{
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Header("Variables disparo")]
	public int ticks;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public LayerMask layer;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float distancia;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x87A160", Offset = "0x87A160", VA = "0x87A160", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x87A5E4", Offset = "0x87A5E4", VA = "0x87A5E4")]
	public EnemigoBasico()
	{
	}
}
[Token(Token = "0x2000121")]
public class EnemigoBoss : Enemigo
{
	[Token(Token = "0x2000122")]
	public enum EstadosBoss
	{
		[Token(Token = "0x40009FC")]
		entrando,
		[Token(Token = "0x40009FD")]
		movimiento,
		[Token(Token = "0x40009FE")]
		cambioDeOleada,
		[Token(Token = "0x40009FF")]
		muriendo
	}

	[Token(Token = "0x2000123")]
	private struct trailTeleport
	{
		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TrailRenderer trail;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] posOld;
	}

	[Token(Token = "0x2000124")]
	[CompilerGenerated]
	private sealed class <PosicionarseEnElSitio>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <enPosicion>5__2;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x87D174", Offset = "0x87D174", VA = "0x87D174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x87D1BC", Offset = "0x87D1BC", VA = "0x87D1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x87ACD4", Offset = "0x87ACD4", VA = "0x87ACD4")]
		[DebuggerHidden]
		public <PosicionarseEnElSitio>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x87CDC8", Offset = "0x87CDC8", VA = "0x87CDC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x87CDCC", Offset = "0x87CDCC", VA = "0x87CDCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x87D17C", Offset = "0x87D17C", VA = "0x87D17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <IrAPath>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AirplanePath airplanepath;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPosPath>5__2;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <t>5__3;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <posIniLerp>5__4;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x87D6D0", Offset = "0x87D6D0", VA = "0x87D6D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x87D718", Offset = "0x87D718", VA = "0x87D718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x87BDB0", Offset = "0x87BDB0", VA = "0x87BDB0")]
		[DebuggerHidden]
		public <IrAPath>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x87D1C4", Offset = "0x87D1C4", VA = "0x87D1C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x87D1C8", Offset = "0x87D1C8", VA = "0x87D1C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x87D6D8", Offset = "0x87D6D8", VA = "0x87D6D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000126")]
	[CompilerGenerated]
	private sealed class <ActivarArmas>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0x87D8B8", Offset = "0x87D8B8", VA = "0x87D8B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x87D900", Offset = "0x87D900", VA = "0x87D900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x87BDD8", Offset = "0x87BDD8", VA = "0x87BDD8")]
		[DebuggerHidden]
		public <ActivarArmas>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x87D720", Offset = "0x87D720", VA = "0x87D720", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x87D724", Offset = "0x87D724", VA = "0x87D724", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x87D8C0", Offset = "0x87D8C0", VA = "0x87D8C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000127")]
	[CompilerGenerated]
	private sealed class <DesaparecerArmas>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ronda;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0x87DA9C", Offset = "0x87DA9C", VA = "0x87DA9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000609")]
			[Address(RVA = "0x87DAE4", Offset = "0x87DAE4", VA = "0x87DAE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x87BE00", Offset = "0x87BE00", VA = "0x87BE00")]
		[DebuggerHidden]
		public <DesaparecerArmas>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x87D908", Offset = "0x87D908", VA = "0x87D908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x87D90C", Offset = "0x87D90C", VA = "0x87D90C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x87DAA4", Offset = "0x87DAA4", VA = "0x87DAA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000128")]
	[CompilerGenerated]
	private sealed class <IniciarFinalZDI>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060D")]
			[Address(RVA = "0x87DBC8", Offset = "0x87DBC8", VA = "0x87DBC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0x87DC10", Offset = "0x87DC10", VA = "0x87DC10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x87BE28", Offset = "0x87BE28", VA = "0x87BE28")]
		[DebuggerHidden]
		public <IniciarFinalZDI>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x87DAEC", Offset = "0x87DAEC", VA = "0x87DAEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x87DAF0", Offset = "0x87DAF0", VA = "0x87DAF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x87DBD0", Offset = "0x87DBD0", VA = "0x87DBD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000129")]
	[CompilerGenerated]
	private sealed class <MoverDelanteMioAlMorir>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0x87E548", Offset = "0x87E548", VA = "0x87E548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x87E590", Offset = "0x87E590", VA = "0x87E590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x87C3AC", Offset = "0x87C3AC", VA = "0x87C3AC")]
		[DebuggerHidden]
		public <MoverDelanteMioAlMorir>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x87DC18", Offset = "0x87DC18", VA = "0x87DC18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x87DC1C", Offset = "0x87DC1C", VA = "0x87DC1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x87E550", Offset = "0x87E550", VA = "0x87E550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <GranExplosionFinal>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <cont>5__2;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem[] <>7__wrap2;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem <explosion>5__5;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x87EC00", Offset = "0x87EC00", VA = "0x87EC00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x87EC48", Offset = "0x87EC48", VA = "0x87EC48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x87C3D4", Offset = "0x87C3D4", VA = "0x87C3D4")]
		[DebuggerHidden]
		public <GranExplosionFinal>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x87E598", Offset = "0x87E598", VA = "0x87E598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x87E59C", Offset = "0x87E59C", VA = "0x87E59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x87EC08", Offset = "0x87EC08", VA = "0x87EC08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[CompilerGenerated]
	private sealed class <ExplosionIntermedia>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem[] <>7__wrap1;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x87EF8C", Offset = "0x87EF8C", VA = "0x87EF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0x87EFD4", Offset = "0x87EFD4", VA = "0x87EFD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x87C3FC", Offset = "0x87C3FC", VA = "0x87C3FC")]
		[DebuggerHidden]
		public <ExplosionIntermedia>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x87EC50", Offset = "0x87EC50", VA = "0x87EC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x87EC54", Offset = "0x87EC54", VA = "0x87EC54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x87EF94", Offset = "0x87EF94", VA = "0x87EF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[CompilerGenerated]
	private sealed class <ResetTrailRenderer>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBoss <>4__this;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <zOld>5__2;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tiempo>5__3;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<trailTeleport> <trailsToTeleport>5__4;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0x87F478", Offset = "0x87F478", VA = "0x87F478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0x87F4C0", Offset = "0x87F4C0", VA = "0x87F4C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x87CCD8", Offset = "0x87CCD8", VA = "0x87CCD8")]
		[DebuggerHidden]
		public <ResetTrailRenderer>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x87EFDC", Offset = "0x87EFDC", VA = "0x87EFDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x87EFE0", Offset = "0x87EFE0", VA = "0x87EFE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x87F480", Offset = "0x87F480", VA = "0x87F480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected EstadosBoss estado;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool activado;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PathFreeFall scriptCaida;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected Transform target;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AirplanePath[] paths;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float limiteXMax;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float limiteXMin;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float limiteZMax;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float limiteZMin;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float posicionAdelantada;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool sinDesaparecerArmasEnElCambioDeOleada;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int pathActual;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool nuevaFormaDeMoverBoss;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TrailRenderer[] trails;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Action accionesAlEntrar;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int rondaAnterior;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float valorActual;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float valorNuevo;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	protected float tRot;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float tiempoCambioDireccionAire;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float randomTiempoCambio;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 direccionViento;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 rotacionDeseadaViento;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float rotacionMovimientoLimiteEnZ;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public Vector3 rotacionMovimientoVientoLimites;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float y;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Coroutine irAPathCor;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private AirplanePath airplanePathAntiguo;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected Vector3 posicionDeseada;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	protected Vector3 rotacionDeseada;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected float velocidadEnX;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	protected float xAnterior;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float velocidadMovimiento;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	protected float velocidadMovimientoX;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected float velocidadMovimientoZ;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	protected float newX;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected float newZ;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	protected float oldX;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected float oldZ;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	protected bool irReduciendo;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
	private bool finExplosion;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21E")]
	private bool caer;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21F")]
	private bool enPausa;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Vector3 posAntesDeLaPausa;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x87A5EC", Offset = "0x87A5EC", VA = "0x87A5EC")]
	protected new void Start()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x87A958", Offset = "0x87A958", VA = "0x87A958")]
	public void SetPathsIni()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x87AB10", Offset = "0x87AB10", VA = "0x87AB10")]
	public EstadosBoss GetEstado()
	{
		return default(EstadosBoss);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x87AB18", Offset = "0x87AB18", VA = "0x87AB18")]
	public void Empezar()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x87AB2C", Offset = "0x87AB2C", VA = "0x87AB2C")]
	private void FinDePathMovimiento(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x87ABD0", Offset = "0x87ABD0", VA = "0x87ABD0")]
	private void FinDePathCambioOleada(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x87AC18", Offset = "0x87AC18", VA = "0x87AC18")]
	private void FinDePathInicial(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x87AB5C", Offset = "0x87AB5C", VA = "0x87AB5C")]
	[IteratorStateMachine(typeof(<PosicionarseEnElSitio>d__23))]
	private IEnumerator PosicionarseEnElSitio()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x87ACFC", Offset = "0x87ACFC", VA = "0x87ACFC")]
	protected void Update()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x87AF6C", Offset = "0x87AF6C", VA = "0x87AF6C", Slot = "12")]
	protected virtual Vector3 CalcularBalanceoPorMovimiento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x87B0CC", Offset = "0x87B0CC", VA = "0x87B0CC")]
	protected Vector3 CalcularBalanceoPorViento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x87B33C", Offset = "0x87B33C", VA = "0x87B33C")]
	protected void PararPathActual()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x87B3C0", Offset = "0x87B3C0", VA = "0x87B3C0", Slot = "13")]
	public virtual void CambiarEstado(EstadosBoss nuevoEstado)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x87B99C", Offset = "0x87B99C", VA = "0x87B99C")]
	public void IrAlPath(AirplanePath airplanepath, bool cambiarAMovimiento = false)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x87BD20", Offset = "0x87BD20", VA = "0x87BD20")]
	[IteratorStateMachine(typeof(<IrAPath>d__43))]
	private IEnumerator IrAPath(AirplanePath airplanepath, bool cambiarAMovimiento = false)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x87BC4C", Offset = "0x87BC4C", VA = "0x87BC4C")]
	[IteratorStateMachine(typeof(<ActivarArmas>d__44))]
	private IEnumerator ActivarArmas()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x87B918", Offset = "0x87B918", VA = "0x87B918")]
	[IteratorStateMachine(typeof(<DesaparecerArmas>d__45))]
	private IEnumerator DesaparecerArmas(int ronda)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x87BCC0", Offset = "0x87BCC0", VA = "0x87BCC0")]
	[IteratorStateMachine(typeof(<IniciarFinalZDI>d__46))]
	private IEnumerator IniciarFinalZDI()
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x87BE50", Offset = "0x87BE50", VA = "0x87BE50", Slot = "7")]
	public override void PasamosDeRonda()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x87BE64", Offset = "0x87BE64", VA = "0x87BE64", Slot = "14")]
	public virtual void MovimientoOleadaActual()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x87C27C", Offset = "0x87C27C", VA = "0x87C27C", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x87C338", Offset = "0x87C338", VA = "0x87C338")]
	[IteratorStateMachine(typeof(<MoverDelanteMioAlMorir>d__62))]
	private IEnumerator MoverDelanteMioAlMorir()
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x87C2C4", Offset = "0x87C2C4", VA = "0x87C2C4")]
	[IteratorStateMachine(typeof(<GranExplosionFinal>d__64))]
	private IEnumerator GranExplosionFinal()
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x87B9FC", Offset = "0x87B9FC", VA = "0x87B9FC")]
	[IteratorStateMachine(typeof(<ExplosionIntermedia>d__65))]
	private IEnumerator ExplosionIntermedia()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x87C424", Offset = "0x87C424", VA = "0x87C424")]
	private void AcabarDeMorir()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x87C948", Offset = "0x87C948", VA = "0x87C948")]
	public void LimpiarTrails()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x87CA08", Offset = "0x87CA08", VA = "0x87CA08")]
	public void ApartarseParaNoSalirEnLaPausa(bool activarPausa)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x87CC2C", Offset = "0x87CC2C", VA = "0x87CC2C")]
	public void TeleportarTrail()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x87CC64", Offset = "0x87CC64", VA = "0x87CC64")]
	[IteratorStateMachine(typeof(<ResetTrailRenderer>d__74))]
	private IEnumerator ResetTrailRenderer()
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x87CD00", Offset = "0x87CD00", VA = "0x87CD00")]
	public EnemigoBoss()
	{
	}
}
[Token(Token = "0x200012D")]
public class EnemigoBossNivel1 : EnemigoBoss
{
	[Token(Token = "0x6000628")]
	[Address(RVA = "0x87F4C8", Offset = "0x87F4C8", VA = "0x87F4C8")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x87F4CC", Offset = "0x87F4CC", VA = "0x87F4CC")]
	protected new void Update()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x87F690", Offset = "0x87F690", VA = "0x87F690")]
	public EnemigoBossNivel1()
	{
	}
}
[Token(Token = "0x200012E")]
public class EnemigoBossNivel16Summoner : EnemigoBossNivel1
{
	[Serializable]
	[Token(Token = "0x200012F")]
	public struct Minion
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject minion;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float tiempoParaElSiguiente;
	}

	[Serializable]
	[Token(Token = "0x2000130")]
	public class MinionsOleada
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Minion[] minions;

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x87F79C", Offset = "0x87F79C", VA = "0x87F79C")]
		public MinionsOleada()
		{
		}
	}

	[Token(Token = "0x2000131")]
	[CompilerGenerated]
	private sealed class <spawnMinion>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBossNivel16Summoner <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000633")]
			[Address(RVA = "0x87FC8C", Offset = "0x87FC8C", VA = "0x87FC8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x87FCD4", Offset = "0x87FCD4", VA = "0x87FCD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x87F768", Offset = "0x87F768", VA = "0x87F768")]
		[DebuggerHidden]
		public <spawnMinion>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x87F7A4", Offset = "0x87F7A4", VA = "0x87F7A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x87F7A8", Offset = "0x87F7A8", VA = "0x87F7A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x87FC94", Offset = "0x87FC94", VA = "0x87FC94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	[Space]
	public float timeToSpawnMinion;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public bool repeatedSpawning;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int distanciaRandomAcrobaticos;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool haSalidoHeinkel;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public MinionsOleada[] minionsOleadas;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int contOleadaMinionsActual;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private int contMinionActual;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x87F694", Offset = "0x87F694", VA = "0x87F694")]
	private new void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x87F6AC", Offset = "0x87F6AC", VA = "0x87F6AC")]
	private new void Update()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x87F6F4", Offset = "0x87F6F4", VA = "0x87F6F4")]
	[IteratorStateMachine(typeof(<spawnMinion>d__11))]
	private IEnumerator spawnMinion()
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x87F790", Offset = "0x87F790", VA = "0x87F790")]
	public EnemigoBossNivel16Summoner()
	{
	}
}
[Token(Token = "0x2000132")]
public class EnemigoBossNivel3Barco : EnemigoBoss
{
	[Token(Token = "0x2000133")]
	[CompilerGenerated]
	private sealed class <MoverACentro>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform a;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemigoBossNivel3Barco <>4__this;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000640")]
			[Address(RVA = "0x880D20", Offset = "0x880D20", VA = "0x880D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0x880D68", Offset = "0x880D68", VA = "0x880D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x8806A8", Offset = "0x8806A8", VA = "0x8806A8")]
		[DebuggerHidden]
		public <MoverACentro>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x880BF0", Offset = "0x880BF0", VA = "0x880BF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x880BF4", Offset = "0x880BF4", VA = "0x880BF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x880D28", Offset = "0x880D28", VA = "0x880D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public bool enMovimiento;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
	public bool dobleBarco;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float movimientoArribaYAbajo;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float velocidadDeMovimientoZ;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private List<Transform> barcoA;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private List<Transform> barcoB;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float movimientoLateral;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public float velocidadDeMovimientoX;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float startPositionBarcosZ;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float startPositionBarcoAX;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float startPositionBarcoBX;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private bool derecha;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float posZ;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x87FCDC", Offset = "0x87FCDC", VA = "0x87FCDC")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x88034C", Offset = "0x88034C", VA = "0x88034C")]
	protected new void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x880618", Offset = "0x880618", VA = "0x880618")]
	[IteratorStateMachine(typeof(<MoverACentro>d__13))]
	private IEnumerator MoverACentro(Transform a)
	{
		return null;
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x8806D0", Offset = "0x8806D0", VA = "0x8806D0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x8809EC", Offset = "0x8809EC", VA = "0x8809EC", Slot = "12")]
	protected override Vector3 CalcularBalanceoPorMovimiento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x880B20", Offset = "0x880B20", VA = "0x880B20", Slot = "14")]
	public override void MovimientoOleadaActual()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x880B24", Offset = "0x880B24", VA = "0x880B24")]
	public EnemigoBossNivel3Barco()
	{
	}
}
[Token(Token = "0x2000134")]
public class EnemigoBossNivel4 : EnemigoBossNivel1
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public int[] rondasDeAccion;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public int[] torretasAProteger;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int[] torretasQueDebenEstarMuertas;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x880D70", Offset = "0x880D70", VA = "0x880D70")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x880DCC", Offset = "0x880DCC", VA = "0x880DCC")]
	private void LessUpdate()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x8810B0", Offset = "0x8810B0", VA = "0x8810B0")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x8810B4", Offset = "0x8810B4", VA = "0x8810B4")]
	public EnemigoBossNivel4()
	{
	}
}
[Token(Token = "0x2000135")]
public class EnemigoBossNivel5Helicoptero : EnemigoBoss
{
	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float tDelta;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool derecha;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x8810B8", Offset = "0x8810B8", VA = "0x8810B8")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x8810BC", Offset = "0x8810BC", VA = "0x8810BC")]
	protected new void Update()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x881258", Offset = "0x881258", VA = "0x881258")]
	private Vector3 Zigzag()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x8812F0", Offset = "0x8812F0", VA = "0x8812F0", Slot = "12")]
	protected override Vector3 CalcularBalanceoPorMovimiento()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x881450", Offset = "0x881450", VA = "0x881450", Slot = "14")]
	public override void MovimientoOleadaActual()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x88188C", Offset = "0x88188C", VA = "0x88188C")]
	public EnemigoBossNivel5Helicoptero()
	{
	}
}
[Token(Token = "0x2000136")]
public class EnemigoBossNivel6Summoner : EnemigoBossNivel1
{
	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <spawnMinion>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemigoBossNivel6Summoner <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000655")]
			[Address(RVA = "0x881E24", Offset = "0x881E24", VA = "0x881E24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x881E6C", Offset = "0x881E6C", VA = "0x881E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x8819E4", Offset = "0x8819E4", VA = "0x8819E4")]
		[DebuggerHidden]
		public <spawnMinion>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x881A40", Offset = "0x881A40", VA = "0x881A40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x881A44", Offset = "0x881A44", VA = "0x881A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x881E2C", Offset = "0x881E2C", VA = "0x881E2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[Space]
	public GameObject gruposEnemigos;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public float timeToSpawnMinion;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public bool repeatedSpawning;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x881890", Offset = "0x881890", VA = "0x881890")]
	private new void Start()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x88196C", Offset = "0x88196C", VA = "0x88196C")]
	private new void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x881970", Offset = "0x881970", VA = "0x881970")]
	[IteratorStateMachine(typeof(<spawnMinion>d__5))]
	private IEnumerator spawnMinion()
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x881A0C", Offset = "0x881A0C", VA = "0x881A0C")]
	public EnemigoBossNivel6Summoner()
	{
	}
}
[Token(Token = "0x2000138")]
public class EnemigoBossZDI1_1 : EnemigoBoss
{
	[Token(Token = "0x6000658")]
	[Address(RVA = "0x881E74", Offset = "0x881E74", VA = "0x881E74")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x881E78", Offset = "0x881E78", VA = "0x881E78")]
	protected new void Update()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x881E7C", Offset = "0x881E7C", VA = "0x881E7C")]
	public EnemigoBossZDI1_1()
	{
	}
}
[Token(Token = "0x2000139")]
public class EnemigoBunker : Enemigo
{
	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Variables disparo")]
	public bool disparar;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float distancia;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform player;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 posicionTarget;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Vector3 posicionActual;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool activo;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool pasado;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool zDI;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int DistanciaExtraParaDetectarTarget;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public CapsuleCollider capsula;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool bunkerZDIVertical;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject[] cambioDeTag;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public BoxCollider bCollider;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public MeshRenderer[] meshesBunkerRojo;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool BunkerRojo;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int rondaAnterior;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool distanciaExtra;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x881E80", Offset = "0x881E80", VA = "0x881E80", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x8820E0", Offset = "0x8820E0", VA = "0x8820E0")]
	public void Update()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x88247C", Offset = "0x88247C", VA = "0x88247C")]
	protected new void EnAreaDeJuego()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x882844", Offset = "0x882844", VA = "0x882844", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x8828D0", Offset = "0x8828D0", VA = "0x8828D0", Slot = "9")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x8828D4", Offset = "0x8828D4", VA = "0x8828D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x882A48", Offset = "0x882A48", VA = "0x882A48")]
	public EnemigoBunker()
	{
	}
}
[Token(Token = "0x200013A")]
public class EnemigoHeinkel : EnemigoAereo
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool activado;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int rondaAnterior;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x882A50", Offset = "0x882A50", VA = "0x882A50", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x882DCC", Offset = "0x882DCC", VA = "0x882DCC")]
	public new void Update()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x883214", Offset = "0x883214", VA = "0x883214", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x8834E0", Offset = "0x8834E0", VA = "0x8834E0")]
	public EnemigoHeinkel()
	{
	}
}
[Token(Token = "0x200013B")]
public class EnemigoHeinkelTorreta : EnemigoAereo
{
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool activado;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public MeshCollider meshCollider;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject humoFuego;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int rondaAnterior;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x8834E8", Offset = "0x8834E8", VA = "0x8834E8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x883878", Offset = "0x883878", VA = "0x883878")]
	public new void Update()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x883C0C", Offset = "0x883C0C", VA = "0x883C0C", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x883DD4", Offset = "0x883DD4", VA = "0x883DD4", Slot = "9")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x883EB0", Offset = "0x883EB0", VA = "0x883EB0")]
	public EnemigoHeinkelTorreta()
	{
	}
}
[Token(Token = "0x200013C")]
public class EnemigoHelicoptero : EnemigoAereo
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool activado;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int rondaAnterior;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool esRojo;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject collidersGo;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Collider[] colliders;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject humoFuego;

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x883EB8", Offset = "0x883EB8", VA = "0x883EB8")]
	private new void Start()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x884210", Offset = "0x884210", VA = "0x884210")]
	private new void Update()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x8845C8", Offset = "0x8845C8", VA = "0x8845C8", Slot = "6")]
	public override void morir(bool porBala = false, bool porMegaBoom = false, [Optional] Transform posMegaboom, bool sueltoMonedas = true)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x884C9C", Offset = "0x884C9C", VA = "0x884C9C", Slot = "9")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x884D9C", Offset = "0x884D9C", VA = "0x884D9C")]
	public EnemigoHelicoptero()
	{
	}
}
[Token(Token = "0x200013D")]
public class MiniBoss : Enemigo
{
	[Token(Token = "0x200013E")]
	public enum EstadosBoss
	{
		[Token(Token = "0x4000A89")]
		entrando,
		[Token(Token = "0x4000A8A")]
		movimiento,
		[Token(Token = "0x4000A8B")]
		muriendo
	}

	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private sealed class <TiempoInvulnerable>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniBoss <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000681")]
			[Address(RVA = "0x88629C", Offset = "0x88629C", VA = "0x88629C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0x8862E4", Offset = "0x8862E4", VA = "0x8862E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x885418", Offset = "0x885418", VA = "0x885418")]
		[DebuggerHidden]
		public <TiempoInvulnerable>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x8861E4", Offset = "0x8861E4", VA = "0x8861E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x8861E8", Offset = "0x8861E8", VA = "0x8861E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x8862A4", Offset = "0x8862A4", VA = "0x8862A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[CompilerGenerated]
	private sealed class <IniciarBoss>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniBoss <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0x88643C", Offset = "0x88643C", VA = "0x88643C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000689")]
			[Address(RVA = "0x886484", Offset = "0x886484", VA = "0x886484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x885BD8", Offset = "0x885BD8", VA = "0x885BD8")]
		[DebuggerHidden]
		public <IniciarBoss>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x8862EC", Offset = "0x8862EC", VA = "0x8862EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x8862F0", Offset = "0x8862F0", VA = "0x8862F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x886444", Offset = "0x886444", VA = "0x886444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000141")]
	[CompilerGenerated]
	private sealed class <IniciarFinalZDI>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniBoss <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068D")]
			[Address(RVA = "0x886574", Offset = "0x886574", VA = "0x886574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0x8865BC", Offset = "0x8865BC", VA = "0x8865BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x885C00", Offset = "0x885C00", VA = "0x885C00")]
		[DebuggerHidden]
		public <IniciarFinalZDI>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x88648C", Offset = "0x88648C", VA = "0x88648C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x886490", Offset = "0x886490", VA = "0x886490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x88657C", Offset = "0x88657C", VA = "0x88657C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000142")]
	[CompilerGenerated]
	private sealed class <FinalNivel>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniBoss <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0x8866A4", Offset = "0x8866A4", VA = "0x8866A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0x8866EC", Offset = "0x8866EC", VA = "0x8866EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x885C28", Offset = "0x885C28", VA = "0x885C28")]
		[DebuggerHidden]
		public <FinalNivel>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x8865C4", Offset = "0x8865C4", VA = "0x8865C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x8865C8", Offset = "0x8865C8", VA = "0x8865C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x8866AC", Offset = "0x8866AC", VA = "0x8866AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000143")]
	[CompilerGenerated]
	private sealed class <MinibossExplosiones>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniBoss <>4__this;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x8869A0", Offset = "0x8869A0", VA = "0x8869A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x8869E8", Offset = "0x8869E8", VA = "0x8869E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x885FBC", Offset = "0x885FBC", VA = "0x885FBC")]
		[DebuggerHidden]
		public <MinibossExplosiones>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x8866F4", Offset = "0x8866F4", VA = "0x8866F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x8866F8", Offset = "0x8866F8", VA = "0x8866F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x8869A8", Offset = "0x8869A8", VA = "0x8869A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float maxHp;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float hpActual;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public EstadosBoss estadoActual;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform pivot;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AirplanePath controladorPath;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private PathFreeFall scriptCaida;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float valorActual;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float valorNuevo;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool invulnerable;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public ControladorHumoFuego cHumoFuego;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float explosion1delay;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float explosion2delay;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool torretasActivas;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("SonidoMotor")]
	[EventRef]
	public string ruta;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public pruebaSonidoOneShot sfxExplosion1;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public pruebaSonidoOneShot sfxExplosion2;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform explosionPadre1;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform explosionPadre2;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PoolExplosiones.Explosiones particulaExplosion1;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private PoolExplosiones.Explosiones particulaExplosion2;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool destruido;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Coroutine iniciarBoss;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x884DA4", Offset = "0x884DA4", VA = "0x884DA4")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8851F0", Offset = "0x8851F0", VA = "0x8851F0")]
	public void InicializarBoss()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x885214", Offset = "0x885214", VA = "0x885214")]
	public void RecibirDano(float danoRecibido)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x8853A4", Offset = "0x8853A4", VA = "0x8853A4")]
	[IteratorStateMachine(typeof(<TiempoInvulnerable>d__26))]
	private IEnumerator TiempoInvulnerable()
	{
		return null;
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x885440", Offset = "0x885440", VA = "0x885440", Slot = "12")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x885A7C", Offset = "0x885A7C", VA = "0x885A7C")]
	[IteratorStateMachine(typeof(<IniciarBoss>d__29))]
	private IEnumerator IniciarBoss()
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x885AF0", Offset = "0x885AF0", VA = "0x885AF0")]
	[IteratorStateMachine(typeof(<IniciarFinalZDI>d__30))]
	private IEnumerator IniciarFinalZDI()
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x885B64", Offset = "0x885B64", VA = "0x885B64")]
	[IteratorStateMachine(typeof(<FinalNivel>d__31))]
	private IEnumerator FinalNivel()
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x885C50", Offset = "0x885C50", VA = "0x885C50")]
	private void FinDePath(object sender, PathOverEventArgs args)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x8851F8", Offset = "0x8851F8", VA = "0x8851F8")]
	public void MovimientoEntrada()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x885C54", Offset = "0x885C54", VA = "0x885C54")]
	public void EfectoExplotar()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x885F48", Offset = "0x885F48", VA = "0x885F48")]
	[IteratorStateMachine(typeof(<MinibossExplosiones>d__35))]
	private IEnumerator MinibossExplosiones()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x885FE4", Offset = "0x885FE4", VA = "0x885FE4", Slot = "11")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x8861D4", Offset = "0x8861D4", VA = "0x8861D4")]
	public MiniBoss()
	{
	}
}
[Token(Token = "0x2000144")]
public abstract class ParteBoss : MonoBehaviour
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHp;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hpActual;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destuido;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_oleada;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Boss m_Boss;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool puedoEmpezarADisparar;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public pruebaSonidoOneShot golpeo;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public pruebaSonidoOneShot explosionMorir;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numParte;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x8869F0", Offset = "0x8869F0", VA = "0x8869F0")]
	private void Explotar()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x886A28", Offset = "0x886A28", VA = "0x886A28")]
	public void RecibirDano(float danoRecibido)
	{
	}

	[Token(Token = "0x600069E")]
	public abstract void EfectoExplotar();

	[Token(Token = "0x600069F")]
	public abstract void EfectoRecibirDano();

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x886B84", Offset = "0x886B84", VA = "0x886B84")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x886B90", Offset = "0x886B90", VA = "0x886B90")]
	protected ParteBoss()
	{
	}
}
[Token(Token = "0x2000145")]
public class ReferenciaEnemigo : MonoBehaviour
{
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemigo enemigoRef;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x886B98", Offset = "0x886B98", VA = "0x886B98")]
	public ReferenciaEnemigo()
	{
	}
}
[Token(Token = "0x2000146")]
public class Torreta : MonoBehaviour
{
	[Token(Token = "0x2000147")]
	public enum TipoDeApuntadoYDisparo
	{
		[Token(Token = "0x4000AFF")]
		AutoApuntado,
		[Token(Token = "0x4000B00")]
		PorRaycast,
		[Token(Token = "0x4000B01")]
		Giratorio,
		[Token(Token = "0x4000B02")]
		Null,
		[Token(Token = "0x4000B03")]
		GiratorioDisparoPorAngulos
	}

	[Serializable]
	[Token(Token = "0x2000148")]
	public struct ModelosTorreta
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Modelo;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject cuello;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform cañon;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform CañonCompuesto;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer meshRingVida;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Base;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer rendererTorreta;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] puntoDeDisparo;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] puntoDeDisparoTorretaCruzada;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ProyectilLaser proyectilLaserSimple;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ProyectilLaser[] proyectilesLaser4;

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x88C354", Offset = "0x88C354", VA = "0x88C354")]
		public void ApagarPorDestruccion()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <RachaDisparos>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Torreta <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x88C520", Offset = "0x88C520", VA = "0x88C520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x88C568", Offset = "0x88C568", VA = "0x88C568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x88C41C", Offset = "0x88C41C", VA = "0x88C41C")]
		[DebuggerHidden]
		public <RachaDisparos>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x88C444", Offset = "0x88C444", VA = "0x88C444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x88C448", Offset = "0x88C448", VA = "0x88C448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x88C528", Offset = "0x88C528", VA = "0x88C528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <ApagarHumo>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Torreta <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x88C69C", Offset = "0x88C69C", VA = "0x88C69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x88C6E4", Offset = "0x88C6E4", VA = "0x88C6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x88C570", Offset = "0x88C570", VA = "0x88C570")]
		[DebuggerHidden]
		public <ApagarHumo>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x88C598", Offset = "0x88C598", VA = "0x88C598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x88C59C", Offset = "0x88C59C", VA = "0x88C59C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x88C6A4", Offset = "0x88C6A4", VA = "0x88C6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private sealed class <Apagar>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Torreta <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x88C7F0", Offset = "0x88C7F0", VA = "0x88C7F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x88C838", Offset = "0x88C838", VA = "0x88C838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x88C6EC", Offset = "0x88C6EC", VA = "0x88C6EC")]
		[DebuggerHidden]
		public <Apagar>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x88C714", Offset = "0x88C714", VA = "0x88C714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x88C718", Offset = "0x88C718", VA = "0x88C718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x88C7F8", Offset = "0x88C7F8", VA = "0x88C7F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Propiedades Torreta")]
	public Enemigo.TipoEnemigo tipoEnemigo;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TipoDeApuntadoYDisparo tipoDeApuntadoYDisparo;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inmortalConEscudo;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fantasmaEnAlturaDeVuelo;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody trozoRoto1;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody trozoRoto2;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody trozoRoto3;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Propiedades Disparos")]
	public float cooldownEntreRafagas;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float cooldownExtraPrimerDisparo;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float coolDownBalasEnRafaga;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float numeroDeRachas;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float danoArma;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float disparoCadaXAngulo;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Propiedades Balas")]
	public Proyectil.TipoProyectil tipoProyectil;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxHp;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float velocidadBala;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float sizeBala;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public float sizeTrail;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float timeTrail;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("MovimientoTorreta")]
	public float velocidadRotacion;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float porcentajeVelocidadDeRotacionEnElEjeVertical;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float porcentajeVelocidadDeRotacionEnElEjeHorizontal;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool bloqueadoEnEjeHorizontal;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool BloqueadoEnEjeVertical;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 desvioAlApuntar;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Header("Variables Extras Segun propiedades")]
	public float minAnguloRotacion;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float maxAnguloRotacion;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float velocidadGiro;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float fuerzaLanzamiento;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float tiempoLaser;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float distanciaLaser;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int numeroBalas;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EventInstance sfxLaser;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Referencias")]
	private ModelosTorreta modeloActual;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ModelosTorreta modeloMisil;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ModelosTorreta modeloLaser;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public ModelosTorreta modeloMetralleta;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject[] balaPrefab;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public bool tieneTorreta;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Material materialHIT;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Material materialTorreta;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject torretaDestruida;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ParticleSystem humoEscombros;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public PoolExplosiones.Explosiones particulaExplosion;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Transform explosionPadre;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public pruebaSonidoOneShot SonidoTorreDestruidaBoss;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject escudo;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[Header("Audio")]
	[EventRef]
	public string rutaSonidoDisparo;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[EventRef]
	public string rutaSonidoDisparo2;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[EventRef]
	public string rutaSonidoHumo;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private EventInstance sonidoHumo;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float hpActual;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	[HideInInspector]
	public bool puedoEmpezarADisparar;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28D")]
	[HideInInspector]
	public bool muerto;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public Enemigo enemigoDueño;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	protected bool cambiandoMaterialPorHit;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	protected float contadorCambioMaterial;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	protected Transform player;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Vector3 direccionObjetivo;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private Vector3 futuroObjetivo;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 desfaseVelocidadBala;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float distanciaObjetivo;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool puedoDisparar;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	protected float ultimaVezQueDispare;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float sizeBalaInicial;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float sizeTrailInicial;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float timeTrailInicial;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private int numRacha;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private int layerPlayer;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private int ticks;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private float rotActual;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private Material ringVidaMat;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[HideInInspector]
	public bool editor_boss;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	[HideInInspector]
	public bool editor_ModoRotatorio;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
	[HideInInspector]
	public bool editor_GiratorioDisparoPorAngulos;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
	[HideInInspector]
	public bool editor_Mina;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	[HideInInspector]
	public bool editor_Laser;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30D")]
	[HideInInspector]
	public bool editor_Gusano;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30E")]
	[HideInInspector]
	public bool editor_Gusano_false;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Vector3 escalaInicialEscudo;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private int enZDI;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private Vector3 dispersionDisparoActual;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float factorBarraVidaTarget;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float gradosDesdeUltimoDisparo;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private float deltaRot;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private int mult;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float tiempoEntreDañoParaBoss;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x886BA0", Offset = "0x886BA0", VA = "0x886BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x886D8C", Offset = "0x886D8C", VA = "0x886D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x887EDC", Offset = "0x887EDC", VA = "0x887EDC")]
	public static void SetLayerRecursively(GameObject gameObject, int layer)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x887984", Offset = "0x887984", VA = "0x887984")]
	private void PonerBienGraficamente()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x88102C", Offset = "0x88102C", VA = "0x88102C")]
	public void ActivarDesactivarEscudo(bool activar)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x8881D4", Offset = "0x8881D4", VA = "0x8881D4", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8892D8", Offset = "0x8892D8", VA = "0x8892D8")]
	public void Disparar()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x88A3C8", Offset = "0x88A3C8", VA = "0x88A3C8")]
	[IteratorStateMachine(typeof(<RachaDisparos>d__96))]
	private IEnumerator RachaDisparos()
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x88A43C", Offset = "0x88A43C", VA = "0x88A43C", Slot = "5")]
	public virtual void EfectoRecibirDano()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x8833DC", Offset = "0x8833DC", VA = "0x8833DC")]
	public void EfectoExplotar()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x88A4F8", Offset = "0x88A4F8", VA = "0x88A4F8")]
	private void PlayFXTorretaDestruida()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x88B404", Offset = "0x88B404", VA = "0x88B404")]
	private void Explotar()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x88B510", Offset = "0x88B510", VA = "0x88B510")]
	[IteratorStateMachine(typeof(<ApagarHumo>d__101))]
	private IEnumerator ApagarHumo()
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x88B584", Offset = "0x88B584", VA = "0x88B584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x88B730", Offset = "0x88B730", VA = "0x88B730")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x88BA40", Offset = "0x88BA40", VA = "0x88BA40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x88BC38", Offset = "0x88BC38", VA = "0x88BC38")]
	public void RecibirDano(float dano)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x887E30", Offset = "0x887E30", VA = "0x887E30")]
	public void ActualizarMaterialVida()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x88BE88", Offset = "0x88BE88", VA = "0x88BE88", Slot = "6")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x88C094", Offset = "0x88C094", VA = "0x88C094")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x87BB00", Offset = "0x87BB00", VA = "0x87BB00")]
	public void Aparecer()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x87BA70", Offset = "0x87BA70", VA = "0x87BA70")]
	public void Desaparecer()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x88C188", Offset = "0x88C188", VA = "0x88C188")]
	[IteratorStateMachine(typeof(<Apagar>d__112))]
	private IEnumerator Apagar()
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x88C1FC", Offset = "0x88C1FC", VA = "0x88C1FC")]
	public Torreta()
	{
	}
}
[Token(Token = "0x200014C")]
public class FakeSky : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool comprobar;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool comprobarEscala;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool Apagado;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 escala;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float y;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 posAlApagar;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x88C840", Offset = "0x88C840", VA = "0x88C840")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x88C8F8", Offset = "0x88C8F8", VA = "0x88C8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x88CA0C", Offset = "0x88CA0C", VA = "0x88CA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x88CC48", Offset = "0x88CC48", VA = "0x88CC48")]
	public void Apagar()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x88CD38", Offset = "0x88CD38", VA = "0x88CD38")]
	public void Encender()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x88CDB8", Offset = "0x88CDB8", VA = "0x88CDB8")]
	public FakeSky()
	{
	}
}
[Token(Token = "0x200014D")]
public class fuegoAvionesSegunCalidadYrandom : MonoBehaviour
{
	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject humo;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fuego1;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fuego2;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x88CE24", Offset = "0x88CE24", VA = "0x88CE24")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x88CE9C", Offset = "0x88CE9C", VA = "0x88CE9C")]
	public fuegoAvionesSegunCalidadYrandom()
	{
	}
}
[Token(Token = "0x200014E")]
public class GirarArmaCentral : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	public enum TipoModeloArma
	{
		[Token(Token = "0x4000B26")]
		Central,
		[Token(Token = "0x4000B27")]
		LateralD,
		[Token(Token = "0x4000B28")]
		LateralI
	}

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TipoModeloArma tipo;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 localulerAnglesInicial;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool añadido;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public MeshRenderer mesh;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x88CEA4", Offset = "0x88CEA4", VA = "0x88CEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x88CF24", Offset = "0x88CF24", VA = "0x88CF24")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x88D044", Offset = "0x88D044", VA = "0x88D044")]
	private void AñadirQuitar(bool añadir)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x88D1AC", Offset = "0x88D1AC", VA = "0x88D1AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x88D284", Offset = "0x88D284", VA = "0x88D284")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x88D28C", Offset = "0x88D28C", VA = "0x88D28C")]
	public GirarArmaCentral()
	{
	}
}
[Token(Token = "0x2000150")]
public class iniciarForceSeatVR : MonoBehaviour
{
	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x88D2EC", Offset = "0x88D2EC", VA = "0x88D2EC")]
	public iniciarForceSeatVR()
	{
	}
}
[Token(Token = "0x2000151")]
public class laserAvion : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer miLinea;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform puntoDeDisparo;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x88D2F4", Offset = "0x88D2F4", VA = "0x88D2F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x88D34C", Offset = "0x88D34C", VA = "0x88D34C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x88D4C8", Offset = "0x88D4C8", VA = "0x88D4C8")]
	public laserAvion()
	{
	}
}
[Token(Token = "0x2000152")]
public abstract class LogrosRecords : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	public struct Resultado
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string usuario;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int record;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int posicion;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong id;
	}

	[Token(Token = "0x2000154")]
	public enum OrdenTabla
	{
		[Token(Token = "0x4000B36")]
		ascendente,
		[Token(Token = "0x4000B37")]
		descendente,
		[Token(Token = "0x4000B38")]
		ninguno
	}

	[Token(Token = "0x2000155")]
	public struct InfoTabla
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string nombre;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OrdenTabla orden;
	}

	[Token(Token = "0x2000156")]
	public enum Logros
	{
		[Token(Token = "0x4000B3C")]
		Nivel1,
		[Token(Token = "0x4000B3D")]
		Nivel2,
		[Token(Token = "0x4000B3E")]
		Nivel3,
		[Token(Token = "0x4000B3F")]
		Nivel4,
		[Token(Token = "0x4000B40")]
		Nivel5,
		[Token(Token = "0x4000B41")]
		Nivel6,
		[Token(Token = "0x4000B42")]
		Nivel7,
		[Token(Token = "0x4000B43")]
		Nivel8,
		[Token(Token = "0x4000B44")]
		Nivel9,
		[Token(Token = "0x4000B45")]
		Nivel10,
		[Token(Token = "0x4000B46")]
		Nivel11,
		[Token(Token = "0x4000B47")]
		Nivel12,
		[Token(Token = "0x4000B48")]
		Nivel13,
		[Token(Token = "0x4000B49")]
		Nivel14,
		[Token(Token = "0x4000B4A")]
		Nivel15,
		[Token(Token = "0x4000B4B")]
		Nivel16,
		[Token(Token = "0x4000B4C")]
		Mejora1Avion,
		[Token(Token = "0x4000B4D")]
		MejoraNivel2Avion,
		[Token(Token = "0x4000B4E")]
		MejoraNivel5Avion,
		[Token(Token = "0x4000B4F")]
		MejoraNivel10Avion,
		[Token(Token = "0x4000B50")]
		MejoraNivel15Avion
	}

	[Token(Token = "0x2000157")]
	public delegate void IGSMTablaEncontradaEventHandler(object sender, string tabla);

	[Token(Token = "0x2000158")]
	public delegate void IGSMResultadosEventHandler(object sender, List<Resultado> resultados, bool dosListados, string tabla);

	[Token(Token = "0x2000159")]
	public delegate void IGSMResultadoSubidoEventHandler(object sender, int miMejorResultado, string tabla);

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogrosRecords instance;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config.PlataformaJuego m_Plataforma;

	[Token(Token = "0x4000B2D")]
	public const int NUM_LOGROS = 21;

	[Token(Token = "0x14000003")]
	public event IGSMResultadosEventHandler ResultadosObtenidos
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x88D634", Offset = "0x88D634", VA = "0x88D634")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x88D6D0", Offset = "0x88D6D0", VA = "0x88D6D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event IGSMTablaEncontradaEventHandler TablaEncontrada
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x88D76C", Offset = "0x88D76C", VA = "0x88D76C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x88D808", Offset = "0x88D808", VA = "0x88D808")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event IGSMResultadoSubidoEventHandler RecordSubido
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x88D8A4", Offset = "0x88D8A4", VA = "0x88D8A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x88D940", Offset = "0x88D940", VA = "0x88D940")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x88D4D0", Offset = "0x88D4D0", VA = "0x88D4D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x88D9DC", Offset = "0x88D9DC", VA = "0x88D9DC", Slot = "4")]
	protected virtual void OnResultadosObtenidos(object sender, List<Resultado> resultados, bool dosListados, string tabla)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x88DA00", Offset = "0x88DA00", VA = "0x88DA00", Slot = "5")]
	protected virtual void OnTablaEncontrada(object sender, string tabla)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x88DA20", Offset = "0x88DA20", VA = "0x88DA20", Slot = "6")]
	protected virtual void OnRecordSubido(object sender, int miMejorResultado, string tabla)
	{
	}

	[Token(Token = "0x60006EA")]
	public abstract void InicializarTablas(List<InfoTabla> tablas);

	[Token(Token = "0x60006EB")]
	public abstract void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L);

	[Token(Token = "0x60006EC")]
	public abstract void SubirRecord(string tabla, int record);

	[Token(Token = "0x60006ED")]
	public abstract void MarcarLogroCompletado(string idLogro);

	[Token(Token = "0x60006EE")]
	public abstract string DameMiNombre();

	[Token(Token = "0x60006EF")]
	public abstract void ComprobarYDarLogroPlatino();

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x88DA40", Offset = "0x88DA40", VA = "0x88DA40")]
	public string DameNombreAchivement(Logros logro)
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x88DB98", Offset = "0x88DB98", VA = "0x88DB98")]
	protected LogrosRecords()
	{
	}
}
[Token(Token = "0x200015A")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	[Header("Snapshots")]
	public string rutaSnapshotRecreativa;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance SnapshotRecreativa;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string rutaSnapshotAvion;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance SnapshotAvion;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string rutaSnapshotSlowMotion;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance SnapshotSlowMotion;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[EventRef]
	public string rutaGestorMusicas;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EventInstance gestorMusicas;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool musicaIniciada;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Bus sfxBus;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Bus menuBus;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Bus musicaBus;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool flagTiempoLento;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x88DF1C", Offset = "0x88DF1C", VA = "0x88DF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x88E23C", Offset = "0x88E23C", VA = "0x88E23C")]
	public void IniciarMusica()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x88E054", Offset = "0x88E054", VA = "0x88E054")]
	public void CambiarEntreSnapshots(int num)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x88E278", Offset = "0x88E278", VA = "0x88E278")]
	public void ChangeMusic(int musica)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x88E27C", Offset = "0x88E27C", VA = "0x88E27C")]
	public void PlayMusic()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x88E38C", Offset = "0x88E38C", VA = "0x88E38C")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x88E39C", Offset = "0x88E39C", VA = "0x88E39C")]
	public void PausarFMOD()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x88E3D8", Offset = "0x88E3D8", VA = "0x88E3D8")]
	public void ReanudarFMOD()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x88E420", Offset = "0x88E420", VA = "0x88E420")]
	public void GameOver(int state)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x88E510", Offset = "0x88E510", VA = "0x88E510")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200015B")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	public enum Plataforma
	{
		[Token(Token = "0x4000BCF")]
		Steam,
		[Token(Token = "0x4000BD0")]
		PS4
	}

	[Token(Token = "0x200015D")]
	public enum Clima
	{
		[Token(Token = "0x4000BD2")]
		Dia,
		[Token(Token = "0x4000BD3")]
		Noche,
		[Token(Token = "0x4000BD4")]
		Amanecer
	}

	[Serializable]
	[Token(Token = "0x200015E")]
	public class MisionesData
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mision[] misiones;

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x89677C", Offset = "0x89677C", VA = "0x89677C")]
		public MisionesData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200015F")]
	public class Mision
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nombre;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string estrella1Condicion;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int estrella1Cantidad;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int estrella1CantidadDorada;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string estrella2Condicion;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int estrella2Cantidad;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int estrella2CantidadDorada;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string estrella3Condicion;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int estrella3Cantidad;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int estrella3CantidadDorada;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string estrella4Condicion;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int estrella4Cantidad;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int estrella4CantidadDorada;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string estrella5Condicion;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int estrella5Cantidad;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int estrella5CantidadDorada;

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x896EBC", Offset = "0x896EBC", VA = "0x896EBC")]
		public Mision()
		{
		}
	}

	[Token(Token = "0x2000160")]
	[CompilerGenerated]
	private sealed class <TimeACeroEnSiguienteFrame>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x896FC0", Offset = "0x896FC0", VA = "0x896FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x897008", Offset = "0x897008", VA = "0x897008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x891410", Offset = "0x891410", VA = "0x891410")]
		[DebuggerHidden]
		public <TimeACeroEnSiguienteFrame>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x896EC4", Offset = "0x896EC4", VA = "0x896EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x896EC8", Offset = "0x896EC8", VA = "0x896EC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x896FC8", Offset = "0x896FC8", VA = "0x896FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000161")]
	[CompilerGenerated]
	private sealed class <ReinicioNivel>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool nivelPasado;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__2;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <saltar>5__3;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x8973A4", Offset = "0x8973A4", VA = "0x8973A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0x8973EC", Offset = "0x8973EC", VA = "0x8973EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x892440", Offset = "0x892440", VA = "0x892440")]
		[DebuggerHidden]
		public <ReinicioNivel>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x897010", Offset = "0x897010", VA = "0x897010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x897014", Offset = "0x897014", VA = "0x897014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x8973AC", Offset = "0x8973AC", VA = "0x8973AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000162")]
	[CompilerGenerated]
	private sealed class <EsperaInsertCoin>d__131 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0x897580", Offset = "0x897580", VA = "0x897580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0x8975C8", Offset = "0x8975C8", VA = "0x8975C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x896574", Offset = "0x896574", VA = "0x896574")]
		[DebuggerHidden]
		public <EsperaInsertCoin>d__131(int <>1__state)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x8973F4", Offset = "0x8973F4", VA = "0x8973F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x8973F8", Offset = "0x8973F8", VA = "0x8973F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x897588", Offset = "0x897588", VA = "0x897588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000163")]
	[CompilerGenerated]
	private sealed class <EventosReiniciar>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool nivelPasado;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameManager <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0x897724", Offset = "0x897724", VA = "0x897724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0x89776C", Offset = "0x89776C", VA = "0x89776C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x89659C", Offset = "0x89659C", VA = "0x89659C")]
		[DebuggerHidden]
		public <EventosReiniciar>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x8975D0", Offset = "0x8975D0", VA = "0x8975D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x8975D4", Offset = "0x8975D4", VA = "0x8975D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x89772C", Offset = "0x89772C", VA = "0x89772C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <ReiniciarCabezaDespuesDeCargarLevel>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0x8978F8", Offset = "0x8978F8", VA = "0x8978F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x897940", Offset = "0x897940", VA = "0x897940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x896638", Offset = "0x896638", VA = "0x896638")]
		[DebuggerHidden]
		public <ReiniciarCabezaDespuesDeCargarLevel>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x897774", Offset = "0x897774", VA = "0x897774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x897778", Offset = "0x897778", VA = "0x897778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x897900", Offset = "0x897900", VA = "0x897900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <ActivarNegro>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <i>5__2;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0x8979DC", Offset = "0x8979DC", VA = "0x8979DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x897A24", Offset = "0x897A24", VA = "0x897A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x8966C0", Offset = "0x8966C0", VA = "0x8966C0")]
		[DebuggerHidden]
		public <ActivarNegro>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x897948", Offset = "0x897948", VA = "0x897948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x89794C", Offset = "0x89794C", VA = "0x89794C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x8979E4", Offset = "0x8979E4", VA = "0x8979E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000166")]
	[CompilerGenerated]
	private sealed class <DesactivarNegro>d__139 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <i>5__2;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x897ABC", Offset = "0x897ABC", VA = "0x897ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x897B04", Offset = "0x897B04", VA = "0x897B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x8966E8", Offset = "0x8966E8", VA = "0x8966E8")]
		[DebuggerHidden]
		public <DesactivarNegro>d__139(int <>1__state)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x897A2C", Offset = "0x897A2C", VA = "0x897A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x897A30", Offset = "0x897A30", VA = "0x897A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x897AC4", Offset = "0x897AC4", VA = "0x897AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameManager instance;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool es2076;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool nieblaIntensa2076;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool picoComoQuest1;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AndroidComoQuest1;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool limitesConCubos;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool quest1;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool juegoVR;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 posCamaraNoVR;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public Vector3 posCamaraNoVRgameplay;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 posCamaraNoVRZDIprimera;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Vector3 posCamaraNoVRZDItercera;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Vector3 rotCamaraNoVR;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float fovCamaraNoVRinicial;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float fovCamaraNoVR;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Segun el index se jugará una parte del nivel: 0 = Nivel Completo / 1 = ZDI 1 / 2 = ZDI 2 ")]
	public int queJugar;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] materialesAjustables;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioManager audioManager;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ManagerCalidad calidadManager;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ProgresionManager progresionManager;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ControladorNiebla controladorNiebla;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControladorIslas controladorIslas;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ManagerMisiones manageerMisiones;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ForcesController forcesController;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ControladorInfoIngame infoIngame;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ControladorPalancaAvion controladorPalancaAvion;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool nivelCargado;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool pausa;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image cambasNegro;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GlitchEffect glitch;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool enMenu;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool manoEnJoystick;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool manoDominante;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool nivelPasado;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool nivelPasadoMenu;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	[HideInInspector]
	public bool acaboDePasarElNivelFinal;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	[HideInInspector]
	public bool antimonkeyStop;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	[HideInInspector]
	public bool estaEnDialogo;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject camaraFPS;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool manoIzquierdaApagada;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public DebugTexto debugTexto;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool bloquearBotones;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Plataforma plataformaActual;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Clima clima;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int nivel;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ControladorAvionPrincipal controladorAP;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ControladorNivel controladorN;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ControladorTVs controladorTV;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ControladorMisionHolografica controladorHolograma;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AvionJugador avionJugador;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AvionJugador avionJugadorP;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AvionJugador avionJugadorG;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject targetAvion;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject textoInicio;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool repoInicio;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public List<Dialogos> dialogoActivos;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int RachaVictoriasDerrotas;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public int ultimoNivelJugado;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public int ultimoNivelDesbloqueado;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[HideInInspector]
	public int ultimoDialogoMostrado;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public ControladorRecreativa controladorRecreativa;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public FakeSky fakeSky;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject prefabPoolEnemigos;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject prefabPoolExplosiones;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool tengoLIVActivado;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject prefabRadarSystem;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public bool leaderBoardsPermitidos;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	[HideInInspector]
	public bool primerRequest;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool esPs4Base;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	[HideInInspector]
	public bool followMiniboss;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[HideInInspector]
	public AccionesJugador.TipoSensores tipoDeSensores;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public AccionesJugador.JoyInput teclado;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[HideInInspector]
	public AccionesJugador.JoyInput senDer;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	public AccionesJugador.JoyInput senIzq;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[HideInInspector]
	public AccionesJugador.JoyInput mando;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[HideInInspector]
	public AccionesJugador.JoyInput rudder;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[HideInInspector]
	public AccionesJugador.JoyInput tracker;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[HideInInspector]
	public ControladorMenu controladorMenu;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public bool cabezaRotadaEnElPrimerMenu;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
	[HideInInspector]
	public bool cabezaAlgunaVezRotada;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	[HideInInspector]
	public float ultimaRotacionCabeza;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool cascoQuitadoOld;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
	[HideInInspector]
	public bool ejecutandoOperacionSonyManager;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x272")]
	private bool volverAbajo;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x273")]
	public bool enSlow;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public List<ManoLaser> manosLaser;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[HideInInspector]
	public bool manoLaserDerechaPrioritaria;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	[HideInInspector]
	public float ultimoTiempoSonidoBoton;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public float ultimaTdeEfectoAparicion;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	[HideInInspector]
	public bool enPausa;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public GameObject sistemasDeNubes;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public bool cascoQuitado;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[HideInInspector]
	public int numRachaMuertesNivel16;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Vector3 posRecreativaAntesDePausa;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Coroutine TiempoACeroCor;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private int monedasParaRestar;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private int puntuacionParaRestar;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool enTiempoDeInsertCoin;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
	private bool gameOver;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C2")]
	public bool haSidoGameOver;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private float velocidadCuentaAtras;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Coroutine insertCoin;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public int monedasTotalesNivel;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Coroutine reiniciarNivelCor;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public List<MisionesData> infoMisiones;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[HideInInspector]
	public float sensibilidadPalanca;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	[HideInInspector]
	public bool axisInvertidoEnZdi;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2ED")]
	[HideInInspector]
	public bool vibracionPermitida;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public bool[] estrellasNoDoradasPreviasANivel;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public bool manoVRenZDI;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F9")]
	public bool haEscogidoManoVR;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private float heightFOV;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x88E520", Offset = "0x88E520", VA = "0x88E520")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x88F4A0", Offset = "0x88F4A0", VA = "0x88F4A0")]
	public bool GetLimitesConCubos()
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x88F4A8", Offset = "0x88F4A8", VA = "0x88F4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x88F858", Offset = "0x88F858", VA = "0x88F858")]
	public void recolocarInteligente(bool sinRotar = false)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x88FAE0", Offset = "0x88FAE0", VA = "0x88FAE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8911CC", Offset = "0x8911CC", VA = "0x8911CC")]
	public void ajustarResolucionAndroid()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x8911D0", Offset = "0x8911D0", VA = "0x8911D0")]
	public void debugTextoEscribir(string st)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x89011C", Offset = "0x89011C", VA = "0x89011C")]
	public void Pause(bool activo = true)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x891264", Offset = "0x891264", VA = "0x891264")]
	[IteratorStateMachine(typeof(<TimeACeroEnSiguienteFrame>d__105))]
	private IEnumerator TimeACeroEnSiguienteFrame()
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x891438", Offset = "0x891438", VA = "0x891438")]
	public void CargarNivel(int nivel)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x891734", Offset = "0x891734", VA = "0x891734")]
	public void VolverAlMenu()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x8912C4", Offset = "0x8912C4", VA = "0x8912C4")]
	public void ControlarAvion(bool accion)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x891C9C", Offset = "0x891C9C", VA = "0x891C9C")]
	public void ControlarMovimiento(bool accion, bool desactivarAnimator = true)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x891D34", Offset = "0x891D34", VA = "0x891D34")]
	public void ControlarDisparo(bool accion)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x891D54", Offset = "0x891D54", VA = "0x891D54")]
	public void ReconocerAvion()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x891FE8", Offset = "0x891FE8", VA = "0x891FE8")]
	public void CambioEntreAviones(int num)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x8921CC", Offset = "0x8921CC", VA = "0x8921CC")]
	public void ReposicionarAvion()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x892270", Offset = "0x892270", VA = "0x892270")]
	public bool LlueveEnEsteNivel(int nivel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x8922EC", Offset = "0x8922EC", VA = "0x8922EC")]
	public bool NivelEsDeVelocidad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x892360", Offset = "0x892360", VA = "0x892360")]
	public Clima iluminacionDelNivel(int nivel)
	{
		return default(Clima);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x891548", Offset = "0x891548", VA = "0x891548")]
	public void CambiarMaterialesSegunClima()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x88F9E8", Offset = "0x88F9E8", VA = "0x88F9E8")]
	public void ReposicionarCabeza(bool sinRotar = false, bool rotSoloEnX = false)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x88F8FC", Offset = "0x88F8FC", VA = "0x88F8FC")]
	public void ReposicionarCabeza3ra(bool sinRotar = false)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x892384", Offset = "0x892384", VA = "0x892384")]
	public void ReiniciarNivelCor(float tiempo, bool nivelPasado = false)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x8923A8", Offset = "0x8923A8", VA = "0x8923A8")]
	[IteratorStateMachine(typeof(<ReinicioNivel>d__121))]
	private IEnumerator ReinicioNivel(float tiempo, bool nivelPasado = false)
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x892468", Offset = "0x892468", VA = "0x892468")]
	public void Resetear()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x8924DC", Offset = "0x8924DC", VA = "0x8924DC")]
	public void ReiniciarNivel(bool nivelPasado = false)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x892D88", Offset = "0x892D88", VA = "0x892D88")]
	[IteratorStateMachine(typeof(<EsperaInsertCoin>d__131))]
	private IEnumerator EsperaInsertCoin()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x890E6C", Offset = "0x890E6C", VA = "0x890E6C")]
	public void AceptarInsertCoin()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x891998", Offset = "0x891998", VA = "0x891998")]
	private void CalcularMonedasNivelATotalDeMonedas()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x892DFC", Offset = "0x892DFC", VA = "0x892DFC")]
	[IteratorStateMachine(typeof(<EventosReiniciar>d__136))]
	private IEnumerator EventosReiniciar(bool nivelPasado)
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8965C4", Offset = "0x8965C4", VA = "0x8965C4")]
	[IteratorStateMachine(typeof(<ReiniciarCabezaDespuesDeCargarLevel>d__137))]
	private IEnumerator ReiniciarCabezaDespuesDeCargarLevel()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x896660", Offset = "0x896660", VA = "0x896660")]
	[IteratorStateMachine(typeof(<ActivarNegro>d__138))]
	private IEnumerator ActivarNegro()
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x89216C", Offset = "0x89216C", VA = "0x89216C")]
	[IteratorStateMachine(typeof(<DesactivarNegro>d__139))]
	private IEnumerator DesactivarNegro()
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x896710", Offset = "0x896710", VA = "0x896710")]
	public MisionesData PedirInfoMisiones()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x88F784", Offset = "0x88F784", VA = "0x88F784")]
	public void LlenarListaMisiones()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x896784", Offset = "0x896784", VA = "0x896784")]
	public string DameNombreZDI(int zona)
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x896328", Offset = "0x896328", VA = "0x896328")]
	public void SubirRecord(string mundo, int valor)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x8961C4", Offset = "0x8961C4", VA = "0x8961C4")]
	public void SetLogro(LogrosRecords.Logros logro)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x8969BC", Offset = "0x8969BC", VA = "0x8969BC")]
	public void ComprobarLogroPlatino()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x896B08", Offset = "0x896B08", VA = "0x896B08")]
	public void PrepararEstrellasPreviasNivel()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x896C40", Offset = "0x896C40", VA = "0x896C40")]
	public void CalcularFOVnecesario(int tipoFOV)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x896CDC", Offset = "0x896CDC", VA = "0x896CDC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000167")]
public class InfoMisiones : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoMisiones instance;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string path;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string misiones;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x897B0C", Offset = "0x897B0C", VA = "0x897B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x897CE0", Offset = "0x897CE0", VA = "0x897CE0")]
	public InfoMisiones()
	{
	}
}
[Token(Token = "0x2000168")]
public class ManagerCalidad : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	public enum Calidad
	{
		[Token(Token = "0x4000C05")]
		UltraBaja = 1,
		[Token(Token = "0x4000C06")]
		Baja,
		[Token(Token = "0x4000C07")]
		Normal,
		[Token(Token = "0x4000C08")]
		Ultra
	}

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int calidadActualIndex;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Calidad calidad;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x897D64", Offset = "0x897D64", VA = "0x897D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x897E24", Offset = "0x897E24", VA = "0x897E24")]
	private void ponerCalidadSegunIndex(int calidadActualIndex)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x88F6F0", Offset = "0x88F6F0", VA = "0x88F6F0")]
	public void AplicarCalidadGuardada(bool aplicarCambiosLentos = true)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x897FBC", Offset = "0x897FBC", VA = "0x897FBC")]
	public void CambiarCalidad()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x898064", Offset = "0x898064", VA = "0x898064")]
	public ManagerCalidad()
	{
	}
}
[Token(Token = "0x200016A")]
public class ManagerMisiones : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016B")]
	public class CondicionEstrella
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nombre;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string explicacionCorta;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string explicacionLarga;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string conseguido;

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x898568", Offset = "0x898568", VA = "0x898568")]
		public CondicionEstrella(string nombre, string explicacionCorta, string explicacionLarga, string conseguido)
		{
		}
	}

	[Token(Token = "0x200016C")]
	public struct OutResultadoEstrella
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int valorObjetivo;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool condicionSecundaria;
	}

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool noGolpeadoEnRecreativa;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool noGolpeadoEnZDI;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool golpeadoEnRecreativa;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool golpeadoEnZDI;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool nivelZDICompletado;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int enemigosDestruidos;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int enemigosDestruidosEnRecreativa;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int enemigosDestruidosEnZDI;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int monedasRecogidas;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int monedasRecogidasEnRecreativa;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int monedasRecogidasEnZDI;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int monedasAcabadas;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int disparosSinFallar;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int MaximoDisparosSinFallarConseguidos;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int enemigosDestruidosPorBomba;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int enemigosDestruidosPorAvionGrande;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int enemigosDestruidosPorTiempoLento;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int nivelPasadoSinMorirYcompletadoZDIs;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int muertesEnNivel;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noMuertoEnNivel;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int bossDestruidoEnZDI;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int avionesDestruidosEnZDI;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int barcosDestruidosEnZDI;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int bunkersDestruidosEnZDI;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool aterrizadoEnZDI;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool noAterrizadoEnZDI;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool noGolpeadoEnZDI_1;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool golpeadoEnZDI_1;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int enemigosDestruidosEnZDI_1;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int monedasRecogidasEnZDI_1;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int bossDestruidoEnZDI_1;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int avionesDestruidosEnZDI_1;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int barcosDestruidosEnZDI_1;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int bunkersDestruidosEnZDI_1;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool aterrizadoEnZDI_1;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool noAterrizadoEnZDI_1;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool estrella4hecha;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool estrella5hecha;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<CondicionEstrella> listaCondicionesEstrella;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x898078", Offset = "0x898078", VA = "0x898078")]
	private void Start()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x898394", Offset = "0x898394", VA = "0x898394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x89170C", Offset = "0x89170C", VA = "0x89170C")]
	public void ReiniciarVariablesMisiones()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x898444", Offset = "0x898444", VA = "0x898444")]
	public void GuardarContadoresDeLaZDI1()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x898474", Offset = "0x898474", VA = "0x898474")]
	public void GuardarResultadoZDI(int numeroZDI)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x898544", Offset = "0x898544", VA = "0x898544")]
	public void ResetearMisionesZDI()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x898124", Offset = "0x898124", VA = "0x898124")]
	public void LlenarCondiciones()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8985DC", Offset = "0x8985DC", VA = "0x8985DC")]
	public string MisionEnEstrella(int mapa, int mision, int estrella)
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x89305C", Offset = "0x89305C", VA = "0x89305C")]
	public bool ResultadoEstrella(int mision, int estrella, out OutResultadoEstrella res)
	{
		return default(bool);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x8987C0", Offset = "0x8987C0", VA = "0x8987C0")]
	public void HeConsegidoEstrellaDorada(int estrella)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x8988E8", Offset = "0x8988E8", VA = "0x8988E8")]
	public ManagerMisiones()
	{
	}
}
[Token(Token = "0x200016D")]
public class PersistentDataManager
{
	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, string> stringData;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, int> intData;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, float> floatData;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool guardadoPendiente;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool nuevaKeyAgregada;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool guardando;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private static bool infoCargada;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x898970", Offset = "0x898970", VA = "0x898970")]
	public static void SaveData(bool forzarGuardado = false)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x8992F0", Offset = "0x8992F0", VA = "0x8992F0")]
	public static void GuardarArchivoDeBackup()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x899508", Offset = "0x899508", VA = "0x899508")]
	private static bool ComprobarArchivoDeGuardado()
	{
		return default(bool);
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x88E798", Offset = "0x88E798", VA = "0x88E798")]
	public static void LoadData()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x899B68", Offset = "0x899B68", VA = "0x899B68")]
	public static void EnviarMailProblemaDeGuardado(int archivo)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x89A03C", Offset = "0x89A03C", VA = "0x89A03C")]
	public static void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x89A1C0", Offset = "0x89A1C0", VA = "0x89A1C0")]
	public static string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x896840", Offset = "0x896840", VA = "0x896840")]
	public static void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x897E38", Offset = "0x897E38", VA = "0x897E38")]
	public static int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x89A364", Offset = "0x89A364", VA = "0x89A364")]
	public static void SetFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x89A4E0", Offset = "0x89A4E0", VA = "0x89A4E0")]
	public static float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x89A668", Offset = "0x89A668", VA = "0x89A668")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x200016E")]
public static class Encrypt
{
	[Token(Token = "0x6000779")]
	[Address(RVA = "0x89909C", Offset = "0x89909C", VA = "0x89909C")]
	public static string EncryptString(string plainText, string passPhrase)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x899838", Offset = "0x899838", VA = "0x899838")]
	public static string DecryptString(string cipherText, string passPhrase)
	{
		return null;
	}
}
[Token(Token = "0x200016F")]
public class ProgresionManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000170")]
	public struct Estrellas
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool estrella1;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool estrella2;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool estrella3;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool estrella4;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool estrella5;
	}

	[Serializable]
	[Token(Token = "0x2000171")]
	public struct EstrellasDoradas
	{
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool estrella1dorada;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool estrella2dorada;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool estrella3dorada;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool estrella4dorada;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool estrella5dorada;
	}

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int monedas;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int monedasBonus;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] puntos;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] armas;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int reparadorDeDaños;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int BonusDeMonedas;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Estrellas[] estrellas;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public EstrellasDoradas[] estrellasDoradas;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int maximoNivelPasado;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int estrellasTotales;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int estrellasTotalesDoradas;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int monedasEnNivel;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int puntuacionEnNivel;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int enemigosBasicosMuertosEnNivel;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int enemigosHeinkelMuertosEnNivel;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int enemigosHeinkelTorretaMuertosEnNivel;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int enemigosBunkerMuertosEnNivel;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int enemigosHelicopteroMuertosEnNivel;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int enemigosBossMuertosEnNivel;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int puntosExtraPorTiempoSinDanyo;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float segundosJugadosSinRecibirDanyo;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int tutorialHecho;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x89A9B8", Offset = "0x89A9B8", VA = "0x89A9B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x89AA68", Offset = "0x89AA68", VA = "0x89AA68")]
	private void Start()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x89B418", Offset = "0x89B418", VA = "0x89B418")]
	public void DesbloquearNiveles()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x8916F8", Offset = "0x8916F8", VA = "0x8916F8")]
	public void ReiniciarProgresoGameplay()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x89B4F0", Offset = "0x89B4F0", VA = "0x89B4F0")]
	public void ReiniciarProgreso()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x89BB28", Offset = "0x89BB28", VA = "0x89BB28")]
	public void ReiniciarProgresoMisiones()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x89AA6C", Offset = "0x89AA6C", VA = "0x89AA6C")]
	public void CargarValores()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x892E84", Offset = "0x892E84", VA = "0x892E84")]
	public void GuardarEstrella1Mision(int mision)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x895A64", Offset = "0x895A64", VA = "0x895A64")]
	public void GuardarEstrella2Mision(int mision)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x895B50", Offset = "0x895B50", VA = "0x895B50")]
	public void GuardarEstrella3Mision(int mision)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x895C3C", Offset = "0x895C3C", VA = "0x895C3C")]
	public void GuardarEstrella4Mision(int mision)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x895D28", Offset = "0x895D28", VA = "0x895D28")]
	public void GuardarEstrella5Mision(int mision)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x892F70", Offset = "0x892F70", VA = "0x892F70")]
	public void GuardarEstrella1DoradaMision(int mision)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x895E14", Offset = "0x895E14", VA = "0x895E14")]
	public void GuardarEstrella2DoradaMision(int mision)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x895F00", Offset = "0x895F00", VA = "0x895F00")]
	public void GuardarEstrella3DoradaMision(int mision)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x895FEC", Offset = "0x895FEC", VA = "0x895FEC")]
	public void GuardarEstrella4DoradaMision(int mision)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x8960D8", Offset = "0x8960D8", VA = "0x8960D8")]
	public void GuardarEstrella5DoradaMision(int mision)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x89C0E4", Offset = "0x89C0E4", VA = "0x89C0E4")]
	public void SetNuevoRecord(int nivel, int record)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x89C188", Offset = "0x89C188", VA = "0x89C188")]
	public int GetNuevoRecord(int nivel)
	{
		return default(int);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x89BF44", Offset = "0x89BF44", VA = "0x89BF44")]
	public void CalcularEstrellasTotales()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x89C228", Offset = "0x89C228", VA = "0x89C228")]
	public ProgresionManager()
	{
	}
}
[Token(Token = "0x2000172")]
public class ManoLaser : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	[CompilerGenerated]
	private sealed class <CorutinaFocusUI>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManoLaser <>4__this;

		[Token(Token = "0x170000ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x89D8B4", Offset = "0x89D8B4", VA = "0x89D8B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x89D8FC", Offset = "0x89D8FC", VA = "0x89D8FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x89D6AC", Offset = "0x89D6AC", VA = "0x89D6AC")]
		[DebuggerHidden]
		public <CorutinaFocusUI>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x89D780", Offset = "0x89D780", VA = "0x89D780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x89D784", Offset = "0x89D784", VA = "0x89D784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x89D8BC", Offset = "0x89D8BC", VA = "0x89D8BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000174")]
	[CompilerGenerated]
	private sealed class <CorrutinaAccion>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonOvaloGenerico boton;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ManoLaser <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x89D9C0", Offset = "0x89D9C0", VA = "0x89D9C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x89DA08", Offset = "0x89DA08", VA = "0x89DA08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x89D6D4", Offset = "0x89D6D4", VA = "0x89D6D4")]
		[DebuggerHidden]
		public <CorrutinaAccion>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x89D904", Offset = "0x89D904", VA = "0x89D904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x89D908", Offset = "0x89D908", VA = "0x89D908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x89D9C8", Offset = "0x89D9C8", VA = "0x89D9C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int layerMaskUI;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform laser;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool botonApretado;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine focusCorr;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distanciaRayo;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool inGame;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool noApagar;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool clickEnUIUpPendiente;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 auxEscalaLaser;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Ray rayo;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform pantalla;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera camaraAbajo;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool heClicado;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool distanciaTocando;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float trigger;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool triggerSoltado;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private BotonOvaloGenerico boton;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BotonOvaloGenerico ultimoBoton;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool manoDerecha;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public LayerMask mask;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private LineRenderer m_line;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float tiempoEsperaCuandoSePulsaBoton;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool antiguoEnabledCascoQuitado;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaitForSecondsRealtime esperaRayoIA;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string tagBoton;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BotonOvaloGenerico botonSeleccionado;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Coroutine esperaBoton;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float tiempoEspera;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x89C230", Offset = "0x89C230", VA = "0x89C230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x89C3A4", Offset = "0x89C3A4", VA = "0x89C3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x89C638", Offset = "0x89C638", VA = "0x89C638")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x89C6B0", Offset = "0x89C6B0", VA = "0x89C6B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x89D5A8", Offset = "0x89D5A8", VA = "0x89D5A8")]
	[IteratorStateMachine(typeof(<CorutinaFocusUI>d__35))]
	private IEnumerator CorutinaFocusUI()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x89D61C", Offset = "0x89D61C", VA = "0x89D61C")]
	[IteratorStateMachine(typeof(<CorrutinaAccion>d__36))]
	private IEnumerator CorrutinaAccion(BotonOvaloGenerico boton)
	{
		return null;
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x89D6FC", Offset = "0x89D6FC", VA = "0x89D6FC")]
	public ManoLaser()
	{
	}
}
[Token(Token = "0x2000175")]
public class AnimacionRespirar : MonoBehaviour
{
	[Token(Token = "0x2000176")]
	[CompilerGenerated]
	private sealed class <CorutinaAnimacion>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimacionRespirar <>4__this;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <escalaInicial>5__3;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <escalaFinal>5__4;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x89DD94", Offset = "0x89DD94", VA = "0x89DD94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x89DDDC", Offset = "0x89DDDC", VA = "0x89DDDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x89DBD8", Offset = "0x89DBD8", VA = "0x89DBD8")]
		[DebuggerHidden]
		public <CorutinaAnimacion>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x89DC08", Offset = "0x89DC08", VA = "0x89DC08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x89DC0C", Offset = "0x89DC0C", VA = "0x89DC0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x89DD9C", Offset = "0x89DD9C", VA = "0x89DD9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image estrella;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine animacion;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve curva;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x89DA10", Offset = "0x89DA10", VA = "0x89DA10")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x89DA68", Offset = "0x89DA68", VA = "0x89DA68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x89DB64", Offset = "0x89DB64", VA = "0x89DB64")]
	[IteratorStateMachine(typeof(<CorutinaAnimacion>d__5))]
	private IEnumerator CorutinaAnimacion()
	{
		return null;
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x89DC00", Offset = "0x89DC00", VA = "0x89DC00")]
	public AnimacionRespirar()
	{
	}
}
[Token(Token = "0x2000177")]
public abstract class BotonBase : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enFocus;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool bloqueado;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool haciendoAnimacionClick;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent accionBoton;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BotonBase botonArriba;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent accionBotonArriba;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BotonBase botonAbajo;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent accionBotonAbajo;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BotonBase botonDerecha;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent accionBotonDerecha;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BotonBase botonIzquierda;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent accionBotonIzquierda;

	[Token(Token = "0x60007AD")]
	public abstract void SetFocus(bool enFocus, bool deInicio = false);

	[Token(Token = "0x60007AE")]
	public abstract void EjecutarAccion();

	[Token(Token = "0x60007AF")]
	public abstract void PunteroEncima();

	[Token(Token = "0x60007B0")]
	public abstract void PunteroOut();

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x89DDE4", Offset = "0x89DDE4", VA = "0x89DDE4")]
	public BotonBase DameSiguienteBoton(ControladorMenuConBotones.Direcciones direccionSiguiente)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x89DF94", Offset = "0x89DF94", VA = "0x89DF94")]
	protected BotonBase()
	{
	}
}
[Token(Token = "0x2000178")]
public class BotonOvaloGenerico : BotonBase
{
	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <DoubleCheckFocus>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x8A2938", Offset = "0x8A2938", VA = "0x8A2938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x8A2980", Offset = "0x8A2980", VA = "0x8A2980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x8A1678", Offset = "0x8A1678", VA = "0x8A1678")]
		[DebuggerHidden]
		public <DoubleCheckFocus>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x8A2894", Offset = "0x8A2894", VA = "0x8A2894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x8A2898", Offset = "0x8A2898", VA = "0x8A2898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x8A2940", Offset = "0x8A2940", VA = "0x8A2940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017A")]
	[CompilerGenerated]
	private sealed class <AnimacionClick>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonOvaloGenerico <>4__this;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <escalaInicial>5__3;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <escalaFinal>5__4;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <escalaInicial2>5__5;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <escalaFinal2>5__6;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <escalaInicial3>5__7;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <escalaFinal3>5__8;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x8A2F38", Offset = "0x8A2F38", VA = "0x8A2F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0x8A2F80", Offset = "0x8A2F80", VA = "0x8A2F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x8A1714", Offset = "0x8A1714", VA = "0x8A1714")]
		[DebuggerHidden]
		public <AnimacionClick>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x8A2988", Offset = "0x8A2988", VA = "0x8A2988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x8A298C", Offset = "0x8A298C", VA = "0x8A298C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x8A2F40", Offset = "0x8A2F40", VA = "0x8A2F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private sealed class <CorutinaAnimacion>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotonOvaloGenerico <>4__this;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <escalaInicial>5__3;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <escalaFinal>5__4;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0x8A310C", Offset = "0x8A310C", VA = "0x8A310C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0x8A3154", Offset = "0x8A3154", VA = "0x8A3154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x8A27AC", Offset = "0x8A27AC", VA = "0x8A27AC")]
		[DebuggerHidden]
		public <CorutinaAnimacion>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x8A2F88", Offset = "0x8A2F88", VA = "0x8A2F88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x8A2F8C", Offset = "0x8A2F8C", VA = "0x8A2F8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x8A3114", Offset = "0x8A3114", VA = "0x8A3114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject conFocus;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public GameObject sinFocus;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public bool sinSonido;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform extraParaEscalarConClick;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform extra2ParaEscalarConClick;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AnimationCurve acClick;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool controlAntiMonkey;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float UltimaVezQueHaSidoPulsadoElBoton;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool mouseOver;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool boton_customizeControl;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool animarEnFocus;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Si es null hará getComponent<Animator> en este objeto")]
	public Animator animEnFocus;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool esNivel;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool esMenuPrincipal;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int nivel;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool nivelBloqueado;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool mejoraTaller;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int numeroEstrellas;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	public GameObject enBloqueo;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject enBloqueoFocus;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image[] estrellasSinFoco;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image[] estrellasConFoco;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ControladorMenu controladorMenu;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ControladorMejorasAvionTaller c_mejoraTaller;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool noReproducirSonido;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	[HideInInspector]
	public bool cancelarSonidos;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool forzarActualizacionTV;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool tieneEstrellasNivel;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool esPuerta;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool ignoreScaleOne;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool textoArcade;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	private bool estoySeleccionado;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Color estrellasColorVacio;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine animacion;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private AnimationCurve curva;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x89DF9C", Offset = "0x89DF9C", VA = "0x89DF9C")]
	public void BloquearBoton(bool active)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x89DFF8", Offset = "0x89DFF8", VA = "0x89DFF8", Slot = "4")]
	public override void SetFocus(bool enFocus, bool deInicio = false)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x8A1618", Offset = "0x8A1618", VA = "0x8A1618")]
	[IteratorStateMachine(typeof(<DoubleCheckFocus>d__32))]
	private IEnumerator DoubleCheckFocus()
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x8A16A0", Offset = "0x8A16A0", VA = "0x8A16A0")]
	[IteratorStateMachine(typeof(<AnimacionClick>d__33))]
	private IEnumerator AnimacionClick()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x8A173C", Offset = "0x8A173C", VA = "0x8A173C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x8A17CC", Offset = "0x8A17CC", VA = "0x8A17CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x8A2524", Offset = "0x8A2524", VA = "0x8A2524", Slot = "5")]
	public override void EjecutarAccion()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x8A2738", Offset = "0x8A2738", VA = "0x8A2738", Slot = "6")]
	public override void PunteroEncima()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x8A2778", Offset = "0x8A2778", VA = "0x8A2778", Slot = "7")]
	public override void PunteroOut()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x89E7BC", Offset = "0x89E7BC", VA = "0x89E7BC")]
	[IteratorStateMachine(typeof(<CorutinaAnimacion>d__45))]
	private IEnumerator CorutinaAnimacion()
	{
		return null;
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x8A27D4", Offset = "0x8A27D4", VA = "0x8A27D4")]
	public void TutorialCompletado()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x8A2878", Offset = "0x8A2878", VA = "0x8A2878")]
	public BotonOvaloGenerico()
	{
	}
}
[Token(Token = "0x200017C")]
public class ControladorMejorasTaller : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200017D")]
	public struct Mejora
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshProUGUI nivel;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI mejora;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI precio;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI max;
	}

	[Token(Token = "0x200017E")]
	[CompilerGenerated]
	private sealed class <ApagarIndicadorNivel>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMejorasTaller <>4__this;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int nivel;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x8A69B0", Offset = "0x8A69B0", VA = "0x8A69B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x8A69F8", Offset = "0x8A69F8", VA = "0x8A69F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x8A335C", Offset = "0x8A335C", VA = "0x8A335C")]
		[DebuggerHidden]
		public <ApagarIndicadorNivel>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x8A686C", Offset = "0x8A686C", VA = "0x8A686C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x8A6870", Offset = "0x8A6870", VA = "0x8A6870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x8A69B8", Offset = "0x8A69B8", VA = "0x8A69B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI dinero;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mejora[] mejoras;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControladorMejorasAvionTaller c_mejorasAvion;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI textoDebugNivel;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int debugNivel;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine corDebugMejora;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tutorial;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject panelMensaje;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PantallaBotones pantallaBotones;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x8A315C", Offset = "0x8A315C", VA = "0x8A315C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x8A32D8", Offset = "0x8A32D8", VA = "0x8A32D8")]
	[IteratorStateMachine(typeof(<ApagarIndicadorNivel>d__9))]
	private IEnumerator ApagarIndicadorNivel(int nivel)
	{
		return null;
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x8A3384", Offset = "0x8A3384", VA = "0x8A3384")]
	private void ActualizarDebugMejoras()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x8A5C00", Offset = "0x8A5C00", VA = "0x8A5C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x8A5EDC", Offset = "0x8A5EDC", VA = "0x8A5EDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x8A5F30", Offset = "0x8A5F30", VA = "0x8A5F30")]
	private void PonerPrecioEnEste(int numeroDeMejora, int nivelActual)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x8A5D20", Offset = "0x8A5D20", VA = "0x8A5D20")]
	private void PonerNivelYPrecioEnTodos()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x8A64A4", Offset = "0x8A64A4", VA = "0x8A64A4")]
	public void ComprarMejoraBoton(int mejora)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x8A3518", Offset = "0x8A3518", VA = "0x8A3518")]
	public void ComprarMejora(int mejora, int nivelMejoraDebug = -1)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x8A644C", Offset = "0x8A644C", VA = "0x8A644C")]
	private int PrecioPorMejora(int mejora, int nivel)
	{
		return default(int);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x8A65C8", Offset = "0x8A65C8", VA = "0x8A65C8")]
	private int CalcularExponenteSegunNivel(int nivelMejora, int indexMejora)
	{
		return default(int);
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x8A6568", Offset = "0x8A6568", VA = "0x8A6568")]
	public void AbrirPanelMensajeTaller()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x8A67E4", Offset = "0x8A67E4", VA = "0x8A67E4")]
	public void CerrarPanelMensajeTaller()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x8A6864", Offset = "0x8A6864", VA = "0x8A6864")]
	public ControladorMejorasTaller()
	{
	}
}
[Token(Token = "0x200017F")]
public class ControladorMenu : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	public enum PosicionMenu
	{
		[Token(Token = "0x4000D6A")]
		Inicio,
		[Token(Token = "0x4000D6B")]
		Niveles,
		[Token(Token = "0x4000D6C")]
		Taller,
		[Token(Token = "0x4000D6D")]
		opciones,
		[Token(Token = "0x4000D6E")]
		Controles,
		[Token(Token = "0x4000D6F")]
		Dialogos,
		[Token(Token = "0x4000D70")]
		LeaderBoard
	}

	[Serializable]
	[Token(Token = "0x2000181")]
	public struct mision
	{
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image estrella;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI titulo;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI contenido;
	}

	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private sealed class <DesbloquearNiveles>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600082A")]
			[Address(RVA = "0x755814", Offset = "0x755814", VA = "0x755814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0x75585C", Offset = "0x75585C", VA = "0x75585C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x755714", Offset = "0x755714", VA = "0x755714")]
		[DebuggerHidden]
		public <DesbloquearNiveles>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x75573C", Offset = "0x75573C", VA = "0x75573C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x755740", Offset = "0x755740", VA = "0x755740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x75581C", Offset = "0x75581C", VA = "0x75581C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000183")]
	[CompilerGenerated]
	private sealed class <DesactivarPantallaNegra>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <velocidad>5__2;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x755A14", Offset = "0x755A14", VA = "0x755A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0x755A5C", Offset = "0x755A5C", VA = "0x755A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x755864", Offset = "0x755864", VA = "0x755864")]
		[DebuggerHidden]
		public <DesactivarPantallaNegra>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x75588C", Offset = "0x75588C", VA = "0x75588C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x755890", Offset = "0x755890", VA = "0x755890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x755A1C", Offset = "0x755A1C", VA = "0x755A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <NoLeerCOntrolesAFalse>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x755B50", Offset = "0x755B50", VA = "0x755B50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x755B98", Offset = "0x755B98", VA = "0x755B98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x755A64", Offset = "0x755A64", VA = "0x755A64")]
		[DebuggerHidden]
		public <NoLeerCOntrolesAFalse>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x755A8C", Offset = "0x755A8C", VA = "0x755A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x755A90", Offset = "0x755A90", VA = "0x755A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x755B58", Offset = "0x755B58", VA = "0x755B58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000185")]
	[CompilerGenerated]
	private sealed class <ContinuarConLaCargaDelNivel>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x755D38", Offset = "0x755D38", VA = "0x755D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x755D80", Offset = "0x755D80", VA = "0x755D80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x755BA0", Offset = "0x755BA0", VA = "0x755BA0")]
		[DebuggerHidden]
		public <ContinuarConLaCargaDelNivel>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x755BC8", Offset = "0x755BC8", VA = "0x755BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x755BCC", Offset = "0x755BCC", VA = "0x755BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x755D40", Offset = "0x755D40", VA = "0x755D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000186")]
	[CompilerGenerated]
	private sealed class <DelayedAbrirMisiones>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool intro;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x756070", Offset = "0x756070", VA = "0x756070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x7560B8", Offset = "0x7560B8", VA = "0x7560B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x755D88", Offset = "0x755D88", VA = "0x755D88")]
		[DebuggerHidden]
		public <DelayedAbrirMisiones>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x755DB0", Offset = "0x755DB0", VA = "0x755DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x755DB4", Offset = "0x755DB4", VA = "0x755DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x756078", Offset = "0x756078", VA = "0x756078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000187")]
	[CompilerGenerated]
	private sealed class <EsperarALasManos>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <tiempo>5__2;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x756344", Offset = "0x756344", VA = "0x756344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x75638C", Offset = "0x75638C", VA = "0x75638C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x7560C0", Offset = "0x7560C0", VA = "0x7560C0")]
		[DebuggerHidden]
		public <EsperarALasManos>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x7560E8", Offset = "0x7560E8", VA = "0x7560E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x7560EC", Offset = "0x7560EC", VA = "0x7560EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x75634C", Offset = "0x75634C", VA = "0x75634C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000188")]
	[CompilerGenerated]
	private sealed class <EnsenarPanelJugarSentado>d__135 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x756578", Offset = "0x756578", VA = "0x756578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x7565C0", Offset = "0x7565C0", VA = "0x7565C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x756394", Offset = "0x756394", VA = "0x756394")]
		[DebuggerHidden]
		public <EnsenarPanelJugarSentado>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x7563BC", Offset = "0x7563BC", VA = "0x7563BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x7563C0", Offset = "0x7563C0", VA = "0x7563C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x756580", Offset = "0x756580", VA = "0x756580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[CompilerGenerated]
	private sealed class <AnimacionChecksPantallaPosNivel>d__153 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayInicial;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float secsEntreChecks;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayFinal;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x75736C", Offset = "0x75736C", VA = "0x75736C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x7573B4", Offset = "0x7573B4", VA = "0x7573B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x7565C8", Offset = "0x7565C8", VA = "0x7565C8")]
		[DebuggerHidden]
		public <AnimacionChecksPantallaPosNivel>d__153(int <>1__state)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x7565F0", Offset = "0x7565F0", VA = "0x7565F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x7565F4", Offset = "0x7565F4", VA = "0x7565F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x757374", Offset = "0x757374", VA = "0x757374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018A")]
	[CompilerGenerated]
	private sealed class <AnimacionChecksPantallaPosNivelVelocidad>d__185 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControladorMenu <>4__this;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayInicial;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayFinal;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x757C1C", Offset = "0x757C1C", VA = "0x757C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085C")]
			[Address(RVA = "0x757C64", Offset = "0x757C64", VA = "0x757C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x7573BC", Offset = "0x7573BC", VA = "0x7573BC")]
		[DebuggerHidden]
		public <AnimacionChecksPantallaPosNivelVelocidad>d__185(int <>1__state)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x7573E4", Offset = "0x7573E4", VA = "0x7573E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x7573E8", Offset = "0x7573E8", VA = "0x7573E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x757C24", Offset = "0x757C24", VA = "0x757C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PosicionMenu posMenu;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PosicionMenu posMenuAnterior;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] panelesMenu;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject panel3EstrellasCompletas;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BotonOvaloGenerico botonMisionAceptar;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BotonOvaloGenerico botonMisionCancelar;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BotonOvaloGenerico botonNivelIntro;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform player;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform posPlayer;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource audioS;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] sonidosBotones;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControladorMejorasTaller cMejorasTaller;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera camaraMenu;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ControladorMenuOpciones opciones;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool inGame;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int numeroNivelSeleccionado;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool nivelPasado;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool esMainMenu;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEngine.PostProcessing.PostProcessingProfile postPo;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ColorGradingModel.Settings original;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ControladorIndicadores controladorIndicadores;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public bool noReproducirMasAudio;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public int nivelPreSeleccionado;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float alphaFondo;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool noLeerControles;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject botonRanking;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject botonRanking2;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject botonAceptarQueTengoQueDesplazarSiOcultoRankings;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] objetosAApagarSiEsChina;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Coroutine corNoLeerControles;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int ticksSinHacerNada;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool playerPosicionado;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public ControladorMejorasAvionTaller c_mejoraTaller;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Header("Misiones")]
	public GameObject panelMision;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public TextMeshProUGUI numeroNivel;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public mision[] misiones;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject panelDemoEarly;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject grupoDemo;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject grupoEarly;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public BotonBase botonInicialDemo;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public BotonBase botonInicialEarly;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool volverAtrasDemoEarly;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject demoComprar;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public BotonBase botonComprarDemo;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int nivelAntesDeDialogo;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private BotonBase anteriorBotonAlEntrarEnDemoEarly;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public bool enPantallaSeleccionZDI;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Sprite spriteEstrellaDorada;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Sprite spriteEstrellaNormal;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool dialogoEnseñado;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
	private bool cargandoNivel;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Header("InfoTotalNivel")]
	public GameObject panelInfo;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public TextMeshProUGUI text_nivel;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public TextMeshProUGUI text_puntuacion;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public TextMeshProUGUI text_record;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public TextMeshProUGUI text_total;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public TextMeshProUGUI text_kills;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public TextMeshProUGUI text_bonus;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public TextMeshProUGUI text_coins;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public TextMeshProUGUI text_mision1;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public TextMeshProUGUI text_mision2;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public TextMeshProUGUI text_mision3;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public TextMeshProUGUI text_mision4;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public TextMeshProUGUI text_mision5;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public TextMeshProUGUI subtext_mision1;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public TextMeshProUGUI subtext_mision2;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TextMeshProUGUI subtext_mision3;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public TextMeshProUGUI subtext_mision4;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public TextMeshProUGUI subtext_mision5;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public Image[] estrellasImages;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Image[] estrellasImagesPos;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject[] estrellasFallos;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject[] estrellasChecks;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public BotonOvaloGenerico botonSiguiente;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public BotonOvaloGenerico botonRecords;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[Header("Panel de velocidad PosNivel")]
	private float posicionX;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private float posicionXinicial;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject base1;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject base2;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject[] objetosDerecha;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public GameObject[] objetosIzquierda;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool venimosDeVelocidad;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public ControladorFondo controladorFondo;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[HideInInspector]
	public int puntuacionDefinitiva;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public PantallaBotones pantallaBotonesNiveles;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[HideInInspector]
	public bool requerimosNuevoBoton;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public GameObject panelSeleccionInput;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public GameObject panelSeleccionInputVR;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public GameObject panelJuegoVR;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public GameObject panelSeleccionInputOpciones;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public GameObject panelSeleccionInputVROpciones;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public GameObject panelJugarSentado;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private bool reiniciandoOSaliendo;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public GameObject tutorial1;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public GameObject tutorial2;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public GameObject tutorial3;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public GameObject botonTallerPosNivel;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public int tutorialIndexActual;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	public bool permitirTutorial;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public ControladorMenuConBotones m_Controlador;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public BotonBase botonTutorial1;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public BotonBase botonTutorial2;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public BotonBase botonTutorial3;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public BotonBase botonTutorial0;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public TextMeshProUGUI[] textosMisionesTVmenu;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public GameObject[] checksTVmenu;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public GameObject[] fallosTVmenu;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public GameObject pantallaPrincipalPaneles;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public ControladorTablaLeaderboards pantallaRanking;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private bool pantallaLogrosDespuesDeNivel;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	private int nivelAntesDePantallaRecord;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private int nivelPreseleccionadoAntesDePantallaRecord;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private BotonBase botonRecord;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private PosicionMenu posicionAntesDeLeaderboard;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public ControladorTablaLeaderboards controladorLeaderboard;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	[Header("Panel de 3 estrellas")]
	public GameObject misionZDI;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public TextMeshProUGUI textZDI;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public GameObject checkZDI;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public GameObject falloZDI;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public TextMeshProUGUI tituloPanel3Estrellas;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public bool yaHaPreseleccionado;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public TextMeshProUGUI textoEstrellasTotalesNormales;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public GameObject holderEstrellasTotalesDoradas;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public TextMeshProUGUI textoEstrellasTotalesDoradas;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	[Header("Parametros mision/estrella velocidad")]
	public Image estrellaVelocidad;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public TextMeshProUGUI textoVelocidad;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	[Header("Rankings globales")]
	public BotonOvaloGenerico botonRankingNiveles;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public GameObject panelRankingsGlobales;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public GameObject panelBotonesRankingsGlobales;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public ControladorTablaLeaderboards listaRankingsGlobales;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public BotonOvaloGenerico[] botonesRankingsGlobales;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public TextMeshProUGUI tituloRankings;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	[HideInInspector]
	public int nivelRankingAlQueVolver;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public GameObject botonNoVR;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public GameObject botonNoVROpciones;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	[Header("Parametros juego NO VR")]
	public Image cascoVR;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Sprite cascoVRplaystation;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	[HideInInspector]
	public float fovNoVR;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
	[HideInInspector]
	public Vector3 posNoVR;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	[HideInInspector]
	public Vector3 rotNoVR;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x8A6A00", Offset = "0x8A6A00", VA = "0x8A6A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x8A6B10", Offset = "0x8A6B10", VA = "0x8A6B10")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x8A9EDC", Offset = "0x8A9EDC", VA = "0x8A9EDC")]
	[IteratorStateMachine(typeof(<DesbloquearNiveles>d__32))]
	private IEnumerator DesbloquearNiveles()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x8A9CC0", Offset = "0x8A9CC0", VA = "0x8A9CC0")]
	[IteratorStateMachine(typeof(<DesactivarPantallaNegra>d__33))]
	private IEnumerator DesactivarPantallaNegra()
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x8A9F3C", Offset = "0x8A9F3C", VA = "0x8A9F3C")]
	public bool GetNoLeerControles()
	{
		return default(bool);
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x8A9F44", Offset = "0x8A9F44", VA = "0x8A9F44")]
	public void SetNoleerControles(bool accion, float tiempo = 1f)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x8A9FA4", Offset = "0x8A9FA4", VA = "0x8A9FA4")]
	[IteratorStateMachine(typeof(<NoLeerCOntrolesAFalse>d__37))]
	private IEnumerator NoLeerCOntrolesAFalse(float tiempo = 1f)
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x8AA028", Offset = "0x8AA028", VA = "0x8AA028")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x8AA084", Offset = "0x8AA084", VA = "0x8AA084")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x8AA414", Offset = "0x8AA414", VA = "0x8AA414")]
	private void ApagarPaneles()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x8AA478", Offset = "0x8AA478", VA = "0x8AA478")]
	public void EnseñarIntro()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x8A9CB8", Offset = "0x8A9CB8", VA = "0x8A9CB8")]
	public void EnseñarFinal()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x8A706C", Offset = "0x8A706C", VA = "0x8A706C")]
	public void MoverseA(int posicion)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x8AA748", Offset = "0x8AA748", VA = "0x8AA748")]
	public void VolverAtras()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x8AAB8C", Offset = "0x8AAB8C", VA = "0x8AAB8C")]
	public void CerrarDemoEarly()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x8AB1D4", Offset = "0x8AB1D4", VA = "0x8AB1D4")]
	public void ComprarJuego()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x8AB260", Offset = "0x8AB260", VA = "0x8AB260")]
	public void ComprarJuegoSteamOculus(int index)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x8AB2D8", Offset = "0x8AB2D8", VA = "0x8AB2D8")]
	public void AbrirPanelMisiones(int nivel)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x8AB470", Offset = "0x8AB470", VA = "0x8AB470")]
	public bool Comprobar3PrimerasEstrellas(int nivl)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x8AB524", Offset = "0x8AB524", VA = "0x8AB524")]
	public void ActivarPanel3PrimerasEstrellas(bool activar)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x8ADFE8", Offset = "0x8ADFE8", VA = "0x8ADFE8")]
	public void QueQuiereJugar(int index)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x8AB64C", Offset = "0x8AB64C", VA = "0x8AB64C")]
	private void RellenarMisiones()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x8AE040", Offset = "0x8AE040", VA = "0x8AE040")]
	[IteratorStateMachine(typeof(<ContinuarConLaCargaDelNivel>d__73))]
	public IEnumerator ContinuarConLaCargaDelNivel()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x8AE0B4", Offset = "0x8AE0B4", VA = "0x8AE0B4")]
	public void IniciarNivel()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x8AAC08", Offset = "0x8AAC08", VA = "0x8AAC08")]
	public void CerrarPanelMisiones(bool cancelarPreSeleccion = false)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x8AA480", Offset = "0x8AA480", VA = "0x8AA480")]
	public void AbrirPanelDialogo(Dialogos.Dialogo dialogo)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x8AE16C", Offset = "0x8AE16C", VA = "0x8AE16C")]
	public void CerrarPanelDialogo(bool empezar)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x8AE194", Offset = "0x8AE194", VA = "0x8AE194")]
	[IteratorStateMachine(typeof(<DelayedAbrirMisiones>d__80))]
	public IEnumerator DelayedAbrirMisiones(bool intro)
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x8AE21C", Offset = "0x8AE21C", VA = "0x8AE21C")]
	public void IniciarNivelDirectamente()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x8AE28C", Offset = "0x8AE28C", VA = "0x8AE28C")]
	public void AdaptarPanelSegunNivel()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x8A7608", Offset = "0x8A7608", VA = "0x8A7608")]
	private void CargarValoresInfo()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x8AAC98", Offset = "0x8AAC98", VA = "0x8AAC98")]
	public void CerrarPanelInfo()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x8AAD90", Offset = "0x8AAD90", VA = "0x8AAD90")]
	public void CerrarPanel3Estrellas()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x8AE75C", Offset = "0x8AE75C", VA = "0x8AE75C")]
	public void AccionSeleccionarControlNoVR(bool esOpciones)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x8AE8D8", Offset = "0x8AE8D8", VA = "0x8AE8D8")]
	public void AccionSeleccionarControlVR(bool esOpciones)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x8AAFE8", Offset = "0x8AAFE8", VA = "0x8AAFE8")]
	public void AccionSeleccionarVolverAlControl(bool esOpciones)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x8AEA58", Offset = "0x8AEA58", VA = "0x8AEA58")]
	public void AccionSeleccionarManoVirtual(bool esOpciones)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x8AEBBC", Offset = "0x8AEBBC", VA = "0x8AEBBC")]
	public void AccionSeleccionarJoystick(bool esOpciones)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x8AA5D0", Offset = "0x8AA5D0", VA = "0x8AA5D0")]
	public void AccionVolverInicioSeleccionControl()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x8AECE0", Offset = "0x8AECE0", VA = "0x8AECE0")]
	[IteratorStateMachine(typeof(<EsperarALasManos>d__133))]
	private IEnumerator EsperarALasManos()
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x8AED40", Offset = "0x8AED40", VA = "0x8AED40")]
	public void EnsenarJugarSentado()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x8AEB48", Offset = "0x8AEB48", VA = "0x8AEB48")]
	[IteratorStateMachine(typeof(<EnsenarPanelJugarSentado>d__135))]
	public IEnumerator EnsenarPanelJugarSentado()
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x8AED60", Offset = "0x8AED60", VA = "0x8AED60")]
	public void Continue()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x8AEE08", Offset = "0x8AEE08", VA = "0x8AEE08")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x8AEF18", Offset = "0x8AEF18", VA = "0x8AEF18")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x8AF030", Offset = "0x8AF030", VA = "0x8AF030")]
	public void ActivarTutorial(int indexTutorial)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x8AF134", Offset = "0x8AF134", VA = "0x8AF134")]
	public void ActivarBotonTutorial()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x8AE63C", Offset = "0x8AE63C", VA = "0x8AE63C")]
	[IteratorStateMachine(typeof(<AnimacionChecksPantallaPosNivel>d__153))]
	public IEnumerator AnimacionChecksPantallaPosNivel(float delayInicial, float secsEntreChecks, float delayFinal)
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x8AF1A0", Offset = "0x8AF1A0", VA = "0x8AF1A0")]
	public void LlenarDescripcionesExtra(int numMision)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x8B0108", Offset = "0x8B0108", VA = "0x8B0108")]
	public void ActualizaTextoDeMision(int index, string descripcion, int varCantidad)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x89E830", Offset = "0x89E830", VA = "0x89E830")]
	public void ActualizarMisionesEnMenu(int numNivel, bool soloPaneles)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x8B041C", Offset = "0x8B041C", VA = "0x8B041C")]
	public void ActualizarMisionesMenuVelocidad()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x8A9B38", Offset = "0x8A9B38", VA = "0x8A9B38")]
	public void EnsenarPantallaLogros()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x8B0834", Offset = "0x8B0834", VA = "0x8B0834")]
	public void EnsenarPantallaLogrosDesdeMisiones()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x8AB0F0", Offset = "0x8AB0F0", VA = "0x8AB0F0")]
	public void CerrarPantallaRecords()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x8AB15C", Offset = "0x8AB15C", VA = "0x8AB15C")]
	public void CerrarPantallaRecordsAMisiones()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x8AD558", Offset = "0x8AD558", VA = "0x8AD558")]
	public void ActualizarBotonZDI(int numZDI)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x8AE6D4", Offset = "0x8AE6D4", VA = "0x8AE6D4")]
	[IteratorStateMachine(typeof(<AnimacionChecksPantallaPosNivelVelocidad>d__185))]
	public IEnumerator AnimacionChecksPantallaPosNivelVelocidad(float delayInicial, float delayFinal)
	{
		return null;
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x8B097C", Offset = "0x8B097C", VA = "0x8B097C")]
	public void AbrirRankingsGlobales()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x8AADC4", Offset = "0x8AADC4", VA = "0x8AADC4")]
	public void CerrarRankingsGlobales()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x8B0B48", Offset = "0x8B0B48", VA = "0x8B0B48")]
	public void EnsenarListaRankingsGlobales(int nivel)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x8AAE78", Offset = "0x8AAE78", VA = "0x8AAE78")]
	public void CerrarListaRankingsGlobales()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x8A9D34", Offset = "0x8A9D34", VA = "0x8A9D34")]
	public void DesactivarBotonVRQuest()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x8B0CD0", Offset = "0x8B0CD0", VA = "0x8B0CD0")]
	public void SetupControlesInicio(bool decidirVR)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x8B0DD0", Offset = "0x8B0DD0", VA = "0x8B0DD0")]
	public void CerrarJuego()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x8B0DD8", Offset = "0x8B0DD8", VA = "0x8B0DD8")]
	public ControladorMenu()
	{
	}
}
[Token(Token = "0x200018B")]
public class ControladorMenuConBotones : MonoBehaviour
{
	[Token(Token = "0x200018C")]
	public enum Direcciones
	{
		[Token(Token = "0x4000DB5")]
		arriba,
		[Token(Token = "0x4000DB6")]
		abajo,
		[Token(Token = "0x4000DB7")]
		derecha,
		[Token(Token = "0x4000DB8")]
		izquierda,
		[Token(Token = "0x4000DB9")]
		ninguna
	}

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direcciones direccionMovimiento;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BotonBase botonActual;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BotonBase botonAnterior;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PantallaBotones PantallaActual;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ControladorMenu m_menu;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PantallaBotones PantallaAnterior;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BotonBase prevBoton;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Space(5f)]
	private BotonBase[] botonesBarraSuperior;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BotonBase[] botonesBarraInferior;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int indexUltimoBotonArriba;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int ticksSinFocus;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PantallaBotones pantallaPopUpCursores1;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PantallaBotones pantallaPopUpCursores2;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PantallaBotones pantallaPopUpCursores3;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PantallaBotones pantallaPopUpCursores4;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PantallaBotones pantallaPopUpCursores5;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PantallaBotones pantallaPopUpCursores6;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int idexUltimaPestana;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public bool bloquearAccion;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float tiempo;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float tiempoespera;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float tiempo2;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float tiempoespera2;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool movimientoContinuo;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[HideInInspector]
	public bool estaPermitidoVolverAtras;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[HideInInspector]
	public bool deboUnAtras;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	[HideInInspector]
	public bool deboUnAdelande;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool existia;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float triggerIzqAnterior;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float triggerDerAnterior;

	[Token(Token = "0x1700010D")]
	public PantallaBotones pantallaActual
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x757C6C", Offset = "0x757C6C", VA = "0x757C6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x757C74", Offset = "0x757C74", VA = "0x757C74")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public PantallaBotones pantallaAnterior
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0x757D14", Offset = "0x757D14", VA = "0x757D14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x757D1C", Offset = "0x757D1C", VA = "0x757D1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x757D24", Offset = "0x757D24", VA = "0x757D24")]
	[SerializeField]
	private void Awake()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x757D30", Offset = "0x757D30", VA = "0x757D30")]
	public void SiguienteBoton(int direccionSiguienteBoton)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x757E80", Offset = "0x757E80", VA = "0x757E80")]
	public BotonBase GetBotonActual()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x757E88", Offset = "0x757E88", VA = "0x757E88")]
	public void SetBotonActual(BotonBase boton)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x757E90", Offset = "0x757E90", VA = "0x757E90")]
	public void SetIndexBotonArribaActual(int value)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x757E98", Offset = "0x757E98", VA = "0x757E98")]
	public void SetBotonActivo(BotonBase botonNuevo, bool deInicio = false)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x757FAC", Offset = "0x757FAC", VA = "0x757FAC")]
	public void BajarABarraInfo()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x758030", Offset = "0x758030", VA = "0x758030")]
	public void BajarBarraSuperior()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x7581B0", Offset = "0x7581B0", VA = "0x7581B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x75834C", Offset = "0x75834C", VA = "0x75834C")]
	private void Update()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x7585C4", Offset = "0x7585C4", VA = "0x7585C4")]
	private void GetInputs()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x758AC0", Offset = "0x758AC0", VA = "0x758AC0")]
	public ControladorMenuConBotones()
	{
	}
}
[Token(Token = "0x200018D")]
public class ControladorMenuOpciones : MonoBehaviour
{
	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform sliderMusica;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform sliderFx;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform sliderSensibilidad;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI textoIdioma;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI textoIdioma2;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI textoCalidad;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI textoCalidadOpcion;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI textoCalidadOpcion2;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject PanelBotones;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PanelPreguntaProgreso;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioMixer audioMixer;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject remapping;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject pregunta;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject mapeoMando;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject mapeoTeclado;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RemapingControles controladorRemaping;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ManagerCalidad managerCalidad;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Bus sfxBus;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Bus menuBus;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Bus musicBus;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float nivelMusica;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float nivelFx;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float nivelSensibilidad;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject controles;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject sensibilidad;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BotonOvaloGenerico botonRemapingDespues;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject botonAceptarSalir;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BotonOvaloGenerico botonAbajoSensibilidad;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Vibracion")]
	public TextMeshProUGUI textoVibracion;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshProUGUI textoVibracionFocus;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Invertir Eje")]
	public TextMeshProUGUI textoInvertirEje;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshProUGUI textoInvertirEjeFocus;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x758AD0", Offset = "0x758AD0", VA = "0x758AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x758FB8", Offset = "0x758FB8", VA = "0x758FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x758AD4", Offset = "0x758AD4", VA = "0x758AD4")]
	public void CargarValoresOpciones()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x759128", Offset = "0x759128", VA = "0x759128")]
	public void GuardarAjustes()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x759200", Offset = "0x759200", VA = "0x759200")]
	public void AccionBotonIdioma()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x759354", Offset = "0x759354", VA = "0x759354")]
	public void ActualizarTextoCalidad()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x759504", Offset = "0x759504", VA = "0x759504")]
	public void AccionBotonCalidad()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x7596D4", Offset = "0x7596D4", VA = "0x7596D4")]
	public void AccionRestaurarProgreso()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x75970C", Offset = "0x75970C", VA = "0x75970C")]
	public void AccionAceptarReiniciarProgreso()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x7597B4", Offset = "0x7597B4", VA = "0x7597B4")]
	public void AccionCancelarReiniciarProgreso()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x7597EC", Offset = "0x7597EC", VA = "0x7597EC")]
	public void AccionBotonSubirValorSlider(int indexSlider)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x75986C", Offset = "0x75986C", VA = "0x75986C")]
	public void AccionBotonBajarValorSlider(int indexSlider)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x7597F4", Offset = "0x7597F4", VA = "0x7597F4")]
	private void BajarSubirValorSlider(int indexSlider, bool subir)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x758FBC", Offset = "0x758FBC", VA = "0x758FBC")]
	private void SetValorSlider(int indexSlider, float valor)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x759874", Offset = "0x759874", VA = "0x759874")]
	public void AbrirControlesRemaping()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x7598C0", Offset = "0x7598C0", VA = "0x7598C0")]
	public void AbrirSensibilidadRemaping()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x759C9C", Offset = "0x759C9C", VA = "0x759C9C")]
	public void AbrirRemaping()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x759D80", Offset = "0x759D80", VA = "0x759D80")]
	public void AbrirPanelRemaping(int num)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x75A2B0", Offset = "0x75A2B0", VA = "0x75A2B0")]
	public void AccionCerrarRemaping(int estado)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x759C44", Offset = "0x759C44", VA = "0x759C44")]
	public void MostrarOcultarBotonRemaping()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x759A50", Offset = "0x759A50", VA = "0x759A50")]
	public void ActivarVibracion(bool cambiar)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x75A594", Offset = "0x75A594", VA = "0x75A594")]
	public void ActivarInvertirEje()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x75A784", Offset = "0x75A784", VA = "0x75A784")]
	public void ActivarManoVRenZDI(bool esOpciones)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x75A858", Offset = "0x75A858", VA = "0x75A858")]
	public ControladorMenuOpciones()
	{
	}
}
[Token(Token = "0x200018E")]
public class PantallaBotones : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018F")]
	public class BotonSeleccionNivel
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BotonOvaloGenerico botonNivel;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI textoBloqueado;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int estrellasNecesarias;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x75C33C", Offset = "0x75C33C", VA = "0x75C33C")]
		public BotonSeleccionNivel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000190")]
	public class PuertasNivel
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BotonOvaloGenerico puerta;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject puertaBloqueada;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject puertaNormal;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image circleImage;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BotonOvaloGenerico botonPuerta;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI textoFaltanEstrellas;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject checkVerde;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject textoYestrella;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject nuevoFocus;

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x75C344", Offset = "0x75C344", VA = "0x75C344")]
		public PuertasNivel()
		{
		}
	}

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControladorMenuConBotones m_Controlador;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BotonBase botonInicial;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool esSelecionNiveles;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool venimosDeNivelJugado;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[HideInInspector]
	public bool venimosDeHistoria;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[HideInInspector]
	public bool venimosDePanelMisiones;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public BotonBase ultimoBoton;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public BotonOvaloGenerico ultimoBotonOvalo;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BotonSeleccionNivel[] botonesNivel;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PuertasNivel[] puertasNivel;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorPuertaAbierta;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BotonBase botonBajadaDeBarraSuperior;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BotonBase botonAnterior;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PantallaBotones pantallaActualAlHacerDisable;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool prevButtonAlBajarDeBarraSuperior;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Parametros para tutorial")]
	public ControladorMenu cMenu;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool tieneTutorial;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BotonOvaloGenerico botonCinematicaInicial;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BotonOvaloGenerico botonCinematicaFinal;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BotonBase cerrarBoton;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BotonBase tallerBoton;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x75A870", Offset = "0x75A870", VA = "0x75A870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x75B478", Offset = "0x75B478", VA = "0x75B478")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x75B5AC", Offset = "0x75B5AC", VA = "0x75B5AC")]
	public void SetUltimoBoton(BotonBase boton)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x75B624", Offset = "0x75B624", VA = "0x75B624")]
	public void ActualizarPuertas()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x75B6B8", Offset = "0x75B6B8", VA = "0x75B6B8")]
	public void AbrirCerrarPuerta(int numPuerta, int numNivel)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x75AF78", Offset = "0x75AF78", VA = "0x75AF78")]
	public void UpdateNivelesBloqueados()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x75BDA8", Offset = "0x75BDA8", VA = "0x75BDA8")]
	public void ActualizarRelacionConBotonCerrar()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x75C334", Offset = "0x75C334", VA = "0x75C334")]
	public PantallaBotones()
	{
	}
}
[Token(Token = "0x2000191")]
[AddComponentMenu("")]
public class RemapingControles : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000192")]
	public struct BotonesControles
	{
		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Contenedor;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI[] botones;
	}

	[Token(Token = "0x2000193")]
	public enum Acciones
	{
		[Token(Token = "0x4000E23")]
		MovHor = 0,
		[Token(Token = "0x4000E24")]
		MovVert = 1,
		[Token(Token = "0x4000E25")]
		Fire = 2,
		[Token(Token = "0x4000E26")]
		RepCabeza = 4,
		[Token(Token = "0x4000E27")]
		Pause = 5,
		[Token(Token = "0x4000E28")]
		Aceptar = 6,
		[Token(Token = "0x4000E29")]
		Atras = 7,
		[Token(Token = "0x4000E2A")]
		MovUIY = 8,
		[Token(Token = "0x4000E2B")]
		MovUiX = 9,
		[Token(Token = "0x4000E2C")]
		RotUiY = 13,
		[Token(Token = "0x4000E2D")]
		RotUiX = 14,
		[Token(Token = "0x4000E2E")]
		MovHorDPad = 16,
		[Token(Token = "0x4000E2F")]
		MovVerDPad = 15,
		[Token(Token = "0x4000E30")]
		Vacio = -1
	}

	[Serializable]
	[Token(Token = "0x2000194")]
	public struct ElementosMaps
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionElementMap elemento;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Acciones accion;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x762E54", Offset = "0x762E54", VA = "0x762E54")]
		public ActionElementMap GetElemento()
		{
			return null;
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x762E5C", Offset = "0x762E5C", VA = "0x762E5C")]
		public Acciones GetTipoAccion()
		{
			return default(Acciones);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x7603D8", Offset = "0x7603D8", VA = "0x7603D8")]
		public void SetElemento(ActionElementMap elemento_)
		{
		}
	}

	[Token(Token = "0x2000195")]
	private enum BotonesRemappingTeclado
	{
		[Token(Token = "0x4000E34")]
		MovHorIzq,
		[Token(Token = "0x4000E35")]
		MovHorDer,
		[Token(Token = "0x4000E36")]
		MovVertIzq,
		[Token(Token = "0x4000E37")]
		MovVertDer,
		[Token(Token = "0x4000E38")]
		DispararAceptar,
		[Token(Token = "0x4000E39")]
		RecolocarCamara,
		[Token(Token = "0x4000E3A")]
		PausaBAck
	}

	[Token(Token = "0x2000196")]
	private enum BotonesRemappingMando
	{
		[Token(Token = "0x4000E3C")]
		MovHor = 0,
		[Token(Token = "0x4000E3D")]
		MovVert = 1,
		[Token(Token = "0x4000E3E")]
		DispararAceptar = 2,
		[Token(Token = "0x4000E3F")]
		RecolocarCamara = 3,
		[Token(Token = "0x4000E40")]
		PausaBAck = 4,
		[Token(Token = "0x4000E41")]
		MovHorIzqDpad = 10,
		[Token(Token = "0x4000E42")]
		MovHorDerDpad = 11,
		[Token(Token = "0x4000E43")]
		MovVerUpDPad = 12,
		[Token(Token = "0x4000E44")]
		MovVerDownDPad = 13
	}

	[Token(Token = "0x2000197")]
	private class ControllerSelection
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _id;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _idPrev;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ControllerType _type;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private ControllerType _typePrev;

		[Token(Token = "0x1700010F")]
		public int id
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x762E64", Offset = "0x762E64", VA = "0x762E64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x762E6C", Offset = "0x762E6C", VA = "0x762E6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public ControllerType type
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x762E78", Offset = "0x762E78", VA = "0x762E78")]
			get
			{
				return default(ControllerType);
			}
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x762E80", Offset = "0x762E80", VA = "0x762E80")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool hasSelection
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x75FCA4", Offset = "0x75FCA4", VA = "0x75FCA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x75D4C4", Offset = "0x75D4C4", VA = "0x75D4C4")]
		public ControllerSelection()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x75FC90", Offset = "0x75FC90", VA = "0x75FC90")]
		public void Set(int id, ControllerType type)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x75F334", Offset = "0x75F334", VA = "0x75F334")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x2000198")]
	private abstract class QueueEntry
	{
		[Token(Token = "0x2000199")]
		public enum State
		{
			[Token(Token = "0x4000E4F")]
			Waiting,
			[Token(Token = "0x4000E50")]
			Confirmed,
			[Token(Token = "0x4000E51")]
			Canceled
		}

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int uidCounter;

		[Token(Token = "0x17000112")]
		public int id
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x762E8C", Offset = "0x762E8C", VA = "0x762E8C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x762E94", Offset = "0x762E94", VA = "0x762E94")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000113")]
		protected QueueActionType queueActionType
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x762E9C", Offset = "0x762E9C", VA = "0x762E9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		protected State state
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x762EA4", Offset = "0x762EA4", VA = "0x762EA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		protected UserResponse response
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x762EAC", Offset = "0x762EAC", VA = "0x762EAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		protected static int nextId
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x762EB4", Offset = "0x762EB4", VA = "0x762EB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x762F04", Offset = "0x762F04", VA = "0x762F04")]
		public QueueEntry(QueueActionType queueActionType)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x762104", Offset = "0x762104", VA = "0x762104")]
		public void Confirm(UserResponse response)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x762110", Offset = "0x762110", VA = "0x762110")]
		public void Cancel()
		{
		}
	}

	[Token(Token = "0x200019A")]
	private class JoystickAssignmentChange : QueueEntry
	{
		[Token(Token = "0x17000117")]
		private int playerId
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x762F70", Offset = "0x762F70", VA = "0x762F70")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		private int joystickId
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x762F78", Offset = "0x762F78", VA = "0x762F78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		private bool assign
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x762F80", Offset = "0x762F80", VA = "0x762F80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x75F9A8", Offset = "0x75F9A8", VA = "0x75F9A8")]
		public JoystickAssignmentChange(int newPlayerId, int joystickId, bool assign)
		{
		}
	}

	[Token(Token = "0x200019B")]
	private class ElementAssignmentChange : QueueEntry
	{
		[Token(Token = "0x1700011A")]
		public ElementAssignmentChangeType changeType
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x762F8C", Offset = "0x762F8C", VA = "0x762F8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		private InputMapper.Context context
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x762F94", Offset = "0x762F94", VA = "0x762F94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x761F50", Offset = "0x761F50", VA = "0x761F50")]
		public ElementAssignmentChange(ElementAssignmentChangeType changeType, InputMapper.Context context)
		{
		}
	}

	[Token(Token = "0x200019C")]
	private class FallbackJoystickIdentification : QueueEntry
	{
		[Token(Token = "0x1700011C")]
		private int joystickId
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x762F9C", Offset = "0x762F9C", VA = "0x762F9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		private string joystickName
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x762FA4", Offset = "0x762FA4", VA = "0x762FA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x762CD0", Offset = "0x762CD0", VA = "0x762CD0")]
		public FallbackJoystickIdentification(int joystickId, string joystickName)
		{
		}
	}

	[Token(Token = "0x200019D")]
	private enum QueueActionType
	{
		[Token(Token = "0x4000E5A")]
		None,
		[Token(Token = "0x4000E5B")]
		JoystickAssignment,
		[Token(Token = "0x4000E5C")]
		ElementAssignment,
		[Token(Token = "0x4000E5D")]
		FallbackJoystickIdentification,
		[Token(Token = "0x4000E5E")]
		Calibrate
	}

	[Token(Token = "0x200019E")]
	private enum ElementAssignmentChangeType
	{
		[Token(Token = "0x4000E60")]
		Add,
		[Token(Token = "0x4000E61")]
		Replace,
		[Token(Token = "0x4000E62")]
		Remove,
		[Token(Token = "0x4000E63")]
		ReassignOrRemove,
		[Token(Token = "0x4000E64")]
		ConflictCheck
	}

	[Token(Token = "0x200019F")]
	public enum UserResponse
	{
		[Token(Token = "0x4000E66")]
		Confirm,
		[Token(Token = "0x4000E67")]
		Cancel,
		[Token(Token = "0x4000E68")]
		Custom1,
		[Token(Token = "0x4000E69")]
		Custom2
	}

	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <ReemplazarEnUnTiempo>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActionElementMap prueba;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RemapingControles <>4__this;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AxisRange actionRange;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int id;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x7630AC", Offset = "0x7630AC", VA = "0x7630AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x7630F4", Offset = "0x7630F4", VA = "0x7630F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x7610B8", Offset = "0x7610B8", VA = "0x7610B8")]
		[DebuggerHidden]
		public <ReemplazarEnUnTiempo>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x762FAC", Offset = "0x762FAC", VA = "0x762FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x762FB0", Offset = "0x762FB0", VA = "0x762FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x7630B4", Offset = "0x7630B4", VA = "0x7630B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[CompilerGenerated]
	private sealed class <ResetEnTiempo>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RemapingControles <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x763284", Offset = "0x763284", VA = "0x763284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x7632CC", Offset = "0x7632CC", VA = "0x7632CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x7611B4", Offset = "0x7611B4", VA = "0x7611B4")]
		[DebuggerHidden]
		public <ResetEnTiempo>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x7630FC", Offset = "0x7630FC", VA = "0x7630FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x763100", Offset = "0x763100", VA = "0x763100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x76328C", Offset = "0x76328C", VA = "0x76328C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[CompilerGenerated]
	private sealed class <EfectoListening>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RemapingControles <>4__this;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <i>5__2;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x763530", Offset = "0x763530", VA = "0x763530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x763578", Offset = "0x763578", VA = "0x763578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x761D88", Offset = "0x761D88", VA = "0x761D88")]
		[DebuggerHidden]
		public <EfectoListening>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x7632D4", Offset = "0x7632D4", VA = "0x7632D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x7632D8", Offset = "0x7632D8", VA = "0x7632D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x763538", Offset = "0x763538", VA = "0x763538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFB")]
	private const float assignmentTimeout = 5f;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputMapper inputMapper;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputMapper.ConflictFoundEventData conflictFoundEventData;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Player selectedPlayer;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int selectedMapCategoryId;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ControllerSelection selectedController;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ControllerMap selectedMap;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool showMenu;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<QueueEntry> actionQueue;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool setupFinished;

	[NonSerialized]
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool initialized;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool isCompiling;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle style_wordWrap;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GUIStyle style_centeredBox;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Player player;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool tecladoSeleccionado;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool tipoSeleccionado;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BotonesControles mandoVolante;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BotonesControles teclado;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Joystick joystickActivo;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int joystickActual;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool cambioDeJoystick;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ControladorMenu m_ControladorMenu;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image checkMovHorInvertido;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image checkMovVertInvertido;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI textoBotonCambiarJoystick;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshProUGUI textoBotonCambiarJoystick2;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<InputAction> accion;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<ElementosMaps> elementosMaps;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ActionElementMap[] elementoRepo;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool modoAxisHor;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool modoAxisVert;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int[] relacionAccionElemento;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool add;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject listeningFondo;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject focusFondo;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool listening;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x75C34C", Offset = "0x75C34C", VA = "0x75C34C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x75C85C", Offset = "0x75C85C", VA = "0x75C85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x75D3B0", Offset = "0x75D3B0", VA = "0x75D3B0")]
	public void CerrarPanel()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x75D48C", Offset = "0x75D48C", VA = "0x75D48C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x75C550", Offset = "0x75C550", VA = "0x75C550")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x75D8F4", Offset = "0x75D8F4", VA = "0x75D8F4")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x75C880", Offset = "0x75C880", VA = "0x75C880")]
	private void Subscribe()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x75D4A8", Offset = "0x75D4A8", VA = "0x75D4A8")]
	private void Unsubscribe()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x75DA34", Offset = "0x75DA34", VA = "0x75DA34")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x75DBE0", Offset = "0x75DBE0", VA = "0x75DBE0")]
	public void Save()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x75DA74", Offset = "0x75DA74", VA = "0x75DA74")]
	private void HandleMenuControl()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x75DCB4", Offset = "0x75DCB4", VA = "0x75DCB4")]
	private void Close()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x75DCA8", Offset = "0x75DCA8", VA = "0x75DCA8")]
	private void Open()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x75DB14", Offset = "0x75DB14", VA = "0x75DB14")]
	private void DrawInitialScreen()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x75DBB0", Offset = "0x75DBB0", VA = "0x75DBB0")]
	private void DrawPage()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x75DD7C", Offset = "0x75DD7C", VA = "0x75DD7C")]
	private void DrawPlayerSelector()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x759E7C", Offset = "0x759E7C", VA = "0x759E7C")]
	public void CambiarDeJoystick(bool inicio)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x75F344", Offset = "0x75F344", VA = "0x75F344")]
	private void DrawJoystick5Selector()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x75DE74", Offset = "0x75DE74", VA = "0x75DE74")]
	private void DrawJoystickSelector()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x75FA80", Offset = "0x75FA80", VA = "0x75FA80")]
	public void ActivarJoystick(int numero)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x75E040", Offset = "0x75E040", VA = "0x75E040")]
	private void DrawControllerSelector()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x75E124", Offset = "0x75E124", VA = "0x75E124")]
	private void DrawMapCategories()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x75FCB4", Offset = "0x75FCB4", VA = "0x75FCB4")]
	private void CambiarAAxis(bool horizontal, BotonOvaloGenerico botonAxis, BotonOvaloGenerico botonDpad, GameObject checkInvertir)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x75FDE8", Offset = "0x75FDE8", VA = "0x75FDE8")]
	private void CambiarADPad(bool horizontal, BotonOvaloGenerico botonAxis, BotonOvaloGenerico botonDpad, GameObject checkInvertir)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x75CA44", Offset = "0x75CA44", VA = "0x75CA44")]
	private void GetAccions()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x75E55C", Offset = "0x75E55C", VA = "0x75E55C")]
	private void DrawCategoryActions()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x75FEE4", Offset = "0x75FEE4", VA = "0x75FEE4")]
	private void RelacionarAccionBoton()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x76040C", Offset = "0x76040C", VA = "0x76040C")]
	public void CambiarInput(int id)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x760920", Offset = "0x760920", VA = "0x760920")]
	public void InvertirAxis(int valor)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x761014", Offset = "0x761014", VA = "0x761014")]
	[IteratorStateMachine(typeof(<ReemplazarEnUnTiempo>d__71))]
	private IEnumerator ReemplazarEnUnTiempo(ActionElementMap prueba, AxisRange actionRange, int id)
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x7610E0", Offset = "0x7610E0", VA = "0x7610E0")]
	public void ResetBindings()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x761140", Offset = "0x761140", VA = "0x761140")]
	[IteratorStateMachine(typeof(<ResetEnTiempo>d__73))]
	private IEnumerator ResetEnTiempo()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x7605AC", Offset = "0x7605AC", VA = "0x7605AC")]
	public void CancelBinding()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x7611DC", Offset = "0x7611DC", VA = "0x7611DC")]
	private void OnInputConflict(InputMapper.ConflictFoundEventData data)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x7605C8", Offset = "0x7605C8", VA = "0x7605C8")]
	private void DrawActionAssignmentButton(int actionid, ActionElementMap aem, ControllerMap controllerMap, AxisRange actionRange, int id)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x76177C", Offset = "0x76177C", VA = "0x76177C")]
	private void IniciamosListening(InputMapper.StartedEventData data)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x761818", Offset = "0x761818", VA = "0x761818")]
	private void ParamosListening(InputMapper.StoppedEventData data)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x7618C4", Offset = "0x7618C4", VA = "0x7618C4")]
	private void OnInputMapped(InputMapper.InputMappedEventData data)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x761D14", Offset = "0x761D14", VA = "0x761D14")]
	[IteratorStateMachine(typeof(<EfectoListening>d__83))]
	private IEnumerator EfectoListening()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x761DB0", Offset = "0x761DB0", VA = "0x761DB0")]
	private void DrawAddActionMapButton(int playerId, InputAction action, AxisRange actionRange, ControllerSelection controller, ControllerMap controllerMap)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x761F88", Offset = "0x761F88", VA = "0x761F88")]
	private void DialogResultCallback(int queueActionId, UserResponse response)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x76211C", Offset = "0x76211C", VA = "0x76211C")]
	private Rect GetScreenCenteredRect(float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x75F9E8", Offset = "0x75F9E8", VA = "0x75F9E8")]
	private void EnqueueAction(QueueEntry entry)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x75F994", Offset = "0x75F994", VA = "0x75F994")]
	private void ControllerSelectionChanged()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x7621B8", Offset = "0x7621B8", VA = "0x7621B8")]
	private void ClearControllerSelection()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x7621A4", Offset = "0x7621A4", VA = "0x7621A4")]
	private void ClearMapSelection()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x75D4E8", Offset = "0x75D4E8", VA = "0x75D4E8")]
	private void ResetAll()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x75DCCC", Offset = "0x75DCCC", VA = "0x75DCCC")]
	private void ClearWorkingVars()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x7621EC", Offset = "0x7621EC", VA = "0x7621EC")]
	private void JoystickConnected(ControllerStatusChangedEventArgs args)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x762714", Offset = "0x762714", VA = "0x762714")]
	private void JoystickPreDisconnect(ControllerStatusChangedEventArgs args)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x762C48", Offset = "0x762C48", VA = "0x762C48")]
	private void JoystickDisconnected(ControllerStatusChangedEventArgs args)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x762CC4", Offset = "0x762CC4", VA = "0x762CC4")]
	private void OnStopped(InputMapper.StoppedEventData data)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x75D504", Offset = "0x75D504", VA = "0x75D504")]
	public void IdentifyAllJoysticks()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x762D08", Offset = "0x762D08", VA = "0x762D08")]
	public RemapingControles()
	{
	}
}
[Token(Token = "0x20001A3")]
public class MeteoritoConRigidbody : MonoBehaviour
{
	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rbObject;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 empujarRb;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotarRb;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool tieneTorreta;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int torretaEnArray;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform posicionTorreta;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zonaDeInmersion;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float posicionApagarRb;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x763580", Offset = "0x763580", VA = "0x763580")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x7635E0", Offset = "0x7635E0", VA = "0x7635E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x763918", Offset = "0x763918", VA = "0x763918")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x7639E8", Offset = "0x7639E8", VA = "0x7639E8")]
	public MeteoritoConRigidbody()
	{
	}
}
[Token(Token = "0x20001A4")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x763A10", Offset = "0x763A10", VA = "0x763A10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x763B60", Offset = "0x763B60", VA = "0x763B60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x763BC0", Offset = "0x763BC0", VA = "0x763BC0")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x763D24", Offset = "0x763D24", VA = "0x763D24")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x76426C", Offset = "0x76426C", VA = "0x76426C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x764374", Offset = "0x764374", VA = "0x764374")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x20001A5")]
public class Moneda : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <ReposicionarEnEjeBloqueado>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x765E98", Offset = "0x765E98", VA = "0x765E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x765EE0", Offset = "0x765EE0", VA = "0x765EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x765B10", Offset = "0x765B10", VA = "0x765B10")]
		[DebuggerHidden]
		public <ReposicionarEnEjeBloqueado>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x765B38", Offset = "0x765B38", VA = "0x765B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x765B3C", Offset = "0x765B3C", VA = "0x765B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x765EA0", Offset = "0x765EA0", VA = "0x765EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[CompilerGenerated]
	private sealed class <Destruir>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x7660F0", Offset = "0x7660F0", VA = "0x7660F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x766138", Offset = "0x766138", VA = "0x766138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x765EE8", Offset = "0x765EE8", VA = "0x765EE8")]
		[DebuggerHidden]
		public <Destruir>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x765F10", Offset = "0x765F10", VA = "0x765F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x765F14", Offset = "0x765F14", VA = "0x765F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x7660F8", Offset = "0x7660F8", VA = "0x7660F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A8")]
	[CompilerGenerated]
	private sealed class <EsperaPoderCoger>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x766224", Offset = "0x766224", VA = "0x766224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x76626C", Offset = "0x76626C", VA = "0x76626C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x766140", Offset = "0x766140", VA = "0x766140")]
		[DebuggerHidden]
		public <EsperaPoderCoger>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x766168", Offset = "0x766168", VA = "0x766168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x76616C", Offset = "0x76616C", VA = "0x76616C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x76622C", Offset = "0x76622C", VA = "0x76622C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A9")]
	[CompilerGenerated]
	private sealed class <IrAPlayer>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <inicio>5__3;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x766484", Offset = "0x766484", VA = "0x766484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x7664CC", Offset = "0x7664CC", VA = "0x7664CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x766274", Offset = "0x766274", VA = "0x766274")]
		[DebuggerHidden]
		public <IrAPlayer>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x76629C", Offset = "0x76629C", VA = "0x76629C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x7662A0", Offset = "0x7662A0", VA = "0x7662A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x76648C", Offset = "0x76648C", VA = "0x76648C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <AnimacinoDesaparecer>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <enAnimacion>5__2;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <mult>5__3;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0x76679C", Offset = "0x76679C", VA = "0x76679C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0x7667E4", Offset = "0x7667E4", VA = "0x7667E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x7664D4", Offset = "0x7664D4", VA = "0x7664D4")]
		[DebuggerHidden]
		public <AnimacinoDesaparecer>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x7664FC", Offset = "0x7664FC", VA = "0x7664FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x766500", Offset = "0x766500", VA = "0x766500", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x7667A4", Offset = "0x7667A4", VA = "0x7667A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[CompilerGenerated]
	private sealed class <PerderMonedaCorrutina>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Moneda <>4__this;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <x>5__3;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <y>5__4;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <posInicial>5__5;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x766AB0", Offset = "0x766AB0", VA = "0x766AB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x766AF8", Offset = "0x766AF8", VA = "0x766AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x7667EC", Offset = "0x7667EC", VA = "0x7667EC")]
		[DebuggerHidden]
		public <PerderMonedaCorrutina>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x766814", Offset = "0x766814", VA = "0x766814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x766818", Offset = "0x766818", VA = "0x766818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x766AB8", Offset = "0x766AB8", VA = "0x766AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool esEstrella;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int valor;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool cogida;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enPantalla;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControladorMonedas c_monedas;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool enMovimiento;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 direccion;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float velocidad;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particulaCogerMoneda;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform meshMoneda;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool deBoss;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[EventRef]
	public string eventoMoneda;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool enZonaDeImersion;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomVelocidad;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoxCollider bCollider;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform targetAvion;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool desactivada;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 posAvionX;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool estatica;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine destruirCor;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine desaparecerCor;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine irAPlayerCor;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine corPerderMoneda;

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x764464", Offset = "0x764464", VA = "0x764464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x7644BC", Offset = "0x7644BC", VA = "0x7644BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x764868", Offset = "0x764868", VA = "0x764868")]
	[IteratorStateMachine(typeof(<ReposicionarEnEjeBloqueado>d__21))]
	private IEnumerator ReposicionarEnEjeBloqueado()
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x7648DC", Offset = "0x7648DC", VA = "0x7648DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x764A8C", Offset = "0x764A8C", VA = "0x764A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x764C64", Offset = "0x764C64", VA = "0x764C64")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x765488", Offset = "0x765488", VA = "0x765488")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x76553C", Offset = "0x76553C", VA = "0x76553C")]
	[IteratorStateMachine(typeof(<Destruir>d__27))]
	private IEnumerator Destruir()
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x7655B0", Offset = "0x7655B0", VA = "0x7655B0")]
	public void Aparicion(Vector3 dir, bool esEstatica = false)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x765748", Offset = "0x765748", VA = "0x765748")]
	[IteratorStateMachine(typeof(<EsperaPoderCoger>d__29))]
	private IEnumerator EsperaPoderCoger()
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x76539C", Offset = "0x76539C", VA = "0x76539C")]
	public void Desaparicion()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x7657BC", Offset = "0x7657BC", VA = "0x7657BC")]
	[IteratorStateMachine(typeof(<IrAPlayer>d__33))]
	private IEnumerator IrAPlayer()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x76591C", Offset = "0x76591C", VA = "0x76591C")]
	[IteratorStateMachine(typeof(<AnimacinoDesaparecer>d__34))]
	private IEnumerator AnimacinoDesaparecer()
	{
		return null;
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x765990", Offset = "0x765990", VA = "0x765990")]
	public void PerderMoneda()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x765A7C", Offset = "0x765A7C", VA = "0x765A7C")]
	[IteratorStateMachine(typeof(<PerderMonedaCorrutina>d__37))]
	private IEnumerator PerderMonedaCorrutina()
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x765830", Offset = "0x765830", VA = "0x765830")]
	public void RotarParticulasSegunVista()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x765AF0", Offset = "0x765AF0", VA = "0x765AF0")]
	public Moneda()
	{
	}
}
[Token(Token = "0x20001AC")]
public class MovimientoAgua : MonoBehaviour
{
	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 scrollSpeed;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material m_material;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 valorActual;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool esNivel16;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool esNivel7;

	[Token(Token = "0x4000EC2")]
	private const string mainText = "_MainTex";

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool tieneBumpMap;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 aux;

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x766B00", Offset = "0x766B00", VA = "0x766B00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x766DB0", Offset = "0x766DB0", VA = "0x766DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x766EB4", Offset = "0x766EB4", VA = "0x766EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x766FF0", Offset = "0x766FF0", VA = "0x766FF0")]
	public MovimientoAgua()
	{
	}
}
[Token(Token = "0x20001AD")]
public class MovimientoFondo : MonoBehaviour
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 scrollSpeed;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage img;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 valorActual;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x767004", Offset = "0x767004", VA = "0x767004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x76705C", Offset = "0x76705C", VA = "0x76705C")]
	private void Update()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x767140", Offset = "0x767140", VA = "0x767140")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x767200", Offset = "0x767200", VA = "0x767200")]
	public MovimientoFondo()
	{
	}
}
[Token(Token = "0x20001AE")]
public class MovimientoFondoAgua : MonoBehaviour
{
	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x767208", Offset = "0x767208", VA = "0x767208")]
	private void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x76727C", Offset = "0x76727C", VA = "0x76727C")]
	public MovimientoFondoAgua()
	{
	}
}
[Token(Token = "0x20001AF")]
public class MovimientoFondoImg : MonoBehaviour
{
	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage fondoImg;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture[] fondos;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int indexImagenFondo;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float suma;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int mult;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool primera;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x767284", Offset = "0x767284", VA = "0x767284")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x7673F4", Offset = "0x7673F4", VA = "0x7673F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x76766C", Offset = "0x76766C", VA = "0x76766C")]
	public MovimientoFondoImg()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Nube2d : MonoBehaviour
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int tickSinHacerNada;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x767688", Offset = "0x767688", VA = "0x767688")]
	public void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x7676E8", Offset = "0x7676E8", VA = "0x7676E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x767A4C", Offset = "0x767A4C", VA = "0x767A4C")]
	public Nube2d()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ParticulaAguaSplash : MonoBehaviour
{
	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Enemigo enemigo;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool fxAguaFlag;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool esDetector;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float size;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x767A54", Offset = "0x767A54", VA = "0x767A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x767B2C", Offset = "0x767B2C", VA = "0x767B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x767CF4", Offset = "0x767CF4", VA = "0x767CF4")]
	public ParticulaAguaSplash()
	{
	}
}
[Token(Token = "0x20001B2")]
public class PicoRecords : LogrosRecords
{
	[Token(Token = "0x20001B3")]
	private enum TipoOperacion
	{
		[Token(Token = "0x4000EE3")]
		obtenerResultados,
		[Token(Token = "0x4000EE4")]
		subirRecord
	}

	[Token(Token = "0x20001B4")]
	private struct Operacion
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoOperacion tipoOperacion;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string tablaSolicitada;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int numeroResultadosQueQuiero;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int record;
	}

	[Token(Token = "0x20001B5")]
	private enum TipoDatos
	{
		[Token(Token = "0x4000EEA")]
		top,
		[Token(Token = "0x4000EEB")]
		alrededorMio
	}

	[Token(Token = "0x20001B6")]
	[CompilerGenerated]
	private sealed class <SiguienteOperacionConPausa>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PicoRecords <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x7691E4", Offset = "0x7691E4", VA = "0x7691E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x76922C", Offset = "0x76922C", VA = "0x76922C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x768454", Offset = "0x768454", VA = "0x768454")]
		[DebuggerHidden]
		public <SiguienteOperacionConPausa>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x769134", Offset = "0x769134", VA = "0x769134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x769138", Offset = "0x769138", VA = "0x769138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x7691EC", Offset = "0x7691EC", VA = "0x7691EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TipoDatos tipoDatosActual;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ejecutandoOperacion;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Operacion> operacionesPendientes;

	[Token(Token = "0x4000ED9")]
	private const int kFramesQueMeSalto = 30;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int framesQueLlevoSaltados;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int nResultadosQueQuiero;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string tablaSolicitada;

	[Token(Token = "0x4000EDD")]
	private const int kRangoResultados = 100;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Resultado> resultadoActual;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string m_myID;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string m_myPicoID;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Resultado> resultadosTop;

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x767D04", Offset = "0x767D04", VA = "0x767D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x767E4C", Offset = "0x767E4C", VA = "0x767E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x767F14", Offset = "0x767F14", VA = "0x767F14")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x768000", Offset = "0x768000", VA = "0x768000", Slot = "11")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x768170", Offset = "0x768170", VA = "0x768170", Slot = "7")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x768174", Offset = "0x768174", VA = "0x768174", Slot = "10")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x768178", Offset = "0x768178", VA = "0x768178", Slot = "12")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x76817C", Offset = "0x76817C", VA = "0x76817C", Slot = "8")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x7682F0", Offset = "0x7682F0", VA = "0x7682F0", Slot = "9")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x767EA0", Offset = "0x767EA0", VA = "0x767EA0")]
	[IteratorStateMachine(typeof(<SiguienteOperacionConPausa>d__27))]
	private IEnumerator SiguienteOperacionConPausa()
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x76847C", Offset = "0x76847C", VA = "0x76847C")]
	private void SiguienteOperacion()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x7686A8", Offset = "0x7686A8", VA = "0x7686A8")]
	private void SubirRecordCallback(Message<bool> msg)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x7686F0", Offset = "0x7686F0", VA = "0x7686F0")]
	private void ResultadosCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x769040", Offset = "0x769040", VA = "0x769040")]
	public PicoRecords()
	{
	}
}
[Token(Token = "0x20001B7")]
public class AccionesJugador : MonoBehaviour
{
	[Token(Token = "0x20001B8")]
	public enum DispositivosPosibles
	{
		[Token(Token = "0x4000F17")]
		SensorDerecho,
		[Token(Token = "0x4000F18")]
		SensorIzquierdo,
		[Token(Token = "0x4000F19")]
		mando,
		[Token(Token = "0x4000F1A")]
		teclado
	}

	[Token(Token = "0x20001B9")]
	public enum TipoSensores
	{
		[Token(Token = "0x4000F1C")]
		vive,
		[Token(Token = "0x4000F1D")]
		oculus,
		[Token(Token = "0x4000F1E")]
		index,
		[Token(Token = "0x4000F1F")]
		cosmos,
		[Token(Token = "0x4000F20")]
		wmr,
		[Token(Token = "0x4000F21")]
		ninguno,
		[Token(Token = "0x4000F22")]
		mandoXbox,
		[Token(Token = "0x4000F23")]
		mandoSwitch,
		[Token(Token = "0x4000F24")]
		mandoSteam,
		[Token(Token = "0x4000F25")]
		tracker,
		[Token(Token = "0x4000F26")]
		pico,
		[Token(Token = "0x4000F27")]
		nolo,
		[Token(Token = "0x4000F28")]
		move
	}

	[Token(Token = "0x20001BA")]
	public struct JoyInput
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool existe;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int joyNumber;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DispositivosPosibles soyTipo;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TipoSensores tipoSensor;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x769DF0", Offset = "0x769DF0", VA = "0x769DF0")]
		public JoyInput(bool _existe, string nombre, int num, DispositivosPosibles tipo, TipoSensores tipoDeSensor)
		{
		}
	}

	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private sealed class <ReposicionarDespuesDeUnTiempo>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccionesJugador <>4__this;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool sinRotar;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x76A108", Offset = "0x76A108", VA = "0x76A108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x76A150", Offset = "0x76A150", VA = "0x76A150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x769B6C", Offset = "0x769B6C", VA = "0x769B6C")]
		[DebuggerHidden]
		public <ReposicionarDespuesDeUnTiempo>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x769E38", Offset = "0x769E38", VA = "0x769E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x769E3C", Offset = "0x769E3C", VA = "0x769E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x76A110", Offset = "0x76A110", VA = "0x76A110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[CompilerGenerated]
	private sealed class <ReposicionarNoVRDespuesDeUnTiempo>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AccionesJugador <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x76A4E0", Offset = "0x76A4E0", VA = "0x76A4E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x76A528", Offset = "0x76A528", VA = "0x76A528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x769B94", Offset = "0x769B94", VA = "0x769B94")]
		[DebuggerHidden]
		public <ReposicionarNoVRDespuesDeUnTiempo>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x76A158", Offset = "0x76A158", VA = "0x76A158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x76A15C", Offset = "0x76A15C", VA = "0x76A15C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x76A4E8", Offset = "0x76A4E8", VA = "0x76A4E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AccionesJugador instance;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDevice mandoD;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputDevice mandoI;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject playerPs4Prefab;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject playerSteamPrefab;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform player;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerSteam playerSteam;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform posicionCabeza;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform posicionCabeza3raP;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControladorSoldado controladorSoldado;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool botonMenu;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PartesSoldado soldado;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform manoDerecha;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform posicionCeroManoDerecha;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform manoIzquierda;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform posicionCeroManoIzquierda;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform posCabeza;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform cabeza;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 posCabezaDefault;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform objetos;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float triggerDerecho;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float triggerIzquierdo;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool recolocar;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool pause;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool disparar;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool aceptar;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool aceptadoPorTrigger;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool atras;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector2 stickDerecho;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector2 stickIzquierdo;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float rotacionEnUIX;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float rotacionEnUIY;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector2 movimientoEnUI;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool cambiarAltura;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float tiempoArranque;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float tiempoDesdeCambioDeMano;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool inicializado;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	public bool movimientoBloqueado;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Mesh Palanca")]
	public MeshRenderer[] meshesPalanca;

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x769234", Offset = "0x769234", VA = "0x769234")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x76928C", Offset = "0x76928C", VA = "0x76928C")]
	private void Start()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x769A70", Offset = "0x769A70", VA = "0x769A70")]
	[IteratorStateMachine(typeof(<ReposicionarDespuesDeUnTiempo>d__44))]
	private IEnumerator ReposicionarDespuesDeUnTiempo(bool sinRotar = false)
	{
		return null;
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x769AF8", Offset = "0x769AF8", VA = "0x769AF8")]
	[IteratorStateMachine(typeof(<ReposicionarNoVRDespuesDeUnTiempo>d__45))]
	private IEnumerator ReposicionarNoVRDespuesDeUnTiempo()
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x769BBC", Offset = "0x769BBC", VA = "0x769BBC")]
	public void ActivarMeshesPalanca(bool activar)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x769C24", Offset = "0x769C24", VA = "0x769C24")]
	public void ReiniciarJuego()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x769DD0", Offset = "0x769DD0", VA = "0x769DD0")]
	public AccionesJugador()
	{
	}
}
[Token(Token = "0x20001BD")]
public class ArmaClones : ArmaPlayer
{
	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool posicion;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x76A530", Offset = "0x76A530", VA = "0x76A530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x76A690", Offset = "0x76A690", VA = "0x76A690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x76A6DC", Offset = "0x76A6DC", VA = "0x76A6DC", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x76AA38", Offset = "0x76AA38", VA = "0x76AA38", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x76AC48", Offset = "0x76AC48", VA = "0x76AC48", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x76ACD4", Offset = "0x76ACD4", VA = "0x76ACD4")]
	public ArmaClones()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ArmaEnV : ArmaPlayer
{
	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparoL;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform puntoDeDisparoR;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject particulasDisparoL;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject particulasDisparoR;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject metralletasDerecha;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] meshMetralletasLvlDerecha;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool lado;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x76ACE4", Offset = "0x76ACE4", VA = "0x76ACE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x76B1A4", Offset = "0x76B1A4", VA = "0x76B1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x76B2FC", Offset = "0x76B2FC", VA = "0x76B2FC", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x76B854", Offset = "0x76B854", VA = "0x76B854", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x76BA64", Offset = "0x76BA64", VA = "0x76BA64", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x76AE4C", Offset = "0x76AE4C", VA = "0x76AE4C")]
	private void RecojerMetralletas()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x76AF80", Offset = "0x76AF80", VA = "0x76AF80")]
	private void DesactivarMeshMetralletaPorLvl()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x76BAF0", Offset = "0x76BAF0", VA = "0x76BAF0")]
	public ArmaEnV()
	{
	}
}
[Token(Token = "0x20001BF")]
public class ArmaLateral : ArmaPlayer
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparoL;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform puntoDeDisparoR;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject particulasDisparoL;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject particulasDisparoR;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject metralletasDerecha;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] meshMetralletasLvlDerecha;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool lado;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x76BAF8", Offset = "0x76BAF8", VA = "0x76BAF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x76BFC0", Offset = "0x76BFC0", VA = "0x76BFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x76C118", Offset = "0x76C118", VA = "0x76C118", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x76C520", Offset = "0x76C520", VA = "0x76C520", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x76C730", Offset = "0x76C730", VA = "0x76C730", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x76BC68", Offset = "0x76BC68", VA = "0x76BC68")]
	private void RecojerMetralletas()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x76BD9C", Offset = "0x76BD9C", VA = "0x76BD9C")]
	private void DesactivarMeshMetralletaPorLvl()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x76C7BC", Offset = "0x76C7BC", VA = "0x76C7BC")]
	public ArmaLateral()
	{
	}
}
[Token(Token = "0x20001C0")]
public class ArmaMisiles : ArmaPlayer
{
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform enemigo;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float enemigoMasCercano;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float distanciaEnemigo;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool noHayEnemigos;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ControladorNivel cN;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x76C7C4", Offset = "0x76C7C4", VA = "0x76C7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x76C860", Offset = "0x76C860", VA = "0x76C860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x76C8C0", Offset = "0x76C8C0", VA = "0x76C8C0", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x76CE00", Offset = "0x76CE00", VA = "0x76CE00")]
	public void BuscarEnemigoMasCercano()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x76D25C", Offset = "0x76D25C", VA = "0x76D25C", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x76D46C", Offset = "0x76D46C", VA = "0x76D46C", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x76D594", Offset = "0x76D594", VA = "0x76D594")]
	public ArmaMisiles()
	{
	}
}
[Token(Token = "0x20001C1")]
public abstract class ArmaPlayer : MonoBehaviour
{
	[Token(Token = "0x20001C2")]
	public enum TiposArmasPlayer
	{
		[Token(Token = "0x4000F6F")]
		principal,
		[Token(Token = "0x4000F70")]
		principalesLaterales,
		[Token(Token = "0x4000F71")]
		lateral,
		[Token(Token = "0x4000F72")]
		enV,
		[Token(Token = "0x4000F73")]
		lanzamisiles,
		[Token(Token = "0x4000F74")]
		laser,
		[Token(Token = "0x4000F75")]
		avionesEscolta
	}

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TiposArmasPlayer m_tipo;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int nivel;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cooldown;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float danoArma;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tamanoArma;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject metralletas;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] meshMetralletasLvl;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject balaPrefab;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int balaActual;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Proyectil[] municion;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform posPullBalas;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float danoMinimo;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float tamanoMinimo;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float cadenciaMinima;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float danoMaximo;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float tamanoMaximo;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float cadenciaMaximo;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int nivelMaximo;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float incrementoDano;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float incrementoTamano;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float incrementoCadencia;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SonidosAvion sonidos;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool nivelEstablecio;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	protected bool nivelIniciado;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AvionJugador avion;

	[Token(Token = "0x600098D")]
	public abstract void Disparar();

	[Token(Token = "0x600098E")]
	public abstract void GenerarBalas();

	[Token(Token = "0x600098F")]
	public abstract void RecolocarBala(Proyectil proyectil);

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x76A5D0", Offset = "0x76A5D0", VA = "0x76A5D0")]
	public void DeterminarCaracteristicasPorNivel()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x76ACDC", Offset = "0x76ACDC", VA = "0x76ACDC")]
	protected ArmaPlayer()
	{
	}
}
[Token(Token = "0x20001C3")]
public class ArmaPrincipal : ArmaPlayer
{
	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x76D59C", Offset = "0x76D59C", VA = "0x76D59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x76D5AC", Offset = "0x76D5AC", VA = "0x76D5AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x76DA5C", Offset = "0x76DA5C", VA = "0x76DA5C", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x76E13C", Offset = "0x76E13C", VA = "0x76E13C", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x76E34C", Offset = "0x76E34C", VA = "0x76E34C", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x76D820", Offset = "0x76D820", VA = "0x76D820")]
	private void RecojerMetralletas()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x76D8E8", Offset = "0x76D8E8", VA = "0x76D8E8")]
	private void DesactivarMeshMetralletaPorLvl()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x76E3D8", Offset = "0x76E3D8", VA = "0x76E3D8")]
	public ArmaPrincipal()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ArmaSecundarias : ArmaPlayer
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool posicion;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool derecha;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x76E3E0", Offset = "0x76E3E0", VA = "0x76E3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x76E3F0", Offset = "0x76E3F0", VA = "0x76E3F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x76E738", Offset = "0x76E738", VA = "0x76E738", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x76E4FC", Offset = "0x76E4FC", VA = "0x76E4FC")]
	private void RecojerMetralletas()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x76E5C4", Offset = "0x76E5C4", VA = "0x76E5C4")]
	private void DesactivarMeshMetralletaPorLvl()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x76EE44", Offset = "0x76EE44", VA = "0x76EE44", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x76F054", Offset = "0x76F054", VA = "0x76F054", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x76F0E0", Offset = "0x76F0E0", VA = "0x76F0E0")]
	public ArmaSecundarias()
	{
	}
}
[Token(Token = "0x20001C5")]
public class AvionJugador : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	[CompilerGenerated]
	private sealed class <QuitarCamaraNegra>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x774E08", Offset = "0x774E08", VA = "0x774E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x774E50", Offset = "0x774E50", VA = "0x774E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x774C5C", Offset = "0x774C5C", VA = "0x774C5C")]
		[DebuggerHidden]
		public <QuitarCamaraNegra>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x774C84", Offset = "0x774C84", VA = "0x774C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x774C88", Offset = "0x774C88", VA = "0x774C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x774E10", Offset = "0x774E10", VA = "0x774E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C7")]
	[CompilerGenerated]
	private sealed class <EntrarEnZDIAlInicio>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x77512C", Offset = "0x77512C", VA = "0x77512C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x775174", Offset = "0x775174", VA = "0x775174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x774E58", Offset = "0x774E58", VA = "0x774E58")]
		[DebuggerHidden]
		public <EntrarEnZDIAlInicio>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x774E80", Offset = "0x774E80", VA = "0x774E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x774E84", Offset = "0x774E84", VA = "0x774E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x775134", Offset = "0x775134", VA = "0x775134", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[CompilerGenerated]
	private sealed class <PosicionarNaveDespuesFiligrana>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 posicionRespectoTrigger;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float velocidadReposicion;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <puntoA>5__2;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <puntoB>5__3;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x775494", Offset = "0x775494", VA = "0x775494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x7754DC", Offset = "0x7754DC", VA = "0x7754DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x77517C", Offset = "0x77517C", VA = "0x77517C")]
		[DebuggerHidden]
		public <PosicionarNaveDespuesFiligrana>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x7751A4", Offset = "0x7751A4", VA = "0x7751A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x7751A8", Offset = "0x7751A8", VA = "0x7751A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x77549C", Offset = "0x77549C", VA = "0x77549C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	[CompilerGenerated]
	private sealed class <EfectosMorir>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x7759DC", Offset = "0x7759DC", VA = "0x7759DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x775A24", Offset = "0x775A24", VA = "0x775A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x7754E4", Offset = "0x7754E4", VA = "0x7754E4")]
		[DebuggerHidden]
		public <EfectosMorir>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x77550C", Offset = "0x77550C", VA = "0x77550C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x775510", Offset = "0x775510", VA = "0x775510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x7759E4", Offset = "0x7759E4", VA = "0x7759E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <EfectoMaxMejoras>d__120 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempoHastaDesvanecer;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AvionJugador <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x775B2C", Offset = "0x775B2C", VA = "0x775B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x775B74", Offset = "0x775B74", VA = "0x775B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x775A2C", Offset = "0x775A2C", VA = "0x775A2C")]
		[DebuggerHidden]
		public <EfectoMaxMejoras>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x775A54", Offset = "0x775A54", VA = "0x775A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x775A58", Offset = "0x775A58", VA = "0x775A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x775B34", Offset = "0x775B34", VA = "0x775B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <DesactivarControlesAnimacionEntrada>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duracionAnimacion;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x775D10", Offset = "0x775D10", VA = "0x775D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x775D58", Offset = "0x775D58", VA = "0x775D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x775B7C", Offset = "0x775B7C", VA = "0x775B7C")]
		[DebuggerHidden]
		public <DesactivarControlesAnimacionEntrada>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x775BA4", Offset = "0x775BA4", VA = "0x775BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x775BA8", Offset = "0x775BA8", VA = "0x775BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x775D18", Offset = "0x775D18", VA = "0x775D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CC")]
	[CompilerGenerated]
	private sealed class <EfectoDano>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <explosion>5__2;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <posicionInicial>5__3;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x775F7C", Offset = "0x775F7C", VA = "0x775F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x775FC4", Offset = "0x775FC4", VA = "0x775FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x775D60", Offset = "0x775D60", VA = "0x775D60")]
		[DebuggerHidden]
		public <EfectoDano>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x775D88", Offset = "0x775D88", VA = "0x775D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x775D8C", Offset = "0x775D8C", VA = "0x775D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x775F84", Offset = "0x775F84", VA = "0x775F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[CompilerGenerated]
	private sealed class <ConsiderarAterrizajeExitoso>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x776388", Offset = "0x776388", VA = "0x776388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x7763D0", Offset = "0x7763D0", VA = "0x7763D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x775FCC", Offset = "0x775FCC", VA = "0x775FCC")]
		[DebuggerHidden]
		public <ConsiderarAterrizajeExitoso>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x775FF4", Offset = "0x775FF4", VA = "0x775FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x775FF8", Offset = "0x775FF8", VA = "0x775FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x776390", Offset = "0x776390", VA = "0x776390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[CompilerGenerated]
	private sealed class <MuertePorAgua>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x776610", Offset = "0x776610", VA = "0x776610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x776658", Offset = "0x776658", VA = "0x776658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x7763D8", Offset = "0x7763D8", VA = "0x7763D8")]
		[DebuggerHidden]
		public <MuertePorAgua>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x776400", Offset = "0x776400", VA = "0x776400", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x776404", Offset = "0x776404", VA = "0x776404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x776618", Offset = "0x776618", VA = "0x776618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <EfectoInmune>d__144 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float tiempoHastaDesvanecer;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer <mesh>5__2;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x7769B4", Offset = "0x7769B4", VA = "0x7769B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x7769FC", Offset = "0x7769FC", VA = "0x7769FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x776660", Offset = "0x776660", VA = "0x776660")]
		[DebuggerHidden]
		public <EfectoInmune>d__144(int <>1__state)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x776688", Offset = "0x776688", VA = "0x776688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x77668C", Offset = "0x77668C", VA = "0x77668C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x7769BC", Offset = "0x7769BC", VA = "0x7769BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[CompilerGenerated]
	private sealed class <BucleDeReparacion>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x776AF8", Offset = "0x776AF8", VA = "0x776AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x776B40", Offset = "0x776B40", VA = "0x776B40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x776A04", Offset = "0x776A04", VA = "0x776A04")]
		[DebuggerHidden]
		public <BucleDeReparacion>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x776A2C", Offset = "0x776A2C", VA = "0x776A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x776A30", Offset = "0x776A30", VA = "0x776A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x776B00", Offset = "0x776B00", VA = "0x776B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[CompilerGenerated]
	private sealed class <LoopEnInicio>d__158 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvionJugador <>4__this;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x7773FC", Offset = "0x7773FC", VA = "0x7773FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x777444", Offset = "0x777444", VA = "0x777444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x776B48", Offset = "0x776B48", VA = "0x776B48")]
		[DebuggerHidden]
		public <LoopEnInicio>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x776B70", Offset = "0x776B70", VA = "0x776B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x776B74", Offset = "0x776B74", VA = "0x776B74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x777404", Offset = "0x777404", VA = "0x777404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Vida")]
	public float hpTotal;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hpActual;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Partes Avion")]
	public MeshRenderer[] meshesAvion;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cabinaInterior;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool avionGrande;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public ArmaPlayer[] armasAvion;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem explosion1;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem explosion1_2;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem explosion2;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem explosion3;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem explosion4;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem explosion5;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem explosion6;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem explosion7;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool explosionColision;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ControladorAvionPrincipal cap;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ArmaPlayer armaMetralletaD;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ArmaPlayer armaMetralletaL;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public pruebaSonidoOneShot golpeo;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ParticleSystem cambioAvion;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem particulasHojas;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Vector3 posHojasAvionPequeño;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public Vector3 posHojasAvionGrande;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("PowerUps")]
	public bool inmune;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool maxMejorado;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float contadorTiempoInmune;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float contadorTiempoInmunePorDaño;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool puedoDisparar;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool disparoMetralletas;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AvionClon[] avionesClones;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int numClones;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AreaDeJuego areaDeJuego;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool megaBoom;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Enemigo[] enemigosAfectadosMegaBoom;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool parteCambiada;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Animator animator;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ControladorNivel cN;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SonidosAvion sonidos;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool inmunePorDaño;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool inmunePorDios;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	public bool disparoRealizado;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	public bool colisionEnemigo;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool resetearRacha;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int ticks;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject quadHolografico;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject proyeccionHolografica;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Parametros Paracaidas y Portaaviones")]
	[Tooltip("mesh = AvionPequeñoOutside")]
	public GameObject mesh;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Tooltip("meshAvionInside = AvionPequeñoInside")]
	public GameObject meshAvionInside;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Tooltip("paracaidas = paracaidas")]
	public GameObject paracaidas;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Tooltip("manoJugador = playerInput1, palanca = palo")]
	public GameObject palanca;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Tooltip("manoJugador = playerInput1, palanca = palo")]
	public GameObject manoJugador;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[Tooltip("aterrizajePortaaviones = Motor")]
	public pruebaSonidoOneShot aterrizajePortaaviones;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	public bool activarParacaidas;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 ultimaPosParacaidas;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool tpHecho;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float tiempoAterrizajeExitoso;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool aterrizajeFallido;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform posicionPlayerAvion;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Tooltip("Posicion alternativa por si se necesita mas de una, como en el caso de avion grande y avion grande metralleta")]
	public Transform posicionPlayerAvionAlt;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public Vector3 posicionInicialPlayerAvion;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Vector3 posicionInicialPlayerAvionAlt;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[Tooltip("parentExplosiones = Explosiones")]
	public GameObject parentExplosiones;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Tooltip("controladorHumoFuego = Fuego")]
	public ControladorHumoFuego controladorHumoFuego;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[HideInInspector]
	public bool haAterrizado;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private BoxCollider colliderAgua;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject destructorBalasZdi;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject destructorBalasCore;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private ParticleSystemRenderer[] explosion1Render;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private ParticleSystemRenderer[] explosion1_2Render;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private ParticleSystemRenderer[] explosion3Render;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private ParticleSystemRenderer[] explosion4Render;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private ParticleSystemRenderer[] explosion5Render;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private ParticleSystemRenderer[] explosion7Render;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform radar;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Transform padreRadar;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public EfectoDesaparecer efectoDesaparecerRecreativa;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject pSLoopExplosivo;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[HideInInspector]
	public Material materialAvionInicio;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Color emissionColorInicialMaquinaTiempo;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public ControladorDetectoresLimites cDetectorLimites;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[HideInInspector]
	public Vector3 posicionSideView;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	[HideInInspector]
	public Vector3 rotacionSideView;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[HideInInspector]
	public Vector3 posicionBehindView;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	[HideInInspector]
	public Vector3 rotacionBehindView;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public Vector3 posYMeshRecreativaNormal;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[HideInInspector]
	public Vector3 posYMeshRecreativaLateral;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float tiempoInmunidadFallado;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Coroutine corEfectoMorir;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private ParticleSystemRenderMode renderMode;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private int nivelArmaPrincipal;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<ArmaPlayer> armasApagadas;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private ArmaPlayer armaPrincipal;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Coroutine cEfectoMaxMejoras;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public DetectorBalasAvion detectorBala;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float timeEntreChoque;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[Tooltip("escudo = HexagonalSphere")]
	public GameObject escudo;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[HideInInspector]
	public bool haciendoRepostaje;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private Coroutine cEfectoInumune;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float tiempoReparacion;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Coroutine corrutinaReparacion;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[HideInInspector]
	[Header("Animacion Inicial")]
	public Animator salaRecreatviaAnimator;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public float vNivelInicial;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	[HideInInspector]
	public bool enAnimacionInicial;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject portaavionesInicial;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject avionesArmasY;

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x76F0F0", Offset = "0x76F0F0", VA = "0x76F0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x76F19C", Offset = "0x76F19C", VA = "0x76F19C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x76FE3C", Offset = "0x76FE3C", VA = "0x76FE3C")]
	[IteratorStateMachine(typeof(<QuitarCamaraNegra>d__82))]
	private IEnumerator QuitarCamaraNegra()
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x76FCC4", Offset = "0x76FCC4", VA = "0x76FCC4")]
	[IteratorStateMachine(typeof(<EntrarEnZDIAlInicio>d__83))]
	private IEnumerator EntrarEnZDIAlInicio()
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x76FE9C", Offset = "0x76FE9C", VA = "0x76FE9C")]
	public void SetDestructorBalasNivelRapido()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x76FF34", Offset = "0x76FF34", VA = "0x76FF34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x7700CC", Offset = "0x7700CC", VA = "0x7700CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x77092C", Offset = "0x77092C", VA = "0x77092C")]
	public void CambioEntreVistas()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x77108C", Offset = "0x77108C", VA = "0x77108C")]
	[IteratorStateMachine(typeof(<PosicionarNaveDespuesFiligrana>d__94))]
	public IEnumerator PosicionarNaveDespuesFiligrana(Vector3 posicionRespectoTrigger, float velocidadReposicion)
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x771128", Offset = "0x771128", VA = "0x771128")]
	public void HaFalladoDisparo()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x7711A4", Offset = "0x7711A4", VA = "0x7711A4")]
	public void ActivarHojas()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x76FC30", Offset = "0x76FC30", VA = "0x76FC30")]
	public void UpdateHumo(float valor)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x7711D4", Offset = "0x7711D4", VA = "0x7711D4")]
	public void RecibirDano(float danoRecibido)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x7714A0", Offset = "0x7714A0", VA = "0x7714A0")]
	public void Morir()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x772178", Offset = "0x772178", VA = "0x772178")]
	public void VolverAPonerOriginal()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x772104", Offset = "0x772104", VA = "0x772104")]
	[IteratorStateMachine(typeof(<EfectosMorir>d__104))]
	private IEnumerator EfectosMorir()
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x771ED4", Offset = "0x771ED4", VA = "0x771ED4")]
	public void EfectosMorir1raPersona()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x77181C", Offset = "0x77181C", VA = "0x77181C")]
	public void SacarParacaidas()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x7721CC", Offset = "0x7721CC", VA = "0x7721CC")]
	public void ResetParacaidas()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x76FFB4", Offset = "0x76FFB4", VA = "0x76FFB4")]
	private void Disparar()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x7705DC", Offset = "0x7705DC", VA = "0x7705DC")]
	public void MegaBoom()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x7726C8", Offset = "0x7726C8", VA = "0x7726C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x772734", Offset = "0x772734", VA = "0x772734")]
	public void ActualizarNumeroClones()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x76FAF0", Offset = "0x76FAF0", VA = "0x76FAF0")]
	public void SetLvlArmas(bool todoAlMinimo = false)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x772770", Offset = "0x772770", VA = "0x772770")]
	public void SetLvlArmasZdiACero(bool todoAlMinimo = false)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x772B00", Offset = "0x772B00", VA = "0x772B00")]
	public void MaxMejorado(bool estado, float tiempo = 8f)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x772C84", Offset = "0x772C84", VA = "0x772C84")]
	public void MejorarArmaRandom()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x772C00", Offset = "0x772C00", VA = "0x772C00")]
	[IteratorStateMachine(typeof(<EfectoMaxMejoras>d__120))]
	private IEnumerator EfectoMaxMejoras(float tiempoHastaDesvanecer)
	{
		return null;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x772EC4", Offset = "0x772EC4", VA = "0x772EC4")]
	public void animacionLoopZDI()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x7730A0", Offset = "0x7730A0", VA = "0x7730A0")]
	public void animacionFinZDI()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x773188", Offset = "0x773188", VA = "0x773188")]
	[IteratorStateMachine(typeof(<DesactivarControlesAnimacionEntrada>d__123))]
	public IEnumerator DesactivarControlesAnimacionEntrada(float duracionAnimacion)
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x77320C", Offset = "0x77320C", VA = "0x77320C")]
	public void finAnimacionFinZDI()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x77327C", Offset = "0x77327C", VA = "0x77327C")]
	public void finAnimacionLoopZDI()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x7733B4", Offset = "0x7733B4", VA = "0x7733B4")]
	public void TransicionRecreativaAAvionZdi()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x7734E0", Offset = "0x7734E0", VA = "0x7734E0")]
	public void TransicionRecreativaAvion_ApagarRecreativa()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x7735B8", Offset = "0x7735B8", VA = "0x7735B8")]
	public void ApagarMeshEfectoDesaparecerRecreativa()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x77367C", Offset = "0x77367C", VA = "0x77367C")]
	public void HacerEfectoDaño(Vector3 pos)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x77369C", Offset = "0x77369C", VA = "0x77369C")]
	[IteratorStateMachine(typeof(<EfectoDano>d__130))]
	private IEnumerator EfectoDano(Vector3 objetivoPosition)
	{
		return null;
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x773710", Offset = "0x773710", VA = "0x773710")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x7738DC", Offset = "0x7738DC", VA = "0x7738DC")]
	private void RebotarConIsla(Transform isla)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x773DC4", Offset = "0x773DC4", VA = "0x773DC4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x774768", Offset = "0x774768", VA = "0x774768")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x770838", Offset = "0x770838", VA = "0x770838")]
	public void Inmune(bool estado, float tiempo = 6.2f)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x774680", Offset = "0x774680", VA = "0x774680")]
	[IteratorStateMachine(typeof(<ConsiderarAterrizajeExitoso>d__140))]
	private IEnumerator ConsiderarAterrizajeExitoso()
	{
		return null;
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x7746F4", Offset = "0x7746F4", VA = "0x7746F4")]
	[IteratorStateMachine(typeof(<MuertePorAgua>d__141))]
	private IEnumerator MuertePorAgua()
	{
		return null;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x770904", Offset = "0x770904", VA = "0x770904")]
	public void InmunePorDaño(bool estado)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x774920", Offset = "0x774920", VA = "0x774920")]
	[IteratorStateMachine(typeof(<EfectoInmune>d__144))]
	private IEnumerator EfectoInmune(float tiempoHastaDesvanecer)
	{
		return null;
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x7749A4", Offset = "0x7749A4", VA = "0x7749A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x774A2C", Offset = "0x774A2C", VA = "0x774A2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x7749A8", Offset = "0x7749A8", VA = "0x7749A8")]
	private void CalcularTiempoDeReparacion()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x774A58", Offset = "0x774A58", VA = "0x774A58")]
	private void IniciarBucleReparacion()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x774B1C", Offset = "0x774B1C", VA = "0x774B1C")]
	private void Reparar()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x774AA8", Offset = "0x774AA8", VA = "0x774AA8")]
	[IteratorStateMachine(typeof(<BucleDeReparacion>d__152))]
	private IEnumerator BucleDeReparacion()
	{
		return null;
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x76FDB8", Offset = "0x76FDB8", VA = "0x76FDB8")]
	[IteratorStateMachine(typeof(<LoopEnInicio>d__158))]
	private IEnumerator LoopEnInicio(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x76FD38", Offset = "0x76FD38", VA = "0x76FD38")]
	public bool NivelesConBarcos()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x774B48", Offset = "0x774B48", VA = "0x774B48")]
	public AvionJugador()
	{
	}
}
[Token(Token = "0x20001D2")]
public class ColisionadorConTrozosAviones : MonoBehaviour
{
	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x77744C", Offset = "0x77744C", VA = "0x77744C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x7776B4", Offset = "0x7776B4", VA = "0x7776B4")]
	public ColisionadorConTrozosAviones()
	{
	}
}
[Token(Token = "0x20001D3")]
public class MetralletaAvionGrande : ArmaPlayer
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform puntoDeDisparo;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject particulasDisparo;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[EventRef]
	public string rutaEvento1;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EventInstance eventoSonidoDisparo;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 direccionObjetivo;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform objetivoMetralletas;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool enRecarga;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool lado;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	public bool desactivada;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MetralletaAvionGrande hermana;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool puedoDisparar;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float ultimaVezQueDispare;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform scope;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x7776BC", Offset = "0x7776BC", VA = "0x7776BC")]
	public void InicializarSonidoMetralletas()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x7777A4", Offset = "0x7777A4", VA = "0x7777A4")]
	public void FinalizarSonidoMetralletas()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x7777CC", Offset = "0x7777CC", VA = "0x7777CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x77787C", Offset = "0x77787C", VA = "0x77787C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x777A9C", Offset = "0x777A9C", VA = "0x777A9C", Slot = "4")]
	public override void Disparar()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x7781B4", Offset = "0x7781B4", VA = "0x7781B4")]
	public void ReiniciarArma()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x7781D0", Offset = "0x7781D0", VA = "0x7781D0", Slot = "5")]
	public override void GenerarBalas()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x778494", Offset = "0x778494", VA = "0x778494", Slot = "6")]
	public override void RecolocarBala(Proyectil proyectil)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x778520", Offset = "0x778520", VA = "0x778520")]
	public MetralletaAvionGrande()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SonidosAvion : MonoBehaviour
{
	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("SonidoMotor")]
	[EventRef]
	public string rutaMotor;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EventInstance sfxMotor;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform posMotor;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	public string rutaSonidoInterior;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance sfxInterior;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[EventRef]
	public string rutaSonidoPanelCombustible;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventInstance sfxPanelCombustible;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform panelCombustible;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EventRef]
	public string rutaSonidoResultadoZDI;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EventInstance sfxResultadoZDI;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform altavocesPanel;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("variables generales")]
	public float rpmMotor;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float nivelCombustible;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool startCombustible;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int variableAuxSonido;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ControladorAvionPrincipal cap;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool enMetralletas;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool enAterrizaje;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool enLoopingFinal;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform avion;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool controlAvion;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("SonidoDisparo")]
	[EventRef]
	public string rutaSonidoMain;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EventInstance sonidoMain;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform[] posicionMain;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[EventRef]
	public string rutaSonidoSecundariaR;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EventInstance sonidoSecundariaR;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform[] posicionSecundariaR;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[EventRef]
	public string rutaSonidoSecundariaL;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EventInstance sonidoSecundariaL;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform[] posicionSecundariaL;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[EventRef]
	public string rutaSonidoLateral;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EventInstance sonidoLateral;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform[] posicionLateral;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[EventRef]
	public string rutaSonidoV;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private EventInstance sonidoV;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform[] posicionV;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[EventRef]
	public string rutaSonidoClones;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private EventInstance sonidoClones;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform posicionClones;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public StudioListener listener;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public MetralletaAvionGrande metralletaR;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public MetralletaAvionGrande metralletaL;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int aux;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x778528", Offset = "0x778528", VA = "0x778528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x7790FC", Offset = "0x7790FC", VA = "0x7790FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x7791B0", Offset = "0x7791B0", VA = "0x7791B0")]
	public void CambioRPMSonidoMotor()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x778DA8", Offset = "0x778DA8", VA = "0x778DA8")]
	public void ActivarSonidosPeque()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x7794B0", Offset = "0x7794B0", VA = "0x7794B0")]
	public void ActivarSonidosGrande()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x778C94", Offset = "0x778C94", VA = "0x778C94")]
	private void IniciarMotor()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x7785D8", Offset = "0x7785D8", VA = "0x7785D8")]
	private void IniciarSonidoMain()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x778730", Offset = "0x778730", VA = "0x778730")]
	private void IniciarSonidoSecundariaR()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x778888", Offset = "0x778888", VA = "0x778888")]
	private void IniciarSonidoSecundariaL()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x7789E4", Offset = "0x7789E4", VA = "0x7789E4")]
	private void IniciarSonidoLateral()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x778B3C", Offset = "0x778B3C", VA = "0x778B3C")]
	private void IniciarSonidoV()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x7797A4", Offset = "0x7797A4", VA = "0x7797A4")]
	public void IniciarSonidoClones()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x779910", Offset = "0x779910", VA = "0x779910")]
	public void NumeroSonidoClones(int num)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x7799B4", Offset = "0x7799B4", VA = "0x7799B4")]
	public void ResultadoMisiones(int num)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x779324", Offset = "0x779324", VA = "0x779324")]
	public void CambioSonidoCombustible()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x779AB8", Offset = "0x779AB8", VA = "0x779AB8")]
	public void ActivarDisparo(int num)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x779B8C", Offset = "0x779B8C", VA = "0x779B8C")]
	public void DesactivarDisparo(int num)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x779C60", Offset = "0x779C60", VA = "0x779C60")]
	public void PosicionSonidoLateral(bool lado)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x779D5C", Offset = "0x779D5C", VA = "0x779D5C")]
	public void ActivarDesactivarListener(bool estado)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x779D7C", Offset = "0x779D7C", VA = "0x779D7C")]
	public void IniciarSonidoMetralletas()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x779DA4", Offset = "0x779DA4", VA = "0x779DA4")]
	public void FinalizarSonidoMetralletas()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x779E0C", Offset = "0x779E0C", VA = "0x779E0C")]
	public void EstadoNivel(int num)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x779FF8", Offset = "0x779FF8", VA = "0x779FF8")]
	public SonidosAvion()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ponerFechaDeHoy : MonoBehaviour
{
	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x77A000", Offset = "0x77A000", VA = "0x77A000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x77A3A4", Offset = "0x77A3A4", VA = "0x77A3A4")]
	public ponerFechaDeHoy()
	{
	}
}
[Token(Token = "0x20001D6")]
public class ponerFechaDestino : MonoBehaviour
{
	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x77A3AC", Offset = "0x77A3AC", VA = "0x77A3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x77A424", Offset = "0x77A424", VA = "0x77A424")]
	public ponerFechaDestino()
	{
	}
}
[Token(Token = "0x20001D7")]
public class Portaaviones : MonoBehaviour
{
	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textoLandHere;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer sRenderer;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool inicioPendiente;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int ticksSinHacerNada;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x77A42C", Offset = "0x77A42C", VA = "0x77A42C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x77A54C", Offset = "0x77A54C", VA = "0x77A54C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x77AA14", Offset = "0x77AA14", VA = "0x77AA14")]
	public Portaaviones()
	{
	}
}
[Token(Token = "0x20001D8")]
public class posicionarPosiCabeza : MonoBehaviour
{
	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject miPadreOriginal;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x77AA24", Offset = "0x77AA24", VA = "0x77AA24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x77AA64", Offset = "0x77AA64", VA = "0x77AA64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x77AE90", Offset = "0x77AE90", VA = "0x77AE90")]
	public posicionarPosiCabeza()
	{
	}
}
[Token(Token = "0x20001D9")]
public class AvionClon : MonoBehaviour
{
	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int hp;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float hpActual;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform avion;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool posicion;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool seguirAvion;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArmaPlayer arma;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x77AE98", Offset = "0x77AE98", VA = "0x77AE98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x77AEA8", Offset = "0x77AEA8", VA = "0x77AEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x77B15C", Offset = "0x77B15C", VA = "0x77B15C")]
	public void RecibirDano(float danoRecibido)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x77B184", Offset = "0x77B184", VA = "0x77B184")]
	private void Morir()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x77B2CC", Offset = "0x77B2CC", VA = "0x77B2CC")]
	public void Disparar()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x77B2FC", Offset = "0x77B2FC", VA = "0x77B2FC")]
	public void GenerarBalas()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x77B31C", Offset = "0x77B31C", VA = "0x77B31C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x77B52C", Offset = "0x77B52C", VA = "0x77B52C")]
	public AvionClon()
	{
	}
}
[Token(Token = "0x20001DA")]
public class CapBigPlane : PowerUp
{
	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x77B53C", Offset = "0x77B53C", VA = "0x77B53C", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x77B7E0", Offset = "0x77B7E0", VA = "0x77B7E0")]
	public CapBigPlane()
	{
	}
}
[Token(Token = "0x20001DB")]
public class CapClonePlains : PowerUp
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avionesClonesPeque;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject avionesClonesGrande;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AvionClon avionClon;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x77B7F0", Offset = "0x77B7F0", VA = "0x77B7F0", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x77BBF0", Offset = "0x77BBF0", VA = "0x77BBF0")]
	public CapClonePlains()
	{
	}
}
[Token(Token = "0x20001DC")]
public class CapInmune : PowerUp
{
	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x77BBF8", Offset = "0x77BBF8", VA = "0x77BBF8", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x77BD84", Offset = "0x77BD84", VA = "0x77BD84")]
	public CapInmune()
	{
	}
}
[Token(Token = "0x20001DD")]
public class CapMaxMejoras : PowerUp
{
	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x77BD8C", Offset = "0x77BD8C", VA = "0x77BD8C", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x77BF14", Offset = "0x77BF14", VA = "0x77BF14")]
	public CapMaxMejoras()
	{
	}
}
[Token(Token = "0x20001DE")]
public class CapMegaBoom : PowerUp
{
	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pS;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject esfera;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x77BF1C", Offset = "0x77BF1C", VA = "0x77BF1C", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x77C048", Offset = "0x77C048", VA = "0x77C048")]
	public CapMegaBoom()
	{
	}
}
[Token(Token = "0x20001DF")]
public class CapSlowMotion : PowerUp
{
	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mesh;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int playerId;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Player player;

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x77C050", Offset = "0x77C050", VA = "0x77C050", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x77C138", Offset = "0x77C138", VA = "0x77C138", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x77C594", Offset = "0x77C594", VA = "0x77C594", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x77C724", Offset = "0x77C724", VA = "0x77C724")]
	public CapSlowMotion()
	{
	}
}
[Token(Token = "0x20001E0")]
public class CapZonaImersion : PowerUp
{
	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numImersion;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Bus BusEnemigos;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particulaDestruccion;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] objetosAApagar;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject z1;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject z2;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x77C72C", Offset = "0x77C72C", VA = "0x77C72C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x77C900", Offset = "0x77C900", VA = "0x77C900", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x77CAAC", Offset = "0x77CAAC", VA = "0x77CAAC", Slot = "6")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x77CD74", Offset = "0x77CD74", VA = "0x77CD74")]
	public CapZonaImersion()
	{
	}
}
[Token(Token = "0x20001E1")]
public abstract class PowerUp : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	public enum TipoPowerUp
	{
		[Token(Token = "0x4001072")]
		ZDI,
		[Token(Token = "0x4001073")]
		Slow,
		[Token(Token = "0x4001074")]
		BP,
		[Token(Token = "0x4001075")]
		CP,
		[Token(Token = "0x4001076")]
		Inmune,
		[Token(Token = "0x4001077")]
		MB,
		[Token(Token = "0x4001078")]
		MMejoras
	}

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControladorAvionPrincipal cap;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControladorNivel cN;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TipoPowerUp tipo;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool enZDI;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numeroZDI;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool activo;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool visible;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x77C054", Offset = "0x77C054", VA = "0x77C054", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x77C13C", Offset = "0x77C13C", VA = "0x77C13C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x77B6AC", Offset = "0x77B6AC", VA = "0x77B6AC", Slot = "6")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x77CD7C", Offset = "0x77CD7C", VA = "0x77CD7C", Slot = "7")]
	public virtual void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x77B7E8", Offset = "0x77B7E8", VA = "0x77B7E8")]
	protected PowerUp()
	{
	}
}
[Token(Token = "0x20001E3")]
public class Bala : Proyectil
{
	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector2 multiplierMinMax;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float accelerationTimer;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeToAccelerate;

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x77CE20", Offset = "0x77CE20", VA = "0x77CE20", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x77CE64", Offset = "0x77CE64", VA = "0x77CE64", Slot = "5")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x77CFA8", Offset = "0x77CFA8", VA = "0x77CFA8", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x77DAB4", Offset = "0x77DAB4", VA = "0x77DAB4")]
	public Bala()
	{
	}
}
[Token(Token = "0x20001E4")]
public class BalaEscalable : Proyectil
{
	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x77DAFC", Offset = "0x77DAFC", VA = "0x77DAFC", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x77DED4", Offset = "0x77DED4", VA = "0x77DED4")]
	public BalaEscalable()
	{
	}
}
[Token(Token = "0x20001E5")]
public class Mina : Proyectil
{
	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <ApagarCollider>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mina <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x77F554", Offset = "0x77F554", VA = "0x77F554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x77F59C", Offset = "0x77F59C", VA = "0x77F59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x77EA60", Offset = "0x77EA60", VA = "0x77EA60")]
		[DebuggerHidden]
		public <ApagarCollider>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x77F484", Offset = "0x77F484", VA = "0x77F484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x77F488", Offset = "0x77F488", VA = "0x77F488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x77F55C", Offset = "0x77F55C", VA = "0x77F55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SphereCollider sphereCollider;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Collider colliderExplosion;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Collider colliderDetectorProximidad;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float posStartY;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool DeProximidad;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Rigidbody miRb;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject ondaMini;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Coroutine explotarPorProximidadCor;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float cont;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float balanceo;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float velocidadBalanceo;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool haEstadoCerca;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	[HideInInspector]
	public bool explotando;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine apagarCollider;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x77DEEC", Offset = "0x77DEEC", VA = "0x77DEEC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x77DFA4", Offset = "0x77DFA4", VA = "0x77DFA4", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x77E73C", Offset = "0x77E73C", VA = "0x77E73C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x77E748", Offset = "0x77E748", VA = "0x77E748")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x77E7A0", Offset = "0x77E7A0", VA = "0x77E7A0")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x77E9EC", Offset = "0x77E9EC", VA = "0x77E9EC")]
	[IteratorStateMachine(typeof(<ApagarCollider>d__17))]
	private IEnumerator ApagarCollider()
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x77EA88", Offset = "0x77EA88", VA = "0x77EA88", Slot = "7")]
	public override void HacerExplotar()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x77F040", Offset = "0x77F040", VA = "0x77F040")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x77F0D8", Offset = "0x77F0D8", VA = "0x77F0D8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x77F464", Offset = "0x77F464", VA = "0x77F464")]
	public Mina()
	{
	}
}
[Token(Token = "0x20001E7")]
public class MinaDetectorObjetosCercanos : MonoBehaviour
{
	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <DetonarEnXSegundos>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinaDetectorObjetosCercanos <>4__this;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seg;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x77FE10", Offset = "0x77FE10", VA = "0x77FE10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x77FE58", Offset = "0x77FE58", VA = "0x77FE58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x77F980", Offset = "0x77F980", VA = "0x77F980")]
		[DebuggerHidden]
		public <DetonarEnXSegundos>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x77FC58", Offset = "0x77FC58", VA = "0x77FC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x77FC5C", Offset = "0x77FC5C", VA = "0x77FC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x77FE18", Offset = "0x77FE18", VA = "0x77FE18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private sealed class <CambiarColor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinaDetectorObjetosCercanos <>4__this;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x780014", Offset = "0x780014", VA = "0x780014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x78005C", Offset = "0x78005C", VA = "0x78005C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x77FA1C", Offset = "0x77FA1C", VA = "0x77FA1C")]
		[DebuggerHidden]
		public <CambiarColor>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x77FE60", Offset = "0x77FE60", VA = "0x77FE60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x77FE64", Offset = "0x77FE64", VA = "0x77FE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x78001C", Offset = "0x78001C", VA = "0x78001C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool paraExplotarPorProximidad;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mina miMina;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material materialMina;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float segundosCuentaAtras;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EventInstance sonidoCuentaAtras;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x77F5A4", Offset = "0x77F5A4", VA = "0x77F5A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x77F7F8", Offset = "0x77F7F8", VA = "0x77F7F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x77F93C", Offset = "0x77F93C", VA = "0x77F93C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x77F774", Offset = "0x77F774", VA = "0x77F774")]
	[IteratorStateMachine(typeof(<DetonarEnXSegundos>d__8))]
	private IEnumerator DetonarEnXSegundos(float seg)
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x77F9A8", Offset = "0x77F9A8", VA = "0x77F9A8")]
	[IteratorStateMachine(typeof(<CambiarColor>d__9))]
	private IEnumerator CambiarColor()
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x77FA44", Offset = "0x77FA44", VA = "0x77FA44")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x77FA54", Offset = "0x77FA54", VA = "0x77FA54")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x77FC50", Offset = "0x77FC50", VA = "0x77FC50")]
	public MinaDetectorObjetosCercanos()
	{
	}
}
[Token(Token = "0x20001EA")]
public class Misil : Proyectil
{
	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform target;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float giro;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 direccionObjetivo;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject sonido;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public pruebaSonidoOneShot sonidoColision;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Enemigo targetEnemigo;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Torreta targetEnemigoTorreta;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool tieneTarget;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool puedePerderElTarget;

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x780064", Offset = "0x780064", VA = "0x780064", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x780434", Offset = "0x780434", VA = "0x780434")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x78057C", Offset = "0x78057C", VA = "0x78057C")]
	public void SetTarget(Transform t)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x780660", Offset = "0x780660", VA = "0x780660", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x7801B4", Offset = "0x7801B4", VA = "0x7801B4")]
	public Torreta ReturnTransformTorretaActiva(Transform parentObj)
	{
		return null;
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x78110C", Offset = "0x78110C", VA = "0x78110C")]
	public bool ReconoceTiposConTorreta()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x781154", Offset = "0x781154", VA = "0x781154")]
	public Misil()
	{
	}
}
[Token(Token = "0x20001EB")]
public class Proyectil : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	public enum TipoProyectil
	{
		[Token(Token = "0x40010BE")]
		balaTorreta,
		[Token(Token = "0x40010BF")]
		misil,
		[Token(Token = "0x40010C0")]
		balaAvion,
		[Token(Token = "0x40010C1")]
		mina,
		[Token(Token = "0x40010C2")]
		NULL,
		[Token(Token = "0x40010C3")]
		cruzados,
		[Token(Token = "0x40010C4")]
		laser,
		[Token(Token = "0x40010C5")]
		cruzadosLaser,
		[Token(Token = "0x40010C6")]
		Gusano,
		[Token(Token = "0x40010C7")]
		GusanoCruzado
	}

	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <ReposicionarBala>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Proyectil <>4__this;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int tiempoespera;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x782974", Offset = "0x782974", VA = "0x782974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x7829BC", Offset = "0x7829BC", VA = "0x7829BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x782418", Offset = "0x782418", VA = "0x782418")]
		[DebuggerHidden]
		public <ReposicionarBala>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x78282C", Offset = "0x78282C", VA = "0x78282C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x782830", Offset = "0x782830", VA = "0x782830", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x78297C", Offset = "0x78297C", VA = "0x78297C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enemigo;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dano;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform explosionPadre;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool movimiento;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float velocidadActual;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrailRenderer trail;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer mesh;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CapsuleCollider scolider;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool colisionado;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool destruc;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ctimepoVida;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lifetime;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool dePool;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool haHechoSplash;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float velocidadExtraBalaJugador;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool deGusano;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float ticksMirarSiDestruir;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TipoProyectil miTipo;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AvionJugador avion;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ArmaPlayer arma;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected PoolExplosiones.Explosiones particulaExplosion;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 posCorrecta;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool noExplotar;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Enemigo enemigoAQuePasarParticula;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine repBalaCor;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x77CE38", Offset = "0x77CE38", VA = "0x77CE38", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x77CE84", Offset = "0x77CE84", VA = "0x77CE84", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x77D630", Offset = "0x77D630", VA = "0x77D630", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x77817C", Offset = "0x77817C", VA = "0x77817C")]
	public void SetTamaño(float tamaño)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x78116C", Offset = "0x78116C", VA = "0x78116C", Slot = "7")]
	public virtual void HacerExplotar()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x78127C", Offset = "0x78127C", VA = "0x78127C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x781E24", Offset = "0x781E24", VA = "0x781E24")]
	public void ExplotarBala()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x77EC5C", Offset = "0x77EC5C", VA = "0x77EC5C")]
	protected void PlayExplosion(bool arriba, Transform other, bool moverHaciaAtras = false, bool metalica = false)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x781F28", Offset = "0x781F28", VA = "0x781F28")]
	public void PararExplosion()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x782058", Offset = "0x782058", VA = "0x782058")]
	public void PasarExplosionAlEnemigo(Enemigo enem)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x78208C", Offset = "0x78208C", VA = "0x78208C")]
	public void Destruir()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x77E6EC", Offset = "0x77E6EC", VA = "0x77E6EC")]
	public void ReposicionarLaBala(int tiempoespera)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x782394", Offset = "0x782394", VA = "0x782394")]
	[IteratorStateMachine(typeof(<ReposicionarBala>d__38))]
	protected IEnumerator ReposicionarBala(int tiempoespera)
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x782440", Offset = "0x782440", VA = "0x782440")]
	public void RecolocarProyectil()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x782630", Offset = "0x782630", VA = "0x782630")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x7826EC", Offset = "0x7826EC", VA = "0x7826EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x778060", Offset = "0x778060", VA = "0x778060")]
	public void ResetProyectil()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x77DAE4", Offset = "0x77DAE4", VA = "0x77DAE4")]
	public Proyectil()
	{
	}
}
[Token(Token = "0x20001EE")]
public class ProyectilLaser : Proyectil
{
	[Token(Token = "0x20001EF")]
	[CompilerGenerated]
	private sealed class <TiempoApagar>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tiempo;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ProyectilLaser <>4__this;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x784A80", Offset = "0x784A80", VA = "0x784A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x784AC8", Offset = "0x784AC8", VA = "0x784AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x784998", Offset = "0x784998", VA = "0x784998")]
		[DebuggerHidden]
		public <TiempoApagar>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x7849C0", Offset = "0x7849C0", VA = "0x7849C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x7849C4", Offset = "0x7849C4", VA = "0x7849C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x784A88", Offset = "0x784A88", VA = "0x784A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform laser;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float distancia;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem particulasCargando;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem particulasExplosion;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem particulasInicioLaser;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ParticleSystem particulasFinalLaser;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform puntoParticulasFinales;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int layerDefault;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int layerGround;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int layerEscudo;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private EventInstance sfxLaser;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool haciendoLerpEntrada;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool reproduciendoParticulasEntrada;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float tDelta;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool apagar;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float zAlApagar;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public float multiplicadorTiempoCarga;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int ticks;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LayerMask layerMask;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool raycastDetectando;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider colliderRaycast;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private RaycastHit hitInfo;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float detectandoEscudo;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float velocidadLerpVueltaANormalidad;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float velocidadLerpRecogerse;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float distAnterior;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Coroutine apagarCor;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x7829C4", Offset = "0x7829C4", VA = "0x7829C4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x782AAC", Offset = "0x782AAC", VA = "0x782AAC", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x783454", Offset = "0x783454", VA = "0x783454")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x783460", Offset = "0x783460", VA = "0x783460")]
	public void Init()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x783600", Offset = "0x783600", VA = "0x783600")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x78369C", Offset = "0x78369C", VA = "0x78369C")]
	public void Apagar()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x7836DC", Offset = "0x7836DC", VA = "0x7836DC")]
	public void Encender(float tiempoDuracion)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x7838B4", Offset = "0x7838B4", VA = "0x7838B4")]
	[IteratorStateMachine(typeof(<TiempoApagar>d__34))]
	private IEnumerator TiempoApagar(float tiempo)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x783938", Offset = "0x783938", VA = "0x783938")]
	public void IgnorarColisionCon(Collider otherCol)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x78393C", Offset = "0x78393C", VA = "0x78393C")]
	public ProyectilLaser()
	{
	}
}
[Token(Token = "0x20001F0")]
public class pruebaSnapshot : MonoBehaviour
{
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string rutaEvento1;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EventInstance Motor;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string rutaSnapshot1;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EventInstance Snapshot;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EventRef]
	public string rutaSnapshot2;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EventInstance Snapshot2;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x784AD0", Offset = "0x784AD0", VA = "0x784AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x784CB4", Offset = "0x784CB4", VA = "0x784CB4")]
	public pruebaSnapshot()
	{
	}
}
[Token(Token = "0x20001F1")]
public class pruebaSonidoOneShot : MonoBehaviour
{
	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string eventoEnCuestion;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x784CBC", Offset = "0x784CBC", VA = "0x784CBC")]
	public void PlaySonido(Transform posicion)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x784DAC", Offset = "0x784DAC", VA = "0x784DAC")]
	public pruebaSonidoOneShot()
	{
	}
}
[Token(Token = "0x20001F2")]
public class PruebaSonidoOneShotVoidstart : MonoBehaviour
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string splashSound;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x784DB4", Offset = "0x784DB4", VA = "0x784DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x784E54", Offset = "0x784E54", VA = "0x784E54")]
	public PruebaSonidoOneShotVoidstart()
	{
	}
}
[Token(Token = "0x20001F3")]
public class RotarObjeto : MonoBehaviour
{
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedX;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedY;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedZ;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float miXInicial;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scaleSpeed;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool creciente;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float escala;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x784EAC", Offset = "0x784EAC", VA = "0x784EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x784ED8", Offset = "0x784ED8", VA = "0x784ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x785050", Offset = "0x785050", VA = "0x785050")]
	public RotarObjeto()
	{
	}
}
[Token(Token = "0x20001F4")]
public class ShowFPS : MonoBehaviour
{
	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaTime;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x785058", Offset = "0x785058", VA = "0x785058")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x7850E8", Offset = "0x7850E8", VA = "0x7850E8")]
	public ShowFPS()
	{
	}
}
[Token(Token = "0x20001F5")]
public class SpawnerMonedas : MonoBehaviour
{
	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool activadas;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x7850F0", Offset = "0x7850F0", VA = "0x7850F0")]
	public void ActivarMonedas()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x785228", Offset = "0x785228", VA = "0x785228")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x78527C", Offset = "0x78527C", VA = "0x78527C")]
	public SpawnerMonedas()
	{
	}
}
[Token(Token = "0x20001F6")]
public class tomarFoto : MonoBehaviour
{
	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camaraFotos;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x785284", Offset = "0x785284", VA = "0x785284")]
	public static void SimpleCaptureTransparentScreenshot(Camera cam, int width, int height, string screengrabfile_path)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x785648", Offset = "0x785648", VA = "0x785648")]
	public tomarFoto()
	{
	}
}
[Token(Token = "0x20001F7")]
public class TriggerDeNivel : MonoBehaviour
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Comportamiento del Trigger [-1000 para que no se active dicha opción]")]
	public bool alEntrar;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool alSalir;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Parametros de Entrada")]
	public int tipoDeVistaEntrada;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float velocidadCoreEntrada;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Para que se aplique no debe haber ningun campo del vector3 en '-1000'")]
	public Vector3 tamanoColliderBalasEntrada;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool seguirAvionEnXEntrada;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool seguirAvionEnYEntrada;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Parametros de Salida")]
	public int tipoDeVistaSalida;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float velocidadCoreSalida;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Para que se aplique no debe haber ningun campo del vector3 en '-1000'")]
	public Vector3 tamanoColliderBalasSalida;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool seguirAvionEnXSalida;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool seguirAvionEnYSalida;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x785650", Offset = "0x785650", VA = "0x785650")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x785908", Offset = "0x785908", VA = "0x785908")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x785BC0", Offset = "0x785BC0", VA = "0x785BC0")]
	public TriggerDeNivel()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Utils
{
	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x785BE4", Offset = "0x785BE4", VA = "0x785BE4")]
	public static Vector3 NormalizacionDeVector(Vector3 vectorANormalizar)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x785C84", Offset = "0x785C84", VA = "0x785C84")]
	public static void RecolocarCabeza(Vector3 posicionDeseada, Quaternion rotacionDeseada, Transform zonaDeJuego, Transform cabeza, bool sinRotar = false, bool rotSoloEnX = false)
	{
	}
}
[Token(Token = "0x20001F9")]
[HelpURL("https://nvjob.github.io/unity/nvjob-dynamic-sky-lite")]
[AddComponentMenu("#NVJOB/Dynamic Sky (for Demo)")]
[ExecuteInEditMode]
public class DynamicSkyForDemo : MonoBehaviour
{
	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ssgUvRotateSpeed;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ssgUvRotateDistance;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 ssgVector;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tr;

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x7860B4", Offset = "0x7860B4", VA = "0x7860B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x78611C", Offset = "0x78611C", VA = "0x78611C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x786310", Offset = "0x786310", VA = "0x786310")]
	public DynamicSkyForDemo()
	{
	}
}
[Token(Token = "0x20001FA")]
public class Lighthouse : MonoBehaviour
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform tr;

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x786320", Offset = "0x786320", VA = "0x786320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x786344", Offset = "0x786344", VA = "0x786344")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x7863D4", Offset = "0x7863D4", VA = "0x7863D4")]
	public Lighthouse()
	{
	}
}
[Token(Token = "0x20001FB")]
[AddComponentMenu("#NVJOB/Tools/TDControl")]
public class TDControl : MonoBehaviour
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyKeyboard;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Rotation Settings")]
	public float rotationSpeed;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 mouseVerticaleClamp;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothMouse;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Lift Settings")]
	public bool liftOn;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 liftClamp;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float smoothLift;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Camera Settings")]
	public Transform camTransform;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 camClamp;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float smoothCam;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tr;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 rotationStart;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 positionStart;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 cameraStart;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 velocity;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 target;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float mouseX;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float mouseY;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float upCh;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float upChCur;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float upChVel;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float camhVel;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float camCh;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float camChCur;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x7863DC", Offset = "0x7863DC", VA = "0x7863DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x78645C", Offset = "0x78645C", VA = "0x78645C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x786494", Offset = "0x786494", VA = "0x786494")]
	private void Rotation()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x7867A4", Offset = "0x7867A4", VA = "0x7867A4")]
	private void Lift()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x7866F0", Offset = "0x7866F0", VA = "0x7866F0")]
	private void CameraTransform()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x786898", Offset = "0x786898", VA = "0x786898")]
	public TDControl()
	{
	}
}
[Token(Token = "0x20001FC")]
[ExecuteInEditMode]
[HelpURL("https://nvjob.github.io/unity/nvjob-simple-water-shaders")]
[AddComponentMenu("#NVJOB/Simple Water Shaders")]
public class SimpleWaterShaders : MonoBehaviour
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float UvRotateSpeed;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float UvRotateDistance;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float UvBumpRotateSpeed;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float UvBumpRotateDistance;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool depthTextureModeOn;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool waterSyncWind;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform windZone;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 direccionViento;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 lwVector;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lwNVector;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject windFlag;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer mesh;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x7868D8", Offset = "0x7868D8", VA = "0x7868D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x786A40", Offset = "0x786A40", VA = "0x786A40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x786A98", Offset = "0x786A98", VA = "0x786A98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x786F58", Offset = "0x786F58", VA = "0x786F58")]
	public SimpleWaterShaders()
	{
	}
}
[Token(Token = "0x20001FD")]
public class SpashManager : MonoBehaviour
{
	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerNormal;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerPico;

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x786F74", Offset = "0x786F74", VA = "0x786F74")]
	public SpashManager()
	{
	}
}
[Token(Token = "0x20001FE")]
public class CargarLeaderboardsSteam : MonoBehaviour
{
	[Token(Token = "0x20001FF")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CargarLeaderboardsSteam <>4__this;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x787880", Offset = "0x787880", VA = "0x787880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x7878C8", Offset = "0x7878C8", VA = "0x7878C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x786FF0", Offset = "0x786FF0", VA = "0x786FF0")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x787654", Offset = "0x787654", VA = "0x787654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x787658", Offset = "0x787658", VA = "0x787658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x787888", Offset = "0x787888", VA = "0x787888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string[] mundos;

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x786F7C", Offset = "0x786F7C", VA = "0x786F7C")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x787018", Offset = "0x787018", VA = "0x787018")]
	public CargarLeaderboardsSteam()
	{
	}
}
[Token(Token = "0x2000200")]
public class IGSteamManager : LogrosRecords
{
	[Token(Token = "0x2000201")]
	private struct Operacion
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TipoOperacion tipoOperacion;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public TipoDatos tipoDatos;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OrdenTabla orden;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int record;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tabla;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numeroResultadosQueQuiero;
	}

	[Token(Token = "0x2000202")]
	private enum TipoOperacion
	{
		[Token(Token = "0x4001142")]
		buscarTabla,
		[Token(Token = "0x4001143")]
		buscarCrearTabla,
		[Token(Token = "0x4001144")]
		obtenerResultados,
		[Token(Token = "0x4001145")]
		subirRecord,
		[Token(Token = "0x4001146")]
		obtenerUserStats,
		[Token(Token = "0x4001147")]
		GrabarUserStats
	}

	[Token(Token = "0x2000203")]
	public enum TipoDatos
	{
		[Token(Token = "0x4001149")]
		top,
		[Token(Token = "0x400114A")]
		alrededorMio
	}

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Operacion> operacionesPendientes;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x7878D0", Offset = "0x7878D0", VA = "0x7878D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x78797C", Offset = "0x78797C", VA = "0x78797C", Slot = "7")]
	public override void InicializarTablas(List<InfoTabla> tablas)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x787980", Offset = "0x787980", VA = "0x787980", Slot = "8")]
	public override void ObtenerResultadosAlrededorMioConTop(string tabla, int resultadosQueQuiero, bool esEvento, long record = -1L)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x787984", Offset = "0x787984", VA = "0x787984", Slot = "9")]
	public override void SubirRecord(string tabla, int record)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x787988", Offset = "0x787988", VA = "0x787988", Slot = "10")]
	public override void MarcarLogroCompletado(string idLogro)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x78798C", Offset = "0x78798C", VA = "0x78798C", Slot = "12")]
	public override void ComprobarYDarLogroPlatino()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x787990", Offset = "0x787990", VA = "0x787990", Slot = "11")]
	public override string DameMiNombre()
	{
		return null;
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x7879D0", Offset = "0x7879D0", VA = "0x7879D0")]
	public IGSteamManager()
	{
	}
}
[Token(Token = "0x2000204")]
public class TriggerAnimation : MonoBehaviour
{
	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation animation;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x7879D8", Offset = "0x7879D8", VA = "0x7879D8", Slot = "4")]
	public virtual void OnPlayerTrigger()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x787A14", Offset = "0x787A14", VA = "0x787A14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x787AAC", Offset = "0x787AAC", VA = "0x787AAC")]
	public TriggerAnimation()
	{
	}
}
[Token(Token = "0x2000205")]
public class TriggerAutoMovimientoProvisional : MonoBehaviour
{
	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoMovimientoProvisional MovimientoObjeto;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AutoMovimientoProvisional MovimientoObjeto2;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrupoObjeto;

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x787AB4", Offset = "0x787AB4", VA = "0x787AB4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x787C38", Offset = "0x787C38", VA = "0x787C38")]
	public TriggerAutoMovimientoProvisional()
	{
	}
}
namespace MK.Glow
{
	[Token(Token = "0x2000206")]
	internal abstract class CameraData
	{
		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int width;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int height;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal bool stereoEnabled;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float aspect;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Matrix4x4 worldToCameraMatrix;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x787C40", Offset = "0x787C40", VA = "0x787C40")]
		protected CameraData()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public enum Workflow
	{
		[Token(Token = "0x4001155")]
		Threshold,
		[Token(Token = "0x4001156")]
		Selective,
		[Token(Token = "0x4001157")]
		Natural
	}
	[Token(Token = "0x2000208")]
	public enum AntiFlickerMode
	{
		[Token(Token = "0x4001159")]
		Balanced,
		[Token(Token = "0x400115A")]
		Strong
	}
	[Token(Token = "0x2000209")]
	public enum Quality
	{
		[Token(Token = "0x400115C")]
		Ultra = 1,
		[Token(Token = "0x400115D")]
		High = 2,
		[Token(Token = "0x400115E")]
		Medium = 4,
		[Token(Token = "0x400115F")]
		Low = 8,
		[Token(Token = "0x4001160")]
		VeryLow = 12
	}
	[Token(Token = "0x200020A")]
	public enum DebugView
	{
		[Token(Token = "0x4001162")]
		None,
		[Token(Token = "0x4001163")]
		RawBloom,
		[Token(Token = "0x4001164")]
		RawLensFlare,
		[Token(Token = "0x4001165")]
		RawGlare,
		[Token(Token = "0x4001166")]
		Bloom,
		[Token(Token = "0x4001167")]
		LensFlare,
		[Token(Token = "0x4001168")]
		Glare,
		[Token(Token = "0x4001169")]
		Composite
	}
	[Token(Token = "0x200020B")]
	public enum RenderPriority
	{
		[Token(Token = "0x400116B")]
		Quality,
		[Token(Token = "0x400116C")]
		Balanced,
		[Token(Token = "0x400116D")]
		Performance
	}
	[Token(Token = "0x200020C")]
	public enum LensFlareStyle
	{
		[Token(Token = "0x400116F")]
		Custom,
		[Token(Token = "0x4001170")]
		Average,
		[Token(Token = "0x4001171")]
		MultiAverage,
		[Token(Token = "0x4001172")]
		Old,
		[Token(Token = "0x4001173")]
		OldFocused,
		[Token(Token = "0x4001174")]
		Distorted
	}
	[Token(Token = "0x200020D")]
	public enum GlareStyle
	{
		[Token(Token = "0x4001176")]
		Custom,
		[Token(Token = "0x4001177")]
		Line,
		[Token(Token = "0x4001178")]
		Tri,
		[Token(Token = "0x4001179")]
		Cross,
		[Token(Token = "0x400117A")]
		DistortedCross,
		[Token(Token = "0x400117B")]
		Star,
		[Token(Token = "0x400117C")]
		Flake
	}
	[Token(Token = "0x200020E")]
	internal struct RenderDimension
	{
		[Token(Token = "0x1700015A")]
		public int width
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x787CB8", Offset = "0x787CB8", VA = "0x787CB8", Slot = "4")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x787CC0", Offset = "0x787CC0", VA = "0x787CC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public int height
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x787CC8", Offset = "0x787CC8", VA = "0x787CC8", Slot = "5")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x787CD0", Offset = "0x787CD0", VA = "0x787CD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x787CB0", Offset = "0x787CB0", VA = "0x787CB0")]
		public RenderDimension(int width, int height)
		{
		}
	}
	[Token(Token = "0x200020F")]
	internal enum RenderPipeline
	{
		[Token(Token = "0x4001180")]
		Legacy,
		[Token(Token = "0x4001181")]
		SRP
	}
	[Token(Token = "0x2000210")]
	public static class Compatibility
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool _defaultHDRFormatSupported;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static readonly bool _11R11G10BFormatSupported;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private static readonly bool _2A10R10G10BFormatSupported;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public static readonly bool IsSupported;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x787CD8", Offset = "0x787CD8", VA = "0x787CD8")]
		public static bool CheckGeometryShaderSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x787D38", Offset = "0x787D38", VA = "0x787D38")]
		public static bool CheckLensFlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x787E30", Offset = "0x787E30", VA = "0x787E30")]
		public static bool CheckGlareFeatureSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x787EE0", Offset = "0x787EE0", VA = "0x787EE0")]
		internal static RenderTextureFormat CheckSupportedRenderTextureFormat()
		{
			return default(RenderTextureFormat);
		}
	}
	[Token(Token = "0x2000211")]
	internal sealed class ComputeShaderVariants
	{
		[Token(Token = "0x2000212")]
		internal struct KeywordState
		{
			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int bloom;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int lensSurface;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lensFlare;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int glare;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int natural;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int renderPriority;

			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0x788238", Offset = "0x788238", VA = "0x788238")]
			public KeywordState(int bloom, int lensSurface, int lensFlare, int glare, int natural, int renderPriority)
			{
			}
		}

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<KeywordState, int> variants;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x788038", Offset = "0x788038", VA = "0x788038")]
		internal void GetVariantNumber(KeywordState features, out int index)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x7880CC", Offset = "0x7880CC", VA = "0x7880CC")]
		public ComputeShaderVariants(int offset)
		{
		}
	}
	[Token(Token = "0x2000213")]
	internal sealed class Effect
	{
		[Token(Token = "0x2000214")]
		internal enum MaterialKeywords
		{
			[Token(Token = "0x40011CE")]
			Bloom,
			[Token(Token = "0x40011CF")]
			LensSurface,
			[Token(Token = "0x40011D0")]
			LensFlare,
			[Token(Token = "0x40011D1")]
			Glare1,
			[Token(Token = "0x40011D2")]
			DebugRawBloom,
			[Token(Token = "0x40011D3")]
			DebugRawLensFlare,
			[Token(Token = "0x40011D4")]
			DebugRawGlare,
			[Token(Token = "0x40011D5")]
			DebugBloom,
			[Token(Token = "0x40011D6")]
			DebugLensFlare,
			[Token(Token = "0x40011D7")]
			DebugGlare,
			[Token(Token = "0x40011D8")]
			DebugComposite,
			[Token(Token = "0x40011D9")]
			LegacyBlit,
			[Token(Token = "0x40011DA")]
			RenderPriorityQuality,
			[Token(Token = "0x40011DB")]
			Natural,
			[Token(Token = "0x40011DC")]
			Glare2,
			[Token(Token = "0x40011DD")]
			Glare3,
			[Token(Token = "0x40011DE")]
			Glare4,
			[Token(Token = "0x40011DF")]
			Null,
			[Token(Token = "0x40011E0")]
			RenderPriorityBalanced,
			[Token(Token = "0x40011E1")]
			HQAntiFlickerFilter
		}

		[Token(Token = "0x2000215")]
		internal struct Keyword
		{
			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string name;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal bool enabled;

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x7889E4", Offset = "0x7889E4", VA = "0x7889E4")]
			internal Keyword(string name, bool enabled)
			{
			}
		}

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resources _resources;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2 _referenceResolution;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly float _referenceAspectRatio;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly Vector2 _selectiveWorkflowThreshold;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _cArgBufferSize;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _glareIterationsBase;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly RenderDimension _directComputeSize;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly float naturalIntensityMult;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly string _selectiveReplacementTag;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly string _selectiveGlowCameraObjectName;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _selectiveGlowCameraObject;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera _selectiveGlowCamera;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShaderVariants _presampleComputeVariants;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeShaderVariants _downsampleComputeVariants;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ComputeShaderVariants _upsampleComputeVariants;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CommandBuffer _commandBuffer;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _finalBlit;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTarget _selectiveRenderTarget;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MipBuffer _bloomDownsampleBuffer;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MipBuffer _bloomUpsampleBuffer;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MipBuffer _lensFlareDownsampleBuffer;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MipBuffer _lensFlareUpsampleBuffer;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MipBuffer _glareDownsampleBuffer0;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MipBuffer _glareDownsampleBuffer1;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MipBuffer _glareDownsampleBuffer2;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MipBuffer _glareDownsampleBuffer3;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MipBuffer _glareUpsampleBuffer0;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MipBuffer _glareUpsampleBuffer1;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private MipBuffer _glareUpsampleBuffer2;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MipBuffer _glareUpsampleBuffer3;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTarget _sourceFrameBuffer;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTarget _destinationFrameBuffer;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Keyword[] _shaderKeywords;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _useGeometryShaders;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool _useComputeShaders;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool _useLensSurface;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		private bool _useLensFlare;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool _useGlare;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<RenderTarget> _renderTargetsBundle;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<MaterialKeywords> _renderKeywordsBundle;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int _bloomIterations;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int _lensFlareIterations;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int _minIterations;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int _glareIterations;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int _currentRenderIndex;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float bloomUpsampleSpread;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float _lensFlareUpsampleSpread;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float _glareScatteringMult;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector2 _resolutionScale;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector2[] glareAngles;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RenderTextureFormat _renderTextureFormat;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private ComputeShaderVariants.KeywordState computeShaderFeatures;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private RenderContext[] _sourceContext;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private RenderContext[] _renderContext;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private RenderContext _selectiveRenderContext;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Camera _renderingCamera;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private CameraData _cameraData;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private RenderPipeline _renderPipeline;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Material _renderMaterialNoGeometry;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Material _renderMaterialGeometry;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float[] _cArgArray;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ComputeBuffer _cArgsComputeBuffer;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private RenderDimension _computeThreadGroups;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Settings _settings;

		[Token(Token = "0x1700015C")]
		private RenderTarget sourceFrameBuffer
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x788A0C", Offset = "0x788A0C", VA = "0x788A0C")]
			get
			{
				return default(RenderTarget);
			}
		}

		[Token(Token = "0x1700015D")]
		internal int currentRenderIndex
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x788A5C", Offset = "0x788A5C", VA = "0x788A5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015E")]
		internal Material renderMaterialNoGeometry
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x788A64", Offset = "0x788A64", VA = "0x788A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private GameObject selectiveGlowCameraObject
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x789E20", Offset = "0x789E20", VA = "0x789E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private Camera selectiveGlowCamera
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x789F34", Offset = "0x789F34", VA = "0x789F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x788248", Offset = "0x788248", VA = "0x788248")]
		internal Effect()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x788A6C", Offset = "0x788A6C", VA = "0x788A6C")]
		internal void Enable(RenderPipeline renderPipeline, [Optional] Shader shaderOverwrite, [Optional] Shader shaderGeometryOverwrite)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x7895C4", Offset = "0x7895C4", VA = "0x7895C4", Slot = "1")]
		~Effect()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x789664", Offset = "0x789664", VA = "0x789664")]
		internal void Disable()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x789744", Offset = "0x789744", VA = "0x789744")]
		private void PrepareScattering(float Scattering, float scale, ref int iterations, ref float spread)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x78980C", Offset = "0x78980C", VA = "0x78980C")]
		private void UpdateRenderBuffers()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x78A010", Offset = "0x78A010", VA = "0x78A010")]
		private void SetupSelectiveGlowCamera()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x78A12C", Offset = "0x78A12C", VA = "0x78A12C")]
		private void CheckFeatureSupport()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x78A264", Offset = "0x78A264", VA = "0x78A264")]
		private void BeginProfileSample(string text)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x78A294", Offset = "0x78A294", VA = "0x78A294")]
		private void EndProfileSample(string text)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x78A2C4", Offset = "0x78A2C4", VA = "0x78A2C4")]
		internal void Build(RenderTarget source, RenderTarget destination, Settings settings, CommandBuffer cmd, CameraData cameraData, [Optional] Camera renderingCamera, bool finalBlit = true)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x78A64C", Offset = "0x78A64C", VA = "0x78A64C")]
		private void UpdateConstantBuffers()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x78F68C", Offset = "0x78F68C", VA = "0x78F68C")]
		private void SetKeyword(MaterialKeywords keyword, bool enable)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x78F664", Offset = "0x78F664", VA = "0x78F664")]
		private Vector2 AngleToDirection(float angleDegree)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x78F4AC", Offset = "0x78F4AC", VA = "0x78F4AC")]
		private float ConvertGammaValue(float gammaSpacedValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x78F598", Offset = "0x78F598", VA = "0x78F598")]
		private Vector4 ConvertGammaValue(Vector4 gammaSpacedVector)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x78F770", Offset = "0x78F770", VA = "0x78F770")]
		private void UpdateComputeShaderThreadGroups(RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x78F8A4", Offset = "0x78F8A4", VA = "0x78F8A4")]
		private void UpdateRenderIndex(int v)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x78F8AC", Offset = "0x78F8AC", VA = "0x78F8AC")]
		private void UpdateRenderIndex(ComputeShaderVariants variants, ComputeShaderVariants.KeywordState features)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x78F8FC", Offset = "0x78F8FC", VA = "0x78F8FC")]
		private void AttachCArgBufferToComputeKernel()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x78F370", Offset = "0x78F370", VA = "0x78F370")]
		private void SetFloat(PipelineProperties.ShaderProperties.CBufferProperty property, float value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x78F3F0", Offset = "0x78F3F0", VA = "0x78F3F0")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector4 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x78F4E8", Offset = "0x78F4E8", VA = "0x78F4E8")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector3 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x78F29C", Offset = "0x78F29C", VA = "0x78F29C")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector2 value, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x78FA9C", Offset = "0x78FA9C", VA = "0x78FA9C")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, RenderTarget rt, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x78FCB4", Offset = "0x78FCB4", VA = "0x78FCB4")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, Texture tex, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x78FEBC", Offset = "0x78FEBC", VA = "0x78FEBC")]
		private void PrepareDraw(int variant, RenderDimension renderDimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x790224", Offset = "0x790224", VA = "0x790224")]
		private void PrepareDraw(int materialPass, ComputeShaderVariants variants, bool enableBloom, bool enableLensflare, bool enableGlare, RenderDimension renderDimension)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x79045C", Offset = "0x79045C", VA = "0x79045C")]
		private void Draw(RenderDimension dimension, bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x7909EC", Offset = "0x7909EC", VA = "0x7909EC")]
		private MaterialKeywords GetGlareKeyword(int streaks)
		{
			return default(MaterialKeywords);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x79016C", Offset = "0x79016C", VA = "0x79016C")]
		private void DisableRenderKeywords()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x790A10", Offset = "0x790A10", VA = "0x790A10")]
		private void DisableDebugKeywords()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x790060", Offset = "0x790060", VA = "0x790060")]
		private void SetRenderPriority()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x78B4C4", Offset = "0x78B4C4", VA = "0x78B4C4")]
		private void PreSample()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x78C210", Offset = "0x78C210", VA = "0x78C210")]
		private void Downsample()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x78D0B4", Offset = "0x78D0B4", VA = "0x78D0B4")]
		private void Upsample()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x78E48C", Offset = "0x78E48C", VA = "0x78E48C")]
		private void Composite()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x790C14", Offset = "0x790C14", VA = "0x790C14")]
		internal void AfterCompositeCleanup()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minLimit;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxLimit;

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x790E38", Offset = "0x790E38", VA = "0x790E38")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public struct MinMaxRange
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minValue;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxValue;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x790E64", Offset = "0x790E64", VA = "0x790E64")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x2000218")]
	internal sealed class MipBuffer
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTarget[] _renderTargets;

		[Token(Token = "0x17000161")]
		internal RenderTarget[] renderTargets
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x790E6C", Offset = "0x790E6C", VA = "0x790E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x789388", Offset = "0x789388", VA = "0x789388")]
		public MipBuffer(string name, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x790A88", Offset = "0x790A88", VA = "0x790A88")]
		internal void CreateTemporary(RenderContext[] renderContext, int level, CommandBuffer cmd, RenderTextureFormat format, bool useComputeShaders, RenderPipeline renderPipeline)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x790BAC", Offset = "0x790BAC", VA = "0x790BAC")]
		internal void ClearTemporary(CommandBuffer cmd, int level, RenderPipeline renderPipeline)
		{
		}
	}
	[Token(Token = "0x2000219")]
	internal static class PipelineExtensions
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _screenMesh;

		[Token(Token = "0x17000162")]
		private static Mesh screenMesh
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0x790EB4", Offset = "0x790EB4", VA = "0x790EB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x78F73C", Offset = "0x78F73C", VA = "0x78F73C")]
		internal static void SetKeyword(this CommandBuffer cmd, string keyword, bool enable)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x78F75C", Offset = "0x78F75C", VA = "0x78F75C")]
		internal static void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x790674", Offset = "0x790674", VA = "0x790674")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass, Rect viewport)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x790838", Offset = "0x790838", VA = "0x790838")]
		internal static void Draw(List<RenderTarget> destinations, Material material, bool useGeometryShader, int pass)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x790648", Offset = "0x790648", VA = "0x790648")]
		internal static void Draw(this CommandBuffer cmd, List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x79080C", Offset = "0x79080C", VA = "0x79080C")]
		internal static void Draw(List<RenderTarget> destinations, ComputeShader computeShader, int kernelIndex, RenderDimension computeThreadGroups)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x7916B8", Offset = "0x7916B8", VA = "0x7916B8")]
		private static int SinglePassStereoDownscale(bool cameraIsStereo, int size, int scale)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x789D4C", Offset = "0x789D4C", VA = "0x789D4C")]
		internal static void UpdateMipRenderContext(this CameraData cameraData, RenderContext[] renderContexts, RenderDimension rawDimension, int levels, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x790E74", Offset = "0x790E74", VA = "0x790E74")]
		internal static RenderTexture GetTemporary(RenderContext renderContext, RenderTextureFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	internal static class PipelineProperties
	{
		[Token(Token = "0x200021B")]
		internal static class ShaderProperties
		{
			[Token(Token = "0x200021C")]
			internal class DefaultProperty
			{
				[Token(Token = "0x4001219")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				protected string _name;

				[Token(Token = "0x400121A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				protected int _id;

				[Token(Token = "0x17000166")]
				internal int id
				{
					[Token(Token = "0x6000B51")]
					[Address(RVA = "0x79258C", Offset = "0x79258C", VA = "0x79258C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000B52")]
				[Address(RVA = "0x792548", Offset = "0x792548", VA = "0x792548")]
				internal DefaultProperty(string name)
				{
				}
			}

			[Token(Token = "0x200021D")]
			internal sealed class CBufferProperty : DefaultProperty
			{
				[Token(Token = "0x400121B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int _index;

				[Token(Token = "0x400121C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int _size;

				[Token(Token = "0x17000167")]
				internal int index
				{
					[Token(Token = "0x6000B53")]
					[Address(RVA = "0x792594", Offset = "0x792594", VA = "0x792594")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000B54")]
				[Address(RVA = "0x7924BC", Offset = "0x7924BC", VA = "0x7924BC")]
				internal CBufferProperty(string name, int index, int size)
				{
				}
			}

			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly CBufferProperty screenSize;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly CBufferProperty singlePassStereoScale;

			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly CBufferProperty viewMatrix;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly DefaultProperty cArgBuffer;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly DefaultProperty sourceTex;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly DefaultProperty targetTex;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly DefaultProperty copyTargetTex;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly DefaultProperty bloomTex;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly DefaultProperty bloomTargetTex;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly CBufferProperty bloomSpread;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly CBufferProperty bloomThreshold;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly CBufferProperty lumaScale;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly CBufferProperty bloomIntensity;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly CBufferProperty blooming;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly DefaultProperty higherMipBloomTex;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly CBufferProperty resolutionScale;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly CBufferProperty renderTargetSize;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly DefaultProperty lensSurfaceDirtTex;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly DefaultProperty lensSurfaceDiffractionTex;

			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly CBufferProperty lensSurfaceDirtIntensity;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly CBufferProperty lensSurfaceDiffractionIntensity;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly CBufferProperty lensSurfaceDirtTexST;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			internal static readonly CBufferProperty lensFlareThreshold;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			internal static readonly CBufferProperty lensFlareGhostParams;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal static readonly CBufferProperty lensFlareHaloParams;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			internal static readonly DefaultProperty lensFlareTex;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal static readonly DefaultProperty lensFlareTargetTex;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			internal static readonly CBufferProperty lensFlareSpread;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			internal static readonly CBufferProperty lensFlareChromaticAberration;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			internal static readonly DefaultProperty lensFlareColorRamp;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			internal static readonly CBufferProperty glareThreshold;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			internal static readonly CBufferProperty glareBlend;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			internal static readonly CBufferProperty glareGlobalIntensity;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			internal static readonly CBufferProperty glareIntensity;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			internal static readonly CBufferProperty glareScattering;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			internal static readonly CBufferProperty glareDirection01;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			internal static readonly CBufferProperty glareDirection23;

			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			internal static readonly CBufferProperty glareOffset;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			internal static readonly DefaultProperty glare0Tex;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			internal static readonly DefaultProperty glare0TargetTex;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			internal static readonly DefaultProperty glare1Tex;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			internal static readonly DefaultProperty glare1TargetTex;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			internal static readonly DefaultProperty glare2Tex;

			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			internal static readonly DefaultProperty glare2TargetTex;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			internal static readonly DefaultProperty glare3Tex;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			internal static readonly DefaultProperty glare3TargetTex;
		}

		[Token(Token = "0x200021E")]
		internal static class CommandBufferProperties
		{
			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string commandBufferName;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly string selectiveRenderBuffer;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly string bloomDownsampleBuffer;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly string bloomUpsampleBuffer;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly string sourceBuffer;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly string glareDownsampleBuffer0;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly string glareDownsampleBuffer1;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly string glareDownsampleBuffer2;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly string glareDownsampleBuffer3;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly string glareUpsampleBuffer0;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly string glareUpsampleBuffer1;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly string glareUpsampleBuffer2;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly string glareUpsampleBuffer3;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly string lensFlareDownsampleBuffer;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly string lensFlareUpsampleBuffer;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly string sampleDownsample;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly string samplePreSample;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly string sampleUpsample;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly string sampleComposite;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly string sampleCreateBuffers;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly string sampleClearBuffers;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly string sampleSetup;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			internal static readonly string sampleCopySource;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			internal static readonly string sampleReplacement;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal static readonly string samplePrepare;
		}

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int renderBufferSize;

		[Token(Token = "0x17000163")]
		internal static bool xrEnabled
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x79176C", Offset = "0x79176C", VA = "0x79176C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		internal static bool singlePassStereoDoubleWideEnabled
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x78F340", Offset = "0x78F340", VA = "0x78F340")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		internal static bool singlePassStereoInstancedEnabled
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x787DE8", Offset = "0x787DE8", VA = "0x787DE8")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x200021F")]
	internal sealed class RenderContext
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x17000168")]
		public RenderTextureDescriptor descriptor
		{
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0x7929E8", Offset = "0x7929E8", VA = "0x7929E8")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x17000169")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x78A644", Offset = "0x78A644", VA = "0x78A644", Slot = "4")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x1700016A")]
		public int width
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x789D3C", Offset = "0x789D3C", VA = "0x789D3C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016B")]
		public int height
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x789D44", Offset = "0x789D44", VA = "0x789D44", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x7892B4", Offset = "0x7892B4", VA = "0x7892B4")]
		internal RenderContext()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x789CB4", Offset = "0x789CB4", VA = "0x789CB4")]
		internal void SinglePassStereoAdjustWidth(bool stereoEnabled)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x789BC0", Offset = "0x789BC0", VA = "0x789BC0")]
		internal void UpdateRenderContext(bool stereoEnabled, RenderTextureFormat format, int depthBufferBits, bool enableRandomWrite, RenderDimension dimension)
		{
		}
	}
	[Token(Token = "0x2000220")]
	internal struct RenderTarget
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal RenderTexture renderTexture;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal RenderTargetIdentifier renderTargetIdentifier;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int identifier;
	}
	[Token(Token = "0x2000221")]
	internal static class RenderTargetContext
	{
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _renderTargetCount;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTargetSetup[] _mrtBindingsLegacy;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static RenderTargetBinding[] _mrtBindingsSRP;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x791210", Offset = "0x791210", VA = "0x791210")]
		internal static void SetRenderTargetContext(this CommandBuffer cmd, List<RenderTarget> renderTargets)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x791498", Offset = "0x791498", VA = "0x791498")]
		internal static void SetRenderTargetContext(List<RenderTarget> renderTargets)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public sealed class Resources : ScriptableObject
	{
		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D _lensSurfaceDirtTextureDefault;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D _lensSurfaceDiffractionTextureDefault;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D _lensFlareColorRampDefault;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _selectiveRenderShader;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader _sm20Shader;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader _sm25Shader;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _sm30Shader;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Shader _sm35Shader;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Shader _sm40Shader;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Shader _sm40GeometryShader;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ComputeShader _computeShader;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ComputeShader _computeShaderGles;

		[Token(Token = "0x1700016C")]
		internal Texture2D lensSurfaceDirtTextureDefault
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x7935F0", Offset = "0x7935F0", VA = "0x7935F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		internal Texture2D lensSurfaceDiffractionTextureDefault
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x7935F8", Offset = "0x7935F8", VA = "0x7935F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		internal Texture2D lensFlareColorRampDefault
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x793600", Offset = "0x793600", VA = "0x793600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		internal Shader selectiveRenderShader
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x793608", Offset = "0x793608", VA = "0x793608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		internal Shader sm20Shader
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x793610", Offset = "0x793610", VA = "0x793610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		internal Shader sm25Shader
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x793618", Offset = "0x793618", VA = "0x793618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		internal Shader sm30Shader
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x793620", Offset = "0x793620", VA = "0x793620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		internal Shader sm35Shader
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x793628", Offset = "0x793628", VA = "0x793628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		internal Shader sm40Shader
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x793630", Offset = "0x793630", VA = "0x793630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		internal Shader sm40GeometryShader
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x793638", Offset = "0x793638", VA = "0x793638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		internal ComputeShader computeShader
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x78FA70", Offset = "0x78FA70", VA = "0x78FA70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x793588", Offset = "0x793588", VA = "0x793588")]
		internal static void ResourcesNotAvailableWarning()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x78925C", Offset = "0x78925C", VA = "0x78925C")]
		internal static Resources LoadResourcesAsset()
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x793640", Offset = "0x793640", VA = "0x793640")]
		public Resources()
		{
		}
	}
	[Token(Token = "0x2000223")]
	internal abstract class Settings
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool _allowGeometryShaders;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		protected bool _allowComputeShaders;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected RenderPriority _renderPriority;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected DebugView _debugView;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected Quality _quality;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AntiFlickerMode _antiFlickerMode;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Workflow _workflow;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected LayerMask _selectiveRenderLayerMask;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float _anamorphicRatio;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float _lumaScale;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float _blooming;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected MinMaxRange _bloomThreshold;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float _bloomScattering;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float _bloomIntensity;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool _allowLensSurface;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Texture2D _lensSurfaceDirtTexture;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float _lensSurfaceDirtIntensity;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Texture2D _lensSurfaceDirtDistortionTexture;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float _lensSurfaceDirtDistortion;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Texture2D _lensSurfaceDiffractionTexture;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float _lensSurfaceDiffractionIntensity;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected bool _allowLensFlare;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected LensFlareStyle _lensFlareStyle;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float _lensFlareGhostFade;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float _lensFlareGhostIntensity;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected MinMaxRange _lensFlareThreshold;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float _lensFlareScattering;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Texture2D _lensFlareColorRamp;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float _lensFlareChromaticAberration;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int _lensFlareGhostCount;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float _lensFlareGhostDispersal;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float _lensFlareHaloFade;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float _lensFlareHaloIntensity;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float _lensFlareHaloSize;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool _allowGlare;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float _glareBlend;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float _glareIntensity;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float _glareAngle;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected MinMaxRange _glareThreshold;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int _glareStreaks;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float _glareScattering;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GlareStyle _glareStyle;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float _glareSample0Scattering;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float _glareSample0Angle;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float _glareSample0Intensity;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float _glareSample0Offset;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float _glareSample1Scattering;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected float _glareSample1Angle;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected float _glareSample1Intensity;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float _glareSample1Offset;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float _glareSample2Scattering;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected float _glareSample2Angle;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected float _glareSample2Intensity;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected float _glareSample2Offset;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float _glareSample3Scattering;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected float _glareSample3Angle;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected float _glareSample3Intensity;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected float _glareSample3Offset;

		[Token(Token = "0x17000177")]
		internal bool allowGeometryShaders
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x793648", Offset = "0x793648", VA = "0x793648")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		internal bool allowComputeShaders
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x793654", Offset = "0x793654", VA = "0x793654")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		internal RenderPriority renderPriority
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x793660", Offset = "0x793660", VA = "0x793660")]
			get
			{
				return default(RenderPriority);
			}
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x793668", Offset = "0x793668", VA = "0x793668")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		internal DebugView debugView
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x793670", Offset = "0x793670", VA = "0x793670")]
			get
			{
				return default(DebugView);
			}
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x793678", Offset = "0x793678", VA = "0x793678")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		internal Quality quality
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x793680", Offset = "0x793680", VA = "0x793680")]
			get
			{
				return default(Quality);
			}
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x793688", Offset = "0x793688", VA = "0x793688")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		internal AntiFlickerMode antiFlickerMode
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x793690", Offset = "0x793690", VA = "0x793690")]
			get
			{
				return default(AntiFlickerMode);
			}
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x793698", Offset = "0x793698", VA = "0x793698")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		internal Workflow workflow
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x7936A0", Offset = "0x7936A0", VA = "0x7936A0")]
			get
			{
				return default(Workflow);
			}
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x7936A8", Offset = "0x7936A8", VA = "0x7936A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		internal LayerMask selectiveRenderLayerMask
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x7936B0", Offset = "0x7936B0", VA = "0x7936B0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x7936B8", Offset = "0x7936B8", VA = "0x7936B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		internal float anamorphicRatio
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x7936C0", Offset = "0x7936C0", VA = "0x7936C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x7936C8", Offset = "0x7936C8", VA = "0x7936C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		internal float lumaScale
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x7936E4", Offset = "0x7936E4", VA = "0x7936E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x7936EC", Offset = "0x7936EC", VA = "0x7936EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		internal float blooming
		{
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x793708", Offset = "0x793708", VA = "0x793708")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x793710", Offset = "0x793710", VA = "0x793710")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		internal MinMaxRange bloomThreshold
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0x79372C", Offset = "0x79372C", VA = "0x79372C")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0x793734", Offset = "0x793734", VA = "0x793734")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		internal float bloomScattering
		{
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x79373C", Offset = "0x79373C", VA = "0x79373C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x793744", Offset = "0x793744", VA = "0x793744")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		internal float bloomIntensity
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0x793760", Offset = "0x793760", VA = "0x793760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x793768", Offset = "0x793768", VA = "0x793768")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		internal bool allowLensSurface
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x793778", Offset = "0x793778", VA = "0x793778")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x793780", Offset = "0x793780", VA = "0x793780")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		internal Texture2D lensSurfaceDirtTexture
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x79378C", Offset = "0x79378C", VA = "0x79378C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x793794", Offset = "0x793794", VA = "0x793794")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		internal float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x79379C", Offset = "0x79379C", VA = "0x79379C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x7937A4", Offset = "0x7937A4", VA = "0x7937A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		internal Texture2D lensSurfaceDiffractionTexture
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x7937B4", Offset = "0x7937B4", VA = "0x7937B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x7937BC", Offset = "0x7937BC", VA = "0x7937BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		internal float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x7937C4", Offset = "0x7937C4", VA = "0x7937C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0x7937CC", Offset = "0x7937CC", VA = "0x7937CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		internal bool allowLensFlare
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x7937DC", Offset = "0x7937DC", VA = "0x7937DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x7937E4", Offset = "0x7937E4", VA = "0x7937E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		internal LensFlareStyle lensFlareStyle
		{
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x7937F0", Offset = "0x7937F0", VA = "0x7937F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		internal float lensFlareGhostFade
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x7937F8", Offset = "0x7937F8", VA = "0x7937F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x793800", Offset = "0x793800", VA = "0x793800")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		internal float lensFlareGhostIntensity
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x793810", Offset = "0x793810", VA = "0x793810")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x793818", Offset = "0x793818", VA = "0x793818")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		internal MinMaxRange lensFlareThreshold
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x793828", Offset = "0x793828", VA = "0x793828")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x793830", Offset = "0x793830", VA = "0x793830")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		internal float lensFlareScattering
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x793838", Offset = "0x793838", VA = "0x793838")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x793840", Offset = "0x793840", VA = "0x793840")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		internal Texture2D lensFlareColorRamp
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x79385C", Offset = "0x79385C", VA = "0x79385C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x793864", Offset = "0x793864", VA = "0x793864")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		internal float lensFlareChromaticAberration
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x79386C", Offset = "0x79386C", VA = "0x79386C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x793874", Offset = "0x793874", VA = "0x793874")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		internal int lensFlareGhostCount
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0x79387C", Offset = "0x79387C", VA = "0x79387C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0x793884", Offset = "0x793884", VA = "0x793884")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		internal float lensFlareGhostDispersal
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0x79389C", Offset = "0x79389C", VA = "0x79389C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x7938A4", Offset = "0x7938A4", VA = "0x7938A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		internal float lensFlareHaloFade
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x7938C0", Offset = "0x7938C0", VA = "0x7938C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x7938C8", Offset = "0x7938C8", VA = "0x7938C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		internal float lensFlareHaloIntensity
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x7938D8", Offset = "0x7938D8", VA = "0x7938D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x7938E0", Offset = "0x7938E0", VA = "0x7938E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		internal float lensFlareHaloSize
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x7938F0", Offset = "0x7938F0", VA = "0x7938F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x7938F8", Offset = "0x7938F8", VA = "0x7938F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		internal bool allowGlare
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x79395C", Offset = "0x79395C", VA = "0x79395C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x793964", Offset = "0x793964", VA = "0x793964")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		internal float glareBlend
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x793970", Offset = "0x793970", VA = "0x793970")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x793978", Offset = "0x793978", VA = "0x793978")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		internal float glareIntensity
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x793994", Offset = "0x793994", VA = "0x793994")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0x79399C", Offset = "0x79399C", VA = "0x79399C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		internal float glareAngle
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x7939AC", Offset = "0x7939AC", VA = "0x7939AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0x7939B4", Offset = "0x7939B4", VA = "0x7939B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		internal MinMaxRange glareThreshold
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x7939D4", Offset = "0x7939D4", VA = "0x7939D4")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x7939DC", Offset = "0x7939DC", VA = "0x7939DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		internal int glareStreaks
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x7939E4", Offset = "0x7939E4", VA = "0x7939E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x7939EC", Offset = "0x7939EC", VA = "0x7939EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		internal float glareScattering
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0x793A08", Offset = "0x793A08", VA = "0x793A08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x793A10", Offset = "0x793A10", VA = "0x793A10")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		internal GlareStyle glareStyle
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x793A20", Offset = "0x793A20", VA = "0x793A20")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		internal float glareSample0Scattering
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x793A28", Offset = "0x793A28", VA = "0x793A28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x793A30", Offset = "0x793A30", VA = "0x793A30")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		internal float glareSample0Angle
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x793A38", Offset = "0x793A38", VA = "0x793A38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0x793A40", Offset = "0x793A40", VA = "0x793A40")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		internal float glareSample0Intensity
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x793A48", Offset = "0x793A48", VA = "0x793A48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0x793A50", Offset = "0x793A50", VA = "0x793A50")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		internal float glareSample0Offset
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x793A60", Offset = "0x793A60", VA = "0x793A60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0x793A68", Offset = "0x793A68", VA = "0x793A68")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		internal float glareSample1Scattering
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x793A70", Offset = "0x793A70", VA = "0x793A70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x793A78", Offset = "0x793A78", VA = "0x793A78")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		internal float glareSample1Angle
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x793A80", Offset = "0x793A80", VA = "0x793A80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x793A88", Offset = "0x793A88", VA = "0x793A88")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		internal float glareSample1Intensity
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x793A90", Offset = "0x793A90", VA = "0x793A90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x793A98", Offset = "0x793A98", VA = "0x793A98")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		internal float glareSample1Offset
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x793AA8", Offset = "0x793AA8", VA = "0x793AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x793AB0", Offset = "0x793AB0", VA = "0x793AB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		internal float glareSample2Scattering
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x793AB8", Offset = "0x793AB8", VA = "0x793AB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x793AC0", Offset = "0x793AC0", VA = "0x793AC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		internal float glareSample2Angle
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x793AC8", Offset = "0x793AC8", VA = "0x793AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x793AD0", Offset = "0x793AD0", VA = "0x793AD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		internal float glareSample2Intensity
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x793AD8", Offset = "0x793AD8", VA = "0x793AD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x793AE0", Offset = "0x793AE0", VA = "0x793AE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		internal float glareSample2Offset
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x793AF0", Offset = "0x793AF0", VA = "0x793AF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x793AF8", Offset = "0x793AF8", VA = "0x793AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		internal float glareSample3Scattering
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x793B00", Offset = "0x793B00", VA = "0x793B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x793B08", Offset = "0x793B08", VA = "0x793B08")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		internal float glareSample3Angle
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x793B10", Offset = "0x793B10", VA = "0x793B10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x793B18", Offset = "0x793B18", VA = "0x793B18")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		internal float glareSample3Intensity
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x793B20", Offset = "0x793B20", VA = "0x793B20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x793B28", Offset = "0x793B28", VA = "0x793B28")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		internal float glareSample3Offset
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x793B38", Offset = "0x793B38", VA = "0x793B38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x793B40", Offset = "0x793B40", VA = "0x793B40")]
			set
			{
			}
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x793914", Offset = "0x793914", VA = "0x793914")]
		internal void SetLensFlarePreset(LensFlareStyle lensFlareStyle)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x793B48", Offset = "0x793B48", VA = "0x793B48")]
		internal void SetGlarePreset(GlareStyle glareStyle)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x793C88", Offset = "0x793C88", VA = "0x793C88")]
		protected Settings()
		{
		}
	}
}
namespace MK.Glow.Example
{
	[Token(Token = "0x2000224")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D[] _emissionTextures;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MinMaxRange _minMaxVelocity;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MinMaxRange _minMaxScale;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _nextColorChangeTime;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _nextColorIndex;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _nextColorIntensity;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material _baseMaterial;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _emissionColorId;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _emissionTextureId;

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x793C90", Offset = "0x793C90", VA = "0x793C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x793F10", Offset = "0x793F10", VA = "0x793F10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x79407C", Offset = "0x79407C", VA = "0x79407C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x794208", Offset = "0x794208", VA = "0x794208")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class AsteroidSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _spawnTime;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _asteroidObject;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _spawnedObjects;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _time;

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x7942CC", Offset = "0x7942CC", VA = "0x7942CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x794454", Offset = "0x794454", VA = "0x794454")]
		public AsteroidSpawner()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class ChangeSettingsLegacy : MonoBehaviour
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MKGlow _mkGlow;

		[Token(Token = "0x170001AF")]
		public int debugView
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x794500", Offset = "0x794500", VA = "0x794500")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x79451C", Offset = "0x79451C", VA = "0x79451C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public float anamorphicRatio
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x794538", Offset = "0x794538", VA = "0x794538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x794554", Offset = "0x794554", VA = "0x794554")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float lumaScale
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x794570", Offset = "0x794570", VA = "0x794570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x79458C", Offset = "0x79458C", VA = "0x79458C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float blooming
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x7945A8", Offset = "0x7945A8", VA = "0x7945A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x7945C4", Offset = "0x7945C4", VA = "0x7945C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public float bloomThreshold
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x7945E0", Offset = "0x7945E0", VA = "0x7945E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x7945FC", Offset = "0x7945FC", VA = "0x7945FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public float bloomClamp
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x794618", Offset = "0x794618", VA = "0x794618")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x794634", Offset = "0x794634", VA = "0x794634")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public float bloomScattering
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x794650", Offset = "0x794650", VA = "0x794650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x79466C", Offset = "0x79466C", VA = "0x79466C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float bloomIntensity
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x794688", Offset = "0x794688", VA = "0x794688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x7946A4", Offset = "0x7946A4", VA = "0x7946A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public bool allowLensSurface
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x7946C0", Offset = "0x7946C0", VA = "0x7946C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x7946DC", Offset = "0x7946DC", VA = "0x7946DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float lensSurfaceDirtIntensity
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x7946FC", Offset = "0x7946FC", VA = "0x7946FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x794718", Offset = "0x794718", VA = "0x794718")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float lensSurfaceDiffractionIntensity
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x794734", Offset = "0x794734", VA = "0x794734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x794750", Offset = "0x794750", VA = "0x794750")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool allowLensFlare
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x79476C", Offset = "0x79476C", VA = "0x79476C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x794788", Offset = "0x794788", VA = "0x794788")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float lensFlareThreshold
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x7947A8", Offset = "0x7947A8", VA = "0x7947A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x7947C4", Offset = "0x7947C4", VA = "0x7947C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float lensFlareClamp
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x7947E0", Offset = "0x7947E0", VA = "0x7947E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x7947FC", Offset = "0x7947FC", VA = "0x7947FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float lensFlareChromaticAberration
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x794818", Offset = "0x794818", VA = "0x794818")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x794834", Offset = "0x794834", VA = "0x794834")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float lensFlareScattering
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x794850", Offset = "0x794850", VA = "0x794850")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x79486C", Offset = "0x79486C", VA = "0x79486C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float lensFlareGhostFade
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x794888", Offset = "0x794888", VA = "0x794888")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x7948A4", Offset = "0x7948A4", VA = "0x7948A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float lensFlareGhostCount
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x7948C0", Offset = "0x7948C0", VA = "0x7948C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x7948E0", Offset = "0x7948E0", VA = "0x7948E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float lensFlareGhostDispersal
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x794914", Offset = "0x794914", VA = "0x794914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x794930", Offset = "0x794930", VA = "0x794930")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float lensFlareGhostIntensity
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x79494C", Offset = "0x79494C", VA = "0x79494C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x794968", Offset = "0x794968", VA = "0x794968")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float lensFlareHaloFade
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x794984", Offset = "0x794984", VA = "0x794984")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x7949A0", Offset = "0x7949A0", VA = "0x7949A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public float lensFlareHaloSize
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x7949BC", Offset = "0x7949BC", VA = "0x7949BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x7949D8", Offset = "0x7949D8", VA = "0x7949D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float lensFlareHaloIntensity
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x7949F4", Offset = "0x7949F4", VA = "0x7949F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x794A10", Offset = "0x794A10", VA = "0x794A10")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public bool allowGlare
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x794A2C", Offset = "0x794A2C", VA = "0x794A2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x794A48", Offset = "0x794A48", VA = "0x794A48")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public float glareThreshold
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x794A68", Offset = "0x794A68", VA = "0x794A68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x794A84", Offset = "0x794A84", VA = "0x794A84")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float glareClamp
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x794AA0", Offset = "0x794AA0", VA = "0x794AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0x794ABC", Offset = "0x794ABC", VA = "0x794ABC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float glareBlend
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x794AD8", Offset = "0x794AD8", VA = "0x794AD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x794AF4", Offset = "0x794AF4", VA = "0x794AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public float glareSample0Scattering
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x794B10", Offset = "0x794B10", VA = "0x794B10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0x794B2C", Offset = "0x794B2C", VA = "0x794B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float glareSample0Angle
		{
			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0x794B48", Offset = "0x794B48", VA = "0x794B48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0x794B64", Offset = "0x794B64", VA = "0x794B64")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float glareSample0Offset
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x794B80", Offset = "0x794B80", VA = "0x794B80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x794B9C", Offset = "0x794B9C", VA = "0x794B9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public float glareSample0Intensity
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x794BB8", Offset = "0x794BB8", VA = "0x794BB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0x794BD4", Offset = "0x794BD4", VA = "0x794BD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public float glareSample1Scattering
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x794BF0", Offset = "0x794BF0", VA = "0x794BF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x794C0C", Offset = "0x794C0C", VA = "0x794C0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public float glareSample1Angle
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x794C28", Offset = "0x794C28", VA = "0x794C28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x794C44", Offset = "0x794C44", VA = "0x794C44")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public float glareSample1Offset
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x794C60", Offset = "0x794C60", VA = "0x794C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x794C7C", Offset = "0x794C7C", VA = "0x794C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float glareSample1Intensity
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x794C98", Offset = "0x794C98", VA = "0x794C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x794CB4", Offset = "0x794CB4", VA = "0x794CB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public float glareSample2Scattering
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x794CD0", Offset = "0x794CD0", VA = "0x794CD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x794CEC", Offset = "0x794CEC", VA = "0x794CEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public float glareSample2Angle
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x794D08", Offset = "0x794D08", VA = "0x794D08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x794D24", Offset = "0x794D24", VA = "0x794D24")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public float glareSample2Offset
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x794D40", Offset = "0x794D40", VA = "0x794D40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x794D5C", Offset = "0x794D5C", VA = "0x794D5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public float glareSample2Intensity
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x794D78", Offset = "0x794D78", VA = "0x794D78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x794D94", Offset = "0x794D94", VA = "0x794D94")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public float glareSample3Scattering
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x794DB0", Offset = "0x794DB0", VA = "0x794DB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x794DCC", Offset = "0x794DCC", VA = "0x794DCC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public float glareSample3Angle
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x794DE8", Offset = "0x794DE8", VA = "0x794DE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x794E04", Offset = "0x794E04", VA = "0x794E04")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public float glareSample3Offset
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x794E20", Offset = "0x794E20", VA = "0x794E20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x794E3C", Offset = "0x794E3C", VA = "0x794E3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public float glareSample3Intensity
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x794E58", Offset = "0x794E58", VA = "0x794E58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x794E74", Offset = "0x794E74", VA = "0x794E74")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x7944A8", Offset = "0x7944A8", VA = "0x7944A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x794E90", Offset = "0x794E90", VA = "0x794E90")]
		public ChangeSettingsLegacy()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class Cube : MonoBehaviour
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MinMaxRange _minMaxSpeed;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MinMaxRange _directionSwitchTime;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _nextColorChangeTime;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextColorIndex;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensity;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _nextDirectionChangeTime;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentSpeed;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _baseMaterial;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _emissionColorId;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _colorId;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _startPos;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 _endPos;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _forward;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _forwardDirection;

		[Token(Token = "0x170001DA")]
		private Vector3 _targetPosition
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x794E98", Offset = "0x794E98", VA = "0x794E98")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x794ED4", Offset = "0x794ED4", VA = "0x794ED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x7951D4", Offset = "0x7951D4", VA = "0x7951D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x7955D0", Offset = "0x7955D0", VA = "0x7955D0")]
		public Cube()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class DestroyOpenMenuText : MonoBehaviour
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Outline _outline;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _blinkSpeed;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _alpha;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _textColor;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _outlineColor;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _forward;

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x7A3870", Offset = "0x7A3870", VA = "0x7A3870")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x7A39B4", Offset = "0x7A39B4", VA = "0x7A39B4")]
		public DestroyOpenMenuText()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class HandleMenu : MonoBehaviour
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _canvas;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x7A39DC", Offset = "0x7A39DC", VA = "0x7A39DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x7A3A38", Offset = "0x7A3A38", VA = "0x7A3A38")]
		public HandleMenu()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class MoveCamera : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _horizontalSpeed;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _verticalSpeed;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _centerTransform;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x7A3A40", Offset = "0x7A3A40", VA = "0x7A3A40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x7A3B88", Offset = "0x7A3B88", VA = "0x7A3B88")]
		public MoveCamera()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class RotateObject : MonoBehaviour
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _rotation;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float _heightMovement;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float _heightMovementSpeed;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startPosition;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x7A3BA4", Offset = "0x7A3BA4", VA = "0x7A3BA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x7A3BD4", Offset = "0x7A3BD4", VA = "0x7A3BD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x7A3CDC", Offset = "0x7A3CDC", VA = "0x7A3CDC")]
		public RotateObject()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SpectateObjects : MonoBehaviour
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _gameObjects;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentObject;

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x7A3D48", Offset = "0x7A3D48", VA = "0x7A3D48")]
		public void SwitchObject()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x7A3DD8", Offset = "0x7A3DD8", VA = "0x7A3DD8")]
		public SpectateObjects()
		{
		}
	}
}
namespace MK.Glow.Legacy
{
	[Token(Token = "0x200022D")]
	internal class CameraDataLegacy : CameraData
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x7A3E3C", Offset = "0x7A3E3C", VA = "0x7A3E3C")]
		public static implicit operator CameraDataLegacy(Camera input)
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x7A3F14", Offset = "0x7A3F14", VA = "0x7A3F14")]
		public CameraDataLegacy()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[ExecuteAlways]
	[ImageEffectAllowedInSceneView]
	[DisallowMultipleComponent]
	[RequireComponent(typeof(Camera))]
	public class MKGlow : MonoBehaviour
	{
		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowGeometryShaders;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowComputeShaders;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RenderPriority renderPriority;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugView debugView;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quality quality;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntiFlickerMode antiFlickerMode;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Workflow workflow;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask selectiveRenderLayerMask;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(-1f, 1f)]
		public float anamorphicRatio;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float lumaScale;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 1f)]
		public float blooming;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[MinMaxRange(0f, 10f)]
		public MinMaxRange bloomThreshold;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(1f, 10f)]
		public float bloomScattering;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float bloomIntensity;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowLensSurface;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D lensSurfaceDirtTexture;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensSurfaceDirtIntensity;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D lensSurfaceDiffractionTexture;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lensSurfaceDiffractionIntensity;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool allowLensFlare;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LensFlareStyle lensFlareStyle;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 25f)]
		public float lensFlareGhostFade;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lensFlareGhostIntensity;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[MinMaxRange(0f, 10f)]
		public MinMaxRange lensFlareThreshold;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(0f, 8f)]
		public float lensFlareScattering;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D lensFlareColorRamp;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Range(-100f, 100f)]
		public float lensFlareChromaticAberration;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(1f, 4f)]
		public int lensFlareGhostCount;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(-1f, 1f)]
		public float lensFlareGhostDispersal;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Range(0f, 25f)]
		public float lensFlareHaloFade;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float lensFlareHaloIntensity;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Range(0f, 1f)]
		public float lensFlareHaloSize;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool allowGlare;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Range(0f, 1f)]
		public float glareBlend;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float glareIntensity;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Range(0f, 360f)]
		public float glareAngle;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[MinMaxRange(0f, 10f)]
		public MinMaxRange glareThreshold;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Range(1f, 4f)]
		public int glareStreaks;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public GlareStyle glareStyle;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Range(0f, 4f)]
		public float glareScattering;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Range(0f, 10f)]
		public float glareSample0Scattering;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Range(0f, 360f)]
		public float glareSample0Angle;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float glareSample0Intensity;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Range(-5f, 5f)]
		public float glareSample0Offset;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[Range(0f, 10f)]
		public float glareSample1Scattering;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Range(0f, 360f)]
		public float glareSample1Angle;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float glareSample1Intensity;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Range(-5f, 5f)]
		public float glareSample1Offset;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[Range(0f, 10f)]
		public float glareSample2Scattering;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Range(0f, 360f)]
		public float glareSample2Angle;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float glareSample2Intensity;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Range(-5f, 5f)]
		public float glareSample2Offset;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[Range(0f, 10f)]
		public float glareSample3Scattering;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Range(0f, 360f)]
		public float glareSample3Angle;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float glareSample3Intensity;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Range(-5f, 5f)]
		public float glareSample3Offset;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Effect _effect;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTarget _source;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private RenderTarget _destination;

		[Token(Token = "0x170001DB")]
		private Camera renderingCamera
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x7A3F1C", Offset = "0x7A3F1C", VA = "0x7A3F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x7A3F64", Offset = "0x7A3F64", VA = "0x7A3F64")]
		[ContextMenu("Load Preset For Mobile")]
		private void LoadMobilePreset()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x7A3F90", Offset = "0x7A3F90", VA = "0x7A3F90")]
		[ContextMenu("Load Preset For Quality")]
		private void LoadQualityPreset()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x7A3FBC", Offset = "0x7A3FBC", VA = "0x7A3FBC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x7A407C", Offset = "0x7A407C", VA = "0x7A407C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x7A4098", Offset = "0x7A4098", VA = "0x7A4098")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x7A45B4", Offset = "0x7A45B4", VA = "0x7A45B4")]
		public MKGlow()
		{
		}
	}
	[Token(Token = "0x200022F")]
	internal sealed class SettingsLegacy : Settings
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x7A42DC", Offset = "0x7A42DC", VA = "0x7A42DC")]
		public static implicit operator SettingsLegacy(MKGlow input)
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x7A4720", Offset = "0x7A4720", VA = "0x7A4720")]
		public SettingsLegacy()
		{
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x2000230")]
	[AddComponentMenu("")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x7A4728", Offset = "0x7A4728", VA = "0x7A4728")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x7A4840", Offset = "0x7A4840", VA = "0x7A4840")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x7A48C8", Offset = "0x7A48C8", VA = "0x7A48C8")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x7A4950", Offset = "0x7A4950", VA = "0x7A4950")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AddComponentMenu("")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x40012FF")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Enables transition to a given profile.")]
		public bool enableProfileTransition;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Assign the transition profile.")]
		public VolumetricFogProfile targetProfile;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Enables alpha transition.")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Target alpha for fog when camera enters this fog volume")]
		[Range(0f, 1f)]
		public float targetFogAlpha;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Target alpha for sky haze when camera enters this fog volume")]
		[Range(0f, 1f)]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Enables fog color transition.")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Target fog color 1 when gamera enters this fog folume")]
		public Color targetFogColor;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Enables fog specular color transition.")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Target fog color 2 when gamera enters this fog folume")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Enables light color transition.")]
		public bool enableLightColorTransition;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Target light color when gamera enters this fog folume")]
		public Color targetLightColor;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Set this to zero for changing fog alpha immediately upon enter/exit fog volume.")]
		public float transitionDuration;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Set collider that will trigger this fog volume. If not set, this fog volume will react to any collider which has the main camera. If you use a third person controller, assign the character collider here.")]
		public Collider targetCollider;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("When enabled, a console message will be printed whenever this fog volume is entered or exited.")]
		public bool debugMode;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Assign target Volumetric Fog component that will be affected by this volume.")]
		public VolumetricFog targetFog;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool cameraInside;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x7A4958", Offset = "0x7A4958", VA = "0x7A4958")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x7A4A20", Offset = "0x7A4A20", VA = "0x7A4A20")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x7A4C98", Offset = "0x7A4C98", VA = "0x7A4C98")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x7A4EEC", Offset = "0x7A4EEC", VA = "0x7A4EEC")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x2000232")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x170001DC")]
		VolumetricFog fog
		{
			[Token(Token = "0x6000C5E")]
			get;
			[Token(Token = "0x6000C5F")]
			set;
		}

		[Token(Token = "0x6000C60")]
		void DestroySelf();
	}
	[Token(Token = "0x2000233")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x4001311")]
		Clear = 0,
		[Token(Token = "0x4001312")]
		Mist = 10,
		[Token(Token = "0x4001313")]
		WindyMist = 11,
		[Token(Token = "0x4001314")]
		LowClouds = 20,
		[Token(Token = "0x4001315")]
		SeaClouds = 21,
		[Token(Token = "0x4001316")]
		GroundFog = 30,
		[Token(Token = "0x4001317")]
		FrostedGround = 31,
		[Token(Token = "0x4001318")]
		FoggyLake = 32,
		[Token(Token = "0x4001319")]
		Fog = 41,
		[Token(Token = "0x400131A")]
		HeavyFog = 42,
		[Token(Token = "0x400131B")]
		SandStorm1 = 50,
		[Token(Token = "0x400131C")]
		Smoke = 51,
		[Token(Token = "0x400131D")]
		ToxicSwamp = 52,
		[Token(Token = "0x400131E")]
		SandStorm2 = 53,
		[Token(Token = "0x400131F")]
		WorldEdge = 200,
		[Token(Token = "0x4001320")]
		Custom = 1000
	}
	[Token(Token = "0x2000234")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x4001322")]
		AutoDetectInEditor,
		[Token(Token = "0x4001323")]
		ForcedOn,
		[Token(Token = "0x4001324")]
		ForcedOff
	}
	[Token(Token = "0x2000235")]
	public enum TRANSPARENT_MODE
	{
		[Token(Token = "0x4001326")]
		None,
		[Token(Token = "0x4001327")]
		Blend
	}
	[Token(Token = "0x2000236")]
	public enum COMPUTE_DEPTH_SCOPE
	{
		[Token(Token = "0x4001329")]
		OnlyTreeBillboards,
		[Token(Token = "0x400132A")]
		EverythingInLayer,
		[Token(Token = "0x400132B")]
		TreeBillboardsAndTransparentObjects
	}
	[Token(Token = "0x2000237")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x400132D")]
		Classic,
		[Token(Token = "0x400132E")]
		Natural,
		[Token(Token = "0x400132F")]
		SingleLight
	}
	[Token(Token = "0x2000238")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x4001331")]
		Realtime,
		[Token(Token = "0x4001332")]
		Discrete
	}
	[Token(Token = "0x2000239")]
	public enum FOG_VOID_TOPOLOGY
	{
		[Token(Token = "0x4001334")]
		Sphere,
		[Token(Token = "0x4001335")]
		Box
	}
	[Token(Token = "0x200023A")]
	public enum FOG_AREA_TOPOLOGY
	{
		[Token(Token = "0x4001337")]
		Sphere = 1,
		[Token(Token = "0x4001338")]
		Box
	}
	[Token(Token = "0x200023B")]
	public enum FOG_AREA_SORTING_MODE
	{
		[Token(Token = "0x400133A")]
		DistanceToCamera,
		[Token(Token = "0x400133B")]
		Altitude,
		[Token(Token = "0x400133C")]
		Fixed
	}
	[Token(Token = "0x200023C")]
	public enum FOG_AREA_FOLLOW_MODE
	{
		[Token(Token = "0x400133E")]
		FullXYZ,
		[Token(Token = "0x400133F")]
		RestrictToXZPlane
	}
	[Token(Token = "0x200023D")]
	[HelpURL("http://kronnect.com/taptapgo")]
	[AddComponentMenu("Image Effects/Rendering/Volumetric Fog & Mist")]
	[ExecuteInEditMode]
	public class VolumetricFog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023E")]
		public struct PointLightParams
		{
			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Light light;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float range;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float intensity;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float intensityMultiplier;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color color;
		}

		[Token(Token = "0x200023F")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int x;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int y;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startTime;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startDelay;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte initialAlpha;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public byte targetAlpha;
		}

		[Token(Token = "0x4001340")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x4001341")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x4001342")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x4001343")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x4001344")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x4001345")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x4001346")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x4001347")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x4001348")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x4001349")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x400134A")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x400134B")]
		public const string SKW_FOG_COMPUTE_DEPTH = "FOG_COMPUTE_DEPTH";

		[Token(Token = "0x400134C")]
		public const string SKW_POINT_LIGHTS = "FOG_POINT_LIGHTS";

		[Token(Token = "0x400134D")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x400134E")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x400134F")]
		private const string VFM_BUILD_FIRST_INSTALL = "VFMFirstInstall";

		[Token(Token = "0x4001350")]
		private const string VFM_BUILD_HINT = "VFMBuildHint962b2";

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VolumetricFog _fog;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VolumetricFogProfile _profile;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _debugPass;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TRANSPARENT_MODE _transparencyBlendMode;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _transparencyBlendPower;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask _transparencyLayerMask;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _enableMultipleCameras;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _computeDepth;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private COMPUTE_DEPTH_SCOPE _computeDepthScope;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _transparencyCutOff;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _renderBeforeTransparent;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Range(0f, 0.5f)]
		private float _timeBetweenTextureUpdates;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Range(0f, 1.25f)]
		private float _density;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _noiseStrength;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Range(1f, 2f)]
		[SerializeField]
		private float _noiseFinalMultiplier;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[Range(-0.3f, 2f)]
		private float _noiseSparse;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Range(0f, 1000f)]
		private float _distance;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[Range(0f, 2000f)]
		private float _maxFogLength;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 5f)]
		[SerializeField]
		private float _distanceFallOff;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Range(0.0001f, 500f)]
		private float _height;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Range(0.2f, 25f)]
		private float _noiseScale;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[Range(0f, 1.05f)]
		private float _alpha;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _specularThreshold;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _specularIntensity;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[Range(1f, 5f)]
		private int _updateTextureSpread;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _speed;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool _useRealTime;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Range(0f, 1000f)]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _skySpeed;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _skyNoiseStrength;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _skyAlpha;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[Range(0f, 0.999f)]
		private float _skyDepth;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private FOG_VOID_TOPOLOGY _fogVoidTopology;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[Range(0f, 10f)]
		private float _fogVoidFallOff;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[SerializeField]
		private bool _fogAreaShowGizmos;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[Range(0.001f, 10f)]
		private float _fogAreaFallOff;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private FOG_AREA_FOLLOW_MODE _fogAreaFollowMode;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private FOG_AREA_TOPOLOGY _fogAreaTopology;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private FOG_AREA_SORTING_MODE _fogAreaSortingMode;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private int _fogAreaRenderOrder;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public PointLightParams[] pointLightParams;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool pointLightDataMigrated;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Color[] pointLightColorBuffer;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector4[] pointLightPositionBuffer;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Transform _pointLightTrackingPivot;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[Range(0f, 5f)]
		[SerializeField]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private float _pointLightTrackingNewLightsCheckInterval;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _pointLightInscattering;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private float _pointLightIntensity;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float _pointLightInsideAtten;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[Range(1f, 8f)]
		private int _downsampling;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private bool _forceComposition;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[Range(1E-05f, 0.005f)]
		private float _edgeThreshold;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		[Range(1f, 20f)]
		private float _stepping;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[Range(0f, 50f)]
		private float _steppingNear;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		[Range(0.1f, 5f)]
		private float _ditherStrength;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		[Range(0f, 2f)]
		private float _jitterStrength;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _lightScatteringDiffusion;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _lightScatteringSpread;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		[Range(4f, 64f)]
		private int _lightScatteringSamples;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[Range(0f, 50f)]
		private float _lightScatteringWeight;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[Range(0f, 50f)]
		[SerializeField]
		private float _lightScatteringIllumination;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[Range(0.9f, 1.1f)]
		private float _lightScatteringDecay;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[Range(0f, 0.2f)]
		private float _lightScatteringExposure;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _lightScatteringJittering;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _fogBlurDepth;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private LayerMask _sunShadowsLayerMask;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunShadowsStrength;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[Range(0f, 0.5f)]
		[SerializeField]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		[Range(0f, 4f)]
		private int _sunShadowsResolution;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[Range(50f, 2000f)]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _sunShadowsCancellation;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[Range(0f, 10f)]
		[SerializeField]
		private float _turbulenceStrength;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		private SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private bool _reduceFlickerBigWorlds;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		[SerializeField]
		private bool _enableMask;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		private LayerMask _maskLayer;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[Range(1f, 4f)]
		private int _maskDownsampling;

		[NonSerialized]
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public float distanceToCameraMin;

		[NonSerialized]
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public float distanceToCameraMax;

		[NonSerialized]
		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public float distanceToCamera;

		[NonSerialized]
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public float distanceToCameraYAxis;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public VolumetricFog fogRenderer;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private VolumetricFog[] allFogRenderers;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private bool isPartOfScene;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float initialFogAlpha;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float targetFogAlpha;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private bool transitionAlpha;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C5")]
		private bool transitionColor;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C6")]
		private bool transitionSpecularColor;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C7")]
		private bool transitionLightColor;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private bool transitionProfile;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
		private bool targetColorActive;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CA")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CB")]
		private bool targetLightColorActive;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Color initialFogColor;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private Color targetFogColor;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Color initialLightColor;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private Color targetLightColor;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private float transitionDuration;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private float transitionStartTime;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private float currentFogAlpha;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private Color currentFogColor;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private Color currentLightColor;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private VolumetricFogProfile initialProfile;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private VolumetricFogProfile targetProfile;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		private float currentFogAltitude;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		private bool _hasCamera;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38D")]
		private bool _hasCameraChecked;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Camera mainCamera;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private Material blurMat;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private int _renderingInstancesCount;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private int lastFrameCount;

		[NonSerialized]
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public Material fogMat;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private RenderTexture depthTexture;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Light[] lastFoundLights;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private Light[] lightBuffer;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private Light[] currentLights;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private Shader depthShader;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private Shader depthShaderAndTrans;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private GameObject depthCamObj;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private Camera depthCam;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private float lastTextureUpdate;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private Color[] noiseColors;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private Color[] adjustedColors;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private float sunLightIntensity;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		private bool needUpdateTexture;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44D")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private int updatingTextureSlice;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private int lastFrameAppliedChaos;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private int lastFrameAppliedWind;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private Light sunLight;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private Vector2 oldSunPos;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private float sunFade;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private Camera depthSunCam;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private Shader depthSunShader;

		[NonSerialized]
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		public bool needUpdateDepthSunTexture;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private Material chaosLerpMat;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		private float turbAcum;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private float deltaTime;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private float timeOfLastRender;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private List<VolumetricFog> fogInstances;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private List<VolumetricFog> fogRenderInstances;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private MeshRenderer mr;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private float lastTimeSortInstances;

		[Token(Token = "0x4001428")]
		private const float FOG_INSTANCES_SORT_INTERVAL = 2f;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
		private Vector3 lastCamPos;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private RenderTextureDescriptor rtMaskDesc;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		private Material maskMaterial;

		[Token(Token = "0x400142D")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		[SerializeField]
		[Range(32f, 2048f)]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		[SerializeField]
		[Range(0f, 100f)]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
		[SerializeField]
		[Range(0f, 25f)]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private int lastTransitionPos;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private bool requiresTextureUpload;

		[Token(Token = "0x400143A")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x170001DD")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x7956A8", Offset = "0x7956A8", VA = "0x7956A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x79588C", Offset = "0x79588C", VA = "0x79588C")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x795894", Offset = "0x795894", VA = "0x795894")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public VolumetricFogProfile profile
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x79653C", Offset = "0x79653C", VA = "0x79653C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x796544", Offset = "0x796544", VA = "0x796544")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public bool profileSync
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x79661C", Offset = "0x79661C", VA = "0x79661C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x796624", Offset = "0x796624", VA = "0x796624")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x796644", Offset = "0x796644", VA = "0x796644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x79664C", Offset = "0x79664C", VA = "0x79664C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x79666C", Offset = "0x79666C", VA = "0x79666C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x796674", Offset = "0x796674", VA = "0x796674")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public TRANSPARENT_MODE transparencyBlendMode
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x796694", Offset = "0x796694", VA = "0x796694")]
			get
			{
				return default(TRANSPARENT_MODE);
			}
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x79669C", Offset = "0x79669C", VA = "0x79669C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public float transparencyBlendPower
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x7967F8", Offset = "0x7967F8", VA = "0x7967F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x796800", Offset = "0x796800", VA = "0x796800")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public LayerMask transparencyLayerMask
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x796848", Offset = "0x796848", VA = "0x796848")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x796850", Offset = "0x796850", VA = "0x796850")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x79689C", Offset = "0x79689C", VA = "0x79689C")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x7968A4", Offset = "0x7968A4", VA = "0x7968A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public bool enableMultipleCameras
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x796BAC", Offset = "0x796BAC", VA = "0x796BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x796BB4", Offset = "0x796BB4", VA = "0x796BB4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool computeDepth
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x796D24", Offset = "0x796D24", VA = "0x796D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x796D2C", Offset = "0x796D2C", VA = "0x796D2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public COMPUTE_DEPTH_SCOPE computeDepthScope
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x796D78", Offset = "0x796D78", VA = "0x796D78")]
			get
			{
				return default(COMPUTE_DEPTH_SCOPE);
			}
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x796D80", Offset = "0x796D80", VA = "0x796D80")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float transparencyCutOff
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x796DD4", Offset = "0x796DD4", VA = "0x796DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x796DDC", Offset = "0x796DDC", VA = "0x796DDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public bool renderBeforeTransparent
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x796E24", Offset = "0x796E24", VA = "0x796E24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x796E2C", Offset = "0x796E2C", VA = "0x796E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public GameObject sun
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x796E88", Offset = "0x796E88", VA = "0x796E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x796E90", Offset = "0x796E90", VA = "0x796E90")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public float timeBetweenTextureUpdates
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x79700C", Offset = "0x79700C", VA = "0x79700C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x797014", Offset = "0x797014", VA = "0x797014")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x797030", Offset = "0x797030", VA = "0x797030")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x797038", Offset = "0x797038", VA = "0x797038")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public float density
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x797084", Offset = "0x797084", VA = "0x797084")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x79708C", Offset = "0x79708C", VA = "0x79708C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public float noiseStrength
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x7971C0", Offset = "0x7971C0", VA = "0x7971C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x7971C8", Offset = "0x7971C8", VA = "0x7971C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public float noiseFinalMultiplier
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x797228", Offset = "0x797228", VA = "0x797228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x797230", Offset = "0x797230", VA = "0x797230")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public float noiseSparse
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x797290", Offset = "0x797290", VA = "0x797290")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x797298", Offset = "0x797298", VA = "0x797298")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public float distance
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x7972F8", Offset = "0x7972F8", VA = "0x7972F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x797300", Offset = "0x797300", VA = "0x797300")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public float maxFogLength
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x797350", Offset = "0x797350", VA = "0x797350")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x797358", Offset = "0x797358", VA = "0x797358")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x7973A0", Offset = "0x7973A0", VA = "0x7973A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x7973A8", Offset = "0x7973A8", VA = "0x7973A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x7973F0", Offset = "0x7973F0", VA = "0x7973F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x7973F8", Offset = "0x7973F8", VA = "0x7973F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float height
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x797448", Offset = "0x797448", VA = "0x797448")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x797450", Offset = "0x797450", VA = "0x797450")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public float baselineHeight
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x7974AC", Offset = "0x7974AC", VA = "0x7974AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x7974B4", Offset = "0x7974B4", VA = "0x7974B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x797528", Offset = "0x797528", VA = "0x797528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x797530", Offset = "0x797530", VA = "0x797530")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x797584", Offset = "0x797584", VA = "0x797584")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x79758C", Offset = "0x79758C", VA = "0x79758C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public float noiseScale
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x7975D4", Offset = "0x7975D4", VA = "0x7975D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x7975DC", Offset = "0x7975DC", VA = "0x7975DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public float alpha
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x79762C", Offset = "0x79762C", VA = "0x79762C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x797634", Offset = "0x797634", VA = "0x797634")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public Color color
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x797688", Offset = "0x797688", VA = "0x797688")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x797694", Offset = "0x797694", VA = "0x797694")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Color specularColor
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x79772C", Offset = "0x79772C", VA = "0x79772C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x797738", Offset = "0x797738", VA = "0x797738")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float specularThreshold
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x7977D4", Offset = "0x7977D4", VA = "0x7977D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x7977DC", Offset = "0x7977DC", VA = "0x7977DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float specularIntensity
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x797810", Offset = "0x797810", VA = "0x797810")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x797818", Offset = "0x797818", VA = "0x797818")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x797870", Offset = "0x797870", VA = "0x797870")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x79787C", Offset = "0x79787C", VA = "0x79787C")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float lightIntensity
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x797904", Offset = "0x797904", VA = "0x797904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x79790C", Offset = "0x79790C", VA = "0x79790C")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public Color lightColor
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x797964", Offset = "0x797964", VA = "0x797964")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x797970", Offset = "0x797970", VA = "0x797970")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x797A10", Offset = "0x797A10", VA = "0x797A10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x797A18", Offset = "0x797A18", VA = "0x797A18")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public float speed
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x797A34", Offset = "0x797A34", VA = "0x797A34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x797A3C", Offset = "0x797A3C", VA = "0x797A3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x797BFC", Offset = "0x797BFC", VA = "0x797BFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x797C08", Offset = "0x797C08", VA = "0x797C08")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public bool useRealTime
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x797D48", Offset = "0x797D48", VA = "0x797D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x797D50", Offset = "0x797D50", VA = "0x797D50")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public Color skyColor
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x797D70", Offset = "0x797D70", VA = "0x797D70")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x797D80", Offset = "0x797D80", VA = "0x797D80")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public float skyHaze
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x797E14", Offset = "0x797E14", VA = "0x797E14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x797E1C", Offset = "0x797E1C", VA = "0x797E1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public float skySpeed
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x797E60", Offset = "0x797E60", VA = "0x797E60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x797E68", Offset = "0x797E68", VA = "0x797E68")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x797E8C", Offset = "0x797E8C", VA = "0x797E8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x797E94", Offset = "0x797E94", VA = "0x797E94")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public float skyAlpha
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x797ED8", Offset = "0x797ED8", VA = "0x797ED8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x797EE0", Offset = "0x797EE0", VA = "0x797EE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public float skyDepth
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x797F30", Offset = "0x797F30", VA = "0x797F30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x797F38", Offset = "0x797F38", VA = "0x797F38")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public GameObject character
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x797F74", Offset = "0x797F74", VA = "0x797F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x797F7C", Offset = "0x797F7C", VA = "0x797F7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public FOG_VOID_TOPOLOGY fogVoidTopology
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x798008", Offset = "0x798008", VA = "0x798008")]
			get
			{
				return default(FOG_VOID_TOPOLOGY);
			}
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x798010", Offset = "0x798010", VA = "0x798010")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x798058", Offset = "0x798058", VA = "0x798058")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x798060", Offset = "0x798060", VA = "0x798060")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0x7980B0", Offset = "0x7980B0", VA = "0x7980B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x7980B8", Offset = "0x7980B8", VA = "0x7980B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x798108", Offset = "0x798108", VA = "0x798108")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x798118", Offset = "0x798118", VA = "0x798118")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x7981A0", Offset = "0x7981A0", VA = "0x7981A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x7981A8", Offset = "0x7981A8", VA = "0x7981A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x7981F8", Offset = "0x7981F8", VA = "0x7981F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x798200", Offset = "0x798200", VA = "0x798200")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		[Obsolete("Fog Void inverted is now deprecated. Use Fog Area settings.")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x798250", Offset = "0x798250", VA = "0x798250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x798258", Offset = "0x798258", VA = "0x798258")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public bool fogAreaShowGizmos
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x798264", Offset = "0x798264", VA = "0x798264")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x79826C", Offset = "0x79826C", VA = "0x79826C")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x7982B8", Offset = "0x7982B8", VA = "0x7982B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x7982C0", Offset = "0x7982C0", VA = "0x7982C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x79834C", Offset = "0x79834C", VA = "0x79834C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x798354", Offset = "0x798354", VA = "0x798354")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public FOG_AREA_FOLLOW_MODE fogAreaFollowMode
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x79839C", Offset = "0x79839C", VA = "0x79839C")]
			get
			{
				return default(FOG_AREA_FOLLOW_MODE);
			}
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x7983A4", Offset = "0x7983A4", VA = "0x7983A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public FOG_AREA_TOPOLOGY fogAreaTopology
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x7983EC", Offset = "0x7983EC", VA = "0x7983EC")]
			get
			{
				return default(FOG_AREA_TOPOLOGY);
			}
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x7983F4", Offset = "0x7983F4", VA = "0x7983F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x79843C", Offset = "0x79843C", VA = "0x79843C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x798444", Offset = "0x798444", VA = "0x798444")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x79848C", Offset = "0x79848C", VA = "0x79848C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x79849C", Offset = "0x79849C", VA = "0x79849C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x7985B8", Offset = "0x7985B8", VA = "0x7985B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x7985C0", Offset = "0x7985C0", VA = "0x7985C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x798608", Offset = "0x798608", VA = "0x798608")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x798610", Offset = "0x798610", VA = "0x798610")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public FOG_AREA_SORTING_MODE fogAreaSortingMode
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x798658", Offset = "0x798658", VA = "0x798658")]
			get
			{
				return default(FOG_AREA_SORTING_MODE);
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x798660", Offset = "0x798660", VA = "0x798660")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public int fogAreaRenderOrder
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x798680", Offset = "0x798680", VA = "0x798680")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x798688", Offset = "0x798688", VA = "0x798688")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x7986A8", Offset = "0x7986A8", VA = "0x7986A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x7986B0", Offset = "0x7986B0", VA = "0x7986B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public Transform pointLightTrackingPivot
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x798A70", Offset = "0x798A70", VA = "0x798A70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x798A78", Offset = "0x798A78", VA = "0x798A78")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x798B10", Offset = "0x798B10", VA = "0x798B10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x798B18", Offset = "0x798B18", VA = "0x798B18")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x798F8C", Offset = "0x798F8C", VA = "0x798F8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x798F94", Offset = "0x798F94", VA = "0x798F94")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float pointLightTrackingNewLightsCheckInterval
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x798FC4", Offset = "0x798FC4", VA = "0x798FC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x798FCC", Offset = "0x798FCC", VA = "0x798FCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float pointLightInscattering
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x798FFC", Offset = "0x798FFC", VA = "0x798FFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x799004", Offset = "0x799004", VA = "0x799004")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float pointLightIntensity
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x799020", Offset = "0x799020", VA = "0x799020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x799028", Offset = "0x799028", VA = "0x799028")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public float pointLightInsideAtten
		{
			[Token(Token = "0x6000CF6")]
			[Address(RVA = "0x799044", Offset = "0x799044", VA = "0x799044")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x79904C", Offset = "0x79904C", VA = "0x79904C")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public int downsampling
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x799094", Offset = "0x799094", VA = "0x799094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x79909C", Offset = "0x79909C", VA = "0x79909C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public bool forceComposition
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x7990C0", Offset = "0x7990C0", VA = "0x7990C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x7990C8", Offset = "0x7990C8", VA = "0x7990C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public bool edgeImprove
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x79911C", Offset = "0x79911C", VA = "0x79911C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x799124", Offset = "0x799124", VA = "0x799124")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x799178", Offset = "0x799178", VA = "0x799178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x799180", Offset = "0x799180", VA = "0x799180")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public float stepping
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x7991D0", Offset = "0x7991D0", VA = "0x7991D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x7991D8", Offset = "0x7991D8", VA = "0x7991D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public float steppingNear
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x799228", Offset = "0x799228", VA = "0x799228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x799230", Offset = "0x799230", VA = "0x799230")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool dithering
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x799280", Offset = "0x799280", VA = "0x799280")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x799288", Offset = "0x799288", VA = "0x799288")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public float ditherStrength
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x7992D4", Offset = "0x7992D4", VA = "0x7992D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x7992DC", Offset = "0x7992DC", VA = "0x7992DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public float jitterStrength
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x799324", Offset = "0x799324", VA = "0x799324")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x79932C", Offset = "0x79932C", VA = "0x79932C")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x799374", Offset = "0x799374", VA = "0x799374")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x79937C", Offset = "0x79937C", VA = "0x79937C")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float lightScatteringDiffusion
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x7993C8", Offset = "0x7993C8", VA = "0x7993C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x7993D0", Offset = "0x7993D0", VA = "0x7993D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x799418", Offset = "0x799418", VA = "0x799418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x799420", Offset = "0x799420", VA = "0x799420")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x799468", Offset = "0x799468", VA = "0x799468")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x799470", Offset = "0x799470", VA = "0x799470")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x7994B8", Offset = "0x7994B8", VA = "0x7994B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x7994C0", Offset = "0x7994C0", VA = "0x7994C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x799508", Offset = "0x799508", VA = "0x799508")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x799510", Offset = "0x799510", VA = "0x799510")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x799558", Offset = "0x799558", VA = "0x799558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x799560", Offset = "0x799560", VA = "0x799560")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x7995A8", Offset = "0x7995A8", VA = "0x7995A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x7995B0", Offset = "0x7995B0", VA = "0x7995B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x7995F8", Offset = "0x7995F8", VA = "0x7995F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x799600", Offset = "0x799600", VA = "0x799600")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public bool fogBlur
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x799648", Offset = "0x799648", VA = "0x799648")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x799650", Offset = "0x799650", VA = "0x799650")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x79969C", Offset = "0x79969C", VA = "0x79969C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x7996A4", Offset = "0x7996A4", VA = "0x7996A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool sunShadows
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x7996EC", Offset = "0x7996EC", VA = "0x7996EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x7996F4", Offset = "0x7996F4", VA = "0x7996F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public LayerMask sunShadowsLayerMask
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x799898", Offset = "0x799898", VA = "0x799898")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x7998A0", Offset = "0x7998A0", VA = "0x7998A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x7998EC", Offset = "0x7998EC", VA = "0x7998EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x7998F4", Offset = "0x7998F4", VA = "0x7998F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x79993C", Offset = "0x79993C", VA = "0x79993C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x799944", Offset = "0x799944", VA = "0x799944")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x799998", Offset = "0x799998", VA = "0x799998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x7999A0", Offset = "0x7999A0", VA = "0x7999A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x7999E8", Offset = "0x7999E8", VA = "0x7999E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x7999F0", Offset = "0x7999F0", VA = "0x7999F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x799A48", Offset = "0x799A48", VA = "0x799A48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x799A50", Offset = "0x799A50", VA = "0x799A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x799AA4", Offset = "0x799AA4", VA = "0x799AA4")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x799AAC", Offset = "0x799AAC", VA = "0x799AAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x799B00", Offset = "0x799B00", VA = "0x799B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x799B08", Offset = "0x799B08", VA = "0x799B08")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x799B50", Offset = "0x799B50", VA = "0x799B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x799B58", Offset = "0x799B58", VA = "0x799B58")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x799BA0", Offset = "0x799BA0", VA = "0x799BA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x799BA8", Offset = "0x799BA8", VA = "0x799BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool useXYPlane
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x799C00", Offset = "0x799C00", VA = "0x799C00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x799C08", Offset = "0x799C08", VA = "0x799C08")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x799C64", Offset = "0x799C64", VA = "0x799C64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x799C6C", Offset = "0x799C6C", VA = "0x799C6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x799C8C", Offset = "0x799C8C", VA = "0x799C8C")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x799C94", Offset = "0x799C94", VA = "0x799C94")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public bool reduceFlickerBigWorlds
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x799CB0", Offset = "0x799CB0", VA = "0x799CB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x799CB8", Offset = "0x799CB8", VA = "0x799CB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public bool enableMask
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x799CD8", Offset = "0x799CD8", VA = "0x799CD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x799CE0", Offset = "0x799CE0", VA = "0x799CE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public LayerMask maskLayer
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x79A238", Offset = "0x79A238", VA = "0x79A238")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x79A240", Offset = "0x79A240", VA = "0x79A240")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public int maskDownsampling
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x79A298", Offset = "0x79A298", VA = "0x79A298")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0x79A2A0", Offset = "0x79A2A0", VA = "0x79A2A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x79A2CC", Offset = "0x79A2CC", VA = "0x79A2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public int renderingInstancesCount
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x79A2D4", Offset = "0x79A2D4", VA = "0x79A2D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public bool hasCamera
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x79A2DC", Offset = "0x79A2DC", VA = "0x79A2DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x7A20A0", Offset = "0x7A20A0", VA = "0x7A20A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x7A20A8", Offset = "0x7A20A8", VA = "0x7A20A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x7A20F8", Offset = "0x7A20F8", VA = "0x7A20F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x7A2108", Offset = "0x7A2108", VA = "0x7A2108")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x7A2188", Offset = "0x7A2188", VA = "0x7A2188")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x7A2198", Offset = "0x7A2198", VA = "0x7A2198")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x7A2228", Offset = "0x7A2228", VA = "0x7A2228")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x7A2230", Offset = "0x7A2230", VA = "0x7A2230")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x7A2288", Offset = "0x7A2288", VA = "0x7A2288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x7A2290", Offset = "0x7A2290", VA = "0x7A2290")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x7A22AC", Offset = "0x7A22AC", VA = "0x7A22AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x7A22B4", Offset = "0x7A22B4", VA = "0x7A22B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x7A31A8", Offset = "0x7A31A8", VA = "0x7A31A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x7A31B0", Offset = "0x7A31B0", VA = "0x7A31B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x79A38C", Offset = "0x79A38C", VA = "0x79A38C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x79BAA8", Offset = "0x79BAA8", VA = "0x79BAA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x79BB40", Offset = "0x79BB40", VA = "0x79BB40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x79BFEC", Offset = "0x79BFEC", VA = "0x79BFEC")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x79C08C", Offset = "0x79C08C", VA = "0x79C08C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x79C1A0", Offset = "0x79C1A0", VA = "0x79C1A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x79DA8C", Offset = "0x79DA8C", VA = "0x79DA8C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x79E3D0", Offset = "0x79E3D0", VA = "0x79E3D0")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x79A7F8", Offset = "0x79A7F8", VA = "0x79A7F8")]
		private bool IsPartOfScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x79A8E8", Offset = "0x79A8E8", VA = "0x79A8E8")]
		private void InitFogMaterial()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x7966E8", Offset = "0x7966E8", VA = "0x7966E8")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6000D52")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000D53")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x79E654", Offset = "0x79E654", VA = "0x79E654")]
		private void RegisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x79BED0", Offset = "0x79BED0", VA = "0x79BED0")]
		private void UnregisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x79B86C", Offset = "0x79B86C", VA = "0x79B86C")]
		private void RegisterWithRenderers()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x79BDE0", Offset = "0x79BDE0", VA = "0x79BDE0")]
		private void UnregisterWithRenderers()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x796BE4", Offset = "0x796BE4", VA = "0x796BE4")]
		public void UpdateMultiCameraSetup()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x79E73C", Offset = "0x79E73C", VA = "0x79E73C")]
		private void SetEnableMultipleCameras(bool state)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x79E748", Offset = "0x79E748", VA = "0x79E748")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x79EC10", Offset = "0x79EC10", VA = "0x79EC10")]
		internal void DoOnRenderImageInstance(Camera mainCamera, RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x7A03A4", Offset = "0x7A03A4", VA = "0x7A03A4")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x79BF60", Offset = "0x79BF60", VA = "0x79BF60")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x79DC68", Offset = "0x79DC68", VA = "0x79DC68")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x79D948", Offset = "0x79D948", VA = "0x79D948")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x7A06A0", Offset = "0x7A06A0", VA = "0x7A06A0")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x7A03E4", Offset = "0x7A03E4", VA = "0x7A03E4")]
		private void SetBlurTexture(RenderTexture source, RenderTextureDescriptor desc)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x7997F8", Offset = "0x7997F8", VA = "0x7997F8")]
		private void DestroySunShadowsDependencies()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x799760", Offset = "0x799760", VA = "0x799760")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x7A100C", Offset = "0x7A100C", VA = "0x7A100C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x7958C0", Offset = "0x7958C0", VA = "0x7958C0")]
		public void UpdatePreset()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x7A10F0", Offset = "0x7A10F0", VA = "0x7A10F0")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x7A1348", Offset = "0x7A1348", VA = "0x7A1348")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x79CF48", Offset = "0x79CF48", VA = "0x79CF48")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x79CFBC", Offset = "0x79CFBC", VA = "0x79CFBC")]
		private void UpdateMaterialHeights()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x7967C8", Offset = "0x7967C8", VA = "0x7967C8")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x79ABB0", Offset = "0x79ABB0", VA = "0x79ABB0")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x7A1464", Offset = "0x7A1464", VA = "0x7A1464")]
		public void NotifyChangesToFogInstances()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x7A0E60", Offset = "0x7A0E60", VA = "0x7A0E60")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x797A80", Offset = "0x797A80", VA = "0x797A80")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x79FBCC", Offset = "0x79FBCC", VA = "0x79FBCC")]
		private void UpdateScatteringData()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x796F28", Offset = "0x796F28", VA = "0x796F28")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x79CE3C", Offset = "0x79CE3C", VA = "0x79CE3C")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x7970EC", Offset = "0x7970EC", VA = "0x7970EC")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x7968F4", Offset = "0x7968F4", VA = "0x7968F4")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x79D268", Offset = "0x79D268", VA = "0x79D268")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x79E0E8", Offset = "0x79E0E8", VA = "0x79E0E8")]
		internal void ApplyChaos()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x79E61C", Offset = "0x79E61C", VA = "0x79E61C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x7A1590", Offset = "0x7A1590", VA = "0x7A1590")]
		public void SetTargetProfile(VolumetricFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x7A1640", Offset = "0x7A1640", VA = "0x7A1640")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x7A1648", Offset = "0x7A1648", VA = "0x7A1648")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x7A1690", Offset = "0x7A1690", VA = "0x7A1690")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x7A16DC", Offset = "0x7A16DC", VA = "0x7A16DC")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x7A1730", Offset = "0x7A1730", VA = "0x7A1730")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x7A175C", Offset = "0x7A175C", VA = "0x7A175C")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x7A17B0", Offset = "0x7A17B0", VA = "0x7A17B0")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x7A17DC", Offset = "0x7A17DC", VA = "0x7A17DC")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x7A1834", Offset = "0x7A1834", VA = "0x7A1834")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x798B60", Offset = "0x798B60", VA = "0x798B60")]
		public void CheckPointLightData()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x7A1860", Offset = "0x7A1860", VA = "0x7A1860")]
		private void PointLightDataSetDefaults(int k)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x7A0040", Offset = "0x7A0040", VA = "0x7A0040")]
		private void SetPointLightMaterialProperties()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x7A18D8", Offset = "0x7A18D8", VA = "0x7A18D8")]
		public Light GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x7A191C", Offset = "0x7A191C", VA = "0x7A191C")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x7986E4", Offset = "0x7986E4", VA = "0x7986E4")]
		public void TrackPointLights(bool forceImmediateUpdate = false)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x7A1994", Offset = "0x7A1994", VA = "0x7A1994")]
		private Light GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x7A1B3C", Offset = "0x7A1B3C", VA = "0x7A1B3C")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius, float height = 16f, float fallOff = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x7A1D54", Offset = "0x7A1D54", VA = "0x7A1D54")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x7A1BE0", Offset = "0x7A1BE0", VA = "0x7A1BE0")]
		private static VolumetricFog CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth)
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x7A1E14", Offset = "0x7A1E14", VA = "0x7A1E14")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x79F8D4", Offset = "0x79F8D4", VA = "0x79F8D4")]
		private void CheckFogAreaDimensions()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x799D10", Offset = "0x799D10", VA = "0x799D10")]
		public void UpdateVolumeMask()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x7A1F48", Offset = "0x7A1F48", VA = "0x7A1F48")]
		public void TogglePreviewMask()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x79BAAC", Offset = "0x79BAAC", VA = "0x79BAAC")]
		private void RemoveMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x79E3DC", Offset = "0x79E3DC", VA = "0x79E3DC")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x79E4A0", Offset = "0x79E4A0", VA = "0x79E4A0")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x79D6E8", Offset = "0x79D6E8", VA = "0x79D6E8")]
		private void FogOfWarUpdate()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x7A26AC", Offset = "0x7A26AC", VA = "0x7A26AC")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x7A26B4", Offset = "0x7A26B4", VA = "0x7A26B4")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x7A2A80", Offset = "0x7A2A80", VA = "0x7A2A80")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x7A2EFC", Offset = "0x7A2EFC", VA = "0x7A2EFC")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x7A22D0", Offset = "0x7A22D0", VA = "0x7A22D0")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x7A2458", Offset = "0x7A2458", VA = "0x7A2458")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x7A32AC", Offset = "0x7A32AC", VA = "0x7A32AC")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x7A33F4", Offset = "0x7A33F4", VA = "0x7A33F4")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[RequireComponent(typeof(VolumetricFog))]
	[ExecuteInEditMode]
	public class VolumetricFogMaterialIntegration : MonoBehaviour
	{
		[Token(Token = "0x2000242")]
		private enum PropertyType
		{
			[Token(Token = "0x4001450")]
			Float,
			[Token(Token = "0x4001451")]
			Float3,
			[Token(Token = "0x4001452")]
			Float4,
			[Token(Token = "0x4001453")]
			Color,
			[Token(Token = "0x4001454")]
			Texture2D,
			[Token(Token = "0x4001455")]
			FloatArray,
			[Token(Token = "0x4001456")]
			Float4Array,
			[Token(Token = "0x4001457")]
			ColorArray,
			[Token(Token = "0x4001458")]
			Matrix4x4
		}

		[Token(Token = "0x2000243")]
		private struct Properties
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropertyType type;
		}

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Properties[] props;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] keywords;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] materials;

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x7A50F8", Offset = "0x7A50F8", VA = "0x7A50F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x7A5150", Offset = "0x7A5150", VA = "0x7A5150")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x7A606C", Offset = "0x7A606C", VA = "0x7A606C")]
		public VolumetricFogMaterialIntegration()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[RequireComponent(typeof(Camera), typeof(VolumetricFog))]
	[AddComponentMenu("")]
	[ExecuteInEditMode]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material copyOpaqueMat;

		[Token(Token = "0x17000259")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x7A6D9C", Offset = "0x7A6D9C", VA = "0x7A6D9C", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x7A6DA4", Offset = "0x7A6DA4", VA = "0x7A6DA4", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x7A6DAC", Offset = "0x7A6DAC", VA = "0x7A6DAC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x7A7098", Offset = "0x7A7098", VA = "0x7A7098", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x7A70F0", Offset = "0x7A70F0", VA = "0x7A70F0")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x2000245")]
	[RequireComponent(typeof(Camera), typeof(VolumetricFog))]
	[AddComponentMenu("")]
	[ExecuteInEditMode]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture opaqueFrame;

		[Token(Token = "0x1700025A")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x7A70F8", Offset = "0x7A70F8", VA = "0x7A70F8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x7A7100", Offset = "0x7A7100", VA = "0x7A7100", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x7A7108", Offset = "0x7A7108", VA = "0x7A7108")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x7A72A8", Offset = "0x7A72A8", VA = "0x7A72A8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x7A7334", Offset = "0x7A7334", VA = "0x7A7334", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x7A738C", Offset = "0x7A738C", VA = "0x7A738C")]
		public VolumetricFogPreT()
		{
		}
	}
	[Token(Token = "0x2000246")]
	[CreateAssetMenu(fileName = "VolumetricFogProfile", menuName = "Volumetric Fog Profile", order = 100)]
	public class VolumetricFogProfile : ScriptableObject
	{
		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LIGHTING_MODEL lightingModel;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool sunCopyColor;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1.25f)]
		public float density;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float noiseStrength;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 500f)]
		public float height;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float baselineHeight;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1000f)]
		public float distance;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 5f)]
		public float distanceFallOff;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 2000f)]
		public float maxFogLength;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 1f)]
		public float maxFogLengthFallOff;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool baselineRelativeToCamera;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		public float baselineRelativeToCameraDelay;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0.2f, 10f)]
		public float noiseScale;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(-0.3f, 2f)]
		public float noiseSparse;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(1f, 2f)]
		public float noiseFinalMultiplier;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 1.05f)]
		public float alpha;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color color;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color specularColor;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 1f)]
		public float specularThreshold;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 1f)]
		public float specularIntensity;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 lightDirection;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(-1f, 3f)]
		public float lightIntensity;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color lightColor;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(0f, 1f)]
		public float speed;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool useRealTime;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 windDirection;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Range(0f, 10f)]
		public float turbulenceStrength;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool useXYPlane;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Color skyColor;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Range(0f, 1000f)]
		public float skyHaze;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Range(0f, 1f)]
		public float skySpeed;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Range(0f, 1f)]
		public float skyNoiseStrength;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Range(0f, 1f)]
		public float skyAlpha;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float stepping;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float steppingNear;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool dithering;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float ditherStrength;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool downsamplingOverride;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Range(1f, 8f)]
		public int downsampling;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool forceComposition;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool edgeImprove;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Range(1E-05f, 0.005f)]
		public float edgeThreshold;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool lightScatteringOverride;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		public bool lightScatteringEnabled;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Range(0f, 1f)]
		[SerializeField]
		public float lightScatteringDiffusion;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[Range(0f, 1f)]
		public float lightScatteringSpread;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Range(4f, 64f)]
		[SerializeField]
		public int lightScatteringSamples;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[Range(0f, 50f)]
		public float lightScatteringWeight;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Range(0f, 50f)]
		[SerializeField]
		public float lightScatteringIllumination;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[Range(0.9f, 1.1f)]
		[SerializeField]
		public float lightScatteringDecay;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Range(0f, 0.2f)]
		[SerializeField]
		public float lightScatteringExposure;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[Range(0f, 1f)]
		[SerializeField]
		public float lightScatteringJittering;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool fogVoidOverride;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public FOG_VOID_TOPOLOGY fogVoidTopology;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[Range(0f, 10f)]
		public float fogVoidFallOff;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float fogVoidRadius;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Vector3 fogVoidPosition;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float fogVoidDepth;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float fogVoidHeight;

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x7A7394", Offset = "0x7A7394", VA = "0x7A7394")]
		public void Load(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x7A7778", Offset = "0x7A7778", VA = "0x7A7778")]
		public void Save(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x7A791C", Offset = "0x7A791C", VA = "0x7A791C")]
		public static void Lerp(VolumetricFogProfile profile1, VolumetricFogProfile profile2, float t, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x7A81AC", Offset = "0x7A81AC", VA = "0x7A81AC")]
		public VolumetricFogProfile()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x2000247")]
	[HelpURL("http://kronnect.com/taptapgo")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x7A8310", Offset = "0x7A8310", VA = "0x7A8310")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x7A94E4", Offset = "0x7A94E4", VA = "0x7A94E4")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x400149B")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x400149C")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x400149D")]
		MobileFogOnlyGround,
		[Token(Token = "0x400149E")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x400149F")]
		MobileFogSimple,
		[Token(Token = "0x40014A0")]
		MobileFogBasic,
		[Token(Token = "0x40014A1")]
		MobileFogOrthogonal,
		[Token(Token = "0x40014A2")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x2000249")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x7A9608", Offset = "0x7A9608", VA = "0x7A9608")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024A")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x40014A4")]
		Clear,
		[Token(Token = "0x40014A5")]
		Mist,
		[Token(Token = "0x40014A6")]
		WindyMist,
		[Token(Token = "0x40014A7")]
		GroundFog,
		[Token(Token = "0x40014A8")]
		Fog,
		[Token(Token = "0x40014A9")]
		HeavyFog,
		[Token(Token = "0x40014AA")]
		SandStorm,
		[Token(Token = "0x40014AB")]
		Custom
	}
	[Token(Token = "0x200024B")]
	[AddComponentMenu("")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 0.2f)]
		[SerializeField]
		private float _ditherStrength;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		[SerializeField]
		protected float _alpha;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _noiseStrength;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(0.01f, 1f)]
		private float _noiseScale;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 0.999f)]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Range(0.0001f, 2f)]
		private float _distanceFallOff;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1.2f)]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(0.0001f, 0.5f)]
		private float _maxDistanceFallOff;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Range(0f, 500f)]
		private float _height;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Range(0f, 500f)]
		private float _maxHeight;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Range(0.0001f, 1f)]
		private float _heightFallOff;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 15f)]
		[SerializeField]
		private float _turbulence;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Range(0f, 5f)]
		private float _speed;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Range(0f, 500f)]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _skySpeed;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _skyNoiseStrength;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Range(0f, 1f)]
		[SerializeField]
		private float _skyAlpha;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _scattering;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Color _scatteringColor;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMatAdv;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material fogMatFogSky;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material fogMatVol;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material fogMatSimple;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material fogMatBasic;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float initialFogAlpha;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float targetFogAlpha;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool targetFogColors;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Color initialFogColor1;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Color targetFogColor1;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Color initialFogColor2;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Color targetFogColor2;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float transitionDuration;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float transitionStartTime;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentFogAlpha;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool transitionAlpha;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool transitionColor;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool transitionProfile;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color currentFogColor1;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color currentFogColor2;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Camera currentCamera;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Light sunLight;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 sunDirection;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Color sunColor;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float sunIntensity;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected bool matOrtho;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x1700025B")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x7A962C", Offset = "0x7A962C", VA = "0x7A962C")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x7A9634", Offset = "0x7A9634", VA = "0x7A9634")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x7A96A8", Offset = "0x7A96A8", VA = "0x7A96A8")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x7A96B0", Offset = "0x7A96B0", VA = "0x7A96B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x7A96C8", Offset = "0x7A96C8", VA = "0x7A96C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x7A96D0", Offset = "0x7A96D0", VA = "0x7A96D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x7A9BF4", Offset = "0x7A9BF4", VA = "0x7A9BF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x7A9BFC", Offset = "0x7A9BFC", VA = "0x7A9BFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool enableDithering
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x7A9C14", Offset = "0x7A9C14", VA = "0x7A9C14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x7A9C1C", Offset = "0x7A9C1C", VA = "0x7A9C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public float ditherStrength
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x7A9C60", Offset = "0x7A9C60", VA = "0x7A9C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x7A9C68", Offset = "0x7A9C68", VA = "0x7A9C68")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public float alpha
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x7A9CA8", Offset = "0x7A9CA8", VA = "0x7A9CA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x7A9CB0", Offset = "0x7A9CB0", VA = "0x7A9CB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float noiseStrength
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x7A9CD0", Offset = "0x7A9CD0", VA = "0x7A9CD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x7A9CD8", Offset = "0x7A9CD8", VA = "0x7A9CD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public float noiseScale
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x7A9CF8", Offset = "0x7A9CF8", VA = "0x7A9CF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x7A9D00", Offset = "0x7A9D00", VA = "0x7A9D00")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public float distance
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x7A9D48", Offset = "0x7A9D48", VA = "0x7A9D48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x7A9D50", Offset = "0x7A9D50", VA = "0x7A9D50")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x7A9D70", Offset = "0x7A9D70", VA = "0x7A9D70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x7A9D78", Offset = "0x7A9D78", VA = "0x7A9D78")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public float maxDistance
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x7A9D98", Offset = "0x7A9D98", VA = "0x7A9D98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x7A9DA0", Offset = "0x7A9DA0", VA = "0x7A9DA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x7A9DC0", Offset = "0x7A9DC0", VA = "0x7A9DC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x7A9DC8", Offset = "0x7A9DC8", VA = "0x7A9DC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float height
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x7A9DE8", Offset = "0x7A9DE8", VA = "0x7A9DE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x7A9DF0", Offset = "0x7A9DF0", VA = "0x7A9DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public float maxHeight
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x7A9E10", Offset = "0x7A9E10", VA = "0x7A9E10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x7A9E18", Offset = "0x7A9E18", VA = "0x7A9E18")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float heightFallOff
		{
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x7A9E60", Offset = "0x7A9E60", VA = "0x7A9E60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x7A9E68", Offset = "0x7A9E68", VA = "0x7A9E68")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float baselineHeight
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x7A9E88", Offset = "0x7A9E88", VA = "0x7A9E88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x7A9E90", Offset = "0x7A9E90", VA = "0x7A9E90")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x7A9ED0", Offset = "0x7A9ED0", VA = "0x7A9ED0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x7A9ED8", Offset = "0x7A9ED8", VA = "0x7A9ED8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public float turbulence
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x7A9F1C", Offset = "0x7A9F1C", VA = "0x7A9F1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x7A9F24", Offset = "0x7A9F24", VA = "0x7A9F24")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public float speed
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x7A9F44", Offset = "0x7A9F44", VA = "0x7A9F44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x7A9F4C", Offset = "0x7A9F4C", VA = "0x7A9F4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x7A9F6C", Offset = "0x7A9F6C", VA = "0x7A9F6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x7A9F78", Offset = "0x7A9F78", VA = "0x7A9F78")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Color color
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x7A9FE8", Offset = "0x7A9FE8", VA = "0x7A9FE8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x7A9FF4", Offset = "0x7A9FF4", VA = "0x7A9FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public Color color2
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x7AA050", Offset = "0x7AA050", VA = "0x7AA050")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x7AA05C", Offset = "0x7AA05C", VA = "0x7AA05C")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float skyHaze
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x7AA0B8", Offset = "0x7AA0B8", VA = "0x7AA0B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x7AA0C0", Offset = "0x7AA0C0", VA = "0x7AA0C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float skySpeed
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x7AA0E0", Offset = "0x7AA0E0", VA = "0x7AA0E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x7AA0E8", Offset = "0x7AA0E8", VA = "0x7AA0E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x7AA108", Offset = "0x7AA108", VA = "0x7AA108")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x7AA110", Offset = "0x7AA110", VA = "0x7AA110")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public float skyAlpha
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x7AA130", Offset = "0x7AA130", VA = "0x7AA130")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x7AA138", Offset = "0x7AA138", VA = "0x7AA138")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public GameObject sun
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x7AA158", Offset = "0x7AA158", VA = "0x7AA158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x7AA160", Offset = "0x7AA160", VA = "0x7AA160")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x7AA210", Offset = "0x7AA210", VA = "0x7AA210")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x7AA218", Offset = "0x7AA218", VA = "0x7AA218")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x7AA25C", Offset = "0x7AA25C", VA = "0x7AA25C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x7AA268", Offset = "0x7AA268", VA = "0x7AA268")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x7AA2D8", Offset = "0x7AA2D8", VA = "0x7AA2D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x7AA2E4", Offset = "0x7AA2E4", VA = "0x7AA2E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x7AA354", Offset = "0x7AA354", VA = "0x7AA354")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x7AA35C", Offset = "0x7AA35C", VA = "0x7AA35C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x7AA39C", Offset = "0x7AA39C", VA = "0x7AA39C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x7AA3A4", Offset = "0x7AA3A4", VA = "0x7AA3A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public bool useXZDistance
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0x7AA3E8", Offset = "0x7AA3E8", VA = "0x7AA3E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x7AA3F0", Offset = "0x7AA3F0", VA = "0x7AA3F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public float scattering
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x7AA434", Offset = "0x7AA434", VA = "0x7AA434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x7AA43C", Offset = "0x7AA43C", VA = "0x7AA43C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Color scatteringColor
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x7AA47C", Offset = "0x7AA47C", VA = "0x7AA47C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x7AA488", Offset = "0x7AA488", VA = "0x7AA488")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x7AA504", Offset = "0x7AA504", VA = "0x7AA504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x7AA738", Offset = "0x7AA738", VA = "0x7AA738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x7AA654", Offset = "0x7AA654", VA = "0x7AA654")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x7AA740", Offset = "0x7AA740", VA = "0x7AA740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x7AA82C", Offset = "0x7AA82C", VA = "0x7AA82C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x7AA830", Offset = "0x7AA830", VA = "0x7AA830")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x7AA758", Offset = "0x7AA758", VA = "0x7AA758")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x7AAD10", Offset = "0x7AAD10", VA = "0x7AAD10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x7ABDF0", Offset = "0x7ABDF0", VA = "0x7ABDF0")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x7ABDFC", Offset = "0x7ABDFC", VA = "0x7ABDFC")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x7ACB30", Offset = "0x7ACB30", VA = "0x7ACB30")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x7ACBCC", Offset = "0x7ACBCC", VA = "0x7ACBCC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x7A9414", Offset = "0x7A9414", VA = "0x7A9414")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x7A9678", Offset = "0x7A9678", VA = "0x7A9678")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x7A863C", Offset = "0x7A863C", VA = "0x7A863C")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x7ACEF8", Offset = "0x7ACEF8", VA = "0x7ACEF8")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x7ABA10", Offset = "0x7ABA10", VA = "0x7ABA10")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x7ABA70", Offset = "0x7ABA70", VA = "0x7ABA70")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x7ACF24", Offset = "0x7ACF24", VA = "0x7ACF24")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x7AD080", Offset = "0x7AD080", VA = "0x7AD080")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x7AD088", Offset = "0x7AD088", VA = "0x7AD088")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x7AD108", Offset = "0x7AD108", VA = "0x7AD108")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x7AD118", Offset = "0x7AD118", VA = "0x7AD118")]
		public void SetTargetColors(Color color1, Color color2, float duration)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x7AD20C", Offset = "0x7AD20C", VA = "0x7AD20C")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x7AAC14", Offset = "0x7AAC14", VA = "0x7AAC14")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x7AD3D4", Offset = "0x7AD3D4", VA = "0x7AD3D4")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x7AD7D4", Offset = "0x7AD7D4", VA = "0x7AD7D4")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x7AD280", Offset = "0x7AD280", VA = "0x7AD280")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x7AD240", Offset = "0x7AD240", VA = "0x7AD240")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x7A94E8", Offset = "0x7A94E8", VA = "0x7A94E8")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x200024C")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	[HelpURL("http://kronnect.com/taptapgo")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture rt;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[Range(0.1f, 2f)]
		public float renderScale;

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x7ADB20", Offset = "0x7ADB20", VA = "0x7ADB20")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x7ADD30", Offset = "0x7ADD30", VA = "0x7ADD30")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x7AE04C", Offset = "0x7AE04C", VA = "0x7AE04C")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[HelpURL("http://kronnect.com/taptapgo")]
	[ExecuteInEditMode]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float alpha;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float noiseStrength;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 0.999f)]
		public float distance;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 2f)]
		public float distanceFallOff;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 500f)]
		public float height;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float heightFallOff;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject sun;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light sunLight;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 sunDirection;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color sunColor;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float sunIntensity;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x7AE058", Offset = "0x7AE058", VA = "0x7AE058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x7AE088", Offset = "0x7AE088", VA = "0x7AE088")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x7AE0A0", Offset = "0x7AE0A0", VA = "0x7AE0A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x7AE070", Offset = "0x7AE070", VA = "0x7AE070")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x7AE470", Offset = "0x7AE470", VA = "0x7AE470")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x7AE218", Offset = "0x7AE218", VA = "0x7AE218")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x7AE538", Offset = "0x7AE538", VA = "0x7AE538")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fogMat;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x17000281")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x7AE5C8", Offset = "0x7AE5C8", VA = "0x7AE5C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x7AE69C", Offset = "0x7AE69C", VA = "0x7AE69C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x7AE808", Offset = "0x7AE808", VA = "0x7AE808")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x7AE8A8", Offset = "0x7AE8A8", VA = "0x7AE8A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x7AE70C", Offset = "0x7AE70C", VA = "0x7AE70C")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x7AE98C", Offset = "0x7AE98C", VA = "0x7AE98C")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x7AEB20", Offset = "0x7AEB20", VA = "0x7AEB20")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x7AE9CC", Offset = "0x7AE9CC", VA = "0x7AE9CC")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x7AEF68", Offset = "0x7AEF68", VA = "0x7AEF68")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x7AF1E0", Offset = "0x7AF1E0", VA = "0x7AF1E0")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[CreateAssetMenu(fileName = "DynamicFogProfile", menuName = "Dynamic Fog Profile", order = 100)]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FOG_TYPE effectType;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableDithering;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 0.2f)]
		public float ditherStrength;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float alpha;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float noiseStrength;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.01f, 1f)]
		public float noiseScale;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 0.999f)]
		public float distance;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.0001f, 2f)]
		public float distanceFallOff;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1.2f)]
		public float maxDistance;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0.0001f, 0.5f)]
		public float maxDistanceFallOff;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 500f)]
		public float height;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 500f)]
		public float maxHeight;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0.0001f, 1f)]
		public float heightFallOff;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float baselineHeight;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool clipUnderBaseline;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 15f)]
		public float turbulence;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 5f)]
		public float speed;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 windDirection;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color color;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color color2;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Range(0f, 500f)]
		public float skyHaze;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(0f, 1f)]
		public float skySpeed;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 1f)]
		public float skyNoiseStrength;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Range(0f, 1f)]
		public float skyAlpha;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool useXZDistance;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Range(0f, 1f)]
		public float scattering;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color scatteringColor;

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x7A97C4", Offset = "0x7A97C4", VA = "0x7A97C4")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x7ACFEC", Offset = "0x7ACFEC", VA = "0x7ACFEC")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x7AB344", Offset = "0x7AB344", VA = "0x7AB344")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x7AF1F0", Offset = "0x7AF1F0", VA = "0x7AF1F0")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4001527")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Enables transition to a given profile.")]
		public bool enableProfileTransition;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Assign the transition profile.")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Enables alpha transition.")]
		public bool enableAlphaTransition;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Target alpha for fog when camera enters this fog volume")]
		[Range(0f, 1f)]
		public float targetFogAlpha;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Target alpha for sky haze when camera enters this fog volume")]
		[Range(0f, 1f)]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Enables fog color transition.")]
		public bool enableFogColorTransition;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Target fog color 1 when gamera enters this fog folume")]
		public Color targetFogColor1;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Target fog color 2 when gamera enters this fog folume")]
		public Color targetFogColor2;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Set this to zero for changing fog alpha immediately upon enter/exit fog volume.")]
		public float transitionDuration;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Set collider that will trigger this fog volume. If not set, this fog volume will react to any collider which has the main camera. If you use a third person controller, assign the character collider here.")]
		public Collider targetCollider;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("When enabled, a console message will be printed whenever this fog volume is entered or exited.")]
		public bool debugMode;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Assign target Dynamic Fog component that will be affected by this volume.")]
		public DynamicFog targetFog;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool cameraInside;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x7AF288", Offset = "0x7AF288", VA = "0x7AF288")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x7AF34C", Offset = "0x7AF34C", VA = "0x7AF34C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x7AF588", Offset = "0x7AF588", VA = "0x7AF588")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x7AF7A4", Offset = "0x7AF7A4", VA = "0x7AF7A4")]
		public FogVolume()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000251")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh texto;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float updateInterval;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accum;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frames;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeleft;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string frameString;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x7AF7CC", Offset = "0x7AF7CC", VA = "0x7AF7CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x7AF830", Offset = "0x7AF830", VA = "0x7AF830")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x7AF908", Offset = "0x7AF908", VA = "0x7AF908")]
		public FPSCounter()
		{
		}
	}
}
namespace Rewired
{
	[Token(Token = "0x2000252")]
	public interface IGamepadTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000253")]
	public interface IRacingWheelTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000254")]
	public interface IHOTASTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000255")]
	public interface IFlightYokeTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000256")]
	public interface IFlightPedalsTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000257")]
	public interface ISixDofControllerTemplate : IControllerTemplate
	{
	}
	[Token(Token = "0x2000258")]
	public sealed class GamepadTemplate : ControllerTemplate, IGamepadTemplate, IControllerTemplate
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x7AF918", Offset = "0x7AF918", VA = "0x7AF918")]
		public GamepadTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public sealed class RacingWheelTemplate : ControllerTemplate, IRacingWheelTemplate, IControllerTemplate
	{
		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x7AF99C", Offset = "0x7AF99C", VA = "0x7AF99C")]
		public RacingWheelTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public sealed class HOTASTemplate : ControllerTemplate, IHOTASTemplate, IControllerTemplate
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x7AFA20", Offset = "0x7AFA20", VA = "0x7AFA20")]
		public HOTASTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public sealed class FlightYokeTemplate : ControllerTemplate, IFlightYokeTemplate, IControllerTemplate
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x7AFAA4", Offset = "0x7AFAA4", VA = "0x7AFAA4")]
		public FlightYokeTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public sealed class FlightPedalsTemplate : ControllerTemplate, IFlightPedalsTemplate, IControllerTemplate
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x7AFB28", Offset = "0x7AFB28", VA = "0x7AFB28")]
		public FlightPedalsTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public sealed class SixDofControllerTemplate : ControllerTemplate, ISixDofControllerTemplate, IControllerTemplate
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x7AFBAC", Offset = "0x7AFBAC", VA = "0x7AFBAC")]
		public SixDofControllerTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AddComponentMenu("Rewired/Input Manager")]
	[EditorBrowsable(EditorBrowsableState.Never)]
	public sealed class InputManager : InputManager_Base
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool ignoreRecompile;

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x7AFC30", Offset = "0x7AFC30", VA = "0x7AFC30", Slot = "4")]
		protected override void OnInitialized()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x7AFCE0", Offset = "0x7AFCE0", VA = "0x7AFCE0", Slot = "5")]
		protected override void OnDeinitialized()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x7AFD88", Offset = "0x7AFD88", VA = "0x7AFD88", Slot = "6")]
		protected override void DetectPlatform()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x7AFF60", Offset = "0x7AFF60", VA = "0x7AFF60", Slot = "7")]
		protected override void CheckRecompile()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x7AFF64", Offset = "0x7AFF64", VA = "0x7AFF64", Slot = "8")]
		protected override IExternalTools GetExternalTools()
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x7AFEB4", Offset = "0x7AFEB4", VA = "0x7AFEB4")]
		private bool CheckDeviceName(string searchPattern, string deviceName, string deviceModel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x7AFC34", Offset = "0x7AFC34", VA = "0x7AFC34")]
		private void SubscribeEvents()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x7AFCE4", Offset = "0x7AFCE4", VA = "0x7AFCE4")]
		private void UnsubscribeEvents()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x7AFFC8", Offset = "0x7AFFC8", VA = "0x7AFFC8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x7AFFD0", Offset = "0x7AFFD0", VA = "0x7AFFD0")]
		public InputManager()
		{
		}
	}
}
namespace Rewired.Utils
{
	[Token(Token = "0x200025F")]
	[EditorBrowsable(EditorBrowsableState.Never)]
	public class ExternalTools : IExternalTools
	{
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Action<bool> _EditorPausedStateChangedEvent;

		[Token(Token = "0x14000006")]
		public event Action<bool> EditorPausedStateChangedEvent
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x7AFFDC", Offset = "0x7AFFDC", VA = "0x7AFFDC", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x7B0084", Offset = "0x7B0084", VA = "0x7B0084", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event Action<uint, bool> XboxOneInput_OnGamepadStateChange
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x7B018C", Offset = "0x7B018C", VA = "0x7B018C", Slot = "12")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x7B023C", Offset = "0x7B023C", VA = "0x7B023C", Slot = "13")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x7AFFC0", Offset = "0x7AFFC0", VA = "0x7AFFC0")]
		public ExternalTools()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x7AFFD8", Offset = "0x7AFFD8", VA = "0x7AFFD8", Slot = "6")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x7B012C", Offset = "0x7B012C", VA = "0x7B012C", Slot = "7")]
		public object GetPlatformInitializer()
		{
			return null;
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x7B0134", Offset = "0x7B0134", VA = "0x7B0134", Slot = "8")]
		public string GetFocusedEditorWindowTitle()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x7B017C", Offset = "0x7B017C", VA = "0x7B017C", Slot = "9")]
		public bool IsEditorSceneViewFocused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x7B0184", Offset = "0x7B0184", VA = "0x7B0184", Slot = "10")]
		public bool LinuxInput_IsJoystickPreconfigured(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x7B02EC", Offset = "0x7B02EC", VA = "0x7B02EC", Slot = "11")]
		public ulong XboxOneInput_GetControllerId(uint unityJoystickId)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x7B02F4", Offset = "0x7B02F4", VA = "0x7B02F4", Slot = "14")]
		public bool XboxOneInput_IsGamepadActive(uint unityJoystickId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x7B02FC", Offset = "0x7B02FC", VA = "0x7B02FC", Slot = "15")]
		public string XboxOneInput_GetControllerType(ulong xboxControllerId)
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x7B0344", Offset = "0x7B0344", VA = "0x7B0344", Slot = "16")]
		public uint XboxOneInput_GetJoystickId(ulong xboxControllerId)
		{
			return default(uint);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x7B034C", Offset = "0x7B034C", VA = "0x7B034C", Slot = "17")]
		public void XboxOne_Gamepad_UpdatePlugin()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x7B0350", Offset = "0x7B0350", VA = "0x7B0350", Slot = "18")]
		public bool XboxOne_Gamepad_SetGamepadVibration(ulong xboxOneJoystickId, float leftMotor, float rightMotor, float leftTriggerLevel, float rightTriggerLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x7B0358", Offset = "0x7B0358", VA = "0x7B0358", Slot = "19")]
		public Vector3 PS4Input_GetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x7B039C", Offset = "0x7B039C", VA = "0x7B039C", Slot = "20")]
		public Vector3 PS4Input_GetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x7B03E0", Offset = "0x7B03E0", VA = "0x7B03E0", Slot = "21")]
		public Vector4 PS4Input_GetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x7B0424", Offset = "0x7B0424", VA = "0x7B0424", Slot = "22")]
		public void PS4Input_GetLastTouchData(int id, out int touchNum, out int touch0x, out int touch0y, out int touch0id, out int touch1x, out int touch1y, out int touch1id)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x7B0448", Offset = "0x7B0448", VA = "0x7B0448", Slot = "23")]
		public void PS4Input_GetPadControllerInformation(int id, out float touchpixelDensity, out int touchResolutionX, out int touchResolutionY, out int analogDeadZoneLeft, out int analogDeadZoneright, out int connectionType)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x7B0464", Offset = "0x7B0464", VA = "0x7B0464", Slot = "24")]
		public void PS4Input_PadSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x7B0468", Offset = "0x7B0468", VA = "0x7B0468", Slot = "25")]
		public void PS4Input_PadSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x7B046C", Offset = "0x7B046C", VA = "0x7B046C", Slot = "26")]
		public void PS4Input_PadSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x7B0470", Offset = "0x7B0470", VA = "0x7B0470", Slot = "27")]
		public void PS4Input_PadSetLightBar(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x7B0474", Offset = "0x7B0474", VA = "0x7B0474", Slot = "28")]
		public void PS4Input_PadResetLightBar(int id)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x7B0478", Offset = "0x7B0478", VA = "0x7B0478", Slot = "29")]
		public void PS4Input_PadSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x7B047C", Offset = "0x7B047C", VA = "0x7B047C", Slot = "30")]
		public void PS4Input_PadResetOrientation(int id)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x7B0480", Offset = "0x7B0480", VA = "0x7B0480", Slot = "31")]
		public bool PS4Input_PadIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x7B0488", Offset = "0x7B0488", VA = "0x7B0488", Slot = "32")]
		public int PS4Input_GetDeviceClassForHandle(int handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x7B0490", Offset = "0x7B0490", VA = "0x7B0490", Slot = "33")]
		public string PS4Input_GetDeviceClassString(int intValue)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x7B0498", Offset = "0x7B0498", VA = "0x7B0498", Slot = "34")]
		public int PS4Input_PadGetUsersHandles2(int maxControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x7B04A0", Offset = "0x7B04A0", VA = "0x7B04A0", Slot = "35")]
		public Vector3 PS4Input_SpecialGetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x7B04E4", Offset = "0x7B04E4", VA = "0x7B04E4", Slot = "36")]
		public Vector3 PS4Input_SpecialGetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x7B0528", Offset = "0x7B0528", VA = "0x7B0528", Slot = "37")]
		public Vector4 PS4Input_SpecialGetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x7B056C", Offset = "0x7B056C", VA = "0x7B056C", Slot = "38")]
		public int PS4Input_SpecialGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x7B0574", Offset = "0x7B0574", VA = "0x7B0574", Slot = "39")]
		public bool PS4Input_SpecialIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x7B057C", Offset = "0x7B057C", VA = "0x7B057C", Slot = "40")]
		public void PS4Input_SpecialResetLightSphere(int id)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x7B0580", Offset = "0x7B0580", VA = "0x7B0580", Slot = "41")]
		public void PS4Input_SpecialResetOrientation(int id)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x7B0584", Offset = "0x7B0584", VA = "0x7B0584", Slot = "42")]
		public void PS4Input_SpecialSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x7B0588", Offset = "0x7B0588", VA = "0x7B0588", Slot = "43")]
		public void PS4Input_SpecialSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x7B058C", Offset = "0x7B058C", VA = "0x7B058C", Slot = "44")]
		public void PS4Input_SpecialSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x7B0590", Offset = "0x7B0590", VA = "0x7B0590", Slot = "45")]
		public void PS4Input_SpecialSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x7B0594", Offset = "0x7B0594", VA = "0x7B0594", Slot = "46")]
		public void PS4Input_SpecialSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x7B0598", Offset = "0x7B0598", VA = "0x7B0598", Slot = "47")]
		public int PS4Input_AimGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x7B05A0", Offset = "0x7B05A0", VA = "0x7B05A0", Slot = "48")]
		public bool PS4Input_AimIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x7B05A8", Offset = "0x7B05A8", VA = "0x7B05A8", Slot = "49")]
		public void PS4Input_AimResetLightSphere(int id)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x7B05AC", Offset = "0x7B05AC", VA = "0x7B05AC", Slot = "50")]
		public void PS4Input_AimResetOrientation(int id)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x7B05B0", Offset = "0x7B05B0", VA = "0x7B05B0", Slot = "51")]
		public void PS4Input_AimSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x7B05B4", Offset = "0x7B05B4", VA = "0x7B05B4", Slot = "52")]
		public void PS4Input_AimSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x7B05B8", Offset = "0x7B05B8", VA = "0x7B05B8", Slot = "53")]
		public void PS4Input_AimSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x7B05BC", Offset = "0x7B05BC", VA = "0x7B05BC", Slot = "54")]
		public void PS4Input_AimSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x7B05C0", Offset = "0x7B05C0", VA = "0x7B05C0", Slot = "55")]
		public void PS4Input_AimSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x7B05C4", Offset = "0x7B05C4", VA = "0x7B05C4", Slot = "56")]
		public void GetDeviceVIDPIDs(out List<int> vids, out List<int> pids)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x7B0E3C", Offset = "0x7B0E3C", VA = "0x7B0E3C", Slot = "57")]
		public int GetAndroidAPILevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x7B108C", Offset = "0x7B108C", VA = "0x7B108C", Slot = "58")]
		public bool UnityUI_Graphic_GetRaycastTarget(object graphic)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x7B1188", Offset = "0x7B1188", VA = "0x7B1188", Slot = "59")]
		public void UnityUI_Graphic_SetRaycastTarget(object graphic, bool value)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x7B1294", Offset = "0x7B1294", VA = "0x7B1294", Slot = "60")]
		public IControllerTemplate CreateControllerTemplate(Guid typeGuid, object payload)
		{
			return null;
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x7B1304", Offset = "0x7B1304", VA = "0x7B1304", Slot = "61")]
		public Type[] GetControllerTemplateTypes()
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x7B138C", Offset = "0x7B138C", VA = "0x7B138C", Slot = "62")]
		public Type[] GetControllerTemplateInterfaceTypes()
		{
			return null;
		}
	}
}
namespace Rewired.Data
{
	[Token(Token = "0x2000260")]
	public class UserDataStore_PlayerPrefs : UserDataStore
	{
		[Token(Token = "0x2000261")]
		private class ControllerAssignmentSaveInfo
		{
			[Token(Token = "0x2000262")]
			public class PlayerInfo
			{
				[Token(Token = "0x4001559")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int id;

				[Token(Token = "0x400155A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public bool hasKeyboard;

				[Token(Token = "0x400155B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool hasMouse;

				[Token(Token = "0x400155C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public JoystickInfo[] joysticks;

				[Token(Token = "0x1700028D")]
				public int joystickCount
				{
					[Token(Token = "0x6000EF2")]
					[Address(RVA = "0x7B837C", Offset = "0x7B837C", VA = "0x7B837C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6000EF3")]
				[Address(RVA = "0x7B82EC", Offset = "0x7B82EC", VA = "0x7B82EC")]
				public PlayerInfo()
				{
				}
			}

			[Token(Token = "0x2000263")]
			public class JoystickInfo
			{
				[Token(Token = "0x400155D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Guid instanceGuid;

				[Token(Token = "0x400155E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string hardwareIdentifier;

				[Token(Token = "0x400155F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int id;

				[Token(Token = "0x6000EF4")]
				[Address(RVA = "0x7B8394", Offset = "0x7B8394", VA = "0x7B8394")]
				public JoystickInfo()
				{
				}
			}

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerInfo[] players;

			[Token(Token = "0x1700028C")]
			public int playerCount
			{
				[Token(Token = "0x6000EEE")]
				[Address(RVA = "0x7B81BC", Offset = "0x7B81BC", VA = "0x7B81BC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x7B81D4", Offset = "0x7B81D4", VA = "0x7B81D4")]
			public ControllerAssignmentSaveInfo(int playerCount)
			{
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x7B82F4", Offset = "0x7B82F4", VA = "0x7B82F4")]
			public int IndexOfPlayer(int playerId)
			{
				return default(int);
			}

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x7B8364", Offset = "0x7B8364", VA = "0x7B8364")]
			public bool ContainsPlayer(int playerId)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000264")]
		private class JoystickAssignmentHistoryInfo
		{
			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Joystick joystick;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int oldJoystickId;

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x7B839C", Offset = "0x7B839C", VA = "0x7B839C")]
			public JoystickAssignmentHistoryInfo(Joystick joystick, int oldJoystickId)
			{
			}
		}

		[Token(Token = "0x2000268")]
		[CompilerGenerated]
		private sealed class <LoadJoystickAssignmentsDeferred>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserDataStore_PlayerPrefs <>4__this;

			[Token(Token = "0x1700028E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EFF")]
				[Address(RVA = "0x7B861C", Offset = "0x7B861C", VA = "0x7B861C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F01")]
				[Address(RVA = "0x7B8664", Offset = "0x7B8664", VA = "0x7B8664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x7B84B4", Offset = "0x7B84B4", VA = "0x7B84B4")]
			[DebuggerHidden]
			public <LoadJoystickAssignmentsDeferred>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x7B84DC", Offset = "0x7B84DC", VA = "0x7B84DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x7B84E0", Offset = "0x7B84E0", VA = "0x7B84E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x7B8624", Offset = "0x7B8624", VA = "0x7B8624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001544")]
		private const string thisScriptName = "UserDataStore_PlayerPrefs";

		[Token(Token = "0x4001545")]
		private const string logPrefix = "Rewired: ";

		[Token(Token = "0x4001546")]
		private const string editorLoadedMessage = "\n***IMPORTANT:*** Changes made to the Rewired Input Manager configuration after the last time XML data was saved WILL NOT be used because the loaded old saved data has overwritten these values. If you change something in the Rewired Input Manager such as a Joystick Map or Input Behavior settings, you will not see these changes reflected in the current configuration. Clear PlayerPrefs using the inspector option on the UserDataStore_PlayerPrefs component.";

		[Token(Token = "0x4001547")]
		private const string playerPrefsKeySuffix_controllerAssignments = "ControllerAssignments";

		[Token(Token = "0x4001548")]
		private const int controllerMapPPKeyVersion_original = 0;

		[Token(Token = "0x4001549")]
		private const int controllerMapPPKeyVersion_includeDuplicateJoystickIndex = 1;

		[Token(Token = "0x400154A")]
		private const int controllerMapPPKeyVersion_supportDisconnectedControllers = 2;

		[Token(Token = "0x400154B")]
		private const int controllerMapPPKeyVersion_includeFormatVersion = 2;

		[Token(Token = "0x400154C")]
		private const int controllerMapPPKeyVersion = 2;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Should this script be used? If disabled, nothing will be saved or loaded.")]
		private bool isEnabled;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		[Tooltip("Should saved data be loaded on start?")]
		private bool loadDataOnStart;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		[Tooltip("Should Player Joystick assignments be saved and loaded? This is not totally reliable for all Joysticks on all platforms. Some platforms/input sources do not provide enough information to reliably save assignments from session to session and reboot to reboot.")]
		private bool loadJoystickAssignments;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		[Tooltip("Should Player Keyboard assignments be saved and loaded?")]
		private bool loadKeyboardAssignments;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Tooltip("Should Player Mouse assignments be saved and loaded?")]
		private bool loadMouseAssignments;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The PlayerPrefs key prefix. Change this to change how keys are stored in PlayerPrefs. Changing this will make saved data already stored with the old key no longer accessible.")]
		[SerializeField]
		private string playerPrefsKeyPrefix;

		[NonSerialized]
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool allowImpreciseJoystickAssignmentMatching;

		[NonSerialized]
		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool deferredJoystickAssignmentLoadPending;

		[NonSerialized]
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool wasJoystickEverDetected;

		[NonSerialized]
		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> __allActionIds;

		[NonSerialized]
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string __allActionIdsString;

		[Token(Token = "0x17000282")]
		public bool IsEnabled
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x7B1414", Offset = "0x7B1414", VA = "0x7B1414")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x7B141C", Offset = "0x7B141C", VA = "0x7B141C")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public bool LoadDataOnStart
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x7B1428", Offset = "0x7B1428", VA = "0x7B1428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x7B1430", Offset = "0x7B1430", VA = "0x7B1430")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool LoadJoystickAssignments
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x7B143C", Offset = "0x7B143C", VA = "0x7B143C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x7B1444", Offset = "0x7B1444", VA = "0x7B1444")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool LoadKeyboardAssignments
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0x7B1450", Offset = "0x7B1450", VA = "0x7B1450")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x7B1458", Offset = "0x7B1458", VA = "0x7B1458")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public bool LoadMouseAssignments
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x7B1464", Offset = "0x7B1464", VA = "0x7B1464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x7B146C", Offset = "0x7B146C", VA = "0x7B146C")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public string PlayerPrefsKeyPrefix
		{
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0x7B1478", Offset = "0x7B1478", VA = "0x7B1478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x7B1480", Offset = "0x7B1480", VA = "0x7B1480")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		private string playerPrefsKey_controllerAssignments
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x7B1488", Offset = "0x7B1488", VA = "0x7B1488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private bool loadControllerAssignments
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x7B14F4", Offset = "0x7B14F4", VA = "0x7B14F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		private List<int> allActionIds
		{
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x7B151C", Offset = "0x7B151C", VA = "0x7B151C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		private string allActionIdsString
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x7B1758", Offset = "0x7B1758", VA = "0x7B1758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x7B1894", Offset = "0x7B1894", VA = "0x7B1894", Slot = "16")]
		public override void Save()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x7B1ABC", Offset = "0x7B1ABC", VA = "0x7B1ABC", Slot = "17")]
		public override void SaveControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x7B1BAC", Offset = "0x7B1BAC", VA = "0x7B1BAC", Slot = "18")]
		public override void SaveControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x7B1C7C", Offset = "0x7B1C7C", VA = "0x7B1C7C", Slot = "19")]
		public override void SavePlayerData(int playerId)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x7B1D94", Offset = "0x7B1D94", VA = "0x7B1D94", Slot = "20")]
		public override void SaveInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x7B1F10", Offset = "0x7B1F10", VA = "0x7B1F10", Slot = "11")]
		public override void Load()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x7B2150", Offset = "0x7B2150", VA = "0x7B2150", Slot = "12")]
		public override void LoadControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x7B2258", Offset = "0x7B2258", VA = "0x7B2258", Slot = "13")]
		public override void LoadControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x7B2328", Offset = "0x7B2328", VA = "0x7B2328", Slot = "14")]
		public override void LoadPlayerData(int playerId)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x7B2438", Offset = "0x7B2438", VA = "0x7B2438", Slot = "15")]
		public override void LoadInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x7B25B0", Offset = "0x7B25B0", VA = "0x7B25B0", Slot = "23")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x7B2C00", Offset = "0x7B2C00", VA = "0x7B2C00", Slot = "24")]
		protected override void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x7B2EE4", Offset = "0x7B2EE4", VA = "0x7B2EE4", Slot = "27")]
		protected override void OnControllerPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x7B30D8", Offset = "0x7B30D8", VA = "0x7B30D8", Slot = "25")]
		protected override void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x7B3100", Offset = "0x7B3100", VA = "0x7B3100", Slot = "21")]
		public override void SaveControllerMap(int playerId, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x7B32C8", Offset = "0x7B32C8", VA = "0x7B32C8", Slot = "22")]
		public override ControllerMap LoadControllerMap(int playerId, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x7B1F98", Offset = "0x7B1F98", VA = "0x7B1F98")]
		private int LoadAll()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x7B23B8", Offset = "0x7B23B8", VA = "0x7B23B8")]
		private int LoadPlayerDataNow(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x7B3540", Offset = "0x7B3540", VA = "0x7B3540")]
		private int LoadPlayerDataNow(Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x7B3910", Offset = "0x7B3910", VA = "0x7B3910")]
		private int LoadAllJoystickCalibrationData()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x7B40DC", Offset = "0x7B40DC", VA = "0x7B40DC")]
		private int LoadJoystickCalibrationData(Joystick joystick)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x7B4190", Offset = "0x7B4190", VA = "0x7B4190")]
		private int LoadJoystickCalibrationData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x7B2C84", Offset = "0x7B2C84", VA = "0x7B2C84")]
		private int LoadJoystickData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x7B21FC", Offset = "0x7B21FC", VA = "0x7B21FC")]
		private int LoadControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x7B2310", Offset = "0x7B2310", VA = "0x7B2310")]
		private int LoadControllerDataNow(ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x7B3C74", Offset = "0x7B3C74", VA = "0x7B3C74")]
		private int LoadControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x7B3388", Offset = "0x7B3388", VA = "0x7B3388")]
		private ControllerMap LoadControllerMap(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x7B3A98", Offset = "0x7B3A98", VA = "0x7B3A98")]
		private int LoadInputBehaviors(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x7B24DC", Offset = "0x7B24DC", VA = "0x7B24DC")]
		private int LoadInputBehaviorNow(int playerId, int behaviorId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x7B4B4C", Offset = "0x7B4B4C", VA = "0x7B4B4C")]
		private int LoadInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x7B3468", Offset = "0x7B3468", VA = "0x7B3468")]
		private bool LoadControllerAssignmentsNow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x7B4DD4", Offset = "0x7B4DD4", VA = "0x7B4DD4")]
		private bool LoadKeyboardAndMouseAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x7B528C", Offset = "0x7B528C", VA = "0x7B528C")]
		private bool LoadJoystickAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x7B4C84", Offset = "0x7B4C84", VA = "0x7B4C84")]
		private ControllerAssignmentSaveInfo LoadControllerAssignmentData()
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x7B2E70", Offset = "0x7B2E70", VA = "0x7B2E70")]
		[IteratorStateMachine(typeof(<LoadJoystickAssignmentsDeferred>d__80))]
		private IEnumerator LoadJoystickAssignmentsDeferred()
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x7B191C", Offset = "0x7B191C", VA = "0x7B191C")]
		private void SaveAll()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x7B1D0C", Offset = "0x7B1D0C", VA = "0x7B1D0C")]
		private void SavePlayerDataNow(int playerId)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x7B6A2C", Offset = "0x7B6A2C", VA = "0x7B6A2C")]
		private void SavePlayerDataNow(Player player)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x7B6AC0", Offset = "0x7B6AC0", VA = "0x7B6AC0")]
		private void SaveAllJoystickCalibrationData()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x7B7024", Offset = "0x7B7024", VA = "0x7B7024")]
		private void SaveJoystickCalibrationData(int joystickId)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x7B6FB4", Offset = "0x7B6FB4", VA = "0x7B6FB4")]
		private void SaveJoystickCalibrationData(Joystick joystick)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x7B2F18", Offset = "0x7B2F18", VA = "0x7B2F18")]
		private void SaveJoystickData(int joystickId)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x7B1B68", Offset = "0x7B1B68", VA = "0x7B1B68")]
		private void SaveControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x7B1C5C", Offset = "0x7B1C5C", VA = "0x7B1C5C")]
		private void SaveControllerDataNow(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x7B6CAC", Offset = "0x7B6CAC", VA = "0x7B6CAC")]
		private void SaveControllerMaps(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x7B7204", Offset = "0x7B7204", VA = "0x7B7204")]
		private void SaveControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x7B31A0", Offset = "0x7B31A0", VA = "0x7B31A0")]
		private void SaveControllerMap(Player player, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x7B6C34", Offset = "0x7B6C34", VA = "0x7B6C34")]
		private void SaveInputBehaviors(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x7B1E38", Offset = "0x7B1E38", VA = "0x7B1E38")]
		private void SaveInputBehaviorNow(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x7B74B4", Offset = "0x7B74B4", VA = "0x7B74B4")]
		private void SaveInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x7B2668", Offset = "0x7B2668", VA = "0x7B2668")]
		private bool SaveControllerAssignments()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x7B75AC", Offset = "0x7B75AC", VA = "0x7B75AC")]
		private bool ControllerAssignmentSaveDataExists()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x7B75F8", Offset = "0x7B75F8", VA = "0x7B75F8")]
		private string GetBasePlayerPrefsKey(Player player)
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x7B732C", Offset = "0x7B732C", VA = "0x7B732C")]
		private string GetControllerMapPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x7B73F0", Offset = "0x7B73F0", VA = "0x7B73F0")]
		private string GetControllerMapKnownActionIdsPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x7B7664", Offset = "0x7B7664", VA = "0x7B7664")]
		private static string GetControllerMapPlayerPrefsKeyCommonSuffix(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x7B70A4", Offset = "0x7B70A4", VA = "0x7B70A4")]
		private string GetJoystickCalibrationMapPlayerPrefsKey(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x7B7504", Offset = "0x7B7504", VA = "0x7B7504")]
		private string GetInputBehaviorPlayerPrefsKey(Player player, int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x7B4210", Offset = "0x7B4210", VA = "0x7B4210")]
		private string GetControllerMapXml(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x7B42C0", Offset = "0x7B42C0", VA = "0x7B42C0")]
		private List<int> GetControllerMapKnownActionIds(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x7B4110", Offset = "0x7B4110", VA = "0x7B4110")]
		private string GetJoystickCalibrationMapXml(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x7B4BF0", Offset = "0x7B4BF0", VA = "0x7B4BF0")]
		private string GetInputBehaviorXml(Player player, int id)
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x7B44C4", Offset = "0x7B44C4", VA = "0x7B44C4")]
		private void AddDefaultMappingsForNewActions(ControllerIdentifier controllerIdentifier, ControllerMap controllerMap, List<int> knownActionIds)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x7B64FC", Offset = "0x7B64FC", VA = "0x7B64FC")]
		private Joystick FindJoystickPrecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo)
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x7B6724", Offset = "0x7B6724", VA = "0x7B6724")]
		private bool TryFindJoysticksImprecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo, out List<Joystick> matches)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x7B7C38", Offset = "0x7B7C38", VA = "0x7B7C38")]
		private static int GetDuplicateIndex(Player player, ControllerIdentifier controllerIdentifier)
		{
			return default(int);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x7B4044", Offset = "0x7B4044", VA = "0x7B4044")]
		private void RefreshLayoutManager(int playerId)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x7B7AA4", Offset = "0x7B7AA4", VA = "0x7B7AA4")]
		private static Type GetControllerMapType(ControllerType controllerType)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x7B8150", Offset = "0x7B8150", VA = "0x7B8150")]
		public UserDataStore_PlayerPrefs()
		{
		}
	}
}
namespace Rewired.Internal
{
	[Token(Token = "0x2000269")]
	public static class ControllerTemplateFactory
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] _defaultTemplateTypes;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type[] _defaultTemplateInterfaceTypes;

		[Token(Token = "0x17000290")]
		public static Type[] templateTypes
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x7B866C", Offset = "0x7B866C", VA = "0x7B866C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public static Type[] templateInterfaceTypes
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x7B86C4", Offset = "0x7B86C4", VA = "0x7B86C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x7B871C", Offset = "0x7B871C", VA = "0x7B871C")]
		public static IControllerTemplate Create(Guid typeGuid, object payload)
		{
			return null;
		}
	}
}
namespace Rewired.Integration.UnityUI
{
	[Token(Token = "0x200026A")]
	public class PlayerPointerEventData : PointerEventData
	{
		[Token(Token = "0x17000292")]
		public int playerId
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x7B8EC0", Offset = "0x7B8EC0", VA = "0x7B8EC0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x7B8EC8", Offset = "0x7B8EC8", VA = "0x7B8EC8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public int inputSourceIndex
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x7B8ED0", Offset = "0x7B8ED0", VA = "0x7B8ED0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x7B8ED8", Offset = "0x7B8ED8", VA = "0x7B8ED8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public IMouseInputSource mouseSource
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x7B8EE0", Offset = "0x7B8EE0", VA = "0x7B8EE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x7B8EE8", Offset = "0x7B8EE8", VA = "0x7B8EE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public ITouchInputSource touchSource
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x7B8EF8", Offset = "0x7B8EF8", VA = "0x7B8EF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x7B8F00", Offset = "0x7B8F00", VA = "0x7B8F00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public PointerEventType sourceType
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x7B8F10", Offset = "0x7B8F10", VA = "0x7B8F10")]
			[CompilerGenerated]
			get
			{
				return default(PointerEventType);
			}
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x7B8F18", Offset = "0x7B8F18", VA = "0x7B8F18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public int buttonIndex
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x7B8F20", Offset = "0x7B8F20", VA = "0x7B8F20")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x7B8F28", Offset = "0x7B8F28", VA = "0x7B8F28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x7B8F30", Offset = "0x7B8F30", VA = "0x7B8F30")]
		public PlayerPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x7B8F5C", Offset = "0x7B8F5C", VA = "0x7B8F5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200026B")]
	[AddComponentMenu("Rewired/Rewired Event System")]
	public class RewiredEventSystem : EventSystem
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("If enabled, the Event System will be updated every frame even if other Event Systems are enabled. Otherwise, only EventSystem.current will be updated.")]
		[SerializeField]
		private bool _alwaysUpdate;

		[Token(Token = "0x17000298")]
		public bool alwaysUpdate
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x7B9200", Offset = "0x7B9200", VA = "0x7B9200")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x7B9208", Offset = "0x7B9208", VA = "0x7B9208")]
			set
			{
			}
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x7B9214", Offset = "0x7B9214", VA = "0x7B9214", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x7B93E8", Offset = "0x7B93E8", VA = "0x7B93E8")]
		public RewiredEventSystem()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public abstract class RewiredPointerInputModule : BaseInputModule
	{
		[Token(Token = "0x200026D")]
		protected class MouseState
		{
			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<ButtonState> m_TrackedButtons;

			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x7BC3D4", Offset = "0x7BC3D4", VA = "0x7BC3D4")]
			public ButtonState GetButtonState(int button)
			{
				return null;
			}

			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x7BAF44", Offset = "0x7BAF44", VA = "0x7BAF44")]
			public void SetButtonState(int button, PointerEventData.FramePressState stateForMouseButton, PlayerPointerEventData data)
			{
			}

			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x7BC34C", Offset = "0x7BC34C", VA = "0x7BC34C")]
			public MouseState()
			{
			}
		}

		[Token(Token = "0x200026E")]
		public class MouseButtonEventData
		{
			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerEventData.FramePressState buttonState;

			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerPointerEventData buttonData;

			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x7BC594", Offset = "0x7BC594", VA = "0x7BC594")]
			public bool PressedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x7BC5A4", Offset = "0x7BC5A4", VA = "0x7BC5A4")]
			public bool ReleasedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x7BC58C", Offset = "0x7BC58C", VA = "0x7BC58C")]
			public MouseButtonEventData()
			{
			}
		}

		[Token(Token = "0x200026F")]
		protected class ButtonState
		{
			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_Button;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MouseButtonEventData m_EventData;

			[Token(Token = "0x1700029D")]
			public MouseButtonEventData eventData
			{
				[Token(Token = "0x6000F3D")]
				[Address(RVA = "0x7BC5B8", Offset = "0x7BC5B8", VA = "0x7BC5B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000F3E")]
				[Address(RVA = "0x7BC5C0", Offset = "0x7BC5C0", VA = "0x7BC5C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700029E")]
			public int button
			{
				[Token(Token = "0x6000F3F")]
				[Address(RVA = "0x7BC5C8", Offset = "0x7BC5C8", VA = "0x7BC5C8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000F40")]
				[Address(RVA = "0x7BC5D0", Offset = "0x7BC5D0", VA = "0x7BC5D0")]
				set
				{
				}
			}

			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x7BC584", Offset = "0x7BC584", VA = "0x7BC584")]
			public ButtonState()
			{
			}
		}

		[Token(Token = "0x2000270")]
		private sealed class UnityInputSource : IMouseInputSource, ITouchInputSource
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 m_MousePosition;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 m_MousePositionPrev;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastUpdatedFrame;

			[Token(Token = "0x1700029F")]
			private int Rewired.UI.IMouseInputSource.playerId
			{
				[Token(Token = "0x6000F42")]
				[Address(RVA = "0x7BC5D8", Offset = "0x7BC5D8", VA = "0x7BC5D8", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002A0")]
			private bool Rewired.UI.IMouseInputSource.enabled
			{
				[Token(Token = "0x6000F43")]
				[Address(RVA = "0x7BC630", Offset = "0x7BC630", VA = "0x7BC630", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002A1")]
			private bool Rewired.UI.IMouseInputSource.locked
			{
				[Token(Token = "0x6000F44")]
				[Address(RVA = "0x7BC644", Offset = "0x7BC644", VA = "0x7BC644", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002A2")]
			private int Rewired.UI.IMouseInputSource.buttonCount
			{
				[Token(Token = "0x6000F45")]
				[Address(RVA = "0x7BC664", Offset = "0x7BC664", VA = "0x7BC664", Slot = "7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002A3")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPosition
			{
				[Token(Token = "0x6000F49")]
				[Address(RVA = "0x7BC6CC", Offset = "0x7BC6CC", VA = "0x7BC6CC", Slot = "11")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002A4")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPositionDelta
			{
				[Token(Token = "0x6000F4A")]
				[Address(RVA = "0x7BC6E0", Offset = "0x7BC6E0", VA = "0x7BC6E0", Slot = "12")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002A5")]
			private Vector2 Rewired.UI.IMouseInputSource.wheelDelta
			{
				[Token(Token = "0x6000F4B")]
				[Address(RVA = "0x7BC700", Offset = "0x7BC700", VA = "0x7BC700", Slot = "13")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002A6")]
			private bool Rewired.UI.ITouchInputSource.touchSupported
			{
				[Token(Token = "0x6000F4C")]
				[Address(RVA = "0x7BC714", Offset = "0x7BC714", VA = "0x7BC714", Slot = "14")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002A7")]
			private int Rewired.UI.ITouchInputSource.touchCount
			{
				[Token(Token = "0x6000F4D")]
				[Address(RVA = "0x7BC728", Offset = "0x7BC728", VA = "0x7BC728", Slot = "15")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x7BC678", Offset = "0x7BC678", VA = "0x7BC678", Slot = "8")]
			private bool Rewired.UI.IMouseInputSource.GetButtonDown(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F47")]
			[Address(RVA = "0x7BC694", Offset = "0x7BC694", VA = "0x7BC694", Slot = "9")]
			private bool Rewired.UI.IMouseInputSource.GetButtonUp(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x7BC6B0", Offset = "0x7BC6B0", VA = "0x7BC6B0", Slot = "10")]
			private bool Rewired.UI.IMouseInputSource.GetButton(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x7BC73C", Offset = "0x7BC73C", VA = "0x7BC73C", Slot = "16")]
			private Touch Rewired.UI.ITouchInputSource.GetTouch(int index)
			{
				return default(Touch);
			}

			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x7BC5EC", Offset = "0x7BC5EC", VA = "0x7BC5EC")]
			private void TryUpdate()
			{
			}

			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x7B94C0", Offset = "0x7B94C0", VA = "0x7B94C0")]
			public UnityInputSource()
			{
			}
		}

		[Token(Token = "0x4001571")]
		public const int kMouseLeftId = -1;

		[Token(Token = "0x4001572")]
		public const int kMouseRightId = -2;

		[Token(Token = "0x4001573")]
		public const int kMouseMiddleId = -3;

		[Token(Token = "0x4001574")]
		public const int kFakeTouchesId = -4;

		[Token(Token = "0x4001575")]
		private const int customButtonsStartingId = -2147483520;

		[Token(Token = "0x4001576")]
		private const int customButtonsMaxCount = 128;

		[Token(Token = "0x4001577")]
		private const int customButtonsLastId = -2147483392;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<IMouseInputSource> m_MouseInputSourcesList;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, Dictionary<int, PlayerPointerEventData>[]> m_PlayerPointerData;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ITouchInputSource m_UserDefaultTouchInputSource;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityInputSource __m_DefaultInputSource;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000299")]
		private UnityInputSource defaultInputSource
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x7B9440", Offset = "0x7B9440", VA = "0x7B9440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private IMouseInputSource defaultMouseInputSource
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x7B94D0", Offset = "0x7B94D0", VA = "0x7B94D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		protected ITouchInputSource defaultTouchInputSource
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x7B94D4", Offset = "0x7B94D4", VA = "0x7B94D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		protected virtual bool isMouseSupported
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x7B9D40", Offset = "0x7B9D40", VA = "0x7B9D40", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x7B94D8", Offset = "0x7B94D8", VA = "0x7B94D8")]
		protected bool IsDefaultMouse(IMouseInputSource mouse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x7B94F4", Offset = "0x7B94F4", VA = "0x7B94F4")]
		public IMouseInputSource GetMouseInputSource(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x7B9724", Offset = "0x7B9724", VA = "0x7B9724")]
		public void RemoveMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x7B97CC", Offset = "0x7B97CC", VA = "0x7B97CC")]
		public void AddMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x7B991C", Offset = "0x7B991C", VA = "0x7B991C")]
		public int GetMouseInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x7B9AD4", Offset = "0x7B9AD4", VA = "0x7B9AD4")]
		public ITouchInputSource GetTouchInputSource(int playerId, int sourceIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x7B9B60", Offset = "0x7B9B60", VA = "0x7B9B60")]
		public void RemoveTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x7B9BD8", Offset = "0x7B9BD8", VA = "0x7B9BD8")]
		public void AddTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x7B9CB0", Offset = "0x7B9CB0", VA = "0x7B9CB0")]
		public int GetTouchInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x7B9CD0", Offset = "0x7B9CD0", VA = "0x7B9CD0")]
		protected void ClearMouseInputSources()
		{
		}

		[Token(Token = "0x6000F26")]
		protected abstract bool IsDefaultPlayer(int playerId);

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x7B9EE4", Offset = "0x7B9EE4", VA = "0x7B9EE4")]
		protected bool GetPointerData(int playerId, int pointerIndex, int pointerTypeId, out PlayerPointerEventData data, bool create, PointerEventType pointerEventType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x7BA2CC", Offset = "0x7BA2CC", VA = "0x7BA2CC")]
		private PlayerPointerEventData CreatePointerEventData(int playerId, int pointerIndex, int pointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x7BA3D4", Offset = "0x7BA3D4", VA = "0x7BA3D4")]
		protected void RemovePointerData(PlayerPointerEventData data)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x7BA48C", Offset = "0x7BA48C", VA = "0x7BA48C")]
		protected PlayerPointerEventData GetTouchPointerEventData(int playerId, int touchDeviceIndex, Touch input, out bool pressed, out bool released)
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x7BA700", Offset = "0x7BA700", VA = "0x7BA700", Slot = "29")]
		protected virtual MouseState GetMousePointerEventData(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x7BAF80", Offset = "0x7BAF80", VA = "0x7BAF80")]
		protected PlayerPointerEventData GetLastPointerEventData(int playerId, int pointerIndex, int pointerTypeId, bool ignorePointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x7BB15C", Offset = "0x7BB15C", VA = "0x7BB15C")]
		private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x7BB18C", Offset = "0x7BB18C", VA = "0x7BB18C", Slot = "30")]
		protected virtual void ProcessMove(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x7BB31C", Offset = "0x7BB31C", VA = "0x7BB31C", Slot = "31")]
		protected virtual void ProcessDrag(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x7BB6B4", Offset = "0x7BB6B4", VA = "0x7BB6B4", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerTypeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x7BB914", Offset = "0x7BB914", VA = "0x7BB914")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x7BBC68", Offset = "0x7BBC68", VA = "0x7BBC68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x7BC14C", Offset = "0x7BC14C", VA = "0x7BC14C")]
		protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x7BAD7C", Offset = "0x7BAD7C", VA = "0x7BAD7C")]
		protected void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x7BADE8", Offset = "0x7BADE8", VA = "0x7BADE8")]
		protected PointerEventData.FramePressState StateForMouseButton(int playerId, int mouseIndex, int buttonId)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x7BC23C", Offset = "0x7BC23C", VA = "0x7BC23C")]
		protected RewiredPointerInputModule()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public enum PointerEventType
	{
		[Token(Token = "0x4001586")]
		Mouse,
		[Token(Token = "0x4001587")]
		Touch
	}
	[Token(Token = "0x2000272")]
	[AddComponentMenu("Rewired/Rewired Standalone Input Module")]
	public sealed class RewiredStandaloneInputModule : RewiredPointerInputModule
	{
		[Token(Token = "0x4001588")]
		private const string DEFAULT_ACTION_MOVE_HORIZONTAL = "UIHorizontal";

		[Token(Token = "0x4001589")]
		private const string DEFAULT_ACTION_MOVE_VERTICAL = "UIVertical";

		[Token(Token = "0x400158A")]
		private const string DEFAULT_ACTION_SUBMIT = "UISubmit";

		[Token(Token = "0x400158B")]
		private const string DEFAULT_ACTION_CANCEL = "UICancel";

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("(Optional) Link the Rewired Input Manager here for easier access to Player ids, etc.")]
		[SerializeField]
		private InputManager_Base rewiredInputManager;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Use all Rewired game Players to control the UI. This does not include the System Player. If enabled, this setting overrides individual Player Ids set in Rewired Player Ids.")]
		[SerializeField]
		private bool useAllRewiredGamePlayers;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[Tooltip("Allow the Rewired System Player to control the UI.")]
		[SerializeField]
		private bool useRewiredSystemPlayer;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Tooltip("A list of Player Ids that are allowed to control the UI. If Use All Rewired Game Players = True, this list will be ignored.")]
		private int[] rewiredPlayerIds;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Tooltip("Allow only Players with Player.isPlaying = true to control the UI.")]
		private bool usePlayingPlayersOnly;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Tooltip("Player Mice allowed to interact with the UI. Each Player that owns a Player Mouse must also be allowed to control the UI or the Player Mouse will not function.")]
		private List<Rewired.Components.PlayerMouse> playerMice;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Makes an axis press always move only one UI selection. Enable if you do not want to allow scrolling through UI elements by holding an axis direction.")]
		[SerializeField]
		private bool moveOneElementPerAxisPress;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		[Tooltip("If enabled, Action Ids will be used to set the Actions. If disabled, string names will be used to set the Actions.")]
		private bool setActionsById;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Tooltip("Id of the horizontal Action for movement (if axis events are used).")]
		[SerializeField]
		private int horizontalActionId;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Tooltip("Id of the vertical Action for movement (if axis events are used).")]
		private int verticalActionId;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[Tooltip("Id of the Action used to submit.")]
		private int submitActionId;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Tooltip("Id of the Action used to cancel.")]
		private int cancelActionId;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Tooltip("Name of the horizontal axis for movement (if axis events are used).")]
		private string m_HorizontalAxis;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("Name of the vertical axis for movement (if axis events are used).")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[Tooltip("Name of the action used to submit.")]
		private string m_SubmitButton;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Tooltip("Name of the action used to cancel.")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Tooltip("Number of selection changes allowed per second when a movement button/axis is held in a direction.")]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Tooltip("Delay in seconds before vertical/horizontal movement starts repeating continouously when a movement direction is held.")]
		[SerializeField]
		private float m_RepeatDelay;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("Allows the mouse to be used to select elements.")]
		[SerializeField]
		private bool m_allowMouseInput;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		[Tooltip("Allows the mouse to be used to select elements if the device also supports touch control.")]
		private bool m_allowMouseInputIfTouchSupported;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[Tooltip("Allows touch input to be used to select elements.")]
		[SerializeField]
		private bool m_allowTouchInput;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		[Tooltip("Deselects the current selection on mouse/touch click when the pointer is not over a selectable object.")]
		[SerializeField]
		private bool m_deselectIfBackgroundClicked;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[Tooltip("Deselects the current selection on mouse/touch click before selecting the next object.")]
		private bool m_deselectBeforeSelecting;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		[FormerlySerializedAs("m_AllowActivationOnMobileDevice")]
		[Tooltip("Forces the module to always be active.")]
		private bool m_ForceModuleActive;

		[NonSerialized]
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] playerIds;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool recompiling;

		[NonSerialized]
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool isTouchSupported;

		[NonSerialized]
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private double m_PrevActionTime;

		[NonSerialized]
		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_LastMoveVector;

		[NonSerialized]
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_ConsecutiveMoveCount;

		[NonSerialized]
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_HasFocus;

		[Token(Token = "0x170002A8")]
		public InputManager_Base RewiredInputManager
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x7BC784", Offset = "0x7BC784", VA = "0x7BC784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x7BC78C", Offset = "0x7BC78C", VA = "0x7BC78C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public bool UseAllRewiredGamePlayers
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x7BC794", Offset = "0x7BC794", VA = "0x7BC794")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x7BC79C", Offset = "0x7BC79C", VA = "0x7BC79C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public bool UseRewiredSystemPlayer
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x7BCCB4", Offset = "0x7BCCB4", VA = "0x7BCCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x7BCCBC", Offset = "0x7BCCBC", VA = "0x7BCCBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public int[] RewiredPlayerIds
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x7BCCDC", Offset = "0x7BCCDC", VA = "0x7BCCDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x7BCD54", Offset = "0x7BCD54", VA = "0x7BCD54")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public bool UsePlayingPlayersOnly
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x7BCE00", Offset = "0x7BCE00", VA = "0x7BCE00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x7BCE08", Offset = "0x7BCE08", VA = "0x7BCE08")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public List<Rewired.Components.PlayerMouse> PlayerMice
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x7BCE14", Offset = "0x7BCE14", VA = "0x7BCE14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x7BCE90", Offset = "0x7BCE90", VA = "0x7BCE90")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public bool MoveOneElementPerAxisPress
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x7BCF50", Offset = "0x7BCF50", VA = "0x7BCF50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x7BCF58", Offset = "0x7BCF58", VA = "0x7BCF58")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public bool allowMouseInput
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x7BCF64", Offset = "0x7BCF64", VA = "0x7BCF64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x7BCF6C", Offset = "0x7BCF6C", VA = "0x7BCF6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public bool allowMouseInputIfTouchSupported
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x7BCF78", Offset = "0x7BCF78", VA = "0x7BCF78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x7BCF80", Offset = "0x7BCF80", VA = "0x7BCF80")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public bool allowTouchInput
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x7BCF8C", Offset = "0x7BCF8C", VA = "0x7BCF8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x7BCF94", Offset = "0x7BCF94", VA = "0x7BCF94")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public bool deselectIfBackgroundClicked
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x7BCFA0", Offset = "0x7BCFA0", VA = "0x7BCFA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x7BCFA8", Offset = "0x7BCFA8", VA = "0x7BCFA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		private bool deselectBeforeSelecting
		{
			[Token(Token = "0x6000F67")]
			[Address(RVA = "0x7BCFB4", Offset = "0x7BCFB4", VA = "0x7BCFB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x7BCFBC", Offset = "0x7BCFBC", VA = "0x7BCFBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public bool SetActionsById
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x7BCFC8", Offset = "0x7BCFC8", VA = "0x7BCFC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x7BCFD0", Offset = "0x7BCFD0", VA = "0x7BCFD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public int HorizontalActionId
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x7BCFEC", Offset = "0x7BCFEC", VA = "0x7BCFEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x7BCFF4", Offset = "0x7BCFF4", VA = "0x7BCFF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public int VerticalActionId
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x7BD138", Offset = "0x7BD138", VA = "0x7BD138")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x7BD140", Offset = "0x7BD140", VA = "0x7BD140")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public int SubmitActionId
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x7BD284", Offset = "0x7BD284", VA = "0x7BD284")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x7BD28C", Offset = "0x7BD28C", VA = "0x7BD28C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public int CancelActionId
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x7BD3D0", Offset = "0x7BD3D0", VA = "0x7BD3D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x7BD3D8", Offset = "0x7BD3D8", VA = "0x7BD3D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		protected override bool isMouseSupported
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x7BD51C", Offset = "0x7BD51C", VA = "0x7BD51C", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		private bool isTouchAllowed
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x7BD560", Offset = "0x7BD560", VA = "0x7BD560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BB")]
		[Obsolete("allowActivationOnMobileDevice has been deprecated. Use forceModuleActive instead")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x7BD568", Offset = "0x7BD568", VA = "0x7BD568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x7BD570", Offset = "0x7BD570", VA = "0x7BD570")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public bool forceModuleActive
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x7BD57C", Offset = "0x7BD57C", VA = "0x7BD57C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x7BD584", Offset = "0x7BD584", VA = "0x7BD584")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x7BD590", Offset = "0x7BD590", VA = "0x7BD590")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x7BD598", Offset = "0x7BD598", VA = "0x7BD598")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float repeatDelay
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x7BD5A0", Offset = "0x7BD5A0", VA = "0x7BD5A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x7BD5A8", Offset = "0x7BD5A8", VA = "0x7BD5A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x7BD5B0", Offset = "0x7BD5B0", VA = "0x7BD5B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x7BD5B8", Offset = "0x7BD5B8", VA = "0x7BD5B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public string verticalAxis
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x7BD6A8", Offset = "0x7BD6A8", VA = "0x7BD6A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x7BD6B0", Offset = "0x7BD6B0", VA = "0x7BD6B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public string submitButton
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x7BD7A0", Offset = "0x7BD7A0", VA = "0x7BD7A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x7BD7A8", Offset = "0x7BD7A8", VA = "0x7BD7A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public string cancelButton
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x7BD898", Offset = "0x7BD898", VA = "0x7BD898")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x7BD8A0", Offset = "0x7BD8A0", VA = "0x7BD8A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x7BD990", Offset = "0x7BD990", VA = "0x7BD990")]
		private RewiredStandaloneInputModule()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x7BDB0C", Offset = "0x7BDB0C", VA = "0x7BDB0C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x7BDEB0", Offset = "0x7BDEB0", VA = "0x7BDEB0", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x7BE0CC", Offset = "0x7BE0CC", VA = "0x7BE0CC", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x7BE0D4", Offset = "0x7BE0D4", VA = "0x7BE0D4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x7BE9BC", Offset = "0x7BE9BC", VA = "0x7BE9BC", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x7BEA8C", Offset = "0x7BEA8C", VA = "0x7BEA8C", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x7BEAA8", Offset = "0x7BEAA8", VA = "0x7BEAA8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x7BF2F4", Offset = "0x7BF2F4", VA = "0x7BF2F4")]
		private bool ProcessTouchEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x7BF6C8", Offset = "0x7BF6C8", VA = "0x7BF6C8")]
		private void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x7BF05C", Offset = "0x7BF05C", VA = "0x7BF05C")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x7C0024", Offset = "0x7C0024", VA = "0x7C0024")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x7BED2C", Offset = "0x7BED2C", VA = "0x7BED2C")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x7C03AC", Offset = "0x7C03AC", VA = "0x7C03AC")]
		private void CheckButtonOrKeyMovement(out bool downHorizontal, out bool downVertical)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x7BF594", Offset = "0x7BF594", VA = "0x7BF594")]
		private void ProcessMouseEvents()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x7C0530", Offset = "0x7C0530", VA = "0x7C0530")]
		private void ProcessMouseEvent(int playerId, int pointerIndex)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x7BEBE4", Offset = "0x7BEBE4", VA = "0x7BEBE4")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x7C08D0", Offset = "0x7C08D0", VA = "0x7C08D0")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x7BFE88", Offset = "0x7BFE88", VA = "0x7BFE88")]
		private void HandleMouseTouchDeselectionOnSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x7C0F9C", Offset = "0x7C0F9C", VA = "0x7C0F9C")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x7BE010", Offset = "0x7BE010", VA = "0x7BE010")]
		private bool ShouldIgnoreEventsOnNoFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x7C0FA8", Offset = "0x7C0FA8", VA = "0x7C0FA8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x7C10E0", Offset = "0x7C10E0", VA = "0x7C10E0", Slot = "28")]
		protected override bool IsDefaultPlayer(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x7BDCC4", Offset = "0x7BDCC4", VA = "0x7BDCC4")]
		private void InitializeRewired()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x7BC7BC", Offset = "0x7BC7BC", VA = "0x7BC7BC")]
		private void SetupRewiredVars()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x7C1510", Offset = "0x7C1510", VA = "0x7C1510")]
		private void SetUpRewiredPlayerMice()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x7C1280", Offset = "0x7C1280", VA = "0x7C1280")]
		private void SetUpRewiredActions()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x7C035C", Offset = "0x7C035C", VA = "0x7C035C")]
		private bool GetButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x7BE604", Offset = "0x7BE604", VA = "0x7BE604")]
		private bool GetButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x7C0384", Offset = "0x7C0384", VA = "0x7C0384")]
		private bool GetNegativeButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x7BE62C", Offset = "0x7BE62C", VA = "0x7BE62C")]
		private bool GetNegativeButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x7BE654", Offset = "0x7BE654", VA = "0x7BE654")]
		private float GetAxis(Player player, int actionId)
		{
			return default(float);
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x7BDF64", Offset = "0x7BDF64", VA = "0x7BDF64")]
		private void CheckEditorRecompile()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x7C1668", Offset = "0x7C1668", VA = "0x7C1668")]
		private void OnEditorRecompile()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x7C1674", Offset = "0x7C1674", VA = "0x7C1674")]
		private void ClearRewiredVars()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x7BE67C", Offset = "0x7BE67C", VA = "0x7BE67C")]
		private bool DidAnyMouseMove()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x7BE820", Offset = "0x7BE820", VA = "0x7BE820")]
		private bool GetMouseButtonDownOnAnyMouse(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x7C16A4", Offset = "0x7C16A4", VA = "0x7C16A4")]
		private void OnRewiredInitialized()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x7C16A8", Offset = "0x7C16A8", VA = "0x7C16A8")]
		private void OnRewiredShutDown()
		{
		}
	}
}
namespace Rewired.UI.ControlMapper
{
	[Token(Token = "0x2000273")]
	[AddComponentMenu("")]
	public class ButtonInfo : UIElementInfo
	{
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x7C16AC", Offset = "0x7C16AC", VA = "0x7C16AC")]
		public ButtonInfo()
		{
		}
	}
	[Token(Token = "0x2000274")]
	[AddComponentMenu("")]
	public class CalibrationWindow : Window
	{
		[Token(Token = "0x2000275")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x40015D0")]
			Done,
			[Token(Token = "0x40015D1")]
			Cancel,
			[Token(Token = "0x40015D2")]
			Default,
			[Token(Token = "0x40015D3")]
			Calibrate
		}

		[Token(Token = "0x40015AB")]
		private const float minSensitivityOtherAxes = 0.1f;

		[Token(Token = "0x40015AC")]
		private const float maxDeadzone = 0.8f;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform rightContentContainer;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform valueDisplayGroup;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private RectTransform calibratedValueMarker;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform rawValueMarker;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private RectTransform calibratedZeroMarker;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RectTransform deadzoneArea;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider deadzoneSlider;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Slider zeroSlider;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Slider sensitivitySlider;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle invertToggle;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private RectTransform axisScrollAreaContent;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Text doneButtonLabel;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Text cancelButtonLabel;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Text defaultButtonLabel;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Text deadzoneSliderLabel;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Text zeroSliderLabel;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Text sensitivitySliderLabel;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Text invertToggleLabel;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Text calibrateButtonLabel;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject axisButtonPrefab;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Joystick joystick;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string origCalibrationData;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int selectedAxis;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AxisCalibrationData origSelectedAxisCalibrationData;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float displayAreaWidth;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<Button> axisButtons;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int playerId;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RewiredStandaloneInputModule rewiredStandaloneInputModule;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private int menuHorizActionId;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int menuVertActionId;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float minSensitivity;

		[Token(Token = "0x170002C3")]
		private bool axisSelected
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x7C16B4", Offset = "0x7C16B4", VA = "0x7C16B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		private AxisCalibration axisCalibration
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x7C16FC", Offset = "0x7C16FC", VA = "0x7C16FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x7C1740", Offset = "0x7C1740", VA = "0x7C1740", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x7C1E64", Offset = "0x7C1E64", VA = "0x7C1E64")]
		public void SetJoystick(int playerId, Joystick joystick)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x7C2824", Offset = "0x7C2824", VA = "0x7C2824")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x7C290C", Offset = "0x7C290C", VA = "0x7C290C", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x7C29C4", Offset = "0x7C29C4", VA = "0x7C29C4", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x7C29F4", Offset = "0x7C29F4", VA = "0x7C29F4")]
		public void OnDone()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x7C2A7C", Offset = "0x7C2A7C", VA = "0x7C2A7C")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x7C2A88", Offset = "0x7C2A88", VA = "0x7C2A88")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x7C2ADC", Offset = "0x7C2ADC", VA = "0x7C2ADC")]
		public void OnCalibrate()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x7C2B64", Offset = "0x7C2B64", VA = "0x7C2B64")]
		public void OnInvert(bool state)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x7C2BA8", Offset = "0x7C2BA8", VA = "0x7C2BA8")]
		public void OnZeroValueChange(float value)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x7C2C94", Offset = "0x7C2C94", VA = "0x7C2C94")]
		public void OnZeroCancel()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x7C2CE0", Offset = "0x7C2CE0", VA = "0x7C2CE0")]
		public void OnDeadzoneValueChange(float value)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x7C2E44", Offset = "0x7C2E44", VA = "0x7C2E44")]
		public void OnDeadzoneCancel()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x7C2E94", Offset = "0x7C2E94", VA = "0x7C2E94")]
		public void OnSensitivityValueChange(float value)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x7C2F54", Offset = "0x7C2F54", VA = "0x7C2F54")]
		public void OnSensitivityCancel(float value)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x7C2F98", Offset = "0x7C2F98", VA = "0x7C2F98")]
		public void OnAxisScrollRectScroll(Vector2 pos)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x7C2F9C", Offset = "0x7C2F9C", VA = "0x7C2F9C")]
		private void OnAxisSelected(int axisIndex, Button button)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x7C29F0", Offset = "0x7C29F0", VA = "0x7C29F0")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x7C280C", Offset = "0x7C280C", VA = "0x7C280C")]
		private void Redraw()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x7C26DC", Offset = "0x7C26DC", VA = "0x7C26DC")]
		private void RefreshControls()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x7C2D74", Offset = "0x7C2D74", VA = "0x7C2D74")]
		private void RedrawDeadzone()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x7C2BF8", Offset = "0x7C2BF8", VA = "0x7C2BF8")]
		private void RedrawCalibratedZero()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x7C2FE0", Offset = "0x7C2FE0", VA = "0x7C2FE0")]
		private void RedrawValueMarkers()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x7C2520", Offset = "0x7C2520", VA = "0x7C2520")]
		private void SelectAxis(int index)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x7C3204", Offset = "0x7C3204", VA = "0x7C3204", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x7C3134", Offset = "0x7C3134", VA = "0x7C3134")]
		private void SetMinSensitivity()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x7C3240", Offset = "0x7C3240", VA = "0x7C3240")]
		private bool IsMenuAxis(int actionId, int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x7C36A0", Offset = "0x7C36A0", VA = "0x7C36A0")]
		private void GetAxisButtonDeadZone(int playerId, int actionId, ref float value)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x7C30F0", Offset = "0x7C30F0", VA = "0x7C30F0")]
		private float GetSliderSensitivity(AxisCalibration axisCalibration)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x7C2EE0", Offset = "0x7C2EE0", VA = "0x7C2EE0")]
		public void SetSensitivity(AxisCalibration axisCalibration, float sliderValue)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x7C376C", Offset = "0x7C376C", VA = "0x7C376C")]
		private static float ProcessPowerValue(float value, float minValue, float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x7C37BC", Offset = "0x7C37BC", VA = "0x7C37BC")]
		public CalibrationWindow()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AddComponentMenu("")]
	public class CanvasScalerExt : CanvasScaler
	{
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x7C37F4", Offset = "0x7C37F4", VA = "0x7C37F4")]
		public void ForceRefresh()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x7C3804", Offset = "0x7C3804", VA = "0x7C3804")]
		public CanvasScalerExt()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[RequireComponent(typeof(CanvasScalerExt))]
	public class CanvasScalerFitter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000279")]
		private class BreakPoint
		{
			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string name;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public float screenAspectRatio;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector2 referenceResolution;

			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x7C3A28", Offset = "0x7C3A28", VA = "0x7C3A28")]
			public BreakPoint()
			{
			}
		}

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BreakPoint[] breakPoints;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScalerExt canvasScaler;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int screenWidth;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int screenHeight;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action ScreenSizeChanged;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x7C380C", Offset = "0x7C380C", VA = "0x7C380C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x7C388C", Offset = "0x7C388C", VA = "0x7C388C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x7C38E8", Offset = "0x7C38E8", VA = "0x7C38E8")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x7C3A20", Offset = "0x7C3A20", VA = "0x7C3A20")]
		public CanvasScalerFitter()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AddComponentMenu("")]
	public class ControlMapper : MonoBehaviour
	{
		[Token(Token = "0x200027B")]
		private abstract class GUIElement
		{
			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly GameObject gameObject;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected readonly Text text;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Selectable selectable;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected readonly UIElementInfo uiElementInfo;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected bool permanentStateSet;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			protected readonly List<GUIElement> children;

			[Token(Token = "0x17000300")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x60010F7")]
				[Address(RVA = "0x7D8808", Offset = "0x7D8808", VA = "0x7D8808")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60010F8")]
				[Address(RVA = "0x7D8810", Offset = "0x7D8810", VA = "0x7D8810")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x7D8818", Offset = "0x7D8818", VA = "0x7D8818")]
			public GUIElement(GameObject gameObject)
			{
			}

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x7D8A88", Offset = "0x7D8A88", VA = "0x7D8A88", Slot = "4")]
			public virtual void SetInteractible(bool state, bool playTransition)
			{
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x7D8AA0", Offset = "0x7D8AA0", VA = "0x7D8AA0", Slot = "5")]
			public virtual void SetInteractible(bool state, bool playTransition, bool permanent)
			{
			}

			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x7D8D30", Offset = "0x7D8D30", VA = "0x7D8D30", Slot = "6")]
			public virtual void SetFirstChildObjectWidth(LayoutElementSizeType type, int value)
			{
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x7D8EB0", Offset = "0x7D8EB0", VA = "0x7D8EB0", Slot = "7")]
			public virtual void SetLabel(string label)
			{
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x7D8F50", Offset = "0x7D8F50", VA = "0x7D8F50", Slot = "8")]
			public virtual string GetLabel()
			{
				return null;
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x7D8FFC", Offset = "0x7D8FFC", VA = "0x7D8FFC")]
			public void SetElementInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x6001100")]
			[Address(RVA = "0x7D9098", Offset = "0x7D9098", VA = "0x7D9098", Slot = "9")]
			public virtual void SetActive(bool state)
			{
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x7D9130", Offset = "0x7D9130", VA = "0x7D9130", Slot = "10")]
			protected virtual bool Init()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200027C")]
		private class GUIButton : GUIElement
		{
			[Token(Token = "0x17000301")]
			protected Button button
			{
				[Token(Token = "0x6001102")]
				[Address(RVA = "0x7D9338", Offset = "0x7D9338", VA = "0x7D9338")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			public ButtonInfo buttonInfo
			{
				[Token(Token = "0x6001103")]
				[Address(RVA = "0x7D93B4", Offset = "0x7D93B4", VA = "0x7D93B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x7D9430", Offset = "0x7D9430", VA = "0x7D9430")]
			public GUIButton(GameObject gameObject)
			{
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x7D9450", Offset = "0x7D9450", VA = "0x7D9450")]
			public void SetButtonInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x6001106")]
			[Address(RVA = "0x7D9454", Offset = "0x7D9454", VA = "0x7D9454")]
			public void SetOnClickCallback(Action<ButtonInfo> callback)
			{
			}
		}

		[Token(Token = "0x200027E")]
		private class GUIInputField : GUIElement
		{
			[Token(Token = "0x17000303")]
			protected Button button
			{
				[Token(Token = "0x6001109")]
				[Address(RVA = "0x7D95DC", Offset = "0x7D95DC", VA = "0x7D95DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x600110A")]
				[Address(RVA = "0x7D9658", Offset = "0x7D9658", VA = "0x7D9658")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			public bool hasToggle
			{
				[Token(Token = "0x600110B")]
				[Address(RVA = "0x7D96D4", Offset = "0x7D96D4", VA = "0x7D96D4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000306")]
			public GUIToggle toggle
			{
				[Token(Token = "0x600110C")]
				[Address(RVA = "0x7D96E4", Offset = "0x7D96E4", VA = "0x7D96E4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600110D")]
				[Address(RVA = "0x7D96EC", Offset = "0x7D96EC", VA = "0x7D96EC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000307")]
			public int actionElementMapId
			{
				[Token(Token = "0x600110E")]
				[Address(RVA = "0x7D96F4", Offset = "0x7D96F4", VA = "0x7D96F4")]
				set
				{
				}
			}

			[Token(Token = "0x17000308")]
			public int controllerId
			{
				[Token(Token = "0x600110F")]
				[Address(RVA = "0x7D9788", Offset = "0x7D9788", VA = "0x7D9788")]
				set
				{
				}
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0x7D981C", Offset = "0x7D981C", VA = "0x7D981C")]
			public GUIInputField(GameObject gameObject)
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x7D983C", Offset = "0x7D983C", VA = "0x7D983C")]
			public void SetFieldInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x7D9938", Offset = "0x7D9938", VA = "0x7D9938")]
			public void SetOnClickCallback(Action<InputFieldInfo> callback)
			{
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x7D9A88", Offset = "0x7D9A88", VA = "0x7D9A88")]
			public void AddToggle(GUIToggle toggle)
			{
			}
		}

		[Token(Token = "0x2000280")]
		private class GUIToggle : GUIElement
		{
			[Token(Token = "0x17000309")]
			protected Toggle toggle
			{
				[Token(Token = "0x6001116")]
				[Address(RVA = "0x7D9AD0", Offset = "0x7D9AD0", VA = "0x7D9AD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			public ToggleInfo toggleInfo
			{
				[Token(Token = "0x6001117")]
				[Address(RVA = "0x7D9B4C", Offset = "0x7D9B4C", VA = "0x7D9B4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			public int actionElementMapId
			{
				[Token(Token = "0x6001118")]
				[Address(RVA = "0x7D9BC8", Offset = "0x7D9BC8", VA = "0x7D9BC8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001119")]
				[Address(RVA = "0x7D9C58", Offset = "0x7D9C58", VA = "0x7D9C58")]
				set
				{
				}
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0x7D9CEC", Offset = "0x7D9CEC", VA = "0x7D9CEC")]
			public GUIToggle(GameObject gameObject)
			{
			}

			[Token(Token = "0x600111B")]
			[Address(RVA = "0x7D9D0C", Offset = "0x7D9D0C", VA = "0x7D9D0C")]
			public void SetToggleInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x7D9E08", Offset = "0x7D9E08", VA = "0x7D9E08")]
			public void SetOnSubmitCallback(Action<ToggleInfo, bool> callback)
			{
			}

			[Token(Token = "0x600111D")]
			[Address(RVA = "0x7DA240", Offset = "0x7DA240", VA = "0x7DA240")]
			public void SetToggleState(bool state)
			{
			}
		}

		[Token(Token = "0x2000282")]
		private class GUILabel
		{
			[Token(Token = "0x1700030C")]
			public GameObject gameObject
			{
				[Token(Token = "0x6001120")]
				[Address(RVA = "0x7DA3B4", Offset = "0x7DA3B4", VA = "0x7DA3B4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001121")]
				[Address(RVA = "0x7DA3BC", Offset = "0x7DA3BC", VA = "0x7DA3BC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700030D")]
			private Text text
			{
				[Token(Token = "0x6001122")]
				[Address(RVA = "0x7DA3C4", Offset = "0x7DA3C4", VA = "0x7DA3C4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001123")]
				[Address(RVA = "0x7DA3CC", Offset = "0x7DA3CC", VA = "0x7DA3CC")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700030E")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0x7DA3D4", Offset = "0x7DA3D4", VA = "0x7DA3D4")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001125")]
				[Address(RVA = "0x7DA3DC", Offset = "0x7DA3DC", VA = "0x7DA3DC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001126")]
			[Address(RVA = "0x7DA3E4", Offset = "0x7DA3E4", VA = "0x7DA3E4")]
			public GUILabel(GameObject gameObject)
			{
			}

			[Token(Token = "0x6001127")]
			[Address(RVA = "0x7DA620", Offset = "0x7DA620", VA = "0x7DA620")]
			public void SetFontStyle(FontStyle style)
			{
			}

			[Token(Token = "0x6001128")]
			[Address(RVA = "0x7DA6B8", Offset = "0x7DA6B8", VA = "0x7DA6B8")]
			public void SetTextAlignment(TextAnchor alignment)
			{
			}

			[Token(Token = "0x6001129")]
			[Address(RVA = "0x7DA750", Offset = "0x7DA750", VA = "0x7DA750")]
			public void SetActive(bool state)
			{
			}

			[Token(Token = "0x600112A")]
			[Address(RVA = "0x7DA508", Offset = "0x7DA508", VA = "0x7DA508")]
			private bool Check()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000283")]
		public class MappingSet
		{
			[Token(Token = "0x2000284")]
			public enum ActionListMode
			{
				[Token(Token = "0x400165F")]
				ActionCategory,
				[Token(Token = "0x4001660")]
				Action
			}

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("The Map Category that will be displayed to the user for remapping.")]
			[SerializeField]
			private int _mapCategoryId;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[Tooltip("Choose whether you want to list Actions to display for this Map Category by individual Action or by all the Actions in an Action Category.")]
			private ActionListMode _actionListMode;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int[] _actionCategoryIds;

			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private int[] _actionIds;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IList<int> _actionCategoryIdsReadOnly;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IList<int> _actionIdsReadOnly;

			[Token(Token = "0x1700030F")]
			public int mapCategoryId
			{
				[Token(Token = "0x600112B")]
				[Address(RVA = "0x7DA7E8", Offset = "0x7DA7E8", VA = "0x7DA7E8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000310")]
			public ActionListMode actionListMode
			{
				[Token(Token = "0x600112C")]
				[Address(RVA = "0x7DA7F0", Offset = "0x7DA7F0", VA = "0x7DA7F0")]
				get
				{
					return default(ActionListMode);
				}
			}

			[Token(Token = "0x17000311")]
			public IList<int> actionCategoryIds
			{
				[Token(Token = "0x600112D")]
				[Address(RVA = "0x7DA7F8", Offset = "0x7DA7F8", VA = "0x7DA7F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			public IList<int> actionIds
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0x7DA898", Offset = "0x7DA898", VA = "0x7DA898")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			public bool isValid
			{
				[Token(Token = "0x600112F")]
				[Address(RVA = "0x7DA940", Offset = "0x7DA940", VA = "0x7DA940")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000314")]
			public static MappingSet Default
			{
				[Token(Token = "0x6001132")]
				[Address(RVA = "0x7DAAAC", Offset = "0x7DAAAC", VA = "0x7DAAAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001130")]
			[Address(RVA = "0x7DA9C4", Offset = "0x7DA9C4", VA = "0x7DA9C4")]
			public MappingSet()
			{
			}

			[Token(Token = "0x6001131")]
			[Address(RVA = "0x7DAA54", Offset = "0x7DAA54", VA = "0x7DAA54")]
			private MappingSet(int mapCategoryId, ActionListMode actionListMode, int[] actionCategoryIds, int[] actionIds)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000285")]
		public class InputBehaviorSettings
		{
			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("The Input Behavior that will be displayed to the user for modification.")]
			[SerializeField]
			private int _inputBehaviorId;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[Tooltip("If checked, a slider will be displayed so the user can change this value.")]
			private bool _showJoystickAxisSensitivity;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[Tooltip("If checked, a slider will be displayed so the user can change this value.")]
			[SerializeField]
			private bool _showMouseXYAxisSensitivity;

			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[Tooltip("If set to a non-blank value, this key will be used to look up the name in Language to be displayed as the title for the Input Behavior control set. Otherwise, the name field of the InputBehavior will be used.")]
			private string _labelLanguageKey;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[Tooltip("If set to a non-blank value, this name will be displayed above the individual slider control. Otherwise, no name will be displayed.")]
			private string _joystickAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[Tooltip("If set to a non-blank value, this key will be used to look up the name in Language to be displayed above the individual slider control. Otherwise, no name will be displayed.")]
			private string _mouseXYAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[Tooltip("The icon to display next to the slider. Set to none for no icon.")]
			private Sprite _joystickAxisSensitivityIcon;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[Tooltip("The icon to display next to the slider. Set to none for no icon.")]
			private Sprite _mouseXYAxisSensitivityIcon;

			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[Tooltip("Minimum value the user is allowed to set for this property.")]
			[SerializeField]
			private float _joystickAxisSensitivityMin;

			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			[Tooltip("Maximum value the user is allowed to set for this property.")]
			private float _joystickAxisSensitivityMax;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Tooltip("Minimum value the user is allowed to set for this property.")]
			[SerializeField]
			private float _mouseXYAxisSensitivityMin;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			[Tooltip("Maximum value the user is allowed to set for this property.")]
			private float _mouseXYAxisSensitivityMax;

			[Token(Token = "0x17000315")]
			public int inputBehaviorId
			{
				[Token(Token = "0x6001133")]
				[Address(RVA = "0x7DAB50", Offset = "0x7DAB50", VA = "0x7DAB50")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000316")]
			public bool showJoystickAxisSensitivity
			{
				[Token(Token = "0x6001134")]
				[Address(RVA = "0x7DAB58", Offset = "0x7DAB58", VA = "0x7DAB58")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000317")]
			public bool showMouseXYAxisSensitivity
			{
				[Token(Token = "0x6001135")]
				[Address(RVA = "0x7DAB60", Offset = "0x7DAB60", VA = "0x7DAB60")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000318")]
			public string labelLanguageKey
			{
				[Token(Token = "0x6001136")]
				[Address(RVA = "0x7DAB68", Offset = "0x7DAB68", VA = "0x7DAB68")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			public string joystickAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x6001137")]
				[Address(RVA = "0x7DAB70", Offset = "0x7DAB70", VA = "0x7DAB70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			public string mouseXYAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x6001138")]
				[Address(RVA = "0x7DAB78", Offset = "0x7DAB78", VA = "0x7DAB78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031B")]
			public Sprite joystickAxisSensitivityIcon
			{
				[Token(Token = "0x6001139")]
				[Address(RVA = "0x7DAB80", Offset = "0x7DAB80", VA = "0x7DAB80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			public Sprite mouseXYAxisSensitivityIcon
			{
				[Token(Token = "0x600113A")]
				[Address(RVA = "0x7DAB88", Offset = "0x7DAB88", VA = "0x7DAB88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031D")]
			public float joystickAxisSensitivityMin
			{
				[Token(Token = "0x600113B")]
				[Address(RVA = "0x7DAB90", Offset = "0x7DAB90", VA = "0x7DAB90")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700031E")]
			public float joystickAxisSensitivityMax
			{
				[Token(Token = "0x600113C")]
				[Address(RVA = "0x7DAB98", Offset = "0x7DAB98", VA = "0x7DAB98")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700031F")]
			public float mouseXYAxisSensitivityMin
			{
				[Token(Token = "0x600113D")]
				[Address(RVA = "0x7DABA0", Offset = "0x7DABA0", VA = "0x7DABA0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000320")]
			public float mouseXYAxisSensitivityMax
			{
				[Token(Token = "0x600113E")]
				[Address(RVA = "0x7DABA8", Offset = "0x7DABA8", VA = "0x7DABA8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000321")]
			public bool isValid
			{
				[Token(Token = "0x600113F")]
				[Address(RVA = "0x7DABB0", Offset = "0x7DABB0", VA = "0x7DABB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001140")]
			[Address(RVA = "0x7DABE0", Offset = "0x7DABE0", VA = "0x7DABE0")]
			public InputBehaviorSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000286")]
		private class Prefabs
		{
			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private GameObject _button;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private GameObject _fitButton;

			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private GameObject _inputGridLabel;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private GameObject _inputGridHeaderLabel;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private GameObject _inputGridFieldButton;

			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private GameObject _inputGridFieldInvertToggle;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private GameObject _window;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private GameObject _windowTitleText;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private GameObject _windowContentText;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private GameObject _fader;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private GameObject _calibrationWindow;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private GameObject _inputBehaviorsWindow;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private GameObject _centerStickGraphic;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private GameObject _moveStickGraphic;

			[Token(Token = "0x17000322")]
			public GameObject button
			{
				[Token(Token = "0x6001141")]
				[Address(RVA = "0x7DAC8C", Offset = "0x7DAC8C", VA = "0x7DAC8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000323")]
			public GameObject fitButton
			{
				[Token(Token = "0x6001142")]
				[Address(RVA = "0x7DAC94", Offset = "0x7DAC94", VA = "0x7DAC94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			public GameObject inputGridLabel
			{
				[Token(Token = "0x6001143")]
				[Address(RVA = "0x7DAC9C", Offset = "0x7DAC9C", VA = "0x7DAC9C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000325")]
			public GameObject inputGridHeaderLabel
			{
				[Token(Token = "0x6001144")]
				[Address(RVA = "0x7DACA4", Offset = "0x7DACA4", VA = "0x7DACA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			public GameObject inputGridFieldButton
			{
				[Token(Token = "0x6001145")]
				[Address(RVA = "0x7DACAC", Offset = "0x7DACAC", VA = "0x7DACAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000327")]
			public GameObject inputGridFieldInvertToggle
			{
				[Token(Token = "0x6001146")]
				[Address(RVA = "0x7DACB4", Offset = "0x7DACB4", VA = "0x7DACB4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			public GameObject window
			{
				[Token(Token = "0x6001147")]
				[Address(RVA = "0x7DACBC", Offset = "0x7DACBC", VA = "0x7DACBC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000329")]
			public GameObject windowTitleText
			{
				[Token(Token = "0x6001148")]
				[Address(RVA = "0x7DACC4", Offset = "0x7DACC4", VA = "0x7DACC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			public GameObject windowContentText
			{
				[Token(Token = "0x6001149")]
				[Address(RVA = "0x7DACCC", Offset = "0x7DACCC", VA = "0x7DACCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032B")]
			public GameObject fader
			{
				[Token(Token = "0x600114A")]
				[Address(RVA = "0x7DACD4", Offset = "0x7DACD4", VA = "0x7DACD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			public GameObject calibrationWindow
			{
				[Token(Token = "0x600114B")]
				[Address(RVA = "0x7DACDC", Offset = "0x7DACDC", VA = "0x7DACDC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032D")]
			public GameObject inputBehaviorsWindow
			{
				[Token(Token = "0x600114C")]
				[Address(RVA = "0x7DACE4", Offset = "0x7DACE4", VA = "0x7DACE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			public GameObject centerStickGraphic
			{
				[Token(Token = "0x600114D")]
				[Address(RVA = "0x7DACEC", Offset = "0x7DACEC", VA = "0x7DACEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032F")]
			public GameObject moveStickGraphic
			{
				[Token(Token = "0x600114E")]
				[Address(RVA = "0x7DACF4", Offset = "0x7DACF4", VA = "0x7DACF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600114F")]
			[Address(RVA = "0x7DACFC", Offset = "0x7DACFC", VA = "0x7DACFC")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x6001150")]
			[Address(RVA = "0x7DAF28", Offset = "0x7DAF28", VA = "0x7DAF28")]
			public Prefabs()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000287")]
		private class References
		{
			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Canvas _canvas;

			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private CanvasGroup _mainCanvasGroup;

			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform _mainContent;

			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Transform _mainContentInner;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private UIGroup _playersGroup;

			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Transform _controllerGroup;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private Transform _controllerGroupLabelGroup;

			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private UIGroup _controllerSettingsGroup;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private UIGroup _assignedControllersGroup;

			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Transform _settingsAndMapCategoriesGroup;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private UIGroup _settingsGroup;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private UIGroup _mapCategoriesGroup;

			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private Transform _inputGridGroup;

			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private Transform _inputGridContainer;

			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private Transform _inputGridHeadersGroup;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			private Scrollbar _inputGridVScrollbar;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			private ScrollRect _inputGridScrollRect;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			private Transform _inputGridInnerGroup;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			private Text _controllerNameLabel;

			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			private Button _removeControllerButton;

			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private Button _assignControllerButton;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private Button _calibrateControllerButton;

			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private Button _doneButton;

			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			private Button _restoreDefaultsButton;

			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			private Selectable _defaultSelection;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			private GameObject[] _fixedSelectableUIElements;

			[Token(Token = "0x4001695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			private Image _mainBackgroundImage;

			[Token(Token = "0x17000330")]
			public Canvas canvas
			{
				[Token(Token = "0x6001151")]
				[Address(RVA = "0x7DAF30", Offset = "0x7DAF30", VA = "0x7DAF30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000331")]
			public CanvasGroup mainCanvasGroup
			{
				[Token(Token = "0x6001152")]
				[Address(RVA = "0x7DAF38", Offset = "0x7DAF38", VA = "0x7DAF38")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			public UIGroup playersGroup
			{
				[Token(Token = "0x6001153")]
				[Address(RVA = "0x7DAF40", Offset = "0x7DAF40", VA = "0x7DAF40")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000333")]
			public Transform controllerGroup
			{
				[Token(Token = "0x6001154")]
				[Address(RVA = "0x7DAF48", Offset = "0x7DAF48", VA = "0x7DAF48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			public Transform controllerGroupLabelGroup
			{
				[Token(Token = "0x6001155")]
				[Address(RVA = "0x7DAF50", Offset = "0x7DAF50", VA = "0x7DAF50")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			public UIGroup controllerSettingsGroup
			{
				[Token(Token = "0x6001156")]
				[Address(RVA = "0x7DAF58", Offset = "0x7DAF58", VA = "0x7DAF58")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			public UIGroup assignedControllersGroup
			{
				[Token(Token = "0x6001157")]
				[Address(RVA = "0x7DAF60", Offset = "0x7DAF60", VA = "0x7DAF60")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			public Transform settingsAndMapCategoriesGroup
			{
				[Token(Token = "0x6001158")]
				[Address(RVA = "0x7DAF68", Offset = "0x7DAF68", VA = "0x7DAF68")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			public UIGroup settingsGroup
			{
				[Token(Token = "0x6001159")]
				[Address(RVA = "0x7DAF70", Offset = "0x7DAF70", VA = "0x7DAF70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			public UIGroup mapCategoriesGroup
			{
				[Token(Token = "0x600115A")]
				[Address(RVA = "0x7DAF78", Offset = "0x7DAF78", VA = "0x7DAF78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			public Transform inputGridContainer
			{
				[Token(Token = "0x600115B")]
				[Address(RVA = "0x7DAF80", Offset = "0x7DAF80", VA = "0x7DAF80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			public Transform inputGridHeadersGroup
			{
				[Token(Token = "0x600115C")]
				[Address(RVA = "0x7DAF88", Offset = "0x7DAF88", VA = "0x7DAF88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			public Scrollbar inputGridVScrollbar
			{
				[Token(Token = "0x600115D")]
				[Address(RVA = "0x7DAF90", Offset = "0x7DAF90", VA = "0x7DAF90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			public ScrollRect inputGridScrollRect
			{
				[Token(Token = "0x600115E")]
				[Address(RVA = "0x7DAF98", Offset = "0x7DAF98", VA = "0x7DAF98")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			public Transform inputGridInnerGroup
			{
				[Token(Token = "0x600115F")]
				[Address(RVA = "0x7DAFA0", Offset = "0x7DAFA0", VA = "0x7DAFA0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			public Text controllerNameLabel
			{
				[Token(Token = "0x6001160")]
				[Address(RVA = "0x7DAFA8", Offset = "0x7DAFA8", VA = "0x7DAFA8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000340")]
			public Button removeControllerButton
			{
				[Token(Token = "0x6001161")]
				[Address(RVA = "0x7DAFB0", Offset = "0x7DAFB0", VA = "0x7DAFB0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000341")]
			public Button assignControllerButton
			{
				[Token(Token = "0x6001162")]
				[Address(RVA = "0x7DAFB8", Offset = "0x7DAFB8", VA = "0x7DAFB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			public Button calibrateControllerButton
			{
				[Token(Token = "0x6001163")]
				[Address(RVA = "0x7DAFC0", Offset = "0x7DAFC0", VA = "0x7DAFC0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			public Button doneButton
			{
				[Token(Token = "0x6001164")]
				[Address(RVA = "0x7DAFC8", Offset = "0x7DAFC8", VA = "0x7DAFC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			public Button restoreDefaultsButton
			{
				[Token(Token = "0x6001165")]
				[Address(RVA = "0x7DAFD0", Offset = "0x7DAFD0", VA = "0x7DAFD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			public Selectable defaultSelection
			{
				[Token(Token = "0x6001166")]
				[Address(RVA = "0x7DAFD8", Offset = "0x7DAFD8", VA = "0x7DAFD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			public GameObject[] fixedSelectableUIElements
			{
				[Token(Token = "0x6001167")]
				[Address(RVA = "0x7DAFE0", Offset = "0x7DAFE0", VA = "0x7DAFE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000347")]
			public LayoutElement inputGridLayoutElement
			{
				[Token(Token = "0x6001168")]
				[Address(RVA = "0x7DAFE8", Offset = "0x7DAFE8", VA = "0x7DAFE8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001169")]
				[Address(RVA = "0x7DAFF0", Offset = "0x7DAFF0", VA = "0x7DAFF0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000348")]
			public Transform inputGridActionColumn
			{
				[Token(Token = "0x600116A")]
				[Address(RVA = "0x7DAFF8", Offset = "0x7DAFF8", VA = "0x7DAFF8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600116B")]
				[Address(RVA = "0x7DB000", Offset = "0x7DB000", VA = "0x7DB000")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000349")]
			public Transform inputGridKeyboardColumn
			{
				[Token(Token = "0x600116C")]
				[Address(RVA = "0x7DB008", Offset = "0x7DB008", VA = "0x7DB008")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600116D")]
				[Address(RVA = "0x7DB010", Offset = "0x7DB010", VA = "0x7DB010")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034A")]
			public Transform inputGridMouseColumn
			{
				[Token(Token = "0x600116E")]
				[Address(RVA = "0x7DB018", Offset = "0x7DB018", VA = "0x7DB018")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600116F")]
				[Address(RVA = "0x7DB020", Offset = "0x7DB020", VA = "0x7DB020")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034B")]
			public Transform inputGridControllerColumn
			{
				[Token(Token = "0x6001170")]
				[Address(RVA = "0x7DB030", Offset = "0x7DB030", VA = "0x7DB030")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001171")]
				[Address(RVA = "0x7DB038", Offset = "0x7DB038", VA = "0x7DB038")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034C")]
			public Transform inputGridHeader1
			{
				[Token(Token = "0x6001172")]
				[Address(RVA = "0x7DB048", Offset = "0x7DB048", VA = "0x7DB048")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001173")]
				[Address(RVA = "0x7DB050", Offset = "0x7DB050", VA = "0x7DB050")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034D")]
			public Transform inputGridHeader2
			{
				[Token(Token = "0x6001174")]
				[Address(RVA = "0x7DB060", Offset = "0x7DB060", VA = "0x7DB060")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001175")]
				[Address(RVA = "0x7DB068", Offset = "0x7DB068", VA = "0x7DB068")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034E")]
			public Transform inputGridHeader3
			{
				[Token(Token = "0x6001176")]
				[Address(RVA = "0x7DB078", Offset = "0x7DB078", VA = "0x7DB078")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001177")]
				[Address(RVA = "0x7DB080", Offset = "0x7DB080", VA = "0x7DB080")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700034F")]
			public Transform inputGridHeader4
			{
				[Token(Token = "0x6001178")]
				[Address(RVA = "0x7DB090", Offset = "0x7DB090", VA = "0x7DB090")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001179")]
				[Address(RVA = "0x7DB098", Offset = "0x7DB098", VA = "0x7DB098")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x7DB0A8", Offset = "0x7DB0A8", VA = "0x7DB0A8")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x7DB4DC", Offset = "0x7DB4DC", VA = "0x7DB4DC")]
			public References()
			{
			}
		}

		[Token(Token = "0x2000288")]
		private class InputActionSet
		{
			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _actionId;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private AxisRange _axisRange;

			[Token(Token = "0x17000350")]
			public int actionId
			{
				[Token(Token = "0x600117C")]
				[Address(RVA = "0x7DB4E4", Offset = "0x7DB4E4", VA = "0x7DB4E4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000351")]
			public AxisRange axisRange
			{
				[Token(Token = "0x600117D")]
				[Address(RVA = "0x7DB4EC", Offset = "0x7DB4EC", VA = "0x7DB4EC")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x7DB4F4", Offset = "0x7DB4F4", VA = "0x7DB4F4")]
			public InputActionSet(int actionId, AxisRange axisRange)
			{
			}
		}

		[Token(Token = "0x2000289")]
		private class InputMapping
		{
			[Token(Token = "0x17000352")]
			public string actionName
			{
				[Token(Token = "0x600117F")]
				[Address(RVA = "0x7DB520", Offset = "0x7DB520", VA = "0x7DB520")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001180")]
				[Address(RVA = "0x7DB528", Offset = "0x7DB528", VA = "0x7DB528")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000353")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x6001181")]
				[Address(RVA = "0x7DB530", Offset = "0x7DB530", VA = "0x7DB530")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001182")]
				[Address(RVA = "0x7DB538", Offset = "0x7DB538", VA = "0x7DB538")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000354")]
			public ControllerMap map
			{
				[Token(Token = "0x6001183")]
				[Address(RVA = "0x7DB540", Offset = "0x7DB540", VA = "0x7DB540")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001184")]
				[Address(RVA = "0x7DB548", Offset = "0x7DB548", VA = "0x7DB548")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000355")]
			public ActionElementMap aem
			{
				[Token(Token = "0x6001185")]
				[Address(RVA = "0x7DB550", Offset = "0x7DB550", VA = "0x7DB550")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001186")]
				[Address(RVA = "0x7DB558", Offset = "0x7DB558", VA = "0x7DB558")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000356")]
			public ControllerType controllerType
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0x7DB560", Offset = "0x7DB560", VA = "0x7DB560")]
				[CompilerGenerated]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x6001188")]
				[Address(RVA = "0x7DB568", Offset = "0x7DB568", VA = "0x7DB568")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000357")]
			public int controllerId
			{
				[Token(Token = "0x6001189")]
				[Address(RVA = "0x7DB570", Offset = "0x7DB570", VA = "0x7DB570")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600118A")]
				[Address(RVA = "0x7DB578", Offset = "0x7DB578", VA = "0x7DB578")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000358")]
			public ControllerPollingInfo pollingInfo
			{
				[Token(Token = "0x600118B")]
				[Address(RVA = "0x7DB580", Offset = "0x7DB580", VA = "0x7DB580")]
				[CompilerGenerated]
				get
				{
					return default(ControllerPollingInfo);
				}
				[Token(Token = "0x600118C")]
				[Address(RVA = "0x7DB5A0", Offset = "0x7DB5A0", VA = "0x7DB5A0")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000359")]
			public ModifierKeyFlags modifierKeyFlags
			{
				[Token(Token = "0x600118D")]
				[Address(RVA = "0x7DB5CC", Offset = "0x7DB5CC", VA = "0x7DB5CC")]
				[CompilerGenerated]
				get
				{
					return default(ModifierKeyFlags);
				}
				[Token(Token = "0x600118E")]
				[Address(RVA = "0x7DB5D4", Offset = "0x7DB5D4", VA = "0x7DB5D4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700035A")]
			public AxisRange axisRange
			{
				[Token(Token = "0x600118F")]
				[Address(RVA = "0x7DB5DC", Offset = "0x7DB5DC", VA = "0x7DB5DC")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x1700035B")]
			public string elementName
			{
				[Token(Token = "0x6001190")]
				[Address(RVA = "0x7DB624", Offset = "0x7DB624", VA = "0x7DB624")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x7DB71C", Offset = "0x7DB71C", VA = "0x7DB71C")]
			public InputMapping(string actionName, InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x6001192")]
			[Address(RVA = "0x7DB7A8", Offset = "0x7DB7A8", VA = "0x7DB7A8")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x6001193")]
			[Address(RVA = "0x7DB8B4", Offset = "0x7DB8B4", VA = "0x7DB8B4")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo, ModifierKeyFlags modifierKeyFlags)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x6001194")]
			[Address(RVA = "0x7DB814", Offset = "0x7DB814", VA = "0x7DB814")]
			public ElementAssignment ToElementAssignment()
			{
				return default(ElementAssignment);
			}
		}

		[Token(Token = "0x200028A")]
		private class AxisCalibrator
		{
			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AxisCalibrationData data;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public readonly Joystick joystick;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly int axisIndex;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Controller.Axis axis;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstRun;

			[Token(Token = "0x1700035C")]
			public bool isValid
			{
				[Token(Token = "0x6001195")]
				[Address(RVA = "0x7DB928", Offset = "0x7DB928", VA = "0x7DB928")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0x7DB938", Offset = "0x7DB938", VA = "0x7DB938")]
			public AxisCalibrator(Joystick joystick, int axisIndex)
			{
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x7DBACC", Offset = "0x7DBACC", VA = "0x7DBACC")]
			public void RecordMinMax()
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x7DBB20", Offset = "0x7DBB20", VA = "0x7DBB20")]
			public void RecordZero()
			{
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x7DBB44", Offset = "0x7DBB44", VA = "0x7DBB44")]
			public void Commit()
			{
			}
		}

		[Token(Token = "0x200028B")]
		private class IndexedDictionary<TKey, TValue>
		{
			[Token(Token = "0x200028C")]
			private class Entry
			{
				[Token(Token = "0x40016AF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TKey key;

				[Token(Token = "0x40016B0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TValue value;

				[Token(Token = "0x60011A3")]
				public Entry(TKey key, TValue value)
				{
				}
			}

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Entry> list;

			[Token(Token = "0x1700035D")]
			public int Count
			{
				[Token(Token = "0x600119A")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700035E")]
			public TValue this[int index]
			{
				[Token(Token = "0x600119C")]
				get
				{
					return (TValue)null;
				}
			}

			[Token(Token = "0x600119B")]
			public IndexedDictionary()
			{
			}

			[Token(Token = "0x600119D")]
			public TValue Get(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x600119E")]
			public bool TryGet(TKey key, out TValue value)
			{
				return default(bool);
			}

			[Token(Token = "0x600119F")]
			public void Add(TKey key, TValue value)
			{
			}

			[Token(Token = "0x60011A0")]
			public int IndexOfKey(TKey key)
			{
				return default(int);
			}

			[Token(Token = "0x60011A1")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x60011A2")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200028D")]
		private enum LayoutElementSizeType
		{
			[Token(Token = "0x40016B2")]
			MinSize,
			[Token(Token = "0x40016B3")]
			PreferredSize
		}

		[Token(Token = "0x200028E")]
		private class InputGrid
		{
			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputGridEntryList list;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<GameObject> groups;

			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x7DBBCC", Offset = "0x7DBBCC", VA = "0x7DBBCC")]
			public InputGrid()
			{
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x7DBD14", Offset = "0x7DBD14", VA = "0x7DBD14")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x7DBDF0", Offset = "0x7DBDF0", VA = "0x7DBDF0")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x7DBE0C", Offset = "0x7DBE0C", VA = "0x7DBE0C")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x7DBE28", Offset = "0x7DBE28", VA = "0x7DBE28")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x7DBE80", Offset = "0x7DBE80", VA = "0x7DBE80")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x7DBEE0", Offset = "0x7DBEE0", VA = "0x7DBEE0")]
			public void AddGroup(GameObject group)
			{
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x7DBF90", Offset = "0x7DBF90", VA = "0x7DBF90")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x7DC050", Offset = "0x7DC050", VA = "0x7DC050")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x7DC108", Offset = "0x7DC108", VA = "0x7DC108")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x7DC158", Offset = "0x7DC158", VA = "0x7DC158")]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x7DC204", Offset = "0x7DC204", VA = "0x7DC204")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x7DC29C", Offset = "0x7DC29C", VA = "0x7DC29C")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x7DC334", Offset = "0x7DC334", VA = "0x7DC334")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x7DC438", Offset = "0x7DC438", VA = "0x7DC438")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x7DC4D4", Offset = "0x7DC4D4", VA = "0x7DC4D4")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x7DC524", Offset = "0x7DC524", VA = "0x7DC524")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x7DC610", Offset = "0x7DC610", VA = "0x7DC610")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x7DC6A8", Offset = "0x7DC6A8", VA = "0x7DC6A8")]
			public void HideAll()
			{
			}

			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x7DC768", Offset = "0x7DC768", VA = "0x7DC768")]
			private void ClearGroups()
			{
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x7DC868", Offset = "0x7DC868", VA = "0x7DC868")]
			public void ClearAll()
			{
			}
		}

		[Token(Token = "0x200028F")]
		private class InputGridEntryList
		{
			[Token(Token = "0x2000290")]
			private class MapCategoryEntry
			{
				[Token(Token = "0x40016B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private List<ActionEntry> _actionList;

				[Token(Token = "0x40016B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private IndexedDictionary<int, ActionCategoryEntry> _actionCategoryList;

				[Token(Token = "0x40016B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private float _columnHeight;

				[Token(Token = "0x1700035F")]
				public List<ActionEntry> actionList
				{
					[Token(Token = "0x60011D0")]
					[Address(RVA = "0x7DD90C", Offset = "0x7DD90C", VA = "0x7DD90C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000360")]
				public float columnHeight
				{
					[Token(Token = "0x60011D1")]
					[Address(RVA = "0x7DD914", Offset = "0x7DD914", VA = "0x7DD914")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x60011D2")]
					[Address(RVA = "0x7DD91C", Offset = "0x7DD91C", VA = "0x7DD91C")]
					set
					{
					}
				}

				[Token(Token = "0x60011D3")]
				[Address(RVA = "0x7DC8D8", Offset = "0x7DC8D8", VA = "0x7DC8D8")]
				public MapCategoryEntry()
				{
				}

				[Token(Token = "0x60011D4")]
				[Address(RVA = "0x7DCB9C", Offset = "0x7DCB9C", VA = "0x7DCB9C")]
				public ActionEntry GetActionEntry(int actionId, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x60011D5")]
				[Address(RVA = "0x7DD924", Offset = "0x7DD924", VA = "0x7DD924")]
				public int IndexOfActionEntry(int actionId, AxisRange axisRange)
				{
					return default(int);
				}

				[Token(Token = "0x60011D6")]
				[Address(RVA = "0x7DDA28", Offset = "0x7DDA28", VA = "0x7DDA28")]
				public bool ContainsActionEntry(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x60011D7")]
				[Address(RVA = "0x7DCA50", Offset = "0x7DCA50", VA = "0x7DCA50")]
				public ActionEntry AddAction(InputAction action, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x60011D8")]
				[Address(RVA = "0x7DCDB8", Offset = "0x7DCDB8", VA = "0x7DCDB8")]
				public ActionCategoryEntry GetActionCategoryEntry(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x60011D9")]
				[Address(RVA = "0x7DCCB4", Offset = "0x7DCCB4", VA = "0x7DCCB4")]
				public ActionCategoryEntry AddActionCategory(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x60011DA")]
				[Address(RVA = "0x7DD7F0", Offset = "0x7DD7F0", VA = "0x7DD7F0")]
				public void SetAllActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000291")]
			private class ActionEntry
			{
				[Token(Token = "0x40016BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private IndexedDictionary<int, FieldSet> fieldSets;

				[Token(Token = "0x40016BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x40016BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public readonly InputAction action;

				[Token(Token = "0x40016BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public readonly AxisRange axisRange;

				[Token(Token = "0x40016BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public readonly InputActionSet actionSet;

				[Token(Token = "0x60011DB")]
				[Address(RVA = "0x7DDA40", Offset = "0x7DDA40", VA = "0x7DDA40")]
				public ActionEntry(InputAction action, AxisRange axisRange)
				{
				}

				[Token(Token = "0x60011DC")]
				[Address(RVA = "0x7DDC40", Offset = "0x7DDC40", VA = "0x7DDC40")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x60011DD")]
				[Address(RVA = "0x7DD9F0", Offset = "0x7DD9F0", VA = "0x7DD9F0")]
				public bool Matches(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x60011DE")]
				[Address(RVA = "0x7DCE60", Offset = "0x7DCE60", VA = "0x7DCE60")]
				public void AddInputFieldSet(ControllerType controllerType, GameObject fieldSetContainer)
				{
				}

				[Token(Token = "0x60011DF")]
				[Address(RVA = "0x7DCF34", Offset = "0x7DCF34", VA = "0x7DCF34")]
				public void AddInputField(ControllerType controllerType, int fieldIndex, GUIInputField inputField)
				{
				}

				[Token(Token = "0x60011E0")]
				[Address(RVA = "0x7DD0D8", Offset = "0x7DD0D8", VA = "0x7DD0D8")]
				public GUIInputField GetGUIInputField(ControllerType controllerType, int fieldIndex)
				{
					return null;
				}

				[Token(Token = "0x60011E1")]
				[Address(RVA = "0x7DD394", Offset = "0x7DD394", VA = "0x7DD394")]
				public void PopulateField(ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
				{
				}

				[Token(Token = "0x60011E2")]
				[Address(RVA = "0x7DD538", Offset = "0x7DD538", VA = "0x7DD538")]
				public void SetFixedFieldData(ControllerType controllerType, int controllerId)
				{
				}

				[Token(Token = "0x60011E3")]
				[Address(RVA = "0x7DD648", Offset = "0x7DD648", VA = "0x7DD648")]
				public void Initialize()
				{
				}

				[Token(Token = "0x60011E4")]
				[Address(RVA = "0x7DDB74", Offset = "0x7DDB74", VA = "0x7DDB74")]
				public void SetActive(bool state)
				{
				}

				[Token(Token = "0x60011E5")]
				[Address(RVA = "0x7DD220", Offset = "0x7DD220", VA = "0x7DD220")]
				public void SetFieldsActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000292")]
			private class FieldSet
			{
				[Token(Token = "0x40016BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly GameObject groupContainer;

				[Token(Token = "0x40016C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public readonly IndexedDictionary<int, GUIInputField> fields;

				[Token(Token = "0x60011E6")]
				[Address(RVA = "0x7DDC48", Offset = "0x7DDC48", VA = "0x7DDC48")]
				public FieldSet(GameObject groupContainer)
				{
				}
			}

			[Token(Token = "0x2000293")]
			private class ActionCategoryEntry
			{
				[Token(Token = "0x40016C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly int actionCategoryId;

				[Token(Token = "0x40016C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x60011E7")]
				[Address(RVA = "0x7DDB38", Offset = "0x7DDB38", VA = "0x7DDB38")]
				public ActionCategoryEntry(int actionCategoryId)
				{
				}

				[Token(Token = "0x60011E8")]
				[Address(RVA = "0x7DDCEC", Offset = "0x7DDCEC", VA = "0x7DDCEC")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x60011E9")]
				[Address(RVA = "0x7DDB60", Offset = "0x7DDB60", VA = "0x7DDB60")]
				public void SetActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000294")]
			[CompilerGenerated]
			private sealed class <GetActionSets>d__18 : IEnumerable<InputActionSet>, IEnumerable, IEnumerator<InputActionSet>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40016C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40016C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private InputActionSet <>2__current;

				[Token(Token = "0x40016C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x40016C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public InputGridEntryList <>4__this;

				[Token(Token = "0x40016C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int mapCategoryId;

				[Token(Token = "0x40016C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public int <>3__mapCategoryId;

				[Token(Token = "0x40016C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private List<ActionEntry> <list>5__2;

				[Token(Token = "0x40016CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int <count>5__3;

				[Token(Token = "0x40016CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				private int <i>5__4;

				[Token(Token = "0x17000361")]
				private InputActionSet System.Collections.Generic.IEnumerator<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.Current
				{
					[Token(Token = "0x60011ED")]
					[Address(RVA = "0x7DDE20", Offset = "0x7DDE20", VA = "0x7DDE20", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000362")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60011EF")]
					[Address(RVA = "0x7DDE68", Offset = "0x7DDE68", VA = "0x7DDE68", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60011EA")]
				[Address(RVA = "0x7DD1EC", Offset = "0x7DD1EC", VA = "0x7DD1EC")]
				[DebuggerHidden]
				public <GetActionSets>d__18(int <>1__state)
				{
				}

				[Token(Token = "0x60011EB")]
				[Address(RVA = "0x7DDCF4", Offset = "0x7DDCF4", VA = "0x7DDCF4", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60011EC")]
				[Address(RVA = "0x7DDCF8", Offset = "0x7DDCF8", VA = "0x7DDCF8", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60011EE")]
				[Address(RVA = "0x7DDE28", Offset = "0x7DDE28", VA = "0x7DDE28", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x60011F0")]
				[Address(RVA = "0x7DDE70", Offset = "0x7DDE70", VA = "0x7DDE70", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<InputActionSet> System.Collections.Generic.IEnumerable<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x60011F1")]
				[Address(RVA = "0x7DDF24", Offset = "0x7DDF24", VA = "0x7DDF24", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IndexedDictionary<int, MapCategoryEntry> entries;

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x7DBC8C", Offset = "0x7DBC8C", VA = "0x7DBC8C")]
			public InputGridEntryList()
			{
			}

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x7DBD2C", Offset = "0x7DBD2C", VA = "0x7DBD2C")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x7DBE08", Offset = "0x7DBE08", VA = "0x7DBE08")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x7DC9B0", Offset = "0x7DC9B0", VA = "0x7DC9B0")]
			private ActionEntry AddActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x7DBFA8", Offset = "0x7DBFA8", VA = "0x7DBFA8")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x7DBE24", Offset = "0x7DBE24", VA = "0x7DBE24")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x7DCC28", Offset = "0x7DCC28", VA = "0x7DCC28")]
			private ActionCategoryEntry AddActionCategoryEntry(int mapCategoryId, int actionCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x7DC068", Offset = "0x7DC068", VA = "0x7DC068")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x7DBE40", Offset = "0x7DBE40", VA = "0x7DBE40")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x7DBE98", Offset = "0x7DBE98", VA = "0x7DBE98")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x7DC21C", Offset = "0x7DC21C", VA = "0x7DC21C")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x7DC2B4", Offset = "0x7DC2B4", VA = "0x7DC2B4")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x7DC120", Offset = "0x7DC120", VA = "0x7DC120")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x7DD038", Offset = "0x7DD038", VA = "0x7DD038")]
			private ActionEntry GetActionEntry(int mapCategoryId, int actionId, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x7DCE4C", Offset = "0x7DCE4C", VA = "0x7DCE4C")]
			private ActionEntry GetActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x7DC170", Offset = "0x7DC170", VA = "0x7DC170")]
			[IteratorStateMachine(typeof(<GetActionSets>d__18))]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x7DC350", Offset = "0x7DC350", VA = "0x7DC350")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x7DC464", Offset = "0x7DC464", VA = "0x7DC464")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x7DC4EC", Offset = "0x7DC4EC", VA = "0x7DC4EC")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x7DC53C", Offset = "0x7DC53C", VA = "0x7DC53C")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x7DC628", Offset = "0x7DC628", VA = "0x7DC628")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x7DC6C0", Offset = "0x7DC6C0", VA = "0x7DC6C0")]
			public void HideAll()
			{
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x7DC888", Offset = "0x7DC888", VA = "0x7DC888")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000295")]
		private class WindowManager
		{
			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<Window> windows;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GameObject windowPrefab;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Transform parent;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject fader;

			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int idCounter;

			[Token(Token = "0x17000363")]
			public bool isWindowOpen
			{
				[Token(Token = "0x60011F2")]
				[Address(RVA = "0x7DDF28", Offset = "0x7DDF28", VA = "0x7DDF28")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000364")]
			public Window topWindow
			{
				[Token(Token = "0x60011F3")]
				[Address(RVA = "0x7DDFF8", Offset = "0x7DDFF8", VA = "0x7DDFF8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x7DE0DC", Offset = "0x7DE0DC", VA = "0x7DE0DC")]
			public WindowManager(GameObject windowPrefab, GameObject faderPrefab, Transform parent)
			{
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x7DE2BC", Offset = "0x7DE2BC", VA = "0x7DE2BC")]
			public Window OpenWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x7DE658", Offset = "0x7DE658", VA = "0x7DE658")]
			public Window OpenWindow(GameObject windowPrefab, string name)
			{
				return null;
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x7DE984", Offset = "0x7DE984", VA = "0x7DE984")]
			public void CloseTop()
			{
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x7DEB58", Offset = "0x7DEB58", VA = "0x7DEB58")]
			public void CloseWindow(int windowId)
			{
			}

			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x7DEC9C", Offset = "0x7DEC9C", VA = "0x7DEC9C")]
			public void CloseWindow(Window window)
			{
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x7DEEEC", Offset = "0x7DEEEC", VA = "0x7DEEEC")]
			public void CloseAll()
			{
			}

			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x7DF020", Offset = "0x7DF020", VA = "0x7DF020")]
			public void CancelAll()
			{
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x7DEB74", Offset = "0x7DEB74", VA = "0x7DEB74")]
			public Window GetWindow(int windowId)
			{
				return null;
			}

			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x7DF12C", Offset = "0x7DF12C", VA = "0x7DF12C")]
			public bool IsFocused(int windowId)
			{
				return default(bool);
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x7DF1CC", Offset = "0x7DF1CC", VA = "0x7DF1CC")]
			public void Focus(Window window)
			{
			}

			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x7DF26C", Offset = "0x7DF26C", VA = "0x7DF26C")]
			private void DefocusOtherWindows(int focusedWindowId)
			{
			}

			[Token(Token = "0x6001200")]
			[Address(RVA = "0x7DE520", Offset = "0x7DE520", VA = "0x7DE520")]
			private void UpdateFader()
			{
			}

			[Token(Token = "0x6001201")]
			[Address(RVA = "0x7DEE54", Offset = "0x7DEE54", VA = "0x7DEE54")]
			private void FocusTopWindow()
			{
			}

			[Token(Token = "0x6001202")]
			[Address(RVA = "0x7DE29C", Offset = "0x7DE29C", VA = "0x7DE29C")]
			private void SetFaderActive(bool state)
			{
			}

			[Token(Token = "0x6001203")]
			[Address(RVA = "0x7DE2E8", Offset = "0x7DE2E8", VA = "0x7DE2E8")]
			private Window InstantiateWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0x7DE738", Offset = "0x7DE738", VA = "0x7DE738")]
			private Window InstantiateWindow(string name, GameObject windowPrefab)
			{
				return null;
			}

			[Token(Token = "0x6001205")]
			[Address(RVA = "0x7DEAB4", Offset = "0x7DEAB4", VA = "0x7DEAB4")]
			private void DestroyWindow(Window window)
			{
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0x7DF38C", Offset = "0x7DF38C", VA = "0x7DF38C")]
			private int GetNewId()
			{
				return default(int);
			}

			[Token(Token = "0x6001207")]
			[Address(RVA = "0x7DF3D4", Offset = "0x7DF3D4", VA = "0x7DF3D4")]
			public void ClearCompletely()
			{
			}
		}

		[Token(Token = "0x200029B")]
		[CompilerGenerated]
		private sealed class <ElementAssignmentConflicts>d__411 : IEnumerable<ElementAssignmentConflictInfo>, IEnumerable, IEnumerator<ElementAssignmentConflictInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private ElementAssignmentConflictInfo <>2__current;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Player player;

			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Player <>3__player;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private InputMapping mapping;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InputMapping <>3__mapping;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ControlMapper <>4__this;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ElementAssignment assignment;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ElementAssignment <>3__assignment;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private bool skipOtherPlayers;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
			public bool <>3__skipOtherPlayers;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private ElementAssignmentConflictCheck <conflictCheck>5__2;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private IEnumerator<ElementAssignmentConflictInfo> <>7__wrap2;

			[Token(Token = "0x17000365")]
			private ElementAssignmentConflictInfo System.Collections.Generic.IEnumerator<Rewired.ElementAssignmentConflictInfo>.Current
			{
				[Token(Token = "0x6001220")]
				[Address(RVA = "0x7E0300", Offset = "0x7E0300", VA = "0x7E0300", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(ElementAssignmentConflictInfo);
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001222")]
				[Address(RVA = "0x7E0358", Offset = "0x7E0358", VA = "0x7E0358", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600121A")]
			[Address(RVA = "0x7DF774", Offset = "0x7DF774", VA = "0x7DF774")]
			[DebuggerHidden]
			public <ElementAssignmentConflicts>d__411(int <>1__state)
			{
			}

			[Token(Token = "0x600121B")]
			[Address(RVA = "0x7DF7A8", Offset = "0x7DF7A8", VA = "0x7DF7A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600121C")]
			[Address(RVA = "0x7DF7FC", Offset = "0x7DF7FC", VA = "0x7DF7FC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600121D")]
			[Address(RVA = "0x7E00F0", Offset = "0x7E00F0", VA = "0x7E00F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600121E")]
			[Address(RVA = "0x7E01A0", Offset = "0x7E01A0", VA = "0x7E01A0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600121F")]
			[Address(RVA = "0x7E0250", Offset = "0x7E0250", VA = "0x7E0250")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6001221")]
			[Address(RVA = "0x7E0318", Offset = "0x7E0318", VA = "0x7E0318", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001223")]
			[Address(RVA = "0x7E03C0", Offset = "0x7E03C0", VA = "0x7E03C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ElementAssignmentConflictInfo> System.Collections.Generic.IEnumerable<Rewired.ElementAssignmentConflictInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001224")]
			[Address(RVA = "0x7E04A8", Offset = "0x7E04A8", VA = "0x7E04A8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015DF")]
		public const int versionMajor = 1;

		[Token(Token = "0x40015E0")]
		public const int versionMinor = 1;

		[Token(Token = "0x40015E1")]
		public const bool usesTMPro = false;

		[Token(Token = "0x40015E2")]
		private const float blockInputOnFocusTimeout = 0.1f;

		[Token(Token = "0x40015E3")]
		private const string buttonIdentifier_playerSelection = "PlayerSelection";

		[Token(Token = "0x40015E4")]
		private const string buttonIdentifier_removeController = "RemoveController";

		[Token(Token = "0x40015E5")]
		private const string buttonIdentifier_assignController = "AssignController";

		[Token(Token = "0x40015E6")]
		private const string buttonIdentifier_calibrateController = "CalibrateController";

		[Token(Token = "0x40015E7")]
		private const string buttonIdentifier_editInputBehaviors = "EditInputBehaviors";

		[Token(Token = "0x40015E8")]
		private const string buttonIdentifier_mapCategorySelection = "MapCategorySelection";

		[Token(Token = "0x40015E9")]
		private const string buttonIdentifier_assignedControllerSelection = "AssignedControllerSelection";

		[Token(Token = "0x40015EA")]
		private const string buttonIdentifier_done = "Done";

		[Token(Token = "0x40015EB")]
		private const string buttonIdentifier_restoreDefaults = "RestoreDefaults";

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Must be assigned a Rewired Input Manager scene object or prefab.")]
		[SerializeField]
		private InputManager _rewiredInputManager;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("Set to True to prevent the Game Object from being destroyed when a new scene is loaded.\n\nNOTE: Changing this value from True to False at runtime will have no effect because Object.DontDestroyOnLoad cannot be undone once set.")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("Open the control mapping screen immediately on start. Mainly used for testing.")]
		[SerializeField]
		private bool _openOnStart;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("The Layout of the Keyboard Maps to be displayed.")]
		[SerializeField]
		private int _keyboardMapDefaultLayout;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The Layout of the Mouse Maps to be displayed.")]
		[SerializeField]
		private int _mouseMapDefaultLayout;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("The Layout of the Mouse Maps to be displayed.")]
		private int _joystickMapDefaultLayout;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MappingSet[] _mappingSets;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Display a selectable list of Players. If your game only supports 1 player, you can disable this.")]
		[SerializeField]
		private bool _showPlayers;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Tooltip("Display the Controller column for input mapping.")]
		[SerializeField]
		private bool _showControllers;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		[Tooltip("Display the Keyboard column for input mapping.")]
		private bool _showKeyboard;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		[Tooltip("Display the Mouse column for input mapping.")]
		private bool _showMouse;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("The maximum number of controllers allowed to be assigned to a Player. If set to any value other than 1, a selectable list of currently-assigned controller will be displayed to the user. [0 = infinite]")]
		[SerializeField]
		private int _maxControllersPerPlayer;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Display section labels for each Action Category in the input field grid. Only applies if Action Categories are used to display the Action list.")]
		[SerializeField]
		private bool _showActionCategoryLabels;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("The number of input fields to display for the keyboard. If you want to support alternate mappings on the same device, set this to 2 or more.")]
		[SerializeField]
		private int _keyboardInputFieldCount;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The number of input fields to display for the mouse. If you want to support alternate mappings on the same device, set this to 2 or more.")]
		[SerializeField]
		private int _mouseInputFieldCount;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The number of input fields to display for joysticks. If you want to support alternate mappings on the same device, set this to 2 or more.")]
		[SerializeField]
		private int _controllerInputFieldCount;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Tooltip("Display a full-axis input assignment field for every axis-type Action in the input field grid. Also displays an invert toggle for the user  to invert the full-axis assignment direction.\n\n*IMPORTANT*: This field is required if you have made any full-axis assignments in the Rewired Input Manager or in saved XML user data. Disabling this field when you have full-axis assignments will result in the inability for the user to view, remove, or modify these full-axis assignments. In addition, these assignments may cause conflicts when trying to remap the same axes to Actions.")]
		private bool _showFullAxisInputFields;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[Tooltip("Display a positive and negative input assignment field for every axis-type Action in the input field grid.\n\n*IMPORTANT*: These fields are required to assign buttons, keyboard keys, and hat or D-Pad directions to axis-type Actions. If you have made any split-axis assignments or button/key/D-pad assignments to axis-type Actions in the Rewired Input Manager or in saved XML user data, disabling these fields will result in the inability for the user to view, remove, or modify these assignments. In addition, these assignments may cause conflicts when trying to remap the same elements to Actions.")]
		private bool _showSplitAxisInputFields;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[Tooltip("If enabled, when an element assignment conflict is found, an option will be displayed that allows the user to make the conflicting assignment anyway.")]
		private bool _allowElementAssignmentConflicts;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[SerializeField]
		[Tooltip("If enabled, when an element assignment conflict is found, an option will be displayed that allows the user to swap conflicting assignments. This only applies to the first conflicting assignment found. This option will not be displayed if allowElementAssignmentConflicts is true.")]
		private bool _allowElementAssignmentSwap;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Tooltip("The width in relative pixels of the Action label column.")]
		private int _actionLabelWidth;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Tooltip("The width in relative pixels of the Keyboard column.")]
		private int _keyboardColMaxWidth;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[Tooltip("The width in relative pixels of the Mouse column.")]
		private int _mouseColMaxWidth;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Tooltip("The width in relative pixels of the Controller column.")]
		private int _controllerColMaxWidth;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Tooltip("The height in relative pixels of the input grid button rows.")]
		private int _inputRowHeight;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("The padding of the input grid button rows.")]
		[SerializeField]
		private RectOffset _inputRowPadding;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Tooltip("The width in relative pixels of spacing between input fields in a single column.")]
		private int _inputRowFieldSpacing;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[Tooltip("The width in relative pixels of spacing between columns.")]
		private int _inputColumnSpacing;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[Tooltip("The height in relative pixels of the space between Action Category sections. Only applicable if Show Action Category Labels is checked.")]
		private int _inputRowCategorySpacing;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[Tooltip("The width in relative pixels of the invert toggle buttons.")]
		private int _invertToggleWidth;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Tooltip("The width in relative pixels of generated popup windows.")]
		private int _defaultWindowWidth;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("The height in relative pixels of generated popup windows.")]
		[SerializeField]
		private int _defaultWindowHeight;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("The time in seconds the user has to press an element on a controller when assigning a controller to a Player. If this time elapses with no user input a controller, the assignment will be canceled.")]
		[SerializeField]
		private float _controllerAssignmentTimeout;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("The time in seconds the user has to press an element on a controller while waiting for axes to be centered before assigning input.")]
		[SerializeField]
		private float _preInputAssignmentTimeout;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[Tooltip("The time in seconds the user has to press an element on a controller when assigning input. If this time elapses with no user input on the target controller, the assignment will be canceled.")]
		private float _inputAssignmentTimeout;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Tooltip("The time in seconds the user has to press an element on a controller during calibration.")]
		[SerializeField]
		private float _axisCalibrationTimeout;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("If checked, mouse X-axis movement will always be ignored during input assignment. Check this if you don't want the horizontal mouse axis to be user-assignable to any Actions.")]
		[SerializeField]
		private bool _ignoreMouseXAxisAssignment;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[Tooltip("If checked, mouse Y-axis movement will always be ignored during input assignment. Check this if you don't want the vertical mouse axis to be user-assignable to any Actions.")]
		[SerializeField]
		private bool _ignoreMouseYAxisAssignment;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Tooltip("An Action that when activated will alternately close or open the main screen as long as no popup windows are open.")]
		[SerializeField]
		private int _screenToggleAction;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("An Action that when activated will open the main screen if it is closed.")]
		[SerializeField]
		private int _screenOpenAction;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("An Action that when activated will close the main screen as long as no popup windows are open.")]
		[SerializeField]
		private int _screenCloseAction;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Tooltip("An Action that when activated will cancel and close any open popup window. Use with care because the element assigned to this Action can never be mapped by the user (because it would just cancel his assignment).")]
		private int _universalCancelAction;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[Tooltip("If enabled, Universal Cancel will also close the main screen if pressed when no windows are open.")]
		private bool _universalCancelClosesScreen;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		[Tooltip("If checked, controls will be displayed which will allow the user to customize certain Input Behavior settings.")]
		private bool _showInputBehaviorSettings;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Tooltip("Customizable settings for user-modifiable Input Behaviors. This can be used for settings like Mouse Look Sensitivity.")]
		[SerializeField]
		private InputBehaviorSettings[] _inputBehaviorSettings;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Tooltip("If enabled, UI elements will be themed based on the settings in Theme Settings.")]
		private bool _useThemeSettings;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[Tooltip("Must be assigned a ThemeSettings object. Used to theme UI elements.")]
		private ThemeSettings _themeSettings;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[Tooltip("Must be assigned a LanguageData object. Used to retrieve language entries for UI elements.")]
		private LanguageDataBase _language;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Tooltip("A list of prefabs. You should not have to modify this.")]
		private Prefabs prefabs;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[Tooltip("A list of references to elements in the hierarchy. You should not have to modify this.")]
		private References references;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[Tooltip("Show the label for the Players button group?")]
		private bool _showPlayersGroupLabel;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		[Tooltip("Show the label for the Controller button group?")]
		private bool _showControllerGroupLabel;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[SerializeField]
		[Tooltip("Show the label for the Assigned Controllers button group?")]
		private bool _showAssignedControllersGroupLabel;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		[SerializeField]
		[Tooltip("Show the label for the Settings button group?")]
		private bool _showSettingsGroupLabel;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[Tooltip("Show the label for the Map Categories button group?")]
		private bool _showMapCategoriesGroupLabel;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[SerializeField]
		[Tooltip("Show the label for the current controller name?")]
		private bool _showControllerNameLabel;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[Tooltip("Show the Assigned Controllers group? If joystick auto-assignment is enabled in the Rewired Input Manager and the max joysticks per player is set to any value other than 1, the Assigned Controllers group will always be displayed.")]
		[SerializeField]
		private bool _showAssignedControllers;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Action _ScreenClosedEvent;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Action _ScreenOpenedEvent;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Action _PopupWindowOpenedEvent;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Action _PopupWindowClosedEvent;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Action _InputPollingStartedEvent;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Action _InputPollingEndedEvent;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[Tooltip("Event sent when the UI is closed.")]
		private UnityEvent _onScreenClosed;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[Tooltip("Event sent when the UI is opened.")]
		private UnityEvent _onScreenOpened;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Tooltip("Event sent when a popup window is closed.")]
		[SerializeField]
		private UnityEvent _onPopupWindowClosed;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Tooltip("Event sent when a popup window is opened.")]
		[SerializeField]
		private UnityEvent _onPopupWindowOpened;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Tooltip("Event sent when polling for input has started.")]
		[SerializeField]
		private UnityEvent _onInputPollingStarted;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[Tooltip("Event sent when polling for input has ended.")]
		private UnityEvent _onInputPollingEnded;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ControlMapper Instance;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool initialized;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int playerCount;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputGrid inputGrid;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WindowManager windowManager;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int currentPlayerId;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int currentMapCategoryId;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<GUIButton> playerButtons;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<GUIButton> mapCategoryButtons;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<GUIButton> assignedControllerButtons;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GUIButton assignedControllerButtonsPlaceholder;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<GameObject> miscInstantiatedObjects;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject canvas;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject lastUISelection;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int currentJoystickId;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float blockInputOnFocusEndTime;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool isPollingForInput;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private InputMapping pendingInputMapping;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AxisCalibrator pendingAxisCalibration;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Action<InputFieldInfo> inputFieldActivatedDelegate;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Action<ToggleInfo, bool> inputFieldInvertToggleStateChangedDelegate;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Action _restoreDefaultsDelegate;

		[Token(Token = "0x170002C5")]
		public InputManager rewiredInputManager
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x7C4258", Offset = "0x7C4258", VA = "0x7C4258")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x7C4260", Offset = "0x7C4260", VA = "0x7C4260")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public bool dontDestroyOnLoad
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x7C4288", Offset = "0x7C4288", VA = "0x7C4288")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x7C4290", Offset = "0x7C4290", VA = "0x7C4290")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public int keyboardMapDefaultLayout
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0x7C4334", Offset = "0x7C4334", VA = "0x7C4334")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x7C433C", Offset = "0x7C433C", VA = "0x7C433C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public int mouseMapDefaultLayout
		{
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x7C4344", Offset = "0x7C4344", VA = "0x7C4344")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x7C434C", Offset = "0x7C434C", VA = "0x7C434C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public int joystickMapDefaultLayout
		{
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x7C4354", Offset = "0x7C4354", VA = "0x7C4354")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x7C435C", Offset = "0x7C435C", VA = "0x7C435C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public bool showPlayers
		{
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x7C4364", Offset = "0x7C4364", VA = "0x7C4364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x7C43E4", Offset = "0x7C43E4", VA = "0x7C43E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public bool showControllers
		{
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x7C43F0", Offset = "0x7C43F0", VA = "0x7C43F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x7C43F8", Offset = "0x7C43F8", VA = "0x7C43F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public bool showKeyboard
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x7C4404", Offset = "0x7C4404", VA = "0x7C4404")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x7C440C", Offset = "0x7C440C", VA = "0x7C440C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public bool showMouse
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x7C4418", Offset = "0x7C4418", VA = "0x7C4418")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x7C4420", Offset = "0x7C4420", VA = "0x7C4420")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public int maxControllersPerPlayer
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x7C442C", Offset = "0x7C442C", VA = "0x7C442C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x7C4434", Offset = "0x7C4434", VA = "0x7C4434")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public bool showActionCategoryLabels
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x7C443C", Offset = "0x7C443C", VA = "0x7C443C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x7C4444", Offset = "0x7C4444", VA = "0x7C4444")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public int keyboardInputFieldCount
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x7C4450", Offset = "0x7C4450", VA = "0x7C4450")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x7C4458", Offset = "0x7C4458", VA = "0x7C4458")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public int mouseInputFieldCount
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x7C4460", Offset = "0x7C4460", VA = "0x7C4460")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x7C4468", Offset = "0x7C4468", VA = "0x7C4468")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public int controllerInputFieldCount
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x7C4470", Offset = "0x7C4470", VA = "0x7C4470")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x7C4478", Offset = "0x7C4478", VA = "0x7C4478")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public bool showFullAxisInputFields
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x7C4480", Offset = "0x7C4480", VA = "0x7C4480")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x7C4488", Offset = "0x7C4488", VA = "0x7C4488")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public bool showSplitAxisInputFields
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x7C4494", Offset = "0x7C4494", VA = "0x7C4494")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x7C449C", Offset = "0x7C449C", VA = "0x7C449C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public bool allowElementAssignmentConflicts
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x7C44A8", Offset = "0x7C44A8", VA = "0x7C44A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x7C44B0", Offset = "0x7C44B0", VA = "0x7C44B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public bool allowElementAssignmentSwap
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x7C44BC", Offset = "0x7C44BC", VA = "0x7C44BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x7C44C4", Offset = "0x7C44C4", VA = "0x7C44C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public int actionLabelWidth
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x7C44D0", Offset = "0x7C44D0", VA = "0x7C44D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x7C44D8", Offset = "0x7C44D8", VA = "0x7C44D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public int keyboardColMaxWidth
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x7C44E0", Offset = "0x7C44E0", VA = "0x7C44E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x7C44E8", Offset = "0x7C44E8", VA = "0x7C44E8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public int mouseColMaxWidth
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x7C44F0", Offset = "0x7C44F0", VA = "0x7C44F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x7C44F8", Offset = "0x7C44F8", VA = "0x7C44F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public int controllerColMaxWidth
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x7C4500", Offset = "0x7C4500", VA = "0x7C4500")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x7C4508", Offset = "0x7C4508", VA = "0x7C4508")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public int inputRowHeight
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x7C4510", Offset = "0x7C4510", VA = "0x7C4510")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x7C4518", Offset = "0x7C4518", VA = "0x7C4518")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public int inputColumnSpacing
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0x7C4520", Offset = "0x7C4520", VA = "0x7C4520")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x7C4528", Offset = "0x7C4528", VA = "0x7C4528")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public int inputRowCategorySpacing
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x7C4530", Offset = "0x7C4530", VA = "0x7C4530")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x7C4538", Offset = "0x7C4538", VA = "0x7C4538")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public int invertToggleWidth
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x7C4540", Offset = "0x7C4540", VA = "0x7C4540")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x7C4548", Offset = "0x7C4548", VA = "0x7C4548")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public int defaultWindowWidth
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x7C4550", Offset = "0x7C4550", VA = "0x7C4550")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x7C4558", Offset = "0x7C4558", VA = "0x7C4558")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public int defaultWindowHeight
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x7C4560", Offset = "0x7C4560", VA = "0x7C4560")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x7C4568", Offset = "0x7C4568", VA = "0x7C4568")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public float controllerAssignmentTimeout
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x7C4570", Offset = "0x7C4570", VA = "0x7C4570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x7C4578", Offset = "0x7C4578", VA = "0x7C4578")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public float preInputAssignmentTimeout
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x7C4580", Offset = "0x7C4580", VA = "0x7C4580")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x7C4588", Offset = "0x7C4588", VA = "0x7C4588")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public float inputAssignmentTimeout
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x7C4590", Offset = "0x7C4590", VA = "0x7C4590")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x7C4598", Offset = "0x7C4598", VA = "0x7C4598")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public float axisCalibrationTimeout
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x7C45A0", Offset = "0x7C45A0", VA = "0x7C45A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x7C45A8", Offset = "0x7C45A8", VA = "0x7C45A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public bool ignoreMouseXAxisAssignment
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x7C45B0", Offset = "0x7C45B0", VA = "0x7C45B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x7C45B8", Offset = "0x7C45B8", VA = "0x7C45B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public bool ignoreMouseYAxisAssignment
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x7C45C4", Offset = "0x7C45C4", VA = "0x7C45C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x7C45CC", Offset = "0x7C45CC", VA = "0x7C45CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public bool universalCancelClosesScreen
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x7C45D8", Offset = "0x7C45D8", VA = "0x7C45D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x7C45E0", Offset = "0x7C45E0", VA = "0x7C45E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public bool showInputBehaviorSettings
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x7C45EC", Offset = "0x7C45EC", VA = "0x7C45EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x7C45F4", Offset = "0x7C45F4", VA = "0x7C45F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public bool useThemeSettings
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x7C4600", Offset = "0x7C4600", VA = "0x7C4600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x7C4608", Offset = "0x7C4608", VA = "0x7C4608")]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public LanguageDataBase language
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x7C4614", Offset = "0x7C4614", VA = "0x7C4614")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x7C461C", Offset = "0x7C461C", VA = "0x7C461C")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public bool showPlayersGroupLabel
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x7C46C0", Offset = "0x7C46C0", VA = "0x7C46C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x7C46C8", Offset = "0x7C46C8", VA = "0x7C46C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public bool showControllerGroupLabel
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x7C46D4", Offset = "0x7C46D4", VA = "0x7C46D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x7C46DC", Offset = "0x7C46DC", VA = "0x7C46DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public bool showAssignedControllersGroupLabel
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x7C46E8", Offset = "0x7C46E8", VA = "0x7C46E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x7C46F0", Offset = "0x7C46F0", VA = "0x7C46F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public bool showSettingsGroupLabel
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x7C46FC", Offset = "0x7C46FC", VA = "0x7C46FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x7C4704", Offset = "0x7C4704", VA = "0x7C4704")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public bool showMapCategoriesGroupLabel
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x7C4710", Offset = "0x7C4710", VA = "0x7C4710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x7C4718", Offset = "0x7C4718", VA = "0x7C4718")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public bool showControllerNameLabel
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x7C4724", Offset = "0x7C4724", VA = "0x7C4724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x7C472C", Offset = "0x7C472C", VA = "0x7C472C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public bool showAssignedControllers
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x7C4738", Offset = "0x7C4738", VA = "0x7C4738")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x7C4740", Offset = "0x7C4740", VA = "0x7C4740")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public Action restoreDefaultsDelegate
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x7C474C", Offset = "0x7C474C", VA = "0x7C474C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x7C4754", Offset = "0x7C4754", VA = "0x7C4754")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public bool isOpen
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x7C4764", Offset = "0x7C4764", VA = "0x7C4764")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F4")]
		private bool isFocused
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x7C481C", Offset = "0x7C481C", VA = "0x7C481C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		private bool inputAllowed
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x7C484C", Offset = "0x7C484C", VA = "0x7C484C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F6")]
		private int inputGridColumnCount
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x7C4874", Offset = "0x7C4874", VA = "0x7C4874")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F7")]
		private int inputGridWidth
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x7C4898", Offset = "0x7C4898", VA = "0x7C4898")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F8")]
		private Player currentPlayer
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x7C48FC", Offset = "0x7C48FC", VA = "0x7C48FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		private InputCategory currentMapCategory
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x7C4964", Offset = "0x7C4964", VA = "0x7C4964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private MappingSet currentMappingSet
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x7C49CC", Offset = "0x7C49CC", VA = "0x7C49CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		private Joystick currentJoystick
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x7C4A30", Offset = "0x7C4A30", VA = "0x7C4A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private bool isJoystickSelected
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x7C4A98", Offset = "0x7C4A98", VA = "0x7C4A98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		private GameObject currentUISelection
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x7C4AA8", Offset = "0x7C4AA8", VA = "0x7C4AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private bool showSettings
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x7C4B68", Offset = "0x7C4B68", VA = "0x7C4B68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FF")]
		private bool showMapCategories
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x7C4B9C", Offset = "0x7C4B9C", VA = "0x7C4B9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000008")]
		public event Action ScreenClosedEvent
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x7C3A30", Offset = "0x7C3A30", VA = "0x7C3A30")]
			add
			{
			}
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x7C3AC0", Offset = "0x7C3AC0", VA = "0x7C3AC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action ScreenOpenedEvent
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x7C3B50", Offset = "0x7C3B50", VA = "0x7C3B50")]
			add
			{
			}
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x7C3BE0", Offset = "0x7C3BE0", VA = "0x7C3BE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action PopupWindowClosedEvent
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x7C3C70", Offset = "0x7C3C70", VA = "0x7C3C70")]
			add
			{
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x7C3D04", Offset = "0x7C3D04", VA = "0x7C3D04")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action PopupWindowOpenedEvent
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x7C3D98", Offset = "0x7C3D98", VA = "0x7C3D98")]
			add
			{
			}
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x7C3E28", Offset = "0x7C3E28", VA = "0x7C3E28")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action InputPollingStartedEvent
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x7C3EB8", Offset = "0x7C3EB8", VA = "0x7C3EB8")]
			add
			{
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x7C3F4C", Offset = "0x7C3F4C", VA = "0x7C3F4C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action InputPollingEndedEvent
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x7C3FE0", Offset = "0x7C3FE0", VA = "0x7C3FE0")]
			add
			{
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x7C4074", Offset = "0x7C4074", VA = "0x7C4074")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event UnityAction onScreenClosed
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x7C4108", Offset = "0x7C4108", VA = "0x7C4108")]
			add
			{
			}
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x7C4124", Offset = "0x7C4124", VA = "0x7C4124")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event UnityAction onScreenOpened
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x7C4140", Offset = "0x7C4140", VA = "0x7C4140")]
			add
			{
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x7C415C", Offset = "0x7C415C", VA = "0x7C415C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event UnityAction onPopupWindowClosed
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x7C4178", Offset = "0x7C4178", VA = "0x7C4178")]
			add
			{
			}
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x7C4194", Offset = "0x7C4194", VA = "0x7C4194")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event UnityAction onPopupWindowOpened
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x7C41B0", Offset = "0x7C41B0", VA = "0x7C41B0")]
			add
			{
			}
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0x7C41CC", Offset = "0x7C41CC", VA = "0x7C41CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event UnityAction onInputPollingStarted
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x7C41E8", Offset = "0x7C41E8", VA = "0x7C41E8")]
			add
			{
			}
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0x7C4204", Offset = "0x7C4204", VA = "0x7C4204")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event UnityAction onInputPollingEnded
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x7C4220", Offset = "0x7C4220", VA = "0x7C4220")]
			add
			{
			}
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x7C423C", Offset = "0x7C423C", VA = "0x7C423C")]
			remove
			{
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x7C4BBC", Offset = "0x7C4BBC", VA = "0x7C4BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x7C56A4", Offset = "0x7C56A4", VA = "0x7C56A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x7C56B8", Offset = "0x7C56B8", VA = "0x7C56B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x7C5770", Offset = "0x7C5770", VA = "0x7C5770")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x7C4C74", Offset = "0x7C4C74", VA = "0x7C4C74")]
		private void PreInitialize()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x7C4D54", Offset = "0x7C4D54", VA = "0x7C4D54")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x7C5F30", Offset = "0x7C5F30", VA = "0x7C5F30")]
		private void OnJoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x7C5F9C", Offset = "0x7C5F9C", VA = "0x7C5F9C")]
		private void OnJoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x7C5FBC", Offset = "0x7C5FBC", VA = "0x7C5FBC")]
		private void OnJoystickPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x7C5FC0", Offset = "0x7C5FC0", VA = "0x7C5FC0")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x7C6D90", Offset = "0x7C6D90", VA = "0x7C6D90")]
		public void OnInputFieldActivated(InputFieldInfo fieldInfo)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x7C7620", Offset = "0x7C7620", VA = "0x7C7620")]
		public void OnInputFieldInvertToggleStateChanged(ToggleInfo toggleInfo, bool newState)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x7C6338", Offset = "0x7C6338", VA = "0x7C6338")]
		private void OnPlayerSelected(int playerId, bool redraw)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x7C6360", Offset = "0x7C6360", VA = "0x7C6360")]
		private void OnControllerSelected(int joystickId)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x7C6380", Offset = "0x7C6380", VA = "0x7C6380")]
		private void OnRemoveCurrentController()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x7C6C04", Offset = "0x7C6C04", VA = "0x7C6C04")]
		private void OnMapCategorySelected(int id, bool redraw)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x7C6D80", Offset = "0x7C6D80", VA = "0x7C6D80")]
		private void OnRestoreDefaults()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x7C7AE4", Offset = "0x7C7AE4", VA = "0x7C7AE4")]
		private void OnScreenToggleActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x7C7B38", Offset = "0x7C7B38", VA = "0x7C7B38")]
		private void OnScreenOpenActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x7C7B40", Offset = "0x7C7B40", VA = "0x7C7B40")]
		private void OnScreenCloseActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x7C7B7C", Offset = "0x7C7B7C", VA = "0x7C7B7C")]
		private void OnUniversalCancelActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x7C7C2C", Offset = "0x7C7C2C", VA = "0x7C7C2C")]
		private void OnWindowCancel(int windowId)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x7C7C98", Offset = "0x7C7C98", VA = "0x7C7C98")]
		private void OnRemoveElementAssignment(int windowId, ControllerMap map, ActionElementMap aem)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x7C7CE0", Offset = "0x7C7CE0", VA = "0x7C7CE0")]
		private void OnBeginElementAssignment(InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x7C827C", Offset = "0x7C827C", VA = "0x7C827C")]
		private void OnControllerAssignmentConfirmed(int windowId, Player player, int controllerId)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x7C872C", Offset = "0x7C872C", VA = "0x7C872C")]
		private void OnMouseAssignmentConfirmed(int windowId, Player player)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x7C8958", Offset = "0x7C8958", VA = "0x7C8958")]
		private void OnElementAssignmentConflictReplaceConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers, bool allowSwap)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x7C95DC", Offset = "0x7C95DC", VA = "0x7C95DC")]
		private void OnElementAssignmentAddConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x7C9660", Offset = "0x7C9660", VA = "0x7C9660")]
		private void OnRestoreDefaultsConfirmed(int windowId)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x7C988C", Offset = "0x7C988C", VA = "0x7C988C")]
		private void OnAssignControllerWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x7CA2CC", Offset = "0x7CA2CC", VA = "0x7CA2CC")]
		private void OnElementAssignmentPrePollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x7CA528", Offset = "0x7CA528", VA = "0x7CA528")]
		private void OnJoystickElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x7CB254", Offset = "0x7CB254", VA = "0x7CB254")]
		private void OnKeyboardElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x7CBB38", Offset = "0x7CBB38", VA = "0x7CBB38")]
		private void OnMouseElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x7CC244", Offset = "0x7CC244", VA = "0x7CC244")]
		private void OnCalibrateAxisStep1WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x7CC858", Offset = "0x7CC858", VA = "0x7CC858")]
		private void OnCalibrateAxisStep2WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x7C63D0", Offset = "0x7C63D0", VA = "0x7C63D0")]
		private void ShowAssignControllerWindow()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x7C9B40", Offset = "0x7C9B40", VA = "0x7C9B40")]
		private void ShowControllerAssignmentConflictWindow(int controllerId)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x7C6FE4", Offset = "0x7C6FE4", VA = "0x7C6FE4")]
		private void ShowBeginElementAssignmentReplacementWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x7C759C", Offset = "0x7C759C", VA = "0x7C759C")]
		private void ShowCreateNewElementAssignmentWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, string actionName)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x7C7E5C", Offset = "0x7C7E5C", VA = "0x7C7E5C")]
		private void ShowElementAssignmentPrePollingWindow()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x7C81BC", Offset = "0x7C81BC", VA = "0x7C81BC")]
		private void ShowElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x7CCA7C", Offset = "0x7CCA7C", VA = "0x7CCA7C")]
		private void ShowJoystickElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x7CCD9C", Offset = "0x7CCD9C", VA = "0x7CCD9C")]
		private void ShowKeyboardElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x7CD0F4", Offset = "0x7CD0F4", VA = "0x7CD0F4")]
		private void ShowMouseElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x7CAACC", Offset = "0x7CAACC", VA = "0x7CAACC")]
		private void ShowElementAssignmentConflictWindow(ElementAssignment assignment, bool skipOtherPlayers)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x7CD414", Offset = "0x7CD414", VA = "0x7CD414")]
		private void ShowMouseAssignmentConflictWindow()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x7C66F0", Offset = "0x7C66F0", VA = "0x7C66F0")]
		private void ShowCalibrateControllerWindow()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x7CEE34", Offset = "0x7CEE34", VA = "0x7CEE34")]
		private void ShowCalibrateAxisStep1Window()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x7CC3D0", Offset = "0x7CC3D0", VA = "0x7CC3D0")]
		private void ShowCalibrateAxisStep2Window()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x7C69A8", Offset = "0x7C69A8", VA = "0x7C69A8")]
		private void ShowEditInputBehaviorsWindow()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x7C7990", Offset = "0x7C7990", VA = "0x7C7990")]
		private void ShowRestoreDefaultsWindow()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x7C5B84", Offset = "0x7C5B84", VA = "0x7C5B84")]
		private void CreateInputGrid()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x7CF6B4", Offset = "0x7CF6B4", VA = "0x7CF6B4")]
		private void InitializeInputGrid()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x7D13A0", Offset = "0x7D13A0", VA = "0x7D13A0")]
		private void RefreshInputGridStructure()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x7CFF90", Offset = "0x7CFF90", VA = "0x7CFF90")]
		private void CreateHeaderLabels()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x7D0324", Offset = "0x7D0324", VA = "0x7D0324")]
		private void CreateActionLabelColumn()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x7D03A4", Offset = "0x7D03A4", VA = "0x7D03A4")]
		private void CreateKeyboardInputFieldColumn()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x7D040C", Offset = "0x7D040C", VA = "0x7D040C")]
		private void CreateMouseInputFieldColumn()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x7D0474", Offset = "0x7D0474", VA = "0x7D0474")]
		private void CreateControllerInputFieldColumn()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x7D1750", Offset = "0x7D1750", VA = "0x7D1750")]
		private void CreateInputFieldColumn(string name, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x7D04DC", Offset = "0x7D04DC", VA = "0x7D04DC")]
		private void CreateInputActionLabels()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x7D122C", Offset = "0x7D122C", VA = "0x7D122C")]
		private void CreateInputFields()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x7D1834", Offset = "0x7D1834", VA = "0x7D1834")]
		private void CreateInputFields(Transform columnXform, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x7D2184", Offset = "0x7D2184", VA = "0x7D2184")]
		private void CreateInputFieldSet(Transform parent, int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int cols, int fieldWidth, ref int yPos, bool disableFullAxis)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x7D2844", Offset = "0x7D2844", VA = "0x7D2844")]
		private void PopulateInputFields()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x7D2D90", Offset = "0x7D2D90", VA = "0x7D2D90")]
		private void PopulateInputFieldGroup(InputActionSet actionSet, ControllerMap controllerMap, ControllerType controllerType, int controllerId, int maxFields)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x7D339C", Offset = "0x7D339C", VA = "0x7D339C")]
		private void DisableInputFieldGroup(InputActionSet actionSet, ControllerType controllerType, int fieldCount)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x7D12C8", Offset = "0x7D12C8", VA = "0x7D12C8")]
		private void ResetInputGridScrollBar()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x7C5BE8", Offset = "0x7C5BE8", VA = "0x7C5BE8")]
		private void CreateLayout()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x7C5B54", Offset = "0x7C5B54", VA = "0x7C5B54")]
		private void Draw()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x7D3458", Offset = "0x7D3458", VA = "0x7D3458")]
		private void DrawPlayersGroup()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x7D3804", Offset = "0x7D3804", VA = "0x7D3804")]
		private void DrawControllersGroup()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x7D3B44", Offset = "0x7D3B44", VA = "0x7D3B44")]
		private void DrawSettingsGroup()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x7D3DE4", Offset = "0x7D3DE4", VA = "0x7D3DE4")]
		private void DrawMapCategoriesGroup()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x7D415C", Offset = "0x7D415C", VA = "0x7D415C")]
		private void DrawWindowButtonsGroup()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x7C7758", Offset = "0x7C7758", VA = "0x7C7758")]
		private void Redraw(bool listsChanged, bool playTransitions)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x7D430C", Offset = "0x7D430C", VA = "0x7D430C")]
		private void RedrawPlayerGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x7D43FC", Offset = "0x7D43FC", VA = "0x7D43FC")]
		private void RedrawControllerGroup()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x7D511C", Offset = "0x7D511C", VA = "0x7D511C")]
		private void RedrawMapCategoriesGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x7D5214", Offset = "0x7D5214", VA = "0x7D5214")]
		private void RedrawInputGrid(bool listsChanged)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x7C5F5C", Offset = "0x7C5F5C", VA = "0x7C5F5C")]
		private void ForceRefresh()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x7D53E8", Offset = "0x7D53E8", VA = "0x7D53E8")]
		private void CreateInputCategoryRow(ref int rowCount, InputCategory category)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x7D1810", Offset = "0x7D1810", VA = "0x7D1810")]
		private GUILabel CreateLabel(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x7D15B4", Offset = "0x7D15B4", VA = "0x7D15B4")]
		private GUILabel CreateLabel(GameObject prefab, string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x7D424C", Offset = "0x7D424C", VA = "0x7D424C")]
		private GUIButton CreateButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x7D5580", Offset = "0x7D5580", VA = "0x7D5580")]
		private GUIButton CreateFitButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x7D25D4", Offset = "0x7D25D4", VA = "0x7D25D4")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x7D5640", Offset = "0x7D5640", VA = "0x7D5640")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x7D2718", Offset = "0x7D2718", VA = "0x7D2718")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x7D56E0", Offset = "0x7D56E0", VA = "0x7D56E0")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x7D5464", Offset = "0x7D5464", VA = "0x7D5464")]
		private GameObject InstantiateGUIObject(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x7D251C", Offset = "0x7D251C", VA = "0x7D251C")]
		private GameObject CreateNewGUIObject(string name, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x7D5784", Offset = "0x7D5784", VA = "0x7D5784")]
		private GameObject InitializeNewGUIGameObject(GameObject gameObject, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x7D1480", Offset = "0x7D1480", VA = "0x7D1480")]
		private GameObject CreateNewColumnGroup(string name, Transform parent, int maxWidth)
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x7CCA1C", Offset = "0x7CCA1C", VA = "0x7CCA1C")]
		private Window OpenWindow(bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x7D5934", Offset = "0x7D5934", VA = "0x7D5934")]
		private Window OpenWindow(string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x7D5A54", Offset = "0x7D5A54", VA = "0x7D5A54")]
		private Window OpenWindow(GameObject windowPrefab, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x7CED70", Offset = "0x7CED70", VA = "0x7CED70")]
		private Window OpenWindow(GameObject windowPrefab, string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x7CF2BC", Offset = "0x7CF2BC", VA = "0x7CF2BC")]
		private void OpenModal(string title, string message, string confirmText, Action<int> confirmAction, string cancelText, Action<int> cancelAction, bool closeOthers)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x7C7C40", Offset = "0x7C7C40", VA = "0x7C7C40")]
		private void CloseWindow(int windowId)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x7D5B1C", Offset = "0x7D5B1C", VA = "0x7D5B1C")]
		private void CloseTopWindow()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x7C7BE0", Offset = "0x7C7BE0", VA = "0x7C7BE0")]
		private void CloseAllWindows()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x7D59F4", Offset = "0x7D59F4", VA = "0x7D59F4")]
		private void ChildWindowOpened()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x7D5ABC", Offset = "0x7D5ABC", VA = "0x7D5ABC")]
		private void ChildWindowClosed()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x7CA8F0", Offset = "0x7CA8F0", VA = "0x7CA8F0")]
		private bool HasElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x7CDB10", Offset = "0x7CDB10", VA = "0x7CDB10")]
		private bool IsBlockingAssignmentConflict(InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x7D5BD0", Offset = "0x7D5BD0", VA = "0x7D5BD0")]
		[IteratorStateMachine(typeof(<ElementAssignmentConflicts>d__411))]
		private IEnumerable<ElementAssignmentConflictInfo> ElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return null;
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x7C91CC", Offset = "0x7C91CC", VA = "0x7C91CC")]
		private bool CreateConflictCheck(InputMapping mapping, ElementAssignment assignment, out ElementAssignmentConflictCheck conflictCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x7CB554", Offset = "0x7CB554", VA = "0x7CB554")]
		private void PollKeyboardForAssignment(out ControllerPollingInfo pollingInfo, out bool modifierKeyPressed, out ModifierKeyFlags modifierFlags, out string label)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x7C92BC", Offset = "0x7C92BC", VA = "0x7C92BC")]
		private bool GetFirstElementAssignmentConflict(ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x7D5CA0", Offset = "0x7D5CA0", VA = "0x7D5CA0")]
		private bool GetFirstElementAssignmentConflict(Player player, ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x7D6044", Offset = "0x7D6044", VA = "0x7D6044")]
		private void StartAxisCalibration(int axisIndex)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x7CC9E4", Offset = "0x7CC9E4", VA = "0x7CC9E4")]
		private void EndAxisCalibration()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x7D52DC", Offset = "0x7D52DC", VA = "0x7D52DC")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x7D5248", Offset = "0x7D5248", VA = "0x7D5248")]
		private void RestoreLastUISelection()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x7D612C", Offset = "0x7D612C", VA = "0x7D612C")]
		private void SetDefaultUISelection()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x7D61D8", Offset = "0x7D61D8", VA = "0x7D61D8")]
		private void SelectDefaultMapCategory(bool redraw)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x7C56E4", Offset = "0x7C56E4", VA = "0x7C56E4")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x7D6490", Offset = "0x7D6490", VA = "0x7D6490")]
		private void OnUIElementSelected(GameObject selectedObject)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x7D5B60", Offset = "0x7D5B60", VA = "0x7D5B60")]
		private void SetIsFocused(bool state)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x7D64A0", Offset = "0x7D64A0", VA = "0x7D64A0")]
		public void Toggle()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x7C7B30", Offset = "0x7C7B30", VA = "0x7C7B30")]
		public void Open()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x7C55D8", Offset = "0x7C55D8", VA = "0x7C55D8")]
		private void Open(bool force)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x7C6C24", Offset = "0x7C6C24", VA = "0x7C6C24")]
		public void Close(bool save)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x7D64D0", Offset = "0x7D64D0", VA = "0x7D64D0")]
		private void Clear()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x7D6528", Offset = "0x7D6528", VA = "0x7D6528")]
		private void ClearCompletely()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x7D6540", Offset = "0x7D6540", VA = "0x7D6540")]
		private void ClearSpawnedObjects()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x7C774C", Offset = "0x7C774C", VA = "0x7C774C")]
		private void ClearVarsOnPlayerChange()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x7C5F50", Offset = "0x7C5F50", VA = "0x7C5F50")]
		private void ClearVarsOnJoystickChange()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x7D6A8C", Offset = "0x7D6A8C", VA = "0x7D6A8C")]
		private void ClearAllVars()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x7D6BB4", Offset = "0x7D6BB4", VA = "0x7D6BB4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x7C7688", Offset = "0x7C7688", VA = "0x7C7688")]
		private void SetActionAxisInverted(bool state, ControllerType controllerType, int actionElementMapId)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x7C6EFC", Offset = "0x7C6EFC", VA = "0x7C6EFC")]
		private ControllerMap GetControllerMap(ControllerType type)
		{
			return null;
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x7D2CE4", Offset = "0x7D2CE4", VA = "0x7D2CE4")]
		private ControllerMap GetControllerMapOrCreateNew(ControllerType controllerType, int controllerId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x60010E1")]
		private int CountIEnumerable<T>(IEnumerable<T> enumerable)
		{
			return default(int);
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x7D6390", Offset = "0x7D6390", VA = "0x7D6390")]
		private int GetDefaultMapCategoryId()
		{
			return default(int);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x7C5DB8", Offset = "0x7C5DB8", VA = "0x7C5DB8")]
		private void SubscribeFixedUISelectionEvents()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x7C59FC", Offset = "0x7C59FC", VA = "0x7C59FC")]
		private void SubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x7C58A4", Offset = "0x7C58A4", VA = "0x7C58A4")]
		private void UnsubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x7D6BFC", Offset = "0x7D6BFC", VA = "0x7D6BFC")]
		private void SubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x7D6FEC", Offset = "0x7D6FEC", VA = "0x7D6FEC")]
		private void UnsubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x7D53A8", Offset = "0x7D53A8", VA = "0x7D53A8")]
		private int GetMaxControllersPerPlayer()
		{
			return default(int);
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x7D3420", Offset = "0x7D3420", VA = "0x7D3420")]
		private bool ShowAssignedControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x7C427C", Offset = "0x7C427C", VA = "0x7C427C")]
		private void InspectorPropertyChanged(bool reset = false)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x7C82BC", Offset = "0x7C82BC", VA = "0x7C82BC")]
		private void AssignController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x7D7428", Offset = "0x7D7428", VA = "0x7D7428")]
		private void RemoveAllControllers(Player player)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x7C7834", Offset = "0x7C7834", VA = "0x7C7834")]
		private void RemoveController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x7CA8A0", Offset = "0x7CA8A0", VA = "0x7CA8A0")]
		private bool IsAllowedAssignment(InputMapping pendingInputMapping, ControllerPollingInfo pollingInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x7C9AAC", Offset = "0x7C9AAC", VA = "0x7C9AAC")]
		private void InputPollingStarted()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x7C9AF8", Offset = "0x7C9AF8", VA = "0x7C9AF8")]
		private void InputPollingStopped()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x7C9568", Offset = "0x7C9568", VA = "0x7C9568")]
		private int GetControllerInputFieldCount(ControllerType controllerType)
		{
			return default(int);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x7CE4B4", Offset = "0x7CE4B4", VA = "0x7CE4B4")]
		private bool ShowSwapButton(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x7C9520", Offset = "0x7C9520", VA = "0x7C9520")]
		private bool SwapIsSameInputRange(ControllerElementType origElementType, AxisRange origAxisRange, Pole origAxisContribution, ControllerElementType conflictElementType, AxisRange conflictAxisRange, Pole conflictAxisContribution)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x7D7578", Offset = "0x7D7578", VA = "0x7D7578")]
		public static void ApplyTheme(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x7C1DC4", Offset = "0x7C1DC4", VA = "0x7C1DC4")]
		public static LanguageDataBase GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x7D7678", Offset = "0x7D7678", VA = "0x7D7678")]
		public ControlMapper()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[AddComponentMenu("")]
	public class CustomButton : Button, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x200029E")]
		[CompilerGenerated]
		private sealed class <OnFinishSubmit>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButton <>4__this;

			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fadeTime>5__2;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600124F")]
				[Address(RVA = "0x7E1C50", Offset = "0x7E1C50", VA = "0x7E1C50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001251")]
				[Address(RVA = "0x7E1C98", Offset = "0x7E1C98", VA = "0x7E1C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600124C")]
			[Address(RVA = "0x7E1B30", Offset = "0x7E1B30", VA = "0x7E1B30")]
			[DebuggerHidden]
			public <OnFinishSubmit>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600124D")]
			[Address(RVA = "0x7E1B84", Offset = "0x7E1B84", VA = "0x7E1B84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600124E")]
			[Address(RVA = "0x7E1B88", Offset = "0x7E1B88", VA = "0x7E1B88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001250")]
			[Address(RVA = "0x7E1C58", Offset = "0x7E1C58", VA = "0x7E1C58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool isHighlightDisabled;

		[Token(Token = "0x17000367")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x7E04DC", Offset = "0x7E04DC", VA = "0x7E04DC", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x7E04E4", Offset = "0x7E04E4", VA = "0x7E04E4", Slot = "43")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0x7E04F4", Offset = "0x7E04F4", VA = "0x7E04F4", Slot = "50")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600122A")]
			[Address(RVA = "0x7E0508", Offset = "0x7E0508", VA = "0x7E0508", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0x7E051C", Offset = "0x7E051C", VA = "0x7E051C", Slot = "51")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x7E0524", Offset = "0x7E0524", VA = "0x7E0524", Slot = "45")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool autoNavUp
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x7E0534", Offset = "0x7E0534", VA = "0x7E0534", Slot = "52")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x7E053C", Offset = "0x7E053C", VA = "0x7E053C", Slot = "53")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public bool autoNavDown
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x7E0548", Offset = "0x7E0548", VA = "0x7E0548", Slot = "54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x7E0550", Offset = "0x7E0550", VA = "0x7E0550", Slot = "55")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x7E055C", Offset = "0x7E055C", VA = "0x7E055C", Slot = "56")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x7E0564", Offset = "0x7E0564", VA = "0x7E0564", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public bool autoNavRight
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x7E0570", Offset = "0x7E0570", VA = "0x7E0570", Slot = "58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x7E0578", Offset = "0x7E0578", VA = "0x7E0578", Slot = "59")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		private bool isDisabled
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x7E0584", Offset = "0x7E0584", VA = "0x7E0584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000014")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x7E05A8", Offset = "0x7E05A8", VA = "0x7E05A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x7E0648", Offset = "0x7E0648", VA = "0x7E0648")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0x7E06E8", Offset = "0x7E06E8", VA = "0x7E06E8", Slot = "46")]
			add
			{
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x7E06EC", Offset = "0x7E06EC", VA = "0x7E06EC", Slot = "47")]
			remove
			{
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x7E06F0", Offset = "0x7E06F0", VA = "0x7E06F0", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x7E0FFC", Offset = "0x7E0FFC", VA = "0x7E0FFC", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x7E10F0", Offset = "0x7E10F0", VA = "0x7E10F0", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x7E11E4", Offset = "0x7E11E4", VA = "0x7E11E4", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x7E12D8", Offset = "0x7E12D8", VA = "0x7E12D8", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x7E148C", Offset = "0x7E148C", VA = "0x7E148C", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x7E15B4", Offset = "0x7E15B4", VA = "0x7E15B4")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x7E169C", Offset = "0x7E169C", VA = "0x7E169C")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x7E174C", Offset = "0x7E174C", VA = "0x7E174C")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x7E18A4", Offset = "0x7E18A4", VA = "0x7E18A4", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x7E18FC", Offset = "0x7E18FC", VA = "0x7E18FC", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x7E191C", Offset = "0x7E191C", VA = "0x7E191C")]
		private void Press()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x7E196C", Offset = "0x7E196C", VA = "0x7E196C", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x7E1A24", Offset = "0x7E1A24", VA = "0x7E1A24", Slot = "42")]
		public override void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x7E1ABC", Offset = "0x7E1ABC", VA = "0x7E1ABC")]
		[IteratorStateMachine(typeof(<OnFinishSubmit>d__51))]
		private IEnumerator OnFinishSubmit()
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x7E13F4", Offset = "0x7E13F4", VA = "0x7E13F4")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x7E1B58", Offset = "0x7E1B58", VA = "0x7E1B58", Slot = "48")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x7E1B74", Offset = "0x7E1B74", VA = "0x7E1B74")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AddComponentMenu("")]
	public class CustomSlider : Slider, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool isHighlightDisabled;

		[Token(Token = "0x17000371")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x7E1CA0", Offset = "0x7E1CA0", VA = "0x7E1CA0", Slot = "62")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x7E1CA8", Offset = "0x7E1CA8", VA = "0x7E1CA8", Slot = "56")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x7E1CB8", Offset = "0x7E1CB8", VA = "0x7E1CB8", Slot = "63")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x7E1CCC", Offset = "0x7E1CCC", VA = "0x7E1CCC", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x7E1CE0", Offset = "0x7E1CE0", VA = "0x7E1CE0", Slot = "64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x7E1CE8", Offset = "0x7E1CE8", VA = "0x7E1CE8", Slot = "58")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public bool autoNavUp
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x7E1CF8", Offset = "0x7E1CF8", VA = "0x7E1CF8", Slot = "65")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x7E1D00", Offset = "0x7E1D00", VA = "0x7E1D00", Slot = "66")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public bool autoNavDown
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x7E1D0C", Offset = "0x7E1D0C", VA = "0x7E1D0C", Slot = "67")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x7E1D14", Offset = "0x7E1D14", VA = "0x7E1D14", Slot = "68")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public bool autoNavLeft
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x7E1D20", Offset = "0x7E1D20", VA = "0x7E1D20", Slot = "69")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x7E1D28", Offset = "0x7E1D28", VA = "0x7E1D28", Slot = "70")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public bool autoNavRight
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x7E1D34", Offset = "0x7E1D34", VA = "0x7E1D34", Slot = "71")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x7E1D3C", Offset = "0x7E1D3C", VA = "0x7E1D3C", Slot = "72")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		private bool isDisabled
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x7E1D48", Offset = "0x7E1D48", VA = "0x7E1D48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000016")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x7E1D6C", Offset = "0x7E1D6C", VA = "0x7E1D6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x7E1E0C", Offset = "0x7E1E0C", VA = "0x7E1E0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x7E1EAC", Offset = "0x7E1EAC", VA = "0x7E1EAC", Slot = "59")]
			add
			{
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x7E1EB0", Offset = "0x7E1EB0", VA = "0x7E1EB0", Slot = "60")]
			remove
			{
			}
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x7E1EB4", Offset = "0x7E1EB4", VA = "0x7E1EB4", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x7E1FA8", Offset = "0x7E1FA8", VA = "0x7E1FA8", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x7E209C", Offset = "0x7E209C", VA = "0x7E209C", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x7E2190", Offset = "0x7E2190", VA = "0x7E2190", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x7E2284", Offset = "0x7E2284", VA = "0x7E2284", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x7E2438", Offset = "0x7E2438", VA = "0x7E2438", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x7E2560", Offset = "0x7E2560", VA = "0x7E2560")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x7E2648", Offset = "0x7E2648", VA = "0x7E2648")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x7E26F8", Offset = "0x7E26F8", VA = "0x7E26F8")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x7E2850", Offset = "0x7E2850", VA = "0x7E2850", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x7E28A8", Offset = "0x7E28A8", VA = "0x7E28A8", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x7E23A0", Offset = "0x7E23A0", VA = "0x7E23A0")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x7E28C8", Offset = "0x7E28C8", VA = "0x7E28C8", Slot = "61")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x7E28E4", Offset = "0x7E28E4", VA = "0x7E28E4")]
		public CustomSlider()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AddComponentMenu("")]
	public class CustomToggle : Toggle, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isHighlightDisabled;

		[Token(Token = "0x17000379")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x7E28F4", Offset = "0x7E28F4", VA = "0x7E28F4", Slot = "57")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x7E28FC", Offset = "0x7E28FC", VA = "0x7E28FC", Slot = "51")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x7E290C", Offset = "0x7E290C", VA = "0x7E290C", Slot = "58")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x7E2920", Offset = "0x7E2920", VA = "0x7E2920", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x7E2934", Offset = "0x7E2934", VA = "0x7E2934", Slot = "59")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x7E293C", Offset = "0x7E293C", VA = "0x7E293C", Slot = "53")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public bool autoNavUp
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x7E294C", Offset = "0x7E294C", VA = "0x7E294C", Slot = "60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x7E2954", Offset = "0x7E2954", VA = "0x7E2954", Slot = "61")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public bool autoNavDown
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x7E2960", Offset = "0x7E2960", VA = "0x7E2960", Slot = "62")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x7E2968", Offset = "0x7E2968", VA = "0x7E2968", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public bool autoNavLeft
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x7E2974", Offset = "0x7E2974", VA = "0x7E2974", Slot = "64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x7E297C", Offset = "0x7E297C", VA = "0x7E297C", Slot = "65")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public bool autoNavRight
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x7E2988", Offset = "0x7E2988", VA = "0x7E2988", Slot = "66")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x7E2990", Offset = "0x7E2990", VA = "0x7E2990", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		private bool isDisabled
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x7E299C", Offset = "0x7E299C", VA = "0x7E299C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000018")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x7E29C0", Offset = "0x7E29C0", VA = "0x7E29C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x7E2A60", Offset = "0x7E2A60", VA = "0x7E2A60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x7E2B00", Offset = "0x7E2B00", VA = "0x7E2B00", Slot = "54")]
			add
			{
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x7E2B04", Offset = "0x7E2B04", VA = "0x7E2B04", Slot = "55")]
			remove
			{
			}
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x7E2B08", Offset = "0x7E2B08", VA = "0x7E2B08", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x7E2BFC", Offset = "0x7E2BFC", VA = "0x7E2BFC", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x7E2CF0", Offset = "0x7E2CF0", VA = "0x7E2CF0", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x7E2DE4", Offset = "0x7E2DE4", VA = "0x7E2DE4", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x7E2ED8", Offset = "0x7E2ED8", VA = "0x7E2ED8", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x7E308C", Offset = "0x7E308C", VA = "0x7E308C", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x7E31B4", Offset = "0x7E31B4", VA = "0x7E31B4")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x7E329C", Offset = "0x7E329C", VA = "0x7E329C")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x7E334C", Offset = "0x7E334C", VA = "0x7E334C")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x7E34A4", Offset = "0x7E34A4", VA = "0x7E34A4", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x7E34FC", Offset = "0x7E34FC", VA = "0x7E34FC", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x7E2FF4", Offset = "0x7E2FF4", VA = "0x7E2FF4")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x7E351C", Offset = "0x7E351C", VA = "0x7E351C", Slot = "56")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x7E3538", Offset = "0x7E3538", VA = "0x7E3538")]
		public CustomToggle()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public interface ICustomSelectable : ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x17000381")]
		Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6001294")]
			set;
		}

		[Token(Token = "0x17000382")]
		Color disabledHighlightedColor
		{
			[Token(Token = "0x6001295")]
			set;
		}

		[Token(Token = "0x17000383")]
		string disabledHighlightedTrigger
		{
			[Token(Token = "0x6001296")]
			set;
		}

		[Token(Token = "0x1400001A")]
		event UnityAction CancelEvent;
	}
	[Token(Token = "0x20002A2")]
	[AddComponentMenu("")]
	public class InputBehaviorWindow : Window
	{
		[Token(Token = "0x20002A3")]
		private class InputBehaviorInfo
		{
			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputBehavior _inputBehavior;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UIControlSet _controlSet;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<int, PropertyType> idToProperty;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private InputBehavior copyOfOriginal;

			[Token(Token = "0x17000384")]
			public InputBehavior inputBehavior
			{
				[Token(Token = "0x60012AA")]
				[Address(RVA = "0x7E5188", Offset = "0x7E5188", VA = "0x7E5188")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x7E4318", Offset = "0x7E4318", VA = "0x7E4318")]
			public InputBehaviorInfo(InputBehavior inputBehavior, UIControlSet controlSet, Dictionary<int, PropertyType> idToProperty)
			{
			}

			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x7E4698", Offset = "0x7E4698", VA = "0x7E4698")]
			public void RestorePreviousData()
			{
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x7E48A0", Offset = "0x7E48A0", VA = "0x7E48A0")]
			public void RestoreDefaultData()
			{
			}

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x7E4A1C", Offset = "0x7E4A1C", VA = "0x7E4A1C")]
			public void RestoreData(PropertyType propertyType, int controlId)
			{
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x7E5190", Offset = "0x7E5190", VA = "0x7E5190")]
			public void RefreshControls()
			{
			}
		}

		[Token(Token = "0x20002A4")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x4001723")]
			Done,
			[Token(Token = "0x4001724")]
			Cancel,
			[Token(Token = "0x4001725")]
			Default
		}

		[Token(Token = "0x20002A5")]
		private enum PropertyType
		{
			[Token(Token = "0x4001727")]
			JoystickAxisSensitivity,
			[Token(Token = "0x4001728")]
			MouseXYAxisSensitivity
		}

		[Token(Token = "0x4001711")]
		private const float minSensitivity = 0.1f;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform spawnTransform;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button cancelButton;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button defaultButton;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Text doneButtonLabel;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Text cancelButtonLabel;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Text defaultButtonLabel;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject uiControlSetPrefab;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject uiSliderControlPrefab;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<InputBehaviorInfo> inputBehaviorInfo;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int playerId;

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x7E3548", Offset = "0x7E3548", VA = "0x7E3548", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x7E3A28", Offset = "0x7E3A28", VA = "0x7E3A28")]
		public void SetData(int playerId, ControlMapper.InputBehaviorSettings[] data)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x7E43DC", Offset = "0x7E43DC", VA = "0x7E43DC")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x7E44C4", Offset = "0x7E44C4", VA = "0x7E44C4", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x7E46BC", Offset = "0x7E46BC", VA = "0x7E46BC")]
		public void OnDone()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x7E4744", Offset = "0x7E4744", VA = "0x7E4744")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x7E4750", Offset = "0x7E4750", VA = "0x7E4750")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x7E48C8", Offset = "0x7E48C8", VA = "0x7E48C8")]
		private void JoystickAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x7E48F4", Offset = "0x7E48F4", VA = "0x7E48F4")]
		private void MouseXYAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x7E4920", Offset = "0x7E4920", VA = "0x7E4920")]
		private void JoystickAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x7E4B4C", Offset = "0x7E4B4C", VA = "0x7E4B4C")]
		private void MouseXYAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x7E4B74", Offset = "0x7E4B74", VA = "0x7E4B74", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x7E3F94", Offset = "0x7E3F94", VA = "0x7E3F94")]
		private UIControlSet CreateControlSet()
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x7E40EC", Offset = "0x7E40EC", VA = "0x7E40EC")]
		private UISliderControl CreateSlider(UIControlSet set, int inputBehaviorId, string defaultTitle, string overrideTitle, Sprite icon, float minValue, float maxValue, Action<int, int, float> valueChangedCallback, Action<int, int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x7E3F1C", Offset = "0x7E3F1C", VA = "0x7E3F1C")]
		private InputBehavior GetInputBehavior(int id)
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x7E4948", Offset = "0x7E4948", VA = "0x7E4948")]
		private InputBehaviorInfo GetInputBehaviorInfo(int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x7E5168", Offset = "0x7E5168", VA = "0x7E5168")]
		public InputBehaviorWindow()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AddComponentMenu("")]
	public class InputFieldInfo : UIElementInfo
	{
		[Token(Token = "0x17000385")]
		public int actionId
		{
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x7E5474", Offset = "0x7E5474", VA = "0x7E5474")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x7E547C", Offset = "0x7E547C", VA = "0x7E547C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public AxisRange axisRange
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x7E5484", Offset = "0x7E5484", VA = "0x7E5484")]
			[CompilerGenerated]
			get
			{
				return default(AxisRange);
			}
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x7E548C", Offset = "0x7E548C", VA = "0x7E548C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public int actionElementMapId
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x7E5494", Offset = "0x7E5494", VA = "0x7E5494")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x7E549C", Offset = "0x7E549C", VA = "0x7E549C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public ControllerType controllerType
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x7E54A4", Offset = "0x7E54A4", VA = "0x7E54A4")]
			[CompilerGenerated]
			get
			{
				return default(ControllerType);
			}
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x7E54AC", Offset = "0x7E54AC", VA = "0x7E54AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public int controllerId
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x7E54B4", Offset = "0x7E54B4", VA = "0x7E54B4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x7E54BC", Offset = "0x7E54BC", VA = "0x7E54BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x7E54C4", Offset = "0x7E54C4", VA = "0x7E54C4")]
		public InputFieldInfo()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AddComponentMenu("")]
	public class InputRow : MonoBehaviour
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text label;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int rowIndex;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<int, ButtonInfo> inputFieldActivatedCallback;

		[Token(Token = "0x1700038A")]
		public ButtonInfo[] buttons
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x7E54D4", Offset = "0x7E54D4", VA = "0x7E54D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x7E54DC", Offset = "0x7E54DC", VA = "0x7E54DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x7E54E4", Offset = "0x7E54E4", VA = "0x7E54E4")]
		public void Initialize(int rowIndex, string label, Action<int, ButtonInfo> inputFieldActivatedCallback)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x7E5594", Offset = "0x7E5594", VA = "0x7E5594")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x7E55B8", Offset = "0x7E55B8", VA = "0x7E55B8")]
		public InputRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class LanguageData : LanguageDataBase
	{
		[Serializable]
		[Token(Token = "0x20002AA")]
		protected class CustomEntry
		{
			[Token(Token = "0x4001771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x4001772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string value;

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x7E6F7C", Offset = "0x7E6F7C", VA = "0x7E6F7C")]
			public CustomEntry()
			{
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x7E55F8", Offset = "0x7E55F8", VA = "0x7E55F8")]
			public static Dictionary<string, string> ToDictionary(CustomEntry[] array)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20002AB")]
		protected class ModifierKeys
		{
			[Token(Token = "0x4001773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string control;

			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string alt;

			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string shift;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string command;

			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string separator;

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x7E6F84", Offset = "0x7E6F84", VA = "0x7E6F84")]
			public ModifierKeys()
			{
			}
		}

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _yes;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _no;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _add;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _replace;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _remove;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _swap;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _cancel;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _none;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _okay;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _done;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _default;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _assignControllerWindowTitle;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _assignControllerWindowMessage;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _controllerAssignmentConflictWindowTitle;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Tooltip("{0} = Joystick Name\n{1} = Other Player Name\n{2} = This Player Name")]
		private string _controllerAssignmentConflictWindowMessage;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _elementAssignmentPrePollingWindowMessage;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("{0} = Action Name")]
		[SerializeField]
		private string _joystickElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Tooltip("This text is only displayed when split-axis fields have been disabled and the user clicks on the full-axis field. Button/key/D-pad input cannot be assigned to a full-axis field.\n{0} = Action Name")]
		private string _joystickElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Tooltip("{0} = Action Name")]
		private string _keyboardElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[Tooltip("{0} = Action Name")]
		private string _mouseElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Tooltip("This text is only displayed when split-axis fields have been disabled and the user clicks on the full-axis field. Button/key/D-pad input cannot be assigned to a full-axis field.\n{0} = Action Name")]
		private string _mouseElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _elementAssignmentConflictWindowMessage;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[Tooltip("{0} = Element Name")]
		private string _elementAlreadyInUseBlocked;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Tooltip("{0} = Element Name")]
		private string _elementAlreadyInUseCanReplace;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("{0} = Element Name")]
		[SerializeField]
		private string _elementAlreadyInUseCanReplace_conflictAllowed;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string _mouseAssignmentConflictWindowTitle;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Tooltip("{0} = Other Player Name\n{1} = This Player Name")]
		[SerializeField]
		private string _mouseAssignmentConflictWindowMessage;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string _calibrateControllerWindowTitle;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string _calibrateAxisStep1WindowTitle;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[Tooltip("{0} = Axis Name")]
		private string _calibrateAxisStep1WindowMessage;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string _calibrateAxisStep2WindowTitle;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Tooltip("{0} = Axis Name")]
		[SerializeField]
		private string _calibrateAxisStep2WindowMessage;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _inputBehaviorSettingsWindowTitle;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private string _restoreDefaultsWindowTitle;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[Tooltip("Message for a single player game.")]
		private string _restoreDefaultsWindowMessage_onePlayer;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[Tooltip("Message for a multi-player game.")]
		private string _restoreDefaultsWindowMessage_multiPlayer;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _actionColumnLabel;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string _keyboardColumnLabel;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private string _mouseColumnLabel;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private string _controllerColumnLabel;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private string _removeControllerButtonLabel;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private string _calibrateControllerButtonLabel;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private string _assignControllerButtonLabel;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private string _inputBehaviorSettingsButtonLabel;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _doneButtonLabel;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private string _restoreDefaultsButtonLabel;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private string _playersGroupLabel;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private string _controllerSettingsGroupLabel;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private string _assignedControllersGroupLabel;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private string _settingsGroupLabel;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private string _mapCategoriesGroupLabel;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private string _calibrateWindow_deadZoneSliderLabel;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private string _calibrateWindow_zeroSliderLabel;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private string _calibrateWindow_sensitivitySliderLabel;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private string _calibrateWindow_invertToggleLabel;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private string _calibrateWindow_calibrateButtonLabel;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private ModifierKeys _modifierKeys;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private CustomEntry[] _customEntries;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool _initialized;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Dictionary<string, string> customDict;

		[Token(Token = "0x1700038B")]
		public override string yes
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x7E5908", Offset = "0x7E5908", VA = "0x7E5908", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public override string no
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x7E5910", Offset = "0x7E5910", VA = "0x7E5910", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		public override string add
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x7E5918", Offset = "0x7E5918", VA = "0x7E5918", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		public override string replace
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x7E5920", Offset = "0x7E5920", VA = "0x7E5920", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		public override string remove
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x7E5928", Offset = "0x7E5928", VA = "0x7E5928", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		public override string swap
		{
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x7E5930", Offset = "0x7E5930", VA = "0x7E5930", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		public override string cancel
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x7E5938", Offset = "0x7E5938", VA = "0x7E5938", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public override string none
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x7E5940", Offset = "0x7E5940", VA = "0x7E5940", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public override string okay
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x7E5948", Offset = "0x7E5948", VA = "0x7E5948", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public override string done
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x7E5950", Offset = "0x7E5950", VA = "0x7E5950", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public override string default_
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x7E5958", Offset = "0x7E5958", VA = "0x7E5958", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public override string assignControllerWindowTitle
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x7E5960", Offset = "0x7E5960", VA = "0x7E5960", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public override string assignControllerWindowMessage
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x7E5968", Offset = "0x7E5968", VA = "0x7E5968", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public override string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x7E5970", Offset = "0x7E5970", VA = "0x7E5970", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public override string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x7E5978", Offset = "0x7E5978", VA = "0x7E5978", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public override string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x7E5980", Offset = "0x7E5980", VA = "0x7E5980", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public override string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x7E5988", Offset = "0x7E5988", VA = "0x7E5988", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public override string calibrateControllerWindowTitle
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x7E5990", Offset = "0x7E5990", VA = "0x7E5990", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public override string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x7E5998", Offset = "0x7E5998", VA = "0x7E5998", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039E")]
		public override string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x7E59A0", Offset = "0x7E59A0", VA = "0x7E59A0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public override string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x7E59A8", Offset = "0x7E59A8", VA = "0x7E59A8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public override string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x7E59B0", Offset = "0x7E59B0", VA = "0x7E59B0", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		public override string actionColumnLabel
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x7E59B8", Offset = "0x7E59B8", VA = "0x7E59B8", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		public override string keyboardColumnLabel
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x7E59C0", Offset = "0x7E59C0", VA = "0x7E59C0", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		public override string mouseColumnLabel
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x7E59C8", Offset = "0x7E59C8", VA = "0x7E59C8", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public override string controllerColumnLabel
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x7E59D0", Offset = "0x7E59D0", VA = "0x7E59D0", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public override string removeControllerButtonLabel
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x7E59D8", Offset = "0x7E59D8", VA = "0x7E59D8", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public override string calibrateControllerButtonLabel
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x7E59E0", Offset = "0x7E59E0", VA = "0x7E59E0", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		public override string assignControllerButtonLabel
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x7E59E8", Offset = "0x7E59E8", VA = "0x7E59E8", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public override string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x7E59F0", Offset = "0x7E59F0", VA = "0x7E59F0", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public override string doneButtonLabel
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x7E59F8", Offset = "0x7E59F8", VA = "0x7E59F8", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public override string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x7E5A00", Offset = "0x7E5A00", VA = "0x7E5A00", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public override string controllerSettingsGroupLabel
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x7E5A08", Offset = "0x7E5A08", VA = "0x7E5A08", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public override string playersGroupLabel
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x7E5A10", Offset = "0x7E5A10", VA = "0x7E5A10", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public override string assignedControllersGroupLabel
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x7E5A18", Offset = "0x7E5A18", VA = "0x7E5A18", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public override string settingsGroupLabel
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x7E5A20", Offset = "0x7E5A20", VA = "0x7E5A20", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public override string mapCategoriesGroupLabel
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x7E5A28", Offset = "0x7E5A28", VA = "0x7E5A28", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public override string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x7E5A30", Offset = "0x7E5A30", VA = "0x7E5A30", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public override string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x7E5AAC", Offset = "0x7E5AAC", VA = "0x7E5AAC", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		public override string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x7E5AB4", Offset = "0x7E5AB4", VA = "0x7E5AB4", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		public override string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x7E5ABC", Offset = "0x7E5ABC", VA = "0x7E5ABC", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public override string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x7E5AC4", Offset = "0x7E5AC4", VA = "0x7E5AC4", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		public override string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x7E5ACC", Offset = "0x7E5ACC", VA = "0x7E5ACC", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x7E55C0", Offset = "0x7E55C0", VA = "0x7E55C0", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x7E57EC", Offset = "0x7E57EC", VA = "0x7E57EC", Slot = "5")]
		public override string GetCustomEntry(string key)
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x7E5890", Offset = "0x7E5890", VA = "0x7E5890", Slot = "6")]
		public override bool ContainsCustomEntryKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x7E5AD4", Offset = "0x7E5AD4", VA = "0x7E5AD4", Slot = "50")]
		public override string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x7E5AE0", Offset = "0x7E5AE0", VA = "0x7E5AE0", Slot = "51")]
		public override string GetJoystickElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x7E5AEC", Offset = "0x7E5AEC", VA = "0x7E5AEC", Slot = "52")]
		public override string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x7E5AF8", Offset = "0x7E5AF8", VA = "0x7E5AF8", Slot = "53")]
		public override string GetKeyboardElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x7E5B04", Offset = "0x7E5B04", VA = "0x7E5B04", Slot = "54")]
		public override string GetMouseElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x7E5B10", Offset = "0x7E5B10", VA = "0x7E5B10", Slot = "55")]
		public override string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x7E5B1C", Offset = "0x7E5B1C", VA = "0x7E5B1C", Slot = "56")]
		public override string GetElementAlreadyInUseBlocked(string elementName)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x7E5B28", Offset = "0x7E5B28", VA = "0x7E5B28", Slot = "57")]
		public override string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts)
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x7E5B44", Offset = "0x7E5B44", VA = "0x7E5B44", Slot = "58")]
		public override string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x7E5B50", Offset = "0x7E5B50", VA = "0x7E5B50", Slot = "59")]
		public override string GetCalibrateAxisStep1WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x7E5B5C", Offset = "0x7E5B5C", VA = "0x7E5B5C", Slot = "60")]
		public override string GetCalibrateAxisStep2WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x7E5B68", Offset = "0x7E5B68", VA = "0x7E5B68", Slot = "61")]
		public override string GetPlayerName(int playerId)
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x7E5C54", Offset = "0x7E5C54", VA = "0x7E5C54", Slot = "62")]
		public override string GetControllerName(Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x7E5CB4", Offset = "0x7E5CB4", VA = "0x7E5CB4", Slot = "63")]
		public override string GetElementIdentifierName(ActionElementMap actionElementMap)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x7E5DA0", Offset = "0x7E5DA0", VA = "0x7E5DA0", Slot = "64")]
		public override string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x7E5EF0", Offset = "0x7E5EF0", VA = "0x7E5EF0", Slot = "65")]
		public override string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags)
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x7E5FAC", Offset = "0x7E5FAC", VA = "0x7E5FAC", Slot = "66")]
		public override string GetActionName(int actionId)
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x7E6098", Offset = "0x7E6098", VA = "0x7E6098", Slot = "67")]
		public override string GetActionName(int actionId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x7E6284", Offset = "0x7E6284", VA = "0x7E6284", Slot = "68")]
		public override string GetMapCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x7E6370", Offset = "0x7E6370", VA = "0x7E6370", Slot = "69")]
		public override string GetActionCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x7E645C", Offset = "0x7E645C", VA = "0x7E645C", Slot = "70")]
		public override string GetLayoutName(ControllerType controllerType, int id)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x7E659C", Offset = "0x7E659C", VA = "0x7E659C", Slot = "71")]
		public override string ModifierKeyFlagsToString(ModifierKeyFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x7E6790", Offset = "0x7E6790", VA = "0x7E6790")]
		public LanguageData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public abstract class LanguageDataBase : ScriptableObject
	{
		[Token(Token = "0x170003B6")]
		public abstract string yes
		{
			[Token(Token = "0x600130E")]
			get;
		}

		[Token(Token = "0x170003B7")]
		public abstract string no
		{
			[Token(Token = "0x600130F")]
			get;
		}

		[Token(Token = "0x170003B8")]
		public abstract string add
		{
			[Token(Token = "0x6001310")]
			get;
		}

		[Token(Token = "0x170003B9")]
		public abstract string replace
		{
			[Token(Token = "0x6001311")]
			get;
		}

		[Token(Token = "0x170003BA")]
		public abstract string remove
		{
			[Token(Token = "0x6001312")]
			get;
		}

		[Token(Token = "0x170003BB")]
		public abstract string swap
		{
			[Token(Token = "0x6001313")]
			get;
		}

		[Token(Token = "0x170003BC")]
		public abstract string cancel
		{
			[Token(Token = "0x6001314")]
			get;
		}

		[Token(Token = "0x170003BD")]
		public abstract string none
		{
			[Token(Token = "0x6001315")]
			get;
		}

		[Token(Token = "0x170003BE")]
		public abstract string okay
		{
			[Token(Token = "0x6001316")]
			get;
		}

		[Token(Token = "0x170003BF")]
		public abstract string done
		{
			[Token(Token = "0x6001317")]
			get;
		}

		[Token(Token = "0x170003C0")]
		public abstract string default_
		{
			[Token(Token = "0x6001318")]
			get;
		}

		[Token(Token = "0x170003C1")]
		public abstract string assignControllerWindowTitle
		{
			[Token(Token = "0x6001319")]
			get;
		}

		[Token(Token = "0x170003C2")]
		public abstract string assignControllerWindowMessage
		{
			[Token(Token = "0x600131A")]
			get;
		}

		[Token(Token = "0x170003C3")]
		public abstract string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x600131B")]
			get;
		}

		[Token(Token = "0x170003C4")]
		public abstract string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x600131C")]
			get;
		}

		[Token(Token = "0x170003C5")]
		public abstract string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x600131D")]
			get;
		}

		[Token(Token = "0x170003C6")]
		public abstract string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x600131E")]
			get;
		}

		[Token(Token = "0x170003C7")]
		public abstract string calibrateControllerWindowTitle
		{
			[Token(Token = "0x600131F")]
			get;
		}

		[Token(Token = "0x170003C8")]
		public abstract string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x6001320")]
			get;
		}

		[Token(Token = "0x170003C9")]
		public abstract string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x6001321")]
			get;
		}

		[Token(Token = "0x170003CA")]
		public abstract string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x6001322")]
			get;
		}

		[Token(Token = "0x170003CB")]
		public abstract string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x6001323")]
			get;
		}

		[Token(Token = "0x170003CC")]
		public abstract string actionColumnLabel
		{
			[Token(Token = "0x6001324")]
			get;
		}

		[Token(Token = "0x170003CD")]
		public abstract string keyboardColumnLabel
		{
			[Token(Token = "0x6001325")]
			get;
		}

		[Token(Token = "0x170003CE")]
		public abstract string mouseColumnLabel
		{
			[Token(Token = "0x6001326")]
			get;
		}

		[Token(Token = "0x170003CF")]
		public abstract string controllerColumnLabel
		{
			[Token(Token = "0x6001327")]
			get;
		}

		[Token(Token = "0x170003D0")]
		public abstract string removeControllerButtonLabel
		{
			[Token(Token = "0x6001328")]
			get;
		}

		[Token(Token = "0x170003D1")]
		public abstract string calibrateControllerButtonLabel
		{
			[Token(Token = "0x6001329")]
			get;
		}

		[Token(Token = "0x170003D2")]
		public abstract string assignControllerButtonLabel
		{
			[Token(Token = "0x600132A")]
			get;
		}

		[Token(Token = "0x170003D3")]
		public abstract string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x600132B")]
			get;
		}

		[Token(Token = "0x170003D4")]
		public abstract string doneButtonLabel
		{
			[Token(Token = "0x600132C")]
			get;
		}

		[Token(Token = "0x170003D5")]
		public abstract string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x600132D")]
			get;
		}

		[Token(Token = "0x170003D6")]
		public abstract string controllerSettingsGroupLabel
		{
			[Token(Token = "0x600132E")]
			get;
		}

		[Token(Token = "0x170003D7")]
		public abstract string playersGroupLabel
		{
			[Token(Token = "0x600132F")]
			get;
		}

		[Token(Token = "0x170003D8")]
		public abstract string assignedControllersGroupLabel
		{
			[Token(Token = "0x6001330")]
			get;
		}

		[Token(Token = "0x170003D9")]
		public abstract string settingsGroupLabel
		{
			[Token(Token = "0x6001331")]
			get;
		}

		[Token(Token = "0x170003DA")]
		public abstract string mapCategoriesGroupLabel
		{
			[Token(Token = "0x6001332")]
			get;
		}

		[Token(Token = "0x170003DB")]
		public abstract string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x6001333")]
			get;
		}

		[Token(Token = "0x170003DC")]
		public abstract string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x6001334")]
			get;
		}

		[Token(Token = "0x170003DD")]
		public abstract string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x6001335")]
			get;
		}

		[Token(Token = "0x170003DE")]
		public abstract string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x6001336")]
			get;
		}

		[Token(Token = "0x170003DF")]
		public abstract string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x6001337")]
			get;
		}

		[Token(Token = "0x170003E0")]
		public abstract string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x6001338")]
			get;
		}

		[Token(Token = "0x600130B")]
		public abstract void Initialize();

		[Token(Token = "0x600130C")]
		public abstract string GetCustomEntry(string key);

		[Token(Token = "0x600130D")]
		public abstract bool ContainsCustomEntryKey(string key);

		[Token(Token = "0x6001339")]
		public abstract string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName);

		[Token(Token = "0x600133A")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600133B")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x600133C")]
		public abstract string GetKeyboardElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600133D")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600133E")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x600133F")]
		public abstract string GetElementAlreadyInUseBlocked(string elementName);

		[Token(Token = "0x6001340")]
		public abstract string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts);

		[Token(Token = "0x6001341")]
		public abstract string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName);

		[Token(Token = "0x6001342")]
		public abstract string GetCalibrateAxisStep1WindowMessage(string axisName);

		[Token(Token = "0x6001343")]
		public abstract string GetCalibrateAxisStep2WindowMessage(string axisName);

		[Token(Token = "0x6001344")]
		public abstract string GetPlayerName(int playerId);

		[Token(Token = "0x6001345")]
		public abstract string GetControllerName(Controller controller);

		[Token(Token = "0x6001346")]
		public abstract string GetElementIdentifierName(ActionElementMap actionElementMap);

		[Token(Token = "0x6001347")]
		public abstract string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange);

		[Token(Token = "0x6001348")]
		public abstract string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags);

		[Token(Token = "0x6001349")]
		public abstract string GetActionName(int actionId);

		[Token(Token = "0x600134A")]
		public abstract string GetActionName(int actionId, AxisRange axisRange);

		[Token(Token = "0x600134B")]
		public abstract string GetMapCategoryName(int id);

		[Token(Token = "0x600134C")]
		public abstract string GetActionCategoryName(int id);

		[Token(Token = "0x600134D")]
		public abstract string GetLayoutName(ControllerType controllerType, int id);

		[Token(Token = "0x600134E")]
		public abstract string ModifierKeyFlagsToString(ModifierKeyFlags flags);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x7E6F74", Offset = "0x7E6F74", VA = "0x7E6F74")]
		protected LanguageDataBase()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AddComponentMenu("")]
	public class ScrollbarVisibilityHelper : MonoBehaviour
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect scrollRect;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x7E707C", Offset = "0x7E707C", VA = "0x7E707C")]
		public ScrollbarVisibilityHelper()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(Selectable))]
	public class ScrollRectSelectableChild : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useCustomEdgePadding;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float customEdgePadding;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScrollRect parentScrollRect;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Selectable _selectable;

		[Token(Token = "0x170003E1")]
		private RectTransform parentScrollRectContentTransform
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x7E7084", Offset = "0x7E7084", VA = "0x7E7084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private Selectable selectable
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x7E70A0", Offset = "0x7E70A0", VA = "0x7E70A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x7E7110", Offset = "0x7E7110", VA = "0x7E7110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x7E7170", Offset = "0x7E7170", VA = "0x7E7170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x7E7264", Offset = "0x7E7264", VA = "0x7E7264", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x7E7564", Offset = "0x7E7564", VA = "0x7E7564")]
		public ScrollRectSelectableChild()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AddComponentMenu("")]
	public class ThemedElement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B0")]
		public class ElementInfo
		{
			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _themeClass;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Component _component;

			[Token(Token = "0x170003E4")]
			public string themeClass
			{
				[Token(Token = "0x6001359")]
				[Address(RVA = "0x7E7588", Offset = "0x7E7588", VA = "0x7E7588")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			public Component component
			{
				[Token(Token = "0x600135A")]
				[Address(RVA = "0x7E7590", Offset = "0x7E7590", VA = "0x7E7590")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x7E7598", Offset = "0x7E7598", VA = "0x7E7598")]
			public ElementInfo()
			{
			}
		}

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ElementInfo[] _elements;

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x7E7574", Offset = "0x7E7574", VA = "0x7E7574")]
		private void Start()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x7E7580", Offset = "0x7E7580", VA = "0x7E7580")]
		public ThemedElement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class ThemeSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20002B2")]
		private abstract class SelectableSettings_Base
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			protected Selectable.Transition _transition;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			protected CustomColorBlock _colors;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			protected CustomSpriteState _spriteState;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			protected CustomAnimationTriggers _animationTriggers;

			[Token(Token = "0x6001364")]
			[Address(RVA = "0x7E8414", Offset = "0x7E8414", VA = "0x7E8414", Slot = "4")]
			public virtual void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6001365")]
			[Address(RVA = "0x7E890C", Offset = "0x7E890C", VA = "0x7E890C")]
			protected SelectableSettings_Base()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B3")]
		private class SelectableSettings : SelectableSettings_Base
		{
			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _imageSettings;

			[Token(Token = "0x170003E6")]
			public ImageSettings imageSettings
			{
				[Token(Token = "0x6001366")]
				[Address(RVA = "0x7E8914", Offset = "0x7E8914", VA = "0x7E8914")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001367")]
			[Address(RVA = "0x7E891C", Offset = "0x7E891C", VA = "0x7E891C", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6001368")]
			[Address(RVA = "0x7E8A10", Offset = "0x7E8A10", VA = "0x7E8A10")]
			public SelectableSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B4")]
		private class SliderSettings : SelectableSettings_Base
		{
			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _fillImageSettings;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x6001369")]
			[Address(RVA = "0x7E8A18", Offset = "0x7E8A18", VA = "0x7E8A18")]
			private void Apply(Slider item)
			{
			}

			[Token(Token = "0x600136A")]
			[Address(RVA = "0x7E8C14", Offset = "0x7E8C14", VA = "0x7E8C14", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x600136B")]
			[Address(RVA = "0x7E8CA0", Offset = "0x7E8CA0", VA = "0x7E8CA0")]
			public SliderSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B5")]
		private class ScrollbarSettings : SelectableSettings_Base
		{
			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x600136C")]
			[Address(RVA = "0x7E8CA8", Offset = "0x7E8CA8", VA = "0x7E8CA8")]
			private void Apply(Scrollbar item)
			{
			}

			[Token(Token = "0x600136D")]
			[Address(RVA = "0x7E8DD0", Offset = "0x7E8DD0", VA = "0x7E8DD0", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x600136E")]
			[Address(RVA = "0x7E8E5C", Offset = "0x7E8E5C", VA = "0x7E8E5C")]
			public ScrollbarSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B6")]
		private class ImageSettings
		{
			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite _sprite;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Material _materal;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Image.Type _type;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private bool _preserveAspect;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			private bool _fillCenter;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Image.FillMethod _fillMethod;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private float _fillAmout;

			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private bool _fillClockwise;

			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			private int _fillOrigin;

			[Token(Token = "0x170003E7")]
			public Color color
			{
				[Token(Token = "0x600136F")]
				[Address(RVA = "0x7E8E64", Offset = "0x7E8E64", VA = "0x7E8E64")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x6001370")]
			[Address(RVA = "0x7E8E70", Offset = "0x7E8E70", VA = "0x7E8E70", Slot = "4")]
			public virtual void CopyTo(Image image)
			{
			}

			[Token(Token = "0x6001371")]
			[Address(RVA = "0x7E8FA8", Offset = "0x7E8FA8", VA = "0x7E8FA8")]
			public ImageSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002B7")]
		private struct CustomColorBlock
		{
			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private float m_ColorMultiplier;

			[Token(Token = "0x40017A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			private Color m_DisabledColor;

			[Token(Token = "0x40017A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private float m_FadeDuration;

			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Color m_HighlightedColor;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Color m_NormalColor;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Color m_PressedColor;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Color m_SelectedColor;

			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Color m_DisabledHighlightedColor;

			[Token(Token = "0x170003E8")]
			public float fadeDuration
			{
				[Token(Token = "0x6001372")]
				[Address(RVA = "0x7E8FB8", Offset = "0x7E8FB8", VA = "0x7E8FB8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001373")]
				[Address(RVA = "0x7E8FC0", Offset = "0x7E8FC0", VA = "0x7E8FC0")]
				set
				{
				}
			}

			[Token(Token = "0x170003E9")]
			public Color disabledHighlightedColor
			{
				[Token(Token = "0x6001374")]
				[Address(RVA = "0x7E8FC8", Offset = "0x7E8FC8", VA = "0x7E8FC8")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x6001375")]
			[Address(RVA = "0x7E8864", Offset = "0x7E8864", VA = "0x7E8864")]
			public static implicit operator ColorBlock(CustomColorBlock item)
			{
				return default(ColorBlock);
			}
		}

		[Serializable]
		[Token(Token = "0x20002B8")]
		private struct CustomSpriteState
		{
			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Sprite m_DisabledSprite;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private Sprite m_HighlightedSprite;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Sprite m_PressedSprite;

			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Sprite m_SelectedSprite;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite m_DisabledHighlightedSprite;

			[Token(Token = "0x170003EA")]
			public Sprite disabledHighlightedSprite
			{
				[Token(Token = "0x6001376")]
				[Address(RVA = "0x7E8FD4", Offset = "0x7E8FD4", VA = "0x7E8FD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001377")]
			[Address(RVA = "0x7E8894", Offset = "0x7E8894", VA = "0x7E8894")]
			public static implicit operator SpriteState(CustomSpriteState item)
			{
				return default(SpriteState);
			}
		}

		[Serializable]
		[Token(Token = "0x20002B9")]
		private class CustomAnimationTriggers
		{
			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string m_DisabledTrigger;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string m_HighlightedTrigger;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string m_NormalTrigger;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private string m_PressedTrigger;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private string m_SelectedTrigger;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private string m_DisabledHighlightedTrigger;

			[Token(Token = "0x170003EB")]
			public string disabledTrigger
			{
				[Token(Token = "0x6001379")]
				[Address(RVA = "0x7E90B4", Offset = "0x7E90B4", VA = "0x7E90B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			public string highlightedTrigger
			{
				[Token(Token = "0x600137A")]
				[Address(RVA = "0x7E90BC", Offset = "0x7E90BC", VA = "0x7E90BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			public string normalTrigger
			{
				[Token(Token = "0x600137B")]
				[Address(RVA = "0x7E90C4", Offset = "0x7E90C4", VA = "0x7E90C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			public string pressedTrigger
			{
				[Token(Token = "0x600137C")]
				[Address(RVA = "0x7E90CC", Offset = "0x7E90CC", VA = "0x7E90CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			public string disabledHighlightedTrigger
			{
				[Token(Token = "0x600137D")]
				[Address(RVA = "0x7E90D4", Offset = "0x7E90D4", VA = "0x7E90D4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001378")]
			[Address(RVA = "0x7E8FDC", Offset = "0x7E8FDC", VA = "0x7E8FDC")]
			public CustomAnimationTriggers()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BA")]
		private class TextSettings
		{
			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Font _font;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private FontStyleOverride _style;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private float _sizeMultiplier;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private float _lineSpacing;

			[Token(Token = "0x170003F0")]
			public Color color
			{
				[Token(Token = "0x600137E")]
				[Address(RVA = "0x7E90DC", Offset = "0x7E90DC", VA = "0x7E90DC")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x170003F1")]
			public Font font
			{
				[Token(Token = "0x600137F")]
				[Address(RVA = "0x7E90E8", Offset = "0x7E90E8", VA = "0x7E90E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			public FontStyleOverride style
			{
				[Token(Token = "0x6001380")]
				[Address(RVA = "0x7E90F0", Offset = "0x7E90F0", VA = "0x7E90F0")]
				get
				{
					return default(FontStyleOverride);
				}
			}

			[Token(Token = "0x170003F3")]
			public float sizeMultiplier
			{
				[Token(Token = "0x6001381")]
				[Address(RVA = "0x7E90F8", Offset = "0x7E90F8", VA = "0x7E90F8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003F4")]
			public float lineSpacing
			{
				[Token(Token = "0x6001382")]
				[Address(RVA = "0x7E9100", Offset = "0x7E9100", VA = "0x7E9100")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001383")]
			[Address(RVA = "0x7E9108", Offset = "0x7E9108", VA = "0x7E9108")]
			public TextSettings()
			{
			}
		}

		[Token(Token = "0x20002BB")]
		private enum FontStyleOverride
		{
			[Token(Token = "0x40017C0")]
			Default,
			[Token(Token = "0x40017C1")]
			Normal,
			[Token(Token = "0x40017C2")]
			Bold,
			[Token(Token = "0x40017C3")]
			Italic,
			[Token(Token = "0x40017C4")]
			BoldAndItalic
		}

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImageSettings _mainWindowBackground;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageSettings _popupWindowBackground;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ImageSettings _areaBackground;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectableSettings _selectableSettings;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectableSettings _buttonSettings;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SelectableSettings _inputGridFieldSettings;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScrollbarSettings _scrollbarSettings;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderSettings _sliderSettings;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ImageSettings _invertToggle;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _invertToggleDisabledColor;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ImageSettings _calibrationBackground;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ImageSettings _calibrationValueMarker;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ImageSettings _calibrationRawValueMarker;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ImageSettings _calibrationZeroMarker;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ImageSettings _calibrationCalibratedZeroMarker;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ImageSettings _calibrationDeadzone;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextSettings _textSettings;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextSettings _buttonTextSettings;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextSettings _inputGridFieldTextSettings;

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x7E75A0", Offset = "0x7E75A0", VA = "0x7E75A0")]
		public void Apply(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x7E7610", Offset = "0x7E7610", VA = "0x7E7610")]
		private void Apply(string themeClass, Component component)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x7E7944", Offset = "0x7E7944", VA = "0x7E7944")]
		private void Apply(string themeClass, Selectable item)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x7E7C14", Offset = "0x7E7C14", VA = "0x7E7C14")]
		private void Apply(string themeClass, Image item)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x7E8014", Offset = "0x7E8014", VA = "0x7E8014")]
		private void Apply(string themeClass, Text item)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x7E8244", Offset = "0x7E8244", VA = "0x7E8244")]
		private void Apply(string themeClass, UIImageHelper item)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x7E82F8", Offset = "0x7E82F8", VA = "0x7E82F8")]
		private static FontStyle GetFontStyle(FontStyleOverride style)
		{
			return default(FontStyle);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x7E840C", Offset = "0x7E840C", VA = "0x7E840C")]
		public ThemeSettings()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AddComponentMenu("")]
	public class ToggleInfo : InputFieldInfo
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x7E9120", Offset = "0x7E9120", VA = "0x7E9120")]
		public ToggleInfo()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AddComponentMenu("")]
	public class UIControl : MonoBehaviour
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text title;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _id;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _showTitle;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _uidCounter;

		[Token(Token = "0x170003F5")]
		public int id
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x7E9128", Offset = "0x7E9128", VA = "0x7E9128")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F6")]
		public bool showTitle
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x7E91AC", Offset = "0x7E91AC", VA = "0x7E91AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x7E5028", Offset = "0x7E5028", VA = "0x7E5028")]
			set
			{
			}
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x7E9130", Offset = "0x7E9130", VA = "0x7E9130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x7E91B4", Offset = "0x7E91B4", VA = "0x7E91B4", Slot = "4")]
		public virtual void SetCancelCallback(Action cancelCallback)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x7E9148", Offset = "0x7E9148", VA = "0x7E9148")]
		private static int GetNextUid()
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x7E91B8", Offset = "0x7E91B8", VA = "0x7E91B8")]
		public UIControl()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AddComponentMenu("")]
	public class UIControlSet : MonoBehaviour
	{
		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text title;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, UIControl> _controls;

		[Token(Token = "0x170003F7")]
		private Dictionary<int, UIControl> controls
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x7E91C0", Offset = "0x7E91C0", VA = "0x7E91C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x7E404C", Offset = "0x7E404C", VA = "0x7E404C")]
		public void SetTitle(string text)
		{
		}

		[Token(Token = "0x600138E")]
		public T GetControl<T>(int uniqueId) where T : UIControl
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x7E4C5C", Offset = "0x7E4C5C", VA = "0x7E4C5C")]
		public UISliderControl CreateSlider(GameObject prefab, Sprite icon, float minValue, float maxValue, Action<int, float> valueChangedCallback, Action<int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x7E9254", Offset = "0x7E9254", VA = "0x7E9254")]
		public UIControlSet()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[AddComponentMenu("")]
	public abstract class UIElementInfo : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string identifier;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int intData;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text text;

		[Token(Token = "0x1400001B")]
		public event Action<GameObject> OnSelectedEvent
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x7E92BC", Offset = "0x7E92BC", VA = "0x7E92BC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x7E936C", Offset = "0x7E936C", VA = "0x7E936C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x7E941C", Offset = "0x7E941C", VA = "0x7E941C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x7E54CC", Offset = "0x7E54CC", VA = "0x7E54CC")]
		protected UIElementInfo()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[AddComponentMenu("")]
	public class UIGroup : MonoBehaviour
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x170003F8")]
		public string labelText
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x7E9454", Offset = "0x7E9454", VA = "0x7E9454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x7E9500", Offset = "0x7E9500", VA = "0x7E9500")]
			set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public Transform content
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x7E95A0", Offset = "0x7E95A0", VA = "0x7E95A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x7E95A8", Offset = "0x7E95A8", VA = "0x7E95A8")]
		public void SetLabelActive(bool state)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x7E964C", Offset = "0x7E964C", VA = "0x7E964C")]
		public UIGroup()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(Image))]
	public class UIImageHelper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C3")]
		private class State
		{
			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Color color;

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x7E9784", Offset = "0x7E9784", VA = "0x7E9784")]
			public void Set(Image image)
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x7E982C", Offset = "0x7E982C", VA = "0x7E982C")]
			public State()
			{
			}
		}

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private State enabledState;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private State disabledState;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool currentState;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x7E9654", Offset = "0x7E9654", VA = "0x7E9654")]
		public void SetEnabledState(bool newState)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x7E8300", Offset = "0x7E8300", VA = "0x7E8300")]
		public void SetEnabledStateColor(Color color)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x7E8320", Offset = "0x7E8320", VA = "0x7E8320")]
		public void SetDisabledStateColor(Color color)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x7E8340", Offset = "0x7E8340", VA = "0x7E8340")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x7E9824", Offset = "0x7E9824", VA = "0x7E9824")]
		public UIImageHelper()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public static class UISelectionUtility
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Selectable[] s_reusableAllSelectables;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x7E07E4", Offset = "0x7E07E4", VA = "0x7E07E4")]
		public static Selectable FindNextSelectable(Selectable selectable, Transform transform, Vector3 direction)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C5")]
	[AddComponentMenu("")]
	public class UISliderControl : UIControl
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image iconImage;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider slider;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _showIcon;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _showSlider;

		[Token(Token = "0x170003FA")]
		public bool showIcon
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x7E9D30", Offset = "0x7E9D30", VA = "0x7E9D30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x7E50C8", Offset = "0x7E50C8", VA = "0x7E50C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003FB")]
		public bool showSlider
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x7E9D38", Offset = "0x7E9D38", VA = "0x7E9D38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x7E9D40", Offset = "0x7E9D40", VA = "0x7E9D40")]
			set
			{
			}
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x7E9DE0", Offset = "0x7E9DE0", VA = "0x7E9DE0", Slot = "4")]
		public override void SetCancelCallback(Action cancelCallback)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x7EA210", Offset = "0x7EA210", VA = "0x7EA210")]
		public UISliderControl()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public static class UITools
	{
		[Token(Token = "0x60013AF")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name, Vector2 pivot, Vector2 anchorMin, Vector2 anchorMax, Vector2 anchoredPosition) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		private static GameObject InstantiateGUIObject_Pre<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x7E9834", Offset = "0x7E9834", VA = "0x7E9834")]
		public static Vector3 GetPointOnRectEdge(RectTransform rectTransform, Vector2 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x7E99C4", Offset = "0x7E99C4", VA = "0x7E99C4")]
		public static Rect TransformRectTo(Transform from, Transform to, Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x7E9C2C", Offset = "0x7E9C2C", VA = "0x7E9C2C")]
		public static Rect InvertY(Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x7D8BFC", Offset = "0x7D8BFC", VA = "0x7D8BFC")]
		public static void SetInteractable(Selectable selectable, bool state, bool playTransition)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(CanvasGroup))]
	public class Window : MonoBehaviour
	{
		[Token(Token = "0x20002C9")]
		public class Timer
		{
			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _started;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float end;

			[Token(Token = "0x17000407")]
			public bool started
			{
				[Token(Token = "0x60013E2")]
				[Address(RVA = "0x7EBA30", Offset = "0x7EBA30", VA = "0x7EBA30")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000408")]
			public bool finished
			{
				[Token(Token = "0x60013E3")]
				[Address(RVA = "0x7EBA38", Offset = "0x7EBA38", VA = "0x7EBA38")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000409")]
			public float remaining
			{
				[Token(Token = "0x60013E4")]
				[Address(RVA = "0x7EBA74", Offset = "0x7EBA74", VA = "0x7EBA74")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x7EA694", Offset = "0x7EA694", VA = "0x7EA694")]
			public Timer()
			{
			}

			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x7EBAA8", Offset = "0x7EBAA8", VA = "0x7EBAA8")]
			public void Start(float length)
			{
			}
		}

		[Token(Token = "0x20002CA")]
		[CompilerGenerated]
		private sealed class <OnEnableAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Window <>4__this;

			[Token(Token = "0x1700040A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013EA")]
				[Address(RVA = "0x7EBC58", Offset = "0x7EBC58", VA = "0x7EBC58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013EC")]
				[Address(RVA = "0x7EBCA0", Offset = "0x7EBCA0", VA = "0x7EBCA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x7EB884", Offset = "0x7EB884", VA = "0x7EB884")]
			[DebuggerHidden]
			public <OnEnableAsync>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x7EBADC", Offset = "0x7EBADC", VA = "0x7EBADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x7EBAE0", Offset = "0x7EBAE0", VA = "0x7EBAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x7EBC60", Offset = "0x7EBC60", VA = "0x7EBC60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image backgroundImage;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject content;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _id;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text _titleText;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Text> _contentText;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _defaultUIElement;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<int> _updateCallback;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Func<int, bool> _isFocusedCallback;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Timer _timer;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityAction cancelCallback;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject lastUISelection;

		[Token(Token = "0x170003FC")]
		public bool hasFocus
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x7EA260", Offset = "0x7EA260", VA = "0x7EA260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FD")]
		public int id
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x7EA284", Offset = "0x7EA284", VA = "0x7EA284")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FE")]
		public RectTransform rectTransform
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x7EA28C", Offset = "0x7EA28C", VA = "0x7EA28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		public Text titleText
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x7EA344", Offset = "0x7EA344", VA = "0x7EA344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		public List<Text> contentText
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x7EA34C", Offset = "0x7EA34C", VA = "0x7EA34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		public GameObject defaultUIElement
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x7EA354", Offset = "0x7EA354", VA = "0x7EA354")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x7EA35C", Offset = "0x7EA35C", VA = "0x7EA35C")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public Action<int> updateCallback
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x7EA364", Offset = "0x7EA364", VA = "0x7EA364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x7EA36C", Offset = "0x7EA36C", VA = "0x7EA36C")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public Timer timer
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x7EA374", Offset = "0x7EA374", VA = "0x7EA374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		public int width
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x7EA37C", Offset = "0x7EA37C", VA = "0x7EA37C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x7EA3B4", Offset = "0x7EA3B4", VA = "0x7EA3B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public int height
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x7EA408", Offset = "0x7EA408", VA = "0x7EA408")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x7EA440", Offset = "0x7EA440", VA = "0x7EA440")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		protected bool initialized
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x7EA494", Offset = "0x7EA494", VA = "0x7EA494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x7EA49C", Offset = "0x7EA49C", VA = "0x7EA49C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x7EA4E8", Offset = "0x7EA4E8", VA = "0x7EA4E8", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x7E38B8", Offset = "0x7E38B8", VA = "0x7E38B8", Slot = "5")]
		public virtual void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x7DF3A0", Offset = "0x7DF3A0", VA = "0x7DF3A0")]
		public void SetSize(int width, int height)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x7EA69C", Offset = "0x7EA69C", VA = "0x7EA69C")]
		public void CreateTitleText(GameObject prefab, Vector2 offset)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x7EA9E8", Offset = "0x7EA9E8", VA = "0x7EA9E8")]
		public void CreateTitleText(GameObject prefab, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x7EAAB0", Offset = "0x7EAAB0", VA = "0x7EAAB0")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x7EABF0", Offset = "0x7EABF0", VA = "0x7EABF0")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x7EADB8", Offset = "0x7EADB8", VA = "0x7EADB8")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x7EAFD0", Offset = "0x7EAFD0", VA = "0x7EAFD0")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x7EAFD4", Offset = "0x7EAFD4", VA = "0x7EAFD4")]
		public void CreateButton(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string buttonText, UnityAction confirmCallback, UnityAction cancelCallback, bool setDefault)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x7EB4EC", Offset = "0x7EB4EC", VA = "0x7EB4EC")]
		public string GetTitleText(string text)
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x7EAA10", Offset = "0x7EAA10", VA = "0x7EAA10")]
		public void SetTitleText(string text)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x7EB598", Offset = "0x7EB598", VA = "0x7EB598")]
		public string GetContentText(int index)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x7EB6A8", Offset = "0x7EB6A8", VA = "0x7EB6A8")]
		public float GetContentTextHeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x7EACC0", Offset = "0x7EACC0", VA = "0x7EACC0")]
		public void SetContentText(string text, int index)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x7EB7A4", Offset = "0x7EB7A4", VA = "0x7EB7A4")]
		public void SetUpdateCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x7E4B78", Offset = "0x7E4B78", VA = "0x7E4B78", Slot = "6")]
		public virtual void TakeInputFocus()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x7EB7AC", Offset = "0x7EB7AC", VA = "0x7EB7AC", Slot = "7")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x7EB7CC", Offset = "0x7EB7CC", VA = "0x7EB7CC", Slot = "8")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x7EB7EC", Offset = "0x7EB7EC", VA = "0x7EB7EC", Slot = "9")]
		public virtual void Cancel()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x7EA75C", Offset = "0x7EA75C", VA = "0x7EA75C")]
		private void CreateText(GameObject prefab, ref Text textComponent, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x7EAE70", Offset = "0x7EAE70", VA = "0x7EAE70")]
		private void CreateImage(GameObject prefab, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x7EB258", Offset = "0x7EB258", VA = "0x7EB258")]
		private GameObject CreateButton(GameObject prefab, string name, UIAnchor anchor, UIPivot pivot, Vector2 offset, out ButtonInfo buttonInfo)
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x7EB810", Offset = "0x7EB810", VA = "0x7EB810")]
		[IteratorStateMachine(typeof(<OnEnableAsync>d__64))]
		private IEnumerator OnEnableAsync()
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x7EA548", Offset = "0x7EA548", VA = "0x7EA548")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x7EB8AC", Offset = "0x7EB8AC", VA = "0x7EB8AC")]
		private void RestoreDefaultOrLastUISelection()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x7EB964", Offset = "0x7EB964", VA = "0x7EB964")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x7E5178", Offset = "0x7E5178", VA = "0x7E5178")]
		public Window()
		{
		}
	}
}
namespace Rewired.Demos
{
	[Token(Token = "0x20002CB")]
	[AddComponentMenu("")]
	public class ControlRemappingDemo1 : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		private class ControllerSelection
		{
			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _id;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _idPrev;

			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ControllerType _type;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private ControllerType _typePrev;

			[Token(Token = "0x1700040C")]
			public int id
			{
				[Token(Token = "0x6001429")]
				[Address(RVA = "0x7F6690", Offset = "0x7F6690", VA = "0x7F6690")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600142A")]
				[Address(RVA = "0x7F6698", Offset = "0x7F6698", VA = "0x7F6698")]
				set
				{
				}
			}

			[Token(Token = "0x1700040D")]
			public ControllerType type
			{
				[Token(Token = "0x600142B")]
				[Address(RVA = "0x7F66A4", Offset = "0x7F66A4", VA = "0x7F66A4")]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x600142C")]
				[Address(RVA = "0x7F66AC", Offset = "0x7F66AC", VA = "0x7F66AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700040E")]
			public bool hasSelection
			{
				[Token(Token = "0x600142D")]
				[Address(RVA = "0x7F66B8", Offset = "0x7F66B8", VA = "0x7F66B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x7F665C", Offset = "0x7F665C", VA = "0x7F665C")]
			public ControllerSelection()
			{
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x7F66C8", Offset = "0x7F66C8", VA = "0x7F66C8")]
			public void Set(int id, ControllerType type)
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x7F6680", Offset = "0x7F6680", VA = "0x7F6680")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x20002CD")]
		private class DialogHelper
		{
			[Token(Token = "0x20002CE")]
			public enum DialogType
			{
				[Token(Token = "0x4001818")]
				None = 0,
				[Token(Token = "0x4001819")]
				JoystickConflict = 1,
				[Token(Token = "0x400181A")]
				ElementConflict = 2,
				[Token(Token = "0x400181B")]
				KeyConflict = 3,
				[Token(Token = "0x400181C")]
				DeleteAssignmentConfirmation = 10,
				[Token(Token = "0x400181D")]
				AssignElement = 11
			}

			[Token(Token = "0x400180C")]
			private const float openBusyDelay = 0.25f;

			[Token(Token = "0x400180D")]
			private const float closeBusyDelay = 0.1f;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private DialogType _type;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool _enabled;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _busyTime;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool _busyTimerRunning;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Action<int> drawWindowDelegate;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GUI.WindowFunction drawWindowFunction;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WindowProperties windowProperties;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int currentActionId;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Action<int, UserResponse> resultCallback;

			[Token(Token = "0x1700040F")]
			private float busyTimer
			{
				[Token(Token = "0x6001430")]
				[Address(RVA = "0x7F66DC", Offset = "0x7F66DC", VA = "0x7F66DC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000410")]
			public bool enabled
			{
				[Token(Token = "0x6001431")]
				[Address(RVA = "0x7F6710", Offset = "0x7F6710", VA = "0x7F6710")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000411")]
			public DialogType type
			{
				[Token(Token = "0x6001432")]
				[Address(RVA = "0x7F6718", Offset = "0x7F6718", VA = "0x7F6718")]
				set
				{
				}
			}

			[Token(Token = "0x17000412")]
			public bool busy
			{
				[Token(Token = "0x6001433")]
				[Address(RVA = "0x7F67A8", Offset = "0x7F67A8", VA = "0x7F67A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001434")]
			[Address(RVA = "0x7F67B0", Offset = "0x7F67B0", VA = "0x7F67B0")]
			public DialogHelper()
			{
			}

			[Token(Token = "0x6001435")]
			[Address(RVA = "0x7F68A8", Offset = "0x7F68A8", VA = "0x7F68A8")]
			public void StartModal(int queueActionId, DialogType type, WindowProperties windowProperties, Action<int, UserResponse> resultCallback)
			{
			}

			[Token(Token = "0x6001436")]
			[Address(RVA = "0x7F68D8", Offset = "0x7F68D8", VA = "0x7F68D8")]
			public void StartModal(int queueActionId, DialogType type, WindowProperties windowProperties, Action<int, UserResponse> resultCallback, float openBusyDelay)
			{
			}

			[Token(Token = "0x6001437")]
			[Address(RVA = "0x7F6960", Offset = "0x7F6960", VA = "0x7F6960")]
			public void Update()
			{
			}

			[Token(Token = "0x6001438")]
			[Address(RVA = "0x7F69A0", Offset = "0x7F69A0", VA = "0x7F69A0")]
			public void Draw()
			{
			}

			[Token(Token = "0x6001439")]
			[Address(RVA = "0x7F6B48", Offset = "0x7F6B48", VA = "0x7F6B48")]
			public void DrawConfirmButton(string title)
			{
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x7F6D0C", Offset = "0x7F6D0C", VA = "0x7F6D0C")]
			public void DrawConfirmButton(UserResponse response, string title)
			{
			}

			[Token(Token = "0x600143B")]
			[Address(RVA = "0x7F6E60", Offset = "0x7F6E60", VA = "0x7F6E60")]
			public void DrawCancelButton()
			{
			}

			[Token(Token = "0x600143C")]
			[Address(RVA = "0x7F6EA8", Offset = "0x7F6EA8", VA = "0x7F6EA8")]
			public void DrawCancelButton(string title)
			{
			}

			[Token(Token = "0x600143D")]
			[Address(RVA = "0x7F7068", Offset = "0x7F7068", VA = "0x7F7068")]
			public void Confirm()
			{
			}

			[Token(Token = "0x600143E")]
			[Address(RVA = "0x7F6C8C", Offset = "0x7F6C8C", VA = "0x7F6C8C")]
			public void Confirm(UserResponse response)
			{
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0x7F6FE8", Offset = "0x7F6FE8", VA = "0x7F6FE8")]
			public void Cancel()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0x7F70C0", Offset = "0x7F70C0", VA = "0x7F70C0")]
			private void DrawWindow(int windowId)
			{
			}

			[Token(Token = "0x6001441")]
			[Address(RVA = "0x7F6B0C", Offset = "0x7F6B0C", VA = "0x7F6B0C")]
			private void UpdateTimers()
			{
			}

			[Token(Token = "0x6001442")]
			[Address(RVA = "0x7F70E8", Offset = "0x7F70E8", VA = "0x7F70E8")]
			private void StartBusyTimer(float time)
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0x7F7070", Offset = "0x7F7070", VA = "0x7F7070")]
			private void Close()
			{
			}

			[Token(Token = "0x6001444")]
			[Address(RVA = "0x7F6774", Offset = "0x7F6774", VA = "0x7F6774")]
			private void StateChanged(float delay)
			{
			}

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x7F711C", Offset = "0x7F711C", VA = "0x7F711C")]
			private void Reset()
			{
			}

			[Token(Token = "0x6001446")]
			[Address(RVA = "0x7F7138", Offset = "0x7F7138", VA = "0x7F7138")]
			private void ResetTimers()
			{
			}

			[Token(Token = "0x6001447")]
			[Address(RVA = "0x7F7140", Offset = "0x7F7140", VA = "0x7F7140")]
			public void FullReset()
			{
			}
		}

		[Token(Token = "0x20002CF")]
		private abstract class QueueEntry
		{
			[Token(Token = "0x20002D0")]
			public enum State
			{
				[Token(Token = "0x4001824")]
				Waiting,
				[Token(Token = "0x4001825")]
				Confirmed,
				[Token(Token = "0x4001826")]
				Canceled
			}

			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int uidCounter;

			[Token(Token = "0x17000413")]
			public int id
			{
				[Token(Token = "0x6001448")]
				[Address(RVA = "0x7F7174", Offset = "0x7F7174", VA = "0x7F7174")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001449")]
				[Address(RVA = "0x7F717C", Offset = "0x7F717C", VA = "0x7F717C")]
				[CompilerGenerated]
				protected set
				{
				}
			}

			[Token(Token = "0x17000414")]
			public QueueActionType queueActionType
			{
				[Token(Token = "0x600144A")]
				[Address(RVA = "0x7F7184", Offset = "0x7F7184", VA = "0x7F7184")]
				[CompilerGenerated]
				get
				{
					return default(QueueActionType);
				}
				[Token(Token = "0x600144B")]
				[Address(RVA = "0x7F718C", Offset = "0x7F718C", VA = "0x7F718C")]
				[CompilerGenerated]
				protected set
				{
				}
			}

			[Token(Token = "0x17000415")]
			public State state
			{
				[Token(Token = "0x600144C")]
				[Address(RVA = "0x7F7194", Offset = "0x7F7194", VA = "0x7F7194")]
				[CompilerGenerated]
				get
				{
					return default(State);
				}
				[Token(Token = "0x600144D")]
				[Address(RVA = "0x7F719C", Offset = "0x7F719C", VA = "0x7F719C")]
				[CompilerGenerated]
				protected set
				{
				}
			}

			[Token(Token = "0x17000416")]
			public UserResponse response
			{
				[Token(Token = "0x600144E")]
				[Address(RVA = "0x7F71A4", Offset = "0x7F71A4", VA = "0x7F71A4")]
				[CompilerGenerated]
				get
				{
					return default(UserResponse);
				}
				[Token(Token = "0x600144F")]
				[Address(RVA = "0x7F71AC", Offset = "0x7F71AC", VA = "0x7F71AC")]
				[CompilerGenerated]
				protected set
				{
				}
			}

			[Token(Token = "0x17000417")]
			protected static int nextId
			{
				[Token(Token = "0x6001450")]
				[Address(RVA = "0x7F71B4", Offset = "0x7F71B4", VA = "0x7F71B4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0x7F7204", Offset = "0x7F7204", VA = "0x7F7204")]
			public QueueEntry(QueueActionType queueActionType)
			{
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0x7F7270", Offset = "0x7F7270", VA = "0x7F7270")]
			public void Confirm(UserResponse response)
			{
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0x7F727C", Offset = "0x7F727C", VA = "0x7F727C")]
			public void Cancel()
			{
			}
		}

		[Token(Token = "0x20002D1")]
		private class JoystickAssignmentChange : QueueEntry
		{
			[Token(Token = "0x17000418")]
			public int playerId
			{
				[Token(Token = "0x6001454")]
				[Address(RVA = "0x7F7288", Offset = "0x7F7288", VA = "0x7F7288")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001455")]
				[Address(RVA = "0x7F7290", Offset = "0x7F7290", VA = "0x7F7290")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000419")]
			public int joystickId
			{
				[Token(Token = "0x6001456")]
				[Address(RVA = "0x7F7298", Offset = "0x7F7298", VA = "0x7F7298")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001457")]
				[Address(RVA = "0x7F72A0", Offset = "0x7F72A0", VA = "0x7F72A0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700041A")]
			public bool assign
			{
				[Token(Token = "0x6001458")]
				[Address(RVA = "0x7F72A8", Offset = "0x7F72A8", VA = "0x7F72A8")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001459")]
				[Address(RVA = "0x7F72B0", Offset = "0x7F72B0", VA = "0x7F72B0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x600145A")]
			[Address(RVA = "0x7F72BC", Offset = "0x7F72BC", VA = "0x7F72BC")]
			public JoystickAssignmentChange(int newPlayerId, int joystickId, bool assign)
			{
			}
		}

		[Token(Token = "0x20002D2")]
		private class ElementAssignmentChange : QueueEntry
		{
			[Token(Token = "0x1700041B")]
			public ElementAssignmentChangeType changeType
			{
				[Token(Token = "0x600145B")]
				[Address(RVA = "0x7F72FC", Offset = "0x7F72FC", VA = "0x7F72FC")]
				[CompilerGenerated]
				get
				{
					return default(ElementAssignmentChangeType);
				}
				[Token(Token = "0x600145C")]
				[Address(RVA = "0x7F7304", Offset = "0x7F7304", VA = "0x7F7304")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			public InputMapper.Context context
			{
				[Token(Token = "0x600145D")]
				[Address(RVA = "0x7F730C", Offset = "0x7F730C", VA = "0x7F730C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600145E")]
				[Address(RVA = "0x7F7314", Offset = "0x7F7314", VA = "0x7F7314")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x7F731C", Offset = "0x7F731C", VA = "0x7F731C")]
			public ElementAssignmentChange(ElementAssignmentChangeType changeType, InputMapper.Context context)
			{
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x7F7354", Offset = "0x7F7354", VA = "0x7F7354")]
			public ElementAssignmentChange(ElementAssignmentChange other)
			{
			}
		}

		[Token(Token = "0x20002D3")]
		private class FallbackJoystickIdentification : QueueEntry
		{
			[Token(Token = "0x1700041D")]
			public int joystickId
			{
				[Token(Token = "0x6001461")]
				[Address(RVA = "0x7F73A8", Offset = "0x7F73A8", VA = "0x7F73A8")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001462")]
				[Address(RVA = "0x7F73B0", Offset = "0x7F73B0", VA = "0x7F73B0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700041E")]
			public string joystickName
			{
				[Token(Token = "0x6001463")]
				[Address(RVA = "0x7F73B8", Offset = "0x7F73B8", VA = "0x7F73B8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001464")]
				[Address(RVA = "0x7F73C0", Offset = "0x7F73C0", VA = "0x7F73C0")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0x7F73C8", Offset = "0x7F73C8", VA = "0x7F73C8")]
			public FallbackJoystickIdentification(int joystickId, string joystickName)
			{
			}
		}

		[Token(Token = "0x20002D4")]
		private class Calibration : QueueEntry
		{
			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int selectedElementIdentifierId;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool recording;

			[Token(Token = "0x1700041F")]
			private Player player
			{
				[Token(Token = "0x6001466")]
				[Address(RVA = "0x7F7400", Offset = "0x7F7400", VA = "0x7F7400")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000420")]
			public Joystick joystick
			{
				[Token(Token = "0x6001467")]
				[Address(RVA = "0x7F7408", Offset = "0x7F7408", VA = "0x7F7408")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001468")]
				[Address(RVA = "0x7F7410", Offset = "0x7F7410", VA = "0x7F7410")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000421")]
			public CalibrationMap calibrationMap
			{
				[Token(Token = "0x6001469")]
				[Address(RVA = "0x7F7418", Offset = "0x7F7418", VA = "0x7F7418")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600146A")]
				[Address(RVA = "0x7F7420", Offset = "0x7F7420", VA = "0x7F7420")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0x7F7428", Offset = "0x7F7428", VA = "0x7F7428")]
			public Calibration(Player player, Joystick joystick, CalibrationMap calibrationMap)
			{
			}
		}

		[Token(Token = "0x20002D5")]
		private struct WindowProperties
		{
			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int windowId;

			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Rect rect;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<string, string> windowDrawDelegate;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string title;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;
		}

		[Token(Token = "0x20002D6")]
		private enum QueueActionType
		{
			[Token(Token = "0x4001839")]
			None,
			[Token(Token = "0x400183A")]
			JoystickAssignment,
			[Token(Token = "0x400183B")]
			ElementAssignment,
			[Token(Token = "0x400183C")]
			FallbackJoystickIdentification,
			[Token(Token = "0x400183D")]
			Calibrate
		}

		[Token(Token = "0x20002D7")]
		private enum ElementAssignmentChangeType
		{
			[Token(Token = "0x400183F")]
			Add,
			[Token(Token = "0x4001840")]
			Replace,
			[Token(Token = "0x4001841")]
			Remove,
			[Token(Token = "0x4001842")]
			ReassignOrRemove,
			[Token(Token = "0x4001843")]
			ConflictCheck
		}

		[Token(Token = "0x20002D8")]
		public enum UserResponse
		{
			[Token(Token = "0x4001845")]
			Confirm,
			[Token(Token = "0x4001846")]
			Cancel,
			[Token(Token = "0x4001847")]
			Custom1,
			[Token(Token = "0x4001848")]
			Custom2
		}

		[Token(Token = "0x40017F1")]
		private const float defaultModalWidth = 250f;

		[Token(Token = "0x40017F2")]
		private const float defaultModalHeight = 200f;

		[Token(Token = "0x40017F3")]
		private const float assignmentTimeout = 5f;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DialogHelper dialog;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputMapper inputMapper;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputMapper.ConflictFoundEventData conflictFoundEventData;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool guiState;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool busy;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool pageGUIState;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player selectedPlayer;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int selectedMapCategoryId;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ControllerSelection selectedController;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerMap selectedMap;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool showMenu;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool startListening;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 actionScrollPos;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector2 calibrateScrollPos;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<QueueEntry> actionQueue;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool setupFinished;

		[NonSerialized]
		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool initialized;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool isCompiling;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GUIStyle style_wordWrap;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GUIStyle style_centeredBox;

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x7EBCA8", Offset = "0x7EBCA8", VA = "0x7EBCA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x7EBFC4", Offset = "0x7EBFC4", VA = "0x7EBFC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x7EC0CC", Offset = "0x7EC0CC", VA = "0x7EC0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x7EBD18", Offset = "0x7EBD18", VA = "0x7EBD18")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x7EC504", Offset = "0x7EC504", VA = "0x7EC504")]
		private void Setup()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x7EBFC8", Offset = "0x7EBFC8", VA = "0x7EBFC8")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x7EC0E8", Offset = "0x7EC0E8", VA = "0x7EC0E8")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x7EC644", Offset = "0x7EC644", VA = "0x7EC644")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x7EC6B4", Offset = "0x7EC6B4", VA = "0x7EC6B4")]
		private void HandleMenuControl()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x7ED044", Offset = "0x7ED044", VA = "0x7ED044")]
		private void Close()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x7ED05C", Offset = "0x7ED05C", VA = "0x7ED05C")]
		private void Open()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x7EC81C", Offset = "0x7EC81C", VA = "0x7EC81C")]
		private void DrawInitialScreen()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x7ECD94", Offset = "0x7ECD94", VA = "0x7ECD94")]
		private void DrawPage()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x7ED1B8", Offset = "0x7ED1B8", VA = "0x7ED1B8")]
		private void DrawPlayerSelector()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x7EE024", Offset = "0x7EE024", VA = "0x7EE024")]
		private void DrawMouseAssignment()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x7ED854", Offset = "0x7ED854", VA = "0x7ED854")]
		private void DrawJoystickSelector()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x7EE64C", Offset = "0x7EE64C", VA = "0x7EE64C")]
		private void DrawControllerSelector()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x7EEF3C", Offset = "0x7EEF3C", VA = "0x7EEF3C")]
		private void DrawCalibrateButton()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x7EF288", Offset = "0x7EF288", VA = "0x7EF288")]
		private void DrawMapCategories()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x7EFA44", Offset = "0x7EFA44", VA = "0x7EFA44")]
		private void DrawCategoryActions()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x7F1440", Offset = "0x7F1440", VA = "0x7F1440")]
		private void DrawActionAssignmentButton(int playerId, InputAction action, AxisRange actionRange, ControllerSelection controller, ControllerMap controllerMap, ActionElementMap elementMap)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x7F1640", Offset = "0x7F1640", VA = "0x7F1640")]
		private void DrawInvertButton(int playerId, InputAction action, Pole actionAxisContribution, ControllerSelection controller, ControllerMap controllerMap, ActionElementMap elementMap)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x7F12A4", Offset = "0x7F12A4", VA = "0x7F12A4")]
		private void DrawAddActionMapButton(int playerId, InputAction action, AxisRange actionRange, ControllerSelection controller, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x7ECF98", Offset = "0x7ECF98", VA = "0x7ECF98")]
		private void ShowDialog()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x7F1740", Offset = "0x7F1740", VA = "0x7F1740")]
		private void DrawModalWindow(string title, string message)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x7F18A4", Offset = "0x7F18A4", VA = "0x7F18A4")]
		private void DrawModalWindow_OkayOnly(string title, string message)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x7F19F0", Offset = "0x7F19F0", VA = "0x7F19F0")]
		private void DrawElementAssignmentWindow(string title, string message)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x7F1CAC", Offset = "0x7F1CAC", VA = "0x7F1CAC")]
		private void DrawElementAssignmentProtectedConflictWindow(string title, string message)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x7F1E98", Offset = "0x7F1E98", VA = "0x7F1E98")]
		private void DrawElementAssignmentNormalConflictWindow(string title, string message)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x7F20B8", Offset = "0x7F20B8", VA = "0x7F20B8")]
		private void DrawReassignOrRemoveElementAssignmentWindow(string title, string message)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x7F2234", Offset = "0x7F2234", VA = "0x7F2234")]
		private void DrawFallbackJoystickIdentificationWindow(string title, string message)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x7F2518", Offset = "0x7F2518", VA = "0x7F2518")]
		private void DrawCalibrationWindow(string title, string message)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x7F3604", Offset = "0x7F3604", VA = "0x7F3604")]
		private void DialogResultCallback(int queueActionId, UserResponse response)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x7ED130", Offset = "0x7ED130", VA = "0x7ED130")]
		private Rect GetScreenCenteredRect(float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x7F1204", Offset = "0x7F1204", VA = "0x7F1204")]
		private void EnqueueAction(QueueEntry entry)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x7ECB38", Offset = "0x7ECB38", VA = "0x7ECB38")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x7F3794", Offset = "0x7F3794", VA = "0x7F3794")]
		private bool ProcessJoystickAssignmentChange(JoystickAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x7F3AA0", Offset = "0x7F3AA0", VA = "0x7F3AA0")]
		private bool ProcessElementAssignmentChange(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x7F3F18", Offset = "0x7F3F18", VA = "0x7F3F18")]
		private bool ProcessRemoveOrReassignElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x7F4184", Offset = "0x7F4184", VA = "0x7F4184")]
		private bool ProcessRemoveElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x7F4384", Offset = "0x7F4384", VA = "0x7F4384")]
		private bool ProcessAddOrReplaceElementAssignment(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x7F46D0", Offset = "0x7F46D0", VA = "0x7F46D0")]
		private bool ProcessElementAssignmentConflictCheck(ElementAssignmentChange entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x7F3B2C", Offset = "0x7F3B2C", VA = "0x7F3B2C")]
		private bool ProcessFallbackJoystickIdentification(FallbackJoystickIdentification entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x7F3D04", Offset = "0x7F3D04", VA = "0x7F3D04")]
		private bool ProcessCalibration(Calibration entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x7F4A9C", Offset = "0x7F4A9C", VA = "0x7F4A9C")]
		private void PlayerSelectionChanged()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x7F11F0", Offset = "0x7F11F0", VA = "0x7F11F0")]
		private void ControllerSelectionChanged()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x7F4AA0", Offset = "0x7F4AA0", VA = "0x7F4AA0")]
		private void ClearControllerSelection()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x7F4AD8", Offset = "0x7F4AD8", VA = "0x7F4AD8")]
		private void ClearMapSelection()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x7EC104", Offset = "0x7EC104", VA = "0x7EC104")]
		private void ResetAll()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x7ED068", Offset = "0x7ED068", VA = "0x7ED068")]
		private void ClearWorkingVars()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x7ECA68", Offset = "0x7ECA68", VA = "0x7ECA68")]
		private void SetGUIStateStart()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x7ECFB4", Offset = "0x7ECFB4", VA = "0x7ECFB4")]
		private void SetGUIStateEnd()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x7F4AEC", Offset = "0x7F4AEC", VA = "0x7F4AEC")]
		private void JoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x7F5014", Offset = "0x7F5014", VA = "0x7F5014")]
		private void JoystickPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x7F5558", Offset = "0x7F5558", VA = "0x7F5558")]
		private void JoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x7F55D4", Offset = "0x7F55D4", VA = "0x7F55D4")]
		private void OnConflictFound(InputMapper.ConflictFoundEventData data)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x7F55DC", Offset = "0x7F55DC", VA = "0x7F55DC")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x7EC120", Offset = "0x7EC120", VA = "0x7EC120")]
		public void IdentifyAllJoysticks()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x7F55E8", Offset = "0x7F55E8", VA = "0x7F55E8")]
		public ControlRemappingDemo1()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AddComponentMenu("")]
	public class CustomControllersTiltDemo : MonoBehaviour
	{
		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomController controller;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player player;

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x7F7494", Offset = "0x7F7494", VA = "0x7F7494")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x7F75F4", Offset = "0x7F75F4", VA = "0x7F75F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x7F77F4", Offset = "0x7F77F4", VA = "0x7F77F4")]
		private void OnInputUpdate()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x7F7860", Offset = "0x7F7860", VA = "0x7F7860")]
		public CustomControllersTiltDemo()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AddComponentMenu("")]
	public class CustomControllerDemo : MonoBehaviour
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string controllerTag;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useUpdateCallbacks;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int buttonCount;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int axisCount;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] axisValues;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] buttonValues;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchJoystickExample[] joysticks;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TouchButtonExample[] buttons;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CustomController controller;

		[NonSerialized]
		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool initialized;

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x7F7870", Offset = "0x7F7870", VA = "0x7F7870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x7F78B0", Offset = "0x7F78B0", VA = "0x7F78B0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x7F7C70", Offset = "0x7F7C70", VA = "0x7F7C70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x7F7D18", Offset = "0x7F7D18", VA = "0x7F7D18")]
		private void OnInputSourceUpdate()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x7F7D50", Offset = "0x7F7D50", VA = "0x7F7D50")]
		private void GetSourceAxisValues()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x7F7DDC", Offset = "0x7F7DDC", VA = "0x7F7DDC")]
		private void GetSourceButtonValues()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x7F7E4C", Offset = "0x7F7E4C", VA = "0x7F7E4C")]
		private void SetControllerAxisValues()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x7F7EB4", Offset = "0x7F7EB4", VA = "0x7F7EB4")]
		private void SetControllerButtonValues()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x7F7F1C", Offset = "0x7F7F1C", VA = "0x7F7F1C")]
		private float GetAxisValueCallback(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x7F7F54", Offset = "0x7F7F54", VA = "0x7F7F54")]
		private bool GetButtonValueCallback(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x7F7F98", Offset = "0x7F7F98", VA = "0x7F7F98")]
		public CustomControllerDemo()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(CharacterController))]
	public class CustomControllerDemo_Player : MonoBehaviour
	{
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player _player;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController cc;

		[Token(Token = "0x17000422")]
		private Player player
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0x7F7FA0", Offset = "0x7F7FA0", VA = "0x7F7FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x7F802C", Offset = "0x7F802C", VA = "0x7F802C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x7F8084", Offset = "0x7F8084", VA = "0x7F8084")]
		private void Update()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x7F8470", Offset = "0x7F8470", VA = "0x7F8470")]
		public CustomControllerDemo_Player()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(Image))]
	public class TouchButtonExample : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowMouseControl;

		[Token(Token = "0x17000423")]
		public bool isPressed
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x7F8484", Offset = "0x7F8484", VA = "0x7F8484")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x7F848C", Offset = "0x7F848C", VA = "0x7F848C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x7F8498", Offset = "0x7F8498", VA = "0x7F8498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x7F84BC", Offset = "0x7F84BC", VA = "0x7F84BC")]
		private void Restart()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x7F84C4", Offset = "0x7F84C4", VA = "0x7F84C4", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x7F8514", Offset = "0x7F8514", VA = "0x7F8514", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x7F84F4", Offset = "0x7F84F4", VA = "0x7F84F4")]
		private static bool IsMousePointerId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x7F8540", Offset = "0x7F8540", VA = "0x7F8540")]
		public TouchButtonExample()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[RequireComponent(typeof(Image))]
	[AddComponentMenu("")]
	public class TouchJoystickExample : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowMouseControl;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int radius;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 origAnchoredPosition;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 origWorldPosition;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 origScreenResolution;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ScreenOrientation origScreenOrientation;

		[NonSerialized]
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasFinger;

		[NonSerialized]
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int lastFingerId;

		[Token(Token = "0x17000424")]
		public Vector2 position
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x7F8550", Offset = "0x7F8550", VA = "0x7F8550")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x7F8558", Offset = "0x7F8558", VA = "0x7F8558")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x7F8560", Offset = "0x7F8560", VA = "0x7F8560")]
		private void Start()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x7F8644", Offset = "0x7F8644", VA = "0x7F8644")]
		private void Update()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x7F86AC", Offset = "0x7F86AC", VA = "0x7F86AC")]
		private void Restart()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x7F8588", Offset = "0x7F8588", VA = "0x7F8588")]
		private void StoreOrigValues()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x7F8758", Offset = "0x7F8758", VA = "0x7F8758")]
		private void UpdateValue(Vector3 value)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x7F8784", Offset = "0x7F8784", VA = "0x7F8784", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x7F87F4", Offset = "0x7F87F4", VA = "0x7F87F4", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x7F8830", Offset = "0x7F8830", VA = "0x7F8830", Slot = "6")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x7F87D4", Offset = "0x7F87D4", VA = "0x7F87D4")]
		private static bool IsMousePointerId(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x7F8974", Offset = "0x7F8974", VA = "0x7F8974")]
		public TouchJoystickExample()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AddComponentMenu("")]
	public class DualShock4SpecialFeaturesExample : MonoBehaviour
	{
		[Token(Token = "0x20002DF")]
		private class Touch
		{
			[Token(Token = "0x4001872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int touchId;

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x7FA2C8", Offset = "0x7FA2C8", VA = "0x7FA2C8")]
			public Touch()
			{
			}
		}

		[Token(Token = "0x4001869")]
		private const int maxTouches = 2;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform touchpadTransform;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject lightObject;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform accelerometerTransform;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Touch> touches;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<Touch> unusedTouches;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isFlashing;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GUIStyle textStyle;

		[Token(Token = "0x17000425")]
		private Player player
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x7F898C", Offset = "0x7F898C", VA = "0x7F898C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x7F89F4", Offset = "0x7F89F4", VA = "0x7F89F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x7F8C48", Offset = "0x7F8C48", VA = "0x7F8C48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x7F9BF4", Offset = "0x7F9BF4", VA = "0x7F9BF4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x7F9A30", Offset = "0x7F9A30", VA = "0x7F9A30")]
		private void ResetOrientation()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x7F98BC", Offset = "0x7F98BC", VA = "0x7F98BC")]
		private void SetRandomLightColor()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x7F9B6C", Offset = "0x7F9B6C", VA = "0x7F9B6C")]
		private void StartLightFlash()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x7F9AEC", Offset = "0x7F9AEC", VA = "0x7F9AEC")]
		private void StopLightFlash()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x7F9060", Offset = "0x7F9060", VA = "0x7F9060")]
		private IDualShock4Extension GetFirstDS4(Player player)
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x7F89F8", Offset = "0x7F89F8", VA = "0x7F89F8")]
		private void InitializeTouchObjects()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x7F939C", Offset = "0x7F939C", VA = "0x7F939C")]
		private void HandleTouchpad(IDualShock4Extension ds4)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x7FA2E0", Offset = "0x7FA2E0", VA = "0x7FA2E0")]
		public DualShock4SpecialFeaturesExample()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(CharacterController))]
	public class EightPlayersExample_Player : MonoBehaviour
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player player;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController cc;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 moveVector;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool fire;

		[NonSerialized]
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool initialized;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x7FA30C", Offset = "0x7FA30C", VA = "0x7FA30C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x7FA364", Offset = "0x7FA364", VA = "0x7FA364")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x7FA3E8", Offset = "0x7FA3E8", VA = "0x7FA3E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x7FA4A0", Offset = "0x7FA4A0", VA = "0x7FA4A0")]
		private void GetInput()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x7FA558", Offset = "0x7FA558", VA = "0x7FA558")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x7FA768", Offset = "0x7FA768", VA = "0x7FA768")]
		public EightPlayersExample_Player()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AddComponentMenu("")]
	public class FallbackJoystickIdentificationDemo : MonoBehaviour
	{
		[Token(Token = "0x400187E")]
		private const float windowWidth = 250f;

		[Token(Token = "0x400187F")]
		private const float windowHeight = 250f;

		[Token(Token = "0x4001880")]
		private const float inputDelay = 1f;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool identifyRequired;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<Joystick> joysticksToIdentify;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextInputAllowedTime;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle style;

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x7FA77C", Offset = "0x7FA77C", VA = "0x7FA77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x7FA9C4", Offset = "0x7FA9C4", VA = "0x7FA9C4")]
		private void JoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x7FA9C8", Offset = "0x7FA9C8", VA = "0x7FA9C8")]
		private void JoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x7FA89C", Offset = "0x7FA89C", VA = "0x7FA89C")]
		public void IdentifyAllJoysticks()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x7FA9F0", Offset = "0x7FA9F0", VA = "0x7FA9F0")]
		private void SetInputDelay()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x7FAA14", Offset = "0x7FAA14", VA = "0x7FAA14")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x7FACDC", Offset = "0x7FACDC", VA = "0x7FACDC")]
		private void DrawDialogWindow(int windowId)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x7FA9CC", Offset = "0x7FA9CC", VA = "0x7FA9CC")]
		private void Reset()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x7FAFB4", Offset = "0x7FAFB4", VA = "0x7FAFB4")]
		public FallbackJoystickIdentificationDemo()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AddComponentMenu("")]
	public class PlayerMouseSpriteExample : MonoBehaviour
	{
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The Player that will control the mouse")]
		public int playerId;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The Rewired Action used for the mouse horizontal axis.")]
		public string horizontalAction;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The Rewired Action used for the mouse vertical axis.")]
		public string verticalAction;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The Rewired Action used for the mouse wheel axis.")]
		public string wheelAction;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("The Rewired Action used for the mouse left button.")]
		public string leftButtonAction;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The Rewired Action used for the mouse right button.")]
		public string rightButtonAction;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("The Rewired Action used for the mouse middle button.")]
		public string middleButtonAction;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("The distance from the camera that the pointer will be drawn.")]
		public float distanceFromCamera;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("The scale of the sprite pointer.")]
		public float spriteScale;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The pointer prefab.")]
		public GameObject pointerPrefab;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("The click effect prefab.")]
		public GameObject clickEffectPrefab;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Should the hardware pointer be hidden?")]
		public bool hideHardwarePointer;

		[NonSerialized]
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject pointer;

		[NonSerialized]
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerMouse mouse;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x7FAFBC", Offset = "0x7FAFBC", VA = "0x7FAFBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x7FB2F4", Offset = "0x7FB2F4", VA = "0x7FB2F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x7FB670", Offset = "0x7FB670", VA = "0x7FB670")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x7FB4EC", Offset = "0x7FB4EC", VA = "0x7FB4EC")]
		private void CreateClickEffect(Color color)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x7FB278", Offset = "0x7FB278", VA = "0x7FB278")]
		private void OnScreenPositionChanged(Vector2 position)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x7FB76C", Offset = "0x7FB76C", VA = "0x7FB76C")]
		public PlayerMouseSpriteExample()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AddComponentMenu("")]
	public sealed class PlayerPointerEventHandlerExample : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerUpHandler, IPointerDownHandler, IPointerClickHandler, IScrollHandler, IBeginDragHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4001894")]
		private const int logLength = 10;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> log;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x7FB8A4", Offset = "0x7FB8A4", VA = "0x7FB8A4")]
		private void Log(string o)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x7FB99C", Offset = "0x7FB99C", VA = "0x7FB99C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x7FBB80", Offset = "0x7FBB80", VA = "0x7FBB80", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x7FBEF0", Offset = "0x7FBEF0", VA = "0x7FBEF0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x7FC1B4", Offset = "0x7FC1B4", VA = "0x7FC1B4", Slot = "6")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x7FC520", Offset = "0x7FC520", VA = "0x7FC520", Slot = "7")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x7FC88C", Offset = "0x7FC88C", VA = "0x7FC88C", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x7FCBF8", Offset = "0x7FCBF8", VA = "0x7FCBF8", Slot = "9")]
		public void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x7FCEBC", Offset = "0x7FCEBC", VA = "0x7FCEBC", Slot = "10")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x7FD228", Offset = "0x7FD228", VA = "0x7FD228", Slot = "11")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x7FD594", Offset = "0x7FD594", VA = "0x7FD594", Slot = "12")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x7FBE44", Offset = "0x7FBE44", VA = "0x7FBE44")]
		private static string GetSourceName(PlayerPointerEventData playerEventData)
		{
			return null;
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x7FD900", Offset = "0x7FD900", VA = "0x7FD900")]
		public PlayerPointerEventHandlerExample()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(RectTransform))]
	public sealed class UIPointer : UIBehaviour
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Should the hardware pointer be hidden?")]
		[SerializeField]
		private bool _hideHardwarePointer;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Tooltip("Sets the pointer to the last sibling in the parent hierarchy. Do not enable this on multiple UIPointers under the same parent transform or they will constantly fight each other for dominance.")]
		[SerializeField]
		private bool _autoSort;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Canvas _canvas;

		[Token(Token = "0x17000426")]
		public bool autoSort
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x7FD988", Offset = "0x7FD988", VA = "0x7FD988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x7FD990", Offset = "0x7FD990", VA = "0x7FD990")]
			set
			{
			}
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x7FD9D0", Offset = "0x7FD9D0", VA = "0x7FD9D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x7FDB2C", Offset = "0x7FDB2C", VA = "0x7FDB2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x7FDBB8", Offset = "0x7FDBB8", VA = "0x7FDBB8", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x7FDBD4", Offset = "0x7FDBD4", VA = "0x7FDBD4", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x7FDBF0", Offset = "0x7FDBF0", VA = "0x7FDBF0")]
		public void OnScreenPositionChanged(Vector2 screenPosition)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x7FDAB8", Offset = "0x7FDAB8", VA = "0x7FDAB8")]
		private void GetDependencies()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x7FDD84", Offset = "0x7FDD84", VA = "0x7FDD84")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AddComponentMenu("")]
	public class PressAnyButtonToJoinExample_Assigner : MonoBehaviour
	{
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x7FDD94", Offset = "0x7FDD94", VA = "0x7FDD94")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x7FDE34", Offset = "0x7FDE34", VA = "0x7FDE34")]
		private void AssignJoysticksToPlayers()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x7FE084", Offset = "0x7FE084", VA = "0x7FE084")]
		private Player FindPlayerWithoutJoystick()
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x7FE270", Offset = "0x7FE270", VA = "0x7FE270")]
		private bool DoAllPlayersHaveJoysticks()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x7FE288", Offset = "0x7FE288", VA = "0x7FE288")]
		public PressAnyButtonToJoinExample_Assigner()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(CharacterController))]
	public class PressAnyButtonToJoinExample_GamePlayer : MonoBehaviour
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController cc;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 moveVector;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fire;

		[Token(Token = "0x17000427")]
		private Player player
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x7FE290", Offset = "0x7FE290", VA = "0x7FE290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x7FE354", Offset = "0x7FE354", VA = "0x7FE354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x7FE3AC", Offset = "0x7FE3AC", VA = "0x7FE3AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x7FE460", Offset = "0x7FE460", VA = "0x7FE460")]
		private void GetInput()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x7FE524", Offset = "0x7FE524", VA = "0x7FE524")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x7FE734", Offset = "0x7FE734", VA = "0x7FE734")]
		public PressAnyButtonToJoinExample_GamePlayer()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[AddComponentMenu("")]
	public class PressStartToJoinExample_Assigner : MonoBehaviour
	{
		[Token(Token = "0x20002E9")]
		private class PlayerMap
		{
			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int rewiredPlayerId;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int gamePlayerId;

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x7FEDA4", Offset = "0x7FEDA4", VA = "0x7FEDA4")]
			public PlayerMap(int rewiredPlayerId, int gamePlayerId)
			{
			}
		}

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PressStartToJoinExample_Assigner instance;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxPlayers;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PlayerMap> playerMap;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int gamePlayerIdCounter;

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x7FE748", Offset = "0x7FE748", VA = "0x7FE748")]
		public static Player GetRewiredPlayer(int gamePlayerId)
		{
			return null;
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x7FE968", Offset = "0x7FE968", VA = "0x7FE968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x7FEA14", Offset = "0x7FEA14", VA = "0x7FEA14")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x7FEAF4", Offset = "0x7FEAF4", VA = "0x7FEAF4")]
		private void AssignNextPlayer(int rewiredPlayerId)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x7FED90", Offset = "0x7FED90", VA = "0x7FED90")]
		private int GetNextGamePlayerId()
		{
			return default(int);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x7FEDD0", Offset = "0x7FEDD0", VA = "0x7FEDD0")]
		public PressStartToJoinExample_Assigner()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[AddComponentMenu("")]
	[RequireComponent(typeof(CharacterController))]
	public class PressStartToJoinExample_GamePlayer : MonoBehaviour
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gamePlayerId;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bulletSpeed;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bulletPrefab;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController cc;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 moveVector;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool fire;

		[Token(Token = "0x17000428")]
		private Player player
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x7FEDE0", Offset = "0x7FEDE0", VA = "0x7FEDE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x7FEDE8", Offset = "0x7FEDE8", VA = "0x7FEDE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x7FEE40", Offset = "0x7FEE40", VA = "0x7FEE40")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x7FEEF4", Offset = "0x7FEEF4", VA = "0x7FEEF4")]
		private void GetInput()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x7FEFB8", Offset = "0x7FEFB8", VA = "0x7FEFB8")]
		private void ProcessInput()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x7FF1C8", Offset = "0x7FF1C8", VA = "0x7FF1C8")]
		public PressStartToJoinExample_GamePlayer()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[AddComponentMenu("")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifeTime;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool die;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deathTime;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x7FF1DC", Offset = "0x7FF1DC", VA = "0x7FF1DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x7FF214", Offset = "0x7FF214", VA = "0x7FF214")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x7FF2A8", Offset = "0x7FF2A8", VA = "0x7FF2A8")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AddComponentMenu("")]
	public class SimpleCombinedKeyboardMouseRemapping : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		private class Row
		{
			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputAction action;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AxisRange actionRange;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button button;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text text;

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x8008C4", Offset = "0x8008C4", VA = "0x8008C4")]
			public Row()
			{
			}
		}

		[Token(Token = "0x20002EE")]
		private struct TargetMapping
		{
			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ControllerMap controllerMap;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int actionElementMapId;
		}

		[Token(Token = "0x20002F0")]
		[CompilerGenerated]
		private sealed class <StartListeningDelayed>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleCombinedKeyboardMouseRemapping <>4__this;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ControllerMap keyboardMap;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int actionElementMapToReplaceId;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ControllerMap mouseMap;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014FA")]
				[Address(RVA = "0x801014", Offset = "0x801014", VA = "0x801014", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014FC")]
				[Address(RVA = "0x80105C", Offset = "0x80105C", VA = "0x80105C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x800AF8", Offset = "0x800AF8", VA = "0x800AF8")]
			[DebuggerHidden]
			public <StartListeningDelayed>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x800D40", Offset = "0x800D40", VA = "0x800D40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x800D44", Offset = "0x800D44", VA = "0x800D44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x80101C", Offset = "0x80101C", VA = "0x80101C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018B0")]
		private const string category = "Default";

		[Token(Token = "0x40018B1")]
		private const string layout = "Default";

		[Token(Token = "0x40018B2")]
		private const string uiCategory = "UI";

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputMapper inputMapper_keyboard;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InputMapper inputMapper_mouse;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject buttonPrefab;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textPrefab;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform fieldGroupTransform;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform actionGroupTransform;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text controllerNameUIText;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text statusUIText;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Row> rows;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetMapping _replaceTargetMapping;

		[Token(Token = "0x17000429")]
		private Player player
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x7FF2B8", Offset = "0x7FF2B8", VA = "0x7FF2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x7FF31C", Offset = "0x7FF31C", VA = "0x7FF31C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x7FFF68", Offset = "0x7FFF68", VA = "0x7FFF68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x7FFFB8", Offset = "0x7FFFB8", VA = "0x7FFFB8")]
		private void RedrawUI()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x800570", Offset = "0x800570", VA = "0x800570")]
		private void ClearUI()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x7FF5B0", Offset = "0x7FF5B0", VA = "0x7FF5B0")]
		private void InitializeUI()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x800658", Offset = "0x800658", VA = "0x800658")]
		private void CreateUIRow(InputAction action, AxisRange actionRange, string label)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x8008CC", Offset = "0x8008CC", VA = "0x8008CC")]
		private void OnInputFieldClicked(int index, int actionElementMapToReplaceId)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x800A3C", Offset = "0x800A3C", VA = "0x800A3C")]
		[IteratorStateMachine(typeof(<StartListeningDelayed>d__22))]
		private IEnumerator StartListeningDelayed(int index, ControllerMap keyboardMap, ControllerMap mouseMap, int actionElementMapToReplaceId)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x800B20", Offset = "0x800B20", VA = "0x800B20")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x800B94", Offset = "0x800B94", VA = "0x800B94")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x800C34", Offset = "0x800C34", VA = "0x800C34")]
		public SimpleCombinedKeyboardMouseRemapping()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AddComponentMenu("")]
	public class SimpleControlRemapping : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		private class Row
		{
			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputAction action;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AxisRange actionRange;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button button;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Text text;

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x8027A8", Offset = "0x8027A8", VA = "0x8027A8")]
			public Row()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[CompilerGenerated]
		private sealed class <StartListeningDelayed>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleControlRemapping <>4__this;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int actionElementMapToReplaceId;

			[Token(Token = "0x1700042F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001514")]
				[Address(RVA = "0x802E0C", Offset = "0x802E0C", VA = "0x802E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001516")]
				[Address(RVA = "0x802E54", Offset = "0x802E54", VA = "0x802E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x802A3C", Offset = "0x802A3C", VA = "0x802A3C")]
			[DebuggerHidden]
			public <StartListeningDelayed>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0x802BF4", Offset = "0x802BF4", VA = "0x802BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0x802BF8", Offset = "0x802BF8", VA = "0x802BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x802E14", Offset = "0x802E14", VA = "0x802E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018CD")]
		private const string category = "Default";

		[Token(Token = "0x40018CE")]
		private const string layout = "Default";

		[Token(Token = "0x40018CF")]
		private const string uiCategory = "UI";

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputMapper inputMapper;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject buttonPrefab;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject textPrefab;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform fieldGroupTransform;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform actionGroupTransform;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text controllerNameUIText;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text statusUIText;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ControllerType selectedControllerType;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int selectedControllerId;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Row> rows;

		[Token(Token = "0x1700042C")]
		private Player player
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x801064", Offset = "0x801064", VA = "0x801064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private ControllerMap controllerMap
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x8010C8", Offset = "0x8010C8", VA = "0x8010C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		private Controller controller
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x801178", Offset = "0x801178", VA = "0x801178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x8011A4", Offset = "0x8011A4", VA = "0x8011A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x801DB4", Offset = "0x801DB4", VA = "0x801DB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x801EAC", Offset = "0x801EAC", VA = "0x801EAC")]
		private void RedrawUI()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x802410", Offset = "0x802410", VA = "0x802410")]
		private void ClearUI()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x8013FC", Offset = "0x8013FC", VA = "0x8013FC")]
		private void InitializeUI()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x80253C", Offset = "0x80253C", VA = "0x80253C")]
		private void CreateUIRow(InputAction action, AxisRange actionRange, string label)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x8027B0", Offset = "0x8027B0", VA = "0x8027B0")]
		private void SetSelectedController(ControllerType controllerType)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x802914", Offset = "0x802914", VA = "0x802914")]
		public void OnControllerSelected(int controllerType)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x802918", Offset = "0x802918", VA = "0x802918")]
		private void OnInputFieldClicked(int index, int actionElementMapToReplaceId)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x8029B4", Offset = "0x8029B4", VA = "0x8029B4")]
		[IteratorStateMachine(typeof(<StartListeningDelayed>d__28))]
		private IEnumerator StartListeningDelayed(int index, int actionElementMapToReplaceId)
		{
			return null;
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x802A64", Offset = "0x802A64", VA = "0x802A64")]
		private void OnControllerChanged(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x802A6C", Offset = "0x802A6C", VA = "0x802A6C")]
		private void OnInputMapped(InputMapper.InputMappedEventData data)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x802A70", Offset = "0x802A70", VA = "0x802A70")]
		private void OnStopped(InputMapper.StoppedEventData data)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x802B10", Offset = "0x802B10", VA = "0x802B10")]
		public SimpleControlRemapping()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AddComponentMenu("")]
	public class ControlMapperDemoMessage : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[CompilerGenerated]
		private sealed class <SelectDefaultDeferred>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControlMapperDemoMessage <>4__this;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001521")]
				[Address(RVA = "0x803214", Offset = "0x803214", VA = "0x803214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001523")]
				[Address(RVA = "0x80325C", Offset = "0x80325C", VA = "0x80325C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600151E")]
			[Address(RVA = "0x803180", Offset = "0x803180", VA = "0x803180")]
			[DebuggerHidden]
			public <SelectDefaultDeferred>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x8031B0", Offset = "0x8031B0", VA = "0x8031B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x8031B4", Offset = "0x8031B4", VA = "0x8031B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001522")]
			[Address(RVA = "0x80321C", Offset = "0x80321C", VA = "0x80321C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlMapper controlMapper;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable defaultSelectable;

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x802E5C", Offset = "0x802E5C", VA = "0x802E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x802F88", Offset = "0x802F88", VA = "0x802F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x8030A8", Offset = "0x8030A8", VA = "0x8030A8")]
		private void OnControlMapperClosed()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x80315C", Offset = "0x80315C", VA = "0x80315C")]
		private void OnControlMapperOpened()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x802F8C", Offset = "0x802F8C", VA = "0x802F8C")]
		private void SelectDefault()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x8030E8", Offset = "0x8030E8", VA = "0x8030E8")]
		[IteratorStateMachine(typeof(<SelectDefaultDeferred>d__7))]
		private IEnumerator SelectDefaultDeferred()
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x8031A8", Offset = "0x8031A8", VA = "0x8031A8")]
		public ControlMapperDemoMessage()
		{
		}
	}
}
namespace Rewired.Demos.GamepadTemplateUI
{
	[Token(Token = "0x20002F7")]
	[RequireComponent(typeof(Image))]
	public class ControllerUIEffect : MonoBehaviour
	{
		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _highlightColor;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image _image;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _color;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _origColor;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isActive;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _highlightAmount;

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x803264", Offset = "0x803264", VA = "0x803264")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x8032F0", Offset = "0x8032F0", VA = "0x8032F0")]
		public void Activate(float amount)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x80338C", Offset = "0x80338C", VA = "0x80338C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x803348", Offset = "0x803348", VA = "0x803348")]
		private void RedrawImage()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x8033AC", Offset = "0x8033AC", VA = "0x8033AC")]
		public ControllerUIEffect()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[RequireComponent(typeof(Image))]
	public class ControllerUIElement : MonoBehaviour
	{
		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _highlightColor;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ControllerUIEffect _positiveUIEffect;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ControllerUIEffect _negativeUIEffect;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text _positiveLabel;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text _negativeLabel;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ControllerUIElement[] _childElements;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _image;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _color;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _origColor;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isActive;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _highlightAmount;

		[Token(Token = "0x17000433")]
		private bool hasEffects
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x8033BC", Offset = "0x8033BC", VA = "0x8033BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x803454", Offset = "0x803454", VA = "0x803454")]
		private void Awake()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x8036B8", Offset = "0x8036B8", VA = "0x8036B8")]
		public void Activate(float amount)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x8038C4", Offset = "0x8038C4", VA = "0x8038C4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x803A58", Offset = "0x803A58", VA = "0x803A58")]
		public void SetLabel(string text, AxisRange labelType)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x8034E4", Offset = "0x8034E4", VA = "0x8034E4")]
		public void ClearLabels()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x803894", Offset = "0x803894", VA = "0x803894")]
		private void RedrawImage()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x803BBC", Offset = "0x803BBC", VA = "0x803BBC")]
		public ControllerUIElement()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class GamepadTemplateUI : MonoBehaviour
	{
		[Token(Token = "0x20002FA")]
		private class Stick
		{
			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RectTransform _transform;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 _origPosition;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int _xAxisElementId;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _yAxisElementId;

			[Token(Token = "0x17000435")]
			public Vector2 position
			{
				[Token(Token = "0x600153F")]
				[Address(RVA = "0x806004", Offset = "0x806004", VA = "0x806004")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6001540")]
				[Address(RVA = "0x8060C4", Offset = "0x8060C4", VA = "0x8060C4")]
				set
				{
				}
			}

			[Token(Token = "0x6001541")]
			[Address(RVA = "0x804880", Offset = "0x804880", VA = "0x804880")]
			public Stick(RectTransform transform, int xAxisElementId, int yAxisElementId)
			{
			}

			[Token(Token = "0x6001542")]
			[Address(RVA = "0x804F60", Offset = "0x804F60", VA = "0x804F60")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001543")]
			[Address(RVA = "0x805E84", Offset = "0x805E84", VA = "0x805E84")]
			public bool ContainsElement(int elementId)
			{
				return default(bool);
			}

			[Token(Token = "0x6001544")]
			[Address(RVA = "0x805538", Offset = "0x805538", VA = "0x805538")]
			public void SetAxisPosition(int elementId, float value)
			{
			}
		}

		[Token(Token = "0x20002FB")]
		private class UIElement
		{
			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControllerUIElement element;

			[Token(Token = "0x6001545")]
			[Address(RVA = "0x804848", Offset = "0x804848", VA = "0x804848")]
			public UIElement(int id, ControllerUIElement element)
			{
			}
		}

		[Token(Token = "0x40018FD")]
		private const float stickRadius = 20f;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform leftStick;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform rightStick;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ControllerUIElement leftStickX;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ControllerUIElement leftStickY;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ControllerUIElement leftStickButton;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ControllerUIElement rightStickX;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ControllerUIElement rightStickY;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ControllerUIElement rightStickButton;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ControllerUIElement actionBottomRow1;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ControllerUIElement actionBottomRow2;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ControllerUIElement actionBottomRow3;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ControllerUIElement actionTopRow1;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ControllerUIElement actionTopRow2;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ControllerUIElement actionTopRow3;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ControllerUIElement leftShoulder;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ControllerUIElement leftTrigger;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ControllerUIElement rightShoulder;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ControllerUIElement rightTrigger;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ControllerUIElement center1;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ControllerUIElement center2;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ControllerUIElement center3;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ControllerUIElement dPadUp;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ControllerUIElement dPadRight;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ControllerUIElement dPadDown;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private ControllerUIElement dPadLeft;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private UIElement[] _uiElementsArray;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<int, ControllerUIElement> _uiElements;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IList<ControllerTemplateElementTarget> _tempTargetList;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Stick[] _sticks;

		[Token(Token = "0x17000434")]
		private Player player
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x803C28", Offset = "0x803C28", VA = "0x803C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x803C90", Offset = "0x803C90", VA = "0x803C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x804944", Offset = "0x804944", VA = "0x804944")]
		private void Start()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x804BB8", Offset = "0x804BB8", VA = "0x804BB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x804CA4", Offset = "0x804CA4", VA = "0x804CA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x804D44", Offset = "0x804D44", VA = "0x804D44")]
		private void DrawActiveElements()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x804FE8", Offset = "0x804FE8", VA = "0x804FE8")]
		private void ActivateElements(Player player, int actionId)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x8049E4", Offset = "0x8049E4", VA = "0x8049E4")]
		private void DrawLabels()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x8055F8", Offset = "0x8055F8", VA = "0x8055F8")]
		private void DrawLabels(Player player, InputAction action)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x8057A4", Offset = "0x8057A4", VA = "0x8057A4")]
		private void DrawLabel(ControllerUIElement uiElement, InputAction action, ControllerMap controllerMap, IControllerTemplate template, IControllerTemplateElement element)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x8054A8", Offset = "0x8054A8", VA = "0x8054A8")]
		private Stick GetStick(int elementId)
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x805F20", Offset = "0x805F20", VA = "0x805F20")]
		private void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x805F24", Offset = "0x805F24", VA = "0x805F24")]
		private void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x805F28", Offset = "0x805F28", VA = "0x805F28")]
		public GamepadTemplateUI()
		{
		}
	}
}
namespace UnityEngine.PostProcessing
{
	[Token(Token = "0x20002FC")]
	public sealed class GetSetAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x806168", Offset = "0x806168", VA = "0x806168")]
		public GetSetAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x806198", Offset = "0x806198", VA = "0x806198")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public sealed class TrackballAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string method;

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x8061C0", Offset = "0x8061C0", VA = "0x8061C0")]
		public TrackballAttribute(string method)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public sealed class TrackballGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001549")]
		[Address(RVA = "0x8061F0", Offset = "0x8061F0", VA = "0x8061F0")]
		public TrackballGroupAttribute()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public sealed class AmbientOcclusionComponent : PostProcessingComponentCommandBuffer<AmbientOcclusionModel>
	{
		[Token(Token = "0x2000301")]
		private static class Uniforms
		{
			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Intensity;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Radius;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _FogParams;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Downsample;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleCount;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _OcclusionTexture1;

			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _OcclusionTexture2;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _OcclusionTexture;

			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x2000302")]
		private enum OcclusionSource
		{
			[Token(Token = "0x4001933")]
			DepthTexture,
			[Token(Token = "0x4001934")]
			DepthNormalsTexture,
			[Token(Token = "0x4001935")]
			GBuffer
		}

		[Token(Token = "0x4001925")]
		private const string k_BlitShaderString = "Hidden/Post FX/Blit";

		[Token(Token = "0x4001926")]
		private const string k_ShaderString = "Hidden/Post FX/Ambient Occlusion";

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTargetIdentifier[] m_MRT;

		[Token(Token = "0x17000436")]
		private OcclusionSource occlusionSource
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x8061F8", Offset = "0x8061F8", VA = "0x8061F8")]
			get
			{
				return default(OcclusionSource);
			}
		}

		[Token(Token = "0x17000437")]
		private bool ambientOnlySupported
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x80629C", Offset = "0x80629C", VA = "0x80629C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000438")]
		public override bool active
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x80632C", Offset = "0x80632C", VA = "0x80632C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x8063A0", Offset = "0x8063A0", VA = "0x8063A0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x8063D8", Offset = "0x8063D8", VA = "0x8063D8", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x806418", Offset = "0x806418", VA = "0x806418", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x806470", Offset = "0x806470", VA = "0x806470", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x806E34", Offset = "0x806E34", VA = "0x806E34")]
		public AmbientOcclusionComponent()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public sealed class BloomComponent : PostProcessingComponentRenderTexture<BloomModel>
	{
		[Token(Token = "0x2000304")]
		private static class Uniforms
		{
			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Threshold;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Curve;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _PrefilterOffs;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _SampleScale;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _BaseTex;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _BloomTex;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Bloom_Settings;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Bloom_DirtTex;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Bloom_DirtIntensity;
		}

		[Token(Token = "0x4001936")]
		private const int k_MaxPyramidBlurLevel = 16;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderTexture[] m_BlurBuffer1;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly RenderTexture[] m_BlurBuffer2;

		[Token(Token = "0x17000439")]
		public override bool active
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x80716C", Offset = "0x80716C", VA = "0x80716C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x8071E0", Offset = "0x8071E0", VA = "0x8071E0")]
		public void Prepare(RenderTexture source, Material uberMaterial, Texture autoExposure)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x807B34", Offset = "0x807B34", VA = "0x807B34")]
		public BloomComponent()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public sealed class BuiltinDebugViewsComponent : PostProcessingComponentCommandBuffer<BuiltinDebugViewsModel>
	{
		[Token(Token = "0x2000306")]
		private static class Uniforms
		{
			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthScale;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _TempRT;

			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Opacity;

			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT2;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Amplitude;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Scale;
		}

		[Token(Token = "0x2000307")]
		private class ArrowArray
		{
			[Token(Token = "0x1700043B")]
			public Mesh mesh
			{
				[Token(Token = "0x6001563")]
				[Address(RVA = "0x808F84", Offset = "0x808F84", VA = "0x808F84")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001564")]
				[Address(RVA = "0x808F8C", Offset = "0x808F8C", VA = "0x808F8C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700043C")]
			public int columnCount
			{
				[Token(Token = "0x6001565")]
				[Address(RVA = "0x808F94", Offset = "0x808F94", VA = "0x808F94")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001566")]
				[Address(RVA = "0x808F9C", Offset = "0x808F9C", VA = "0x808F9C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700043D")]
			public int rowCount
			{
				[Token(Token = "0x6001567")]
				[Address(RVA = "0x808FA4", Offset = "0x808FA4", VA = "0x808FA4")]
				[CompilerGenerated]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001568")]
				[Address(RVA = "0x808FAC", Offset = "0x808FAC", VA = "0x808FAC")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001569")]
			[Address(RVA = "0x808934", Offset = "0x808934", VA = "0x808934")]
			public void BuildMesh(int columns, int rows)
			{
			}

			[Token(Token = "0x600156A")]
			[Address(RVA = "0x80890C", Offset = "0x80890C", VA = "0x80890C")]
			public void Release()
			{
			}

			[Token(Token = "0x600156B")]
			[Address(RVA = "0x808904", Offset = "0x808904", VA = "0x808904")]
			public ArrowArray()
			{
			}
		}

		[Token(Token = "0x4001943")]
		private const string k_ShaderString = "Hidden/Post FX/Builtin Debug Views";

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArrowArray m_Arrows;

		[Token(Token = "0x1700043A")]
		public override bool active
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x807DE4", Offset = "0x807DE4", VA = "0x807DE4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x807E70", Offset = "0x807E70", VA = "0x807E70", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x807ED8", Offset = "0x807ED8", VA = "0x807ED8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x807F30", Offset = "0x807F30", VA = "0x807F30", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x807F70", Offset = "0x807F70", VA = "0x807F70", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x808090", Offset = "0x808090", VA = "0x808090")]
		private void DepthPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x8081A8", Offset = "0x8081A8", VA = "0x8081A8")]
		private void DepthNormalsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x80826C", Offset = "0x80826C", VA = "0x80826C")]
		private void MotionVectorsPass(CommandBuffer cb)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x8087F4", Offset = "0x8087F4", VA = "0x8087F4")]
		private void PrepareArrows()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x808D6C", Offset = "0x808D6C", VA = "0x808D6C", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x808DB4", Offset = "0x808DB4", VA = "0x808DB4")]
		public BuiltinDebugViewsComponent()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public sealed class ChromaticAberrationComponent : PostProcessingComponentRenderTexture<ChromaticAberrationModel>
	{
		[Token(Token = "0x2000309")]
		private static class Uniforms
		{
			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _ChromaticAberration_Amount;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ChromaticAberration_Spectrum;
		}

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_SpectrumLut;

		[Token(Token = "0x1700043E")]
		public override bool active
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x808FB4", Offset = "0x808FB4", VA = "0x808FB4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x809028", Offset = "0x809028", VA = "0x809028", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x809050", Offset = "0x809050", VA = "0x809050", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x8092D8", Offset = "0x8092D8", VA = "0x8092D8")]
		public ChromaticAberrationComponent()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public sealed class ColorGradingComponent : PostProcessingComponentRenderTexture<ColorGradingModel>
	{
		[Token(Token = "0x200030B")]
		private static class Uniforms
		{
			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _LutParams;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _NeutralTonemapperParams1;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _NeutralTonemapperParams2;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _HueShift;

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Saturation;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Contrast;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Balance;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Lift;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _InvGamma;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _Gain;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _Slope;

			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _Power;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _Offset;

			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _ChannelMixerRed;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _ChannelMixerGreen;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _ChannelMixerBlue;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Curves;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _LogLut;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LogLut_Params;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ExposureEV;
		}

		[Token(Token = "0x4001952")]
		private const int k_InternalLogLutSize = 32;

		[Token(Token = "0x4001953")]
		private const int k_CurvePrecision = 128;

		[Token(Token = "0x4001954")]
		private const float k_CurveStep = 1f / 128f;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_GradingCurves;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_pixels;

		[Token(Token = "0x1700043F")]
		public override bool active
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x8093BC", Offset = "0x8093BC", VA = "0x8093BC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x809424", Offset = "0x809424", VA = "0x809424")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x809450", Offset = "0x809450", VA = "0x809450")]
		private Vector3 CIExyToLMS(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x8094E0", Offset = "0x8094E0", VA = "0x8094E0")]
		private Vector3 CalculateColorBalance(float temperature, float tint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x8095E4", Offset = "0x8095E4", VA = "0x8095E4")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x8096B0", Offset = "0x8096B0", VA = "0x8096B0")]
		private static Vector3 ClampVector(Vector3 v, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x8096E4", Offset = "0x8096E4", VA = "0x8096E4")]
		public static Vector3 GetLiftValue(Color lift)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x809768", Offset = "0x809768", VA = "0x809768")]
		public static Vector3 GetGammaValue(Color gamma)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x80984C", Offset = "0x80984C", VA = "0x80984C")]
		public static Vector3 GetGainValue(Color gain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x809904", Offset = "0x809904", VA = "0x809904")]
		public static void CalculateLiftGammaGain(Color lift, Color gamma, Color gain, out Vector3 outLift, out Vector3 outGamma, out Vector3 outGain)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x8099A0", Offset = "0x8099A0", VA = "0x8099A0")]
		public static Vector3 GetSlopeValue(Color slope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x809A3C", Offset = "0x809A3C", VA = "0x809A3C")]
		public static Vector3 GetPowerValue(Color power)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x809AF4", Offset = "0x809AF4", VA = "0x809AF4")]
		public static Vector3 GetOffsetValue(Color offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x809B88", Offset = "0x809B88", VA = "0x809B88")]
		public static void CalculateSlopePowerOffset(Color slope, Color power, Color offset, out Vector3 outSlope, out Vector3 outPower, out Vector3 outOffset)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x809C24", Offset = "0x809C24", VA = "0x809C24")]
		private TextureFormat GetCurveFormat()
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x809C4C", Offset = "0x809C4C", VA = "0x809C4C")]
		private Texture2D GetCurveTexture()
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x809F80", Offset = "0x809F80", VA = "0x809F80")]
		private bool IsLogLutValid(RenderTexture lut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x80A01C", Offset = "0x80A01C", VA = "0x80A01C")]
		private RenderTextureFormat GetLutFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x80A040", Offset = "0x80A040", VA = "0x80A040")]
		private void GenerateLut()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x80A7DC", Offset = "0x80A7DC", VA = "0x80A7DC", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x80A9BC", Offset = "0x80A9BC", VA = "0x80A9BC")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x80AADC", Offset = "0x80AADC", VA = "0x80AADC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x80AB60", Offset = "0x80AB60", VA = "0x80AB60")]
		public ColorGradingComponent()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public sealed class DepthOfFieldComponent : PostProcessingComponentRenderTexture<DepthOfFieldModel>
	{
		[Token(Token = "0x200030D")]
		private static class Uniforms
		{
			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DepthOfFieldTex;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DepthOfFieldCoCTex;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Distance;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _LensCoeff;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MaxCoC;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _RcpMaxCoC;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _RcpAspect;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _MainTex;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _CoCTex;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TaaParams;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _DepthOfFieldParams;
		}

		[Token(Token = "0x400196B")]
		private const string k_ShaderString = "Hidden/Post FX/Depth Of Field";

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_CoCHistory;

		[Token(Token = "0x400196D")]
		private const float k_FilmHeight = 0.024f;

		[Token(Token = "0x17000440")]
		public override bool active
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x80AFAC", Offset = "0x80AFAC", VA = "0x80AFAC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x80B014", Offset = "0x80B014", VA = "0x80B014", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x80B01C", Offset = "0x80B01C", VA = "0x80B01C")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x80B0B8", Offset = "0x80B0B8", VA = "0x80B0B8")]
		private float CalculateMaxCoCRadius(int screenHeight)
		{
			return default(float);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x80B12C", Offset = "0x80B12C", VA = "0x80B12C")]
		private bool CheckHistory(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x80B1FC", Offset = "0x80B1FC", VA = "0x80B1FC")]
		private RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x80B248", Offset = "0x80B248", VA = "0x80B248")]
		public void Prepare(RenderTexture source, Material uberMaterial, bool antialiasCoC, Vector2 taaJitter, float taaBlending)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x80B978", Offset = "0x80B978", VA = "0x80B978", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x80B9F8", Offset = "0x80B9F8", VA = "0x80B9F8")]
		public DepthOfFieldComponent()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public sealed class DitheringComponent : PostProcessingComponentRenderTexture<DitheringModel>
	{
		[Token(Token = "0x200030F")]
		private static class Uniforms
		{
			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _DitheringTex;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _DitheringCoords;
		}

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D[] noiseTextures;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int textureIndex;

		[Token(Token = "0x400197B")]
		private const int k_TextureCount = 64;

		[Token(Token = "0x17000441")]
		public override bool active
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x80BC80", Offset = "0x80BC80", VA = "0x80BC80", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x80BCE8", Offset = "0x80BCE8", VA = "0x80BCE8", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x80BCF4", Offset = "0x80BCF4", VA = "0x80BCF4")]
		private void LoadNoiseTextures()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x80BE20", Offset = "0x80BE20", VA = "0x80BE20", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x80BFC0", Offset = "0x80BFC0", VA = "0x80BFC0")]
		public DitheringComponent()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public sealed class EyeAdaptationComponent : PostProcessingComponentRenderTexture<EyeAdaptationModel>
	{
		[Token(Token = "0x2000311")]
		private static class Uniforms
		{
			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Params;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Speed;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _ScaleOffsetRes;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _ExposureCompensation;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AutoExposure;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _DebugWidth;
		}

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ComputeShader m_EyeCompute;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeBuffer m_HistogramBuffer;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly RenderTexture[] m_AutoExposurePool;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_AutoExposurePingPing;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_CurrentAutoExposure;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_DebugHistogram;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] s_EmptyHistogramBuffer;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_FirstFrame;

		[Token(Token = "0x4001986")]
		private const int k_HistogramBins = 64;

		[Token(Token = "0x4001987")]
		private const int k_HistogramThreadX = 16;

		[Token(Token = "0x4001988")]
		private const int k_HistogramThreadY = 16;

		[Token(Token = "0x17000442")]
		public override bool active
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x80C0A4", Offset = "0x80C0A4", VA = "0x80C0A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x80C118", Offset = "0x80C118", VA = "0x80C118")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x80C124", Offset = "0x80C124", VA = "0x80C124", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x80C130", Offset = "0x80C130", VA = "0x80C130", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x80C2B0", Offset = "0x80C2B0", VA = "0x80C2B0")]
		private Vector4 GetHistogramScaleOffsetRes()
		{
			return default(Vector4);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x80C3B8", Offset = "0x80C3B8", VA = "0x80C3B8")]
		public Texture Prepare(RenderTexture source, Material uberMaterial)
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x80D274", Offset = "0x80D274", VA = "0x80D274")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x80D400", Offset = "0x80D400", VA = "0x80D400")]
		public EyeAdaptationComponent()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public sealed class FogComponent : PostProcessingComponentCommandBuffer<FogModel>
	{
		[Token(Token = "0x2000313")]
		private static class Uniforms
		{
			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _FogColor;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Density;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Start;

			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _End;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _TempRT;
		}

		[Token(Token = "0x400198F")]
		private const string k_ShaderString = "Hidden/Post FX/Fog";

		[Token(Token = "0x17000443")]
		public override bool active
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x80D5E4", Offset = "0x80D5E4", VA = "0x80D5E4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x80D690", Offset = "0x80D690", VA = "0x80D690", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x80D6D0", Offset = "0x80D6D0", VA = "0x80D6D0", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x80D6D8", Offset = "0x80D6D8", VA = "0x80D6D8", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x80D6E0", Offset = "0x80D6E0", VA = "0x80D6E0", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x80DBA0", Offset = "0x80DBA0", VA = "0x80DBA0")]
		public FogComponent()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public sealed class FxaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000315")]
		private static class Uniforms
		{
			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _QualitySettings;

			[Token(Token = "0x4001996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _ConsoleSettings;
		}

		[Token(Token = "0x17000444")]
		public override bool active
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x80DD10", Offset = "0x80DD10", VA = "0x80DD10", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x80DD80", Offset = "0x80DD80", VA = "0x80DD80")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x80DF7C", Offset = "0x80DF7C", VA = "0x80DF7C")]
		public FxaaComponent()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public sealed class GrainComponent : PostProcessingComponentRenderTexture<GrainModel>
	{
		[Token(Token = "0x2000317")]
		private static class Uniforms
		{
			[Token(Token = "0x4001998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Grain_Params1;

			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Grain_Params2;

			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _GrainTex;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Phase;
		}

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_GrainLookupRT;

		[Token(Token = "0x17000445")]
		public override bool active
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x80E060", Offset = "0x80E060", VA = "0x80E060", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x80E0E4", Offset = "0x80E0E4", VA = "0x80E0E4", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x80E108", Offset = "0x80E108", VA = "0x80E108", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x80E4AC", Offset = "0x80E4AC", VA = "0x80E4AC")]
		public GrainComponent()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public sealed class MotionBlurComponent : PostProcessingComponentCommandBuffer<MotionBlurModel>
	{
		[Token(Token = "0x2000319")]
		private static class Uniforms
		{
			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _VelocityScale;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _MaxBlurRadius;

			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _RcpMaxBlurRadius;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _VelocityTex;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _MainTex;

			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _Tile2RT;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Tile4RT;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Tile8RT;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _TileMaxOffs;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _TileMaxLoop;

			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _TileVRT;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _NeighborMaxTex;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _LoopCount;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _TempRT;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _History1LumaTex;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _History2LumaTex;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _History3LumaTex;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _History4LumaTex;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _History1ChromaTex;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _History2ChromaTex;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _History3ChromaTex;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _History4ChromaTex;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _History1Weight;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _History2Weight;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _History3Weight;

			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _History4Weight;
		}

		[Token(Token = "0x200031A")]
		public class ReconstructionFilter
		{
			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RenderTextureFormat m_VectorRTFormat;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_PackedRTFormat;

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x80E664", Offset = "0x80E664", VA = "0x80E664")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x81049C", Offset = "0x81049C", VA = "0x81049C")]
			private void CheckTextureFormatSupport()
			{
			}

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x80E844", Offset = "0x80E844", VA = "0x80E844")]
			public bool IsSupported()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x80F008", Offset = "0x80F008", VA = "0x80F008")]
			public void ProcessImage(PostProcessingContext context, CommandBuffer cb, ref MotionBlurModel.Settings settings, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}
		}

		[Token(Token = "0x200031B")]
		public class FrameBlendingFilter
		{
			[Token(Token = "0x200031C")]
			private struct Frame
			{
				[Token(Token = "0x40019BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40019C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40019C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private float m_Time;

				[Token(Token = "0x40019C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderTargetIdentifier[] m_MRT;

				[Token(Token = "0x60015C9")]
				[Address(RVA = "0x810B50", Offset = "0x810B50", VA = "0x810B50")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x60015CA")]
				[Address(RVA = "0x8105C0", Offset = "0x8105C0", VA = "0x8105C0")]
				public void Release()
				{
				}

				[Token(Token = "0x60015CB")]
				[Address(RVA = "0x810690", Offset = "0x810690", VA = "0x810690")]
				public void MakeRecord(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
				{
				}

				[Token(Token = "0x60015CC")]
				[Address(RVA = "0x81097C", Offset = "0x81097C", VA = "0x81097C")]
				public void MakeRecordRaw(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool m_UseCompression;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat m_RawTextureFormat;

			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Frame[] m_FrameList;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastFrameCount;

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x80E710", Offset = "0x80E710", VA = "0x80E710")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x80E8B4", Offset = "0x80E8B4", VA = "0x80E8B4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x80FE48", Offset = "0x80FE48", VA = "0x80FE48")]
			public void PushFrame(CommandBuffer cb, RenderTargetIdentifier source, int width, int height, Material material)
			{
			}

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x80F964", Offset = "0x80F964", VA = "0x80F964")]
			public void BlendFrames(CommandBuffer cb, float strength, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material)
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x8104C0", Offset = "0x8104C0", VA = "0x8104C0")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x8104F4", Offset = "0x8104F4", VA = "0x8104F4")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x810AEC", Offset = "0x810AEC", VA = "0x810AEC")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}
		}

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReconstructionFilter m_ReconstructionFilter;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrameBlendingFilter m_FrameBlendingFilter;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_FirstFrame;

		[Token(Token = "0x17000446")]
		public ReconstructionFilter reconstructionFilter
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x80E5F0", Offset = "0x80E5F0", VA = "0x80E5F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		public FrameBlendingFilter frameBlendingFilter
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x80E69C", Offset = "0x80E69C", VA = "0x80E69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		public override bool active
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x80E788", Offset = "0x80E788", VA = "0x80E788", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x80E84C", Offset = "0x80E84C", VA = "0x80E84C", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x80E88C", Offset = "0x80E88C", VA = "0x80E88C")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x80E928", Offset = "0x80E928", VA = "0x80E928", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x80E930", Offset = "0x80E930", VA = "0x80E930", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x80E938", Offset = "0x80E938", VA = "0x80E938", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x80E944", Offset = "0x80E944", VA = "0x80E944", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x80FF68", Offset = "0x80FF68", VA = "0x80FF68", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x80FF78", Offset = "0x80FF78", VA = "0x80FF78")]
		public MotionBlurComponent()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public sealed class ScreenSpaceReflectionComponent : PostProcessingComponentCommandBuffer<ScreenSpaceReflectionModel>
	{
		[Token(Token = "0x200031E")]
		private static class Uniforms
		{
			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _RayStepSize;

			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _AdditiveReflection;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _BilateralUpsampling;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _TreatBackfaceHitAsMiss;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _AllowBackwardsRays;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _TraceBehindObjects;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _MaxSteps;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _FullResolutionFiltering;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _HalfResolution;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _HighlightSuppression;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _PixelsPerMeterAtOneMeter;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _ScreenEdgeFading;

			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _ReflectionBlur;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _MaxRayTraceDistance;

			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _FadeDistance;

			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _LayerThickness;

			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _SSRMultiplier;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _FresnelFade;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _FresnelFadePower;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _ReflectionBufferSize;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _ScreenSize;

			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _InvScreenSize;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _ProjInfo;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _CameraClipInfo;

			[Token(Token = "0x40019E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _ProjectToPixelMatrix;

			[Token(Token = "0x40019E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _WorldToCameraMatrix;

			[Token(Token = "0x40019E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _CameraToWorldMatrix;

			[Token(Token = "0x40019E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _Axis;

			[Token(Token = "0x40019E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _CurrentMipLevel;

			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NormalAndRoughnessTexture;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _HitPointTexture;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _BlurTexture;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _FilteredReflections;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _FinalReflectionTexture;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _TempTexture;
		}

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool k_HighlightSuppression;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool k_TraceBehindObjects;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool k_TreatBackfaceHitAsMiss;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool k_BilateralUpsample;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int[] m_ReflectionTextures;

		[Token(Token = "0x17000449")]
		public override bool active
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x810EB0", Offset = "0x810EB0", VA = "0x810EB0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x810EA8", Offset = "0x810EA8", VA = "0x810EA8", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x810F28", Offset = "0x810F28", VA = "0x810F28", Slot = "6")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x811070", Offset = "0x811070", VA = "0x811070", Slot = "11")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x8110B0", Offset = "0x8110B0", VA = "0x8110B0", Slot = "10")]
		public override CameraEvent GetCameraEvent()
		{
			return default(CameraEvent);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x8110B8", Offset = "0x8110B8", VA = "0x8110B8", Slot = "12")]
		public override void PopulateCommandBuffer(CommandBuffer cb)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x8120DC", Offset = "0x8120DC", VA = "0x8120DC")]
		public ScreenSpaceReflectionComponent()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public sealed class TaaComponent : PostProcessingComponentRenderTexture<AntialiasingModel>
	{
		[Token(Token = "0x2000320")]
		private static class Uniforms
		{
			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int _Jitter;

			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static int _SharpenParameters;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static int _FinalBlendParameters;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static int _HistoryTex;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static int _MainTex;
		}

		[Token(Token = "0x40019EB")]
		private const string k_ShaderString = "Hidden/Post FX/Temporal Anti-aliasing";

		[Token(Token = "0x40019EC")]
		private const int k_SampleCount = 8;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RenderBuffer[] m_MRT;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_SampleIndex;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_ResetHistory;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_HistoryTexture;

		[Token(Token = "0x1700044A")]
		public override bool active
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x8127C8", Offset = "0x8127C8", VA = "0x8127C8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044B")]
		public Vector2 jitterVector
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x812860", Offset = "0x812860", VA = "0x812860")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x812868", Offset = "0x812868", VA = "0x812868")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x812858", Offset = "0x812858", VA = "0x812858", Slot = "4")]
		public override DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x812870", Offset = "0x812870", VA = "0x812870")]
		public void ResetHistory()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x81287C", Offset = "0x81287C", VA = "0x81287C")]
		public void SetProjectionMatrix(Func<Vector2, Matrix4x4> jitteredFunc)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x813138", Offset = "0x813138", VA = "0x813138")]
		public void Render(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x813678", Offset = "0x813678", VA = "0x813678")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x812B14", Offset = "0x812B14", VA = "0x812B14")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x812BA8", Offset = "0x812BA8", VA = "0x812BA8")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x812FDC", Offset = "0x812FDC", VA = "0x812FDC")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x8136BC", Offset = "0x8136BC", VA = "0x8136BC", Slot = "7")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x813758", Offset = "0x813758", VA = "0x813758")]
		public TaaComponent()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public sealed class UserLutComponent : PostProcessingComponentRenderTexture<UserLutModel>
	{
		[Token(Token = "0x2000322")]
		private static class Uniforms
		{
			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _UserLut;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _UserLut_Params;
		}

		[Token(Token = "0x1700044C")]
		public override bool active
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x813908", Offset = "0x813908", VA = "0x813908", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x813A14", Offset = "0x813A14", VA = "0x813A14", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x813B54", Offset = "0x813B54", VA = "0x813B54")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x813C7C", Offset = "0x813C7C", VA = "0x813C7C")]
		public UserLutComponent()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public sealed class VignetteComponent : PostProcessingComponentRenderTexture<VignetteModel>
	{
		[Token(Token = "0x2000324")]
		private static class Uniforms
		{
			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _Vignette_Color;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _Vignette_Center;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _Vignette_Settings;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _Vignette_Mask;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _Vignette_Opacity;
		}

		[Token(Token = "0x1700044D")]
		public override bool active
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x813D60", Offset = "0x813D60", VA = "0x813D60", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x813DC8", Offset = "0x813DC8", VA = "0x813DC8", Slot = "10")]
		public override void Prepare(Material uberMaterial)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x81405C", Offset = "0x81405C", VA = "0x81405C")]
		public VignetteComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000325")]
	public class AmbientOcclusionModel : PostProcessingModel
	{
		[Token(Token = "0x2000326")]
		public enum SampleCount
		{
			[Token(Token = "0x4001A00")]
			Lowest = 3,
			[Token(Token = "0x4001A01")]
			Low = 6,
			[Token(Token = "0x4001A02")]
			Medium = 10,
			[Token(Token = "0x4001A03")]
			High = 16
		}

		[Serializable]
		[Token(Token = "0x2000327")]
		public struct Settings
		{
			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 4f)]
			[Tooltip("Degree of darkness produced by the effect.")]
			public float intensity;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Min(0.0001f)]
			[Tooltip("Radius of sample points, which affects extent of darkened areas.")]
			public float radius;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Number of sample points, which affects quality and performance.")]
			public SampleCount sampleCount;

			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Halves the resolution of the effect to increase performance at the cost of visual quality.")]
			public bool downsampling;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			[Tooltip("Forces compatibility with Forward rendered objects when working with the Deferred rendering path.")]
			public bool forceForwardCompatibility;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			[Tooltip("Enables the ambient-only mode in that the effect only affects ambient lighting. This mode is only available with the Deferred rendering path and HDR rendering.")]
			public bool ambientOnly;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			[Tooltip("Toggles the use of a higher precision depth texture with the forward rendering path (may impact performances). Has no effect with the deferred rendering path.")]
			public bool highPrecision;

			[Token(Token = "0x1700044F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60015EE")]
				[Address(RVA = "0x8141F0", Offset = "0x8141F0", VA = "0x8141F0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700044E")]
		public Settings settings
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x8141CC", Offset = "0x8141CC", VA = "0x8141CC")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x8141DC", Offset = "0x8141DC", VA = "0x8141DC")]
		public AmbientOcclusionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000328")]
	public class AntialiasingModel : PostProcessingModel
	{
		[Token(Token = "0x2000329")]
		public enum Method
		{
			[Token(Token = "0x4001A0D")]
			Fxaa,
			[Token(Token = "0x4001A0E")]
			Taa
		}

		[Token(Token = "0x200032A")]
		public enum FxaaPreset
		{
			[Token(Token = "0x4001A10")]
			ExtremePerformance,
			[Token(Token = "0x4001A11")]
			Performance,
			[Token(Token = "0x4001A12")]
			Default,
			[Token(Token = "0x4001A13")]
			Quality,
			[Token(Token = "0x4001A14")]
			ExtremeQuality
		}

		[Serializable]
		[Token(Token = "0x200032B")]
		public struct FxaaQualitySettings
		{
			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 1f)]
			[Tooltip("The amount of desired sub-pixel aliasing removal. Effects the sharpeness of the output.")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("The minimum amount of local contrast required to qualify a region as containing an edge.")]
			[Range(0.063f, 0.333f)]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Local contrast adaptation value to disallow the algorithm from executing on the darker regions.")]
			[Range(0f, 0.0833f)]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaQualitySettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200032C")]
		public struct FxaaConsoleSettings
		{
			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("The amount of spread applied to the sampling coordinates while sampling for subpixel information.")]
			[Range(0.33f, 0.5f)]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("This value dictates how sharp the edges in the image are kept; a higher value implies sharper edges.")]
			[Range(2f, 8f)]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("The minimum amount of local contrast required to qualify a region as containing an edge.")]
			[Range(0.125f, 0.25f)]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Local contrast adaptation value to disallow the algorithm from executing on the darker regions.")]
			[Range(0.04f, 0.06f)]
			public float minimumRequiredLuminance;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static FxaaConsoleSettings[] presets;
		}

		[Serializable]
		[Token(Token = "0x200032D")]
		public struct FxaaSettings
		{
			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FxaaPreset preset;

			[Token(Token = "0x17000451")]
			public static FxaaSettings defaultSettings
			{
				[Token(Token = "0x60015F3")]
				[Address(RVA = "0x814454", Offset = "0x814454", VA = "0x814454")]
				get
				{
					return default(FxaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200032E")]
		public struct TaaSettings
		{
			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0.1f, 1f)]
			[Tooltip("The diameter (in texels) inside which jitter samples are spread. Smaller values result in crisper but more aliased output, while larger values result in more stable but blurrier output.")]
			public float jitterSpread;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Controls the amount of sharpening applied to the color buffer.")]
			[Range(0f, 3f)]
			public float sharpen;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("The blend coefficient for a stationary fragment. Controls the percentage of history sample blended into the final color.")]
			[Range(0f, 0.99f)]
			public float stationaryBlending;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("The blend coefficient for a fragment with significant motion. Controls the percentage of history sample blended into the final color.")]
			[Range(0f, 0.99f)]
			public float motionBlending;

			[Token(Token = "0x17000452")]
			public static TaaSettings defaultSettings
			{
				[Token(Token = "0x60015F4")]
				[Address(RVA = "0x81445C", Offset = "0x81445C", VA = "0x81445C")]
				get
				{
					return default(TaaSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200032F")]
		public struct Settings
		{
			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Method method;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public FxaaSettings fxaaSettings;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TaaSettings taaSettings;

			[Token(Token = "0x17000453")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60015F5")]
				[Address(RVA = "0x814244", Offset = "0x814244", VA = "0x814244")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000450")]
		public Settings settings
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x814210", Offset = "0x814210", VA = "0x814210")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x814224", Offset = "0x814224", VA = "0x814224")]
		public AntialiasingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000330")]
	public class BloomModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000331")]
		public struct BloomSettings
		{
			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Min(0f)]
			[Tooltip("Strength of the bloom filter.")]
			public float intensity;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Filters out pixels under this level of brightness.")]
			[Min(0f)]
			public float threshold;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Makes transition between under/over-threshold gradual (0 = hard threshold, 1 = soft threshold).")]
			[Range(0f, 1f)]
			public float softKnee;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Changes extent of veiling effects in a screen resolution-independent fashion.")]
			[Range(1f, 7f)]
			public float radius;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Reduces flashing noise with an additional filter.")]
			public bool antiFlicker;

			[Token(Token = "0x17000455")]
			public float thresholdLinear
			{
				[Token(Token = "0x60015F8")]
				[Address(RVA = "0x814554", Offset = "0x814554", VA = "0x814554")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000456")]
			public static BloomSettings defaultSettings
			{
				[Token(Token = "0x60015F9")]
				[Address(RVA = "0x814560", Offset = "0x814560", VA = "0x814560")]
				get
				{
					return default(BloomSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000332")]
		public struct LensDirtSettings
		{
			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Dirtiness texture to add smudges or dust to the lens.")]
			public Texture texture;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Amount of lens dirtiness.")]
			[Min(0f)]
			public float intensity;

			[Token(Token = "0x17000457")]
			public static LensDirtSettings defaultSettings
			{
				[Token(Token = "0x60015FA")]
				[Address(RVA = "0x81457C", Offset = "0x81457C", VA = "0x81457C")]
				get
				{
					return default(LensDirtSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000333")]
		public struct Settings
		{
			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BloomSettings bloom;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LensDirtSettings lensDirt;

			[Token(Token = "0x17000458")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60015FB")]
				[Address(RVA = "0x8144E0", Offset = "0x8144E0", VA = "0x8144E0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000454")]
		public Settings settings
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x81447C", Offset = "0x81447C", VA = "0x81447C")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x814494", Offset = "0x814494", VA = "0x814494")]
		public BloomModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class BuiltinDebugViewsModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000335")]
		public struct DepthSettings
		{
			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 1f)]
			[Tooltip("Scales the camera far plane before displaying the depth map.")]
			public float scale;

			[Token(Token = "0x1700045B")]
			public static DepthSettings defaultSettings
			{
				[Token(Token = "0x6001600")]
				[Address(RVA = "0x814634", Offset = "0x814634", VA = "0x814634")]
				get
				{
					return default(DepthSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000336")]
		public struct MotionVectorsSettings
		{
			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 1f)]
			[Tooltip("Opacity of the source render.")]
			public float sourceOpacity;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(0f, 1f)]
			[Tooltip("Opacity of the per-pixel motion vector colors.")]
			public float motionImageOpacity;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Min(0f)]
			[Tooltip("Because motion vectors are mainly very small vectors, you can use this setting to make them more visible.")]
			public float motionImageAmplitude;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(0f, 1f)]
			[Tooltip("Opacity for the motion vector arrows.")]
			public float motionVectorsOpacity;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(8f, 64f)]
			[Tooltip("The arrow density on screen.")]
			public int motionVectorsResolution;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Tweaks the arrows length.")]
			[Min(0f)]
			public float motionVectorsAmplitude;

			[Token(Token = "0x1700045C")]
			public static MotionVectorsSettings defaultSettings
			{
				[Token(Token = "0x6001601")]
				[Address(RVA = "0x81463C", Offset = "0x81463C", VA = "0x81463C")]
				get
				{
					return default(MotionVectorsSettings);
				}
			}
		}

		[Token(Token = "0x2000337")]
		public enum Mode
		{
			[Token(Token = "0x4001A39")]
			None,
			[Token(Token = "0x4001A3A")]
			Depth,
			[Token(Token = "0x4001A3B")]
			Normals,
			[Token(Token = "0x4001A3C")]
			MotionVectors,
			[Token(Token = "0x4001A3D")]
			AmbientOcclusion,
			[Token(Token = "0x4001A3E")]
			EyeAdaptation,
			[Token(Token = "0x4001A3F")]
			FocusPlane,
			[Token(Token = "0x4001A40")]
			PreGradingLog,
			[Token(Token = "0x4001A41")]
			LogLut,
			[Token(Token = "0x4001A42")]
			UserLut
		}

		[Serializable]
		[Token(Token = "0x2000338")]
		public struct Settings
		{
			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mode mode;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public DepthSettings depth;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MotionVectorsSettings motionVectors;

			[Token(Token = "0x1700045D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001602")]
				[Address(RVA = "0x81460C", Offset = "0x81460C", VA = "0x81460C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000459")]
		public Settings settings
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x8145AC", Offset = "0x8145AC", VA = "0x8145AC")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x1700045A")]
		public bool willInterrupt
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x8145BC", Offset = "0x8145BC", VA = "0x8145BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x80D264", Offset = "0x80D264", VA = "0x80D264")]
		public bool IsModeActive(Mode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x8145E0", Offset = "0x8145E0", VA = "0x8145E0")]
		public BuiltinDebugViewsModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class ChromaticAberrationModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200033A")]
		public struct Settings
		{
			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Shift the hue of chromatic aberrations.")]
			public Texture2D spectralTexture;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Amount of tangential distortion.")]
			public float intensity;

			[Token(Token = "0x1700045F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001605")]
				[Address(RVA = "0x8146BC", Offset = "0x8146BC", VA = "0x8146BC")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700045E")]
		public Settings settings
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x814658", Offset = "0x814658", VA = "0x814658")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x814664", Offset = "0x814664", VA = "0x814664")]
		public ChromaticAberrationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class ColorGradingModel : PostProcessingModel
	{
		[Token(Token = "0x200033C")]
		public enum Tonemapper
		{
			[Token(Token = "0x4001A4D")]
			None,
			[Token(Token = "0x4001A4E")]
			ACES,
			[Token(Token = "0x4001A4F")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x200033D")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Tonemapping algorithm to use at the end of the color grading process. Use \"Neutral\" if you need a customizable tonemapper or \"Filmic\" to give a standard filmic look to your scenes.")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(-0.1f, 0.1f)]
			public float neutralBlackIn;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(1f, 20f)]
			public float neutralWhiteIn;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(-0.09f, 0.1f)]
			public float neutralBlackOut;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(1f, 19f)]
			public float neutralWhiteOut;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0.1f, 20f)]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(1f, 10f)]
			public float neutralWhiteClip;

			[Token(Token = "0x17000463")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x600160E")]
				[Address(RVA = "0x81488C", Offset = "0x81488C", VA = "0x81488C")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200033E")]
		public struct BasicSettings
		{
			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Adjusts the overall exposure of the scene in EV units. This is applied after HDR effect and right before tonemapping so it won't affect previous effects in the chain.")]
			public float postExposure;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(-100f, 100f)]
			[Tooltip("Sets the white balance to a custom color temperature.")]
			public float temperature;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Sets the white balance to compensate for a green or magenta tint.")]
			[Range(-100f, 100f)]
			public float tint;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(-180f, 180f)]
			[Tooltip("Shift the hue of all colors.")]
			public float hueShift;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(0f, 2f)]
			[Tooltip("Pushes the intensity of all colors.")]
			public float saturation;

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0f, 2f)]
			[Tooltip("Expands or shrinks the overall range of tonal values.")]
			public float contrast;

			[Token(Token = "0x17000464")]
			public static BasicSettings defaultSettings
			{
				[Token(Token = "0x600160F")]
				[Address(RVA = "0x8148B4", Offset = "0x8148B4", VA = "0x8148B4")]
				get
				{
					return default(BasicSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200033F")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 red;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 green;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 blue;

			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public int currentEditingChannel;

			[Token(Token = "0x17000465")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001610")]
				[Address(RVA = "0x8148C4", Offset = "0x8148C4", VA = "0x8148C4")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000340")]
		public struct LogWheelsSettings
		{
			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Trackball("GetSlopeValue")]
			public Color slope;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Trackball("GetPowerValue")]
			public Color power;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Trackball("GetOffsetValue")]
			public Color offset;

			[Token(Token = "0x17000466")]
			public static LogWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001611")]
				[Address(RVA = "0x8148DC", Offset = "0x8148DC", VA = "0x8148DC")]
				get
				{
					return default(LogWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000341")]
		public struct LinearWheelsSettings
		{
			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Trackball("GetLiftValue")]
			public Color lift;

			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Trackball("GetGammaValue")]
			public Color gamma;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Trackball("GetGainValue")]
			public Color gain;

			[Token(Token = "0x17000467")]
			public static LinearWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001612")]
				[Address(RVA = "0x8148EC", Offset = "0x8148EC", VA = "0x8148EC")]
				get
				{
					return default(LinearWheelsSettings);
				}
			}
		}

		[Token(Token = "0x2000342")]
		public enum ColorWheelMode
		{
			[Token(Token = "0x4001A68")]
			Linear,
			[Token(Token = "0x4001A69")]
			Log
		}

		[Serializable]
		[Token(Token = "0x2000343")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorWheelMode mode;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[TrackballGroup]
			public LogWheelsSettings log;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[TrackballGroup]
			public LinearWheelsSettings linear;

			[Token(Token = "0x17000468")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001613")]
				[Address(RVA = "0x8148FC", Offset = "0x8148FC", VA = "0x8148FC")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000344")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ColorGradingCurve master;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ColorGradingCurve red;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColorGradingCurve green;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColorGradingCurve blue;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorGradingCurve hueVShue;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColorGradingCurve hueVSsat;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorGradingCurve satVSsat;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorGradingCurve lumVSsat;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public int e_CurrentEditingCurve;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[HideInInspector]
			public bool e_CurveY;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			[HideInInspector]
			public bool e_CurveR;

			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			[HideInInspector]
			public bool e_CurveG;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			[HideInInspector]
			public bool e_CurveB;

			[Token(Token = "0x17000469")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001614")]
				[Address(RVA = "0x814924", Offset = "0x814924", VA = "0x814924")]
				get
				{
					return default(CurvesSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000345")]
		public struct Settings
		{
			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TonemappingSettings tonemapping;

			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BasicSettings basic;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public CurvesSettings curves;

			[Token(Token = "0x1700046A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001615")]
				[Address(RVA = "0x8147B8", Offset = "0x8147B8", VA = "0x8147B8")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000460")]
		public Settings settings
		{
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x8146F0", Offset = "0x8146F0", VA = "0x8146F0")]
			get
			{
				return default(Settings);
			}
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x814700", Offset = "0x814700", VA = "0x814700")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public bool isDirty
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x814734", Offset = "0x814734", VA = "0x814734")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x81473C", Offset = "0x81473C", VA = "0x81473C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public RenderTexture bakedLut
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0x814748", Offset = "0x814748", VA = "0x814748")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x814750", Offset = "0x814750", VA = "0x814750")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x814760", Offset = "0x814760", VA = "0x814760", Slot = "4")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x81476C", Offset = "0x81476C", VA = "0x81476C")]
		public ColorGradingModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000346")]
	public class DepthOfFieldModel : PostProcessingModel
	{
		[Token(Token = "0x2000347")]
		public enum KernelSize
		{
			[Token(Token = "0x4001A81")]
			Small,
			[Token(Token = "0x4001A82")]
			Medium,
			[Token(Token = "0x4001A83")]
			Large,
			[Token(Token = "0x4001A84")]
			VeryLarge
		}

		[Serializable]
		[Token(Token = "0x2000348")]
		public struct Settings
		{
			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Min(0.1f)]
			[Tooltip("Distance to the point of focus.")]
			public float focusDistance;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(0.05f, 32f)]
			[Tooltip("Ratio of aperture (known as f-stop or f-number). The smaller the value is, the shallower the depth of field is.")]
			public float aperture;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(1f, 300f)]
			[Tooltip("Distance between the lens and the film. The larger the value is, the shallower the depth of field is.")]
			public float focalLength;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Calculate the focal length automatically from the field-of-view value set on the camera. Using this setting isn't recommended.")]
			public bool useCameraFov;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Convolution kernel size of the bokeh filter, which determines the maximum radius of bokeh. It also affects the performance (the larger the kernel is, the longer the GPU time is required).")]
			public KernelSize kernelSize;

			[Token(Token = "0x1700046C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001618")]
				[Address(RVA = "0x81507C", Offset = "0x81507C", VA = "0x81507C")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700046B")]
		public Settings settings
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0x815038", Offset = "0x815038", VA = "0x815038")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x81504C", Offset = "0x81504C", VA = "0x81504C")]
		public DepthOfFieldModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public class DitheringModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200034A")]
		public struct Settings
		{
			[Token(Token = "0x1700046D")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600161A")]
				[Address(RVA = "0x8150B4", Offset = "0x8150B4", VA = "0x8150B4")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x8150A8", Offset = "0x8150A8", VA = "0x8150A8")]
		public DitheringModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	public class EyeAdaptationModel : PostProcessingModel
	{
		[Token(Token = "0x200034C")]
		public enum EyeAdaptationType
		{
			[Token(Token = "0x4001A8D")]
			Progressive,
			[Token(Token = "0x4001A8E")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x200034D")]
		public struct Settings
		{
			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(1f, 99f)]
			[Tooltip("Filters the dark part of the histogram when computing the average luminance to avoid very dark pixels from contributing to the auto exposure. Unit is in percent.")]
			public float lowPercent;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(1f, 99f)]
			[Tooltip("Filters the bright part of the histogram when computing the average luminance to avoid very dark pixels from contributing to the auto exposure. Unit is in percent.")]
			public float highPercent;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Minimum average luminance to consider for auto exposure (in EV).")]
			public float minLuminance;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Maximum average luminance to consider for auto exposure (in EV).")]
			public float maxLuminance;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Min(0f)]
			[Tooltip("Exposure bias. Use this to offset the global exposure of the scene.")]
			public float keyValue;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Set this to true to let Unity handle the key value automatically based on average luminance.")]
			public bool dynamicKeyValue;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Use \"Progressive\" if you want the auto exposure to be animated. Use \"Fixed\" otherwise.")]
			public EyeAdaptationType adaptationType;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Min(0f)]
			[Tooltip("Adaptation speed from a dark to a light environment.")]
			public float speedUp;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Min(0f)]
			[Tooltip("Adaptation speed from a light to a dark environment.")]
			public float speedDown;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Tooltip("Lower bound for the brightness range of the generated histogram (in EV). The bigger the spread between min & max, the lower the precision will be.")]
			[Range(-16f, -1f)]
			public int logMin;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Range(1f, 16f)]
			[Tooltip("Upper bound for the brightness range of the generated histogram (in EV). The bigger the spread between min & max, the lower the precision will be.")]
			public int logMax;

			[Token(Token = "0x1700046F")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600161D")]
				[Address(RVA = "0x815118", Offset = "0x815118", VA = "0x815118")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700046E")]
		public Settings settings
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x8150BC", Offset = "0x8150BC", VA = "0x8150BC")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x8150D4", Offset = "0x8150D4", VA = "0x8150D4")]
		public EyeAdaptationModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class FogModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200034F")]
		public struct Settings
		{
			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Should the fog affect the skybox?")]
			public bool excludeSkybox;

			[Token(Token = "0x17000471")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001620")]
				[Address(RVA = "0x815174", Offset = "0x815174", VA = "0x815174")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000470")]
		public Settings settings
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x81515C", Offset = "0x81515C", VA = "0x81515C")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x815164", Offset = "0x815164", VA = "0x815164")]
		public FogModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class GrainModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000351")]
		public struct Settings
		{
			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Enable the use of colored grain.")]
			public bool colored;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(0f, 1f)]
			[Tooltip("Grain strength. Higher means more visible grain.")]
			public float intensity;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Grain particle size.")]
			[Range(0.3f, 3f)]
			public float size;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Range(0f, 1f)]
			[Tooltip("Controls the noisiness response curve based on scene luminance. Lower values mean less noise in dark areas.")]
			public float luminanceContribution;

			[Token(Token = "0x17000473")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001623")]
				[Address(RVA = "0x8151A0", Offset = "0x8151A0", VA = "0x8151A0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000472")]
		public Settings settings
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x81517C", Offset = "0x81517C", VA = "0x81517C")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x81518C", Offset = "0x81518C", VA = "0x81518C")]
		public GrainModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class MotionBlurModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x2000353")]
		public struct Settings
		{
			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 360f)]
			[Tooltip("The angle of rotary shutter. Larger values give longer exposure.")]
			public float shutterAngle;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(4f, 32f)]
			[Tooltip("The amount of sample points, which affects quality and performances.")]
			public int sampleCount;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("The strength of multiple frame blending. The opacity of preceding frames are determined from this coefficient and time differences.")]
			public float frameBlending;

			[Token(Token = "0x17000475")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001626")]
				[Address(RVA = "0x8151E0", Offset = "0x8151E0", VA = "0x8151E0")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000474")]
		public Settings settings
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x8151B8", Offset = "0x8151B8", VA = "0x8151B8")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x8151C8", Offset = "0x8151C8", VA = "0x8151C8")]
		public MotionBlurModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class ScreenSpaceReflectionModel : PostProcessingModel
	{
		[Token(Token = "0x2000355")]
		public enum SSRResolution
		{
			[Token(Token = "0x4001AA7")]
			High = 0,
			[Token(Token = "0x4001AA8")]
			Low = 2
		}

		[Token(Token = "0x2000356")]
		public enum SSRReflectionBlendType
		{
			[Token(Token = "0x4001AAA")]
			PhysicallyBased,
			[Token(Token = "0x4001AAB")]
			Additive
		}

		[Serializable]
		[Token(Token = "0x2000357")]
		public struct IntensitySettings
		{
			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Range(0f, 2f)]
			[Tooltip("Nonphysical multiplier for the SSR reflections. 1.0 is physically based.")]
			public float reflectionMultiplier;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Range(0f, 1000f)]
			[Tooltip("How far away from the maxDistance to begin fading SSR.")]
			public float fadeDistance;

			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Amplify Fresnel fade out. Increase if floor reflections look good close to the surface and bad farther 'under' the floor.")]
			public float fresnelFade;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Higher values correspond to a faster Fresnel fade as the reflection changes from the grazing angle.")]
			[Range(0.1f, 10f)]
			public float fresnelFadePower;
		}

		[Serializable]
		[Token(Token = "0x2000358")]
		public struct ReflectionSettings
		{
			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("How the reflections are blended into the render.")]
			public SSRReflectionBlendType blendType;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Half resolution SSRR is much faster, but less accurate.")]
			public SSRResolution reflectionQuality;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Maximum reflection distance in world units.")]
			[Range(0.1f, 300f)]
			public float maxDistance;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Max raytracing length.")]
			[Range(16f, 1024f)]
			public int iterationCount;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Log base 2 of ray tracing coarse step size. Higher traces farther, lower gives better quality silhouettes.")]
			[Range(1f, 16f)]
			public int stepSize;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Typical thickness of columns, walls, furniture, and other objects that reflection rays might pass behind.")]
			[Range(0.01f, 10f)]
			public float widthModifier;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Blurriness of reflections.")]
			[Range(0.1f, 8f)]
			public float reflectionBlur;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Tooltip("Disable for a performance gain in scenes where most glossy objects are horizontal, like floors, water, and tables. Leave on for scenes with glossy vertical objects.")]
			public bool reflectBackfaces;
		}

		[Serializable]
		[Token(Token = "0x2000359")]
		public struct ScreenEdgeMask
		{
			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Higher = fade out SSRR near the edge of the screen so that reflections don't pop under camera motion.")]
			[Range(0f, 1f)]
			public float intensity;
		}

		[Serializable]
		[Token(Token = "0x200035A")]
		public struct Settings
		{
			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectionSettings reflection;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntensitySettings intensity;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenEdgeMask screenEdgeMask;

			[Token(Token = "0x17000477")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001629")]
				[Address(RVA = "0x815264", Offset = "0x815264", VA = "0x815264")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000476")]
		public Settings settings
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x8151F0", Offset = "0x8151F0", VA = "0x8151F0")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x815210", Offset = "0x815210", VA = "0x815210")]
		public ScreenSpaceReflectionModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035B")]
	public class UserLutModel : PostProcessingModel
	{
		[Serializable]
		[Token(Token = "0x200035C")]
		public struct Settings
		{
			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Custom lookup texture (strip format, e.g. 256x16).")]
			public Texture2D lut;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Range(0f, 1f)]
			[Tooltip("Blending factor.")]
			public float contribution;

			[Token(Token = "0x17000479")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600162C")]
				[Address(RVA = "0x815318", Offset = "0x815318", VA = "0x815318")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x17000478")]
		public Settings settings
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x8152B8", Offset = "0x8152B8", VA = "0x8152B8")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x8152C4", Offset = "0x8152C4", VA = "0x8152C4")]
		public UserLutModel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class VignetteModel : PostProcessingModel
	{
		[Token(Token = "0x200035E")]
		public enum Mode
		{
			[Token(Token = "0x4001AC1")]
			Classic,
			[Token(Token = "0x4001AC2")]
			Masked
		}

		[Serializable]
		[Token(Token = "0x200035F")]
		public struct Settings
		{
			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Use the \"Classic\" mode for parametric controls. Use the \"Masked\" mode to use your own texture mask.")]
			public Mode mode;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Vignette color. Use the alpha channel for transparency.")]
			[ColorUsage(false)]
			public Color color;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Sets the vignette center point (screen center is [0.5,0.5]).")]
			public Vector2 center;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Tooltip("Amount of vignetting on screen.")]
			[Range(0f, 1f)]
			public float intensity;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Range(0.01f, 1f)]
			[Tooltip("Smoothness of the vignette borders.")]
			public float smoothness;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[Tooltip("Lower values will make a square-ish vignette.")]
			[Range(0f, 1f)]
			public float roundness;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Tooltip("A black and white mask to use as a vignette.")]
			public Texture mask;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Tooltip("Mask opacity.")]
			[Range(0f, 1f)]
			public float opacity;

			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[Tooltip("Should the vignette be perfectly round or be dependent on the current aspect ratio?")]
			public bool rounded;

			[Token(Token = "0x1700047B")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x600162F")]
				[Address(RVA = "0x815410", Offset = "0x815410", VA = "0x815410")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings m_Settings;

		[Token(Token = "0x1700047A")]
		public Settings settings
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0x815348", Offset = "0x815348", VA = "0x815348")]
			get
			{
				return default(Settings);
			}
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x815368", Offset = "0x815368", VA = "0x815368")]
		public VignetteModel()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	[AddComponentMenu("Effects/Post-Processing Behaviour", -1)]
	[ImageEffectAllowedInSceneView]
	[DisallowMultipleComponent]
	public class PostProcessingBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Vector2, Matrix4x4> jitteredMatrixFunc;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Type, KeyValuePair<CameraEvent, CommandBuffer>> m_CommandBuffers;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PostProcessingComponentBase> m_Components;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<PostProcessingComponentBase, bool> m_ComponentStates;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialFactory m_MaterialFactory;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureFactory m_RenderTextureFactory;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessingContext m_Context;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera m_Camera;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessingProfile m_PreviousProfile;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_RenderingInSceneView;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BuiltinDebugViewsComponent m_DebugViews;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AmbientOcclusionComponent m_AmbientOcclusion;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ScreenSpaceReflectionComponent m_ScreenSpaceReflection;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FogComponent m_FogComponent;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MotionBlurComponent m_MotionBlur;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaaComponent m_Taa;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EyeAdaptationComponent m_EyeAdaptation;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DepthOfFieldComponent m_DepthOfField;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BloomComponent m_Bloom;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ChromaticAberrationComponent m_ChromaticAberration;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ColorGradingComponent m_ColorGrading;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UserLutComponent m_UserLut;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GrainComponent m_Grain;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VignetteComponent m_Vignette;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DitheringComponent m_Dithering;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private FxaaComponent m_Fxaa;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<PostProcessingComponentBase> m_ComponentsToEnable;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<PostProcessingComponentBase> m_ComponentsToDisable;

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x815490", Offset = "0x815490", VA = "0x815490")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x815EA4", Offset = "0x815EA4", VA = "0x815EA4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x816A3C", Offset = "0x816A3C", VA = "0x816A3C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x816B74", Offset = "0x816B74", VA = "0x816B74")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x816C78", Offset = "0x816C78", VA = "0x816C78")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x8174E8", Offset = "0x8174E8", VA = "0x8174E8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x817674", Offset = "0x817674", VA = "0x817674")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x817A18", Offset = "0x817A18", VA = "0x817A18")]
		public void ResetTemporalEffects()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x8165F8", Offset = "0x8165F8", VA = "0x8165F8")]
		private void CheckObservers()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x816484", Offset = "0x816484", VA = "0x816484")]
		private void DisableComponents()
		{
		}

		[Token(Token = "0x600163A")]
		private CommandBuffer AddCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600163B")]
		private void RemoveCommandBuffer<T>() where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600163C")]
		private CommandBuffer GetCommandBuffer<T>(CameraEvent evt, string name) where T : PostProcessingModel
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		private void TryExecuteCommandBuffer<T>(PostProcessingComponentCommandBuffer<T> component) where T : PostProcessingModel
		{
		}

		[Token(Token = "0x600163E")]
		private bool TryPrepareUberImageEffect<T>(PostProcessingComponentRenderTexture<T> component, Material material) where T : PostProcessingModel
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		private T AddComponent<T>(T component) where T : PostProcessingComponentBase
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x817A58", Offset = "0x817A58", VA = "0x817A58")]
		public PostProcessingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public abstract class PostProcessingComponentBase
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingContext context;

		[Token(Token = "0x1700047C")]
		public abstract bool active
		{
			[Token(Token = "0x6001642")]
			get;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x817B10", Offset = "0x817B10", VA = "0x817B10", Slot = "4")]
		public virtual DepthTextureMode GetCameraFlags()
		{
			return default(DepthTextureMode);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x817B18", Offset = "0x817B18", VA = "0x817B18", Slot = "6")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x817B1C", Offset = "0x817B1C", VA = "0x817B1C", Slot = "7")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001645")]
		public abstract PostProcessingModel GetModel();

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x817B20", Offset = "0x817B20", VA = "0x817B20")]
		protected PostProcessingComponentBase()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public abstract class PostProcessingComponent<T> : PostProcessingComponentBase where T : PostProcessingModel
	{
		[Token(Token = "0x1700047D")]
		public T model
		{
			[Token(Token = "0x6001647")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001648")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001649")]
		public virtual void Init(PostProcessingContext pcontext, T pmodel)
		{
		}

		[Token(Token = "0x600164A")]
		public override PostProcessingModel GetModel()
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		protected PostProcessingComponent()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public abstract class PostProcessingComponentCommandBuffer<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x600164C")]
		public abstract CameraEvent GetCameraEvent();

		[Token(Token = "0x600164D")]
		public abstract string GetName();

		[Token(Token = "0x600164E")]
		public abstract void PopulateCommandBuffer(CommandBuffer cb);

		[Token(Token = "0x600164F")]
		protected PostProcessingComponentCommandBuffer()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public abstract class PostProcessingComponentRenderTexture<T> : PostProcessingComponent<T> where T : PostProcessingModel
	{
		[Token(Token = "0x6001650")]
		public virtual void Prepare(Material material)
		{
		}

		[Token(Token = "0x6001651")]
		protected PostProcessingComponentRenderTexture()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class PostProcessingContext
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PostProcessingProfile profile;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialFactory materialFactory;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTextureFactory renderTextureFactory;

		[Token(Token = "0x1700047E")]
		public bool interrupted
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x817B28", Offset = "0x817B28", VA = "0x817B28")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x817B30", Offset = "0x817B30", VA = "0x817B30")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public bool isGBufferAvailable
		{
			[Token(Token = "0x6001656")]
			[Address(RVA = "0x80D668", Offset = "0x80D668", VA = "0x80D668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000480")]
		public bool isHdr
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x80DB84", Offset = "0x80DB84", VA = "0x80DB84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public int width
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x80C380", Offset = "0x80C380", VA = "0x80C380")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000482")]
		public int height
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x80C39C", Offset = "0x80C39C", VA = "0x80C39C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000483")]
		public Rect viewport
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x80D3E4", Offset = "0x80D3E4", VA = "0x80D3E4")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x817B3C", Offset = "0x817B3C", VA = "0x817B3C")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x816430", Offset = "0x816430", VA = "0x816430")]
		public PostProcessingContext Reset()
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x815E9C", Offset = "0x815E9C", VA = "0x815E9C")]
		public PostProcessingContext()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public abstract class PostProcessingModel
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[GetSet("enabled")]
		private bool m_Enabled;

		[Token(Token = "0x17000484")]
		public bool enabled
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x817B48", Offset = "0x817B48", VA = "0x817B48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x817B50", Offset = "0x817B50", VA = "0x817B50", Slot = "4")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x814208", Offset = "0x814208", VA = "0x814208")]
		protected PostProcessingModel()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class PostProcessingProfile : ScriptableObject
	{
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuiltinDebugViewsModel debugViews;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogModel fog;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AntialiasingModel antialiasing;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AmbientOcclusionModel ambientOcclusion;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScreenSpaceReflectionModel screenSpaceReflection;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DepthOfFieldModel depthOfField;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MotionBlurModel motionBlur;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EyeAdaptationModel eyeAdaptation;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BloomModel bloom;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorGradingModel colorGrading;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UserLutModel userLut;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChromaticAberrationModel chromaticAberration;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GrainModel grain;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VignetteModel vignette;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DitheringModel dithering;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x817B54", Offset = "0x817B54", VA = "0x817B54")]
		public PostProcessingProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public sealed class ColorGradingCurve
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_Loop;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ZeroValue;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve m_InternalLoopingCurve;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x814F84", Offset = "0x814F84", VA = "0x814F84")]
		public ColorGradingCurve(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x81801C", Offset = "0x81801C", VA = "0x81801C")]
		public void Cache()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x818204", Offset = "0x818204", VA = "0x818204")]
		public float Evaluate(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000369")]
	public static class GraphicsUtils
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D s_WhiteTexture;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh s_Quad;

		[Token(Token = "0x17000485")]
		public static bool isLinearColorSpace
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x80DB68", Offset = "0x80DB68", VA = "0x80DB68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000486")]
		public static Texture2D whiteTexture
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x8172EC", Offset = "0x8172EC", VA = "0x8172EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		public static Mesh quad
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x810C38", Offset = "0x810C38", VA = "0x810C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x813578", Offset = "0x813578", VA = "0x813578")]
		public static void Blit(Material material, int pass)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x80C228", Offset = "0x80C228", VA = "0x80C228")]
		public static void Destroy(Object obj)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x8179D0", Offset = "0x8179D0", VA = "0x8179D0")]
		public static void Dispose()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public sealed class MaterialFactory : IDisposable
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, Material> m_Materials;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x815D8C", Offset = "0x815D8C", VA = "0x815D8C")]
		public MaterialFactory()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x80CE40", Offset = "0x80CE40", VA = "0x80CE40")]
		public Material Get(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x8178F4", Offset = "0x8178F4", VA = "0x8178F4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public sealed class RenderTextureFactory : IDisposable
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x815E14", Offset = "0x815E14", VA = "0x815E14")]
		public RenderTextureFactory()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x8171D4", Offset = "0x8171D4", VA = "0x8171D4")]
		public RenderTexture Get(RenderTexture baseRenderTexture)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x80D044", Offset = "0x80D044", VA = "0x80D044")]
		public RenderTexture Get(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, RenderTextureReadWrite rw = RenderTextureReadWrite.Default, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, string name = "FactoryTempTexture")
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x80D128", Offset = "0x80D128", VA = "0x80D128")]
		public void Release(RenderTexture rt)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x81741C", Offset = "0x81741C", VA = "0x81741C")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x8179CC", Offset = "0x8179CC", VA = "0x8179CC", Slot = "4")]
		public void Dispose()
		{
		}
	}
}
namespace VortexStudios.PostProcessing
{
	[Serializable]
	[Token(Token = "0x200036C")]
	public class ChromaticAberrationProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x818280", Offset = "0x818280", VA = "0x818280", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x8184DC", Offset = "0x8184DC", VA = "0x8184DC", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x8187E0", Offset = "0x8187E0", VA = "0x8187E0")]
		public ChromaticAberrationProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036D")]
	public class CompositeProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _materialBleeding;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _polarity;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] _polarityPositive;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] _polarityNegative;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D _bleedingTexture;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		public float distortion;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public float artifact;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		public float fringing;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public float bleeding;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float t;

		[Token(Token = "0x17000488")]
		public Material materialBleeding
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x818878", Offset = "0x818878", VA = "0x818878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x818974", Offset = "0x818974", VA = "0x818974", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x818978", Offset = "0x818978", VA = "0x818978", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x8189C8", Offset = "0x8189C8", VA = "0x8189C8", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x818DA0", Offset = "0x818DA0", VA = "0x818DA0")]
		public CompositeProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036E")]
	public class NoiseProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public Vector2 scale;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 _offset;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x818EC4", Offset = "0x818EC4", VA = "0x818EC4", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x818F84", Offset = "0x818F84", VA = "0x818F84", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x818FB0", Offset = "0x818FB0", VA = "0x818FB0", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x819208", Offset = "0x819208", VA = "0x819208")]
		public NoiseProfile()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class OLDTVPreset : ScriptableObject
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NoiseProfile _noiseFilter;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CompositeProfile _compositeFilter;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StaticProfile _staticFilter;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TelevisionProfile _televisionFilter;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ChromaticAberrationProfile _chromaticAberrationFilter;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScanlineProfile _scanlineFilter;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TubeProfile _tubeFilter;

		[Token(Token = "0x17000489")]
		public NoiseProfile noiseFilter
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x8192E4", Offset = "0x8192E4", VA = "0x8192E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		public CompositeProfile compositeFilter
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x8192EC", Offset = "0x8192EC", VA = "0x8192EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		public StaticProfile staticFilter
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x8192F4", Offset = "0x8192F4", VA = "0x8192F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		public TelevisionProfile televisionFilter
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0x8192FC", Offset = "0x8192FC", VA = "0x8192FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public ChromaticAberrationProfile chromaticAberrationFilter
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x819304", Offset = "0x819304", VA = "0x819304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public ScanlineProfile scanlineFilter
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0x81930C", Offset = "0x81930C", VA = "0x81930C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public TubeProfile tubeFilter
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x819314", Offset = "0x819314", VA = "0x819314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x81931C", Offset = "0x81931C", VA = "0x81931C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x8193B8", Offset = "0x8193B8", VA = "0x8193B8")]
		public OLDTVPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000370")]
	public class PostProcessingProfile
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected RenderBuffer _BUFFER;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _CURRENTBUFFER;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTexture[] _TEMPBUFFER;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _foldout;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _enabled;

		[Token(Token = "0x17000490")]
		public static RenderTexture SOURCEBUFFER
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x818684", Offset = "0x818684", VA = "0x818684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x81979C", Offset = "0x81979C", VA = "0x81979C")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public static RenderTexture DESTBUFFER
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x818704", Offset = "0x818704", VA = "0x818704")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x819848", Offset = "0x819848", VA = "0x819848")]
			set
			{
			}
		}

		[Token(Token = "0x17000492")]
		public Material material
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x818340", Offset = "0x818340", VA = "0x818340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		public bool enabled
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0x81990C", Offset = "0x81990C", VA = "0x81990C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0x8198F0", Offset = "0x8198F0", VA = "0x8198F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x818780", Offset = "0x818780", VA = "0x818780")]
		public static void SWAPBUFFER()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x818854", Offset = "0x818854", VA = "0x818854")]
		public PostProcessingProfile()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x819914", Offset = "0x819914", VA = "0x819914", Slot = "4")]
		public virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x819918", Offset = "0x819918", VA = "0x819918", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x81991C", Offset = "0x81991C", VA = "0x81991C", Slot = "6")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x81867C", Offset = "0x81867C", VA = "0x81867C", Slot = "7")]
		public virtual RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000371")]
	public class ScanlineProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture pattern;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float magnetude;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x81999C", Offset = "0x81999C", VA = "0x81999C", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x819A5C", Offset = "0x819A5C", VA = "0x819A5C", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x8196B0", Offset = "0x8196B0", VA = "0x8196B0")]
		public ScanlineProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000372")]
	public class StaticProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture staticPattern;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public float staticMagnitude;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float staticScale;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float staticOffset;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Texture dirtPattern;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public float dirtMagnitude;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 _offset;

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x819CBC", Offset = "0x819CBC", VA = "0x819CBC", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x819DE4", Offset = "0x819DE4", VA = "0x819DE4", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x819E0C", Offset = "0x819E0C", VA = "0x819E0C", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x819578", Offset = "0x819578", VA = "0x819578")]
		public StaticProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000373")]
	public class TelevisionProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public int lineCount;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 sync;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _sync;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float brightness;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float contrast;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float saturation;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float sharpness;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x81A0C8", Offset = "0x81A0C8", VA = "0x81A0C8", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x81A0CC", Offset = "0x81A0CC", VA = "0x81A0CC", Slot = "4")]
		public override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x81A0FC", Offset = "0x81A0FC", VA = "0x81A0FC", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x819630", Offset = "0x819630", VA = "0x819630")]
		public TelevisionProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000374")]
	public class TubeProfile : PostProcessingProfile
	{
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Texture maskPattern;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Texture reflexPattern;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float distortionMagnitude;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float reflexMagnitude;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x81A420", Offset = "0x81A420", VA = "0x81A420", Slot = "5")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x81A4E0", Offset = "0x81A4E0", VA = "0x81A4E0", Slot = "7")]
		public override RenderTexture OnRenderImage(RenderTexture source)
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x819724", Offset = "0x819724", VA = "0x819724")]
		public TubeProfile()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x2000375")]
	[RequireComponent(typeof(Camera))]
	[AddComponentMenu("Image Effects/Cinematic/Bloom")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	public class Bloom_FPS : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000376")]
		public struct Settings
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[Tooltip("Filters out pixels under this level of brightness.")]
			public float threshold;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[Range(0f, 1f)]
			[Tooltip("Makes transition between under/over-threshold gradual.")]
			public float softKnee;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Changes extent of veiling effects in a screen resolution-independent fashion.")]
			[SerializeField]
			[Range(1f, 7f)]
			public float radius;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Tooltip("Blend factor of the result image.")]
			[SerializeField]
			public float intensity;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Controls filter quality and buffer resolution.")]
			[SerializeField]
			public bool highQuality;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[Tooltip("Reduces flashing noise with an additional filter.")]
			[SerializeField]
			public bool antiFlicker;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Dirtiness texture to add smudges or dust to the lens.")]
			public Texture dirtTexture;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[MinAttribute_FPS(0f)]
			[Tooltip("Amount of lens dirtiness.")]
			public float dirtIntensity;

			[Token(Token = "0x17000496")]
			public float thresholdGamma
			{
				[Token(Token = "0x60016AA")]
				[Address(RVA = "0x81B690", Offset = "0x81B690", VA = "0x81B690")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000497")]
			public float thresholdLinear
			{
				[Token(Token = "0x60016AB")]
				[Address(RVA = "0x81B538", Offset = "0x81B538", VA = "0x81B538")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000498")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x60016AC")]
				[Address(RVA = "0x81B634", Offset = "0x81B634", VA = "0x81B634")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x4001B3F")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x17000494")]
		public Shader shader
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x81A710", Offset = "0x81A710", VA = "0x81A710")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		public Material material
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x81A7AC", Offset = "0x81A7AC", VA = "0x81A7AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x81A908", Offset = "0x81A908", VA = "0x81A908")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x81AA74", Offset = "0x81AA74", VA = "0x81AA74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x81AD1C", Offset = "0x81AD1C", VA = "0x81AD1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x81ADB0", Offset = "0x81ADB0", VA = "0x81ADB0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x81B54C", Offset = "0x81B54C", VA = "0x81B54C")]
		public Bloom_FPS()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public static class ImageEffectHelper_FPS
	{
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x81AAB0", Offset = "0x81AAB0", VA = "0x81AAB0")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x81A840", Offset = "0x81A840", VA = "0x81A840")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000378")]
	public sealed class MinAttribute_FPS : PropertyAttribute
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x81B6A0", Offset = "0x81B6A0", VA = "0x81B6A0")]
		public MinAttribute_FPS(float min)
		{
		}
	}
}
namespace InsaneSystems.Radar
{
	[Token(Token = "0x2000379")]
	public class DemoHelper : MonoBehaviour
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RadarSystem radarSystem;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x81B6C8", Offset = "0x81B6C8", VA = "0x81B6C8")]
		public DemoHelper()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class GhostFollowingPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform playerTransform;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform secondaryTransform;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private new Transform transform;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x81B6D0", Offset = "0x81B6D0", VA = "0x81B6D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x81B728", Offset = "0x81B728", VA = "0x81B728")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x81B810", Offset = "0x81B810", VA = "0x81B810")]
		private void SetPositionAsTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x81B870", Offset = "0x81B870", VA = "0x81B870")]
		public void SetPlayerTransform(Transform playerTransform)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x81B878", Offset = "0x81B878", VA = "0x81B878")]
		public void SetSecondaryTransform(Transform secondaryTransform)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x81B880", Offset = "0x81B880", VA = "0x81B880")]
		public GhostFollowingPlayer()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class IconHintData : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public RadarObject selfRadarObject;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x81B888", Offset = "0x81B888", VA = "0x81B888", Slot = "4")]
		public void OnPointerClick(PointerEventData pointerData)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x81BACC", Offset = "0x81BACC", VA = "0x81BACC", Slot = "5")]
		public void OnPointerEnter(PointerEventData pointerData)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x81BB40", Offset = "0x81BB40", VA = "0x81BB40", Slot = "6")]
		public void OnPointerExit(PointerEventData pointerData)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x81BC2C", Offset = "0x81BC2C", VA = "0x81BC2C")]
		public IconHintData()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class RadarObject : MonoBehaviour
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<RadarObject> allRadarObjects;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Icon, which will be drawn on radar for this object.")]
		[SerializeField]
		private Sprite icon;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("If icon need custom color, you can change this parameter.")]
		[SerializeField]
		private Color customColor;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("If you have turned on Show Hints toggle in radar settings, you can fill this field with object name, which should be shown on radar. If empty will be shown name of game object.")]
		[SerializeField]
		private string label;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("Turn on this, if you need to show arrows near object icon, if object above or below player.")]
		private bool showHeightArrows;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[Tooltip("Turn on this on the object, which the radar should follow. For example, on a player.")]
		[RadarObjectCenter]
		[SerializeField]
		private bool isCenter;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		[Tooltip("Turn on this, if this object will stay on one position during all game.")]
		private bool isStatic;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		[Tooltip("Turn on this, if this icon should be always visible on radar (for important marks, etc).")]
		private bool shouldBeVisibleAllTime;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Turn on this, if icon should keep its rotation on radar. It needed for asymmetrical or symbol icons. Used only for rotating radar.")]
		[SerializeField]
		private bool keepIconRotation;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject selfIconObject;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private new Transform transform;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 startPositon;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 lastPosition;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int pingCountsLeft;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float pingDelay;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentPingDelay;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isVisibleOnCurrentPing;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform heightArrowsParent;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool esAvion;

		[Token(Token = "0x17000499")]
		public Sprite IconSprite
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x81BC34", Offset = "0x81BC34", VA = "0x81BC34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public Color CustomColor
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x81BC3C", Offset = "0x81BC3C", VA = "0x81BC3C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700049B")]
		public string Label
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x81BC48", Offset = "0x81BC48", VA = "0x81BC48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		public bool IsCenter
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x81BC50", Offset = "0x81BC50", VA = "0x81BC50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049D")]
		public bool ShouldBeVisibleAllTime
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x81BC58", Offset = "0x81BC58", VA = "0x81BC58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049E")]
		public bool KeepIconRotation
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x81BC60", Offset = "0x81BC60", VA = "0x81BC60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049F")]
		public bool IsStatic
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x81BC68", Offset = "0x81BC68", VA = "0x81BC68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A0")]
		public bool ShowHeightArrows
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x81BC70", Offset = "0x81BC70", VA = "0x81BC70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A1")]
		public bool IsPinging
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x81BC78", Offset = "0x81BC78", VA = "0x81BC78")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x81BC80", Offset = "0x81BC80", VA = "0x81BC80")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004A2")]
		public bool IsInitialized
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x81BC8C", Offset = "0x81BC8C", VA = "0x81BC8C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x81BC94", Offset = "0x81BC94", VA = "0x81BC94")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004A3")]
		public bool IsVisibleOnRadar
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x81BCA0", Offset = "0x81BCA0", VA = "0x81BCA0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x81BCA8", Offset = "0x81BCA8", VA = "0x81BCA8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004A4")]
		public RectTransform SelfIconTransform
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x81BCB4", Offset = "0x81BCB4", VA = "0x81BCB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x81BCBC", Offset = "0x81BCBC", VA = "0x81BCBC")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public Vector3 RealPositionOnRadar
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x81BCC4", Offset = "0x81BCC4", VA = "0x81BCC4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x81BCD0", Offset = "0x81BCD0", VA = "0x81BCD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004A6")]
		public Vector3 LocalPositionOnRadar
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x81BCDC", Offset = "0x81BCDC", VA = "0x81BCDC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x81BCE8", Offset = "0x81BCE8", VA = "0x81BCE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004A7")]
		public GameObject downArrowIcon
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x81BCF4", Offset = "0x81BCF4", VA = "0x81BCF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x81BCFC", Offset = "0x81BCFC", VA = "0x81BCFC")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004A8")]
		public GameObject topArrowIcon
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x81BD04", Offset = "0x81BD04", VA = "0x81BD04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x81BD0C", Offset = "0x81BD0C", VA = "0x81BD0C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x81BD14", Offset = "0x81BD14", VA = "0x81BD14")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x81BD18", Offset = "0x81BD18", VA = "0x81BD18")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x81C09C", Offset = "0x81C09C", VA = "0x81C09C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x81C130", Offset = "0x81C130", VA = "0x81C130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x81C260", Offset = "0x81C260", VA = "0x81C260")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x81C4A4", Offset = "0x81C4A4", VA = "0x81C4A4")]
		private void HandlePing()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x81C748", Offset = "0x81C748", VA = "0x81C748")]
		public void SetSelfIcon(RectTransform transform)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x81C7B0", Offset = "0x81C7B0", VA = "0x81C7B0")]
		public void SetupHeightArrows()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x81C620", Offset = "0x81C620", VA = "0x81C620")]
		public void ShowTopHeightArrow()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x81C6B4", Offset = "0x81C6B4", VA = "0x81C6B4")]
		public void ShowBottomHeightArrow()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x81C58C", Offset = "0x81C58C", VA = "0x81C58C")]
		public void HideHeightArrows()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x81CB34", Offset = "0x81CB34", VA = "0x81CB34")]
		public void UpdateColor(Color newColor)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x81CC14", Offset = "0x81CC14", VA = "0x81CC14")]
		public void Ping(int times = 3, float delay = 0.25f)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x81BEA0", Offset = "0x81BEA0", VA = "0x81BEA0")]
		public Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x81CC30", Offset = "0x81CC30", VA = "0x81CC30")]
		public Vector2 GetMoveDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x81CC6C", Offset = "0x81CC6C", VA = "0x81CC6C")]
		public Vector2 GetOffsetFromStart()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x81CC90", Offset = "0x81CC90", VA = "0x81CC90")]
		public float GetEulerRotation()
		{
			return default(float);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x81CD0C", Offset = "0x81CD0C", VA = "0x81CD0C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x81CD10", Offset = "0x81CD10", VA = "0x81CD10")]
		public void Destruct()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x81CDC4", Offset = "0x81CDC4", VA = "0x81CDC4")]
		public RadarObject()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class RadarObjectCenterAttribute : PropertyAttribute
	{
		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x81CEC4", Offset = "0x81CEC4", VA = "0x81CEC4")]
		public RadarObjectCenterAttribute()
		{
		}
	}
	[Token(Token = "0x200037E")]
	[CreateAssetMenu(fileName = "RadarSettings", menuName = "Insane Systems/Radar/Settings")]
	public class RadarSettings : ScriptableObject
	{
		[Token(Token = "0x200037F")]
		public enum RadarShape
		{
			[Token(Token = "0x4001B7F")]
			Rectangle,
			[Token(Token = "0x4001B80")]
			Circle
		}

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("UI template of radar icon object. You can change this prefab settings to change some icon parameters, like size, pivot point, etc.")]
		public GameObject radarIconTemplate;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("UI template of height arrow icon object. Height arrows drawn above or below radar icons, if this option activated in radar object settings.")]
		public GameObject heightArrowIconTemplate;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Radar zoom value. Default value is 1 - real scale on radar. Bigger values will increase scaling.")]
		[Range(0.1f, 8f)]
		public float radarScale;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("If you need bigger icons on radar, increase this value.")]
		[Range(1f, 4f)]
		public float iconsScale;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("If you're making an Action or RPG and this toggle checked, radar will rotate with player, otherwise only player icon will rotate.")]
		public bool rotateRadar;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[Tooltip("Mark this if your game is 2D and radar will work true. If your game is 3D, left this toggle empty.")]
		public bool gameIs2D;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color customPrimaryUIColor;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public RadarShape radarShape;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Hints")]
		public bool showHintsForRadarIcons;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool showGameObjectNameIfRadarObjectLabelEmpty;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool showHintsOnlyByClick;

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x81CECC", Offset = "0x81CECC", VA = "0x81CECC")]
		public RadarSettings()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class RadarSystem : MonoBehaviour
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RadarSettings radarSettings;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RadarDrawer radarDrawer;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[SerializeField]
		private float pauseBetweenUpdates;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float timeToNextUpdate;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float tLerpRadar;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float radarScaleCorrecto;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MAX_RADAR;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MIN_RADAR;

		[Token(Token = "0x170004A9")]
		public static RadarSystem sceneSingleton
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x81CEEC", Offset = "0x81CEEC", VA = "0x81CEEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x81CF34", Offset = "0x81CF34", VA = "0x81CF34")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004AA")]
		public RadarObject centerObject
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x81CF8C", Offset = "0x81CF8C", VA = "0x81CF8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x81CF94", Offset = "0x81CF94", VA = "0x81CF94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004AB")]
		public RadarSettings settings
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x81CF9C", Offset = "0x81CF9C", VA = "0x81CF9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		public Hint hint
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x81CFA4", Offset = "0x81CFA4", VA = "0x81CFA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x81CFAC", Offset = "0x81CFAC", VA = "0x81CFAC")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public float pauseBetweenUpdatesValue
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x81CFB4", Offset = "0x81CFB4", VA = "0x81CFB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004AE")]
		public RadarDrawer RadarDrawer
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x81CFBC", Offset = "0x81CFBC", VA = "0x81CFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x81CFC4", Offset = "0x81CFC4", VA = "0x81CFC4")]
		public void SetRadarDrawer(RadarDrawer rd)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x81CFCC", Offset = "0x81CFCC", VA = "0x81CFCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x81D104", Offset = "0x81D104", VA = "0x81D104")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x81D1D8", Offset = "0x81D1D8", VA = "0x81D1D8")]
		private void UpdateActualRadarObjects()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x81BA3C", Offset = "0x81BA3C", VA = "0x81BA3C")]
		public void ShowHintFor(RadarObject radarObject)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x81D694", Offset = "0x81D694", VA = "0x81D694")]
		public RadarSystem()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class SimplePlayer : MonoBehaviour
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float movingSpeed;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool is2D;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform cameraTransform;

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x81D6C0", Offset = "0x81D6C0", VA = "0x81D6C0")]
		public void Update()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x81D9C4", Offset = "0x81D9C4", VA = "0x81D9C4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x81DA88", Offset = "0x81DA88", VA = "0x81DA88")]
		public SimplePlayer()
		{
		}
	}
}
namespace InsaneSystems.Radar.UI
{
	[Token(Token = "0x2000382")]
	public class Hint : MonoBehaviour
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectTransform;

		[Token(Token = "0x170004AF")]
		public RadarObject shownForRadarObject
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x81DA98", Offset = "0x81DA98", VA = "0x81DA98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x81DAA0", Offset = "0x81DAA0", VA = "0x81DAA0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x81DAA8", Offset = "0x81DAA8", VA = "0x81DAA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x81DB08", Offset = "0x81DB08", VA = "0x81DB08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x81D540", Offset = "0x81D540", VA = "0x81D540")]
		public void ShowForObject(RadarObject radarObject)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x81BA04", Offset = "0x81BA04", VA = "0x81BA04")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x81DBA8", Offset = "0x81DBA8", VA = "0x81DBA8")]
		public Hint()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class RadarColorizer : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[CompilerGenerated]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RadarColorizer <>4__this;

			[Token(Token = "0x170004B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001709")]
				[Address(RVA = "0x81DF18", Offset = "0x81DF18", VA = "0x81DF18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170B")]
				[Address(RVA = "0x81DF60", Offset = "0x81DF60", VA = "0x81DF60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x81DD64", Offset = "0x81DD64", VA = "0x81DD64")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x81DD94", Offset = "0x81DD94", VA = "0x81DD94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x81DD98", Offset = "0x81DD98", VA = "0x81DD98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0x81DF20", Offset = "0x81DF20", VA = "0x81DF20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Graphic[] interfaceElementsToColorize;

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x81DBB0", Offset = "0x81DBB0", VA = "0x81DBB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x81DCF0", Offset = "0x81DCF0", VA = "0x81DCF0")]
		[IteratorStateMachine(typeof(<Start>d__2))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x81DD8C", Offset = "0x81DD8C", VA = "0x81DD8C")]
		public RadarColorizer()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class RadarDrawer : MonoBehaviour
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Add here Canvas, where placed this radar UI. It also can be loaded automatically.")]
		[SerializeField]
		private Canvas selfCanvas;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Bring here RectTransform, which contains all radar UI Elements.")]
		[SerializeField]
		private RectTransform mainRadarWindow;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Bring here objectsPanel parent RectTransform.")]
		[SerializeField]
		private RectTransform radarPanelParent;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Bring here RectTransform, which will contain all radar icons objects.")]
		[SerializeField]
		private RectTransform objectsPanel;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Bring here RectTransform, which will present center map icon (like player icon).")]
		[SerializeField]
		private RectTransform directionArrow;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 startPanelCenter;

		[Token(Token = "0x170004B2")]
		public Canvas SelfCanvas
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x82B8A8", Offset = "0x82B8A8", VA = "0x82B8A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x82B8B0", Offset = "0x82B8B0", VA = "0x82B8B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x82B974", Offset = "0x82B974", VA = "0x82B974")]
		private void Update()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x82BC34", Offset = "0x82BC34", VA = "0x82BC34")]
		private void UpdateRadarRotation()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x82BCB0", Offset = "0x82BCB0", VA = "0x82BCB0")]
		public void DestroyIcon(Image icon)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x82BD24", Offset = "0x82BD24", VA = "0x82BD24")]
		public void UpdateIconForObject(RadarObject radarObject, bool isFirstDraw = false)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x82C0D4", Offset = "0x82C0D4", VA = "0x82C0D4")]
		private void SetIconPosition(RadarObject radarObject)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x82C26C", Offset = "0x82C26C", VA = "0x82C26C")]
		public void UpdateIconStickedPositionAndRotation(RadarObject radarObject)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x82C890", Offset = "0x82C890", VA = "0x82C890")]
		private bool IsPointOnRadar(Vector2 point, bool isRadarCircle = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x82CA4C", Offset = "0x82CA4C", VA = "0x82CA4C")]
		public RadarDrawer()
		{
		}
	}
}
namespace AQUAS
{
	[Token(Token = "0x2000386")]
	public class AQUAS_BubbleBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float averageUpdrift;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterLevel;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mainCamera;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject smallBubble;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int smallBubbleCount;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxSmallBubbleCount;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AQUAS_SmallBubbleBehaviour smallBubbleBehaviour;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x82CA54", Offset = "0x82CA54", VA = "0x82CA54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x82CACC", Offset = "0x82CACC", VA = "0x82CACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x82CC34", Offset = "0x82CC34", VA = "0x82CC34")]
		private void SmallBubbleSpawner()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x82CED4", Offset = "0x82CED4", VA = "0x82CED4")]
		public AQUAS_BubbleBehaviour()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class AQUAS_BubbleMorph : MonoBehaviour
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float t;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float t2;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(5f)]
		[Header("Duration of a full morphing cycle")]
		public float tTarget;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x82CEDC", Offset = "0x82CEDC", VA = "0x82CEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x82CF34", Offset = "0x82CF34", VA = "0x82CF34")]
		private void Update()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x82D1A8", Offset = "0x82D1A8", VA = "0x82D1A8")]
		public AQUAS_BubbleMorph()
		{
		}
	}
	[Token(Token = "0x2000388")]
	[AddComponentMenu("AQUAS/Essentials/AQUAS Camera")]
	[RequireComponent(typeof(Camera))]
	public class AQUAS_Camera : MonoBehaviour
	{
		[Token(Token = "0x600171D")]
		[Address(RVA = "0x82D1B0", Offset = "0x82D1B0", VA = "0x82D1B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x82D1B4", Offset = "0x82D1B4", VA = "0x82D1B4")]
		private void Set()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x82D2DC", Offset = "0x82D2DC", VA = "0x82D2DC")]
		public AQUAS_Camera()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class AQUAS_Caustics : MonoBehaviour
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fps;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D[] frames;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxCausticDepth;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int frameIndex;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Projector projector;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float currentScale;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float aspectRatio;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool overrideWaterLevel;

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x82D2E4", Offset = "0x82D2E4", VA = "0x82D2E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x82D5C4", Offset = "0x82D5C4", VA = "0x82D5C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x82D51C", Offset = "0x82D51C", VA = "0x82D51C")]
		private void NextFrame()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x82D9F0", Offset = "0x82D9F0", VA = "0x82D9F0")]
		public AQUAS_Caustics()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[ExecuteInEditMode]
	public class AQUAS_Container : MonoBehaviour
	{
		[Token(Token = "0x6001724")]
		[Address(RVA = "0x82D9F8", Offset = "0x82D9F8", VA = "0x82D9F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x82DA24", Offset = "0x82DA24", VA = "0x82DA24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x82DA50", Offset = "0x82DA50", VA = "0x82DA50")]
		public AQUAS_Container()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[AddComponentMenu("AQUAS/Essentials/Depth Support")]
	public class AQUAS_DepthSupport : MonoBehaviour
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterPlane;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask cullingMask;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x82DA58", Offset = "0x82DA58", VA = "0x82DA58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x82DE28", Offset = "0x82DE28", VA = "0x82DE28")]
		public AQUAS_DepthSupport()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[ExecuteInEditMode]
	[AddComponentMenu("AQUAS/Essentials/Reflection")]
	public class AQUAS_Reflection : MonoBehaviour
	{
		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_DisablePixelLights;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_TextureSize;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_ClipPlaneOffset;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask m_ReflectLayers;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hashtable m_ReflectionCameras;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideRendering;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ignoreOcclusionCulling;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool overrideWaterLevel;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x82DE50", Offset = "0x82DE50", VA = "0x82DE50")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x82F3B4", Offset = "0x82F3B4", VA = "0x82F3B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x82ED50", Offset = "0x82ED50", VA = "0x82ED50")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x82E800", Offset = "0x82E800", VA = "0x82E800")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x82F784", Offset = "0x82F784", VA = "0x82F784")]
		private static float sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x82F0B4", Offset = "0x82F0B4", VA = "0x82F0B4")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x82F264", Offset = "0x82F264", VA = "0x82F264")]
		private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x82F020", Offset = "0x82F020", VA = "0x82F020")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x82F7A4", Offset = "0x82F7A4", VA = "0x82F7A4")]
		public AQUAS_Reflection()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class AQUAS_ReflectNot : MonoBehaviour
	{
		[Token(Token = "0x6001732")]
		[Address(RVA = "0x82F840", Offset = "0x82F840", VA = "0x82F840")]
		public AQUAS_ReflectNot()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class AQUAS_RenderColor : MonoBehaviour
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transparencyQuality;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject plane;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layerMask;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x82F848", Offset = "0x82F848", VA = "0x82F848")]
		private void Start()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x82F970", Offset = "0x82F970", VA = "0x82F970")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x82FA8C", Offset = "0x82FA8C", VA = "0x82FA8C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x82FB38", Offset = "0x82FB38", VA = "0x82FB38")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x82FC60", Offset = "0x82FC60", VA = "0x82FC60")]
		public AQUAS_RenderColor()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class AQUAS_RenderDepth : MonoBehaviour
	{
		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject plane;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material material;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string shaderPath;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool checkForGridProjection;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x82FC88", Offset = "0x82FC88", VA = "0x82FC88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x82FE98", Offset = "0x82FE98", VA = "0x82FE98")]
		private void Update()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x830030", Offset = "0x830030", VA = "0x830030")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x8300B4", Offset = "0x8300B4", VA = "0x8300B4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x830160", Offset = "0x830160", VA = "0x830160")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x83020C", Offset = "0x83020C", VA = "0x83020C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x8302EC", Offset = "0x8302EC", VA = "0x8302EC")]
		public AQUAS_RenderDepth()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class AQUAS_RippleController : MonoBehaviour
	{
		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject body;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject particleObject;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject particleObjectMove;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem particles;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.MainModule main;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.EmissionModule emission;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ParticleSystem.ShapeModule shape;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystemRenderer particleRenderer;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem particlesMove;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystem.MainModule mainMove;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystem.EmissionModule emissionMove;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem.ShapeModule shapeMove;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystemRenderer particleRendererMove;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float maxBound;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float speed;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 firstVec;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 secondVec;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float angle;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float startLifetime;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float startSize;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float rateOverTime;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float shapeSize;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Mesh mesh;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Mesh referenceMesh;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float waterLevel;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool ceaseRipples;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture target;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject waterPlane;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Material> waterMatList;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material[] waterMat;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int index;

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x8302FC", Offset = "0x8302FC", VA = "0x8302FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x830794", Offset = "0x830794", VA = "0x830794")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x830F20", Offset = "0x830F20", VA = "0x830F20")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x831148", Offset = "0x831148", VA = "0x831148")]
		private Mesh getRelevantMesh(Mesh inputMesh, bool underwaterObject)
		{
			return null;
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x831418", Offset = "0x831418", VA = "0x831418")]
		public AQUAS_RippleController()
		{
		}
	}
	[Token(Token = "0x2000391")]
	[AddComponentMenu("AQUAS/Essentials/Ripple Effect")]
	public class AQUAS_RippleManager : MonoBehaviour
	{
		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 4f)]
		public int numberOfObjects;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(10f)]
		[TextArea(1, 3)]
		public string objectsInfo;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(10f)]
		public GameObject[] objects;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(10f)]
		[Header("Waterplane to apply ripples to.")]
		[Space(10f)]
		public GameObject waterplane;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x83142C", Offset = "0x83142C", VA = "0x83142C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x8314D0", Offset = "0x8314D0", VA = "0x8314D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x831880", Offset = "0x831880", VA = "0x831880")]
		public AQUAS_RippleManager()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class AQUAS_SmallBubbleBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float averageUpdrift;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterLevel;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject mainCamera;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float updriftFactor;

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x8318D8", Offset = "0x8318D8", VA = "0x8318D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x831908", Offset = "0x831908", VA = "0x831908")]
		private void Update()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x831A70", Offset = "0x831A70", VA = "0x831A70")]
		public AQUAS_SmallBubbleBehaviour()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AddComponentMenu("AQUAS/Essentials/Camera Lock")]
	public class AQUAS_CamLock : MonoBehaviour
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mainCamera;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool scaleToFrustum;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Header("Settings for dynamic meshes")]
		public bool useDynamicMesh;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(32f, 256f)]
		public int resolution;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Camera[] cameras;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Camera[] sceneCameras;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x831A78", Offset = "0x831A78", VA = "0x831A78")]
		private void Start()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x832254", Offset = "0x832254", VA = "0x832254")]
		private void Update()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x831F38", Offset = "0x831F38", VA = "0x831F38")]
		private Mesh CreateMesh()
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x83230C", Offset = "0x83230C", VA = "0x83230C")]
		private void GetCameras()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x832330", Offset = "0x832330", VA = "0x832330")]
		private void HookUpCameras()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x8324F8", Offset = "0x8324F8", VA = "0x8324F8")]
		private void HookUpSceneCameras()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x83267C", Offset = "0x83267C", VA = "0x83267C")]
		public AQUAS_CamLock()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class AQUAS_ProjectedGrid : MonoBehaviour
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterplane;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject ContainerObj;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] children;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AQUAS_Caustics[] causticComponents;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject projectorObj;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera projector;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] farFrustumCorners;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] nearFrustumCorners;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] pFarFrustumCorners;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] pNearFrustumCorners;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material[] materials;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float waterLevel;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Vector3> intersectionPoints;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector4 minMax;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x83268C", Offset = "0x83268C", VA = "0x83268C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x832F2C", Offset = "0x832F2C", VA = "0x832F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x833A40", Offset = "0x833A40", VA = "0x833A40")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x834300", Offset = "0x834300", VA = "0x834300")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x833F28", Offset = "0x833F28", VA = "0x833F28")]
		private void PositionPlane()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x833438", Offset = "0x833438", VA = "0x833438")]
		private void GetAllIntersectionPoints(float level)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x83434C", Offset = "0x83434C", VA = "0x83434C")]
		private bool LinePlaneIntersection(Vector3 startPoint, Vector3 targetPoint, Vector3 planeOrigin)
		{
			return default(bool);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x834428", Offset = "0x834428", VA = "0x834428")]
		private Vector3 GetIntersectionPoint(Vector3 startPoint, Vector3 targetPoint, Vector3 planeOrigin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x8337A0", Offset = "0x8337A0", VA = "0x8337A0")]
		private Vector3 AimProjector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x834068", Offset = "0x834068", VA = "0x834068")]
		private Vector4 GetBordersInViewport()
		{
			return default(Vector4);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x8345A8", Offset = "0x8345A8", VA = "0x8345A8")]
		public AQUAS_ProjectedGrid()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class AQUAS_BoundaryMask : MonoBehaviour
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material matNull;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture target;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject nextCam;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject boundaryObj;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x8345B0", Offset = "0x8345B0", VA = "0x8345B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x8347AC", Offset = "0x8347AC", VA = "0x8347AC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x834858", Offset = "0x834858", VA = "0x834858")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x834904", Offset = "0x834904", VA = "0x834904")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x834A30", Offset = "0x834A30", VA = "0x834A30")]
		public AQUAS_BoundaryMask()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class AQUAS_CaptureBackground : MonoBehaviour
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waterObj;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture target;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera cam;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int quality;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask layerMask;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x834A38", Offset = "0x834A38", VA = "0x834A38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x834BAC", Offset = "0x834BAC", VA = "0x834BAC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x834CC8", Offset = "0x834CC8", VA = "0x834CC8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x834D74", Offset = "0x834D74", VA = "0x834D74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x834E40", Offset = "0x834E40", VA = "0x834E40")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x834F6C", Offset = "0x834F6C", VA = "0x834F6C")]
		public AQUAS_CaptureBackground()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class AQUAS_FrontFaceMask : MonoBehaviour
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material bufferMat;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material matNull;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture target;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject nextCam;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject waterObj;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer rend;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader[] waterShaders;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool checkForGridProjection;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x834F9C", Offset = "0x834F9C", VA = "0x834F9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8351CC", Offset = "0x8351CC", VA = "0x8351CC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x8353A4", Offset = "0x8353A4", VA = "0x8353A4")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x8354DC", Offset = "0x8354DC", VA = "0x8354DC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x8355F0", Offset = "0x8355F0", VA = "0x8355F0")]
		public AQUAS_FrontFaceMask()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class AQUAS_UnderWaterEffect : MonoBehaviour
	{
		[Token(Token = "0x2000399")]
		public enum QUALITY
		{
			[Token(Token = "0x4001C53")]
			low,
			[Token(Token = "0x4001C54")]
			medium,
			[Token(Token = "0x4001C55")]
			high
		}

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Underwater Settings")]
		public LayerMask cullingMask;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public QUALITY backFaceQuality;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.1f, 1f)]
		public float fogFade;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 0.1f)]
		public float distortionStrength;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 0.002f)]
		public float blurSize;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 10f)]
		public int blurSmoothness;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enableWetLensEffect;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0.5f, 3f)]
		public float wetLensDuration;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Underwater Audio Settings")]
		[Space(10f)]
		public AudioClip underwaterAmbientSound;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 1f)]
		public float underwaterAmbientVolume;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip diveSplashSound;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0f, 1f)]
		public float diveSplashVolume;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip surfaceSplashSound;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Range(0f, 1f)]
		public float surfaceSplashVolume;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("Bubble Spawn Settings")]
		[Space(10f)]
		[Range(5f, 50f)]
		public int maximumBubbleCount;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool spawnBubbles;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float fogDensity;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float deepFogDensity;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float maxFogDepth;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float adjustedFogDensity;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color fogColor;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color deepFogColor;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Color adjustedFogColor;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject container;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject boundaryMask;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject volumeMask;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject frontFaceMask;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject background;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject waterPlane;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] waterObjects;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject[] staticBoundaries;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public GameObject dynamicBoundary;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMat;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material blurMat;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material dropletMaskMat;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public RenderTexture mask;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTexture buffer1;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTexture buffer2;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RenderTexture fogBuffer;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RenderTexture dropletBuffer;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private RenderTexture dropletMask;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool underwater;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject audioObject;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private AudioSource underwaterAmbient;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private AudioSource diveSplash;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private AudioSource surfaceSplash;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool diveSplashPlayed;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool surfaceSplashPlayed;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject bubbleContainer;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject bubble;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private AQUAS_BubbleBehaviour bubbleBehaviour;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float t2;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float bubbleSpawnTimer;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int maxBubbleCount;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int bubbleCount;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x835600", Offset = "0x835600", VA = "0x835600")]
		private void Start()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x836C80", Offset = "0x836C80", VA = "0x836C80")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x837318", Offset = "0x837318", VA = "0x837318")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x837574", Offset = "0x837574", VA = "0x837574")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x837A5C", Offset = "0x837A5C", VA = "0x837A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x837F4C", Offset = "0x837F4C", VA = "0x837F4C")]
		private void BubbleSpawner()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x8385C0", Offset = "0x8385C0", VA = "0x8385C0")]
		public AQUAS_UnderWaterEffect()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class AQUAS_UnderWaterEffect_Simple : MonoBehaviour
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 0.1f)]
		[Header("Underwater Settings")]
		public float distortionStrength;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 0.002f)]
		public float blurSize;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 10f)]
		public int blurSmoothness;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool enableWetLensEffect;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.5f, 3f)]
		public float wetLensDuration;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(10f)]
		[Header("Underwater Audio Settings")]
		public AudioClip underwaterAmbientSound;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float underwaterAmbientVolume;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip diveSplashSound;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 1f)]
		public float diveSplashVolume;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip surfaceSplashSound;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 1f)]
		public float surfaceSplashVolume;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(5f, 50f)]
		[Space(10f)]
		[Header("Bubble Spawn Settings")]
		public int maximumBubbleCount;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool spawnBubbles;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float fogDensity;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maxFogDepth;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color fogColor;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Color deepFogColor;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Color adjustedFogColor;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool defaultFog;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color defaultFogColor;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FogMode defaultFogMode;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float defaultFogDensity;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float t;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int realBlurSmoothness;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject waterPlane;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material underwaterMat;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material blurMat;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture underwaterBuffer;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture buffer1;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture buffer2;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool underwater;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public float waterLevel;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject audioObject;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AudioSource underwaterAmbient;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AudioSource diveSplash;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private AudioSource surfaceSplash;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool diveSplashPlayed;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool surfaceSplashPlayed;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject bubbleContainer;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject bubble;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AQUAS_BubbleBehaviour bubbleBehaviour;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float t2;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float bubbleSpawnTimer;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int maxBubbleCount;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int bubbleCount;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x83864C", Offset = "0x83864C", VA = "0x83864C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x838F6C", Offset = "0x838F6C", VA = "0x838F6C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x8391D8", Offset = "0x8391D8", VA = "0x8391D8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x839310", Offset = "0x839310", VA = "0x839310")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x8396B4", Offset = "0x8396B4", VA = "0x8396B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x839A9C", Offset = "0x839A9C", VA = "0x839A9C")]
		private void ToggleFog(bool isUnderwater)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x839B18", Offset = "0x839B18", VA = "0x839B18")]
		private void WetLensDistortionSwitch(bool isUnderwater)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x839B80", Offset = "0x839B80", VA = "0x839B80")]
		private void BubbleSpawner()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x83A1F4", Offset = "0x83A1F4", VA = "0x83A1F4")]
		public AQUAS_UnderWaterEffect_Simple()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class AQUAS_UnderwaterParameters : MonoBehaviour
	{
		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color mainFogColor;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color deepFogColor;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float mainFogDensity;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float deepFogDensity;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxFogDepth;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x83A254", Offset = "0x83A254", VA = "0x83A254")]
		public AQUAS_UnderwaterParameters()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class AQUAS_VolumeMask : MonoBehaviour
	{
		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material matNull;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture target;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject nextCam;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject waterObj;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer rend;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader[] waterShaders;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool checkForGridProjection;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x83A270", Offset = "0x83A270", VA = "0x83A270")]
		private void Start()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x83A4A0", Offset = "0x83A4A0", VA = "0x83A4A0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x83A678", Offset = "0x83A678", VA = "0x83A678")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x83A7B0", Offset = "0x83A7B0", VA = "0x83A7B0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x83A8DC", Offset = "0x83A8DC", VA = "0x83A8DC")]
		public AQUAS_VolumeMask()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[RequireComponent(typeof(Rigidbody))]
	[AddComponentMenu("AQUAS/Utils/Buoyancy")]
	public class AQUAS_Buoyancy : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		public enum debugModes
		{
			[Token(Token = "0x4001CA0")]
			none,
			[Token(Token = "0x4001CA1")]
			showAffectedFaces,
			[Token(Token = "0x4001CA2")]
			showForceRepresentation,
			[Token(Token = "0x4001CA3")]
			showReferenceVolume
		}

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waterLevel;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waterDensity;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(5f)]
		public bool useBalanceFactor;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 balanceFactor;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		[Space(20f)]
		public float dynamicSurface;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(1f, 10f)]
		public float bounceFrequency;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(5f)]
		[Header("Debugging can be ver performance heavy!")]
		public debugModes debug;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triangles;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh mesh;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float effWaterDensity;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float regWaterDensity;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maxWaterDensity;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x83A8EC", Offset = "0x83A8EC", VA = "0x83A8EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x83A9EC", Offset = "0x83A9EC", VA = "0x83A9EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x83BB48", Offset = "0x83BB48", VA = "0x83BB48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x83AA40", Offset = "0x83AA40", VA = "0x83AA40")]
		private void AddForce()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x83BBBC", Offset = "0x83BBBC", VA = "0x83BBBC")]
		private Vector3 Center(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x83BC48", Offset = "0x83BC48", VA = "0x83BC48")]
		private Vector3 Normal(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x83BE48", Offset = "0x83BE48", VA = "0x83BE48")]
		private float Area(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x83C500", Offset = "0x83C500", VA = "0x83C500")]
		public AQUAS_Buoyancy()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AddComponentMenu("AQUAS/Utils/Camera Navigation")]
	public class AQUAS_CamNav : MonoBehaviour
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool freeLookEnabled;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showCursor;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lookSpeed;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float moveSpeed;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sprintSpeed;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_yaw;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_pitch;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool rotate;

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x83C514", Offset = "0x83C514", VA = "0x83C514")]
		private void Start()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x83C5AC", Offset = "0x83C5AC", VA = "0x83C5AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x83C9D0", Offset = "0x83C9D0", VA = "0x83C9D0")]
		public AQUAS_CamNav()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[ExecuteInEditMode]
	[AddComponentMenu("AQUAS/Utils/Render Queue Controller")]
	public class AQUAS_RenderQueueEditor : MonoBehaviour
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int renderQueueIndex;

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x83C9F0", Offset = "0x83C9F0", VA = "0x83C9F0")]
		public AQUAS_RenderQueueEditor()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class AQUAS_Look : MonoBehaviour
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Info")]
		private List<float> _rotArrayX;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<float> _rotArrayY;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotAverageX;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotAverageY;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float mouseDeltaX;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float mouseDeltaY;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Settings")]
		public bool _isLocked;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float _sensitivityX;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float _sensitivityY;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("The more steps, the smoother it will be.")]
		public int _averageFromThisManySteps;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Object to be rotated when mouse moves left/right.")]
		[Header("References")]
		public Transform _playerRootT;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Object to be rotated when mouse moves up/down.")]
		public Transform _cameraT;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x83CA00", Offset = "0x83CA00", VA = "0x83CA00")]
		private void Update()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x83CA04", Offset = "0x83CA04", VA = "0x83CA04")]
		private void MouseLookAveraged()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x83CCD4", Offset = "0x83CCD4", VA = "0x83CCD4")]
		public AQUAS_Look()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class AQUAS_Walk : MonoBehaviour
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_moveSpeed;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterController m_controller;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x83CD9C", Offset = "0x83CD9C", VA = "0x83CD9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x83CE4C", Offset = "0x83CE4C", VA = "0x83CE4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x83D0B8", Offset = "0x83D0B8", VA = "0x83D0B8")]
		public AQUAS_Walk()
		{
		}
	}
}
