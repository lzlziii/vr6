using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Il2CppDummyDll;
using RootMotion.FinalIK;
using SynthesisvrArcade;
using UniRx;
using UniRx.Diagnostics;
using UniRx.InternalUtil;
using UniRx.Operators;
using UniRx.Triggers;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Scripting;
using UnityEngine.UI;
using YamlDotNet.Core;
using YamlDotNet.Core.Events;
using YamlDotNet.Core.Tokens;
using YamlDotNet.Samples.Helpers;
using YamlDotNet.Serialization;
using YamlDotNet.Serialization.EventEmitters;
using YamlDotNet.Serialization.TypeInspectors;
using YamlDotNet.Serialization.Utilities;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12A9340", Offset = "0x12A9340")]
internal sealed class <>f__AnonymousType0<<google>j__TPar, <bing>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x12AC090", Offset = "0x12AC090")]
	private readonly <google>j__TPar <google>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x12AC0A4", Offset = "0x12AC0A4")]
	private readonly <bing>j__TPar <bing>i__Field;

	[Token(Token = "0x17000001")]
	public <google>j__TPar google
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<google>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <bing>j__TPar bing
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<bing>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<google>j__TPar google, <bing>j__TPar bing)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public static class AwaitExtensions
{
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA720", Offset = "0x12AA720")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TaskCompletionSource<int> tcs;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Process process;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x2430630", Offset = "0x2430630", VA = "0x2430630")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x24306F8", Offset = "0x24306F8", VA = "0x24306F8")]
		internal void <GetAwaiter>b__0(object s, EventArgs e)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA730", Offset = "0x12AA730")]
	private struct <WrapErrors>d__1 : IAsyncStateMachine
	{
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Task task;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1405798", Offset = "0x1405798", VA = "0x1405798", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x14057A0", Offset = "0x14057A0", VA = "0x14057A0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x24304E0", Offset = "0x24304E0", VA = "0x24304E0")]
	public static TaskAwaiter<int> GetAwaiter(this Process process)
	{
		return default(TaskAwaiter<int>);
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2430638", Offset = "0x2430638", VA = "0x2430638")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12B5040", Offset = "0x12B5040")]
	public static void WrapErrors(this Task task)
	{
	}
}
[Token(Token = "0x2000004")]
public static class Awaiters
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WaitForUpdate _waitForUpdate;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly WaitForFixedUpdate _waitForFixedUpdate;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly WaitForEndOfFrame _waitForEndOfFrame;

	[Token(Token = "0x17000003")]
	public static WaitForUpdate NextFrame
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x24308E8", Offset = "0x24308E8", VA = "0x24308E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public static WaitForFixedUpdate FixedUpdate
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x2430950", Offset = "0x2430950", VA = "0x2430950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public static WaitForEndOfFrame EndOfFrame
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x24309B8", Offset = "0x24309B8", VA = "0x24309B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2430A20", Offset = "0x2430A20", VA = "0x2430A20")]
	public static WaitForSeconds Seconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2430A8C", Offset = "0x2430A8C", VA = "0x2430A8C")]
	public static WaitForSecondsRealtime SecondsRealtime(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x2430AF8", Offset = "0x2430AF8", VA = "0x2430AF8")]
	public static WaitUntil Until(Func<bool> predicate)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x2430B5C", Offset = "0x2430B5C", VA = "0x2430B5C")]
	public static WaitWhile While(Func<bool> predicate)
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
public static class IEnumeratorAwaitExtensions
{
	[Token(Token = "0x2000334")]
	public class SimpleCoroutineAwaiter<T> : INotifyCompletion
	{
		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isDone;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception _exception;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action _continuation;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _result;

		[Token(Token = "0x1700025F")]
		public bool IsCompleted
		{
			[Token(Token = "0x600160C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600160D")]
		public T GetResult()
		{
			return (T)null;
		}

		[Token(Token = "0x600160E")]
		public void Complete(T result, Exception e)
		{
		}

		[Token(Token = "0x600160F")]
		private void System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(Action continuation)
		{
		}

		[Token(Token = "0x6001610")]
		public SimpleCoroutineAwaiter()
		{
		}
	}

	[Token(Token = "0x2000335")]
	public class SimpleCoroutineAwaiter : INotifyCompletion
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isDone;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Exception _exception;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action _continuation;

		[Token(Token = "0x17000260")]
		public bool IsCompleted
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x243B77C", Offset = "0x243B77C", VA = "0x243B77C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x243B784", Offset = "0x243B784", VA = "0x243B784")]
		public void GetResult()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x243B6BC", Offset = "0x243B6BC", VA = "0x243B6BC")]
		public void Complete(Exception e)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x243B7D0", Offset = "0x243B7D0", VA = "0x243B7D0", Slot = "4")]
		private void System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(Action continuation)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x243ADE8", Offset = "0x243ADE8", VA = "0x243ADE8")]
		public SimpleCoroutineAwaiter()
		{
		}
	}

	[Token(Token = "0x2000336")]
	private class CoroutineWrapper<T>
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE60", Offset = "0x12ABE60")]
		private sealed class <Run>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineWrapper<T> <>4__this;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002148")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002145")]
			[DebuggerHidden]
			public <Run>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002146")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002147")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002149")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SimpleCoroutineAwaiter<T> _awaiter;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Stack<IEnumerator> _processStack;

		[Token(Token = "0x6001616")]
		public CoroutineWrapper(IEnumerator coroutine, SimpleCoroutineAwaiter<T> awaiter)
		{
		}

		[Token(Token = "0x6001617")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC7A0", Offset = "0x12BC7A0")]
		public IEnumerator Run()
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		private string GenerateObjectTraceMessage(List<Type> objTrace)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		private static List<Type> GenerateObjectTrace(IEnumerable<IEnumerator> enumerators)
		{
			return null;
		}
	}

	[Token(Token = "0x2000337")]
	private static class InstructionWrappers
	{
		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE70", Offset = "0x12ABE70")]
		private sealed class <ReturnVoid>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object instruction;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleCoroutineAwaiter awaiter;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600214E")]
				[Address(RVA = "0x243B70C", Offset = "0x243B70C", VA = "0x243B70C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002150")]
				[Address(RVA = "0x243B774", Offset = "0x243B774", VA = "0x243B774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600214B")]
			[Address(RVA = "0x243B258", Offset = "0x243B258", VA = "0x243B258")]
			[DebuggerHidden]
			public <ReturnVoid>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600214C")]
			[Address(RVA = "0x243B65C", Offset = "0x243B65C", VA = "0x243B65C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0x243B660", Offset = "0x243B660", VA = "0x243B660", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0x243B714", Offset = "0x243B714", VA = "0x243B714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE80", Offset = "0x12ABE80")]
		private sealed class <AssetBundleCreateRequest>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetBundleCreateRequest instruction;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleCoroutineAwaiter<AssetBundle> awaiter;

			[Token(Token = "0x1700038B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002154")]
				[Address(RVA = "0x243B3B4", Offset = "0x243B3B4", VA = "0x243B3B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002156")]
				[Address(RVA = "0x243B41C", Offset = "0x243B41C", VA = "0x243B41C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0x243B284", Offset = "0x243B284", VA = "0x243B284")]
			[DebuggerHidden]
			public <AssetBundleCreateRequest>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002152")]
			[Address(RVA = "0x243B308", Offset = "0x243B308", VA = "0x243B308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002153")]
			[Address(RVA = "0x243B30C", Offset = "0x243B30C", VA = "0x243B30C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002155")]
			[Address(RVA = "0x243B3BC", Offset = "0x243B3BC", VA = "0x243B3BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE90", Offset = "0x12ABE90")]
		private sealed class <ReturnSelf>d__2<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T instruction;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SimpleCoroutineAwaiter<T> awaiter;

			[Token(Token = "0x1700038D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600215A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600215C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002157")]
			[DebuggerHidden]
			public <ReturnSelf>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002158")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002159")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600215B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABEA0", Offset = "0x12ABEA0")]
		private sealed class <AssetBundleRequest>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetBundleRequest instruction;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleCoroutineAwaiter<UnityEngine.Object> awaiter;

			[Token(Token = "0x1700038F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002160")]
				[Address(RVA = "0x243B4D0", Offset = "0x243B4D0", VA = "0x243B4D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002162")]
				[Address(RVA = "0x243B538", Offset = "0x243B538", VA = "0x243B538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600215D")]
			[Address(RVA = "0x243B2B0", Offset = "0x243B2B0", VA = "0x243B2B0")]
			[DebuggerHidden]
			public <AssetBundleRequest>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600215E")]
			[Address(RVA = "0x243B424", Offset = "0x243B424", VA = "0x243B424", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600215F")]
			[Address(RVA = "0x243B428", Offset = "0x243B428", VA = "0x243B428", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0x243B4D8", Offset = "0x243B4D8", VA = "0x243B4D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABEB0", Offset = "0x12ABEB0")]
		private sealed class <ResourceRequest>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResourceRequest instruction;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleCoroutineAwaiter<UnityEngine.Object> awaiter;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002166")]
				[Address(RVA = "0x243B5EC", Offset = "0x243B5EC", VA = "0x243B5EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002168")]
				[Address(RVA = "0x243B654", Offset = "0x243B654", VA = "0x243B654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0x243B2DC", Offset = "0x243B2DC", VA = "0x243B2DC")]
			[DebuggerHidden]
			public <ResourceRequest>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0x243B540", Offset = "0x243B540", VA = "0x243B540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0x243B544", Offset = "0x243B544", VA = "0x243B544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0x243B5F4", Offset = "0x243B5F4", VA = "0x243B5F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x243B0FC", Offset = "0x243B0FC", VA = "0x243B0FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC804", Offset = "0x12BC804")]
		public static IEnumerator ReturnVoid(SimpleCoroutineAwaiter awaiter, object instruction)
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x243AEC0", Offset = "0x243AEC0", VA = "0x243AEC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC868", Offset = "0x12BC868")]
		public static IEnumerator AssetBundleCreateRequest(SimpleCoroutineAwaiter<AssetBundle> awaiter, AssetBundleCreateRequest instruction)
		{
			return null;
		}

		[Token(Token = "0x600161C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC8CC", Offset = "0x12BC8CC")]
		public static IEnumerator ReturnSelf<T>(SimpleCoroutineAwaiter<T> awaiter, T instruction)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x243AF84", Offset = "0x243AF84", VA = "0x243AF84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC930", Offset = "0x12BC930")]
		public static IEnumerator AssetBundleRequest(SimpleCoroutineAwaiter<UnityEngine.Object> awaiter, AssetBundleRequest instruction)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x243B1DC", Offset = "0x243B1DC", VA = "0x243B1DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC994", Offset = "0x12BC994")]
		public static IEnumerator ResourceRequest(SimpleCoroutineAwaiter<UnityEngine.Object> awaiter, ResourceRequest instruction)
		{
			return null;
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA740", Offset = "0x12AA740")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCoroutineAwaiter<UnityEngine.Object> awaiter;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceRequest instruction;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x243A9FC", Offset = "0x243A9FC", VA = "0x243A9FC")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x243B194", Offset = "0x243B194", VA = "0x243B194")]
		internal void <GetAwaiter>b__0()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA750", Offset = "0x12AA750")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCoroutineAwaiter<AssetBundle> awaiter;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetBundleCreateRequest instruction;

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x243AC38", Offset = "0x243AC38", VA = "0x243AC38")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x243AE78", Offset = "0x243AE78", VA = "0x243AE78")]
		internal void <GetAwaiter>b__0()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA760", Offset = "0x12AA760")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCoroutineAwaiter<UnityEngine.Object> awaiter;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetBundleRequest instruction;

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x243AD08", Offset = "0x243AD08", VA = "0x243AD08")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x243AF3C", Offset = "0x243AF3C", VA = "0x243AF3C")]
		internal void <GetAwaiter>b__0()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA770", Offset = "0x12AA770")]
	private sealed class <>c__DisplayClass12_0<T>
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<T> coroutine;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SimpleCoroutineAwaiter<T> awaiter;

		[Token(Token = "0x6001625")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001626")]
		internal void <GetAwaiter>b__0()
		{
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA780", Offset = "0x12AA780")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IEnumerator coroutine;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleCoroutineAwaiter<object> awaiter;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x243ADD8", Offset = "0x243ADD8", VA = "0x243ADD8")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x243B000", Offset = "0x243B000", VA = "0x243B000")]
		internal void <GetAwaiter>b__0()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA790", Offset = "0x12AA790")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SimpleCoroutineAwaiter awaiter;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object instruction;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x243ADE0", Offset = "0x243ADE0", VA = "0x243ADE0")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x243B0B4", Offset = "0x243B0B4", VA = "0x243B0B4")]
		internal void <GetAwaiterReturnVoid>b__0()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7A0", Offset = "0x12AA7A0")]
	private sealed class <>c__DisplayClass15_0<T>
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SimpleCoroutineAwaiter<T> awaiter;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T instruction;

		[Token(Token = "0x600162B")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600162C")]
		internal void <GetAwaiterReturnSelf>b__0()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7B0", Offset = "0x12AA7B0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action action;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x243ADF0", Offset = "0x243ADF0", VA = "0x243ADF0")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x243B178", Offset = "0x243B178", VA = "0x243B178")]
		internal void <RunOnUnityScheduler>b__0(object _)
		{
		}
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x243A808", Offset = "0x243A808", VA = "0x243A808")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitForSeconds instruction)
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x243A8CC", Offset = "0x243A8CC", VA = "0x243A8CC")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitForUpdate instruction)
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x243A8D0", Offset = "0x243A8D0", VA = "0x243A8D0")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitForEndOfFrame instruction)
	{
		return null;
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x243A8D4", Offset = "0x243A8D4", VA = "0x243A8D4")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitForFixedUpdate instruction)
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x243A8D8", Offset = "0x243A8D8", VA = "0x243A8D8")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitForSecondsRealtime instruction)
	{
		return null;
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x243A8DC", Offset = "0x243A8DC", VA = "0x243A8DC")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitUntil instruction)
	{
		return null;
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x243A8E0", Offset = "0x243A8E0", VA = "0x243A8E0")]
	public static SimpleCoroutineAwaiter GetAwaiter(this WaitWhile instruction)
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x243A8E4", Offset = "0x243A8E4", VA = "0x243A8E4")]
	public static SimpleCoroutineAwaiter<AsyncOperation> GetAwaiter(this AsyncOperation instruction)
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x243A934", Offset = "0x243A934", VA = "0x243A934")]
	public static SimpleCoroutineAwaiter<UnityEngine.Object> GetAwaiter(this ResourceRequest instruction)
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x243AB20", Offset = "0x243AB20", VA = "0x243AB20")]
	public static SimpleCoroutineAwaiter<WWW> GetAwaiter(this WWW instruction)
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x243AB70", Offset = "0x243AB70", VA = "0x243AB70")]
	public static SimpleCoroutineAwaiter<AssetBundle> GetAwaiter(this AssetBundleCreateRequest instruction)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x243AC40", Offset = "0x243AC40", VA = "0x243AC40")]
	public static SimpleCoroutineAwaiter<UnityEngine.Object> GetAwaiter(this AssetBundleRequest instruction)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	public static SimpleCoroutineAwaiter<T> GetAwaiter<T>(this IEnumerator<T> coroutine)
	{
		return null;
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x243AD10", Offset = "0x243AD10", VA = "0x243AD10")]
	public static SimpleCoroutineAwaiter<object> GetAwaiter(this IEnumerator coroutine)
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x243A80C", Offset = "0x243A80C", VA = "0x243A80C")]
	private static SimpleCoroutineAwaiter GetAwaiterReturnVoid(object instruction)
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	private static SimpleCoroutineAwaiter<T> GetAwaiterReturnSelf<T>(T instruction)
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x243AA04", Offset = "0x243AA04", VA = "0x243AA04")]
	private static void RunOnUnityScheduler(Action action)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x243ADF8", Offset = "0x243ADF8", VA = "0x243ADF8")]
	private static void Assert(bool condition)
	{
	}
}
[Token(Token = "0x2000006")]
public static class TaskExtensions
{
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7C0", Offset = "0x12AA7C0")]
	private sealed class <AsIEnumerator>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Task task;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x275415C", Offset = "0x275415C", VA = "0x275415C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x27541C4", Offset = "0x27541C4", VA = "0x27541C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x2754098", Offset = "0x2754098", VA = "0x2754098")]
		[DebuggerHidden]
		public <AsIEnumerator>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x27540C4", Offset = "0x27540C4", VA = "0x27540C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x27540C8", Offset = "0x27540C8", VA = "0x27540C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x2754164", Offset = "0x2754164", VA = "0x2754164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7D0", Offset = "0x12AA7D0")]
	private sealed class <AsIEnumerator>d__1<T> : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Task<T> task;

		[Token(Token = "0x17000263")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001638")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600163A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001635")]
		[DebuggerHidden]
		public <AsIEnumerator>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001636")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001637")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x2754028", Offset = "0x2754028", VA = "0x2754028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5194", Offset = "0x12B5194")]
	public static IEnumerator AsIEnumerator(this Task task)
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5208", Offset = "0x12B5208")]
	public static IEnumerator<T> AsIEnumerator<T>(this Task<T> task)
	{
		return null;
	}
}
[Token(Token = "0x2000007")]
public class WaitForBackgroundThread
{
	[Serializable]
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7E0", Offset = "0x12AA7E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__0_0;

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x18C5F64", Offset = "0x18C5F64", VA = "0x18C5F64")]
		public <>c()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x18C5F6C", Offset = "0x18C5F6C", VA = "0x18C5F6C")]
		internal void <GetAwaiter>b__0_0()
		{
		}
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x18C41F8", Offset = "0x18C41F8", VA = "0x18C41F8")]
	public ConfiguredTaskAwaitable.ConfiguredTaskAwaiter GetAwaiter()
	{
		return default(ConfiguredTaskAwaitable.ConfiguredTaskAwaiter);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x18C41F0", Offset = "0x18C41F0", VA = "0x18C41F0")]
	public WaitForBackgroundThread()
	{
	}
}
[Token(Token = "0x2000008")]
public class WaitForUpdate : CustomYieldInstruction
{
	[Token(Token = "0x17000006")]
	public override bool keepWaiting
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0x18C5F70", Offset = "0x18C5F70", VA = "0x18C5F70", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x18C4300", Offset = "0x18C4300", VA = "0x18C4300")]
	public WaitForUpdate()
	{
	}
}
[Token(Token = "0x2000009")]
public static class UnirxAwaitExtensions
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA7F0", Offset = "0x12AA7F0")]
	private sealed class <>c__DisplayClass0_0<T>
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IDisposable subscription;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TaskCompletionSource<T> tcs;

		[Token(Token = "0x600163E")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x600163F")]
		internal void <GetAwaiter>b__0(T x)
		{
		}

		[Token(Token = "0x6001640")]
		internal void <GetAwaiter>b__1(Exception ex)
		{
		}
	}

	[Token(Token = "0x6000029")]
	public static TaskAwaiter<T> GetAwaiter<T>(this UniRx.IObservable<T> stream)
	{
		return default(TaskAwaiter<T>);
	}
}
[Token(Token = "0x200000A")]
public class MoveSample : MonoBehaviour
{
	[Token(Token = "0x600002A")]
	[Address(RVA = "0x243B814", Offset = "0x243B814", VA = "0x243B814")]
	private void Start()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x243BAB8", Offset = "0x243BAB8", VA = "0x243BAB8")]
	public MoveSample()
	{
	}
}
[Token(Token = "0x200000B")]
public class RotateSample : MonoBehaviour
{
	[Token(Token = "0x600002C")]
	[Address(RVA = "0x274CDE0", Offset = "0x274CDE0", VA = "0x274CDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x274D07C", Offset = "0x274D07C", VA = "0x274D07C")]
	public RotateSample()
	{
	}
}
[Token(Token = "0x200000C")]
public class SampleInfo : MonoBehaviour
{
	[Token(Token = "0x600002E")]
	[Address(RVA = "0x274D084", Offset = "0x274D084", VA = "0x274D084")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x274D338", Offset = "0x274D338", VA = "0x274D338")]
	public SampleInfo()
	{
	}
}
[Token(Token = "0x200000D")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x2000345")]
	private delegate void ApplyTween();

	[Token(Token = "0x2000346")]
	public enum EaseType
	{
		[Token(Token = "0x4000AD4")]
		easeInQuad,
		[Token(Token = "0x4000AD5")]
		easeOutQuad,
		[Token(Token = "0x4000AD6")]
		easeInOutQuad,
		[Token(Token = "0x4000AD7")]
		easeInCubic,
		[Token(Token = "0x4000AD8")]
		easeOutCubic,
		[Token(Token = "0x4000AD9")]
		easeInOutCubic,
		[Token(Token = "0x4000ADA")]
		easeInQuart,
		[Token(Token = "0x4000ADB")]
		easeOutQuart,
		[Token(Token = "0x4000ADC")]
		easeInOutQuart,
		[Token(Token = "0x4000ADD")]
		easeInQuint,
		[Token(Token = "0x4000ADE")]
		easeOutQuint,
		[Token(Token = "0x4000ADF")]
		easeInOutQuint,
		[Token(Token = "0x4000AE0")]
		easeInSine,
		[Token(Token = "0x4000AE1")]
		easeOutSine,
		[Token(Token = "0x4000AE2")]
		easeInOutSine,
		[Token(Token = "0x4000AE3")]
		easeInExpo,
		[Token(Token = "0x4000AE4")]
		easeOutExpo,
		[Token(Token = "0x4000AE5")]
		easeInOutExpo,
		[Token(Token = "0x4000AE6")]
		easeInCirc,
		[Token(Token = "0x4000AE7")]
		easeOutCirc,
		[Token(Token = "0x4000AE8")]
		easeInOutCirc,
		[Token(Token = "0x4000AE9")]
		linear,
		[Token(Token = "0x4000AEA")]
		spring,
		[Token(Token = "0x4000AEB")]
		easeInBounce,
		[Token(Token = "0x4000AEC")]
		easeOutBounce,
		[Token(Token = "0x4000AED")]
		easeInOutBounce,
		[Token(Token = "0x4000AEE")]
		easeInBack,
		[Token(Token = "0x4000AEF")]
		easeOutBack,
		[Token(Token = "0x4000AF0")]
		easeInOutBack,
		[Token(Token = "0x4000AF1")]
		easeInElastic,
		[Token(Token = "0x4000AF2")]
		easeOutElastic,
		[Token(Token = "0x4000AF3")]
		easeInOutElastic,
		[Token(Token = "0x4000AF4")]
		punch
	}

	[Token(Token = "0x2000347")]
	public enum LoopType
	{
		[Token(Token = "0x4000AF6")]
		none,
		[Token(Token = "0x4000AF7")]
		loop,
		[Token(Token = "0x4000AF8")]
		pingPong
	}

	[Token(Token = "0x2000348")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4000AFA")]
		_Color,
		[Token(Token = "0x4000AFB")]
		_SpecColor,
		[Token(Token = "0x4000AFC")]
		_Emission,
		[Token(Token = "0x4000AFD")]
		_ReflectColor
	}

	[Token(Token = "0x2000349")]
	public static class Defaults
	{
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x200034A")]
	private class CRSpline
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x388DC7C", Offset = "0x388DC7C", VA = "0x388DC7C")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x388DD04", Offset = "0x388DD04", VA = "0x388DD04")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA800", Offset = "0x12AA800")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x388D83C", Offset = "0x388D83C", VA = "0x388D83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x388D8A4", Offset = "0x388D8A4", VA = "0x388D8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x388D738", Offset = "0x388D738", VA = "0x388D738")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x388D764", Offset = "0x388D764", VA = "0x388D764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x388D768", Offset = "0x388D768", VA = "0x388D768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x388D844", Offset = "0x388D844", VA = "0x388D844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA810", Offset = "0x12AA810")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0x388D9B8", Offset = "0x388D9B8", VA = "0x388D9B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x388DA20", Offset = "0x388DA20", VA = "0x388DA20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x388D8AC", Offset = "0x388D8AC", VA = "0x388D8AC")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x388D8D8", Offset = "0x388D8D8", VA = "0x388D8D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x388D8DC", Offset = "0x388D8DC", VA = "0x388D8DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x388D9C0", Offset = "0x388D9C0", VA = "0x388D9C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA820", Offset = "0x12AA820")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x388D6C8", Offset = "0x388D6C8", VA = "0x388D6C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x388D730", Offset = "0x388D730", VA = "0x388D730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x388D5EC", Offset = "0x388D5EC", VA = "0x388D5EC")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x388D618", Offset = "0x388D618", VA = "0x388D618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x388D61C", Offset = "0x388D61C", VA = "0x388D61C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x388D6D0", Offset = "0x388D6D0", VA = "0x388D6D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x16A6AD8", Offset = "0x16A6AD8", VA = "0x16A6AD8")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x16A6D5C", Offset = "0x16A6D5C", VA = "0x16A6D5C")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x16A7D2C", Offset = "0x16A7D2C", VA = "0x16A7D2C")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x16A800C", Offset = "0x16A800C", VA = "0x16A800C")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x16A8A60", Offset = "0x16A8A60", VA = "0x16A8A60")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x16A8C10", Offset = "0x16A8C10", VA = "0x16A8C10")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x16A9170", Offset = "0x16A9170", VA = "0x16A9170")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x16A8080", Offset = "0x16A8080", VA = "0x16A8080")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x16A934C", Offset = "0x16A934C", VA = "0x16A934C")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x16A8C84", Offset = "0x16A8C84", VA = "0x16A8C84")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x16A9528", Offset = "0x16A9528", VA = "0x16A9528")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x16A9754", Offset = "0x16A9754", VA = "0x16A9754")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x16A9B5C", Offset = "0x16A9B5C", VA = "0x16A9B5C")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x16A9D88", Offset = "0x16A9D88", VA = "0x16A9D88")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x16A9EE4", Offset = "0x16A9EE4", VA = "0x16A9EE4")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x16AA078", Offset = "0x16AA078", VA = "0x16AA078")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x16AA128", Offset = "0x16AA128", VA = "0x16AA128")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x16AA2F4", Offset = "0x16AA2F4", VA = "0x16AA2F4")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x16AA954", Offset = "0x16AA954", VA = "0x16AA954")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x16AAB20", Offset = "0x16AAB20", VA = "0x16AAB20")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x16AAE40", Offset = "0x16AAE40", VA = "0x16AAE40")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x16AB00C", Offset = "0x16AB00C", VA = "0x16AB00C")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x16AB3AC", Offset = "0x16AB3AC", VA = "0x16AB3AC")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x16AB578", Offset = "0x16AB578", VA = "0x16AB578")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x16ABE78", Offset = "0x16ABE78", VA = "0x16ABE78")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x16AC044", Offset = "0x16AC044", VA = "0x16AC044")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x16A6B90", Offset = "0x16A6B90", VA = "0x16A6B90")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x16AC120", Offset = "0x16AC120", VA = "0x16AC120")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x16AC1FC", Offset = "0x16AC1FC", VA = "0x16AC1FC")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x16AC3C8", Offset = "0x16AC3C8", VA = "0x16AC3C8")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x16AC760", Offset = "0x16AC760", VA = "0x16AC760")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x16AC92C", Offset = "0x16AC92C", VA = "0x16AC92C")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x16ACDD8", Offset = "0x16ACDD8", VA = "0x16ACDD8")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x16ACFA4", Offset = "0x16ACFA4", VA = "0x16ACFA4")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x16AD080", Offset = "0x16AD080", VA = "0x16AD080")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x16AD24C", Offset = "0x16AD24C", VA = "0x16AD24C")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x16AD328", Offset = "0x16AD328", VA = "0x16AD328")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x16AD4F4", Offset = "0x16AD4F4", VA = "0x16AD4F4")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x16AD894", Offset = "0x16AD894", VA = "0x16AD894")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x16ADA60", Offset = "0x16ADA60", VA = "0x16ADA60")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x16ADFC4", Offset = "0x16ADFC4", VA = "0x16ADFC4")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x16AE190", Offset = "0x16AE190", VA = "0x16AE190")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x16AE26C", Offset = "0x16AE26C", VA = "0x16AE26C")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x16AE438", Offset = "0x16AE438", VA = "0x16AE438")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x16AE514", Offset = "0x16AE514", VA = "0x16AE514")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x16AE6E0", Offset = "0x16AE6E0", VA = "0x16AE6E0")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x16AE7BC", Offset = "0x16AE7BC", VA = "0x16AE7BC")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x16AE988", Offset = "0x16AE988", VA = "0x16AE988")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x16AEA64", Offset = "0x16AEA64", VA = "0x16AEA64")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x16AEC30", Offset = "0x16AEC30", VA = "0x16AEC30")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x16AED0C", Offset = "0x16AED0C", VA = "0x16AED0C")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x16AEED8", Offset = "0x16AEED8", VA = "0x16AEED8")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x16AEFF8", Offset = "0x16AEFF8", VA = "0x16AEFF8")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x16AF1C4", Offset = "0x16AF1C4", VA = "0x16AF1C4")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x16AF2E4", Offset = "0x16AF2E4", VA = "0x16AF2E4")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x16AF4B0", Offset = "0x16AF4B0", VA = "0x16AF4B0")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x16AF5D0", Offset = "0x16AF5D0", VA = "0x16AF5D0")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x16B0650", Offset = "0x16B0650", VA = "0x16B0650")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x16B04E4", Offset = "0x16B04E4", VA = "0x16B04E4")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x16B0284", Offset = "0x16B0284", VA = "0x16B0284")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x16AFFF0", Offset = "0x16AFFF0", VA = "0x16AFFF0")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x16AFDFC", Offset = "0x16AFDFC", VA = "0x16AFDFC")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x16B078C", Offset = "0x16B078C", VA = "0x16B078C")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x16B10E4", Offset = "0x16B10E4", VA = "0x16B10E4")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x16B5E88", Offset = "0x16B5E88", VA = "0x16B5E88")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x16B565C", Offset = "0x16B565C", VA = "0x16B565C")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x16B13F0", Offset = "0x16B13F0", VA = "0x16B13F0")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x16B1B20", Offset = "0x16B1B20", VA = "0x16B1B20")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x16B216C", Offset = "0x16B216C", VA = "0x16B216C")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x16B2768", Offset = "0x16B2768", VA = "0x16B2768")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x16B2CB8", Offset = "0x16B2CB8", VA = "0x16B2CB8")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x16B310C", Offset = "0x16B310C", VA = "0x16B310C")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x16B3554", Offset = "0x16B3554", VA = "0x16B3554")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x16B3B84", Offset = "0x16B3B84", VA = "0x16B3B84")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x16B3FD4", Offset = "0x16B3FD4", VA = "0x16B3FD4")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x16B4490", Offset = "0x16B4490", VA = "0x16B4490")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x16B4784", Offset = "0x16B4784", VA = "0x16B4784")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x16B4A4C", Offset = "0x16B4A4C", VA = "0x16B4A4C")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x16B4D14", Offset = "0x16B4D14", VA = "0x16B4D14")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x16B504C", Offset = "0x16B504C", VA = "0x16B504C")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x16B5358", Offset = "0x16B5358", VA = "0x16B5358")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x16B658C", Offset = "0x16B658C", VA = "0x16B658C")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x16B688C", Offset = "0x16B688C", VA = "0x16B688C")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x16B6ABC", Offset = "0x16B6ABC", VA = "0x16B6ABC")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x16B6CB0", Offset = "0x16B6CB0", VA = "0x16B6CB0")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x16B6E50", Offset = "0x16B6E50", VA = "0x16B6E50")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x16B6FA8", Offset = "0x16B6FA8", VA = "0x16B6FA8")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x16B7508", Offset = "0x16B7508", VA = "0x16B7508")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x16B7674", Offset = "0x16B7674", VA = "0x16B7674")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x16B7678", Offset = "0x16B7678", VA = "0x16B7678")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x16B79F0", Offset = "0x16B79F0", VA = "0x16B79F0")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x16B7C14", Offset = "0x16B7C14", VA = "0x16B7C14")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x16B7F6C", Offset = "0x16B7F6C", VA = "0x16B7F6C")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x16B80D4", Offset = "0x16B80D4", VA = "0x16B80D4")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x16B82AC", Offset = "0x16B82AC", VA = "0x16B82AC")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x16B85F4", Offset = "0x16B85F4", VA = "0x16B85F4")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x16B88A0", Offset = "0x16B88A0", VA = "0x16B88A0")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x16B8CD0", Offset = "0x16B8CD0", VA = "0x16B8CD0")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x16B8EE4", Offset = "0x16B8EE4", VA = "0x16B8EE4")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x16B916C", Offset = "0x16B916C", VA = "0x16B916C")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x16B9638", Offset = "0x16B9638", VA = "0x16B9638")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x16B9998", Offset = "0x16B9998", VA = "0x16B9998")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x16B9BF8", Offset = "0x16B9BF8", VA = "0x16B9BF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B528C", Offset = "0x12B528C")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x16B9C68", Offset = "0x16B9C68", VA = "0x16B9C68")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x16BA5FC", Offset = "0x16BA5FC", VA = "0x16BA5FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B52F0", Offset = "0x12B52F0")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x16BA66C", Offset = "0x16BA66C", VA = "0x16BA66C")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x16BA750", Offset = "0x16BA750", VA = "0x16BA750")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x16BA820", Offset = "0x16BA820", VA = "0x16BA820")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x16BA8C4", Offset = "0x16BA8C4", VA = "0x16BA8C4")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x16BAA8C", Offset = "0x16BAA8C", VA = "0x16BAA8C")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x16BAB98", Offset = "0x16BAB98", VA = "0x16BAB98")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x16BAA4C", Offset = "0x16BAA4C", VA = "0x16BAA4C")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x16BAC7C", Offset = "0x16BAC7C", VA = "0x16BAC7C")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x16BB6F8", Offset = "0x16BB6F8", VA = "0x16BB6F8")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x16BAD3C", Offset = "0x16BAD3C", VA = "0x16BAD3C")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x16BB8A8", Offset = "0x16BB8A8", VA = "0x16BB8A8")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x16BBA84", Offset = "0x16BBA84", VA = "0x16BBA84")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x16BBF34", Offset = "0x16BBF34", VA = "0x16BBF34")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x16BC160", Offset = "0x16BC160", VA = "0x16BC160")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x16BC7C4", Offset = "0x16BC7C4", VA = "0x16BC7C4")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x16BC990", Offset = "0x16BC990", VA = "0x16BC990")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x16BCF78", Offset = "0x16BCF78", VA = "0x16BCF78")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x16BD144", Offset = "0x16BD144", VA = "0x16BD144")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x16BE2EC", Offset = "0x16BE2EC", VA = "0x16BE2EC")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x16BD9E0", Offset = "0x16BD9E0", VA = "0x16BD9E0")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x16BE4B8", Offset = "0x16BE4B8", VA = "0x16BE4B8")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x16BE684", Offset = "0x16BE684", VA = "0x16BE684")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x16B6414", Offset = "0x16B6414", VA = "0x16B6414")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x16BEF68", Offset = "0x16BEF68", VA = "0x16BEF68")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x16BF018", Offset = "0x16BF018", VA = "0x16BF018")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x16BF0B0", Offset = "0x16BF0B0", VA = "0x16BF0B0")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x16BF1E8", Offset = "0x16BF1E8", VA = "0x16BF1E8")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x16BF308", Offset = "0x16BF308", VA = "0x16BF308")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x16BF414", Offset = "0x16BF414", VA = "0x16BF414")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x16BF678", Offset = "0x16BF678", VA = "0x16BF678")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x16BF73C", Offset = "0x16BF73C", VA = "0x16BF73C")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x16BF8B0", Offset = "0x16BF8B0", VA = "0x16BF8B0")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x16BFA04", Offset = "0x16BFA04", VA = "0x16BFA04")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x16BFAE8", Offset = "0x16BFAE8", VA = "0x16BFAE8")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x16BFBAC", Offset = "0x16BFBAC", VA = "0x16BFBAC")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x16BFD20", Offset = "0x16BFD20", VA = "0x16BFD20")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x16BFE74", Offset = "0x16BFE74", VA = "0x16BFE74")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x16BFF58", Offset = "0x16BFF58", VA = "0x16BFF58")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x16C001C", Offset = "0x16C001C", VA = "0x16C001C")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x16C0190", Offset = "0x16C0190", VA = "0x16C0190")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x16C02E4", Offset = "0x16C02E4", VA = "0x16C02E4")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x16C035C", Offset = "0x16C035C", VA = "0x16C035C")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x16C0634", Offset = "0x16C0634", VA = "0x16C0634")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x16C06F8", Offset = "0x16C06F8", VA = "0x16C06F8")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x16C086C", Offset = "0x16C086C", VA = "0x16C086C")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x16C09C0", Offset = "0x16C09C0", VA = "0x16C09C0")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x16C0AA4", Offset = "0x16C0AA4", VA = "0x16C0AA4")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x16C0B68", Offset = "0x16C0B68", VA = "0x16C0B68")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x16C0CDC", Offset = "0x16C0CDC", VA = "0x16C0CDC")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x16C0E30", Offset = "0x16C0E30", VA = "0x16C0E30")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x16C0F14", Offset = "0x16C0F14", VA = "0x16C0F14")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x16C0FD8", Offset = "0x16C0FD8", VA = "0x16C0FD8")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x16C114C", Offset = "0x16C114C", VA = "0x16C114C")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x16C12A0", Offset = "0x16C12A0", VA = "0x16C12A0")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x16C1390", Offset = "0x16C1390", VA = "0x16C1390")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x16C163C", Offset = "0x16C163C", VA = "0x16C163C")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x16C1794", Offset = "0x16C1794", VA = "0x16C1794")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x16C1B30", Offset = "0x16C1B30", VA = "0x16C1B30")]
	public static void Resume()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x16C1C50", Offset = "0x16C1C50", VA = "0x16C1C50")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x16C1E80", Offset = "0x16C1E80", VA = "0x16C1E80")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x16C1FCC", Offset = "0x16C1FCC", VA = "0x16C1FCC")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x16C2278", Offset = "0x16C2278", VA = "0x16C2278")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x16C2424", Offset = "0x16C2424", VA = "0x16C2424")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x16C2814", Offset = "0x16C2814", VA = "0x16C2814")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x16C2934", Offset = "0x16C2934", VA = "0x16C2934")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x16C2B64", Offset = "0x16C2B64", VA = "0x16C2B64")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x16C2BD8", Offset = "0x16C2BD8", VA = "0x16C2BD8")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x16C2DB4", Offset = "0x16C2DB4", VA = "0x16C2DB4")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x16C2E18", Offset = "0x16C2E18", VA = "0x16C2E18")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x16C2F74", Offset = "0x16C2F74", VA = "0x16C2F74")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x16C31AC", Offset = "0x16C31AC", VA = "0x16C31AC")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x16C352C", Offset = "0x16C352C", VA = "0x16C352C")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x16C30C4", Offset = "0x16C30C4", VA = "0x16C30C4")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x16C386C", Offset = "0x16C386C", VA = "0x16C386C")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x16C33DC", Offset = "0x16C33DC", VA = "0x16C33DC")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x16C375C", Offset = "0x16C375C", VA = "0x16C375C")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x16C3B18", Offset = "0x16C3B18", VA = "0x16C3B18")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x16C3EAC", Offset = "0x16C3EAC", VA = "0x16C3EAC")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x16A7EDC", Offset = "0x16A7EDC", VA = "0x16A7EDC")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x16C4200", Offset = "0x16C4200", VA = "0x16C4200")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x16C422C", Offset = "0x16C422C", VA = "0x16C422C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x16C5298", Offset = "0x16C5298", VA = "0x16C5298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5354", Offset = "0x12B5354")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x16C5308", Offset = "0x16C5308", VA = "0x16C5308")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x16C5348", Offset = "0x16C5348", VA = "0x16C5348")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x16C5388", Offset = "0x16C5388", VA = "0x16C5388")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x16C549C", Offset = "0x16C549C", VA = "0x16C549C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x16C5518", Offset = "0x16C5518", VA = "0x16C5518")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x16BF4F8", Offset = "0x16BF4F8", VA = "0x16BF4F8")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x16C0440", Offset = "0x16C0440", VA = "0x16C0440")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x16BE878", Offset = "0x16BE878", VA = "0x16BE878")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x16BEB3C", Offset = "0x16BEB3C", VA = "0x16BEB3C")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x16A7BD8", Offset = "0x16A7BD8", VA = "0x16A7BD8")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x16A7238", Offset = "0x16A7238", VA = "0x16A7238")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x16C551C", Offset = "0x16C551C", VA = "0x16C551C")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x16C4268", Offset = "0x16C4268", VA = "0x16C4268")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x16C559C", Offset = "0x16C559C", VA = "0x16C559C")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x16BA6D8", Offset = "0x16BA6D8", VA = "0x16BA6D8")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x16B9DE0", Offset = "0x16B9DE0", VA = "0x16B9DE0")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x16B61A4", Offset = "0x16B61A4", VA = "0x16B61A4")]
	private void Dispose()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x16BA0B8", Offset = "0x16BA0B8", VA = "0x16BA0B8")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x16BA5F8", Offset = "0x16BA5F8", VA = "0x16BA5F8")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x16BA8C0", Offset = "0x16BA8C0", VA = "0x16BA8C0")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x16C54C4", Offset = "0x16C54C4", VA = "0x16C54C4")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x16C5990", Offset = "0x16C5990", VA = "0x16C5990")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x16B6340", Offset = "0x16B6340", VA = "0x16B6340")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x16C5A18", Offset = "0x16C5A18", VA = "0x16C5A18")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x16C5B1C", Offset = "0x16C5B1C", VA = "0x16C5B1C")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x16C5B30", Offset = "0x16C5B30", VA = "0x16C5B30")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x16C5B4C", Offset = "0x16C5B4C", VA = "0x16C5B4C")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x16C5BA0", Offset = "0x16C5BA0", VA = "0x16C5BA0")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x16C5BB8", Offset = "0x16C5BB8", VA = "0x16C5BB8")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x16C5BE0", Offset = "0x16C5BE0", VA = "0x16C5BE0")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x16C5C38", Offset = "0x16C5C38", VA = "0x16C5C38")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x16C5C54", Offset = "0x16C5C54", VA = "0x16C5C54")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x16C5C7C", Offset = "0x16C5C7C", VA = "0x16C5C7C")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x16C5CD8", Offset = "0x16C5CD8", VA = "0x16C5CD8")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x16C5CF8", Offset = "0x16C5CF8", VA = "0x16C5CF8")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x16C5D28", Offset = "0x16C5D28", VA = "0x16C5D28")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x16C5D90", Offset = "0x16C5D90", VA = "0x16C5D90")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x16C5E28", Offset = "0x16C5E28", VA = "0x16C5E28")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x16C5EBC", Offset = "0x16C5EBC", VA = "0x16C5EBC")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x16C5F60", Offset = "0x16C5F60", VA = "0x16C5F60")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x16C5FF8", Offset = "0x16C5FF8", VA = "0x16C5FF8")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x16C6090", Offset = "0x16C6090", VA = "0x16C6090")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x16C6180", Offset = "0x16C6180", VA = "0x16C6180")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x16C622C", Offset = "0x16C622C", VA = "0x16C622C")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x16C62D8", Offset = "0x16C62D8", VA = "0x16C62D8")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x16C63D0", Offset = "0x16C63D0", VA = "0x16C63D0")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x16C640C", Offset = "0x16C640C", VA = "0x16C640C")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x16C64D8", Offset = "0x16C64D8", VA = "0x16C64D8")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x16C655C", Offset = "0x16C655C", VA = "0x16C655C")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x16C658C", Offset = "0x16C658C", VA = "0x16C658C")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x16C65CC", Offset = "0x16C65CC", VA = "0x16C65CC")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x16B9578", Offset = "0x16B9578", VA = "0x16B9578")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x16C6650", Offset = "0x16C6650", VA = "0x16C6650")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x16C6738", Offset = "0x16C6738", VA = "0x16C6738")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x16C681C", Offset = "0x16C681C", VA = "0x16C681C")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x200000E")]
public class SynthesisArcadeObject : MonoBehaviour
{
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA830", Offset = "0x12AA830")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeInterface svrInterface;

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x2753BD4", Offset = "0x2753BD4", VA = "0x2753BD4")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x2753BDC", Offset = "0x2753BDC", VA = "0x2753BDC")]
		internal int <EnableLicensingCheckTask>b__0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA840", Offset = "0x12AA840")]
	private sealed class <EnableLicensingCheckTask>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SynthesisArcadeObject <>4__this;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass7_0 <>8__1;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x2753FB8", Offset = "0x2753FB8", VA = "0x2753FB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x2754020", Offset = "0x2754020", VA = "0x2754020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x275392C", Offset = "0x275392C", VA = "0x275392C")]
		[DebuggerHidden]
		public <EnableLicensingCheckTask>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x2753C8C", Offset = "0x2753C8C", VA = "0x2753C8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x2753C90", Offset = "0x2753C90", VA = "0x2753C90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x2753FC0", Offset = "0x2753FC0", VA = "0x2753FC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SynthesisArcadeObject _instance;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine co;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string synthesisGameId;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool synthesisCdnBuild;

	[Token(Token = "0x17000007")]
	public static SynthesisArcadeObject Instance
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x2753844", Offset = "0x2753844", VA = "0x2753844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x2753894", Offset = "0x2753894", VA = "0x2753894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x27538BC", Offset = "0x27538BC", VA = "0x27538BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B53B8", Offset = "0x12B53B8")]
	private IEnumerator EnableLicensingCheckTask()
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x2753958", Offset = "0x2753958", VA = "0x2753958")]
	protected string filehash(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x2753BC4", Offset = "0x2753BC4", VA = "0x2753BC4")]
	public SynthesisArcadeObject()
	{
	}
}
namespace YamlDotNet
{
	[Token(Token = "0x200000F")]
	internal static class StandardRegexOptions
	{
		[Token(Token = "0x400002F")]
		public const RegexOptions Compiled = RegexOptions.None;
	}
	[Token(Token = "0x2000010")]
	internal static class ReflectionExtensions
	{
		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA850", Offset = "0x12AA850")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BindingFlags instancePublic;

			[Token(Token = "0x6001666")]
			[Address(RVA = "0x2857C78", Offset = "0x2857C78", VA = "0x2857C78")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0x2857E98", Offset = "0x2857E98", VA = "0x2857E98")]
			internal IEnumerable<PropertyInfo> <GetPublicProperties>b__0(Type i)
			{
				return null;
			}
		}

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FieldInfo remoteStackTraceField;

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x2857924", Offset = "0x2857924", VA = "0x2857924")]
		public static Type BaseType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x2857944", Offset = "0x2857944", VA = "0x2857944")]
		public static bool IsValueType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x285795C", Offset = "0x285795C", VA = "0x285795C")]
		public static bool IsGenericType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x285797C", Offset = "0x285797C", VA = "0x285797C")]
		public static bool IsInterface(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x2857994", Offset = "0x2857994", VA = "0x2857994")]
		public static bool IsEnum(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x28579B4", Offset = "0x28579B4", VA = "0x28579B4")]
		public static bool HasDefaultConstructor(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x2857A94", Offset = "0x2857A94", VA = "0x2857A94")]
		public static TypeCode GetTypeCode(this Type type)
		{
			return default(TypeCode);
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0x2856310", Offset = "0x2856310", VA = "0x2856310")]
		public static PropertyInfo GetPublicProperty(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x2857AFC", Offset = "0x2857AFC", VA = "0x2857AFC")]
		public static IEnumerable<PropertyInfo> GetPublicProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x2857C80", Offset = "0x2857C80", VA = "0x2857C80")]
		public static IEnumerable<MethodInfo> GetPublicStaticMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x2857CA4", Offset = "0x2857CA4", VA = "0x2857CA4")]
		public static MethodInfo GetPublicStaticMethod(this Type type, string name, params Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x28562F4", Offset = "0x28562F4", VA = "0x28562F4")]
		public static MethodInfo GetPublicInstanceMethod(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x2857CCC", Offset = "0x2857CCC", VA = "0x2857CCC")]
		public static Exception Unwrap(this TargetInvocationException ex)
		{
			return null;
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x2857DC8", Offset = "0x2857DC8", VA = "0x2857DC8")]
		public static bool IsInstanceOf(this Type type, object o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000011")]
	internal sealed class CultureInfoAdapter : CultureInfo
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly IFormatProvider _provider;

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x2855F90", Offset = "0x2855F90", VA = "0x2855F90")]
		public CultureInfoAdapter(CultureInfo baseCulture, IFormatProvider provider)
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0x285602C", Offset = "0x285602C", VA = "0x285602C", Slot = "19")]
		public override object GetFormat(Type formatType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000012")]
	internal static class PropertyInfoExtensions
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x28578E8", Offset = "0x28578E8", VA = "0x28578E8")]
		public static object ReadValue(this PropertyInfo property, object target)
		{
			return null;
		}
	}
}
namespace YamlDotNet.Serialization
{
	[Token(Token = "0x2000013")]
	public abstract class BuilderSkeleton<TBuilder> where TBuilder : BuilderSkeleton<TBuilder>
	{
		[Serializable]
		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA860", Offset = "0x12AA860")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Nothing, IYamlTypeConverter> <>9__5_0;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> <>9__13_0;

			[Token(Token = "0x6001669")]
			public <>c()
			{
			}

			[Token(Token = "0x600166A")]
			internal IYamlTypeConverter <.ctor>b__5_0(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x600166B")]
			internal void <WithTypeConverter>b__13_0(IRegistrationLocationSelectionSyntax<IYamlTypeConverter> w)
			{
			}
		}

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA870", Offset = "0x12AA870")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IYamlTypeConverter typeConverter;

			[Token(Token = "0x600166C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600166D")]
			internal IYamlTypeConverter <WithTypeConverter>b__0(Nothing _)
			{
				return null;
			}
		}

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA880", Offset = "0x12AA880")]
		private sealed class <>c__DisplayClass15_0<TYamlTypeConverter> where TYamlTypeConverter : IYamlTypeConverter
		{
			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> typeConverterFactory;

			[Token(Token = "0x600166E")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600166F")]
			internal IYamlTypeConverter <WithTypeConverter>b__0(IYamlTypeConverter wrapped, Nothing _)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA890", Offset = "0x12AA890")]
		private sealed class <>c__18<TTypeInspector> where TTypeInspector : ITypeInspector
		{
			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__18<TTypeInspector> <>9;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> <>9__18_0;

			[Token(Token = "0x6001671")]
			public <>c__18()
			{
			}

			[Token(Token = "0x6001672")]
			internal void <WithTypeInspector>b__18_0(IRegistrationLocationSelectionSyntax<ITypeInspector> w)
			{
			}
		}

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8A0", Offset = "0x12AA8A0")]
		private sealed class <>c__DisplayClass19_0<TTypeInspector> where TTypeInspector : ITypeInspector
		{
			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<ITypeInspector, TTypeInspector> typeInspectorFactory;

			[Token(Token = "0x6001673")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001674")]
			internal ITypeInspector <WithTypeInspector>b__0(ITypeInspector inner)
			{
				return null;
			}
		}

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8B0", Offset = "0x12AA8B0")]
		private sealed class <>c__DisplayClass20_0<TTypeInspector> where TTypeInspector : ITypeInspector
		{
			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> typeInspectorFactory;

			[Token(Token = "0x6001675")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001676")]
			internal ITypeInspector <WithTypeInspector>b__0(ITypeInspector wrapped, ITypeInspector inner)
			{
				return null;
			}
		}

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal INamingConvention namingConvention;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal ITypeResolver typeResolver;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly YamlAttributeOverrides overrides;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly LazyComponentRegistrationList<Nothing, IYamlTypeConverter> typeConverterFactories;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly LazyComponentRegistrationList<ITypeInspector, ITypeInspector> typeInspectorFactories;

		[Token(Token = "0x17000008")]
		protected abstract TBuilder Self
		{
			[Token(Token = "0x600013B")]
			get;
		}

		[Token(Token = "0x600013A")]
		internal BuilderSkeleton()
		{
		}

		[Token(Token = "0x600013C")]
		internal ITypeInspector BuildTypeInspector()
		{
			return null;
		}

		[Token(Token = "0x600013D")]
		public TBuilder WithNamingConvention(INamingConvention namingConvention)
		{
			return null;
		}

		[Token(Token = "0x600013E")]
		public TBuilder WithTypeResolver(ITypeResolver typeResolver)
		{
			return null;
		}

		[Token(Token = "0x600013F")]
		public TBuilder WithAttributeOverride<TClass>(Expression<Func<TClass, object>> propertyAccessor, Attribute attribute)
		{
			return null;
		}

		[Token(Token = "0x6000140")]
		public TBuilder WithAttributeOverride(Type type, string member, Attribute attribute)
		{
			return null;
		}

		[Token(Token = "0x6000141")]
		public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter)
		{
			return null;
		}

		[Token(Token = "0x6000142")]
		public TBuilder WithTypeConverter(IYamlTypeConverter typeConverter, Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where)
		{
			return null;
		}

		[Token(Token = "0x6000143")]
		public TBuilder WithTypeConverter<TYamlTypeConverter>(WrapperFactory<IYamlTypeConverter, IYamlTypeConverter> typeConverterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IYamlTypeConverter>> where) where TYamlTypeConverter : IYamlTypeConverter
		{
			return null;
		}

		[Token(Token = "0x6000144")]
		public TBuilder WithoutTypeConverter<TYamlTypeConverter>() where TYamlTypeConverter : IYamlTypeConverter
		{
			return null;
		}

		[Token(Token = "0x6000145")]
		public TBuilder WithoutTypeConverter(Type converterType)
		{
			return null;
		}

		[Token(Token = "0x6000146")]
		public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory) where TTypeInspector : ITypeInspector
		{
			return null;
		}

		[Token(Token = "0x6000147")]
		public TBuilder WithTypeInspector<TTypeInspector>(Func<ITypeInspector, TTypeInspector> typeInspectorFactory, Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector
		{
			return null;
		}

		[Token(Token = "0x6000148")]
		public TBuilder WithTypeInspector<TTypeInspector>(WrapperFactory<ITypeInspector, ITypeInspector, TTypeInspector> typeInspectorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<ITypeInspector>> where) where TTypeInspector : ITypeInspector
		{
			return null;
		}

		[Token(Token = "0x6000149")]
		public TBuilder WithoutTypeInspector<TTypeInspector>() where TTypeInspector : ITypeInspector
		{
			return null;
		}

		[Token(Token = "0x600014A")]
		public TBuilder WithoutTypeInspector(Type inspectorType)
		{
			return null;
		}

		[Token(Token = "0x600014B")]
		protected IEnumerable<IYamlTypeConverter> BuildTypeConverters()
		{
			return null;
		}
	}
	[Token(Token = "0x2000014")]
	public delegate TComponent WrapperFactory<TComponentBase, TComponent>(TComponentBase wrapped) where TComponent : TComponentBase;
	[Token(Token = "0x2000015")]
	public delegate TComponent WrapperFactory<TArgument, TComponentBase, TComponent>(TComponentBase wrapped, TArgument argument) where TComponent : TComponentBase;
	[Token(Token = "0x2000016")]
	public sealed class Deserializer
	{
		[Token(Token = "0x2000357")]
		private class BackwardsCompatibleConfiguration
		{
			[Token(Token = "0x20005F7")]
			private class TypeDescriptorProxy : ITypeInspector
			{
				[Token(Token = "0x400142D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public ITypeInspector TypeDescriptor;

				[Token(Token = "0x6002169")]
				[Address(RVA = "0x2867D88", Offset = "0x2867D88", VA = "0x2867D88", Slot = "4")]
				public IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
				{
					return null;
				}

				[Token(Token = "0x600216A")]
				[Address(RVA = "0x2867E50", Offset = "0x2867E50", VA = "0x2867E50", Slot = "5")]
				public IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched)
				{
					return null;
				}

				[Token(Token = "0x600216B")]
				[Address(RVA = "0x2867B50", Offset = "0x2867B50", VA = "0x2867B50")]
				public TypeDescriptorProxy()
				{
				}
			}

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Dictionary<string, Type> predefinedTagMappings;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Dictionary<string, Type> tagMappings;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly List<IYamlTypeConverter> converters;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TypeDescriptorProxy typeDescriptor;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IValueDeserializer valueDeserializer;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1858", Offset = "0x12B1858")]
			private IList<INodeDeserializer> <NodeDeserializers>k__BackingField;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1868", Offset = "0x12B1868")]
			private IList<INodeTypeResolver> <TypeResolvers>k__BackingField;

			[Token(Token = "0x1700026D")]
			public IList<INodeDeserializer> NodeDeserializers
			{
				[Token(Token = "0x6001677")]
				[Address(RVA = "0x2867B30", Offset = "0x2867B30", VA = "0x2867B30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCBD8", Offset = "0x12BCBD8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001678")]
				[Address(RVA = "0x2867B38", Offset = "0x2867B38", VA = "0x2867B38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCBE8", Offset = "0x12BCBE8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700026E")]
			public IList<INodeTypeResolver> TypeResolvers
			{
				[Token(Token = "0x6001679")]
				[Address(RVA = "0x2867B40", Offset = "0x2867B40", VA = "0x2867B40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCBF8", Offset = "0x12BCBF8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600167A")]
				[Address(RVA = "0x2867B48", Offset = "0x2867B48", VA = "0x2867B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCC08", Offset = "0x12BCC08")]
				private set
				{
				}
			}

			[Token(Token = "0x600167B")]
			[Address(RVA = "0x28667A4", Offset = "0x28667A4", VA = "0x28667A4")]
			public BackwardsCompatibleConfiguration(IObjectFactory objectFactory, INamingConvention namingConvention, bool ignoreUnmatched, YamlAttributeOverrides overrides)
			{
			}

			[Token(Token = "0x600167C")]
			[Address(RVA = "0x286737C", Offset = "0x286737C", VA = "0x286737C")]
			public void RegisterTagMapping(string tag, Type type)
			{
			}

			[Token(Token = "0x600167D")]
			[Address(RVA = "0x2867420", Offset = "0x2867420", VA = "0x2867420")]
			public void RegisterTypeConverter(IYamlTypeConverter typeConverter)
			{
			}
		}

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly BackwardsCompatibleConfiguration backwardsCompatibleConfiguration;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IValueDeserializer valueDeserializer;

		[Token(Token = "0x17000009")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12BF78C", Offset = "0x12BF78C")]
		public IList<INodeDeserializer> NodeDeserializers
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0x286669C", Offset = "0x286669C", VA = "0x286669C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12BF7C4", Offset = "0x12BF7C4")]
		public IList<INodeTypeResolver> TypeResolvers
		{
			[Token(Token = "0x6000156")]
			[Address(RVA = "0x28666CC", Offset = "0x28666CC", VA = "0x28666CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x2866618", Offset = "0x2866618", VA = "0x2866618")]
		private void ThrowUnlessInBackwardsCompatibleMode()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x28666FC", Offset = "0x28666FC", VA = "0x28666FC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B550C", Offset = "0x12B550C")]
		public Deserializer([Optional] IObjectFactory objectFactory, [Optional] INamingConvention namingConvention, bool ignoreUnmatched = false, [Optional] YamlAttributeOverrides overrides)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x2867338", Offset = "0x2867338", VA = "0x2867338")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B5544", Offset = "0x12B5544")]
		public void RegisterTagMapping(string tag, Type type)
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x28673EC", Offset = "0x28673EC", VA = "0x28673EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B557C", Offset = "0x12B557C")]
		public void RegisterTypeConverter(IYamlTypeConverter typeConverter)
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x286748C", Offset = "0x286748C", VA = "0x286748C")]
		public Deserializer()
		{
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x2867514", Offset = "0x2867514", VA = "0x2867514")]
		private Deserializer(IValueDeserializer valueDeserializer)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x28675B0", Offset = "0x28675B0", VA = "0x28675B0")]
		public static Deserializer FromValueDeserializer(IValueDeserializer valueDeserializer)
		{
			return null;
		}

		[Token(Token = "0x600015D")]
		public T Deserialize<T>(string input)
		{
			return (T)null;
		}

		[Token(Token = "0x600015E")]
		public T Deserialize<T>(TextReader input)
		{
			return (T)null;
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x2862DD4", Offset = "0x2862DD4", VA = "0x2862DD4")]
		public object Deserialize(TextReader input)
		{
			return null;
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x286768C", Offset = "0x286768C", VA = "0x286768C")]
		public object Deserialize(string input, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x2867610", Offset = "0x2867610", VA = "0x2867610")]
		public object Deserialize(TextReader input, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000162")]
		public T Deserialize<T>(IParser parser)
		{
			return (T)null;
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x2867AA0", Offset = "0x2867AA0", VA = "0x2867AA0")]
		public object Deserialize(IParser parser)
		{
			return null;
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x28677B8", Offset = "0x28677B8", VA = "0x28677B8")]
		public object Deserialize(IParser parser, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000017")]
	public sealed class DeserializerBuilder : BuilderSkeleton<DeserializerBuilder>
	{
		[Serializable]
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8C0", Offset = "0x12AA8C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ITypeInspector, ITypeInspector> <>9__5_0;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ITypeInspector, ITypeInspector> <>9__5_2;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ITypeInspector, ITypeInspector> <>9__5_4;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Nothing, INodeDeserializer> <>9__5_8;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Nothing, INodeDeserializer> <>9__5_9;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Nothing, INodeDeserializer> <>9__5_10;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Nothing, INodeDeserializer> <>9__5_13;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Nothing, INodeTypeResolver> <>9__5_15;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Nothing, INodeTypeResolver> <>9__5_16;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<Nothing, INodeTypeResolver> <>9__5_18;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<Nothing, INodeTypeResolver> <>9__5_19;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> <>9__10_0;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> <>9__15_0;

			[Token(Token = "0x6001680")]
			[Address(RVA = "0x2868F40", Offset = "0x2868F40", VA = "0x2868F40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001681")]
			[Address(RVA = "0x2868F48", Offset = "0x2868F48", VA = "0x2868F48")]
			internal ITypeInspector <.ctor>b__5_0(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x6001682")]
			[Address(RVA = "0x2868FAC", Offset = "0x2868FAC", VA = "0x2868FAC")]
			internal ITypeInspector <.ctor>b__5_2(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x6001683")]
			[Address(RVA = "0x2869010", Offset = "0x2869010", VA = "0x2869010")]
			internal ITypeInspector <.ctor>b__5_4(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x6001684")]
			[Address(RVA = "0x2869074", Offset = "0x2869074", VA = "0x2869074")]
			internal INodeDeserializer <.ctor>b__5_8(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x6001685")]
			[Address(RVA = "0x28690D0", Offset = "0x28690D0", VA = "0x28690D0")]
			internal INodeDeserializer <.ctor>b__5_9(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x6001686")]
			[Address(RVA = "0x286912C", Offset = "0x286912C", VA = "0x286912C")]
			internal INodeDeserializer <.ctor>b__5_10(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0x2869188", Offset = "0x2869188", VA = "0x2869188")]
			internal INodeDeserializer <.ctor>b__5_13(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x6001688")]
			[Address(RVA = "0x28691E4", Offset = "0x28691E4", VA = "0x28691E4")]
			internal INodeTypeResolver <.ctor>b__5_15(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0x2869240", Offset = "0x2869240", VA = "0x2869240")]
			internal INodeTypeResolver <.ctor>b__5_16(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x600168A")]
			[Address(RVA = "0x286929C", Offset = "0x286929C", VA = "0x286929C")]
			internal INodeTypeResolver <.ctor>b__5_18(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0x28692F8", Offset = "0x28692F8", VA = "0x28692F8")]
			internal INodeTypeResolver <.ctor>b__5_19(Nothing _)
			{
				return null;
			}

			[Token(Token = "0x600168C")]
			[Address(RVA = "0x2869354", Offset = "0x2869354", VA = "0x2869354")]
			internal void <WithNodeDeserializer>b__10_0(IRegistrationLocationSelectionSyntax<INodeDeserializer> w)
			{
			}

			[Token(Token = "0x600168D")]
			[Address(RVA = "0x2869404", Offset = "0x2869404", VA = "0x2869404")]
			internal void <WithNodeTypeResolver>b__15_0(IRegistrationLocationSelectionSyntax<INodeTypeResolver> w)
			{
			}
		}

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8D0", Offset = "0x12AA8D0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public INodeDeserializer nodeDeserializer;

			[Token(Token = "0x600168E")]
			[Address(RVA = "0x28682E0", Offset = "0x28682E0", VA = "0x28682E0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600168F")]
			[Address(RVA = "0x28694B4", Offset = "0x28694B4", VA = "0x28694B4")]
			internal INodeDeserializer <WithNodeDeserializer>b__0(Nothing _)
			{
				return null;
			}
		}

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8E0", Offset = "0x12AA8E0")]
		private sealed class <>c__DisplayClass12_0<TNodeDeserializer> where TNodeDeserializer : INodeDeserializer
		{
			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<INodeDeserializer, TNodeDeserializer> nodeDeserializerFactory;

			[Token(Token = "0x6001690")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001691")]
			internal INodeDeserializer <WithNodeDeserializer>b__0(INodeDeserializer wrapped, Nothing _)
			{
				return null;
			}
		}

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA8F0", Offset = "0x12AA8F0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public INodeTypeResolver nodeTypeResolver;

			[Token(Token = "0x6001692")]
			[Address(RVA = "0x2868628", Offset = "0x2868628", VA = "0x2868628")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001693")]
			[Address(RVA = "0x28694BC", Offset = "0x28694BC", VA = "0x28694BC")]
			internal INodeTypeResolver <WithNodeTypeResolver>b__0(Nothing _)
			{
				return null;
			}
		}

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA900", Offset = "0x12AA900")]
		private sealed class <>c__DisplayClass17_0<TNodeTypeResolver> where TNodeTypeResolver : INodeTypeResolver
		{
			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<INodeTypeResolver, TNodeTypeResolver> nodeTypeResolverFactory;

			[Token(Token = "0x6001694")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001695")]
			internal INodeTypeResolver <WithNodeTypeResolver>b__0(INodeTypeResolver wrapped, Nothing _)
			{
				return null;
			}
		}

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IObjectFactory objectFactory;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly LazyComponentRegistrationList<Nothing, INodeDeserializer> nodeDeserializerFactories;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly LazyComponentRegistrationList<Nothing, INodeTypeResolver> nodeTypeResolverFactories;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<string, Type> tagMappings;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool ignoreUnmatched;

		[Token(Token = "0x1700000B")]
		protected override DeserializerBuilder Self
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0x2867F34", Offset = "0x2867F34", VA = "0x2867F34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x2861F10", Offset = "0x2861F10", VA = "0x2861F10")]
		public DeserializerBuilder()
		{
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x2867F38", Offset = "0x2867F38", VA = "0x2867F38")]
		public DeserializerBuilder WithObjectFactory(IObjectFactory objectFactory)
		{
			return null;
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0x2867FCC", Offset = "0x2867FCC", VA = "0x2867FCC")]
		public DeserializerBuilder WithObjectFactory(Func<Type, object> objectFactory)
		{
			return null;
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x2868080", Offset = "0x2868080", VA = "0x2868080")]
		public DeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer)
		{
			return null;
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x2868178", Offset = "0x2868178", VA = "0x2868178")]
		public DeserializerBuilder WithNodeDeserializer(INodeDeserializer nodeDeserializer, Action<IRegistrationLocationSelectionSyntax<INodeDeserializer>> where)
		{
			return null;
		}

		[Token(Token = "0x600016B")]
		public DeserializerBuilder WithNodeDeserializer<TNodeDeserializer>(WrapperFactory<INodeDeserializer, TNodeDeserializer> nodeDeserializerFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeDeserializer>> where) where TNodeDeserializer : INodeDeserializer
		{
			return null;
		}

		[Token(Token = "0x600016C")]
		public DeserializerBuilder WithoutNodeDeserializer<TNodeDeserializer>() where TNodeDeserializer : INodeDeserializer
		{
			return null;
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x28682E8", Offset = "0x28682E8", VA = "0x28682E8")]
		public DeserializerBuilder WithoutNodeDeserializer(Type nodeDeserializerType)
		{
			return null;
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0x28683C8", Offset = "0x28683C8", VA = "0x28683C8")]
		public DeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver)
		{
			return null;
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x28684C0", Offset = "0x28684C0", VA = "0x28684C0")]
		public DeserializerBuilder WithNodeTypeResolver(INodeTypeResolver nodeTypeResolver, Action<IRegistrationLocationSelectionSyntax<INodeTypeResolver>> where)
		{
			return null;
		}

		[Token(Token = "0x6000170")]
		public DeserializerBuilder WithNodeTypeResolver<TNodeTypeResolver>(WrapperFactory<INodeTypeResolver, TNodeTypeResolver> nodeTypeResolverFactory, Action<ITrackingRegistrationLocationSelectionSyntax<INodeTypeResolver>> where) where TNodeTypeResolver : INodeTypeResolver
		{
			return null;
		}

		[Token(Token = "0x6000171")]
		public DeserializerBuilder WithoutNodeTypeResolver<TNodeTypeResolver>() where TNodeTypeResolver : INodeTypeResolver
		{
			return null;
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0x2868630", Offset = "0x2868630", VA = "0x2868630")]
		public DeserializerBuilder WithoutNodeTypeResolver(Type nodeTypeResolverType)
		{
			return null;
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x2868710", Offset = "0x2868710", VA = "0x2868710")]
		public DeserializerBuilder WithTagMapping(string tag, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x28688D0", Offset = "0x28688D0", VA = "0x28688D0")]
		public DeserializerBuilder WithoutTagMapping(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x28689D8", Offset = "0x28689D8", VA = "0x28689D8")]
		public DeserializerBuilder IgnoreUnmatchedProperties()
		{
			return null;
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x2862DC0", Offset = "0x2862DC0", VA = "0x2862DC0")]
		public Deserializer Build()
		{
			return null;
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x28689E4", Offset = "0x28689E4", VA = "0x28689E4")]
		public IValueDeserializer BuildValueDeserializer()
		{
			return null;
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0x2868AAC", Offset = "0x2868AAC", VA = "0x2868AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B55B4", Offset = "0x12B55B4")]
		private ITypeInspector <.ctor>b__5_1(ITypeInspector inner)
		{
			return null;
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x2868B2C", Offset = "0x2868B2C", VA = "0x2868B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B55C4", Offset = "0x12B55C4")]
		private ITypeInspector <.ctor>b__5_3(ITypeInspector inner)
		{
			return null;
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0x2868BBC", Offset = "0x2868BBC", VA = "0x2868BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B55D4", Offset = "0x12B55D4")]
		private INodeDeserializer <.ctor>b__5_5(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x2868C24", Offset = "0x2868C24", VA = "0x2868C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B55E4", Offset = "0x12B55E4")]
		private INodeDeserializer <.ctor>b__5_6(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x2868C8C", Offset = "0x2868C8C", VA = "0x2868C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B55F4", Offset = "0x12B55F4")]
		private INodeDeserializer <.ctor>b__5_7(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x2868D0C", Offset = "0x2868D0C", VA = "0x2868D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5604", Offset = "0x12B5604")]
		private INodeDeserializer <.ctor>b__5_11(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0x2868D74", Offset = "0x2868D74", VA = "0x2868D74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5614", Offset = "0x12B5614")]
		private INodeDeserializer <.ctor>b__5_12(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x2868DDC", Offset = "0x2868DDC", VA = "0x2868DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5624", Offset = "0x12B5624")]
		private INodeDeserializer <.ctor>b__5_14(Nothing _)
		{
			return null;
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0x2868E74", Offset = "0x2868E74", VA = "0x2868E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5634", Offset = "0x12B5634")]
		private INodeTypeResolver <.ctor>b__5_17(Nothing _)
		{
			return null;
		}
	}
	[Token(Token = "0x2000018")]
	public sealed class EmissionPhaseObjectGraphVisitorArgs
	{
		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC0B8", Offset = "0x12AC0B8")]
		private IObjectGraphVisitor<IEmitter> <InnerVisitor>k__BackingField;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC0C8", Offset = "0x12AC0C8")]
		private IEventEmitter <EventEmitter>k__BackingField;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC0D8", Offset = "0x12AC0D8")]
		private ObjectSerializer <NestedObjectSerializer>k__BackingField;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC0E8", Offset = "0x12AC0E8")]
		private IEnumerable<IYamlTypeConverter> <TypeConverters>k__BackingField;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IEnumerable<IObjectGraphVisitor<Nothing>> preProcessingPhaseVisitors;

		[Token(Token = "0x1700000C")]
		public IObjectGraphVisitor<IEmitter> InnerVisitor
		{
			[Token(Token = "0x6000181")]
			[Address(RVA = "0x28694C4", Offset = "0x28694C4", VA = "0x28694C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5644", Offset = "0x12B5644")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000182")]
			[Address(RVA = "0x28694CC", Offset = "0x28694CC", VA = "0x28694CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5654", Offset = "0x12B5654")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000D")]
		public IEventEmitter EventEmitter
		{
			[Token(Token = "0x6000183")]
			[Address(RVA = "0x28694D4", Offset = "0x28694D4", VA = "0x28694D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5664", Offset = "0x12B5664")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000184")]
			[Address(RVA = "0x28694DC", Offset = "0x28694DC", VA = "0x28694DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5674", Offset = "0x12B5674")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000E")]
		public ObjectSerializer NestedObjectSerializer
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0x28694E4", Offset = "0x28694E4", VA = "0x28694E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5684", Offset = "0x12B5684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x28694EC", Offset = "0x28694EC", VA = "0x28694EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5694", Offset = "0x12B5694")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public IEnumerable<IYamlTypeConverter> TypeConverters
		{
			[Token(Token = "0x6000187")]
			[Address(RVA = "0x28694F4", Offset = "0x28694F4", VA = "0x28694F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56A4", Offset = "0x12B56A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000188")]
			[Address(RVA = "0x28694FC", Offset = "0x28694FC", VA = "0x28694FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56B4", Offset = "0x12B56B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x2869504", Offset = "0x2869504", VA = "0x2869504")]
		public EmissionPhaseObjectGraphVisitorArgs(IObjectGraphVisitor<IEmitter> innerVisitor, IEventEmitter eventEmitter, IEnumerable<IObjectGraphVisitor<Nothing>> preProcessingPhaseVisitors, IEnumerable<IYamlTypeConverter> typeConverters, ObjectSerializer nestedObjectSerializer)
		{
		}

		[Token(Token = "0x600018A")]
		public T GetPreProcessingPhaseObjectGraphVisitor<T>() where T : IObjectGraphVisitor<Nothing>
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000019")]
	public abstract class EventInfo
	{
		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC0F8", Offset = "0x12AC0F8")]
		private IObjectDescriptor <Source>k__BackingField;

		[Token(Token = "0x17000010")]
		public IObjectDescriptor Source
		{
			[Token(Token = "0x600018B")]
			[Address(RVA = "0x286B654", Offset = "0x286B654", VA = "0x286B654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56C4", Offset = "0x12B56C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600018C")]
			[Address(RVA = "0x286B65C", Offset = "0x286B65C", VA = "0x286B65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56D4", Offset = "0x12B56D4")]
			private set
			{
			}
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x2865CCC", Offset = "0x2865CCC", VA = "0x2865CCC")]
		protected EventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001A")]
	public class AliasEventInfo : EventInfo
	{
		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC108", Offset = "0x12AC108")]
		private string <Alias>k__BackingField;

		[Token(Token = "0x17000011")]
		public string Alias
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0x2865CF8", Offset = "0x2865CF8", VA = "0x2865CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56E4", Offset = "0x12B56E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000190")]
			[Address(RVA = "0x2865D00", Offset = "0x2865D00", VA = "0x2865D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B56F4", Offset = "0x12B56F4")]
			set
			{
			}
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x2865CA0", Offset = "0x2865CA0", VA = "0x2865CA0")]
		public AliasEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001B")]
	public class ObjectEventInfo : EventInfo
	{
		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC118", Offset = "0x12AC118")]
		private string <Anchor>k__BackingField;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC128", Offset = "0x12AC128")]
		private string <Tag>k__BackingField;

		[Token(Token = "0x17000012")]
		public string Anchor
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0x1697F50", Offset = "0x1697F50", VA = "0x1697F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5704", Offset = "0x12B5704")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000193")]
			[Address(RVA = "0x1697F58", Offset = "0x1697F58", VA = "0x1697F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5714", Offset = "0x12B5714")]
			set
			{
			}
		}

		[Token(Token = "0x17000013")]
		public string Tag
		{
			[Token(Token = "0x6000194")]
			[Address(RVA = "0x1697F60", Offset = "0x1697F60", VA = "0x1697F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5724", Offset = "0x12B5724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000195")]
			[Address(RVA = "0x1697F68", Offset = "0x1697F68", VA = "0x1697F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5734", Offset = "0x12B5734")]
			set
			{
			}
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x1697F48", Offset = "0x1697F48", VA = "0x1697F48")]
		protected ObjectEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001C")]
	public sealed class ScalarEventInfo : ObjectEventInfo
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC138", Offset = "0x12AC138")]
		private string <RenderedValue>k__BackingField;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC148", Offset = "0x12AC148")]
		private ScalarStyle <Style>k__BackingField;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC158", Offset = "0x12AC158")]
		private bool <IsPlainImplicit>k__BackingField;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC168", Offset = "0x12AC168")]
		private bool <IsQuotedImplicit>k__BackingField;

		[Token(Token = "0x17000014")]
		public string RenderedValue
		{
			[Token(Token = "0x6000197")]
			[Address(RVA = "0x169BCB4", Offset = "0x169BCB4", VA = "0x169BCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5744", Offset = "0x12B5744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000198")]
			[Address(RVA = "0x169BCBC", Offset = "0x169BCBC", VA = "0x169BCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5754", Offset = "0x12B5754")]
			set
			{
			}
		}

		[Token(Token = "0x17000015")]
		public ScalarStyle Style
		{
			[Token(Token = "0x6000199")]
			[Address(RVA = "0x169BCC4", Offset = "0x169BCC4", VA = "0x169BCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5764", Offset = "0x12B5764")]
			get
			{
				return default(ScalarStyle);
			}
			[Token(Token = "0x600019A")]
			[Address(RVA = "0x169BCCC", Offset = "0x169BCCC", VA = "0x169BCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5774", Offset = "0x12B5774")]
			set
			{
			}
		}

		[Token(Token = "0x17000016")]
		public bool IsPlainImplicit
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0x169BCD4", Offset = "0x169BCD4", VA = "0x169BCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5784", Offset = "0x12B5784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600019C")]
			[Address(RVA = "0x169BCDC", Offset = "0x169BCDC", VA = "0x169BCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5794", Offset = "0x12B5794")]
			set
			{
			}
		}

		[Token(Token = "0x17000017")]
		public bool IsQuotedImplicit
		{
			[Token(Token = "0x600019D")]
			[Address(RVA = "0x169BCE8", Offset = "0x169BCE8", VA = "0x169BCE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57A4", Offset = "0x12B57A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600019E")]
			[Address(RVA = "0x169BCF0", Offset = "0x169BCF0", VA = "0x169BCF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57B4", Offset = "0x12B57B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x16996B0", Offset = "0x16996B0", VA = "0x16996B0")]
		public ScalarEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001D")]
	public sealed class MappingStartEventInfo : ObjectEventInfo
	{
		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC178", Offset = "0x12AC178")]
		private bool <IsImplicit>k__BackingField;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC188", Offset = "0x12AC188")]
		private MappingStyle <Style>k__BackingField;

		[Token(Token = "0x17000018")]
		public bool IsImplicit
		{
			[Token(Token = "0x60001A0")]
			[Address(RVA = "0x286B698", Offset = "0x286B698", VA = "0x286B698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57C4", Offset = "0x12B57C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0x286B6A0", Offset = "0x286B6A0", VA = "0x286B6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57D4", Offset = "0x12B57D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000019")]
		public MappingStyle Style
		{
			[Token(Token = "0x60001A2")]
			[Address(RVA = "0x286B6AC", Offset = "0x286B6AC", VA = "0x286B6AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57E4", Offset = "0x12B57E4")]
			get
			{
				return default(MappingStyle);
			}
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0x286B6B4", Offset = "0x286B6B4", VA = "0x286B6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B57F4", Offset = "0x12B57F4")]
			set
			{
			}
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x286B690", Offset = "0x286B690", VA = "0x286B690")]
		public MappingStartEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001E")]
	public sealed class MappingEndEventInfo : EventInfo
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x286B664", Offset = "0x286B664", VA = "0x286B664")]
		public MappingEndEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x200001F")]
	public sealed class SequenceStartEventInfo : ObjectEventInfo
	{
		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC198", Offset = "0x12AC198")]
		private bool <IsImplicit>k__BackingField;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1A8", Offset = "0x12AC1A8")]
		private SequenceStyle <Style>k__BackingField;

		[Token(Token = "0x1700001A")]
		public bool IsImplicit
		{
			[Token(Token = "0x60001A6")]
			[Address(RVA = "0x169BCFC", Offset = "0x169BCFC", VA = "0x169BCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5804", Offset = "0x12B5804")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0x169BD04", Offset = "0x169BD04", VA = "0x169BD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5814", Offset = "0x12B5814")]
			set
			{
			}
		}

		[Token(Token = "0x1700001B")]
		public SequenceStyle Style
		{
			[Token(Token = "0x60001A8")]
			[Address(RVA = "0x169BD10", Offset = "0x169BD10", VA = "0x169BD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5824", Offset = "0x12B5824")]
			get
			{
				return default(SequenceStyle);
			}
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x169BD18", Offset = "0x169BD18", VA = "0x169BD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5834", Offset = "0x12B5834")]
			set
			{
			}
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x16994CC", Offset = "0x16994CC", VA = "0x16994CC")]
		public SequenceStartEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x2000020")]
	public sealed class SequenceEndEventInfo : EventInfo
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x169AE08", Offset = "0x169AE08", VA = "0x169AE08")]
		public SequenceEndEventInfo(IObjectDescriptor source)
		{
		}
	}
	[Token(Token = "0x2000021")]
	public interface IAliasProvider
	{
		[Token(Token = "0x60001AB")]
		string GetAlias(object target);
	}
	[Token(Token = "0x2000022")]
	public interface IEventEmitter
	{
		[Token(Token = "0x60001AC")]
		void Emit(AliasEventInfo eventInfo, IEmitter emitter);

		[Token(Token = "0x60001AD")]
		void Emit(ScalarEventInfo eventInfo, IEmitter emitter);

		[Token(Token = "0x60001AE")]
		void Emit(MappingStartEventInfo eventInfo, IEmitter emitter);

		[Token(Token = "0x60001AF")]
		void Emit(MappingEndEventInfo eventInfo, IEmitter emitter);

		[Token(Token = "0x60001B0")]
		void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter);

		[Token(Token = "0x60001B1")]
		void Emit(SequenceEndEventInfo eventInfo, IEmitter emitter);
	}
	[Token(Token = "0x2000023")]
	public interface INamingConvention
	{
		[Token(Token = "0x60001B2")]
		string Apply(string value);
	}
	[Token(Token = "0x2000024")]
	public interface INodeDeserializer
	{
		[Token(Token = "0x60001B3")]
		bool Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value);
	}
	[Token(Token = "0x2000025")]
	public interface INodeTypeResolver
	{
		[Token(Token = "0x60001B4")]
		bool Resolve(NodeEvent nodeEvent, ref Type currentType);
	}
	[Token(Token = "0x2000026")]
	public interface IObjectDescriptor
	{
		[Token(Token = "0x1700001C")]
		object Value
		{
			[Token(Token = "0x60001B5")]
			get;
		}

		[Token(Token = "0x1700001D")]
		Type Type
		{
			[Token(Token = "0x60001B6")]
			get;
		}

		[Token(Token = "0x1700001E")]
		Type StaticType
		{
			[Token(Token = "0x60001B7")]
			get;
		}

		[Token(Token = "0x1700001F")]
		ScalarStyle ScalarStyle
		{
			[Token(Token = "0x60001B8")]
			get;
		}
	}
	[Token(Token = "0x2000027")]
	public interface IObjectFactory
	{
		[Token(Token = "0x60001B9")]
		object Create(Type type);
	}
	[Token(Token = "0x2000028")]
	public interface IObjectGraphTraversalStrategy
	{
		[Token(Token = "0x60001BA")]
		void Traverse<TContext>(IObjectDescriptor graph, IObjectGraphVisitor<TContext> visitor, TContext context);
	}
	[Token(Token = "0x2000029")]
	public interface IObjectGraphVisitor<TContext>
	{
		[Token(Token = "0x60001BB")]
		bool Enter(IObjectDescriptor value, TContext context);

		[Token(Token = "0x60001BC")]
		bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, TContext context);

		[Token(Token = "0x60001BD")]
		bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, TContext context);

		[Token(Token = "0x60001BE")]
		void VisitScalar(IObjectDescriptor scalar, TContext context);

		[Token(Token = "0x60001BF")]
		void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, TContext context);

		[Token(Token = "0x60001C0")]
		void VisitMappingEnd(IObjectDescriptor mapping, TContext context);

		[Token(Token = "0x60001C1")]
		void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, TContext context);

		[Token(Token = "0x60001C2")]
		void VisitSequenceEnd(IObjectDescriptor sequence, TContext context);
	}
	[Token(Token = "0x200002A")]
	public interface IPropertyDescriptor
	{
		[Token(Token = "0x17000020")]
		string Name
		{
			[Token(Token = "0x60001C3")]
			get;
		}

		[Token(Token = "0x17000021")]
		bool CanWrite
		{
			[Token(Token = "0x60001C4")]
			get;
		}

		[Token(Token = "0x17000022")]
		Type Type
		{
			[Token(Token = "0x60001C5")]
			get;
		}

		[Token(Token = "0x17000023")]
		Type TypeOverride
		{
			[Token(Token = "0x60001C6")]
			get;
			[Token(Token = "0x60001C7")]
			set;
		}

		[Token(Token = "0x17000024")]
		int Order
		{
			[Token(Token = "0x60001C8")]
			get;
			[Token(Token = "0x60001C9")]
			set;
		}

		[Token(Token = "0x17000025")]
		ScalarStyle ScalarStyle
		{
			[Token(Token = "0x60001CA")]
			get;
			[Token(Token = "0x60001CB")]
			set;
		}

		[Token(Token = "0x60001CC")]
		T GetCustomAttribute<T>() where T : Attribute;

		[Token(Token = "0x60001CD")]
		IObjectDescriptor Read(object target);

		[Token(Token = "0x60001CE")]
		void Write(object target, object value);
	}
	[Token(Token = "0x200002B")]
	public interface IRegistrationLocationSelectionSyntax<TBaseRegistrationType>
	{
		[Token(Token = "0x60001CF")]
		void InsteadOf<TRegistrationType>() where TRegistrationType : TBaseRegistrationType;

		[Token(Token = "0x60001D0")]
		void Before<TRegistrationType>() where TRegistrationType : TBaseRegistrationType;

		[Token(Token = "0x60001D1")]
		void After<TRegistrationType>() where TRegistrationType : TBaseRegistrationType;

		[Token(Token = "0x60001D2")]
		void OnTop();

		[Token(Token = "0x60001D3")]
		void OnBottom();
	}
	[Token(Token = "0x200002C")]
	public interface ITrackingRegistrationLocationSelectionSyntax<TBaseRegistrationType>
	{
		[Token(Token = "0x60001D4")]
		void InsteadOf<TRegistrationType>() where TRegistrationType : TBaseRegistrationType;
	}
	[Token(Token = "0x200002D")]
	public interface ITypeInspector
	{
		[Token(Token = "0x60001D5")]
		IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container);

		[Token(Token = "0x60001D6")]
		IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched);
	}
	[Token(Token = "0x200002E")]
	public interface ITypeResolver
	{
		[Token(Token = "0x60001D7")]
		Type Resolve(Type staticType, object actualValue);
	}
	[Token(Token = "0x200002F")]
	public interface IValueDeserializer
	{
		[Token(Token = "0x60001D8")]
		object DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer);
	}
	[Token(Token = "0x2000030")]
	public interface IValuePromise
	{
		[Token(Token = "0x14000001")]
		event Action<object> ValueAvailable;
	}
	[Token(Token = "0x2000031")]
	public interface IValueSerializer
	{
		[Token(Token = "0x60001DB")]
		void SerializeValue(IEmitter emitter, object value, Type type);
	}
	[Token(Token = "0x2000032")]
	public interface IYamlConvertible
	{
		[Token(Token = "0x60001DC")]
		void Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer);

		[Token(Token = "0x60001DD")]
		void Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer);
	}
	[Token(Token = "0x2000033")]
	public delegate object ObjectDeserializer(Type type);
	[Token(Token = "0x2000034")]
	public delegate void ObjectSerializer(object value, [Optional] Type type);
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12A93B0", Offset = "0x12A93B0")]
	public interface IYamlSerializable
	{
		[Token(Token = "0x60001E6")]
		void ReadYaml(IParser parser);

		[Token(Token = "0x60001E7")]
		void WriteYaml(IEmitter emitter);
	}
	[Token(Token = "0x2000036")]
	public interface IYamlTypeConverter
	{
		[Token(Token = "0x60001E8")]
		bool Accepts(Type type);

		[Token(Token = "0x60001E9")]
		object ReadYaml(IParser parser, Type type);

		[Token(Token = "0x60001EA")]
		void WriteYaml(IEmitter emitter, object value, Type type);
	}
	[Token(Token = "0x2000037")]
	internal sealed class LazyComponentRegistrationList<TArgument, TComponent> : IEnumerable<Func<TArgument, TComponent>>, IEnumerable
	{
		[Token(Token = "0x200035D")]
		public sealed class LazyComponentRegistration
		{
			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Type ComponentType;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Func<TArgument, TComponent> Factory;

			[Token(Token = "0x6001696")]
			public LazyComponentRegistration(Type componentType, Func<TArgument, TComponent> factory)
			{
			}
		}

		[Token(Token = "0x200035E")]
		public sealed class TrackingLazyComponentRegistration
		{
			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Type ComponentType;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Func<TComponent, TArgument, TComponent> Factory;

			[Token(Token = "0x6001697")]
			public TrackingLazyComponentRegistration(Type componentType, Func<TComponent, TArgument, TComponent> factory)
			{
			}
		}

		[Token(Token = "0x200035F")]
		private class RegistrationLocationSelector : IRegistrationLocationSelectionSyntax<TComponent>
		{
			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LazyComponentRegistrationList<TArgument, TComponent> registrations;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LazyComponentRegistration newRegistration;

			[Token(Token = "0x6001698")]
			public RegistrationLocationSelector(LazyComponentRegistrationList<TArgument, TComponent> registrations, LazyComponentRegistration newRegistration)
			{
			}

			[Token(Token = "0x6001699")]
			private void YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax<TComponent>.InsteadOf<TRegistrationType>() where TRegistrationType : TComponent
			{
			}

			[Token(Token = "0x600169A")]
			private void YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax<TComponent>.After<TRegistrationType>() where TRegistrationType : TComponent
			{
			}

			[Token(Token = "0x600169B")]
			private void YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax<TComponent>.Before<TRegistrationType>() where TRegistrationType : TComponent
			{
			}

			[Token(Token = "0x600169C")]
			private void YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax<TComponent>.OnBottom()
			{
			}

			[Token(Token = "0x600169D")]
			private void YamlDotNet.Serialization.IRegistrationLocationSelectionSyntax<TComponent>.OnTop()
			{
			}
		}

		[Token(Token = "0x2000360")]
		private class TrackingRegistrationLocationSelector : ITrackingRegistrationLocationSelectionSyntax<TComponent>
		{
			[Token(Token = "0x20005F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABEC0", Offset = "0x12ABEC0")]
			private sealed class <>c__DisplayClass3_0<TRegistrationType> where TRegistrationType : TComponent
			{
				[Token(Token = "0x400142E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TrackingRegistrationLocationSelector <>4__this;

				[Token(Token = "0x400142F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Func<TArgument, TComponent> innerComponentFactory;

				[Token(Token = "0x600216C")]
				public <>c__DisplayClass3_0()
				{
				}

				[Token(Token = "0x600216D")]
				internal TComponent <YamlDotNet.Serialization.ITrackingRegistrationLocationSelectionSyntax<TComponent>.InsteadOf>b__0(TArgument arg)
				{
					return (TComponent)null;
				}
			}

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LazyComponentRegistrationList<TArgument, TComponent> registrations;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TrackingLazyComponentRegistration newRegistration;

			[Token(Token = "0x600169E")]
			public TrackingRegistrationLocationSelector(LazyComponentRegistrationList<TArgument, TComponent> registrations, TrackingLazyComponentRegistration newRegistration)
			{
			}

			[Token(Token = "0x600169F")]
			private void YamlDotNet.Serialization.ITrackingRegistrationLocationSelectionSyntax<TComponent>.InsteadOf<TRegistrationType>() where TRegistrationType : TComponent
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA910", Offset = "0x12AA910")]
		private sealed class <get_InReverseOrder>d__9 : IEnumerable<Func<TArgument, TComponent>>, IEnumerable, IEnumerator<Func<TArgument, TComponent>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<TArgument, TComponent> <>2__current;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LazyComponentRegistrationList<TArgument, TComponent> <>4__this;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x1700026F")]
			private Func<TArgument, TComponent> System.Collections.Generic.IEnumerator<System.Func<TArgument,TComponent>>.Current
			{
				[Token(Token = "0x60016A3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A0")]
			[DebuggerHidden]
			public <get_InReverseOrder>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60016A1")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A2")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A4")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016A6")]
			[DebuggerHidden]
			private IEnumerator<Func<TArgument, TComponent>> System.Collections.Generic.IEnumerable<System.Func<TArgument,TComponent>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016A7")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA920", Offset = "0x12AA920")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<LazyComponentRegistration, Func<TArgument, TComponent>> <>9__12_0;

			[Token(Token = "0x60016A9")]
			public <>c()
			{
			}

			[Token(Token = "0x60016AA")]
			internal Func<TArgument, TComponent> <GetEnumerator>b__12_0(LazyComponentRegistration e)
			{
				return null;
			}
		}

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<LazyComponentRegistration> entries;

		[Token(Token = "0x17000026")]
		public int Count
		{
			[Token(Token = "0x60001EE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000027")]
		public IEnumerable<Func<TArgument, TComponent>> InReverseOrder
		{
			[Token(Token = "0x60001EF")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5864", Offset = "0x12B5864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EB")]
		public LazyComponentRegistrationList<TArgument, TComponent> Clone()
		{
			return null;
		}

		[Token(Token = "0x60001EC")]
		public void Add(Type componentType, Func<TArgument, TComponent> factory)
		{
		}

		[Token(Token = "0x60001ED")]
		public void Remove(Type componentType)
		{
		}

		[Token(Token = "0x60001F0")]
		public IRegistrationLocationSelectionSyntax<TComponent> CreateRegistrationLocationSelector(Type componentType, Func<TArgument, TComponent> factory)
		{
			return null;
		}

		[Token(Token = "0x60001F1")]
		public ITrackingRegistrationLocationSelectionSyntax<TComponent> CreateTrackingRegistrationLocationSelector(Type componentType, Func<TComponent, TArgument, TComponent> factory)
		{
			return null;
		}

		[Token(Token = "0x60001F2")]
		public IEnumerator<Func<TArgument, TComponent>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001F3")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001F4")]
		private int IndexOfRegistration(Type registrationType)
		{
			return default(int);
		}

		[Token(Token = "0x60001F5")]
		private void EnsureNoDuplicateRegistrationType(Type componentType)
		{
		}

		[Token(Token = "0x60001F6")]
		private int EnsureRegistrationExists<TRegistrationType>()
		{
			return default(int);
		}

		[Token(Token = "0x60001F7")]
		public LazyComponentRegistrationList()
		{
		}
	}
	[Token(Token = "0x2000038")]
	internal static class LazyComponentRegistrationListExtensions
	{
		[Serializable]
		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA930", Offset = "0x12AA930")]
		private sealed class <>c__0<TComponent>
		{
			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__0<TComponent> <>9;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<TComponent, Func<TComponent, TComponent>, TComponent> <>9__0_0;

			[Token(Token = "0x60016AC")]
			public <>c__0()
			{
			}

			[Token(Token = "0x60016AD")]
			internal TComponent <BuildComponentChain>b__0_0(TComponent inner, Func<TComponent, TComponent> factory)
			{
				return (TComponent)null;
			}
		}

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA940", Offset = "0x12AA940")]
		private sealed class <>c__DisplayClass1_0<TArgument, TComponent>
		{
			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TComponent, TArgument> argumentBuilder;

			[Token(Token = "0x60016AE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60016AF")]
			internal TComponent <BuildComponentChain>b__0(TComponent inner, Func<TArgument, TComponent> factory)
			{
				return (TComponent)null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA950", Offset = "0x12AA950")]
		private sealed class <>c__2<TComponent>
		{
			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__2<TComponent> <>9;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Func<Nothing, TComponent>, TComponent> <>9__2_0;

			[Token(Token = "0x60016B1")]
			public <>c__2()
			{
			}

			[Token(Token = "0x60016B2")]
			internal TComponent <BuildComponentList>b__2_0(Func<Nothing, TComponent> factory)
			{
				return (TComponent)null;
			}
		}

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA960", Offset = "0x12AA960")]
		private sealed class <>c__DisplayClass3_0<TArgument, TComponent>
		{
			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TArgument argument;

			[Token(Token = "0x60016B3")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60016B4")]
			internal TComponent <BuildComponentList>b__0(Func<TArgument, TComponent> factory)
			{
				return (TComponent)null;
			}
		}

		[Token(Token = "0x60001F8")]
		public static TComponent BuildComponentChain<TComponent>(this LazyComponentRegistrationList<TComponent, TComponent> registrations, TComponent innerComponent)
		{
			return (TComponent)null;
		}

		[Token(Token = "0x60001F9")]
		public static TComponent BuildComponentChain<TArgument, TComponent>(this LazyComponentRegistrationList<TArgument, TComponent> registrations, TComponent innerComponent, Func<TComponent, TArgument> argumentBuilder)
		{
			return (TComponent)null;
		}

		[Token(Token = "0x60001FA")]
		public static List<TComponent> BuildComponentList<TComponent>(this LazyComponentRegistrationList<Nothing, TComponent> registrations)
		{
			return null;
		}

		[Token(Token = "0x60001FB")]
		public static List<TComponent> BuildComponentList<TArgument, TComponent>(this LazyComponentRegistrationList<TArgument, TComponent> registrations, TArgument argument)
		{
			return null;
		}
	}
	[Token(Token = "0x2000039")]
	public sealed class Nothing
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x16979F8", Offset = "0x16979F8", VA = "0x16979F8")]
		private Nothing()
		{
		}
	}
	[Token(Token = "0x200003A")]
	public sealed class ObjectDescriptor : IObjectDescriptor
	{
		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1B8", Offset = "0x12AC1B8")]
		private object <Value>k__BackingField;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1C8", Offset = "0x12AC1C8")]
		private Type <Type>k__BackingField;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1D8", Offset = "0x12AC1D8")]
		private Type <StaticType>k__BackingField;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1E8", Offset = "0x12AC1E8")]
		private ScalarStyle <ScalarStyle>k__BackingField;

		[Token(Token = "0x17000028")]
		public object Value
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0x1697A00", Offset = "0x1697A00", VA = "0x1697A00", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5908", Offset = "0x12B5908")]
			get
			{
				return null;
			}
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x1697A08", Offset = "0x1697A08", VA = "0x1697A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5918", Offset = "0x12B5918")]
			private set
			{
			}
		}

		[Token(Token = "0x17000029")]
		public Type Type
		{
			[Token(Token = "0x60001FF")]
			[Address(RVA = "0x1697A10", Offset = "0x1697A10", VA = "0x1697A10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5928", Offset = "0x12B5928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000200")]
			[Address(RVA = "0x1697A18", Offset = "0x1697A18", VA = "0x1697A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5938", Offset = "0x12B5938")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002A")]
		public Type StaticType
		{
			[Token(Token = "0x6000201")]
			[Address(RVA = "0x1697A20", Offset = "0x1697A20", VA = "0x1697A20", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5948", Offset = "0x12B5948")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000202")]
			[Address(RVA = "0x1697A28", Offset = "0x1697A28", VA = "0x1697A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5958", Offset = "0x12B5958")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002B")]
		public ScalarStyle ScalarStyle
		{
			[Token(Token = "0x6000203")]
			[Address(RVA = "0x1697A30", Offset = "0x1697A30", VA = "0x1697A30", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5968", Offset = "0x12B5968")]
			get
			{
				return default(ScalarStyle);
			}
			[Token(Token = "0x6000204")]
			[Address(RVA = "0x1697A38", Offset = "0x1697A38", VA = "0x1697A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5978", Offset = "0x12B5978")]
			private set
			{
			}
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1697A40", Offset = "0x1697A40", VA = "0x1697A40")]
		public ObjectDescriptor(object value, Type type, Type staticType)
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1697A48", Offset = "0x1697A48", VA = "0x1697A48")]
		public ObjectDescriptor(object value, Type type, Type staticType, ScalarStyle scalarStyle)
		{
		}
	}
	[Token(Token = "0x200003B")]
	public sealed class PropertyDescriptor : IPropertyDescriptor
	{
		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IPropertyDescriptor baseDescriptor;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC1F8", Offset = "0x12AC1F8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC208", Offset = "0x12AC208")]
		private int <Order>k__BackingField;

		[Token(Token = "0x1700002C")]
		public string Name
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0x169B6AC", Offset = "0x169B6AC", VA = "0x169B6AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5988", Offset = "0x12B5988")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000209")]
			[Address(RVA = "0x169B6B4", Offset = "0x169B6B4", VA = "0x169B6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5998", Offset = "0x12B5998")]
			set
			{
			}
		}

		[Token(Token = "0x1700002D")]
		public Type Type
		{
			[Token(Token = "0x600020A")]
			[Address(RVA = "0x169B6BC", Offset = "0x169B6BC", VA = "0x169B6BC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		public Type TypeOverride
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x169B770", Offset = "0x169B770", VA = "0x169B770", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600020C")]
			[Address(RVA = "0x169B824", Offset = "0x169B824", VA = "0x169B824", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		public int Order
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0x169B8E8", Offset = "0x169B8E8", VA = "0x169B8E8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B59A8", Offset = "0x12B59A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600020E")]
			[Address(RVA = "0x169B8F0", Offset = "0x169B8F0", VA = "0x169B8F0", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B59B8", Offset = "0x12B59B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public ScalarStyle ScalarStyle
		{
			[Token(Token = "0x600020F")]
			[Address(RVA = "0x169B8F8", Offset = "0x169B8F8", VA = "0x169B8F8", Slot = "11")]
			get
			{
				return default(ScalarStyle);
			}
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x169B9AC", Offset = "0x169B9AC", VA = "0x169B9AC", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public bool CanWrite
		{
			[Token(Token = "0x6000211")]
			[Address(RVA = "0x169BA70", Offset = "0x169BA70", VA = "0x169BA70", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x169B5DC", Offset = "0x169B5DC", VA = "0x169B5DC")]
		public PropertyDescriptor(IPropertyDescriptor baseDescriptor)
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x169BB24", Offset = "0x169BB24", VA = "0x169BB24", Slot = "15")]
		public void Write(object target, object value)
		{
		}

		[Token(Token = "0x6000213")]
		public T GetCustomAttribute<T>() where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x169BBF0", Offset = "0x169BBF0", VA = "0x169BBF0", Slot = "14")]
		public IObjectDescriptor Read(object target)
		{
			return null;
		}
	}
	[Token(Token = "0x200003C")]
	[Flags]
	public enum SerializationOptions
	{
		[Token(Token = "0x4000058")]
		None = 0,
		[Token(Token = "0x4000059")]
		Roundtrip = 1,
		[Token(Token = "0x400005A")]
		DisableAliases = 2,
		[Token(Token = "0x400005B")]
		EmitDefaults = 4,
		[Token(Token = "0x400005C")]
		JsonCompatible = 8,
		[Token(Token = "0x400005D")]
		DefaultToStaticType = 0x10
	}
	[Token(Token = "0x200003D")]
	public sealed class Serializer
	{
		[Token(Token = "0x2000367")]
		private class BackwardsCompatibleConfiguration : IValueSerializer
		{
			[Token(Token = "0x20005F9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABED0", Offset = "0x12ABED0")]
			private sealed class <>c__DisplayClass10_0
			{
				[Token(Token = "0x4001430")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public BackwardsCompatibleConfiguration <>4__this;

				[Token(Token = "0x4001431")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public IEmitter emitter;

				[Token(Token = "0x600216E")]
				[Address(RVA = "0x169CB28", Offset = "0x169CB28", VA = "0x169CB28")]
				public <>c__DisplayClass10_0()
				{
				}

				[Token(Token = "0x600216F")]
				[Address(RVA = "0x169D250", Offset = "0x169D250", VA = "0x169D250")]
				internal void <CreateEmittingVisitor>b__0(object v, Type t)
				{
				}
			}

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1878", Offset = "0x12B1878")]
			private IList<IYamlTypeConverter> <Converters>k__BackingField;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly SerializationOptions options;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly INamingConvention namingConvention;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly ITypeResolver typeResolver;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly YamlAttributeOverrides overrides;

			[Token(Token = "0x17000271")]
			public IList<IYamlTypeConverter> Converters
			{
				[Token(Token = "0x60016B5")]
				[Address(RVA = "0x169C8E0", Offset = "0x169C8E0", VA = "0x169C8E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCC88", Offset = "0x12BCC88")]
				get
				{
					return null;
				}
				[Token(Token = "0x60016B6")]
				[Address(RVA = "0x169C8E8", Offset = "0x169C8E8", VA = "0x169C8E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCC98", Offset = "0x12BCC98")]
				private set
				{
				}
			}

			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x169BE34", Offset = "0x169BE34", VA = "0x169BE34")]
			public BackwardsCompatibleConfiguration(SerializationOptions options, INamingConvention namingConvention, YamlAttributeOverrides overrides)
			{
			}

			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x169C8F0", Offset = "0x169C8F0", VA = "0x169C8F0")]
			public bool IsOptionSet(SerializationOptions option)
			{
				return default(bool);
			}

			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x169C910", Offset = "0x169C910", VA = "0x169C910")]
			private IObjectGraphVisitor<IEmitter> CreateEmittingVisitor(IEmitter emitter, IObjectGraphTraversalStrategy traversalStrategy, IEventEmitter eventEmitter, IObjectDescriptor graph)
			{
				return null;
			}

			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x169CB30", Offset = "0x169CB30", VA = "0x169CB30")]
			private IEventEmitter CreateEventEmitter()
			{
				return null;
			}

			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x169CBEC", Offset = "0x169CBEC", VA = "0x169CBEC")]
			private IObjectGraphTraversalStrategy CreateTraversalStrategy()
			{
				return null;
			}

			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x169D034", Offset = "0x169D034", VA = "0x169D034", Slot = "4")]
			public void SerializeValue(IEmitter emitter, object value, Type type)
			{
			}
		}

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IValueSerializer valueSerializer;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly BackwardsCompatibleConfiguration backwardsCompatibleConfiguration;

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x169BD20", Offset = "0x169BD20", VA = "0x169BD20")]
		private void ThrowUnlessInBackwardsCompatibleMode()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x169BDA4", Offset = "0x169BDA4", VA = "0x169BDA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B59C8", Offset = "0x12B59C8")]
		public Serializer(SerializationOptions options = SerializationOptions.None, [Optional] INamingConvention namingConvention, [Optional] YamlAttributeOverrides overrides)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x169BFC4", Offset = "0x169BFC4", VA = "0x169BFC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B5A00", Offset = "0x12B5A00")]
		public void RegisterTypeConverter(IYamlTypeConverter converter)
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x169C09C", Offset = "0x169C09C", VA = "0x169C09C")]
		public Serializer()
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x169C110", Offset = "0x169C110", VA = "0x169C110")]
		private Serializer(IValueSerializer valueSerializer)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x169C1AC", Offset = "0x169C1AC", VA = "0x169C1AC")]
		public static Serializer FromValueSerializer(IValueSerializer valueSerializer)
		{
			return null;
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x169C20C", Offset = "0x169C20C", VA = "0x169C20C")]
		public void Serialize(TextWriter writer, object graph)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x169C328", Offset = "0x169C328", VA = "0x169C328")]
		public string Serialize(object graph)
		{
			return null;
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x169C468", Offset = "0x169C468", VA = "0x169C468")]
		public void Serialize(TextWriter writer, object graph, Type type)
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x169C288", Offset = "0x169C288", VA = "0x169C288")]
		public void Serialize(IEmitter emitter, object graph)
		{
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x169C4F4", Offset = "0x169C4F4", VA = "0x169C4F4")]
		public void Serialize(IEmitter emitter, object graph, Type type)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x169C5F0", Offset = "0x169C5F0", VA = "0x169C5F0")]
		private void EmitDocument(IEmitter emitter, object graph, Type type)
		{
		}
	}
	[Token(Token = "0x200003E")]
	public sealed class SerializerBuilder : BuilderSkeleton<SerializerBuilder>
	{
		[Token(Token = "0x2000368")]
		private class ValueSerializer : IValueSerializer
		{
			[Token(Token = "0x20005FA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABEE0", Offset = "0x12ABEE0")]
			private sealed class <>c__DisplayClass6_0
			{
				[Token(Token = "0x4001432")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public ValueSerializer <>4__this;

				[Token(Token = "0x4001433")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public IEmitter emitter;

				[Token(Token = "0x4001434")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public List<IObjectGraphVisitor<Nothing>> preProcessingPhaseObjectGraphVisitors;

				[Token(Token = "0x4001435")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ObjectSerializer nestedObjectSerializer;

				[Token(Token = "0x6002170")]
				[Address(RVA = "0x169FB98", Offset = "0x169FB98", VA = "0x169FB98")]
				public <>c__DisplayClass6_0()
				{
				}

				[Token(Token = "0x6002171")]
				[Address(RVA = "0x169FBA0", Offset = "0x169FBA0", VA = "0x169FBA0")]
				internal void <SerializeValue>b__0(object v, Type t)
				{
				}

				[Token(Token = "0x6002172")]
				[Address(RVA = "0x169FBC8", Offset = "0x169FBC8", VA = "0x169FBC8")]
				internal EmissionPhaseObjectGraphVisitorArgs <SerializeValue>b__1(IObjectGraphVisitor<IEmitter> inner)
				{
					return null;
				}
			}

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IObjectGraphTraversalStrategy traversalStrategy;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly IEventEmitter eventEmitter;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly IEnumerable<IYamlTypeConverter> typeConverters;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly LazyComponentRegistrationList<IEnumerable<IYamlTypeConverter>, IObjectGraphVisitor<Nothing>> preProcessingPhaseObjectGraphVisitorFactories;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly LazyComponentRegistrationList<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> emissionPhaseObjectGraphVisitorFactories;

			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x169EA90", Offset = "0x169EA90", VA = "0x169EA90")]
			public ValueSerializer(IObjectGraphTraversalStrategy traversalStrategy, IEventEmitter eventEmitter, IEnumerable<IYamlTypeConverter> typeConverters, LazyComponentRegistrationList<IEnumerable<IYamlTypeConverter>, IObjectGraphVisitor<Nothing>> preProcessingPhaseObjectGraphVisitorFactories, LazyComponentRegistrationList<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> emissionPhaseObjectGraphVisitorFactories)
			{
			}

			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x169F78C", Offset = "0x169F78C", VA = "0x169F78C", Slot = "4")]
			public void SerializeValue(IEmitter emitter, object value, Type type)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA970", Offset = "0x12AA970")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ITypeInspector, ITypeInspector> <>9__5_0;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ITypeInspector, ITypeInspector> <>9__5_2;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IEnumerable<IYamlTypeConverter>, IObjectGraphVisitor<Nothing>> <>9__5_4;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> <>9__5_5;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> <>9__5_6;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> <>9__5_7;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<IEventEmitter, IEventEmitter> <>9__5_8;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ITypeInspector, ITypeResolver, IEnumerable<IYamlTypeConverter>, IObjectGraphTraversalStrategy> <>9__15_0;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<IEventEmitter, TypeAssigningEventEmitter> <>9__15_1;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> <>9__15_2;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ITypeInspector, ReadableAndWritablePropertiesTypeInspector> <>9__15_3;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Action<IRegistrationLocationSelectionSyntax<ITypeInspector>> <>9__15_4;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Action<IRegistrationLocationSelectionSyntax<IYamlTypeConverter>> <>9__18_0;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<IEventEmitter, JsonEventEmitter> <>9__18_1;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> <>9__18_2;

			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x169EFC4", Offset = "0x169EFC4", VA = "0x169EFC4")]
			public <>c()
			{
			}

			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x169EFCC", Offset = "0x169EFCC", VA = "0x169EFCC")]
			internal ITypeInspector <.ctor>b__5_0(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x169F02C", Offset = "0x169F02C", VA = "0x169F02C")]
			internal ITypeInspector <.ctor>b__5_2(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x169F090", Offset = "0x169F090", VA = "0x169F090")]
			internal IObjectGraphVisitor<Nothing> <.ctor>b__5_4(IEnumerable<IYamlTypeConverter> typeConverters)
			{
				return null;
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x169F0F0", Offset = "0x169F0F0", VA = "0x169F0F0")]
			internal IObjectGraphVisitor<IEmitter> <.ctor>b__5_5(EmissionPhaseObjectGraphVisitorArgs args)
			{
				return null;
			}

			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x169F170", Offset = "0x169F170", VA = "0x169F170")]
			internal IObjectGraphVisitor<IEmitter> <.ctor>b__5_6(EmissionPhaseObjectGraphVisitorArgs args)
			{
				return null;
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x169F208", Offset = "0x169F208", VA = "0x169F208")]
			internal IObjectGraphVisitor<IEmitter> <.ctor>b__5_7(EmissionPhaseObjectGraphVisitorArgs args)
			{
				return null;
			}

			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x169F278", Offset = "0x169F278", VA = "0x169F278")]
			internal IEventEmitter <.ctor>b__5_8(IEventEmitter inner)
			{
				return null;
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x169F2E0", Offset = "0x169F2E0", VA = "0x169F2E0")]
			internal IObjectGraphTraversalStrategy <EnsureRoundtrip>b__15_0(ITypeInspector typeInspector, ITypeResolver typeResolver, IEnumerable<IYamlTypeConverter> typeConverters)
			{
				return null;
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x169F360", Offset = "0x169F360", VA = "0x169F360")]
			internal TypeAssigningEventEmitter <EnsureRoundtrip>b__15_1(IEventEmitter inner)
			{
				return null;
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x169F3C8", Offset = "0x169F3C8", VA = "0x169F3C8")]
			internal void <EnsureRoundtrip>b__15_2(IRegistrationLocationSelectionSyntax<IEventEmitter> loc)
			{
			}

			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x169F48C", Offset = "0x169F48C", VA = "0x169F48C")]
			internal ReadableAndWritablePropertiesTypeInspector <EnsureRoundtrip>b__15_3(ITypeInspector inner)
			{
				return null;
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x169F4F0", Offset = "0x169F4F0", VA = "0x169F4F0")]
			internal void <EnsureRoundtrip>b__15_4(IRegistrationLocationSelectionSyntax<ITypeInspector> loc)
			{
			}

			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x169F5A0", Offset = "0x169F5A0", VA = "0x169F5A0")]
			internal void <JsonCompatible>b__18_0(IRegistrationLocationSelectionSyntax<IYamlTypeConverter> w)
			{
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x169F664", Offset = "0x169F664", VA = "0x169F664")]
			internal JsonEventEmitter <JsonCompatible>b__18_1(IEventEmitter inner)
			{
				return null;
			}

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x169F6C8", Offset = "0x169F6C8", VA = "0x169F6C8")]
			internal void <JsonCompatible>b__18_2(IRegistrationLocationSelectionSyntax<IEventEmitter> loc)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA980", Offset = "0x12AA980")]
		private sealed class <>c__8<TEventEmitter> where TEventEmitter : IEventEmitter
		{
			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__8<TEventEmitter> <>9;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> <>9__8_0;

			[Token(Token = "0x60016D1")]
			public <>c__8()
			{
			}

			[Token(Token = "0x60016D2")]
			internal void <WithEventEmitter>b__8_0(IRegistrationLocationSelectionSyntax<IEventEmitter> w)
			{
			}
		}

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA990", Offset = "0x12AA990")]
		private sealed class <>c__DisplayClass9_0<TEventEmitter> where TEventEmitter : IEventEmitter
		{
			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEventEmitter, TEventEmitter> eventEmitterFactory;

			[Token(Token = "0x60016D3")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60016D4")]
			internal IEventEmitter <WithEventEmitter>b__0(IEventEmitter inner)
			{
				return null;
			}
		}

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9A0", Offset = "0x12AA9A0")]
		private sealed class <>c__DisplayClass10_0<TEventEmitter> where TEventEmitter : IEventEmitter
		{
			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> eventEmitterFactory;

			[Token(Token = "0x60016D5")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60016D6")]
			internal IEventEmitter <WithEventEmitter>b__0(IEventEmitter wrapped, IEventEmitter inner)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9B0", Offset = "0x12AA9B0")]
		private sealed class <>c__19<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__19<TObjectGraphVisitor> <>9;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> <>9__19_0;

			[Token(Token = "0x60016D8")]
			public <>c__19()
			{
			}

			[Token(Token = "0x60016D9")]
			internal void <WithPreProcessingPhaseObjectGraphVisitor>b__19_0(IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>> w)
			{
			}
		}

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9C0", Offset = "0x12AA9C0")]
		private sealed class <>c__DisplayClass20_0<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TObjectGraphVisitor objectGraphVisitor;

			[Token(Token = "0x60016DA")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60016DB")]
			internal IObjectGraphVisitor<Nothing> <WithPreProcessingPhaseObjectGraphVisitor>b__0(IEnumerable<IYamlTypeConverter> _)
			{
				return null;
			}
		}

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9D0", Offset = "0x12AA9D0")]
		private sealed class <>c__DisplayClass21_0<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> objectGraphVisitorFactory;

			[Token(Token = "0x60016DC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60016DD")]
			internal IObjectGraphVisitor<Nothing> <WithPreProcessingPhaseObjectGraphVisitor>b__0(IObjectGraphVisitor<Nothing> wrapped, IEnumerable<IYamlTypeConverter> _)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9E0", Offset = "0x12AA9E0")]
		private sealed class <>c__24<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__24<TObjectGraphVisitor> <>9;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> <>9__24_0;

			[Token(Token = "0x60016DF")]
			public <>c__24()
			{
			}

			[Token(Token = "0x60016E0")]
			internal void <WithEmissionPhaseObjectGraphVisitor>b__24_0(IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>> w)
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AA9F0", Offset = "0x12AA9F0")]
		private sealed class <>c__DisplayClass25_0<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory;

			[Token(Token = "0x60016E1")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60016E2")]
			internal IObjectGraphVisitor<IEmitter> <WithEmissionPhaseObjectGraphVisitor>b__0(EmissionPhaseObjectGraphVisitorArgs args)
			{
				return null;
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA00", Offset = "0x12AAA00")]
		private sealed class <>c__DisplayClass26_0<TObjectGraphVisitor> where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> objectGraphVisitorFactory;

			[Token(Token = "0x60016E3")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60016E4")]
			internal IObjectGraphVisitor<IEmitter> <WithEmissionPhaseObjectGraphVisitor>b__0(IObjectGraphVisitor<IEmitter> wrapped, EmissionPhaseObjectGraphVisitorArgs args)
			{
				return null;
			}
		}

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Func<ITypeInspector, ITypeResolver, IEnumerable<IYamlTypeConverter>, IObjectGraphTraversalStrategy> objectGraphTraversalStrategyFactory;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly LazyComponentRegistrationList<IEnumerable<IYamlTypeConverter>, IObjectGraphVisitor<Nothing>> preProcessingPhaseObjectGraphVisitorFactories;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly LazyComponentRegistrationList<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>> emissionPhaseObjectGraphVisitorFactories;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly LazyComponentRegistrationList<IEventEmitter, IEventEmitter> eventEmitterFactories;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly IDictionary<Type, string> tagMappings;

		[Token(Token = "0x17000032")]
		protected override SerializerBuilder Self
		{
			[Token(Token = "0x6000222")]
			[Address(RVA = "0x169DB40", Offset = "0x169DB40", VA = "0x169DB40", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x169D278", Offset = "0x169D278", VA = "0x169D278")]
		public SerializerBuilder()
		{
		}

		[Token(Token = "0x6000223")]
		public SerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory) where TEventEmitter : IEventEmitter
		{
			return null;
		}

		[Token(Token = "0x6000224")]
		public SerializerBuilder WithEventEmitter<TEventEmitter>(Func<IEventEmitter, TEventEmitter> eventEmitterFactory, Action<IRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter
		{
			return null;
		}

		[Token(Token = "0x6000225")]
		public SerializerBuilder WithEventEmitter<TEventEmitter>(WrapperFactory<IEventEmitter, IEventEmitter, TEventEmitter> eventEmitterFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IEventEmitter>> where) where TEventEmitter : IEventEmitter
		{
			return null;
		}

		[Token(Token = "0x6000226")]
		public SerializerBuilder WithoutEventEmitter<TEventEmitter>() where TEventEmitter : IEventEmitter
		{
			return null;
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x169DB44", Offset = "0x169DB44", VA = "0x169DB44")]
		public SerializerBuilder WithoutEventEmitter(Type eventEmitterType)
		{
			return null;
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x169DC24", Offset = "0x169DC24", VA = "0x169DC24")]
		public SerializerBuilder WithTagMapping(string tag, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x169DE94", Offset = "0x169DE94", VA = "0x169DE94")]
		public SerializerBuilder WithoutTagMapping(Type type)
		{
			return null;
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0x169E048", Offset = "0x169E048", VA = "0x169E048")]
		public SerializerBuilder EnsureRoundtrip()
		{
			return null;
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0x169E37C", Offset = "0x169E37C", VA = "0x169E37C")]
		public SerializerBuilder DisableAliases()
		{
			return null;
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0x169E458", Offset = "0x169E458", VA = "0x169E458")]
		public SerializerBuilder EmitDefaults()
		{
			return null;
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0x169E500", Offset = "0x169E500", VA = "0x169E500")]
		public SerializerBuilder JsonCompatible()
		{
			return null;
		}

		[Token(Token = "0x600022E")]
		public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			return null;
		}

		[Token(Token = "0x600022F")]
		public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(TObjectGraphVisitor objectGraphVisitor, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			return null;
		}

		[Token(Token = "0x6000230")]
		public SerializerBuilder WithPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<IObjectGraphVisitor<Nothing>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<Nothing>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			return null;
		}

		[Token(Token = "0x6000231")]
		public SerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<Nothing>
		{
			return null;
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x169E760", Offset = "0x169E760", VA = "0x169E760")]
		public SerializerBuilder WithoutPreProcessingPhaseObjectGraphVisitor(Type objectGraphVisitorType)
		{
			return null;
		}

		[Token(Token = "0x6000233")]
		public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			return null;
		}

		[Token(Token = "0x6000234")]
		public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(Func<EmissionPhaseObjectGraphVisitorArgs, TObjectGraphVisitor> objectGraphVisitorFactory, Action<IRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			return null;
		}

		[Token(Token = "0x6000235")]
		public SerializerBuilder WithEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>(WrapperFactory<EmissionPhaseObjectGraphVisitorArgs, IObjectGraphVisitor<IEmitter>, TObjectGraphVisitor> objectGraphVisitorFactory, Action<ITrackingRegistrationLocationSelectionSyntax<IObjectGraphVisitor<IEmitter>>> where) where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			return null;
		}

		[Token(Token = "0x6000236")]
		public SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor<TObjectGraphVisitor>() where TObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
		{
			return null;
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x169E840", Offset = "0x169E840", VA = "0x169E840")]
		public SerializerBuilder WithoutEmissionPhaseObjectGraphVisitor(Type objectGraphVisitorType)
		{
			return null;
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x169E920", Offset = "0x169E920", VA = "0x169E920")]
		public Serializer Build()
		{
			return null;
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x169E934", Offset = "0x169E934", VA = "0x169E934")]
		public IValueSerializer BuildValueSerializer()
		{
			return null;
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x169EAE4", Offset = "0x169EAE4", VA = "0x169EAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A38", Offset = "0x12B5A38")]
		private ITypeInspector <.ctor>b__5_1(ITypeInspector inner)
		{
			return null;
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x169EB60", Offset = "0x169EB60", VA = "0x169EB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A48", Offset = "0x12B5A48")]
		private ITypeInspector <.ctor>b__5_3(ITypeInspector inner)
		{
			return null;
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x169EE48", Offset = "0x169EE48", VA = "0x169EE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A58", Offset = "0x12B5A58")]
		private IObjectGraphTraversalStrategy <.ctor>b__5_9(ITypeInspector typeInspector, ITypeResolver typeResolver, IEnumerable<IYamlTypeConverter> typeConverters)
		{
			return null;
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0x169EEE8", Offset = "0x169EEE8", VA = "0x169EEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A68", Offset = "0x12B5A68")]
		private CustomTagEventEmitter <.ctor>b__5_10(IEventEmitter inner)
		{
			return null;
		}
	}
	[Token(Token = "0x200003F")]
	public sealed class StreamFragment : IYamlConvertible
	{
		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ParsingEvent> events;

		[Token(Token = "0x17000033")]
		public IList<ParsingEvent> Events
		{
			[Token(Token = "0x600023E")]
			[Address(RVA = "0x169FC64", Offset = "0x169FC64", VA = "0x169FC64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0x169FC6C", Offset = "0x169FC6C", VA = "0x169FC6C", Slot = "4")]
		private void YamlDotNet.Serialization.IYamlConvertible.Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer)
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0x169FE8C", Offset = "0x169FE8C", VA = "0x169FE8C", Slot = "5")]
		private void YamlDotNet.Serialization.IYamlConvertible.Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer)
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0x169FFF4", Offset = "0x169FFF4", VA = "0x169FFF4")]
		public StreamFragment()
		{
		}
	}
	[Token(Token = "0x2000040")]
	public sealed class TagMappings
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<string, Type> mappings;

		[Token(Token = "0x6000242")]
		[Address(RVA = "0x16A0064", Offset = "0x16A0064", VA = "0x16A0064")]
		public TagMappings()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0x16A00D8", Offset = "0x16A00D8", VA = "0x16A00D8")]
		public TagMappings(IDictionary<string, Type> mappings)
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0x16A015C", Offset = "0x16A015C", VA = "0x16A015C")]
		public void Add(string tag, Type mapping)
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x16A0228", Offset = "0x16A0228", VA = "0x16A0228")]
		internal Type GetMapping(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000041")]
	public sealed class YamlAttributeOverrides
	{
		[Token(Token = "0x2000373")]
		private struct AttributeKey
		{
			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Type AttributeType;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string PropertyName;

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x13D63DC", Offset = "0x13D63DC", VA = "0x13D63DC")]
			public AttributeKey(Type attributeType, string propertyName)
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x13D63E4", Offset = "0x13D63E4", VA = "0x13D63E4", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x13D63EC", Offset = "0x13D63EC", VA = "0x13D63EC", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000374")]
		private sealed class AttributeMapping
		{
			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type RegisteredType;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Attribute Attribute;

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x16A5014", Offset = "0x16A5014", VA = "0x16A5014")]
			public AttributeMapping(Type registeredType, Attribute attribute)
			{
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x16A51E8", Offset = "0x16A51E8", VA = "0x16A51E8", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x16A52A4", Offset = "0x16A52A4", VA = "0x16A52A4", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x16A5300", Offset = "0x16A5300", VA = "0x16A5300")]
			public int Matches(Type matchType)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<AttributeKey, List<AttributeMapping>> overrides;

		[Token(Token = "0x6000246")]
		public T GetAttribute<T>(Type type, string member) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x16A4E18", Offset = "0x16A4E18", VA = "0x16A4E18")]
		public void Add(Type type, string member, Attribute attribute)
		{
		}

		[Token(Token = "0x6000248")]
		public void Add<TClass>(Expression<Func<TClass, object>> propertyAccessor, Attribute attribute)
		{
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x169EBE8", Offset = "0x169EBE8", VA = "0x169EBE8")]
		public YamlAttributeOverrides Clone()
		{
			return null;
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x16A5054", Offset = "0x16A5054", VA = "0x16A5054")]
		public YamlAttributeOverrides()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public sealed class YamlAttributeOverridesInspector : TypeInspectorSkeleton
	{
		[Token(Token = "0x2000375")]
		public sealed class OverridePropertyDescriptor : IPropertyDescriptor
		{
			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IPropertyDescriptor baseDescriptor;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly YamlAttributeOverrides overrides;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly Type classType;

			[Token(Token = "0x17000272")]
			public string Name
			{
				[Token(Token = "0x60016ED")]
				[Address(RVA = "0x16A5674", Offset = "0x16A5674", VA = "0x16A5674", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			public bool CanWrite
			{
				[Token(Token = "0x60016EE")]
				[Address(RVA = "0x16A5724", Offset = "0x16A5724", VA = "0x16A5724", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000274")]
			public Type Type
			{
				[Token(Token = "0x60016EF")]
				[Address(RVA = "0x16A57D8", Offset = "0x16A57D8", VA = "0x16A57D8", Slot = "6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			public Type TypeOverride
			{
				[Token(Token = "0x60016F0")]
				[Address(RVA = "0x16A588C", Offset = "0x16A588C", VA = "0x16A588C", Slot = "7")]
				get
				{
					return null;
				}
				[Token(Token = "0x60016F1")]
				[Address(RVA = "0x16A5940", Offset = "0x16A5940", VA = "0x16A5940", Slot = "8")]
				set
				{
				}
			}

			[Token(Token = "0x17000276")]
			public int Order
			{
				[Token(Token = "0x60016F2")]
				[Address(RVA = "0x16A5A04", Offset = "0x16A5A04", VA = "0x16A5A04", Slot = "9")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60016F3")]
				[Address(RVA = "0x16A5AB8", Offset = "0x16A5AB8", VA = "0x16A5AB8", Slot = "10")]
				set
				{
				}
			}

			[Token(Token = "0x17000277")]
			public ScalarStyle ScalarStyle
			{
				[Token(Token = "0x60016F4")]
				[Address(RVA = "0x16A5B7C", Offset = "0x16A5B7C", VA = "0x16A5B7C", Slot = "11")]
				get
				{
					return default(ScalarStyle);
				}
				[Token(Token = "0x60016F5")]
				[Address(RVA = "0x16A5C30", Offset = "0x16A5C30", VA = "0x16A5C30", Slot = "12")]
				set
				{
				}
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x16A5634", Offset = "0x16A5634", VA = "0x16A5634")]
			public OverridePropertyDescriptor(IPropertyDescriptor baseDescriptor, YamlAttributeOverrides overrides, Type classType)
			{
			}

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x16A5CF4", Offset = "0x16A5CF4", VA = "0x16A5CF4", Slot = "15")]
			public void Write(object target, object value)
			{
			}

			[Token(Token = "0x60016F7")]
			public T GetCustomAttribute<T>() where T : Attribute
			{
				return null;
			}

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x16A5DC0", Offset = "0x16A5DC0", VA = "0x16A5DC0", Slot = "14")]
			public IObjectDescriptor Read(object target)
			{
				return null;
			}
		}

		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA10", Offset = "0x12AAA10")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public YamlAttributeOverridesInspector <>4__this;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type type;

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x16A55A4", Offset = "0x16A55A4", VA = "0x16A55A4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x16A55AC", Offset = "0x16A55AC", VA = "0x16A55AC")]
			internal IPropertyDescriptor <GetProperties>b__0(IPropertyDescriptor p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeInspector innerTypeDescriptor;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly YamlAttributeOverrides overrides;

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x169CE48", Offset = "0x169CE48", VA = "0x169CE48")]
		public YamlAttributeOverridesInspector(ITypeInspector innerTypeDescriptor, YamlAttributeOverrides overrides)
		{
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x16A5440", Offset = "0x16A5440", VA = "0x16A5440", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}
	}
	[Token(Token = "0x2000043")]
	public sealed class YamlAttributesTypeInspector : TypeInspectorSkeleton
	{
		[Serializable]
		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA20", Offset = "0x12AAA20")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPropertyDescriptor, bool> <>9__2_0;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IPropertyDescriptor, IPropertyDescriptor> <>9__2_1;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IPropertyDescriptor, int> <>9__2_2;

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x16A61BC", Offset = "0x16A61BC", VA = "0x16A61BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x16A61C4", Offset = "0x16A61C4", VA = "0x16A61C4")]
			internal bool <GetProperties>b__2_0(IPropertyDescriptor p)
			{
				return default(bool);
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x16A6294", Offset = "0x16A6294", VA = "0x16A6294")]
			internal IPropertyDescriptor <GetProperties>b__2_1(IPropertyDescriptor p)
			{
				return null;
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x16A63FC", Offset = "0x16A63FC", VA = "0x16A63FC")]
			internal int <GetProperties>b__2_2(IPropertyDescriptor p)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeInspector innerTypeDescriptor;

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x169CE80", Offset = "0x169CE80", VA = "0x169CE80")]
		public YamlAttributesTypeInspector(ITypeInspector innerTypeDescriptor)
		{
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x16A5E84", Offset = "0x16A5E84", VA = "0x16A5E84", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}
	}
	[Token(Token = "0x2000044")]
	internal static class YamlFormatter
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly NumberFormatInfo NumberFormat;

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x16A64AC", Offset = "0x16A64AC", VA = "0x16A64AC")]
		public static string FormatNumber(object number)
		{
			return null;
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x16A6548", Offset = "0x16A6548", VA = "0x16A6548")]
		public static string FormatNumber(double number)
		{
			return null;
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x16A65CC", Offset = "0x16A65CC", VA = "0x16A65CC")]
		public static string FormatNumber(float number)
		{
			return null;
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x16A6650", Offset = "0x16A6650", VA = "0x16A6650")]
		public static string FormatBoolean(object boolean)
		{
			return null;
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x16A66EC", Offset = "0x16A66EC", VA = "0x16A66EC")]
		public static string FormatDateTime(object dateTime)
		{
			return null;
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x16A67B8", Offset = "0x16A67B8", VA = "0x16A67B8")]
		public static string FormatTimeSpan(object timeSpan)
		{
			return null;
		}
	}
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x12A9408", Offset = "0x12A9408")]
	public sealed class YamlIgnoreAttribute : Attribute
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x16A6A14", Offset = "0x16A6A14", VA = "0x16A6A14")]
		public YamlIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x12A943C", Offset = "0x12A943C")]
	public sealed class YamlMemberAttribute : Attribute
	{
		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC218", Offset = "0x12AC218")]
		private Type <SerializeAs>k__BackingField;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC228", Offset = "0x12AC228")]
		private int <Order>k__BackingField;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC238", Offset = "0x12AC238")]
		private string <Alias>k__BackingField;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC248", Offset = "0x12AC248")]
		private bool <ApplyNamingConventions>k__BackingField;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC258", Offset = "0x12AC258")]
		private ScalarStyle <ScalarStyle>k__BackingField;

		[Token(Token = "0x17000034")]
		public Type SerializeAs
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0x16A6A1C", Offset = "0x16A6A1C", VA = "0x16A6A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A78", Offset = "0x12B5A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000258")]
			[Address(RVA = "0x16A6A24", Offset = "0x16A6A24", VA = "0x16A6A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A88", Offset = "0x12B5A88")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public int Order
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x16A6A2C", Offset = "0x16A6A2C", VA = "0x16A6A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5A98", Offset = "0x12B5A98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600025A")]
			[Address(RVA = "0x16A6A34", Offset = "0x16A6A34", VA = "0x16A6A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AA8", Offset = "0x12B5AA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public string Alias
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x16A6A3C", Offset = "0x16A6A3C", VA = "0x16A6A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AB8", Offset = "0x12B5AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600025C")]
			[Address(RVA = "0x16A6A44", Offset = "0x16A6A44", VA = "0x16A6A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AC8", Offset = "0x12B5AC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public bool ApplyNamingConventions
		{
			[Token(Token = "0x600025D")]
			[Address(RVA = "0x16A6A4C", Offset = "0x16A6A4C", VA = "0x16A6A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AD8", Offset = "0x12B5AD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600025E")]
			[Address(RVA = "0x16A6A54", Offset = "0x16A6A54", VA = "0x16A6A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AE8", Offset = "0x12B5AE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public ScalarStyle ScalarStyle
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0x16A6A60", Offset = "0x16A6A60", VA = "0x16A6A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5AF8", Offset = "0x12B5AF8")]
			get
			{
				return default(ScalarStyle);
			}
			[Token(Token = "0x6000260")]
			[Address(RVA = "0x16A6A68", Offset = "0x16A6A68", VA = "0x16A6A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5B08", Offset = "0x12B5B08")]
			set
			{
			}
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x16A6A70", Offset = "0x16A6A70", VA = "0x16A6A70")]
		public YamlMemberAttribute()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x16A6AA0", Offset = "0x16A6AA0", VA = "0x16A6AA0")]
		public YamlMemberAttribute(Type serializeAs)
		{
		}
	}
}
namespace YamlDotNet.Serialization.ValueDeserializers
{
	[Token(Token = "0x2000047")]
	public sealed class AliasValueDeserializer : IValueDeserializer
	{
		[Token(Token = "0x2000378")]
		private sealed class AliasState : Dictionary<string, ValuePromise>, IPostDeserializationCallback
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x16A40CC", Offset = "0x16A40CC", VA = "0x16A40CC", Slot = "46")]
			public void OnDeserialization()
			{
			}

			[Token(Token = "0x6001701")]
			[Address(RVA = "0x16A4248", Offset = "0x16A4248", VA = "0x16A4248")]
			public AliasState()
			{
			}
		}

		[Token(Token = "0x2000379")]
		private sealed class ValuePromise : IValuePromise
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1898", Offset = "0x12B1898")]
			private bool <HasValue>k__BackingField;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object value;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly YamlDotNet.Core.Events.AnchorAlias Alias;

			[Token(Token = "0x17000278")]
			public bool HasValue
			{
				[Token(Token = "0x6001704")]
				[Address(RVA = "0x16A43E0", Offset = "0x16A43E0", VA = "0x16A43E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCCC8", Offset = "0x12BCCC8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001705")]
				[Address(RVA = "0x16A43E8", Offset = "0x16A43E8", VA = "0x16A43E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCCD8", Offset = "0x12BCCD8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000279")]
			public object Value
			{
				[Token(Token = "0x6001708")]
				[Address(RVA = "0x16A3F4C", Offset = "0x16A3F4C", VA = "0x16A3F4C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001709")]
				[Address(RVA = "0x16A4008", Offset = "0x16A4008", VA = "0x16A4008")]
				set
				{
				}
			}

			[Token(Token = "0x14000004")]
			public event Action<object> ValueAvailable
			{
				[Token(Token = "0x6001702")]
				[Address(RVA = "0x16A4298", Offset = "0x16A4298", VA = "0x16A4298", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCCA8", Offset = "0x12BCCA8")]
				add
				{
				}
				[Token(Token = "0x6001703")]
				[Address(RVA = "0x16A433C", Offset = "0x16A433C", VA = "0x16A433C", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCCB8", Offset = "0x12BCCB8")]
				remove
				{
				}
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x16A3F20", Offset = "0x16A3F20", VA = "0x16A3F20")]
			public ValuePromise(YamlDotNet.Core.Events.AnchorAlias alias)
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x16A3FD4", Offset = "0x16A3FD4", VA = "0x16A3FD4")]
			public ValuePromise(object value)
			{
			}
		}

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IValueDeserializer innerDeserializer;

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x16A3BA4", Offset = "0x16A3BA4", VA = "0x16A3BA4")]
		public AliasValueDeserializer(IValueDeserializer innerDeserializer)
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x16A3C40", Offset = "0x16A3C40", VA = "0x16A3C40", Slot = "4")]
		public object DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000048")]
	public sealed class NodeValueDeserializer : IValueDeserializer
	{
		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA30", Offset = "0x12AAA30")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IValueDeserializer nestedObjectDeserializer;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializerState state;

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<IParser, Type, object> <>9__0;

			[Token(Token = "0x600170A")]
			[Address(RVA = "0x16A4A54", Offset = "0x16A4A54", VA = "0x16A4A54")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0x16A4D44", Offset = "0x16A4D44", VA = "0x16A4D44")]
			internal object <DeserializeValue>b__0(IParser r, Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IList<INodeDeserializer> deserializers;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IList<INodeTypeResolver> typeResolvers;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x16A43F4", Offset = "0x16A43F4", VA = "0x16A43F4")]
		public NodeValueDeserializer(IList<INodeDeserializer> deserializers, IList<INodeTypeResolver> typeResolvers)
		{
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x16A44B8", Offset = "0x16A44B8", VA = "0x16A44B8", Slot = "4")]
		public object DeserializeValue(IParser parser, Type expectedType, SerializerState state, IValueDeserializer nestedObjectDeserializer)
		{
			return null;
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x16A4A5C", Offset = "0x16A4A5C", VA = "0x16A4A5C")]
		private Type GetTypeFromEvent(NodeEvent nodeEvent, Type currentType)
		{
			return null;
		}
	}
}
namespace YamlDotNet.Serialization.Utilities
{
	[Token(Token = "0x2000049")]
	public interface IPostDeserializationCallback
	{
		[Token(Token = "0x6000268")]
		void OnDeserialization();
	}
	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9470", Offset = "0x12A9470")]
	internal sealed class ObjectAnchorCollection
	{
		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<string, object> objectsByAnchor;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDictionary<object, string> anchorsByObject;

		[Token(Token = "0x17000039")]
		public object Item
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x16A1858", Offset = "0x16A1858", VA = "0x16A1858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x16A1630", Offset = "0x16A1630", VA = "0x16A1630")]
		public void Add(string anchor, object @object)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x16A178C", Offset = "0x16A178C", VA = "0x16A178C")]
		public bool TryGetAnchor(object @object, out string anchor)
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x16A19AC", Offset = "0x16A19AC", VA = "0x16A19AC")]
		public ObjectAnchorCollection()
		{
		}
	}
	[Token(Token = "0x200004B")]
	internal static class ReflectionUtility
	{
		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA40", Offset = "0x12AAA40")]
		private sealed class <GetImplementedInterfaces>d__1 : IEnumerable<Type>, IEnumerable, IEnumerator<Type>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Type <>2__current;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Type type;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Type <>3__type;

			[Token(Token = "0x4000B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Type[] <>7__wrap1;

			[Token(Token = "0x4000B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x1700027A")]
			private Type System.Collections.Generic.IEnumerator<System.Type>.Current
			{
				[Token(Token = "0x600170F")]
				[Address(RVA = "0x16A1C54", Offset = "0x16A1C54", VA = "0x16A1C54", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001711")]
				[Address(RVA = "0x16A1CBC", Offset = "0x16A1CBC", VA = "0x16A1CBC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0x16A1AC4", Offset = "0x16A1AC4", VA = "0x16A1AC4")]
			[DebuggerHidden]
			public <GetImplementedInterfaces>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600170D")]
			[Address(RVA = "0x16A1AFC", Offset = "0x16A1AFC", VA = "0x16A1AFC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0x16A1B00", Offset = "0x16A1B00", VA = "0x16A1B00", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0x16A1C5C", Offset = "0x16A1C5C", VA = "0x16A1C5C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0x16A1CC4", Offset = "0x16A1CC4", VA = "0x16A1CC4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Type> System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0x16A1D70", Offset = "0x16A1D70", VA = "0x16A1D70", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x1695610", Offset = "0x1695610", VA = "0x1695610")]
		public static Type GetImplementedGenericInterface(Type type, Type genericInterfaceType)
		{
			return null;
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x16A1A44", Offset = "0x16A1A44", VA = "0x16A1A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5B18", Offset = "0x12B5B18")]
		public static IEnumerable<Type> GetImplementedInterfaces(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x200004C")]
	public sealed class SerializerState : IDisposable
	{
		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<Type, object> items;

		[Token(Token = "0x600026F")]
		public T Get<T>() where T : class, new()
		{
			return null;
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x16A1D74", Offset = "0x16A1D74", VA = "0x16A1D74")]
		public void OnDeserialization()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x16A20C0", Offset = "0x16A20C0", VA = "0x16A20C0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x16A240C", Offset = "0x16A240C", VA = "0x16A240C")]
		public SerializerState()
		{
		}
	}
	[Token(Token = "0x200004D")]
	internal static class StringExtensions
	{
		[Serializable]
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA50", Offset = "0x12AAA50")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__0_0;

			[Token(Token = "0x6001715")]
			[Address(RVA = "0x16A28DC", Offset = "0x16A28DC", VA = "0x16A28DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0x16A28E4", Offset = "0x16A28E4", VA = "0x16A28E4")]
			internal string <ToCamelOrPascalCase>b__0_0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA60", Offset = "0x12AAA60")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string separator;

			[Token(Token = "0x6001717")]
			[Address(RVA = "0x16A2870", Offset = "0x16A2870", VA = "0x16A2870")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0x16A2968", Offset = "0x16A2968", VA = "0x16A2968")]
			internal string <FromCamelCase>b__0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x16A247C", Offset = "0x16A247C", VA = "0x16A247C")]
		private static string ToCamelOrPascalCase(string str, Func<char, char> firstLetterTransform)
		{
			return null;
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x16A2610", Offset = "0x16A2610", VA = "0x16A2610")]
		public static string ToCamelCase(this string str)
		{
			return null;
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x16A268C", Offset = "0x16A268C", VA = "0x16A268C")]
		public static string ToPascalCase(this string str)
		{
			return null;
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x16A2708", Offset = "0x16A2708", VA = "0x16A2708")]
		public static string FromCamelCase(this string str, string separator)
		{
			return null;
		}
	}
	[Token(Token = "0x200004E")]
	public static class TypeConverter
	{
		[Token(Token = "0x6000277")]
		public static T ChangeType<T>(object value)
		{
			return (T)null;
		}

		[Token(Token = "0x6000278")]
		public static T ChangeType<T>(object value, IFormatProvider provider)
		{
			return (T)null;
		}

		[Token(Token = "0x6000279")]
		public static T ChangeType<T>(object value, CultureInfo culture)
		{
			return (T)null;
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1696040", Offset = "0x1696040", VA = "0x1696040")]
		public static object ChangeType(object value, Type destinationType)
		{
			return null;
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x16A3AEC", Offset = "0x16A3AEC", VA = "0x16A3AEC")]
		public static object ChangeType(object value, Type destinationType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x16A2A0C", Offset = "0x16A2A0C", VA = "0x16A2A0C")]
		public static object ChangeType(object value, Type destinationType, CultureInfo culture)
		{
			return null;
		}
	}
}
namespace YamlDotNet.Serialization.TypeResolvers
{
	[Token(Token = "0x200004F")]
	public sealed class DynamicTypeResolver : ITypeResolver
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x16A1610", Offset = "0x16A1610", VA = "0x16A1610", Slot = "4")]
		public Type Resolve(Type staticType, object actualValue)
		{
			return null;
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x169C900", Offset = "0x169C900", VA = "0x169C900")]
		public DynamicTypeResolver()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public sealed class StaticTypeResolver : ITypeResolver
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x16A1628", Offset = "0x16A1628", VA = "0x16A1628", Slot = "4")]
		public Type Resolve(Type staticType, object actualValue)
		{
			return null;
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x169C908", Offset = "0x169C908", VA = "0x169C908")]
		public StaticTypeResolver()
		{
		}
	}
}
namespace YamlDotNet.Serialization.TypeInspectors
{
	[Token(Token = "0x2000051")]
	public sealed class CachedTypeInspector : TypeInspectorSkeleton
	{
		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeInspector innerTypeDescriptor;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Type, List<IPropertyDescriptor>> cache;

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x169CF70", Offset = "0x169CF70", VA = "0x169CF70")]
		public CachedTypeInspector(ITypeInspector innerTypeDescriptor)
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x16A030C", Offset = "0x16A030C", VA = "0x16A030C", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}
	}
	[Token(Token = "0x2000052")]
	public sealed class NamingConventionTypeInspector : TypeInspectorSkeleton
	{
		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeInspector innerTypeDescriptor;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly INamingConvention namingConvention;

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x169CEAC", Offset = "0x169CEAC", VA = "0x169CEAC")]
		public NamingConventionTypeInspector(ITypeInspector innerTypeDescriptor, INamingConvention namingConvention)
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x16A0448", Offset = "0x16A0448", VA = "0x16A0448", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x16A0564", Offset = "0x16A0564", VA = "0x16A0564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5BAC", Offset = "0x12B5BAC")]
		private IPropertyDescriptor <GetProperties>b__3_0(IPropertyDescriptor p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000053")]
	public sealed class ReadableAndWritablePropertiesTypeInspector : TypeInspectorSkeleton
	{
		[Serializable]
		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA70", Offset = "0x12AAA70")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPropertyDescriptor, bool> <>9__2_0;

			[Token(Token = "0x600171A")]
			[Address(RVA = "0x16A0934", Offset = "0x16A0934", VA = "0x16A0934")]
			public <>c()
			{
			}

			[Token(Token = "0x600171B")]
			[Address(RVA = "0x16A093C", Offset = "0x16A093C", VA = "0x16A093C")]
			internal bool <GetProperties>b__2_0(IPropertyDescriptor p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeInspector _innerTypeDescriptor;

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x169CE1C", Offset = "0x169CE1C", VA = "0x169CE1C")]
		public ReadableAndWritablePropertiesTypeInspector(ITypeInspector innerTypeDescriptor)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x16A0754", Offset = "0x16A0754", VA = "0x16A0754", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}
	}
	[Token(Token = "0x2000054")]
	public sealed class ReadablePropertiesTypeInspector : TypeInspectorSkeleton
	{
		[Token(Token = "0x200037F")]
		private sealed class ReflectionPropertyDescriptor : IPropertyDescriptor
		{
			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly PropertyInfo _propertyInfo;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly ITypeResolver _typeResolver;

			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18A8", Offset = "0x12B18A8")]
			private Type <TypeOverride>k__BackingField;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18B8", Offset = "0x12B18B8")]
			private int <Order>k__BackingField;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18C8", Offset = "0x12B18C8")]
			private ScalarStyle <ScalarStyle>k__BackingField;

			[Token(Token = "0x1700027C")]
			public string Name
			{
				[Token(Token = "0x600171D")]
				[Address(RVA = "0x16A0C2C", Offset = "0x16A0C2C", VA = "0x16A0C2C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027D")]
			public Type Type
			{
				[Token(Token = "0x600171E")]
				[Address(RVA = "0x16A0C4C", Offset = "0x16A0C4C", VA = "0x16A0C4C", Slot = "6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			public Type TypeOverride
			{
				[Token(Token = "0x600171F")]
				[Address(RVA = "0x16A0C70", Offset = "0x16A0C70", VA = "0x16A0C70", Slot = "7")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCD58", Offset = "0x12BCD58")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001720")]
				[Address(RVA = "0x16A0C78", Offset = "0x16A0C78", VA = "0x16A0C78", Slot = "8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCD68", Offset = "0x12BCD68")]
				set
				{
				}
			}

			[Token(Token = "0x1700027F")]
			public int Order
			{
				[Token(Token = "0x6001721")]
				[Address(RVA = "0x16A0C80", Offset = "0x16A0C80", VA = "0x16A0C80", Slot = "9")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCD78", Offset = "0x12BCD78")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001722")]
				[Address(RVA = "0x16A0C88", Offset = "0x16A0C88", VA = "0x16A0C88", Slot = "10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCD88", Offset = "0x12BCD88")]
				set
				{
				}
			}

			[Token(Token = "0x17000280")]
			public bool CanWrite
			{
				[Token(Token = "0x6001723")]
				[Address(RVA = "0x16A0C90", Offset = "0x16A0C90", VA = "0x16A0C90", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000281")]
			public ScalarStyle ScalarStyle
			{
				[Token(Token = "0x6001724")]
				[Address(RVA = "0x16A0CB4", Offset = "0x16A0CB4", VA = "0x16A0CB4", Slot = "11")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCD98", Offset = "0x12BCD98")]
				get
				{
					return default(ScalarStyle);
				}
				[Token(Token = "0x6001725")]
				[Address(RVA = "0x16A0CBC", Offset = "0x16A0CBC", VA = "0x16A0CBC", Slot = "12")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCDA8", Offset = "0x12BCDA8")]
				set
				{
				}
			}

			[Token(Token = "0x600171C")]
			[Address(RVA = "0x16A0BF0", Offset = "0x16A0BF0", VA = "0x16A0BF0")]
			public ReflectionPropertyDescriptor(PropertyInfo propertyInfo, ITypeResolver typeResolver)
			{
			}

			[Token(Token = "0x6001726")]
			[Address(RVA = "0x16A0CC4", Offset = "0x16A0CC4", VA = "0x16A0CC4", Slot = "15")]
			public void Write(object target, object value)
			{
			}

			[Token(Token = "0x6001727")]
			public T GetCustomAttribute<T>() where T : Attribute
			{
				return null;
			}

			[Token(Token = "0x6001728")]
			[Address(RVA = "0x16A0CEC", Offset = "0x16A0CEC", VA = "0x16A0CEC", Slot = "14")]
			public IObjectDescriptor Read(object target)
			{
				return null;
			}
		}

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITypeResolver _typeResolver;

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x169CD80", Offset = "0x169CD80", VA = "0x169CD80")]
		public ReadablePropertiesTypeInspector(ITypeResolver typeResolver)
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0x16A09EC", Offset = "0x16A09EC", VA = "0x16A09EC")]
		private static bool IsValidProperty(PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x16A0A5C", Offset = "0x16A0A5C", VA = "0x16A0A5C", Slot = "6")]
		public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container)
		{
			return null;
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x16A0B78", Offset = "0x16A0B78", VA = "0x16A0B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5BBC", Offset = "0x12B5BBC")]
		private IPropertyDescriptor <GetProperties>b__3_0(PropertyInfo p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000055")]
	public abstract class TypeInspectorSkeleton : ITypeInspector
	{
		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA80", Offset = "0x12AAA80")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001729")]
			[Address(RVA = "0x16A142C", Offset = "0x16A142C", VA = "0x16A142C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0x16A154C", Offset = "0x16A154C", VA = "0x16A154C")]
			internal bool <GetProperty>b__0(IPropertyDescriptor p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAA90", Offset = "0x12AAA90")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPropertyDescriptor, string> <>9__1_1;

			[Token(Token = "0x600172C")]
			[Address(RVA = "0x16A1498", Offset = "0x16A1498", VA = "0x16A1498")]
			public <>c()
			{
			}

			[Token(Token = "0x600172D")]
			[Address(RVA = "0x16A14A0", Offset = "0x16A14A0", VA = "0x16A14A0")]
			internal string <GetProperty>b__1_1(IPropertyDescriptor p)
			{
				return null;
			}
		}

		[Token(Token = "0x600028C")]
		public abstract IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container);

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x16A0E48", Offset = "0x16A0E48", VA = "0x16A0E48", Slot = "5")]
		public IPropertyDescriptor GetProperty(Type type, object container, string name, bool ignoreUnmatched)
		{
			return null;
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x16A0304", Offset = "0x16A0304", VA = "0x16A0304")]
		protected TypeInspectorSkeleton()
		{
		}
	}
}
namespace YamlDotNet.Serialization.ObjectGraphVisitors
{
	[Token(Token = "0x2000056")]
	public sealed class AnchorAssigner : PreProcessingPhaseObjectGraphVisitorSkeleton, IAliasProvider
	{
		[Token(Token = "0x2000382")]
		private class AnchorAssignment
		{
			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Anchor;

			[Token(Token = "0x600172E")]
			[Address(RVA = "0x1698C60", Offset = "0x1698C60", VA = "0x1698C60")]
			public AnchorAssignment()
			{
			}
		}

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IDictionary<object, AnchorAssignment> assignments;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint nextId;

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x16986A8", Offset = "0x16986A8", VA = "0x16986A8")]
		public AnchorAssigner(IEnumerable<IYamlTypeConverter> typeConverters)
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x1698830", Offset = "0x1698830", VA = "0x1698830", Slot = "12")]
		protected override bool Enter(IObjectDescriptor value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x1698A70", Offset = "0x1698A70", VA = "0x1698A70", Slot = "14")]
		protected override bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x1698A78", Offset = "0x1698A78", VA = "0x1698A78", Slot = "13")]
		protected override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x1698A80", Offset = "0x1698A80", VA = "0x1698A80", Slot = "17")]
		protected override void VisitScalar(IObjectDescriptor scalar)
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x1698A84", Offset = "0x1698A84", VA = "0x1698A84", Slot = "16")]
		protected override void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x1698C54", Offset = "0x1698C54", VA = "0x1698C54", Slot = "15")]
		protected override void VisitMappingEnd(IObjectDescriptor mapping)
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x1698C58", Offset = "0x1698C58", VA = "0x1698C58", Slot = "19")]
		protected override void VisitSequenceStart(IObjectDescriptor sequence, Type elementType)
		{
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x1698C5C", Offset = "0x1698C5C", VA = "0x1698C5C", Slot = "18")]
		protected override void VisitSequenceEnd(IObjectDescriptor sequence)
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x1698A88", Offset = "0x1698A88", VA = "0x1698A88")]
		private void VisitObject(IObjectDescriptor value)
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x1698C68", Offset = "0x1698C68", VA = "0x1698C68", Slot = "20")]
		private string YamlDotNet.Serialization.IAliasProvider.GetAlias(object target)
		{
			return null;
		}
	}
	[Token(Token = "0x2000057")]
	public sealed class AnchorAssigningObjectGraphVisitor : ChainedObjectGraphVisitor
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IEventEmitter eventEmitter;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IAliasProvider aliasProvider;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly HashSet<string> emittedAliases;

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x1698D54", Offset = "0x1698D54", VA = "0x1698D54")]
		public AnchorAssigningObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor, IEventEmitter eventEmitter, IAliasProvider aliasProvider)
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x1698E18", Offset = "0x1698E18", VA = "0x1698E18", Slot = "12")]
		public override bool Enter(IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x169910C", Offset = "0x169910C", VA = "0x169910C", Slot = "16")]
		public override void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, IEmitter context)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x16992EC", Offset = "0x16992EC", VA = "0x16992EC", Slot = "18")]
		public override void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, IEmitter context)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x16994D4", Offset = "0x16994D4", VA = "0x16994D4", Slot = "15")]
		public override void VisitScalar(IObjectDescriptor scalar, IEmitter context)
		{
		}
	}
	[Token(Token = "0x2000058")]
	public abstract class ChainedObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
	{
		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectGraphVisitor<IEmitter> nextVisitor;

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1698DEC", Offset = "0x1698DEC", VA = "0x1698DEC")]
		protected ChainedObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor)
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1699044", Offset = "0x1699044", VA = "0x1699044", Slot = "12")]
		public virtual bool Enter(IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1699784", Offset = "0x1699784", VA = "0x1699784", Slot = "13")]
		public virtual bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1699860", Offset = "0x1699860", VA = "0x1699860", Slot = "14")]
		public virtual bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x169993C", Offset = "0x169993C", VA = "0x169993C", Slot = "15")]
		public virtual void VisitScalar(IObjectDescriptor scalar, IEmitter context)
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1699A08", Offset = "0x1699A08", VA = "0x1699A08", Slot = "16")]
		public virtual void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, IEmitter context)
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x1699AEC", Offset = "0x1699AEC", VA = "0x1699AEC", Slot = "17")]
		public virtual void VisitMappingEnd(IObjectDescriptor mapping, IEmitter context)
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x1699BB8", Offset = "0x1699BB8", VA = "0x1699BB8", Slot = "18")]
		public virtual void VisitSequenceStart(IObjectDescriptor sequence, Type elementType, IEmitter context)
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1699C94", Offset = "0x1699C94", VA = "0x1699C94", Slot = "19")]
		public virtual void VisitSequenceEnd(IObjectDescriptor sequence, IEmitter context)
		{
		}
	}
	[Token(Token = "0x2000059")]
	public sealed class CustomSerializationObjectGraphVisitor : ChainedObjectGraphVisitor
	{
		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAAA0", Offset = "0x12AAAA0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IObjectDescriptor value;

			[Token(Token = "0x600172F")]
			[Address(RVA = "0x169A258", Offset = "0x169A258", VA = "0x169A258")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001730")]
			[Address(RVA = "0x169A260", Offset = "0x169A260", VA = "0x169A260")]
			internal bool <Enter>b__0(IYamlTypeConverter t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IEnumerable<IYamlTypeConverter> typeConverters;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ObjectSerializer nestedObjectSerializer;

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1699D60", Offset = "0x1699D60", VA = "0x1699D60")]
		public CustomSerializationObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor, IEnumerable<IYamlTypeConverter> typeConverters, ObjectSerializer nestedObjectSerializer)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x1699E78", Offset = "0x1699E78", VA = "0x1699E78", Slot = "12")]
		public override bool Enter(IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200005A")]
	public sealed class DefaultExclusiveObjectGraphVisitor : ChainedObjectGraphVisitor
	{
		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IEqualityComparer<object> _objectComparer;

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x169A394", Offset = "0x169A394", VA = "0x169A394")]
		public DefaultExclusiveObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor)
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x169A3C0", Offset = "0x169A3C0", VA = "0x169A3C0")]
		private static object GetDefault(Type type)
		{
			return null;
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x169A448", Offset = "0x169A448", VA = "0x169A448", Slot = "13")]
		public override bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x169A5EC", Offset = "0x169A5EC", VA = "0x169A5EC", Slot = "14")]
		public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200005B")]
	public sealed class EmittingObjectGraphVisitor : IObjectGraphVisitor<IEmitter>
	{
		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IEventEmitter eventEmitter;

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x169A92C", Offset = "0x169A92C", VA = "0x169A92C")]
		public EmittingObjectGraphVisitor(IEventEmitter eventEmitter)
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x169A958", Offset = "0x169A958", VA = "0x169A958", Slot = "4")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.Enter(IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x169A960", Offset = "0x169A960", VA = "0x169A960", Slot = "5")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.EnterMapping(IObjectDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x169A968", Offset = "0x169A968", VA = "0x169A968", Slot = "6")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x169A970", Offset = "0x169A970", VA = "0x169A970", Slot = "7")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.VisitScalar(IObjectDescriptor scalar, IEmitter context)
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x169AA58", Offset = "0x169AA58", VA = "0x169AA58", Slot = "8")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, IEmitter context)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x169AB44", Offset = "0x169AB44", VA = "0x169AB44", Slot = "9")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.VisitMappingEnd(IObjectDescriptor mapping, IEmitter context)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x169AC30", Offset = "0x169AC30", VA = "0x169AC30", Slot = "10")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.VisitSequenceStart(IObjectDescriptor sequence, Type elementType, IEmitter context)
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x169AD1C", Offset = "0x169AD1C", VA = "0x169AD1C", Slot = "11")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Core.IEmitter>.VisitSequenceEnd(IObjectDescriptor sequence, IEmitter context)
		{
		}
	}
	[Token(Token = "0x200005C")]
	public abstract class PreProcessingPhaseObjectGraphVisitorSkeleton : IObjectGraphVisitor<Nothing>
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAAB0", Offset = "0x12AAAB0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IObjectDescriptor value;

			[Token(Token = "0x6001731")]
			[Address(RVA = "0x169AFFC", Offset = "0x169AFFC", VA = "0x169AFFC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0x169B074", Offset = "0x169B074", VA = "0x169B074")]
			internal bool <YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.Enter>b__0(IYamlTypeConverter t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly IEnumerable<IYamlTypeConverter> typeConverters;

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1698724", Offset = "0x1698724", VA = "0x1698724")]
		public PreProcessingPhaseObjectGraphVisitorSkeleton(IEnumerable<IYamlTypeConverter> typeConverters)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x169AE10", Offset = "0x169AE10", VA = "0x169AE10", Slot = "4")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.Enter(IObjectDescriptor value, Nothing context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x169B004", Offset = "0x169B004", VA = "0x169B004", Slot = "6")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, Nothing context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x169B014", Offset = "0x169B014", VA = "0x169B014", Slot = "5")]
		private bool YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.EnterMapping(IObjectDescriptor key, IObjectDescriptor value, Nothing context)
		{
			return default(bool);
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x169B024", Offset = "0x169B024", VA = "0x169B024", Slot = "9")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.VisitMappingEnd(IObjectDescriptor mapping, Nothing context)
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x169B034", Offset = "0x169B034", VA = "0x169B034", Slot = "8")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType, Nothing context)
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x169B044", Offset = "0x169B044", VA = "0x169B044", Slot = "7")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.VisitScalar(IObjectDescriptor scalar, Nothing context)
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x169B054", Offset = "0x169B054", VA = "0x169B054", Slot = "11")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.VisitSequenceEnd(IObjectDescriptor sequence, Nothing context)
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x169B064", Offset = "0x169B064", VA = "0x169B064", Slot = "10")]
		private void YamlDotNet.Serialization.IObjectGraphVisitor<YamlDotNet.Serialization.Nothing>.VisitSequenceStart(IObjectDescriptor sequence, Type elementType, Nothing context)
		{
		}

		[Token(Token = "0x60002C1")]
		protected abstract bool Enter(IObjectDescriptor value);

		[Token(Token = "0x60002C2")]
		protected abstract bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value);

		[Token(Token = "0x60002C3")]
		protected abstract bool EnterMapping(IObjectDescriptor key, IObjectDescriptor value);

		[Token(Token = "0x60002C4")]
		protected abstract void VisitMappingEnd(IObjectDescriptor mapping);

		[Token(Token = "0x60002C5")]
		protected abstract void VisitMappingStart(IObjectDescriptor mapping, Type keyType, Type valueType);

		[Token(Token = "0x60002C6")]
		protected abstract void VisitScalar(IObjectDescriptor scalar);

		[Token(Token = "0x60002C7")]
		protected abstract void VisitSequenceEnd(IObjectDescriptor sequence);

		[Token(Token = "0x60002C8")]
		protected abstract void VisitSequenceStart(IObjectDescriptor sequence, Type elementType);
	}
}
namespace YamlDotNet.Serialization.ObjectGraphTraversalStrategies
{
	[Token(Token = "0x200005D")]
	public class FullObjectGraphTraversalStrategy : IObjectGraphTraversalStrategy
	{
		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int maxRecursion;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ITypeInspector typeDescriptor;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ITypeResolver typeResolver;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private INamingConvention namingConvention;

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x169841C", Offset = "0x169841C", VA = "0x169841C")]
		public FullObjectGraphTraversalStrategy(ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion, INamingConvention namingConvention)
		{
		}

		[Token(Token = "0x60002CA")]
		private void YamlDotNet.Serialization.IObjectGraphTraversalStrategy.Traverse<TContext>(IObjectDescriptor graph, IObjectGraphVisitor<TContext> visitor, TContext context)
		{
		}

		[Token(Token = "0x60002CB")]
		protected virtual void Traverse<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context)
		{
		}

		[Token(Token = "0x60002CC")]
		protected virtual void TraverseObject<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context)
		{
		}

		[Token(Token = "0x60002CD")]
		protected virtual void TraverseDictionary<TContext>(IObjectDescriptor dictionary, IObjectGraphVisitor<TContext> visitor, int currentDepth, Type keyType, Type valueType, TContext context)
		{
		}

		[Token(Token = "0x60002CE")]
		private void TraverseList<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context)
		{
		}

		[Token(Token = "0x60002CF")]
		protected virtual void TraverseProperties<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1698570", Offset = "0x1698570", VA = "0x1698570")]
		private IObjectDescriptor GetObjectDescriptor(object value, Type staticType)
		{
			return null;
		}
	}
	[Token(Token = "0x200005E")]
	public class RoundtripObjectGraphTraversalStrategy : FullObjectGraphTraversalStrategy
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAAC0", Offset = "0x12AAAC0")]
		private sealed class <>c__DisplayClass2_0<TContext>
		{
			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObjectDescriptor value;

			[Token(Token = "0x6001733")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001734")]
			internal bool <TraverseProperties>b__0(IYamlTypeConverter c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IEnumerable<IYamlTypeConverter> converters;

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1698670", Offset = "0x1698670", VA = "0x1698670")]
		public RoundtripObjectGraphTraversalStrategy(IEnumerable<IYamlTypeConverter> converters, ITypeInspector typeDescriptor, ITypeResolver typeResolver, int maxRecursion)
		{
		}

		[Token(Token = "0x60002D2")]
		protected override void TraverseProperties<TContext>(IObjectDescriptor value, IObjectGraphVisitor<TContext> visitor, int currentDepth, TContext context)
		{
		}
	}
}
namespace YamlDotNet.Serialization.ObjectFactories
{
	[Token(Token = "0x200005F")]
	public sealed class DefaultObjectFactory : IObjectFactory
	{
		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Type, Type> defaultInterfaceImplementations;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1697F70", Offset = "0x1697F70", VA = "0x1697F70", Slot = "4")]
		public object Create(Type type)
		{
			return null;
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1698160", Offset = "0x1698160", VA = "0x1698160")]
		public DefaultObjectFactory()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public sealed class LambdaObjectFactory : IObjectFactory
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Func<Type, object> _factory;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1698318", Offset = "0x1698318", VA = "0x1698318")]
		public LambdaObjectFactory(Func<Type, object> factory)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x16983B4", Offset = "0x16983B4", VA = "0x16983B4", Slot = "4")]
		public object Create(Type type)
		{
			return null;
		}
	}
}
namespace YamlDotNet.Serialization.NodeTypeResolvers
{
	[Token(Token = "0x2000061")]
	public sealed class DefaultContainersNodeTypeResolver : INodeTypeResolver
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x16974C8", Offset = "0x16974C8", VA = "0x16974C8", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeTypeResolver.Resolve(NodeEvent nodeEvent, ref Type currentType)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x1697620", Offset = "0x1697620", VA = "0x1697620")]
		public DefaultContainersNodeTypeResolver()
		{
		}
	}
	[Token(Token = "0x2000062")]
	public sealed class TagNodeTypeResolver : INodeTypeResolver
	{
		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<string, Type> tagMappings;

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1697628", Offset = "0x1697628", VA = "0x1697628")]
		public TagNodeTypeResolver(IDictionary<string, Type> tagMappings)
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x16976C4", Offset = "0x16976C4", VA = "0x16976C4", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeTypeResolver.Resolve(NodeEvent nodeEvent, ref Type currentType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000063")]
	public sealed class TypeNameInTagNodeTypeResolver : INodeTypeResolver
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x16977D0", Offset = "0x16977D0", VA = "0x16977D0", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeTypeResolver.Resolve(NodeEvent nodeEvent, ref Type currentType)
		{
			return default(bool);
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x16978C0", Offset = "0x16978C0", VA = "0x16978C0")]
		public TypeNameInTagNodeTypeResolver()
		{
		}
	}
	[Token(Token = "0x2000064")]
	public sealed class YamlConvertibleTypeResolver : INodeTypeResolver
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x16978C8", Offset = "0x16978C8", VA = "0x16978C8", Slot = "4")]
		public bool Resolve(NodeEvent nodeEvent, ref Type currentType)
		{
			return default(bool);
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1697958", Offset = "0x1697958", VA = "0x1697958")]
		public YamlConvertibleTypeResolver()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public sealed class YamlSerializableTypeResolver : INodeTypeResolver
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1697960", Offset = "0x1697960", VA = "0x1697960", Slot = "4")]
		public bool Resolve(NodeEvent nodeEvent, ref Type currentType)
		{
			return default(bool);
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x16979F0", Offset = "0x16979F0", VA = "0x16979F0")]
		public YamlSerializableTypeResolver()
		{
		}
	}
}
namespace YamlDotNet.Serialization.NodeDeserializers
{
	[Token(Token = "0x2000066")]
	public sealed class ArrayNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12AAAD0", Offset = "0x12AAAD0")]
		private sealed class ArrayList : IList, ICollection, IEnumerable
		{
			[Token(Token = "0x20005FB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABEF0", Offset = "0x12ABEF0")]
			private sealed class <GetEnumerator>d__24 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001436")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001437")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001438")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public ArrayList <>4__this;

				[Token(Token = "0x4001439")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int <i>5__2;

				[Token(Token = "0x17000393")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002176")]
					[Address(RVA = "0x286C250", Offset = "0x286C250", VA = "0x286C250", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000394")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002178")]
					[Address(RVA = "0x286C2B8", Offset = "0x286C2B8", VA = "0x286C2B8", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002173")]
				[Address(RVA = "0x286C180", Offset = "0x286C180", VA = "0x286C180")]
				[DebuggerHidden]
				public <GetEnumerator>d__24(int <>1__state)
				{
				}

				[Token(Token = "0x6002174")]
				[Address(RVA = "0x286C1AC", Offset = "0x286C1AC", VA = "0x286C1AC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002175")]
				[Address(RVA = "0x286C1B0", Offset = "0x286C1B0", VA = "0x286C1B0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002177")]
				[Address(RVA = "0x286C258", Offset = "0x286C258", VA = "0x286C258", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private object[] data;

			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int count;

			[Token(Token = "0x17000282")]
			public bool IsFixedSize
			{
				[Token(Token = "0x600173B")]
				[Address(RVA = "0x286BF74", Offset = "0x286BF74", VA = "0x286BF74", Slot = "10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000283")]
			public bool IsReadOnly
			{
				[Token(Token = "0x600173C")]
				[Address(RVA = "0x286BF7C", Offset = "0x286BF7C", VA = "0x286BF7C", Slot = "9")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000284")]
			public object Item
			{
				[Token(Token = "0x600173F")]
				[Address(RVA = "0x286C044", Offset = "0x286C044", VA = "0x286C044", Slot = "4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001740")]
				[Address(RVA = "0x286C080", Offset = "0x286C080", VA = "0x286C080", Slot = "5")]
				set
				{
				}
			}

			[Token(Token = "0x17000285")]
			public int Count
			{
				[Token(Token = "0x6001742")]
				[Address(RVA = "0x286C0F8", Offset = "0x286C0F8", VA = "0x286C0F8", Slot = "16")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000286")]
			public bool IsSynchronized
			{
				[Token(Token = "0x6001743")]
				[Address(RVA = "0x286C100", Offset = "0x286C100", VA = "0x286C100", Slot = "18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000287")]
			public object SyncRoot
			{
				[Token(Token = "0x6001744")]
				[Address(RVA = "0x286C108", Offset = "0x286C108", VA = "0x286C108", Slot = "17")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001735")]
			[Address(RVA = "0x286B8D0", Offset = "0x286B8D0", VA = "0x286B8D0")]
			public ArrayList()
			{
			}

			[Token(Token = "0x6001736")]
			[Address(RVA = "0x286BD78", Offset = "0x286BD78", VA = "0x286BD78", Slot = "6")]
			public int Add(object value)
			{
				return default(int);
			}

			[Token(Token = "0x6001737")]
			[Address(RVA = "0x286BD1C", Offset = "0x286BD1C", VA = "0x286BD1C", Slot = "8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001738")]
			[Address(RVA = "0x286BE54", Offset = "0x286BE54", VA = "0x286BE54", Slot = "7")]
			public bool Contains(object value)
			{
				return default(bool);
			}

			[Token(Token = "0x6001739")]
			[Address(RVA = "0x286BEB4", Offset = "0x286BEB4", VA = "0x286BEB4", Slot = "11")]
			public int IndexOf(object value)
			{
				return default(int);
			}

			[Token(Token = "0x600173A")]
			[Address(RVA = "0x286BF14", Offset = "0x286BF14", VA = "0x286BF14", Slot = "12")]
			public void Insert(int index, object value)
			{
			}

			[Token(Token = "0x600173D")]
			[Address(RVA = "0x286BF84", Offset = "0x286BF84", VA = "0x286BF84", Slot = "13")]
			public void Remove(object value)
			{
			}

			[Token(Token = "0x600173E")]
			[Address(RVA = "0x286BFE4", Offset = "0x286BFE4", VA = "0x286BFE4", Slot = "14")]
			public void RemoveAt(int index)
			{
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0x286BCFC", Offset = "0x286BCFC", VA = "0x286BCFC", Slot = "15")]
			public void CopyTo(Array array, int index)
			{
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0x286C110", Offset = "0x286C110", VA = "0x286C110", Slot = "19")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BCDB8", Offset = "0x12BCDB8")]
			public IEnumerator GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x286B79C", Offset = "0x286B79C", VA = "0x286B79C", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x2867B60", Offset = "0x2867B60", VA = "0x2867B60")]
		public ArrayNodeDeserializer()
		{
		}
	}
	[Token(Token = "0x2000067")]
	public sealed class CollectionNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB08", Offset = "0x12AAB08")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IList result;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type tItem;

			[Token(Token = "0x6001746")]
			[Address(RVA = "0x286C628", Offset = "0x286C628", VA = "0x286C628")]
			public <>c__DisplayClass3_0()
			{
			}
		}

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB18", Offset = "0x12AAB18")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x286C630", Offset = "0x286C630", VA = "0x286C630")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x6001748")]
			[Address(RVA = "0x286C638", Offset = "0x286C638", VA = "0x286C638")]
			internal void <DeserializeHelper>b__0(object v)
			{
			}
		}

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectFactory _objectFactory;

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x2867B94", Offset = "0x2867B94", VA = "0x2867B94")]
		public CollectionNodeDeserializer(IObjectFactory objectFactory)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x286C2C0", Offset = "0x286C2C0", VA = "0x286C2C0", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x286B8F8", Offset = "0x286B8F8", VA = "0x286B8F8")]
		internal static void DeserializeHelper(Type tItem, IParser parser, Func<IParser, Type, object> nestedObjectDeserializer, IList result, bool canUpdate)
		{
		}
	}
	[Token(Token = "0x2000068")]
	public sealed class DictionaryNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB28", Offset = "0x12AAB28")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IDictionary result;

			[Token(Token = "0x6001749")]
			[Address(RVA = "0x286CEC0", Offset = "0x286CEC0", VA = "0x286CEC0")]
			public <>c__DisplayClass3_0()
			{
			}
		}

		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB38", Offset = "0x12AAB38")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object key;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object value;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x600174A")]
			[Address(RVA = "0x286CEC8", Offset = "0x286CEC8", VA = "0x286CEC8")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x600174B")]
			[Address(RVA = "0x286CED0", Offset = "0x286CED0", VA = "0x286CED0")]
			internal void <DeserializeHelper>b__0(object v)
			{
			}

			[Token(Token = "0x600174C")]
			[Address(RVA = "0x286CFA4", Offset = "0x286CFA4", VA = "0x286CFA4")]
			internal void <DeserializeHelper>b__1(object v)
			{
			}
		}

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB48", Offset = "0x12AAB48")]
		private sealed class <>c__DisplayClass3_2
		{
			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasFirstPart;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass3_1 CS$<>8__locals2;

			[Token(Token = "0x600174D")]
			[Address(RVA = "0x16951C8", Offset = "0x16951C8", VA = "0x16951C8")]
			public <>c__DisplayClass3_2()
			{
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0x16951D0", Offset = "0x16951D0", VA = "0x16951D0")]
			internal void <DeserializeHelper>b__2(object v)
			{
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0x16952D0", Offset = "0x16952D0", VA = "0x16952D0")]
			internal void <DeserializeHelper>b__3(object v)
			{
			}
		}

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectFactory _objectFactory;

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x2867B68", Offset = "0x2867B68", VA = "0x2867B68")]
		public DictionaryNodeDeserializer(IObjectFactory objectFactory)
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x286C71C", Offset = "0x286C71C", VA = "0x286C71C", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x286CA44", Offset = "0x286CA44", VA = "0x286CA44")]
		private static void DeserializeHelper(Type tKey, Type tValue, IParser parser, Func<IParser, Type, object> nestedObjectDeserializer, IDictionary result)
		{
		}
	}
	[Token(Token = "0x2000069")]
	public sealed class EnumerableNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x16953D0", Offset = "0x16953D0", VA = "0x16953D0", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x1695968", Offset = "0x1695968", VA = "0x1695968")]
		public EnumerableNodeDeserializer()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public sealed class NullNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x1695970", Offset = "0x1695970", VA = "0x1695970", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x16959FC", Offset = "0x16959FC", VA = "0x16959FC")]
		private bool NodeIsNull(NodeEvent nodeEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x1695B48", Offset = "0x1695B48", VA = "0x1695B48")]
		public NullNodeDeserializer()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public sealed class ObjectNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB58", Offset = "0x12AAB58")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IPropertyDescriptor property;

			[Token(Token = "0x6001750")]
			[Address(RVA = "0x1696038", Offset = "0x1696038", VA = "0x1696038")]
			public <>c__DisplayClass4_0()
			{
			}
		}

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB68", Offset = "0x12AAB68")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object valueRef;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x16960C0", Offset = "0x16960C0", VA = "0x16960C0")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001752")]
			[Address(RVA = "0x16960C8", Offset = "0x16960C8", VA = "0x16960C8")]
			internal void <YamlDotNet.Serialization.INodeDeserializer.Deserialize>b__0(object v)
			{
			}
		}

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectFactory _objectFactory;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ITypeInspector _typeDescriptor;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool _ignoreUnmatched;

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x1695B50", Offset = "0x1695B50", VA = "0x1695B50")]
		public ObjectNodeDeserializer(IObjectFactory objectFactory, ITypeInspector typeDescriptor, bool ignoreUnmatched)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x1695B94", Offset = "0x1695B94", VA = "0x1695B94", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200006C")]
	public sealed class ScalarNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x4000095")]
		private const string BooleanTruePattern = "^(true|y|yes|on)$";

		[Token(Token = "0x4000096")]
		private const string BooleanFalsePattern = "^(false|n|no|off)$";

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x1696220", Offset = "0x1696220", VA = "0x1696220", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x16965C0", Offset = "0x16965C0", VA = "0x16965C0")]
		private object DeserializeBooleanHelper(string value)
		{
			return null;
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x16966F4", Offset = "0x16966F4", VA = "0x16966F4")]
		private object DeserializeIntegerHelper(TypeCode typeCode, string value)
		{
			return null;
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1696A94", Offset = "0x1696A94", VA = "0x1696A94")]
		private static object CastInteger(long number, TypeCode typeCode)
		{
			return null;
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1696BD0", Offset = "0x1696BD0", VA = "0x1696BD0")]
		private static object CastInteger(ulong number, TypeCode typeCode)
		{
			return null;
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1696D08", Offset = "0x1696D08", VA = "0x1696D08")]
		public ScalarNodeDeserializer()
		{
		}
	}
	[Token(Token = "0x200006D")]
	public sealed class TypeConverterNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB78", Offset = "0x12AAB78")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type expectedType;

			[Token(Token = "0x6001753")]
			[Address(RVA = "0x1696F14", Offset = "0x1696F14", VA = "0x1696F14")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001754")]
			[Address(RVA = "0x1696F1C", Offset = "0x1696F1C", VA = "0x1696F1C")]
			internal bool <YamlDotNet.Serialization.INodeDeserializer.Deserialize>b__0(IYamlTypeConverter c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IEnumerable<IYamlTypeConverter> converters;

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1696D10", Offset = "0x1696D10", VA = "0x1696D10")]
		public TypeConverterNodeDeserializer(IEnumerable<IYamlTypeConverter> converters)
		{
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1696DAC", Offset = "0x1696DAC", VA = "0x1696DAC", Slot = "4")]
		private bool YamlDotNet.Serialization.INodeDeserializer.Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200006E")]
	public sealed class YamlConvertibleNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB88", Offset = "0x12AAB88")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IParser, Type, object> nestedObjectDeserializer;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IParser parser;

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x1697248", Offset = "0x1697248", VA = "0x1697248")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x1697260", Offset = "0x1697260", VA = "0x1697260")]
			internal object <Deserialize>b__0(Type type)
			{
				return null;
			}
		}

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectFactory objectFactory;

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1696FDC", Offset = "0x1696FDC", VA = "0x1696FDC")]
		public YamlConvertibleNodeDeserializer(IObjectFactory objectFactory)
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1697008", Offset = "0x1697008", VA = "0x1697008", Slot = "4")]
		public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200006F")]
	public sealed class YamlSerializableNodeDeserializer : INodeDeserializer
	{
		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IObjectFactory objectFactory;

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x16972CC", Offset = "0x16972CC", VA = "0x16972CC")]
		public YamlSerializableNodeDeserializer(IObjectFactory objectFactory)
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x16972F8", Offset = "0x16972F8", VA = "0x16972F8", Slot = "4")]
		public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value)
		{
			return default(bool);
		}
	}
}
namespace YamlDotNet.Serialization.NamingConventions
{
	[Token(Token = "0x2000070")]
	public sealed class CamelCaseNamingConvention : INamingConvention
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x286B6BC", Offset = "0x286B6BC", VA = "0x286B6BC", Slot = "4")]
		public string Apply(string value)
		{
			return null;
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x2863DC0", Offset = "0x2863DC0", VA = "0x2863DC0")]
		public CamelCaseNamingConvention()
		{
		}
	}
	[Token(Token = "0x2000071")]
	public sealed class HyphenatedNamingConvention : INamingConvention
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x286B6C8", Offset = "0x286B6C8", VA = "0x286B6C8", Slot = "4")]
		public string Apply(string value)
		{
			return null;
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x286B71C", Offset = "0x286B71C", VA = "0x286B71C")]
		public HyphenatedNamingConvention()
		{
		}
	}
	[Token(Token = "0x2000072")]
	public sealed class NullNamingConvention : INamingConvention
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x286B724", Offset = "0x286B724", VA = "0x286B724", Slot = "4")]
		public string Apply(string value)
		{
			return null;
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x2867B58", Offset = "0x2867B58", VA = "0x2867B58")]
		public NullNamingConvention()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public sealed class PascalCaseNamingConvention : INamingConvention
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x286B72C", Offset = "0x286B72C", VA = "0x286B72C", Slot = "4")]
		public string Apply(string value)
		{
			return null;
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x286B738", Offset = "0x286B738", VA = "0x286B738")]
		public PascalCaseNamingConvention()
		{
		}
	}
	[Token(Token = "0x2000074")]
	public sealed class UnderscoredNamingConvention : INamingConvention
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x286B740", Offset = "0x286B740", VA = "0x286B740", Slot = "4")]
		public string Apply(string value)
		{
			return null;
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x286B794", Offset = "0x286B794", VA = "0x286B794")]
		public UnderscoredNamingConvention()
		{
		}
	}
}
namespace YamlDotNet.Serialization.EventEmitters
{
	[Token(Token = "0x2000075")]
	public abstract class ChainedEventEmitter : IEventEmitter
	{
		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly IEventEmitter nextEmitter;

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x2869650", Offset = "0x2869650", VA = "0x2869650")]
		protected ChainedEventEmitter(IEventEmitter nextEmitter)
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x28696EC", Offset = "0x28696EC", VA = "0x28696EC", Slot = "10")]
		public virtual void Emit(AliasEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x28697B4", Offset = "0x28697B4", VA = "0x28697B4", Slot = "11")]
		public virtual void Emit(ScalarEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x2869880", Offset = "0x2869880", VA = "0x2869880", Slot = "12")]
		public virtual void Emit(MappingStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x286994C", Offset = "0x286994C", VA = "0x286994C", Slot = "13")]
		public virtual void Emit(MappingEndEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x2869A18", Offset = "0x2869A18", VA = "0x2869A18", Slot = "14")]
		public virtual void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x2869AE4", Offset = "0x2869AE4", VA = "0x2869AE4", Slot = "15")]
		public virtual void Emit(SequenceEndEventInfo eventInfo, IEmitter emitter)
		{
		}
	}
	[Token(Token = "0x2000076")]
	internal class CustomTagEventEmitter : ChainedEventEmitter
	{
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDictionary<Type, string> tagMappings;

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x2869BB0", Offset = "0x2869BB0", VA = "0x2869BB0")]
		public CustomTagEventEmitter(IEventEmitter inner, IDictionary<Type, string> tagMappings)
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x2869BD8", Offset = "0x2869BD8", VA = "0x2869BD8", Slot = "12")]
		public override void Emit(MappingStartEventInfo eventInfo, IEmitter emitter)
		{
		}
	}
	[Token(Token = "0x2000077")]
	public sealed class JsonEventEmitter : ChainedEventEmitter
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x2869E20", Offset = "0x2869E20", VA = "0x2869E20")]
		public JsonEventEmitter(IEventEmitter nextEmitter)
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x2869E24", Offset = "0x2869E24", VA = "0x2869E24", Slot = "10")]
		public override void Emit(AliasEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x2869E90", Offset = "0x2869E90", VA = "0x2869E90", Slot = "11")]
		public override void Emit(ScalarEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x286A4BC", Offset = "0x286A4BC", VA = "0x286A4BC", Slot = "12")]
		public override void Emit(MappingStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x286A4D8", Offset = "0x286A4D8", VA = "0x286A4D8", Slot = "14")]
		public override void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter)
		{
		}
	}
	[Token(Token = "0x2000078")]
	public sealed class TypeAssigningEventEmitter : ChainedEventEmitter
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool _assignTypeWhenDifferent;

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x286A4F4", Offset = "0x286A4F4", VA = "0x286A4F4")]
		public TypeAssigningEventEmitter(IEventEmitter nextEmitter, bool assignTypeWhenDifferent)
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x286A520", Offset = "0x286A520", VA = "0x286A520", Slot = "11")]
		public override void Emit(ScalarEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x286ADB8", Offset = "0x286ADB8", VA = "0x286ADB8", Slot = "12")]
		public override void Emit(MappingStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x286B07C", Offset = "0x286B07C", VA = "0x286B07C", Slot = "14")]
		public override void Emit(SequenceStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x286ADF4", Offset = "0x286ADF4", VA = "0x286ADF4")]
		private void AssignTypeIfDifferent(ObjectEventInfo eventInfo)
		{
		}
	}
	[Token(Token = "0x2000079")]
	public sealed class WriterEventEmitter : IEventEmitter
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x286B0B8", Offset = "0x286B0B8", VA = "0x286B0B8", Slot = "4")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(AliasEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x286B19C", Offset = "0x286B19C", VA = "0x286B19C", Slot = "5")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(ScalarEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x286B2B4", Offset = "0x286B2B4", VA = "0x286B2B4", Slot = "6")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(MappingStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x286B3B4", Offset = "0x286B3B4", VA = "0x286B3B4", Slot = "7")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(MappingEndEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x286B480", Offset = "0x286B480", VA = "0x286B480", Slot = "8")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(SequenceStartEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x286B580", Offset = "0x286B580", VA = "0x286B580", Slot = "9")]
		private void YamlDotNet.Serialization.IEventEmitter.Emit(SequenceEndEventInfo eventInfo, IEmitter emitter)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x286B64C", Offset = "0x286B64C", VA = "0x286B64C")]
		public WriterEventEmitter()
		{
		}
	}
}
namespace YamlDotNet.Serialization.Converters
{
	[Token(Token = "0x200007A")]
	public class DateTimeConverter : IYamlTypeConverter
	{
		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DateTimeKind kind;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IFormatProvider provider;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string[] formats;

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x2865D08", Offset = "0x2865D08", VA = "0x2865D08")]
		public DateTimeConverter(DateTimeKind kind = DateTimeKind.Utc, [Optional] IFormatProvider provider, params string[] formats)
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x2865DEC", Offset = "0x2865DEC", VA = "0x2865DEC", Slot = "4")]
		public bool Accepts(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x2865E70", Offset = "0x2865E70", VA = "0x2865E70", Slot = "5")]
		public object ReadYaml(IParser parser, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x28660D4", Offset = "0x28660D4", VA = "0x28660D4", Slot = "6")]
		public void WriteYaml(IEmitter emitter, object value, Type type)
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x2866058", Offset = "0x2866058", VA = "0x2866058")]
		private static DateTime EnsureDateTimeKind(DateTime dt, DateTimeKind kind)
		{
			return default(DateTime);
		}
	}
	[Token(Token = "0x200007B")]
	public class GuidConverter : IYamlTypeConverter
	{
		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly bool jsonCompatible;

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x2866268", Offset = "0x2866268", VA = "0x2866268")]
		public GuidConverter(bool jsonCompatible)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x2866298", Offset = "0x2866298", VA = "0x2866298", Slot = "4")]
		public bool Accepts(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x286631C", Offset = "0x286631C", VA = "0x286631C", Slot = "5")]
		public object ReadYaml(IParser parser, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x28664B0", Offset = "0x28664B0", VA = "0x28664B0", Slot = "6")]
		public void WriteYaml(IEmitter emitter, object value, Type type)
		{
		}
	}
}
namespace YamlDotNet.RepresentationModel
{
	[Token(Token = "0x200007C")]
	internal class DocumentLoadingState
	{
		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IDictionary<string, YamlNode> anchors;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IList<YamlNode> nodesWithUnresolvedAliases;

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x2857EC4", Offset = "0x2857EC4", VA = "0x2857EC4")]
		public void AddAnchor(YamlNode node)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x2858094", Offset = "0x2858094", VA = "0x2858094")]
		public YamlNode GetNode(string anchor, bool throwException, Mark start, Mark end)
		{
			return null;
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x2858218", Offset = "0x2858218", VA = "0x2858218")]
		public void AddNodeWithUnresolvedAliases(YamlNode node)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x28582DC", Offset = "0x28582DC", VA = "0x28582DC")]
		public void ResolveAliases()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x2858540", Offset = "0x2858540", VA = "0x2858540")]
		public DocumentLoadingState()
		{
		}
	}
	[Token(Token = "0x200007D")]
	internal class EmitterState
	{
		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<string> emittedAnchors;

		[Token(Token = "0x1700003A")]
		public HashSet<string> EmittedAnchors
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0x28585D8", Offset = "0x28585D8", VA = "0x28585D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x28585E0", Offset = "0x28585E0", VA = "0x28585E0")]
		public EmitterState()
		{
		}
	}
	[Token(Token = "0x200007E")]
	public interface IYamlVisitor
	{
		[Token(Token = "0x6000331")]
		void Visit(YamlStream stream);

		[Token(Token = "0x6000332")]
		void Visit(YamlDocument document);

		[Token(Token = "0x6000333")]
		void Visit(YamlScalarNode scalar);

		[Token(Token = "0x6000334")]
		void Visit(YamlSequenceNode sequence);

		[Token(Token = "0x6000335")]
		void Visit(YamlMappingNode mapping);
	}
	[Serializable]
	[Token(Token = "0x200007F")]
	internal class YamlAliasNode : YamlNode
	{
		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAB98", Offset = "0x12AAB98")]
		private sealed class <SafeAllNodes>d__7 : IEnumerable<YamlNode>, IEnumerable, IEnumerator<YamlNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YamlNode <>2__current;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YamlAliasNode <>4__this;

			[Token(Token = "0x17000288")]
			private YamlNode System.Collections.Generic.IEnumerator<YamlDotNet.RepresentationModel.YamlNode>.Current
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0x2858AA4", Offset = "0x2858AA4", VA = "0x2858AA4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175C")]
				[Address(RVA = "0x2858B0C", Offset = "0x2858B0C", VA = "0x2858B0C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0x2858A28", Offset = "0x2858A28", VA = "0x2858A28")]
			[DebuggerHidden]
			public <SafeAllNodes>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x2858A68", Offset = "0x2858A68", VA = "0x2858A68", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0x2858A6C", Offset = "0x2858A6C", VA = "0x2858A6C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0x2858AAC", Offset = "0x2858AAC", VA = "0x2858AAC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0x2858B14", Offset = "0x2858B14", VA = "0x2858B14", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<YamlNode> System.Collections.Generic.IEnumerable<YamlDotNet.RepresentationModel.YamlNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600175E")]
			[Address(RVA = "0x2858BC0", Offset = "0x2858BC0", VA = "0x2858BC0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		public override YamlNodeType NodeType
		{
			[Token(Token = "0x600033E")]
			[Address(RVA = "0x2858A60", Offset = "0x2858A60", VA = "0x2858A60", Slot = "9")]
			get
			{
				return default(YamlNodeType);
			}
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x2858650", Offset = "0x2858650", VA = "0x2858650")]
		internal YamlAliasNode(string anchor)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x2858684", Offset = "0x2858684", VA = "0x2858684", Slot = "4")]
		internal override void ResolveAliases(DocumentLoadingState state)
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x28586F0", Offset = "0x28586F0", VA = "0x28586F0", Slot = "5")]
		internal override void Emit(IEmitter emitter, EmitterState state)
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x285875C", Offset = "0x285875C", VA = "0x285875C", Slot = "6")]
		public override void Accept(IYamlVisitor visitor)
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x28587C8", Offset = "0x28587C8", VA = "0x28587C8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x2858924", Offset = "0x2858924", VA = "0x2858924", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x2858954", Offset = "0x2858954", VA = "0x2858954", Slot = "7")]
		internal override string ToString(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x28589A8", Offset = "0x28589A8", VA = "0x28589A8", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5BCC", Offset = "0x12B5BCC")]
		internal override IEnumerable<YamlNode> SafeAllNodes(RecursionLevel level)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000080")]
	public class YamlDocument
	{
		[Token(Token = "0x2000391")]
		private class AnchorAssigningVisitor : YamlVisitorBase
		{
			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly HashSet<string> existingAnchors;

			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly Dictionary<YamlNode, bool> visitedNodes;

			[Token(Token = "0x600175F")]
			[Address(RVA = "0x28590C4", Offset = "0x28590C4", VA = "0x28590C4")]
			public void AssignAnchors(YamlDocument document)
			{
			}

			[Token(Token = "0x6001760")]
			[Address(RVA = "0x285976C", Offset = "0x285976C", VA = "0x285976C")]
			private bool VisitNodeAndFindDuplicates(YamlNode node)
			{
				return default(bool);
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0x2859840", Offset = "0x2859840", VA = "0x2859840", Slot = "11")]
			public override void Visit(YamlScalarNode scalar)
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0x2859844", Offset = "0x2859844", VA = "0x2859844", Slot = "13")]
			public override void Visit(YamlMappingNode mapping)
			{
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0x285989C", Offset = "0x285989C", VA = "0x285989C", Slot = "12")]
			public override void Visit(YamlSequenceNode sequence)
			{
			}

			[Token(Token = "0x6001764")]
			[Address(RVA = "0x285902C", Offset = "0x285902C", VA = "0x285902C")]
			public AnchorAssigningVisitor()
			{
			}
		}

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC268", Offset = "0x12AC268")]
		private YamlNode <RootNode>k__BackingField;

		[Token(Token = "0x1700003C")]
		public YamlNode RootNode
		{
			[Token(Token = "0x600033F")]
			[Address(RVA = "0x2858BC4", Offset = "0x2858BC4", VA = "0x2858BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5C30", Offset = "0x12B5C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000340")]
			[Address(RVA = "0x2858BCC", Offset = "0x2858BCC", VA = "0x2858BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5C40", Offset = "0x12B5C40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public IEnumerable<YamlNode> AllNodes
		{
			[Token(Token = "0x6000347")]
			[Address(RVA = "0x28596E4", Offset = "0x28596E4", VA = "0x28596E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x2858BD4", Offset = "0x2858BD4", VA = "0x2858BD4")]
		public YamlDocument(YamlNode rootNode)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x2858C00", Offset = "0x2858C00", VA = "0x2858C00")]
		public YamlDocument(string rootNode)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x2858CA8", Offset = "0x2858CA8", VA = "0x2858CA8")]
		internal YamlDocument(IParser parser)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x2858FC4", Offset = "0x2858FC4", VA = "0x2858FC4")]
		private void AssignAnchors()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x285934C", Offset = "0x285934C", VA = "0x285934C")]
		internal void Save(IEmitter emitter, bool assignAnchors = true)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x2859624", Offset = "0x2859624", VA = "0x2859624")]
		public void Accept(IYamlVisitor visitor)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000081")]
	public sealed class YamlMappingNode : YamlNode, IEnumerable<KeyValuePair<YamlNode, YamlNode>>, IEnumerable, IYamlConvertible
	{
		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABA8", Offset = "0x12AABA8")]
		private sealed class <SafeAllNodes>d__24 : IEnumerable<YamlNode>, IEnumerable, IEnumerator<YamlNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YamlNode <>2__current;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RecursionLevel level;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RecursionLevel <>3__level;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public YamlMappingNode <>4__this;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<KeyValuePair<YamlNode, YamlNode>> <>7__wrap1;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private KeyValuePair<YamlNode, YamlNode> <child>5__3;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<YamlNode> <>7__wrap3;

			[Token(Token = "0x1700028A")]
			private YamlNode System.Collections.Generic.IEnumerator<YamlDotNet.RepresentationModel.YamlNode>.Current
			{
				[Token(Token = "0x600176B")]
				[Address(RVA = "0x285D08C", Offset = "0x285D08C", VA = "0x285D08C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176D")]
				[Address(RVA = "0x285D0F4", Offset = "0x285D0F4", VA = "0x285D0F4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0x285BCA4", Offset = "0x285BCA4", VA = "0x285BCA4")]
			[DebuggerHidden]
			public <SafeAllNodes>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001766")]
			[Address(RVA = "0x285C748", Offset = "0x285C748", VA = "0x285C748", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0x285CA48", Offset = "0x285CA48", VA = "0x285CA48", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001768")]
			[Address(RVA = "0x285C988", Offset = "0x285C988", VA = "0x285C988")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0x285C808", Offset = "0x285C808", VA = "0x285C808")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0x285C8C8", Offset = "0x285C8C8", VA = "0x285C8C8")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x600176C")]
			[Address(RVA = "0x285D094", Offset = "0x285D094", VA = "0x285D094", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600176E")]
			[Address(RVA = "0x285D0FC", Offset = "0x285D0FC", VA = "0x285D0FC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<YamlNode> System.Collections.Generic.IEnumerable<YamlDotNet.RepresentationModel.YamlNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600176F")]
			[Address(RVA = "0x285D1B0", Offset = "0x285D1B0", VA = "0x285D1B0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IDictionary<YamlNode, YamlNode> children;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC278", Offset = "0x12AC278")]
		private MappingStyle <Style>k__BackingField;

		[Token(Token = "0x1700003E")]
		public IDictionary<YamlNode, YamlNode> Children
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0x28598FC", Offset = "0x28598FC", VA = "0x28598FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		public MappingStyle Style
		{
			[Token(Token = "0x6000349")]
			[Address(RVA = "0x2859904", Offset = "0x2859904", VA = "0x2859904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5C50", Offset = "0x12B5C50")]
			get
			{
				return default(MappingStyle);
			}
			[Token(Token = "0x600034A")]
			[Address(RVA = "0x285990C", Offset = "0x285990C", VA = "0x285990C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5C60", Offset = "0x12B5C60")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public override YamlNodeType NodeType
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x285BCDC", Offset = "0x285BCDC", VA = "0x285BCDC", Slot = "9")]
			get
			{
				return default(YamlNodeType);
			}
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x2859914", Offset = "0x2859914", VA = "0x2859914")]
		internal YamlMappingNode(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x28599A4", Offset = "0x28599A4", VA = "0x28599A4")]
		private void Load(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x2859CEC", Offset = "0x2859CEC", VA = "0x2859CEC")]
		public YamlMappingNode()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x2859D5C", Offset = "0x2859D5C", VA = "0x2859D5C")]
		public YamlMappingNode(int dummy)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x2859DCC", Offset = "0x2859DCC", VA = "0x2859DCC")]
		public YamlMappingNode(params KeyValuePair<YamlNode, YamlNode>[] children)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x2859DD0", Offset = "0x2859DD0", VA = "0x2859DD0")]
		public YamlMappingNode(IEnumerable<KeyValuePair<YamlNode, YamlNode>> children)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x285A0EC", Offset = "0x285A0EC", VA = "0x285A0EC")]
		public YamlMappingNode(params YamlNode[] children)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x285A0F0", Offset = "0x285A0F0", VA = "0x285A0F0")]
		public YamlMappingNode(IEnumerable<YamlNode> children)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x285A494", Offset = "0x285A494", VA = "0x285A494")]
		public void Add(YamlNode key, YamlNode value)
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x285A560", Offset = "0x285A560", VA = "0x285A560")]
		public void Add(string key, YamlNode value)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x285A64C", Offset = "0x285A64C", VA = "0x285A64C")]
		public void Add(YamlNode key, string value)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x285A738", Offset = "0x285A738", VA = "0x285A738")]
		public void Add(string key, string value)
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x285A844", Offset = "0x285A844", VA = "0x285A844", Slot = "4")]
		internal override void ResolveAliases(DocumentLoadingState state)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x285B024", Offset = "0x285B024", VA = "0x285B024", Slot = "5")]
		internal override void Emit(IEmitter emitter, EmitterState state)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x285B3E4", Offset = "0x285B3E4", VA = "0x285B3E4", Slot = "6")]
		public override void Accept(IYamlVisitor visitor)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x285B4A4", Offset = "0x285B4A4", VA = "0x285B4A4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x285B93C", Offset = "0x285B93C", VA = "0x285B93C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x285BC18", Offset = "0x285BC18", VA = "0x285BC18", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5C70", Offset = "0x12B5C70")]
		internal override IEnumerable<YamlNode> SafeAllNodes(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x285BCE4", Offset = "0x285BCE4", VA = "0x285BCE4", Slot = "7")]
		internal override string ToString(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x285C110", Offset = "0x285C110", VA = "0x285C110", Slot = "10")]
		public IEnumerator<KeyValuePair<YamlNode, YamlNode>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x285C1C0", Offset = "0x285C1C0", VA = "0x285C1C0", Slot = "11")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x285C1C4", Offset = "0x285C1C4", VA = "0x285C1C4", Slot = "12")]
		private void YamlDotNet.Serialization.IYamlConvertible.Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x285C234", Offset = "0x285C234", VA = "0x285C234", Slot = "13")]
		private void YamlDotNet.Serialization.IYamlConvertible.Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x285C2AC", Offset = "0x285C2AC", VA = "0x285C2AC")]
		public static YamlMappingNode FromObject(object mapping)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A94B8", Offset = "0x12A94B8")]
	public abstract class YamlNode
	{
		[Serializable]
		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABB8", Offset = "0x12AABB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, YamlNode> <>9__37_0;

			[Token(Token = "0x6001771")]
			[Address(RVA = "0x285D9F8", Offset = "0x285D9F8", VA = "0x285D9F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001772")]
			[Address(RVA = "0x285DA00", Offset = "0x285DA00", VA = "0x285DA00")]
			internal YamlNode <op_Implicit>b__37_0(string i)
			{
				return null;
			}
		}

		[Token(Token = "0x40000A7")]
		private const int MaximumRecursionLevel = 1000;

		[Token(Token = "0x40000A8")]
		internal const string MaximumRecursionLevelReachedToStringValue = "WARNING! INFINITE RECURSION!";

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC288", Offset = "0x12AC288")]
		private string <Anchor>k__BackingField;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC298", Offset = "0x12AC298")]
		private string <Tag>k__BackingField;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2A8", Offset = "0x12AC2A8")]
		private Mark <Start>k__BackingField;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2B8", Offset = "0x12AC2B8")]
		private Mark <End>k__BackingField;

		[Token(Token = "0x17000041")]
		public string Anchor
		{
			[Token(Token = "0x6000364")]
			[Address(RVA = "0x285D1B4", Offset = "0x285D1B4", VA = "0x285D1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5CD4", Offset = "0x12B5CD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000365")]
			[Address(RVA = "0x285D1BC", Offset = "0x285D1BC", VA = "0x285D1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5CE4", Offset = "0x12B5CE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public string Tag
		{
			[Token(Token = "0x6000366")]
			[Address(RVA = "0x285D1C4", Offset = "0x285D1C4", VA = "0x285D1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5CF4", Offset = "0x12B5CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000367")]
			[Address(RVA = "0x285D1CC", Offset = "0x285D1CC", VA = "0x285D1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D04", Offset = "0x12B5D04")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public Mark Start
		{
			[Token(Token = "0x6000368")]
			[Address(RVA = "0x285D1D4", Offset = "0x285D1D4", VA = "0x285D1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D14", Offset = "0x12B5D14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000369")]
			[Address(RVA = "0x285D1DC", Offset = "0x285D1DC", VA = "0x285D1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D24", Offset = "0x12B5D24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000044")]
		public Mark End
		{
			[Token(Token = "0x600036A")]
			[Address(RVA = "0x285D1E4", Offset = "0x285D1E4", VA = "0x285D1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D34", Offset = "0x12B5D34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600036B")]
			[Address(RVA = "0x285D1EC", Offset = "0x285D1EC", VA = "0x285D1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D44", Offset = "0x12B5D44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public IEnumerable<YamlNode> AllNodes
		{
			[Token(Token = "0x6000379")]
			[Address(RVA = "0x28596FC", Offset = "0x28596FC", VA = "0x28596FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		public abstract YamlNodeType NodeType
		{
			[Token(Token = "0x600037B")]
			get;
		}

		[Token(Token = "0x17000047")]
		public YamlNode Item
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x285D7CC", Offset = "0x285D7CC", VA = "0x285D7CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		public YamlNode Item
		{
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x285D8B0", Offset = "0x285D8B0", VA = "0x285D8B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x2859C90", Offset = "0x2859C90", VA = "0x2859C90")]
		internal void Load(NodeEvent yamlEvent, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x2858DF0", Offset = "0x2858DF0", VA = "0x2858DF0")]
		internal static YamlNode ParseNode(IParser parser, DocumentLoadingState state)
		{
			return null;
		}

		[Token(Token = "0x600036E")]
		internal abstract void ResolveAliases(DocumentLoadingState state);

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x28594E8", Offset = "0x28594E8", VA = "0x28594E8")]
		internal void Save(IEmitter emitter, EmitterState state)
		{
		}

		[Token(Token = "0x6000370")]
		internal abstract void Emit(IEmitter emitter, EmitterState state);

		[Token(Token = "0x6000371")]
		public abstract void Accept(IYamlVisitor visitor);

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x28588AC", Offset = "0x28588AC", VA = "0x28588AC")]
		protected bool Equals(YamlNode other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x28588F4", Offset = "0x28588F4", VA = "0x28588F4")]
		protected static bool SafeEquals(object first, object second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x285893C", Offset = "0x285893C", VA = "0x285893C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x285BBF8", Offset = "0x285BBF8", VA = "0x285BBF8")]
		protected static int GetHashCode(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x285BC0C", Offset = "0x285BC0C", VA = "0x285BC0C")]
		protected static int CombineHashCodes(int h1, int h2)
		{
			return default(int);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x285D2C4", Offset = "0x285D2C4", VA = "0x285D2C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000378")]
		internal abstract string ToString(RecursionLevel level);

		[Token(Token = "0x600037A")]
		internal abstract IEnumerable<YamlNode> SafeAllNodes(RecursionLevel level);

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x285C6E4", Offset = "0x285C6E4", VA = "0x285C6E4")]
		public static implicit operator YamlNode(string value)
		{
			return null;
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x285D334", Offset = "0x285D334", VA = "0x285D334")]
		public static implicit operator YamlNode(string[] sequence)
		{
			return null;
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x285D760", Offset = "0x285D760", VA = "0x285D760")]
		public static explicit operator string(YamlNode scalar)
		{
			return null;
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x285867C", Offset = "0x285867C", VA = "0x285867C")]
		protected YamlNode()
		{
		}
	}
	[Token(Token = "0x2000083")]
	public sealed class YamlNodeIdentityEqualityComparer : IEqualityComparer<YamlNode>
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x285DA08", Offset = "0x285DA08", VA = "0x285DA08", Slot = "4")]
		public bool Equals(YamlNode x, YamlNode y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x285DA14", Offset = "0x285DA14", VA = "0x285DA14", Slot = "5")]
		public int GetHashCode(YamlNode obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x285DA34", Offset = "0x285DA34", VA = "0x285DA34")]
		public YamlNodeIdentityEqualityComparer()
		{
		}
	}
	[Token(Token = "0x2000084")]
	public enum YamlNodeType
	{
		[Token(Token = "0x40000AE")]
		Alias,
		[Token(Token = "0x40000AF")]
		Mapping,
		[Token(Token = "0x40000B0")]
		Scalar,
		[Token(Token = "0x40000B1")]
		Sequence
	}
	[Serializable]
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x12A94F0", Offset = "0x12A94F0")]
	public sealed class YamlScalarNode : YamlNode, IYamlConvertible
	{
		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABC8", Offset = "0x12AABC8")]
		private sealed class <SafeAllNodes>d__19 : IEnumerable<YamlNode>, IEnumerable, IEnumerator<YamlNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YamlNode <>2__current;

			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YamlScalarNode <>4__this;

			[Token(Token = "0x1700028C")]
			private YamlNode System.Collections.Generic.IEnumerator<YamlDotNet.RepresentationModel.YamlNode>.Current
			{
				[Token(Token = "0x6001776")]
				[Address(RVA = "0x285E048", Offset = "0x285E048", VA = "0x285E048", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001778")]
				[Address(RVA = "0x285E0B0", Offset = "0x285E0B0", VA = "0x285E0B0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001773")]
			[Address(RVA = "0x285DEE4", Offset = "0x285DEE4", VA = "0x285DEE4")]
			[DebuggerHidden]
			public <SafeAllNodes>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001774")]
			[Address(RVA = "0x285E00C", Offset = "0x285E00C", VA = "0x285E00C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001775")]
			[Address(RVA = "0x285E010", Offset = "0x285E010", VA = "0x285E010", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001777")]
			[Address(RVA = "0x285E050", Offset = "0x285E050", VA = "0x285E050", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001779")]
			[Address(RVA = "0x285E0B8", Offset = "0x285E0B8", VA = "0x285E0B8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<YamlNode> System.Collections.Generic.IEnumerable<YamlDotNet.RepresentationModel.YamlNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600177A")]
			[Address(RVA = "0x285E164", Offset = "0x285E164", VA = "0x285E164", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2C8", Offset = "0x12AC2C8")]
		private string <Value>k__BackingField;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2D8", Offset = "0x12AC2D8")]
		private ScalarStyle <Style>k__BackingField;

		[Token(Token = "0x17000049")]
		public string Value
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x285DA3C", Offset = "0x285DA3C", VA = "0x285DA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D54", Offset = "0x12B5D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x285DA44", Offset = "0x285DA44", VA = "0x285DA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D64", Offset = "0x12B5D64")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public ScalarStyle Style
		{
			[Token(Token = "0x6000387")]
			[Address(RVA = "0x285DA4C", Offset = "0x285DA4C", VA = "0x285DA4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D74", Offset = "0x12B5D74")]
			get
			{
				return default(ScalarStyle);
			}
			[Token(Token = "0x6000388")]
			[Address(RVA = "0x285DA54", Offset = "0x285DA54", VA = "0x285DA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5D84", Offset = "0x12B5D84")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public override YamlNodeType NodeType
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x285DF1C", Offset = "0x285DF1C", VA = "0x285DF1C", Slot = "9")]
			get
			{
				return default(YamlNodeType);
			}
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x285D1F4", Offset = "0x285D1F4", VA = "0x285D1F4")]
		internal YamlScalarNode(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x285DA5C", Offset = "0x285DA5C", VA = "0x285DA5C")]
		private void Load(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x285DAEC", Offset = "0x285DAEC", VA = "0x285DAEC")]
		public YamlScalarNode()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x2858C7C", Offset = "0x2858C7C", VA = "0x2858C7C")]
		public YamlScalarNode(string value)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x285DAF4", Offset = "0x285DAF4", VA = "0x285DAF4", Slot = "4")]
		internal override void ResolveAliases(DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x285DB60", Offset = "0x285DB60", VA = "0x285DB60", Slot = "5")]
		internal override void Emit(IEmitter emitter, EmitterState state)
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x285DC68", Offset = "0x285DC68", VA = "0x285DC68", Slot = "6")]
		public override void Accept(IYamlVisitor visitor)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x285DD28", Offset = "0x285DD28", VA = "0x285DD28", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x285DDF0", Offset = "0x285DDF0", VA = "0x285DDF0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x285DE44", Offset = "0x285DE44", VA = "0x285DE44")]
		public static explicit operator string(YamlScalarNode value)
		{
			return null;
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x285DE5C", Offset = "0x285DE5C", VA = "0x285DE5C", Slot = "7")]
		internal override string ToString(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x285DE64", Offset = "0x285DE64", VA = "0x285DE64", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5D94", Offset = "0x12B5D94")]
		internal override IEnumerable<YamlNode> SafeAllNodes(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x285DF24", Offset = "0x285DF24", VA = "0x285DF24", Slot = "10")]
		private void YamlDotNet.Serialization.IYamlConvertible.Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x285DF94", Offset = "0x285DF94", VA = "0x285DF94", Slot = "11")]
		private void YamlDotNet.Serialization.IYamlConvertible.Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x12A9528", Offset = "0x12A9528")]
	public sealed class YamlSequenceNode : YamlNode, IEnumerable<YamlNode>, IEnumerable, IYamlConvertible
	{
		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABD8", Offset = "0x12AABD8")]
		private sealed class <SafeAllNodes>d__19 : IEnumerable<YamlNode>, IEnumerable, IEnumerator<YamlNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YamlNode <>2__current;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RecursionLevel level;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RecursionLevel <>3__level;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public YamlSequenceNode <>4__this;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<YamlNode> <>7__wrap1;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<YamlNode> <>7__wrap2;

			[Token(Token = "0x1700028E")]
			private YamlNode System.Collections.Generic.IEnumerator<YamlDotNet.RepresentationModel.YamlNode>.Current
			{
				[Token(Token = "0x6001780")]
				[Address(RVA = "0x285FF28", Offset = "0x285FF28", VA = "0x285FF28", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001782")]
				[Address(RVA = "0x285FF90", Offset = "0x285FF90", VA = "0x285FF90", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600177B")]
			[Address(RVA = "0x285F368", Offset = "0x285F368", VA = "0x285F368")]
			[DebuggerHidden]
			public <SafeAllNodes>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600177C")]
			[Address(RVA = "0x285F8AC", Offset = "0x285F8AC", VA = "0x285F8AC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600177D")]
			[Address(RVA = "0x285FABC", Offset = "0x285FABC", VA = "0x285FABC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600177E")]
			[Address(RVA = "0x285F9FC", Offset = "0x285F9FC", VA = "0x285F9FC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600177F")]
			[Address(RVA = "0x285F93C", Offset = "0x285F93C", VA = "0x285F93C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001781")]
			[Address(RVA = "0x285FF30", Offset = "0x285FF30", VA = "0x285FF30", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001783")]
			[Address(RVA = "0x285FF98", Offset = "0x285FF98", VA = "0x285FF98", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<YamlNode> System.Collections.Generic.IEnumerable<YamlDotNet.RepresentationModel.YamlNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001784")]
			[Address(RVA = "0x286004C", Offset = "0x286004C", VA = "0x286004C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IList<YamlNode> children;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2E8", Offset = "0x12AC2E8")]
		private SequenceStyle <Style>k__BackingField;

		[Token(Token = "0x1700004C")]
		public IList<YamlNode> Children
		{
			[Token(Token = "0x6000398")]
			[Address(RVA = "0x285E168", Offset = "0x285E168", VA = "0x285E168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		public SequenceStyle Style
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0x285E170", Offset = "0x285E170", VA = "0x285E170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5DF8", Offset = "0x12B5DF8")]
			get
			{
				return default(SequenceStyle);
			}
			[Token(Token = "0x600039A")]
			[Address(RVA = "0x285E178", Offset = "0x285E178", VA = "0x285E178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B5E08", Offset = "0x12B5E08")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public override YamlNodeType NodeType
		{
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0x285F3A0", Offset = "0x285F3A0", VA = "0x285F3A0", Slot = "9")]
			get
			{
				return default(YamlNodeType);
			}
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x285D234", Offset = "0x285D234", VA = "0x285D234")]
		internal YamlSequenceNode(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x285E180", Offset = "0x285E180", VA = "0x285E180")]
		private void Load(IParser parser, DocumentLoadingState state)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x285E344", Offset = "0x285E344", VA = "0x285E344")]
		public YamlSequenceNode()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x285E3B4", Offset = "0x285E3B4", VA = "0x285E3B4")]
		public YamlSequenceNode(params YamlNode[] children)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x285D44C", Offset = "0x285D44C", VA = "0x285D44C")]
		public YamlSequenceNode(IEnumerable<YamlNode> children)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x285E3B8", Offset = "0x285E3B8", VA = "0x285E3B8")]
		public void Add(YamlNode child)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x285E47C", Offset = "0x285E47C", VA = "0x285E47C")]
		public void Add(string child)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x285E560", Offset = "0x285E560", VA = "0x285E560", Slot = "4")]
		internal override void ResolveAliases(DocumentLoadingState state)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x285E8E0", Offset = "0x285E8E0", VA = "0x285E8E0", Slot = "5")]
		internal override void Emit(IEmitter emitter, EmitterState state)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x285EC7C", Offset = "0x285EC7C", VA = "0x285EC7C", Slot = "6")]
		public override void Accept(IYamlVisitor visitor)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x285ED3C", Offset = "0x285ED3C", VA = "0x285ED3C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x285F054", Offset = "0x285F054", VA = "0x285F054", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x285F2DC", Offset = "0x285F2DC", VA = "0x285F2DC", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B5E18", Offset = "0x12B5E18")]
		internal override IEnumerable<YamlNode> SafeAllNodes(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x285F3A8", Offset = "0x285F3A8", VA = "0x285F3A8", Slot = "7")]
		internal override string ToString(RecursionLevel level)
		{
			return null;
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x285F710", Offset = "0x285F710", VA = "0x285F710", Slot = "10")]
		public IEnumerator<YamlNode> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x285F7C0", Offset = "0x285F7C0", VA = "0x285F7C0", Slot = "11")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x285F7C4", Offset = "0x285F7C4", VA = "0x285F7C4", Slot = "12")]
		private void YamlDotNet.Serialization.IYamlConvertible.Read(IParser parser, Type expectedType, ObjectDeserializer nestedObjectDeserializer)
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x285F834", Offset = "0x285F834", VA = "0x285F834", Slot = "13")]
		private void YamlDotNet.Serialization.IYamlConvertible.Write(IEmitter emitter, ObjectSerializer nestedObjectSerializer)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000087")]
	public class YamlStream : IEnumerable<YamlDocument>, IEnumerable
	{
		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IList<YamlDocument> documents;

		[Token(Token = "0x1700004F")]
		public IList<YamlDocument> Documents
		{
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x2860050", Offset = "0x2860050", VA = "0x2860050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x2860058", Offset = "0x2860058", VA = "0x2860058")]
		public YamlStream()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x28600C8", Offset = "0x28600C8", VA = "0x28600C8")]
		public YamlStream(params YamlDocument[] documents)
		{
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x28600CC", Offset = "0x28600CC", VA = "0x28600CC")]
		public YamlStream(IEnumerable<YamlDocument> documents)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x28603E0", Offset = "0x28603E0", VA = "0x28603E0")]
		public void Add(YamlDocument document)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x28604A4", Offset = "0x28604A4", VA = "0x28604A4")]
		public void Load(TextReader input)
		{
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x2860518", Offset = "0x2860518", VA = "0x2860518")]
		public void Load(IParser parser)
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x28606C4", Offset = "0x28606C4", VA = "0x28606C4")]
		public void Save(TextWriter output)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x28606CC", Offset = "0x28606CC", VA = "0x28606CC")]
		public void Save(TextWriter output, bool assignAnchors)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x2860A6C", Offset = "0x2860A6C", VA = "0x2860A6C")]
		public void Accept(IYamlVisitor visitor)
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x2860B28", Offset = "0x2860B28", VA = "0x2860B28", Slot = "4")]
		public IEnumerator<YamlDocument> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x2860BD8", Offset = "0x2860BD8", VA = "0x2860BD8", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12A9560", Offset = "0x12A9560")]
	public abstract class YamlVisitor : IYamlVisitor
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x2860BDC", Offset = "0x2860BDC", VA = "0x2860BDC", Slot = "9")]
		protected virtual void Visit(YamlStream stream)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x2860BE0", Offset = "0x2860BE0", VA = "0x2860BE0", Slot = "10")]
		protected virtual void Visited(YamlStream stream)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x2860BE4", Offset = "0x2860BE4", VA = "0x2860BE4", Slot = "11")]
		protected virtual void Visit(YamlDocument document)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x2860BE8", Offset = "0x2860BE8", VA = "0x2860BE8", Slot = "12")]
		protected virtual void Visited(YamlDocument document)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x2860BEC", Offset = "0x2860BEC", VA = "0x2860BEC", Slot = "13")]
		protected virtual void Visit(YamlScalarNode scalar)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x2860BF0", Offset = "0x2860BF0", VA = "0x2860BF0", Slot = "14")]
		protected virtual void Visited(YamlScalarNode scalar)
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x2860BF4", Offset = "0x2860BF4", VA = "0x2860BF4", Slot = "15")]
		protected virtual void Visit(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x2860BF8", Offset = "0x2860BF8", VA = "0x2860BF8", Slot = "16")]
		protected virtual void Visited(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x2860BFC", Offset = "0x2860BFC", VA = "0x2860BFC", Slot = "17")]
		protected virtual void Visit(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x2860C00", Offset = "0x2860C00", VA = "0x2860C00", Slot = "18")]
		protected virtual void Visited(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x2860C04", Offset = "0x2860C04", VA = "0x2860C04", Slot = "19")]
		protected virtual void VisitChildren(YamlStream stream)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x2860E68", Offset = "0x2860E68", VA = "0x2860E68", Slot = "20")]
		protected virtual void VisitChildren(YamlDocument document)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x2860E98", Offset = "0x2860E98", VA = "0x2860E98", Slot = "21")]
		protected virtual void VisitChildren(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x2861104", Offset = "0x2861104", VA = "0x2861104", Slot = "22")]
		protected virtual void VisitChildren(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x28613A4", Offset = "0x28613A4", VA = "0x28613A4", Slot = "4")]
		private void YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlStream stream)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x28613F8", Offset = "0x28613F8", VA = "0x28613F8", Slot = "5")]
		private void YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDocument document)
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x286144C", Offset = "0x286144C", VA = "0x286144C", Slot = "6")]
		private void YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlScalarNode scalar)
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x2861490", Offset = "0x2861490", VA = "0x2861490", Slot = "7")]
		private void YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x28614EC", Offset = "0x28614EC", VA = "0x28614EC", Slot = "8")]
		private void YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x2861548", Offset = "0x2861548", VA = "0x2861548")]
		protected YamlVisitor()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public abstract class YamlVisitorBase : IYamlVisitor
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x2861550", Offset = "0x2861550", VA = "0x2861550", Slot = "9")]
		public virtual void Visit(YamlStream stream)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x2861560", Offset = "0x2861560", VA = "0x2861560", Slot = "10")]
		public virtual void Visit(YamlDocument document)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x2861570", Offset = "0x2861570", VA = "0x2861570", Slot = "11")]
		public virtual void Visit(YamlScalarNode scalar)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x28598E4", Offset = "0x28598E4", VA = "0x28598E4", Slot = "12")]
		public virtual void Visit(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x285988C", Offset = "0x285988C", VA = "0x285988C", Slot = "13")]
		public virtual void Visit(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x2861574", Offset = "0x2861574", VA = "0x2861574", Slot = "14")]
		protected virtual void VisitPair(YamlNode key, YamlNode value)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x28615C4", Offset = "0x28615C4", VA = "0x28615C4", Slot = "15")]
		protected virtual void VisitChildren(YamlStream stream)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x2861828", Offset = "0x2861828", VA = "0x2861828", Slot = "16")]
		protected virtual void VisitChildren(YamlDocument document)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x2861858", Offset = "0x2861858", VA = "0x2861858", Slot = "17")]
		protected virtual void VisitChildren(YamlSequenceNode sequence)
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x2861AC4", Offset = "0x2861AC4", VA = "0x2861AC4", Slot = "18")]
		protected virtual void VisitChildren(YamlMappingNode mapping)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x28598F4", Offset = "0x28598F4", VA = "0x28598F4")]
		protected YamlVisitorBase()
		{
		}
	}
}
namespace YamlDotNet.Helpers
{
	[Token(Token = "0x200008A")]
	public static class ExpressionExtensions
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x28560EC", Offset = "0x28560EC", VA = "0x28560EC")]
		public static PropertyInfo AsProperty(this LambdaExpression propertyAccessor)
		{
			return null;
		}

		[Token(Token = "0x60003DA")]
		private static TMemberInfo TryGetMemberExpression<TMemberInfo>(LambdaExpression lambdaExpression) where TMemberInfo : MemberInfo
		{
			return null;
		}
	}
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A95A8", Offset = "0x12A95A8")]
	internal sealed class GenericCollectionToNonGenericAdapter : IList, ICollection, IEnumerable
	{
		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object genericCollection;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MethodInfo addMethod;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MethodInfo indexerSetter;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MethodInfo countGetter;

		[Token(Token = "0x17000050")]
		public bool IsFixedSize
		{
			[Token(Token = "0x60003E1")]
			[Address(RVA = "0x28565C0", Offset = "0x28565C0", VA = "0x28565C0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0x2856620", Offset = "0x2856620", VA = "0x2856620", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public object Item
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x2856740", Offset = "0x2856740", VA = "0x2856740", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0x28567A0", Offset = "0x28567A0", VA = "0x28567A0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public int Count
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0x2856918", Offset = "0x2856918", VA = "0x2856918", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000054")]
		public bool IsSynchronized
		{
			[Token(Token = "0x60003E9")]
			[Address(RVA = "0x2856978", Offset = "0x2856978", VA = "0x2856978", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000055")]
		public object SyncRoot
		{
			[Token(Token = "0x60003EA")]
			[Address(RVA = "0x28569D8", Offset = "0x28569D8", VA = "0x28569D8", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x28561A0", Offset = "0x28561A0", VA = "0x28561A0")]
		public GenericCollectionToNonGenericAdapter(object genericCollection, Type genericCollectionType, Type genericListType)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x2856328", Offset = "0x2856328", VA = "0x2856328", Slot = "6")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x2856440", Offset = "0x2856440", VA = "0x2856440", Slot = "8")]
		public void Clear()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x28564A0", Offset = "0x28564A0", VA = "0x28564A0", Slot = "7")]
		public bool Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x2856500", Offset = "0x2856500", VA = "0x2856500", Slot = "11")]
		public int IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x2856560", Offset = "0x2856560", VA = "0x2856560", Slot = "12")]
		public void Insert(int index, object value)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x2856680", Offset = "0x2856680", VA = "0x2856680", Slot = "13")]
		public void Remove(object value)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x28566E0", Offset = "0x28566E0", VA = "0x28566E0", Slot = "14")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x28568B8", Offset = "0x28568B8", VA = "0x28568B8", Slot = "15")]
		public void CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x2856A38", Offset = "0x2856A38", VA = "0x2856A38", Slot = "19")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A95E0", Offset = "0x12A95E0")]
	internal sealed class GenericDictionaryToNonGenericAdapter : IDictionary, ICollection, IEnumerable
	{
		[Token(Token = "0x2000396")]
		private class DictionaryEnumerator : IDictionaryEnumerator, IEnumerator
		{
			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IEnumerator enumerator;

			[Token(Token = "0x4000BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly MethodInfo getKeyMethod;

			[Token(Token = "0x4000BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly MethodInfo getValueMethod;

			[Token(Token = "0x17000290")]
			public DictionaryEntry Entry
			{
				[Token(Token = "0x6001786")]
				[Address(RVA = "0x2857528", Offset = "0x2857528", VA = "0x2857528", Slot = "6")]
				get
				{
					return default(DictionaryEntry);
				}
			}

			[Token(Token = "0x17000291")]
			public object Key
			{
				[Token(Token = "0x6001787")]
				[Address(RVA = "0x2857578", Offset = "0x2857578", VA = "0x2857578", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			public object Value
			{
				[Token(Token = "0x6001788")]
				[Address(RVA = "0x2857648", Offset = "0x2857648", VA = "0x2857648", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000293")]
			public object Current
			{
				[Token(Token = "0x6001789")]
				[Address(RVA = "0x2857718", Offset = "0x2857718", VA = "0x2857718", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001785")]
			[Address(RVA = "0x2856D74", Offset = "0x2856D74", VA = "0x2856D74")]
			public DictionaryEnumerator(object genericDictionary, Type genericDictionaryType)
			{
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0x2857784", Offset = "0x2857784", VA = "0x2857784", Slot = "7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600178B")]
			[Address(RVA = "0x2857834", Offset = "0x2857834", VA = "0x2857834", Slot = "9")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object genericDictionary;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Type genericDictionaryType;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MethodInfo indexerSetter;

		[Token(Token = "0x17000056")]
		public bool IsFixedSize
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x2856F74", Offset = "0x2856F74", VA = "0x2856F74", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000057")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x2856FD4", Offset = "0x2856FD4", VA = "0x2856FD4", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public ICollection Keys
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x2857034", Offset = "0x2857034", VA = "0x2857034", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public ICollection Values
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x28570F4", Offset = "0x28570F4", VA = "0x28570F4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public object Item
		{
			[Token(Token = "0x60003F6")]
			[Address(RVA = "0x2857154", Offset = "0x2857154", VA = "0x2857154", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x28571B4", Offset = "0x28571B4", VA = "0x28571B4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public int Count
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0x285730C", Offset = "0x285730C", VA = "0x285730C", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005C")]
		public bool IsSynchronized
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0x285736C", Offset = "0x285736C", VA = "0x285736C", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005D")]
		public object SyncRoot
		{
			[Token(Token = "0x60003FB")]
			[Address(RVA = "0x28573CC", Offset = "0x28573CC", VA = "0x28573CC", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x2856B34", Offset = "0x2856B34", VA = "0x2856B34")]
		public GenericDictionaryToNonGenericAdapter(object genericDictionary, Type genericDictionaryType)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x2856BE4", Offset = "0x2856BE4", VA = "0x2856BE4", Slot = "9")]
		public void Add(object key, object value)
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x2856C44", Offset = "0x2856C44", VA = "0x2856C44", Slot = "10")]
		public void Clear()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x2856CA4", Offset = "0x2856CA4", VA = "0x2856CA4", Slot = "8")]
		public bool Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x2856D04", Offset = "0x2856D04", VA = "0x2856D04", Slot = "13")]
		public IDictionaryEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x2857094", Offset = "0x2857094", VA = "0x2857094", Slot = "14")]
		public void Remove(object key)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x28572AC", Offset = "0x28572AC", VA = "0x28572AC", Slot = "15")]
		public void CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x285742C", Offset = "0x285742C", VA = "0x285742C", Slot = "19")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace YamlDotNet.Samples
{
	[Token(Token = "0x200008D")]
	public class ConvertYamlToJson
	{
		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITestOutputHelper output;

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x2861D74", Offset = "0x2861D74", VA = "0x2861D74")]
		public ConvertYamlToJson(ITestOutputHelper output)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x2861DA0", Offset = "0x2861DA0", VA = "0x2861DA0")]
		[AttributeAttribute(Name = "SampleAttribute", RVA = "0x12B5E8C", Offset = "0x12B5E8C")]
		public void Main()
		{
		}
	}
	[Token(Token = "0x200008E")]
	public class DeserializeObjectGraph
	{
		[Token(Token = "0x2000397")]
		public class Order
		{
			[Token(Token = "0x4000BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18D8", Offset = "0x12B18D8")]
			private string <Receipt>k__BackingField;

			[Token(Token = "0x4000BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18E8", Offset = "0x12B18E8")]
			private DateTime <Date>k__BackingField;

			[Token(Token = "0x4000BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B18F8", Offset = "0x12B18F8")]
			private Customer <Customer>k__BackingField;

			[Token(Token = "0x4000BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1908", Offset = "0x12B1908")]
			private List<OrderItem> <Items>k__BackingField;

			[Token(Token = "0x4000BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1918", Offset = "0x12B1918")]
			private Address <BillTo>k__BackingField;

			[Token(Token = "0x4000BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1928", Offset = "0x12B1928")]
			private Address <ShipTo>k__BackingField;

			[Token(Token = "0x4000BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1938", Offset = "0x12B1938")]
			private string <SpecialDelivery>k__BackingField;

			[Token(Token = "0x17000294")]
			public string Receipt
			{
				[Token(Token = "0x600178C")]
				[Address(RVA = "0x2863E28", Offset = "0x2863E28", VA = "0x2863E28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCFDC", Offset = "0x12BCFDC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600178D")]
				[Address(RVA = "0x2863E30", Offset = "0x2863E30", VA = "0x2863E30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCFEC", Offset = "0x12BCFEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000295")]
			public DateTime Date
			{
				[Token(Token = "0x600178E")]
				[Address(RVA = "0x2863E38", Offset = "0x2863E38", VA = "0x2863E38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BCFFC", Offset = "0x12BCFFC")]
				get
				{
					return default(DateTime);
				}
				[Token(Token = "0x600178F")]
				[Address(RVA = "0x2863E40", Offset = "0x2863E40", VA = "0x2863E40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD00C", Offset = "0x12BD00C")]
				set
				{
				}
			}

			[Token(Token = "0x17000296")]
			public Customer Customer
			{
				[Token(Token = "0x6001790")]
				[Address(RVA = "0x2863E48", Offset = "0x2863E48", VA = "0x2863E48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD01C", Offset = "0x12BD01C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001791")]
				[Address(RVA = "0x2863E50", Offset = "0x2863E50", VA = "0x2863E50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD02C", Offset = "0x12BD02C")]
				set
				{
				}
			}

			[Token(Token = "0x17000297")]
			public List<OrderItem> Items
			{
				[Token(Token = "0x6001792")]
				[Address(RVA = "0x2863E58", Offset = "0x2863E58", VA = "0x2863E58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD03C", Offset = "0x12BD03C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001793")]
				[Address(RVA = "0x2863E60", Offset = "0x2863E60", VA = "0x2863E60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD04C", Offset = "0x12BD04C")]
				set
				{
				}
			}

			[Token(Token = "0x17000298")]
			[AttributeAttribute(Name = "YamlMemberAttribute", RVA = "0x12BF844", Offset = "0x12BF844")]
			public Address BillTo
			{
				[Token(Token = "0x6001794")]
				[Address(RVA = "0x2863E68", Offset = "0x2863E68", VA = "0x2863E68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD05C", Offset = "0x12BD05C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001795")]
				[Address(RVA = "0x2863E70", Offset = "0x2863E70", VA = "0x2863E70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD06C", Offset = "0x12BD06C")]
				set
				{
				}
			}

			[Token(Token = "0x17000299")]
			[AttributeAttribute(Name = "YamlMemberAttribute", RVA = "0x12BF884", Offset = "0x12BF884")]
			public Address ShipTo
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0x2863E78", Offset = "0x2863E78", VA = "0x2863E78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD07C", Offset = "0x12BD07C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001797")]
				[Address(RVA = "0x2863E80", Offset = "0x2863E80", VA = "0x2863E80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD08C", Offset = "0x12BD08C")]
				set
				{
				}
			}

			[Token(Token = "0x1700029A")]
			public string SpecialDelivery
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0x2863E88", Offset = "0x2863E88", VA = "0x2863E88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD09C", Offset = "0x12BD09C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001799")]
				[Address(RVA = "0x2863E90", Offset = "0x2863E90", VA = "0x2863E90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0AC", Offset = "0x12BD0AC")]
				set
				{
				}
			}

			[Token(Token = "0x600179A")]
			[Address(RVA = "0x2863E98", Offset = "0x2863E98", VA = "0x2863E98")]
			public Order()
			{
			}
		}

		[Token(Token = "0x2000398")]
		public class Customer
		{
			[Token(Token = "0x4000BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1948", Offset = "0x12B1948")]
			private string <Given>k__BackingField;

			[Token(Token = "0x4000BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1958", Offset = "0x12B1958")]
			private string <Family>k__BackingField;

			[Token(Token = "0x1700029B")]
			public string Given
			{
				[Token(Token = "0x600179B")]
				[Address(RVA = "0x2863E00", Offset = "0x2863E00", VA = "0x2863E00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0BC", Offset = "0x12BD0BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179C")]
				[Address(RVA = "0x2863E08", Offset = "0x2863E08", VA = "0x2863E08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0CC", Offset = "0x12BD0CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700029C")]
			public string Family
			{
				[Token(Token = "0x600179D")]
				[Address(RVA = "0x2863E10", Offset = "0x2863E10", VA = "0x2863E10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0DC", Offset = "0x12BD0DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179E")]
				[Address(RVA = "0x2863E18", Offset = "0x2863E18", VA = "0x2863E18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0EC", Offset = "0x12BD0EC")]
				set
				{
				}
			}

			[Token(Token = "0x600179F")]
			[Address(RVA = "0x2863E20", Offset = "0x2863E20", VA = "0x2863E20")]
			public Customer()
			{
			}
		}

		[Token(Token = "0x2000399")]
		public class OrderItem
		{
			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1968", Offset = "0x12B1968")]
			private string <PartNo>k__BackingField;

			[Token(Token = "0x4000BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1978", Offset = "0x12B1978")]
			private string <Descrip>k__BackingField;

			[Token(Token = "0x4000BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1988", Offset = "0x12B1988")]
			private decimal <Price>k__BackingField;

			[Token(Token = "0x4000BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1998", Offset = "0x12B1998")]
			private int <Quantity>k__BackingField;

			[Token(Token = "0x1700029D")]
			[AttributeAttribute(Name = "YamlMemberAttribute", RVA = "0x12BF8C4", Offset = "0x12BF8C4")]
			public string PartNo
			{
				[Token(Token = "0x60017A0")]
				[Address(RVA = "0x2863EA0", Offset = "0x2863EA0", VA = "0x2863EA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD0FC", Offset = "0x12BD0FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017A1")]
				[Address(RVA = "0x2863EA8", Offset = "0x2863EA8", VA = "0x2863EA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD10C", Offset = "0x12BD10C")]
				set
				{
				}
			}

			[Token(Token = "0x1700029E")]
			public string Descrip
			{
				[Token(Token = "0x60017A2")]
				[Address(RVA = "0x2863EB0", Offset = "0x2863EB0", VA = "0x2863EB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD11C", Offset = "0x12BD11C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017A3")]
				[Address(RVA = "0x2863EB8", Offset = "0x2863EB8", VA = "0x2863EB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD12C", Offset = "0x12BD12C")]
				set
				{
				}
			}

			[Token(Token = "0x1700029F")]
			public decimal Price
			{
				[Token(Token = "0x60017A4")]
				[Address(RVA = "0x2863EC0", Offset = "0x2863EC0", VA = "0x2863EC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD13C", Offset = "0x12BD13C")]
				get
				{
					return default(decimal);
				}
				[Token(Token = "0x60017A5")]
				[Address(RVA = "0x2863ECC", Offset = "0x2863ECC", VA = "0x2863ECC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD14C", Offset = "0x12BD14C")]
				set
				{
				}
			}

			[Token(Token = "0x170002A0")]
			public int Quantity
			{
				[Token(Token = "0x60017A6")]
				[Address(RVA = "0x2863ED4", Offset = "0x2863ED4", VA = "0x2863ED4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD15C", Offset = "0x12BD15C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60017A7")]
				[Address(RVA = "0x2863EDC", Offset = "0x2863EDC", VA = "0x2863EDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD16C", Offset = "0x12BD16C")]
				set
				{
				}
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x2863EE4", Offset = "0x2863EE4", VA = "0x2863EE4")]
			public OrderItem()
			{
			}
		}

		[Token(Token = "0x200039A")]
		public class Address
		{
			[Token(Token = "0x4000BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B19A8", Offset = "0x12B19A8")]
			private string <Street>k__BackingField;

			[Token(Token = "0x4000BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B19B8", Offset = "0x12B19B8")]
			private string <City>k__BackingField;

			[Token(Token = "0x4000BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B19C8", Offset = "0x12B19C8")]
			private string <State>k__BackingField;

			[Token(Token = "0x170002A1")]
			public string Street
			{
				[Token(Token = "0x60017A9")]
				[Address(RVA = "0x2863DC8", Offset = "0x2863DC8", VA = "0x2863DC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD17C", Offset = "0x12BD17C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017AA")]
				[Address(RVA = "0x2863DD0", Offset = "0x2863DD0", VA = "0x2863DD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD18C", Offset = "0x12BD18C")]
				set
				{
				}
			}

			[Token(Token = "0x170002A2")]
			public string City
			{
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0x2863DD8", Offset = "0x2863DD8", VA = "0x2863DD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD19C", Offset = "0x12BD19C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017AC")]
				[Address(RVA = "0x2863DE0", Offset = "0x2863DE0", VA = "0x2863DE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD1AC", Offset = "0x12BD1AC")]
				set
				{
				}
			}

			[Token(Token = "0x170002A3")]
			public string State
			{
				[Token(Token = "0x60017AD")]
				[Address(RVA = "0x2863DE8", Offset = "0x2863DE8", VA = "0x2863DE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD1BC", Offset = "0x12BD1BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60017AE")]
				[Address(RVA = "0x2863DF0", Offset = "0x2863DF0", VA = "0x2863DF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BD1CC", Offset = "0x12BD1CC")]
				set
				{
				}
			}

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x2863DF8", Offset = "0x2863DF8", VA = "0x2863DF8")]
			public Address()
			{
			}
		}

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITestOutputHelper output;

		[Token(Token = "0x40000C0")]
		private const string Document = "---\r\n            receipt:    Oz-Ware Purchase Invoice\r\n            date:        2007-08-06\r\n            customer:\r\n                given:   Dorothy\r\n                family:  Gale\r\n\r\n            items:\r\n                - part_no:   A4786\r\n                  descrip:   Water Bucket (Filled)\r\n                  price:     1.47\r\n                  quantity:  4\r\n\r\n                - part_no:   E1628\r\n                  descrip:   High Heeled \"Ruby\" Slippers\r\n                  price:     100.27\r\n                  quantity:  1\r\n\r\n            bill-to:  &id001\r\n                street: |-\r\n                        123 Tornado Alley\r\n                        Suite 16\r\n                city:   East Westville\r\n                state:  KS\r\n\r\n            ship-to:  *id001\r\n\r\n            specialDelivery: >\r\n                Follow the Yellow Brick\r\n                Road to the Emerald City.\r\n                Pay no attention to the\r\n                man behind the curtain.\r\n...";

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x2862E8C", Offset = "0x2862E8C", VA = "0x2862E8C")]
		public DeserializeObjectGraph(ITestOutputHelper output)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x2862EB8", Offset = "0x2862EB8", VA = "0x2862EB8")]
		[AttributeAttribute(Name = "SampleAttribute", RVA = "0x12B5EE4", Offset = "0x12B5EE4")]
		public void Main()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public class DeserializingMultipleDocuments
	{
		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITestOutputHelper output;

		[Token(Token = "0x40000C2")]
		private const string Document = "---\r\n- Prisoner\r\n- Goblet\r\n- Phoenix\r\n---\r\n- Memoirs\r\n- Snow \r\n- Ghost\t\t\r\n...";

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x2863EEC", Offset = "0x2863EEC", VA = "0x2863EEC")]
		public DeserializingMultipleDocuments(ITestOutputHelper output)
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x2863F18", Offset = "0x2863F18", VA = "0x2863F18")]
		[AttributeAttribute(Name = "SampleAttribute", RVA = "0x12B5F3C", Offset = "0x12B5F3C")]
		public void Main()
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class LoadingAYamlStream
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITestOutputHelper output;

		[Token(Token = "0x40000C4")]
		private const string Document = "---\r\n            receipt:    Oz-Ware Purchase Invoice\r\n            date:        2007-08-06\r\n            customer:\r\n                given:   Dorothy\r\n                family:  Gale\r\n\r\n            items:\r\n                - part_no:   A4786\r\n                  descrip:   Water Bucket (Filled)\r\n                  price:     1.47\r\n                  quantity:  4\r\n\r\n                - part_no:   E1628\r\n                  descrip:   High Heeled \"Ruby\" Slippers\r\n                  price:     100.27\r\n                  quantity:  1\r\n\r\n            bill-to:  &id001\r\n                street: |\r\n                        123 Tornado Alley\r\n                        Suite 16\r\n                city:   East Westville\r\n                state:  KS\r\n\r\n            ship-to:  *id001\r\n\r\n            specialDelivery:  >\r\n                Follow the Yellow Brick\r\n                Road to the Emerald City.\r\n                Pay no attention to the\r\n                man behind the curtain.\r\n...";

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x2864EF0", Offset = "0x2864EF0", VA = "0x2864EF0")]
		public LoadingAYamlStream(ITestOutputHelper output)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x2864F1C", Offset = "0x2864F1C", VA = "0x2864F1C")]
		[AttributeAttribute(Name = "SampleAttribute", RVA = "0x12B5F94", Offset = "0x12B5F94")]
		public void Main()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class SerializeObjectGraph
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ITestOutputHelper output;

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x2865904", Offset = "0x2865904", VA = "0x2865904")]
		public SerializeObjectGraph(ITestOutputHelper output)
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x2865930", Offset = "0x2865930", VA = "0x2865930")]
		[AttributeAttribute(Name = "SampleAttribute", RVA = "0x12B5FEC", Offset = "0x12B5FEC")]
		public void Main()
		{
		}
	}
	[Token(Token = "0x2000092")]
	public class Address
	{
		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC2F8", Offset = "0x12AC2F8")]
		private string <street>k__BackingField;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC308", Offset = "0x12AC308")]
		private string <city>k__BackingField;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC318", Offset = "0x12AC318")]
		private string <state>k__BackingField;

		[Token(Token = "0x1700005E")]
		public string street
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x2861D3C", Offset = "0x2861D3C", VA = "0x2861D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6044", Offset = "0x12B6044")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x2861D44", Offset = "0x2861D44", VA = "0x2861D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6054", Offset = "0x12B6054")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public string city
		{
			[Token(Token = "0x6000409")]
			[Address(RVA = "0x2861D4C", Offset = "0x2861D4C", VA = "0x2861D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6064", Offset = "0x12B6064")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x2861D54", Offset = "0x2861D54", VA = "0x2861D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6074", Offset = "0x12B6074")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public string state
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x2861D5C", Offset = "0x2861D5C", VA = "0x2861D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6084", Offset = "0x12B6084")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x2861D64", Offset = "0x2861D64", VA = "0x2861D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6094", Offset = "0x12B6094")]
			set
			{
			}
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x2861D6C", Offset = "0x2861D6C", VA = "0x2861D6C")]
		public Address()
		{
		}
	}
	[Token(Token = "0x2000093")]
	public class Receipt
	{
		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC328", Offset = "0x12AC328")]
		private string <receipt>k__BackingField;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC338", Offset = "0x12AC338")]
		private DateTime <date>k__BackingField;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC348", Offset = "0x12AC348")]
		private Customer <customer>k__BackingField;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC358", Offset = "0x12AC358")]
		private Item[] <items>k__BackingField;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC368", Offset = "0x12AC368")]
		private Address <bill_to>k__BackingField;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC378", Offset = "0x12AC378")]
		private Address <ship_to>k__BackingField;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC388", Offset = "0x12AC388")]
		private string <specialDelivery>k__BackingField;

		[Token(Token = "0x17000061")]
		public string receipt
		{
			[Token(Token = "0x600040E")]
			[Address(RVA = "0x286588C", Offset = "0x286588C", VA = "0x286588C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60A4", Offset = "0x12B60A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600040F")]
			[Address(RVA = "0x2865894", Offset = "0x2865894", VA = "0x2865894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60B4", Offset = "0x12B60B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public DateTime date
		{
			[Token(Token = "0x6000410")]
			[Address(RVA = "0x286589C", Offset = "0x286589C", VA = "0x286589C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60C4", Offset = "0x12B60C4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000411")]
			[Address(RVA = "0x28658A4", Offset = "0x28658A4", VA = "0x28658A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60D4", Offset = "0x12B60D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public Customer customer
		{
			[Token(Token = "0x6000412")]
			[Address(RVA = "0x28658AC", Offset = "0x28658AC", VA = "0x28658AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60E4", Offset = "0x12B60E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000413")]
			[Address(RVA = "0x28658B4", Offset = "0x28658B4", VA = "0x28658B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B60F4", Offset = "0x12B60F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public Item[] items
		{
			[Token(Token = "0x6000414")]
			[Address(RVA = "0x28658BC", Offset = "0x28658BC", VA = "0x28658BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6104", Offset = "0x12B6104")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000415")]
			[Address(RVA = "0x28658C4", Offset = "0x28658C4", VA = "0x28658C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6114", Offset = "0x12B6114")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public Address bill_to
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x28658CC", Offset = "0x28658CC", VA = "0x28658CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6124", Offset = "0x12B6124")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000417")]
			[Address(RVA = "0x28658D4", Offset = "0x28658D4", VA = "0x28658D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6134", Offset = "0x12B6134")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public Address ship_to
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x28658DC", Offset = "0x28658DC", VA = "0x28658DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6144", Offset = "0x12B6144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000419")]
			[Address(RVA = "0x28658E4", Offset = "0x28658E4", VA = "0x28658E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6154", Offset = "0x12B6154")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public string specialDelivery
		{
			[Token(Token = "0x600041A")]
			[Address(RVA = "0x28658EC", Offset = "0x28658EC", VA = "0x28658EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6164", Offset = "0x12B6164")]
			get
			{
				return null;
			}
			[Token(Token = "0x600041B")]
			[Address(RVA = "0x28658F4", Offset = "0x28658F4", VA = "0x28658F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6174", Offset = "0x12B6174")]
			set
			{
			}
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x28658FC", Offset = "0x28658FC", VA = "0x28658FC")]
		public Receipt()
		{
		}
	}
	[Token(Token = "0x2000094")]
	public class Customer
	{
		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC398", Offset = "0x12AC398")]
		private string <given>k__BackingField;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3A8", Offset = "0x12AC3A8")]
		private string <family>k__BackingField;

		[Token(Token = "0x17000068")]
		public string given
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0x2862E64", Offset = "0x2862E64", VA = "0x2862E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6184", Offset = "0x12B6184")]
			get
			{
				return null;
			}
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x2862E6C", Offset = "0x2862E6C", VA = "0x2862E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6194", Offset = "0x12B6194")]
			set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public string family
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x2862E74", Offset = "0x2862E74", VA = "0x2862E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61A4", Offset = "0x12B61A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x2862E7C", Offset = "0x2862E7C", VA = "0x2862E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61B4", Offset = "0x12B61B4")]
			set
			{
			}
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x2862E84", Offset = "0x2862E84", VA = "0x2862E84")]
		public Customer()
		{
		}
	}
	[Token(Token = "0x2000095")]
	public class Item
	{
		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3B8", Offset = "0x12AC3B8")]
		private string <part_no>k__BackingField;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3C8", Offset = "0x12AC3C8")]
		private string <descrip>k__BackingField;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3D8", Offset = "0x12AC3D8")]
		private decimal <price>k__BackingField;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3E8", Offset = "0x12AC3E8")]
		private int <quantity>k__BackingField;

		[Token(Token = "0x1700006A")]
		public string part_no
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x2864EA4", Offset = "0x2864EA4", VA = "0x2864EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61C4", Offset = "0x12B61C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x2864EAC", Offset = "0x2864EAC", VA = "0x2864EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61D4", Offset = "0x12B61D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public string descrip
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x2864EB4", Offset = "0x2864EB4", VA = "0x2864EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61E4", Offset = "0x12B61E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x2864EBC", Offset = "0x2864EBC", VA = "0x2864EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B61F4", Offset = "0x12B61F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public decimal price
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x2864EC4", Offset = "0x2864EC4", VA = "0x2864EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6204", Offset = "0x12B6204")]
			get
			{
				return default(decimal);
			}
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x2864ED0", Offset = "0x2864ED0", VA = "0x2864ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6214", Offset = "0x12B6214")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public int quantity
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x2864ED8", Offset = "0x2864ED8", VA = "0x2864ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6224", Offset = "0x12B6224")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x2864EE0", Offset = "0x2864EE0", VA = "0x2864EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6234", Offset = "0x12B6234")]
			set
			{
			}
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x2864EE8", Offset = "0x2864EE8", VA = "0x2864EE8")]
		public Item()
		{
		}
	}
}
namespace YamlDotNet.Samples.Helpers
{
	[Token(Token = "0x2000096")]
	public class ExampleRunner : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		private class StringTestOutputHelper : ITestOutputHelper
		{
			[Token(Token = "0x4000BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder output;

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x2864CE8", Offset = "0x2864CE8", VA = "0x2864CE8", Slot = "4")]
			public void WriteLine()
			{
			}

			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x2864D04", Offset = "0x2864D04", VA = "0x2864D04", Slot = "5")]
			public void WriteLine(string value)
			{
			}

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x2864B68", Offset = "0x2864B68", VA = "0x2864B68", Slot = "6")]
			public void WriteLine(string format, params object[] args)
			{
			}

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x2864D20", Offset = "0x2864D20", VA = "0x2864D20", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x2864BA4", Offset = "0x2864BA4", VA = "0x2864BA4")]
			public void Clear()
			{
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x2864C80", Offset = "0x2864C80", VA = "0x2864C80")]
			public StringTestOutputHelper()
			{
			}
		}

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StringTestOutputHelper helper;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] disabledTests;

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x2864220", Offset = "0x2864220", VA = "0x2864220")]
		public static string[] GetAllTestNames()
		{
			return null;
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x2864490", Offset = "0x2864490", VA = "0x2864490")]
		public static string[] GetAllTestTitles()
		{
			return null;
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x28646F4", Offset = "0x28646F4", VA = "0x28646F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x2864C04", Offset = "0x2864C04", VA = "0x2864C04")]
		public ExampleRunner()
		{
		}
	}
	[Token(Token = "0x2000097")]
	internal class SampleAttribute : Attribute
	{
		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string title;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC3F8", Offset = "0x12AC3F8")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC408", Offset = "0x12AC408")]
		private string <Description>k__BackingField;

		[Token(Token = "0x1700006E")]
		public string DisplayName
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x2864D40", Offset = "0x2864D40", VA = "0x2864D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6244", Offset = "0x12B6244")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000430")]
			[Address(RVA = "0x2864D48", Offset = "0x2864D48", VA = "0x2864D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6254", Offset = "0x12B6254")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public string Title
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x2864D50", Offset = "0x2864D50", VA = "0x2864D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x2864D58", Offset = "0x2864D58", VA = "0x2864D58")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public string Description
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x2864DC4", Offset = "0x2864DC4", VA = "0x2864DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6264", Offset = "0x12B6264")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x2864DCC", Offset = "0x2864DCC", VA = "0x2864DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6274", Offset = "0x12B6274")]
			set
			{
			}
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x2864DD4", Offset = "0x2864DD4", VA = "0x2864DD4")]
		public SampleAttribute()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public static class TestOutputHelperExtensions
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x2864DDC", Offset = "0x2864DDC", VA = "0x2864DDC")]
		public static void WriteLine(this ITestOutputHelper output)
		{
		}
	}
	[Token(Token = "0x2000099")]
	public interface ITestOutputHelper
	{
		[Token(Token = "0x6000437")]
		void WriteLine();

		[Token(Token = "0x6000438")]
		void WriteLine(string value);

		[Token(Token = "0x6000439")]
		void WriteLine(string format, params object[] args);
	}
}
namespace YamlDotNet.Core
{
	[Serializable]
	[Token(Token = "0x200009A")]
	public class AnchorNotFoundException : YamlException
	{
		[Token(Token = "0x600043A")]
		[Address(RVA = "0x18C5F78", Offset = "0x18C5F78", VA = "0x18C5F78")]
		public AnchorNotFoundException()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x18C5F80", Offset = "0x18C5F80", VA = "0x18C5F80")]
		public AnchorNotFoundException(string message)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x18C5F88", Offset = "0x18C5F88", VA = "0x18C5F88")]
		public AnchorNotFoundException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x18C5F90", Offset = "0x18C5F90", VA = "0x18C5F90")]
		public AnchorNotFoundException(string message, Exception inner)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009B")]
	internal class CharacterAnalyzer<TBuffer> where TBuffer : ILookAheadBuffer
	{
		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TBuffer buffer;

		[Token(Token = "0x17000071")]
		public TBuffer Buffer
		{
			[Token(Token = "0x600043F")]
			get
			{
				return (TBuffer)null;
			}
		}

		[Token(Token = "0x17000072")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600043E")]
		public CharacterAnalyzer(TBuffer buffer)
		{
		}

		[Token(Token = "0x6000441")]
		public char Peek(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x6000442")]
		public void Skip(int length)
		{
		}

		[Token(Token = "0x6000443")]
		public bool IsAlphaNumericDashOrUnderscore(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000444")]
		public bool IsAscii(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000445")]
		public bool IsPrintable(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000446")]
		public bool IsDigit(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000447")]
		public int AsDigit(int offset = 0)
		{
			return default(int);
		}

		[Token(Token = "0x6000448")]
		public bool IsHex(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x6000449")]
		public int AsHex(int offset)
		{
			return default(int);
		}

		[Token(Token = "0x600044A")]
		public bool IsSpace(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		public bool IsZero(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600044C")]
		public bool IsTab(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600044D")]
		public bool IsWhite(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		public bool IsBreak(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600044F")]
		public bool IsCrLf(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000450")]
		public bool IsBreakOrZero(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000451")]
		public bool IsWhiteBreakOrZero(int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000452")]
		public bool Check(char expected, int offset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000453")]
		public bool Check(string expectedCharacters, int offset = 0)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009C")]
	internal static class Constants
	{
		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TagDirective[] DefaultTagDirectives;

		[Token(Token = "0x40000DD")]
		public const int MajorVersion = 1;

		[Token(Token = "0x40000DE")]
		public const int MinorVersion = 1;

		[Token(Token = "0x40000DF")]
		public const char HandleCharacter = '!';

		[Token(Token = "0x40000E0")]
		public const string DefaultHandle = "!";
	}
	[Serializable]
	[Token(Token = "0x200009D")]
	internal class Cursor
	{
		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC418", Offset = "0x12AC418")]
		private int <Index>k__BackingField;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC428", Offset = "0x12AC428")]
		private int <Line>k__BackingField;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC438", Offset = "0x12AC438")]
		private int <LineOffset>k__BackingField;

		[Token(Token = "0x17000073")]
		public int Index
		{
			[Token(Token = "0x6000455")]
			[Address(RVA = "0x18C60D0", Offset = "0x18C60D0", VA = "0x18C60D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6294", Offset = "0x12B6294")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x18C60D8", Offset = "0x18C60D8", VA = "0x18C60D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62A4", Offset = "0x12B62A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public int Line
		{
			[Token(Token = "0x6000457")]
			[Address(RVA = "0x18C60E0", Offset = "0x18C60E0", VA = "0x18C60E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62B4", Offset = "0x12B62B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000458")]
			[Address(RVA = "0x18C60E8", Offset = "0x18C60E8", VA = "0x18C60E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62C4", Offset = "0x12B62C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public int LineOffset
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0x18C60F0", Offset = "0x18C60F0", VA = "0x18C60F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62D4", Offset = "0x12B62D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x18C60F8", Offset = "0x18C60F8", VA = "0x18C60F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62E4", Offset = "0x12B62E4")]
			set
			{
			}
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x18C6100", Offset = "0x18C6100", VA = "0x18C6100")]
		public Cursor()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x18C612C", Offset = "0x18C612C", VA = "0x18C612C")]
		public Cursor(Cursor cursor)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x18C6174", Offset = "0x18C6174", VA = "0x18C6174")]
		public Mark Mark()
		{
			return null;
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x18C6300", Offset = "0x18C6300", VA = "0x18C6300")]
		public void Skip()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x18C631C", Offset = "0x18C631C", VA = "0x18C631C")]
		public void SkipLineByOffset(int offset)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x18C6334", Offset = "0x18C6334", VA = "0x18C6334")]
		public void ForceSkipLineAfterNonBreak()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class Emitter : IEmitter
	{
		[Token(Token = "0x200039C")]
		private class AnchorData
		{
			[Token(Token = "0x4000BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string anchor;

			[Token(Token = "0x4000BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isAlias;

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x18C6640", Offset = "0x18C6640", VA = "0x18C6640")]
			public AnchorData()
			{
			}
		}

		[Token(Token = "0x200039D")]
		private class TagData
		{
			[Token(Token = "0x4000BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string handle;

			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string suffix;

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x18C6648", Offset = "0x18C6648", VA = "0x18C6648")]
			public TagData()
			{
			}
		}

		[Token(Token = "0x200039E")]
		private class ScalarData
		{
			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string value;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isMultiline;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool isFlowPlainAllowed;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool isBlockPlainAllowed;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool isSingleQuotedAllowed;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isBlockAllowed;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool hasSingleQuotes;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScalarStyle style;

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x18C6650", Offset = "0x18C6650", VA = "0x18C6650")]
			public ScalarData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABE8", Offset = "0x12AABE8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__89_0;

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x18CB960", Offset = "0x18CB960", VA = "0x18CB960")]
			public <>c()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x18CB968", Offset = "0x18CB968", VA = "0x18CB968")]
			internal string <UrlEncode>b__89_0(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x40000E4")]
		private const int MinBestIndent = 2;

		[Token(Token = "0x40000E5")]
		private const int MaxBestIndent = 9;

		[Token(Token = "0x40000E6")]
		private const int MaxAliasLength = 128;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex uriReplacer;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TextWriter output;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool outputUsesUnicodeEncoding;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private readonly bool isCanonical;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int bestIndent;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int bestWidth;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private EmitterState state;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Stack<EmitterState> states;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Queue<ParsingEvent> events;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Stack<int> indents;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly TagDirectiveCollection tagDirectives;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int indent;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int flowLevel;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isMappingContext;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isSimpleKeyContext;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isRootContext;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int column;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isWhitespace;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isIndentation;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isOpenEnded;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool isDocumentEndWritten;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly AnchorData anchorData;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly TagData tagData;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ScalarData scalarData;

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x18C634C", Offset = "0x18C634C", VA = "0x18C634C")]
		public Emitter(TextWriter output)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x18C635C", Offset = "0x18C635C", VA = "0x18C635C")]
		public Emitter(TextWriter output, int bestIndent)
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x18C6368", Offset = "0x18C6368", VA = "0x18C6368")]
		public Emitter(TextWriter output, int bestIndent, int bestWidth)
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x18C6370", Offset = "0x18C6370", VA = "0x18C6370")]
		public Emitter(TextWriter output, int bestIndent, int bestWidth, bool isCanonical)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x18C6760", Offset = "0x18C6760", VA = "0x18C6760", Slot = "4")]
		public void Emit(ParsingEvent @event)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x18C6C94", Offset = "0x18C6C94", VA = "0x18C6C94")]
		private bool NeedMoreEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x18C688C", Offset = "0x18C688C", VA = "0x18C688C")]
		private void AnalyzeEvent(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x18C6E74", Offset = "0x18C6E74", VA = "0x18C6E74")]
		private void AnalyzeAnchor(string anchor, bool isAlias)
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x18C6EA4", Offset = "0x18C6EA4", VA = "0x18C6EA4")]
		private void AnalyzeScalar(YamlDotNet.Core.Events.Scalar scalar)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x18C77CC", Offset = "0x18C77CC", VA = "0x18C77CC")]
		private bool ValueIsRepresentableInOutputEncoding(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x18C6658", Offset = "0x18C6658", VA = "0x18C6658")]
		private bool IsUnicode(Encoding encoding)
		{
			return default(bool);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x18C7530", Offset = "0x18C7530", VA = "0x18C7530")]
		private void AnalyzeTag(string tag)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x18C6A10", Offset = "0x18C6A10", VA = "0x18C6A10")]
		private void StateMachine(ParsingEvent evt)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x18C7970", Offset = "0x18C7970", VA = "0x18C7970")]
		private void EmitComment(YamlDotNet.Core.Events.Comment comment)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x18C7A28", Offset = "0x18C7A28", VA = "0x18C7A28")]
		private void EmitStreamStart(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x18C7B10", Offset = "0x18C7B10", VA = "0x18C7B10")]
		private void EmitDocumentStart(ParsingEvent evt, bool isFirst)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x18C8FF8", Offset = "0x18C8FF8", VA = "0x18C8FF8")]
		private TagDirectiveCollection NonDefaultTagsAmong(IEnumerable<TagDirective> tagCollection)
		{
			return null;
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x18C9398", Offset = "0x18C9398", VA = "0x18C9398")]
		private void AnalyzeVersionDirective(VersionDirective versionDirective)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x18C943C", Offset = "0x18C943C", VA = "0x18C943C")]
		private static void AppendTagDirectiveTo(TagDirective value, bool allowDuplicates, TagDirectiveCollection tagDirectives)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x18C83A0", Offset = "0x18C83A0", VA = "0x18C83A0")]
		private void EmitDocumentContent(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x18C970C", Offset = "0x18C970C", VA = "0x18C970C")]
		private void EmitNode(ParsingEvent evt, bool isRoot, bool isMapping, bool isSimpleKey)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x18C98B4", Offset = "0x18C98B4", VA = "0x18C98B4")]
		private void EmitAlias()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x18C991C", Offset = "0x18C991C", VA = "0x18C991C")]
		private void EmitScalar(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x18C9C44", Offset = "0x18C9C44", VA = "0x18C9C44")]
		private void SelectScalarStyle(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x18CA004", Offset = "0x18CA004", VA = "0x18CA004")]
		private void ProcessScalar()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x18CA120", Offset = "0x18CA120", VA = "0x18CA120")]
		private void WritePlainScalar(string value, bool allowBreaks)
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x18CA350", Offset = "0x18CA350", VA = "0x18CA350")]
		private void WriteSingleQuotedScalar(string value, bool allowBreaks)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x18CA588", Offset = "0x18CA588", VA = "0x18CA588")]
		private void WriteDoubleQuotedScalar(string value, bool allowBreaks)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x18CAB38", Offset = "0x18CAB38", VA = "0x18CAB38")]
		private void WriteLiteralScalar(string value)
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x18CACF0", Offset = "0x18CACF0", VA = "0x18CACF0")]
		private void WriteFoldedScalar(string value)
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x18CB074", Offset = "0x18CB074", VA = "0x18CB074")]
		private static bool IsSpace(char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x18CB084", Offset = "0x18CB084", VA = "0x18CB084")]
		private static bool IsBreak(char character, out char breakChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x18CB358", Offset = "0x18CB358", VA = "0x18CB358")]
		private static bool IsBlank(char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x18CB0EC", Offset = "0x18CB0EC", VA = "0x18CB0EC")]
		private static bool IsPrintable(char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x18CB154", Offset = "0x18CB154", VA = "0x18CB154")]
		private static bool IsHighSurrogate(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x18CB164", Offset = "0x18CB164", VA = "0x18CB164")]
		private static bool IsLowSurrogate(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x18C99DC", Offset = "0x18C99DC", VA = "0x18C99DC")]
		private void EmitSequenceStart(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x18C9AC0", Offset = "0x18C9AC0", VA = "0x18C9AC0")]
		private void EmitMappingStart(ParsingEvent evt)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x18C9BA4", Offset = "0x18C9BA4", VA = "0x18C9BA4")]
		private void ProcessAnchor()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x18C9E80", Offset = "0x18C9E80", VA = "0x18C9E80")]
		private void ProcessTag()
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x18C8420", Offset = "0x18C8420", VA = "0x18C8420")]
		private void EmitDocumentEnd(ParsingEvent evt)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x18C8540", Offset = "0x18C8540", VA = "0x18C8540")]
		private void EmitFlowSequenceItem(ParsingEvent evt, bool isFirst)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x18C8728", Offset = "0x18C8728", VA = "0x18C8728")]
		private void EmitFlowMappingKey(ParsingEvent evt, bool isFirst)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x18C8978", Offset = "0x18C8978", VA = "0x18C8978")]
		private void EmitFlowMappingValue(ParsingEvent evt, bool isSimple)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x18C8A60", Offset = "0x18C8A60", VA = "0x18C8A60")]
		private void EmitBlockSequenceItem(ParsingEvent evt, bool isFirst)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x18C8BC8", Offset = "0x18C8BC8", VA = "0x18C8BC8")]
		private void EmitBlockMappingKey(ParsingEvent evt, bool isFirst)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x18C8D58", Offset = "0x18C8D58", VA = "0x18C8D58")]
		private void EmitBlockMappingValue(ParsingEvent evt, bool isSimple)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x18C9F68", Offset = "0x18C9F68", VA = "0x18C9F68")]
		private void IncreaseIndent(bool isFlow, bool isIndentless)
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x18C95A0", Offset = "0x18C95A0", VA = "0x18C95A0")]
		private bool CheckEmptyDocument()
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x18CB5E0", Offset = "0x18CB5E0", VA = "0x18CB5E0")]
		private bool CheckSimpleKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x18CB74C", Offset = "0x18CB74C", VA = "0x18CB74C")]
		private int SafeStringLength(string value)
		{
			return default(int);
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x18CB374", Offset = "0x18CB374", VA = "0x18CB374")]
		private bool CheckEmptySequence()
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x18CB498", Offset = "0x18CB498", VA = "0x18CB498")]
		private bool CheckEmptyMapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x18CB174", Offset = "0x18CB174", VA = "0x18CB174")]
		private void WriteBlockScalarHints(string value)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x18C9324", Offset = "0x18C9324", VA = "0x18C9324")]
		private void WriteIndicator(string indicator, bool needWhitespace, bool whitespace, bool indentation)
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x18C8E6C", Offset = "0x18C8E6C", VA = "0x18C8E6C")]
		private void WriteIndent()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x18CB5BC", Offset = "0x18CB5BC", VA = "0x18CB5BC")]
		private void WriteAnchor(string value)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x18C950C", Offset = "0x18C950C", VA = "0x18C950C")]
		private void WriteTagHandle(string value)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x18C9550", Offset = "0x18C9550", VA = "0x18C9550")]
		private void WriteTagContent(string value, bool needsWhitespace)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x18CB760", Offset = "0x18CB760", VA = "0x18CB760")]
		private string UrlEncode(string text)
		{
			return null;
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x18C8E28", Offset = "0x18C8E28", VA = "0x18C8E28")]
		private void Write(char value)
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x18C8F50", Offset = "0x18C8F50", VA = "0x18C8F50")]
		private void Write(string value)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x18C8FA0", Offset = "0x18C8FA0", VA = "0x18C8FA0")]
		private void WriteBreak(char breakCharacter = '\n')
		{
		}
	}
	[Token(Token = "0x200009F")]
	internal enum EmitterState
	{
		[Token(Token = "0x4000100")]
		StreamStart,
		[Token(Token = "0x4000101")]
		StreamEnd,
		[Token(Token = "0x4000102")]
		FirstDocumentStart,
		[Token(Token = "0x4000103")]
		DocumentStart,
		[Token(Token = "0x4000104")]
		DocumentContent,
		[Token(Token = "0x4000105")]
		DocumentEnd,
		[Token(Token = "0x4000106")]
		FlowSequenceFirstItem,
		[Token(Token = "0x4000107")]
		FlowSequenceItem,
		[Token(Token = "0x4000108")]
		FlowMappingFirstKey,
		[Token(Token = "0x4000109")]
		FlowMappingKey,
		[Token(Token = "0x400010A")]
		FlowMappingSimpleValue,
		[Token(Token = "0x400010B")]
		FlowMappingValue,
		[Token(Token = "0x400010C")]
		BlockSequenceFirstItem,
		[Token(Token = "0x400010D")]
		BlockSequenceItem,
		[Token(Token = "0x400010E")]
		BlockMappingFirstKey,
		[Token(Token = "0x400010F")]
		BlockMappingKey,
		[Token(Token = "0x4000110")]
		BlockMappingSimpleValue,
		[Token(Token = "0x4000111")]
		BlockMappingValue
	}
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9628", Offset = "0x12A9628")]
	public class FakeList<T>
	{
		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerator<T> collection;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentIndex;

		[Token(Token = "0x17000076")]
		public T Item
		{
			[Token(Token = "0x60004A3")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60004A1")]
		public FakeList(IEnumerator<T> collection)
		{
		}

		[Token(Token = "0x60004A2")]
		public FakeList(IEnumerable<T> collection)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A1")]
	public class ForwardAnchorNotSupportedException : YamlException
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x18CDE68", Offset = "0x18CDE68", VA = "0x18CDE68")]
		public ForwardAnchorNotSupportedException()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x18CDE70", Offset = "0x18CDE70", VA = "0x18CDE70")]
		public ForwardAnchorNotSupportedException(string message)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x18CDE78", Offset = "0x18CDE78", VA = "0x18CDE78")]
		public ForwardAnchorNotSupportedException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x18CDE80", Offset = "0x18CDE80", VA = "0x18CDE80")]
		public ForwardAnchorNotSupportedException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x20000A2")]
	internal static class HashCode
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x18CDE88", Offset = "0x18CDE88", VA = "0x18CDE88")]
		public static int CombineHashCodes(int h1, int h2)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000A3")]
	public interface IEmitter
	{
		[Token(Token = "0x60004A9")]
		void Emit(ParsingEvent @event);
	}
	[Token(Token = "0x20000A4")]
	internal interface ILookAheadBuffer
	{
		[Token(Token = "0x17000077")]
		bool EndOfInput
		{
			[Token(Token = "0x60004AA")]
			get;
		}

		[Token(Token = "0x60004AB")]
		char Peek(int offset);

		[Token(Token = "0x60004AC")]
		void Skip(int length);
	}
	[Token(Token = "0x20000A5")]
	public interface IParser
	{
		[Token(Token = "0x17000078")]
		ParsingEvent Current
		{
			[Token(Token = "0x60004AD")]
			get;
		}

		[Token(Token = "0x60004AE")]
		bool MoveNext();
	}
	[Token(Token = "0x20000A6")]
	public interface IScanner
	{
		[Token(Token = "0x17000079")]
		Mark CurrentPosition
		{
			[Token(Token = "0x60004AF")]
			get;
		}

		[Token(Token = "0x1700007A")]
		Token Current
		{
			[Token(Token = "0x60004B0")]
			get;
		}

		[Token(Token = "0x60004B1")]
		bool MoveNext();

		[Token(Token = "0x60004B2")]
		bool MoveNextWithoutConsuming();

		[Token(Token = "0x60004B3")]
		void ConsumeCurrent();
	}
	[Serializable]
	[Token(Token = "0x20000A7")]
	public class InsertionQueue<T>
	{
		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IList<T> items;

		[Token(Token = "0x1700007B")]
		public int Count
		{
			[Token(Token = "0x60004B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60004B5")]
		public void Enqueue(T item)
		{
		}

		[Token(Token = "0x60004B6")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60004B7")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60004B8")]
		public InsertionQueue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public class LookAheadBuffer : ILookAheadBuffer
	{
		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TextReader input;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly char[] buffer;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int firstIndex;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int count;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool endOfInput;

		[Token(Token = "0x1700007C")]
		public bool EndOfInput
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x18CDF8C", Offset = "0x18CDF8C", VA = "0x18CDF8C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x18CDE94", Offset = "0x18CDE94", VA = "0x18CDE94")]
		public LookAheadBuffer(TextReader input, int capacity)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x18CDFAC", Offset = "0x18CDFAC", VA = "0x18CDFAC")]
		private int GetIndexForOffset(int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x18CDFDC", Offset = "0x18CDFDC", VA = "0x18CDFDC", Slot = "5")]
		public char Peek(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x18CE0E8", Offset = "0x18CE0E8", VA = "0x18CE0E8")]
		public void Cache(int length)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x18CE18C", Offset = "0x18CE18C", VA = "0x18CE18C", Slot = "6")]
		public void Skip(int length)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A9")]
	public class Mark : IEquatable<Mark>, IComparable<Mark>, IComparable
	{
		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Mark Empty;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC448", Offset = "0x12AC448")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC458", Offset = "0x12AC458")]
		private int <Line>k__BackingField;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC468", Offset = "0x12AC468")]
		private int <Column>k__BackingField;

		[Token(Token = "0x1700007D")]
		public int Index
		{
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x18CE25C", Offset = "0x18CE25C", VA = "0x18CE25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B62F4", Offset = "0x12B62F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0x18CE264", Offset = "0x18CE264", VA = "0x18CE264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6304", Offset = "0x12B6304")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public int Line
		{
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0x18CE26C", Offset = "0x18CE26C", VA = "0x18CE26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6314", Offset = "0x12B6314")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0x18CE274", Offset = "0x18CE274", VA = "0x18CE274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6324", Offset = "0x12B6324")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public int Column
		{
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x18CE27C", Offset = "0x18CE27C", VA = "0x18CE27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6334", Offset = "0x12B6334")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x18CE284", Offset = "0x18CE284", VA = "0x18CE284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6344", Offset = "0x12B6344")]
			private set
			{
			}
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x18CE28C", Offset = "0x18CE28C", VA = "0x18CE28C")]
		public Mark()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x18C61EC", Offset = "0x18C61EC", VA = "0x18C61EC")]
		public Mark(int index, int line, int column)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x18CE2B8", Offset = "0x18CE2B8", VA = "0x18CE2B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x18CE378", Offset = "0x18CE378", VA = "0x18CE378", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x18CE434", Offset = "0x18CE434", VA = "0x18CE434", Slot = "4")]
		public bool Equals(Mark other)
		{
			return default(bool);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x18CE474", Offset = "0x18CE474", VA = "0x18CE474", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x18CE4EC", Offset = "0x18CE4EC", VA = "0x18CE4EC", Slot = "6")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x18CE5B8", Offset = "0x18CE5B8", VA = "0x18CE5B8", Slot = "5")]
		public int CompareTo(Mark other)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public class MaximumRecursionLevelReachedException : YamlException
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x18CE6E8", Offset = "0x18CE6E8", VA = "0x18CE6E8")]
		public MaximumRecursionLevelReachedException()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x18CE6F0", Offset = "0x18CE6F0", VA = "0x18CE6F0")]
		public MaximumRecursionLevelReachedException(string message)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x18CE6F8", Offset = "0x18CE6F8", VA = "0x18CE6F8")]
		public MaximumRecursionLevelReachedException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x18CE700", Offset = "0x18CE700", VA = "0x18CE700")]
		public MaximumRecursionLevelReachedException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public sealed class MergingParser : IParser
	{
		[Token(Token = "0x20003A0")]
		private class ParsingEventCloner : IParsingEventVisitor
		{
			[Token(Token = "0x4000BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ParsingEvent clonedEvent;

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x18CF13C", Offset = "0x18CF13C", VA = "0x18CF13C")]
			public ParsingEvent Clone(ParsingEvent e)
			{
				return null;
			}

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x18CF178", Offset = "0x18CF178", VA = "0x18CF178", Slot = "4")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.AnchorAlias e)
			{
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x18CF204", Offset = "0x18CF204", VA = "0x18CF204", Slot = "5")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.StreamStart e)
			{
			}

			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x18CF264", Offset = "0x18CF264", VA = "0x18CF264", Slot = "6")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.StreamEnd e)
			{
			}

			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x18CF2C4", Offset = "0x18CF2C4", VA = "0x18CF2C4", Slot = "7")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.DocumentStart e)
			{
			}

			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x18CF324", Offset = "0x18CF324", VA = "0x18CF324", Slot = "8")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.DocumentEnd e)
			{
			}

			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x18CF384", Offset = "0x18CF384", VA = "0x18CF384", Slot = "9")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.Scalar e)
			{
			}

			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x18CF448", Offset = "0x18CF448", VA = "0x18CF448", Slot = "10")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(SequenceStart e)
			{
			}

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x18CF4F0", Offset = "0x18CF4F0", VA = "0x18CF4F0", Slot = "11")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(SequenceEnd e)
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x18CF56C", Offset = "0x18CF56C", VA = "0x18CF56C", Slot = "12")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(MappingStart e)
			{
			}

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x18CF614", Offset = "0x18CF614", VA = "0x18CF614", Slot = "13")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(MappingEnd e)
			{
			}

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x18CF690", Offset = "0x18CF690", VA = "0x18CF690", Slot = "14")]
			private void YamlDotNet.Core.Events.IParsingEventVisitor.Visit(YamlDotNet.Core.Events.Comment e)
			{
			}

			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x18CEF84", Offset = "0x18CEF84", VA = "0x18CEF84")]
			public ParsingEventCloner()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AABF8", Offset = "0x12AABF8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IEnumerable<ParsingEvent>, IEnumerable<ParsingEvent>> <>9__8_0;

			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x18CEFF0", Offset = "0x18CEFF0", VA = "0x18CEFF0")]
			public <>c()
			{
			}

			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x18CEFF8", Offset = "0x18CEFF8", VA = "0x18CEFF8")]
			internal IEnumerable<ParsingEvent> <MoveNext>b__8_0(IEnumerable<ParsingEvent> e)
			{
				return null;
			}
		}

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC08", Offset = "0x12AAC08")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string mappingAlias;

			[Token(Token = "0x4000BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nesting;

			[Token(Token = "0x4000BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParsingEventCloner cloner;

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x18CEF7C", Offset = "0x18CEF7C", VA = "0x18CEF7C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x18CF000", Offset = "0x18CF000", VA = "0x18CF000")]
			internal bool <GetMappingEvents>b__0(ParsingEvent e)
			{
				return default(bool);
			}

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x18CF0B0", Offset = "0x18CF0B0", VA = "0x18CF0B0")]
			internal bool <GetMappingEvents>b__1(ParsingEvent e)
			{
				return default(bool);
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x18CF0FC", Offset = "0x18CF0FC", VA = "0x18CF0FC")]
			internal ParsingEvent <GetMappingEvents>b__2(ParsingEvent e)
			{
				return null;
			}
		}

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ParsingEvent> _allEvents;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IParser _innerParser;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentIndex;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC478", Offset = "0x12AC478")]
		private ParsingEvent <Current>k__BackingField;

		[Token(Token = "0x17000080")]
		public ParsingEvent Current
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x18CE794", Offset = "0x18CE794", VA = "0x18CE794", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6354", Offset = "0x12B6354")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x18CE79C", Offset = "0x18CE79C", VA = "0x18CE79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6364", Offset = "0x12B6364")]
			private set
			{
			}
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x18CE708", Offset = "0x18CE708", VA = "0x18CE708")]
		public MergingParser(IParser innerParser)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x18CE7A4", Offset = "0x18CE7A4", VA = "0x18CE7A4", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x18CEDD4", Offset = "0x18CEDD4", VA = "0x18CEDD4")]
		private IEnumerable<ParsingEvent> GetMappingEvents(string mappingAlias)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AC")]
	public class Parser : IParser
	{
		[Token(Token = "0x20003A3")]
		private class EventQueue
		{
			[Token(Token = "0x4000BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Queue<ParsingEvent> highPriorityEvents;

			[Token(Token = "0x4000BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly Queue<ParsingEvent> normalPriorityEvents;

			[Token(Token = "0x170002A4")]
			public int Count
			{
				[Token(Token = "0x60017D2")]
				[Address(RVA = "0x18CFD0C", Offset = "0x18CFD0C", VA = "0x18CFD0C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x18CF8DC", Offset = "0x18CF8DC", VA = "0x18CF8DC")]
			public void Enqueue(ParsingEvent @event)
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x18CFF64", Offset = "0x18CFF64", VA = "0x18CFF64")]
			public ParsingEvent Dequeue()
			{
				return null;
			}

			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x18CFBF8", Offset = "0x18CFBF8", VA = "0x18CFBF8")]
			public EventQueue()
			{
			}
		}

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Stack<ParserState> states;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly TagDirectiveCollection tagDirectives;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParserState state;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IScanner scanner;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParsingEvent currentEvent;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Token currentToken;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly EventQueue pendingEvents;

		[Token(Token = "0x17000081")]
		public ParsingEvent Current
		{
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x18CFC88", Offset = "0x18CFC88", VA = "0x18CFC88", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x18CF6F0", Offset = "0x18CF6F0", VA = "0x18CF6F0")]
		private Token GetCurrentToken()
		{
			return null;
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x18CF96C", Offset = "0x18CF96C", VA = "0x18CF96C")]
		public Parser(TextReader input)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x18CFB38", Offset = "0x18CFB38", VA = "0x18CFB38")]
		public Parser(IScanner scanner)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x18CFC90", Offset = "0x18CFC90", VA = "0x18CFC90", Slot = "5")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x18CFD6C", Offset = "0x18CFD6C", VA = "0x18CFD6C")]
		private ParsingEvent StateMachine()
		{
			return null;
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x18D241C", Offset = "0x18D241C", VA = "0x18D241C")]
		private void Skip()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x18CFFD0", Offset = "0x18CFFD0", VA = "0x18CFFD0")]
		private ParsingEvent ParseStreamStart()
		{
			return null;
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x18D00F8", Offset = "0x18D00F8", VA = "0x18D00F8")]
		private ParsingEvent ParseDocumentStart(bool isImplicit)
		{
			return null;
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x18D24E8", Offset = "0x18D24E8", VA = "0x18D24E8")]
		private VersionDirective ProcessDirectives(TagDirectiveCollection tags)
		{
			return null;
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x18D2778", Offset = "0x18D2778", VA = "0x18D2778")]
		private static void AddTagDirectives(TagDirectiveCollection directives, IEnumerable<TagDirective> source)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x18D05B0", Offset = "0x18D05B0", VA = "0x18D05B0")]
		private ParsingEvent ParseDocumentContent()
		{
			return null;
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x18D2A0C", Offset = "0x18D2A0C", VA = "0x18D2A0C")]
		private static ParsingEvent ProcessEmptyScalar(Mark position)
		{
			return null;
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x18D08CC", Offset = "0x18D08CC", VA = "0x18D08CC")]
		private ParsingEvent ParseNode(bool isBlock, bool isIndentlessSequence)
		{
			return null;
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x18D07D8", Offset = "0x18D07D8", VA = "0x18D07D8")]
		private ParsingEvent ParseDocumentEnd()
		{
			return null;
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x18D0FE4", Offset = "0x18D0FE4", VA = "0x18D0FE4")]
		private ParsingEvent ParseBlockSequenceEntry(bool isFirst)
		{
			return null;
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x18D1278", Offset = "0x18D1278", VA = "0x18D1278")]
		private ParsingEvent ParseIndentlessSequenceEntry()
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x18D14C8", Offset = "0x18D14C8", VA = "0x18D14C8")]
		private ParsingEvent ParseBlockMappingKey(bool isFirst)
		{
			return null;
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x18D179C", Offset = "0x18D179C", VA = "0x18D179C")]
		private ParsingEvent ParseBlockMappingValue()
		{
			return null;
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x18D1958", Offset = "0x18D1958", VA = "0x18D1958")]
		private ParsingEvent ParseFlowSequenceEntry(bool isFirst)
		{
			return null;
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x18D1BF8", Offset = "0x18D1BF8", VA = "0x18D1BF8")]
		private ParsingEvent ParseFlowSequenceEntryMappingKey()
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x18D1D54", Offset = "0x18D1D54", VA = "0x18D1D54")]
		private ParsingEvent ParseFlowSequenceEntryMappingValue()
		{
			return null;
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x18D1EAC", Offset = "0x18D1EAC", VA = "0x18D1EAC")]
		private ParsingEvent ParseFlowSequenceEntryMappingEnd()
		{
			return null;
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x18D1F44", Offset = "0x18D1F44", VA = "0x18D1F44")]
		private ParsingEvent ParseFlowMappingKey(bool isFirst)
		{
			return null;
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x18D22B0", Offset = "0x18D22B0", VA = "0x18D22B0")]
		private ParsingEvent ParseFlowMappingValue(bool isEmpty)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AD")]
	public static class ParserExtensions
	{
		[Token(Token = "0x60004F0")]
		public static T Expect<T>(this IParser parser) where T : ParsingEvent
		{
			return null;
		}

		[Token(Token = "0x60004F1")]
		public static bool Accept<T>(this IParser parser) where T : ParsingEvent
		{
			return default(bool);
		}

		[Token(Token = "0x60004F2")]
		public static T Allow<T>(this IParser parser) where T : ParsingEvent
		{
			return null;
		}

		[Token(Token = "0x60004F3")]
		public static T Peek<T>(this IParser parser) where T : ParsingEvent
		{
			return null;
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x18D2AAC", Offset = "0x18D2AAC", VA = "0x18D2AAC")]
		public static void SkipThisAndNestedEvents(this IParser parser)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	internal enum ParserState
	{
		[Token(Token = "0x400012A")]
		StreamStart,
		[Token(Token = "0x400012B")]
		StreamEnd,
		[Token(Token = "0x400012C")]
		ImplicitDocumentStart,
		[Token(Token = "0x400012D")]
		DocumentStart,
		[Token(Token = "0x400012E")]
		DocumentContent,
		[Token(Token = "0x400012F")]
		DocumentEnd,
		[Token(Token = "0x4000130")]
		BlockNode,
		[Token(Token = "0x4000131")]
		BlockNodeOrIndentlessSequence,
		[Token(Token = "0x4000132")]
		FlowNode,
		[Token(Token = "0x4000133")]
		BlockSequenceFirstEntry,
		[Token(Token = "0x4000134")]
		BlockSequenceEntry,
		[Token(Token = "0x4000135")]
		IndentlessSequenceEntry,
		[Token(Token = "0x4000136")]
		BlockMappingFirstKey,
		[Token(Token = "0x4000137")]
		BlockMappingKey,
		[Token(Token = "0x4000138")]
		BlockMappingValue,
		[Token(Token = "0x4000139")]
		FlowSequenceFirstEntry,
		[Token(Token = "0x400013A")]
		FlowSequenceEntry,
		[Token(Token = "0x400013B")]
		FlowSequenceEntryMappingKey,
		[Token(Token = "0x400013C")]
		FlowSequenceEntryMappingValue,
		[Token(Token = "0x400013D")]
		FlowSequenceEntryMappingEnd,
		[Token(Token = "0x400013E")]
		FlowMappingFirstKey,
		[Token(Token = "0x400013F")]
		FlowMappingKey,
		[Token(Token = "0x4000140")]
		FlowMappingValue,
		[Token(Token = "0x4000141")]
		FlowMappingEmptyValue
	}
	[Token(Token = "0x20000AF")]
	internal class RecursionLevel
	{
		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int current;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC488", Offset = "0x12AC488")]
		private int <Maximum>k__BackingField;

		[Token(Token = "0x17000082")]
		public int Maximum
		{
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x18D2B9C", Offset = "0x18D2B9C", VA = "0x18D2B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B63C4", Offset = "0x12B63C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x18D2BA4", Offset = "0x18D2BA4", VA = "0x18D2BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B63D4", Offset = "0x12B63D4")]
			private set
			{
			}
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x18D2BAC", Offset = "0x18D2BAC", VA = "0x18D2BAC")]
		public RecursionLevel(int maximum)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x18D2BD8", Offset = "0x18D2BD8", VA = "0x18D2BD8")]
		public void Increment()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x18D2C58", Offset = "0x18D2C58", VA = "0x18D2C58")]
		public bool TryIncrement()
		{
			return default(bool);
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x18D2C7C", Offset = "0x18D2C7C", VA = "0x18D2C7C")]
		public void Decrement()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public enum ScalarStyle
	{
		[Token(Token = "0x4000145")]
		Any,
		[Token(Token = "0x4000146")]
		Plain,
		[Token(Token = "0x4000147")]
		SingleQuoted,
		[Token(Token = "0x4000148")]
		DoubleQuoted,
		[Token(Token = "0x4000149")]
		Literal,
		[Token(Token = "0x400014A")]
		Folded
	}
	[Serializable]
	[Token(Token = "0x20000B1")]
	public class Scanner : IScanner
	{
		[Token(Token = "0x400014B")]
		private const int MaxVersionNumberLength = 9;

		[Token(Token = "0x400014C")]
		private const int MaxBufferLength = 8;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<char, char> simpleEscapeCodes;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Stack<int> indents;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InsertionQueue<Token> tokens;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Stack<SimpleKey> simpleKeys;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly CharacterAnalyzer<LookAheadBuffer> analyzer;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Cursor cursor;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool streamStartProduced;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool streamEndProduced;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int indent;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool simpleKeyAllowed;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int flowLevel;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int tokensParsed;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool tokenAvailable;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Token previous;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC498", Offset = "0x12AC498")]
		private bool <SkipComments>k__BackingField;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4A8", Offset = "0x12AC4A8")]
		private Token <Current>k__BackingField;

		[Token(Token = "0x17000083")]
		public bool SkipComments
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0x18D2D08", Offset = "0x18D2D08", VA = "0x18D2D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B63E4", Offset = "0x12B63E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x18D2D10", Offset = "0x18D2D10", VA = "0x18D2D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B63F4", Offset = "0x12B63F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public Token Current
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0x18D2D1C", Offset = "0x18D2D1C", VA = "0x18D2D1C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6404", Offset = "0x12B6404")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004FE")]
			[Address(RVA = "0x18D2D24", Offset = "0x18D2D24", VA = "0x18D2D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6414", Offset = "0x12B6414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Mark CurrentPosition
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x18D2D2C", Offset = "0x18D2D2C", VA = "0x18D2D2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x18CF9E0", Offset = "0x18CF9E0", VA = "0x18CF9E0")]
		public Scanner(TextReader input, bool skipComments = true)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x18D2D44", Offset = "0x18D2D44", VA = "0x18D2D44", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x18D2D88", Offset = "0x18D2D88", VA = "0x18D2D88", Slot = "7")]
		public bool MoveNextWithoutConsuming()
		{
			return default(bool);
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x18D2D68", Offset = "0x18D2D68", VA = "0x18D2D68", Slot = "8")]
		public void ConsumeCurrent()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x18D3004", Offset = "0x18D3004", VA = "0x18D3004")]
		private char ReadCurrentCharacter()
		{
			return default(char);
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x18D30EC", Offset = "0x18D30EC", VA = "0x18D30EC")]
		private char ReadLine()
		{
			return default(char);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x18D2E34", Offset = "0x18D2E34", VA = "0x18D2E34")]
		private void FetchMoreTokens()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x18D3BCC", Offset = "0x18D3BCC", VA = "0x18D3BCC")]
		private static bool StartsWith(StringBuilder what, char start)
		{
			return default(bool);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x18D32EC", Offset = "0x18D32EC", VA = "0x18D32EC")]
		private void StaleSimpleKeys()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x18D34D0", Offset = "0x18D34D0", VA = "0x18D34D0")]
		private void FetchNextToken()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x18D4B08", Offset = "0x18D4B08", VA = "0x18D4B08")]
		private bool CheckWhiteSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x18D4BB0", Offset = "0x18D4BB0", VA = "0x18D4BB0")]
		private bool IsDocumentIndicator()
		{
			return default(bool);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x18D3074", Offset = "0x18D3074", VA = "0x18D3074")]
		private void Skip()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x18D3198", Offset = "0x18D3198", VA = "0x18D3198")]
		private void SkipLine()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x18D3D10", Offset = "0x18D3D10", VA = "0x18D3D10")]
		private void ScanToNextToken()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x18D4D08", Offset = "0x18D4D08", VA = "0x18D4D08")]
		private void ProcessComment()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x18D3C28", Offset = "0x18D3C28", VA = "0x18D3C28")]
		private void FetchStreamStart()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x18D3DB0", Offset = "0x18D3DB0", VA = "0x18D3DB0")]
		private void UnrollIndent(int column)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x18D3EA0", Offset = "0x18D3EA0", VA = "0x18D3EA0")]
		private void FetchStreamEnd()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x18D3F7C", Offset = "0x18D3F7C", VA = "0x18D3F7C")]
		private void FetchDirective()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x18D5024", Offset = "0x18D5024", VA = "0x18D5024")]
		private Token ScanDirective()
		{
			return null;
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x18D3FFC", Offset = "0x18D3FFC", VA = "0x18D3FFC")]
		private void FetchDocumentIndicator(bool isStartToken)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x18D4108", Offset = "0x18D4108", VA = "0x18D4108")]
		private void FetchFlowCollectionStart(bool isSequenceToken)
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x18D57A8", Offset = "0x18D57A8", VA = "0x18D57A8")]
		private void IncreaseFlowLevel()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x18D41F0", Offset = "0x18D41F0", VA = "0x18D41F0")]
		private void FetchFlowCollectionEnd(bool isSequenceToken)
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x18D583C", Offset = "0x18D583C", VA = "0x18D583C")]
		private void DecreaseFlowLevel()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x18D42D4", Offset = "0x18D42D4", VA = "0x18D42D4")]
		private void FetchFlowEntry()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x18D439C", Offset = "0x18D439C", VA = "0x18D439C")]
		private void FetchBlockEntry()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x18D44EC", Offset = "0x18D44EC", VA = "0x18D44EC")]
		private void FetchKey()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x18D4644", Offset = "0x18D4644", VA = "0x18D4644")]
		private void FetchValue()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x18D58B0", Offset = "0x18D58B0", VA = "0x18D58B0")]
		private void RollIndent(int column, int number, bool isSequence, Mark position)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x18D4890", Offset = "0x18D4890", VA = "0x18D4890")]
		private void FetchAnchor(bool isAlias)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x18D59FC", Offset = "0x18D59FC", VA = "0x18D59FC")]
		private Token ScanAnchor(bool isAlias)
		{
			return null;
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x18D4914", Offset = "0x18D4914", VA = "0x18D4914")]
		private void FetchTag()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x18D5C10", Offset = "0x18D5C10", VA = "0x18D5C10")]
		private Token ScanTag()
		{
			return null;
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x18D4988", Offset = "0x18D4988", VA = "0x18D4988")]
		private void FetchBlockScalar(bool isLiteral)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x18D62D4", Offset = "0x18D62D4", VA = "0x18D62D4")]
		private Token ScanBlockScalar(bool isLiteral)
		{
			return null;
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x18D690C", Offset = "0x18D690C", VA = "0x18D690C")]
		private int ScanBlockScalarBreaks(int currentIndent, StringBuilder breaks, Mark start, ref Mark end)
		{
			return default(int);
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x18D4A10", Offset = "0x18D4A10", VA = "0x18D4A10")]
		private void FetchFlowScalar(bool isSingleQuoted)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x18D6B3C", Offset = "0x18D6B3C", VA = "0x18D6B3C")]
		private Token ScanFlowScalar(bool isSingleQuoted)
		{
			return null;
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x18D4A94", Offset = "0x18D4A94", VA = "0x18D4A94")]
		private void FetchPlainScalar()
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x18D73C8", Offset = "0x18D73C8", VA = "0x18D73C8")]
		private Token ScanPlainScalar()
		{
			return null;
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x18D4F30", Offset = "0x18D4F30", VA = "0x18D4F30")]
		private void RemoveSimpleKey()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x18D5208", Offset = "0x18D5208", VA = "0x18D5208")]
		private string ScanDirectiveName(Mark start)
		{
			return null;
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x18D7990", Offset = "0x18D7990", VA = "0x18D7990")]
		private void SkipWhitespaces()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x18D5390", Offset = "0x18D5390", VA = "0x18D5390")]
		private Token ScanVersionDirectiveValue(Mark start)
		{
			return null;
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x18D54EC", Offset = "0x18D54EC", VA = "0x18D54EC")]
		private Token ScanTagDirectiveValue(Mark start)
		{
			return null;
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x18D5EA4", Offset = "0x18D5EA4", VA = "0x18D5EA4")]
		private string ScanTagUri(string head, Mark start)
		{
			return null;
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x18D7B70", Offset = "0x18D7B70", VA = "0x18D7B70")]
		private string ScanUriEscapes(Mark start)
		{
			return null;
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x18D60CC", Offset = "0x18D60CC", VA = "0x18D60CC")]
		private string ScanTagHandle(bool isDirective, Mark start)
		{
			return null;
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x18D7A04", Offset = "0x18D7A04", VA = "0x18D7A04")]
		private int ScanVersionDirectiveNumber(Mark start)
		{
			return default(int);
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x18D5684", Offset = "0x18D5684", VA = "0x18D5684")]
		private void SaveSimpleKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B2")]
	public class SemanticErrorException : YamlException
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x2853FCC", Offset = "0x2853FCC", VA = "0x2853FCC")]
		public SemanticErrorException()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x2854038", Offset = "0x2854038", VA = "0x2854038")]
		public SemanticErrorException(string message)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x28540B4", Offset = "0x28540B4", VA = "0x28540B4")]
		public SemanticErrorException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x28540C4", Offset = "0x28540C4", VA = "0x28540C4")]
		public SemanticErrorException(string message, Exception inner)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B3")]
	internal class SimpleKey
	{
		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Cursor cursor;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4B8", Offset = "0x12AC4B8")]
		private bool <IsPossible>k__BackingField;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4C8", Offset = "0x12AC4C8")]
		private bool <IsRequired>k__BackingField;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4D8", Offset = "0x12AC4D8")]
		private int <TokenNumber>k__BackingField;

		[Token(Token = "0x17000086")]
		public bool IsPossible
		{
			[Token(Token = "0x6000539")]
			[Address(RVA = "0x2854148", Offset = "0x2854148", VA = "0x2854148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6424", Offset = "0x12B6424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053A")]
			[Address(RVA = "0x2854150", Offset = "0x2854150", VA = "0x2854150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6434", Offset = "0x12B6434")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public bool IsRequired
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x285415C", Offset = "0x285415C", VA = "0x285415C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6444", Offset = "0x12B6444")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600053C")]
			[Address(RVA = "0x2854164", Offset = "0x2854164", VA = "0x2854164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6454", Offset = "0x12B6454")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public int TokenNumber
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x2854170", Offset = "0x2854170", VA = "0x2854170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6464", Offset = "0x12B6464")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600053E")]
			[Address(RVA = "0x2854178", Offset = "0x2854178", VA = "0x2854178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6474", Offset = "0x12B6474")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public int Index
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0x2854180", Offset = "0x2854180", VA = "0x2854180")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008A")]
		public int Line
		{
			[Token(Token = "0x6000540")]
			[Address(RVA = "0x285419C", Offset = "0x285419C", VA = "0x285419C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008B")]
		public int LineOffset
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x28541B8", Offset = "0x28541B8", VA = "0x28541B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008C")]
		public Mark Mark
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0x28541D4", Offset = "0x28541D4", VA = "0x28541D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x28541F0", Offset = "0x28541F0", VA = "0x28541F0")]
		public SimpleKey()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x285425C", Offset = "0x285425C", VA = "0x285425C")]
		public SimpleKey(bool isPossible, bool isRequired, int tokenNumber, Cursor cursor)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B4")]
	internal class StringLookAheadBuffer : ILookAheadBuffer
	{
		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string value;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4E8", Offset = "0x12AC4E8")]
		private int <Position>k__BackingField;

		[Token(Token = "0x1700008D")]
		public int Position
		{
			[Token(Token = "0x6000545")]
			[Address(RVA = "0x2854300", Offset = "0x2854300", VA = "0x2854300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6484", Offset = "0x12B6484")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000546")]
			[Address(RVA = "0x2854308", Offset = "0x2854308", VA = "0x2854308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6494", Offset = "0x12B6494")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public int Length
		{
			[Token(Token = "0x6000548")]
			[Address(RVA = "0x285433C", Offset = "0x285433C", VA = "0x285433C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0x2854358", Offset = "0x2854358", VA = "0x2854358", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x2854310", Offset = "0x2854310", VA = "0x2854310")]
		public StringLookAheadBuffer(string value)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x28543A4", Offset = "0x28543A4", VA = "0x28543A4", Slot = "5")]
		public char Peek(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x2854380", Offset = "0x2854380", VA = "0x2854380")]
		private bool IsOutside(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x28543E0", Offset = "0x28543E0", VA = "0x28543E0", Slot = "6")]
		public void Skip(int length)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B5")]
	public class SyntaxErrorException : YamlException
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x2854484", Offset = "0x2854484", VA = "0x2854484")]
		public SyntaxErrorException()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x2854488", Offset = "0x2854488", VA = "0x2854488")]
		public SyntaxErrorException(string message)
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x285448C", Offset = "0x285448C", VA = "0x285448C")]
		public SyntaxErrorException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x2854494", Offset = "0x2854494", VA = "0x2854494")]
		public SyntaxErrorException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class TagDirectiveCollection : KeyedCollection<string, TagDirective>
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x2854498", Offset = "0x2854498", VA = "0x2854498")]
		public TagDirectiveCollection()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x28544E8", Offset = "0x28544E8", VA = "0x28544E8")]
		public TagDirectiveCollection(IEnumerable<TagDirective> tagDirectives)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x2854768", Offset = "0x2854768", VA = "0x2854768", Slot = "39")]
		protected override string GetKeyForItem(TagDirective item)
		{
			return null;
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x2854780", Offset = "0x2854780", VA = "0x2854780")]
		public new bool Contains(TagDirective directive)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20000B7")]
	public class Version
	{
		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC4F8", Offset = "0x12AC4F8")]
		private int <Major>k__BackingField;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC508", Offset = "0x12AC508")]
		private int <Minor>k__BackingField;

		[Token(Token = "0x17000090")]
		public int Major
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0x2855D4C", Offset = "0x2855D4C", VA = "0x2855D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64A4", Offset = "0x12B64A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000556")]
			[Address(RVA = "0x2855D54", Offset = "0x2855D54", VA = "0x2855D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64B4", Offset = "0x12B64B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public int Minor
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0x2855D5C", Offset = "0x2855D5C", VA = "0x2855D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64C4", Offset = "0x12B64C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000558")]
			[Address(RVA = "0x2855D64", Offset = "0x2855D64", VA = "0x2855D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64D4", Offset = "0x12B64D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x2855D6C", Offset = "0x2855D6C", VA = "0x2855D6C")]
		public Version(int major, int minor)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x2855DA4", Offset = "0x2855DA4", VA = "0x2855DA4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x2855E5C", Offset = "0x2855E5C", VA = "0x2855E5C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000B8")]
	public class YamlException : Exception
	{
		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC518", Offset = "0x12AC518")]
		private Mark <Start>k__BackingField;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC528", Offset = "0x12AC528")]
		private Mark <End>k__BackingField;

		[Token(Token = "0x17000092")]
		public Mark Start
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0x2855EB0", Offset = "0x2855EB0", VA = "0x2855EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64E4", Offset = "0x12B64E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600055D")]
			[Address(RVA = "0x2855EB8", Offset = "0x2855EB8", VA = "0x2855EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B64F4", Offset = "0x12B64F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public Mark End
		{
			[Token(Token = "0x600055E")]
			[Address(RVA = "0x2855EC0", Offset = "0x2855EC0", VA = "0x2855EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6504", Offset = "0x12B6504")]
			get
			{
				return null;
			}
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x2855EC8", Offset = "0x2855EC8", VA = "0x2855EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6514", Offset = "0x12B6514")]
			private set
			{
			}
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x2853FD0", Offset = "0x2853FD0", VA = "0x2853FD0")]
		public YamlException()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x285403C", Offset = "0x285403C", VA = "0x285403C")]
		public YamlException(string message)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x28540BC", Offset = "0x28540BC", VA = "0x28540BC")]
		public YamlException(Mark start, Mark end, string message)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x2855ED0", Offset = "0x2855ED0", VA = "0x2855ED0")]
		public YamlException(Mark start, Mark end, string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x28540C8", Offset = "0x28540C8", VA = "0x28540C8")]
		public YamlException(string message, Exception inner)
		{
		}
	}
}
namespace YamlDotNet.Core.Tokens
{
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class Anchor : Token
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string value;

		[Token(Token = "0x17000094")]
		public string Value
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x28547F8", Offset = "0x28547F8", VA = "0x28547F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x2854800", Offset = "0x2854800", VA = "0x2854800")]
		public Anchor(string value)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x285488C", Offset = "0x285488C", VA = "0x285488C")]
		public Anchor(string value, Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class AnchorAlias : Token
	{
		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string value;

		[Token(Token = "0x17000095")]
		public string Value
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x2854904", Offset = "0x2854904", VA = "0x2854904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x285490C", Offset = "0x285490C", VA = "0x285490C")]
		public AnchorAlias(string value)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x2854998", Offset = "0x2854998", VA = "0x2854998")]
		public AnchorAlias(string value, Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class BlockEnd : Token
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x28549D8", Offset = "0x28549D8", VA = "0x28549D8")]
		public BlockEnd()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x2854A54", Offset = "0x2854A54", VA = "0x2854A54")]
		public BlockEnd(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public class BlockEntry : Token
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x2854A8C", Offset = "0x2854A8C", VA = "0x2854A8C")]
		public BlockEntry()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x2854B08", Offset = "0x2854B08", VA = "0x2854B08")]
		public BlockEntry(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BD")]
	public class BlockMappingStart : Token
	{
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x2854B40", Offset = "0x2854B40", VA = "0x2854B40")]
		public BlockMappingStart()
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x2854BBC", Offset = "0x2854BBC", VA = "0x2854BBC")]
		public BlockMappingStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class BlockSequenceStart : Token
	{
		[Token(Token = "0x6000571")]
		[Address(RVA = "0x2854BF4", Offset = "0x2854BF4", VA = "0x2854BF4")]
		public BlockSequenceStart()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x2854C70", Offset = "0x2854C70", VA = "0x2854C70")]
		public BlockSequenceStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BF")]
	public class Comment : Token
	{
		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC538", Offset = "0x12AC538")]
		private string <Value>k__BackingField;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC548", Offset = "0x12AC548")]
		private bool <IsInline>k__BackingField;

		[Token(Token = "0x17000096")]
		public string Value
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0x2854CA8", Offset = "0x2854CA8", VA = "0x2854CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6524", Offset = "0x12B6524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x2854CB0", Offset = "0x2854CB0", VA = "0x2854CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6534", Offset = "0x12B6534")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public bool IsInline
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x2854CB8", Offset = "0x2854CB8", VA = "0x2854CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6544", Offset = "0x12B6544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000576")]
			[Address(RVA = "0x2854CC0", Offset = "0x2854CC0", VA = "0x2854CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6554", Offset = "0x12B6554")]
			private set
			{
			}
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x2854CCC", Offset = "0x2854CCC", VA = "0x2854CCC")]
		public Comment(string value, bool isInline)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x2854D64", Offset = "0x2854D64", VA = "0x2854D64")]
		public Comment(string value, bool isInline, Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C0")]
	public class DocumentEnd : Token
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x2854DB8", Offset = "0x2854DB8", VA = "0x2854DB8")]
		public DocumentEnd()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x2854E34", Offset = "0x2854E34", VA = "0x2854E34")]
		public DocumentEnd(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C1")]
	public class DocumentStart : Token
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x2854E6C", Offset = "0x2854E6C", VA = "0x2854E6C")]
		public DocumentStart()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x2854EE8", Offset = "0x2854EE8", VA = "0x2854EE8")]
		public DocumentStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C2")]
	public class FlowEntry : Token
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x2854F20", Offset = "0x2854F20", VA = "0x2854F20")]
		public FlowEntry()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x2854F9C", Offset = "0x2854F9C", VA = "0x2854F9C")]
		public FlowEntry(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C3")]
	public class FlowMappingEnd : Token
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x2854FD4", Offset = "0x2854FD4", VA = "0x2854FD4")]
		public FlowMappingEnd()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x2855050", Offset = "0x2855050", VA = "0x2855050")]
		public FlowMappingEnd(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C4")]
	public class FlowMappingStart : Token
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x2855088", Offset = "0x2855088", VA = "0x2855088")]
		public FlowMappingStart()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x2855104", Offset = "0x2855104", VA = "0x2855104")]
		public FlowMappingStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C5")]
	public class FlowSequenceEnd : Token
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x285513C", Offset = "0x285513C", VA = "0x285513C")]
		public FlowSequenceEnd()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x28551B8", Offset = "0x28551B8", VA = "0x28551B8")]
		public FlowSequenceEnd(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C6")]
	public class FlowSequenceStart : Token
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0x28551F0", Offset = "0x28551F0", VA = "0x28551F0")]
		public FlowSequenceStart()
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x285526C", Offset = "0x285526C", VA = "0x285526C")]
		public FlowSequenceStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C7")]
	public class Key : Token
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x28552A4", Offset = "0x28552A4", VA = "0x28552A4")]
		public Key()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x2855320", Offset = "0x2855320", VA = "0x2855320")]
		public Key(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C8")]
	public class Scalar : Token
	{
		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string value;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ScalarStyle style;

		[Token(Token = "0x17000098")]
		public string Value
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0x2855358", Offset = "0x2855358", VA = "0x2855358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		public ScalarStyle Style
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x2855360", Offset = "0x2855360", VA = "0x2855360")]
			get
			{
				return default(ScalarStyle);
			}
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x2855368", Offset = "0x2855368", VA = "0x2855368")]
		public Scalar(string value)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x2855370", Offset = "0x2855370", VA = "0x2855370")]
		public Scalar(string value, ScalarStyle style)
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x2855404", Offset = "0x2855404", VA = "0x2855404")]
		public Scalar(string value, ScalarStyle style, Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C9")]
	public class StreamEnd : Token
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x2855454", Offset = "0x2855454", VA = "0x2855454")]
		public StreamEnd()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x28554D0", Offset = "0x28554D0", VA = "0x28554D0")]
		public StreamEnd(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CA")]
	public class StreamStart : Token
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x2855508", Offset = "0x2855508", VA = "0x2855508")]
		public StreamStart()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x2855584", Offset = "0x2855584", VA = "0x2855584")]
		public StreamStart(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CB")]
	public class Tag : Token
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string handle;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string suffix;

		[Token(Token = "0x1700009A")]
		public string Handle
		{
			[Token(Token = "0x6000592")]
			[Address(RVA = "0x28555BC", Offset = "0x28555BC", VA = "0x28555BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		public string Suffix
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0x28555C4", Offset = "0x28555C4", VA = "0x28555C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x28555CC", Offset = "0x28555CC", VA = "0x28555CC")]
		public Tag(string handle, string suffix)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x285565C", Offset = "0x285565C", VA = "0x285565C")]
		public Tag(string handle, string suffix, Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CC")]
	public class TagDirective : Token
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string handle;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string prefix;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex tagHandleValidator;

		[Token(Token = "0x1700009C")]
		public string Handle
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0x28556A8", Offset = "0x28556A8", VA = "0x28556A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public string Prefix
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x28556B0", Offset = "0x28556B0", VA = "0x28556B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x28556B8", Offset = "0x28556B8", VA = "0x28556B8")]
		public TagDirective(string handle, string prefix)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x2855744", Offset = "0x2855744", VA = "0x2855744")]
		public TagDirective(string handle, string prefix, Mark start, Mark end)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x28558C4", Offset = "0x28558C4", VA = "0x28558C4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x2855990", Offset = "0x2855990", VA = "0x2855990", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x28559E4", Offset = "0x28559E4", VA = "0x28559E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000CD")]
	public abstract class Token
	{
		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Mark start;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Mark end;

		[Token(Token = "0x1700009E")]
		public Mark Start
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x2855ADC", Offset = "0x2855ADC", VA = "0x2855ADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		public Mark End
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x2855AE4", Offset = "0x2855AE4", VA = "0x2855AE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x28548CC", Offset = "0x28548CC", VA = "0x28548CC")]
		protected Token(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CE")]
	public class Value : Token
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x2855AEC", Offset = "0x2855AEC", VA = "0x2855AEC")]
		public Value()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x2855B68", Offset = "0x2855B68", VA = "0x2855B68")]
		public Value(Mark start, Mark end)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CF")]
	public class VersionDirective : Token
	{
		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Version version;

		[Token(Token = "0x170000A0")]
		public Version Version
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x2855BA0", Offset = "0x2855BA0", VA = "0x2855BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x2855BA8", Offset = "0x2855BA8", VA = "0x2855BA8")]
		public VersionDirective(Version version)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x2855C34", Offset = "0x2855C34", VA = "0x2855C34")]
		public VersionDirective(Version version, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x2855C74", Offset = "0x2855C74", VA = "0x2855C74", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x2855D2C", Offset = "0x2855D2C", VA = "0x2855D2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace YamlDotNet.Core.Events
{
	[Token(Token = "0x20000D0")]
	public class AnchorAlias : ParsingEvent
	{
		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string value;

		[Token(Token = "0x170000A1")]
		internal override EventType Type
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x18CBAAC", Offset = "0x18CBAAC", VA = "0x18CBAAC", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000A2")]
		public string Value
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x18CBAB4", Offset = "0x18CBAB4", VA = "0x18CBAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x18CBABC", Offset = "0x18CBABC", VA = "0x18CBABC")]
		public AnchorAlias(string value, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x18CBC18", Offset = "0x18CBC18", VA = "0x18CBC18")]
		public AnchorAlias(string value)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x18CBC9C", Offset = "0x18CBC9C", VA = "0x18CBC9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x18CBD18", Offset = "0x18CBD18", VA = "0x18CBD18", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class Comment : ParsingEvent
	{
		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC558", Offset = "0x12AC558")]
		private string <Value>k__BackingField;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC568", Offset = "0x12AC568")]
		private bool <IsInline>k__BackingField;

		[Token(Token = "0x170000A3")]
		public string Value
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x18CBDD4", Offset = "0x18CBDD4", VA = "0x18CBDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6564", Offset = "0x12B6564")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x18CBDDC", Offset = "0x18CBDDC", VA = "0x18CBDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6574", Offset = "0x12B6574")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool IsInline
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x18CBDE4", Offset = "0x18CBDE4", VA = "0x18CBDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6584", Offset = "0x12B6584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x18CBDEC", Offset = "0x18CBDEC", VA = "0x18CBDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B6594", Offset = "0x12B6594")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		internal override EventType Type
		{
			[Token(Token = "0x60005B4")]
			[Address(RVA = "0x18CBEE4", Offset = "0x18CBEE4", VA = "0x18CBEE4", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x18CBDF8", Offset = "0x18CBDF8", VA = "0x18CBDF8")]
		public Comment(string value, bool isInline)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x18CBE90", Offset = "0x18CBE90", VA = "0x18CBE90")]
		public Comment(string value, bool isInline, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x18CBEEC", Offset = "0x18CBEEC", VA = "0x18CBEEC", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class DocumentEnd : ParsingEvent
	{
		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool isImplicit;

		[Token(Token = "0x170000A6")]
		public override int NestingIncrease
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0x18CBFAC", Offset = "0x18CBFAC", VA = "0x18CBFAC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A7")]
		internal override EventType Type
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x18CBFB4", Offset = "0x18CBFB4", VA = "0x18CBFB4", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000A8")]
		public bool IsImplicit
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x18CBFBC", Offset = "0x18CBFBC", VA = "0x18CBFBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x18CBFC4", Offset = "0x18CBFC4", VA = "0x18CBFC4")]
		public DocumentEnd(bool isImplicit, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x18CC008", Offset = "0x18CC008", VA = "0x18CC008")]
		public DocumentEnd(bool isImplicit)
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x18CC098", Offset = "0x18CC098", VA = "0x18CC098", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x18CC144", Offset = "0x18CC144", VA = "0x18CC144", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class DocumentStart : ParsingEvent
	{
		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly TagDirectiveCollection tags;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly VersionDirective version;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool isImplicit;

		[Token(Token = "0x170000A9")]
		public override int NestingIncrease
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x18CC204", Offset = "0x18CC204", VA = "0x18CC204", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AA")]
		internal override EventType Type
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x18CC20C", Offset = "0x18CC20C", VA = "0x18CC20C", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000AB")]
		public TagDirectiveCollection Tags
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x18CC214", Offset = "0x18CC214", VA = "0x18CC214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public VersionDirective Version
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x18CC21C", Offset = "0x18CC21C", VA = "0x18CC21C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public bool IsImplicit
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x18CC224", Offset = "0x18CC224", VA = "0x18CC224")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x18CC22C", Offset = "0x18CC22C", VA = "0x18CC22C")]
		public DocumentStart(VersionDirective version, TagDirectiveCollection tags, bool isImplicit, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x18CC284", Offset = "0x18CC284", VA = "0x18CC284")]
		public DocumentStart(VersionDirective version, TagDirectiveCollection tags, bool isImplicit)
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x18CC328", Offset = "0x18CC328", VA = "0x18CC328")]
		public DocumentStart(Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x18CC36C", Offset = "0x18CC36C", VA = "0x18CC36C")]
		public DocumentStart()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x18CC3F4", Offset = "0x18CC3F4", VA = "0x18CC3F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x18CC4A0", Offset = "0x18CC4A0", VA = "0x18CC4A0", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D4")]
	internal enum EventType
	{
		[Token(Token = "0x400017D")]
		None,
		[Token(Token = "0x400017E")]
		StreamStart,
		[Token(Token = "0x400017F")]
		StreamEnd,
		[Token(Token = "0x4000180")]
		DocumentStart,
		[Token(Token = "0x4000181")]
		DocumentEnd,
		[Token(Token = "0x4000182")]
		Alias,
		[Token(Token = "0x4000183")]
		Scalar,
		[Token(Token = "0x4000184")]
		SequenceStart,
		[Token(Token = "0x4000185")]
		SequenceEnd,
		[Token(Token = "0x4000186")]
		MappingStart,
		[Token(Token = "0x4000187")]
		MappingEnd,
		[Token(Token = "0x4000188")]
		Comment
	}
	[Token(Token = "0x20000D5")]
	public interface IParsingEventVisitor
	{
		[Token(Token = "0x60005C8")]
		void Visit(AnchorAlias e);

		[Token(Token = "0x60005C9")]
		void Visit(StreamStart e);

		[Token(Token = "0x60005CA")]
		void Visit(StreamEnd e);

		[Token(Token = "0x60005CB")]
		void Visit(DocumentStart e);

		[Token(Token = "0x60005CC")]
		void Visit(DocumentEnd e);

		[Token(Token = "0x60005CD")]
		void Visit(Scalar e);

		[Token(Token = "0x60005CE")]
		void Visit(SequenceStart e);

		[Token(Token = "0x60005CF")]
		void Visit(SequenceEnd e);

		[Token(Token = "0x60005D0")]
		void Visit(MappingStart e);

		[Token(Token = "0x60005D1")]
		void Visit(MappingEnd e);

		[Token(Token = "0x60005D2")]
		void Visit(Comment e);
	}
	[Token(Token = "0x20000D6")]
	public class MappingEnd : ParsingEvent
	{
		[Token(Token = "0x170000AE")]
		public override int NestingIncrease
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x18CC560", Offset = "0x18CC560", VA = "0x18CC560", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AF")]
		internal override EventType Type
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x18CC568", Offset = "0x18CC568", VA = "0x18CC568", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x18CC570", Offset = "0x18CC570", VA = "0x18CC570")]
		public MappingEnd(Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x18CC5A8", Offset = "0x18CC5A8", VA = "0x18CC5A8")]
		public MappingEnd()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x18CC624", Offset = "0x18CC624", VA = "0x18CC624", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x18CC66C", Offset = "0x18CC66C", VA = "0x18CC66C", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class MappingStart : NodeEvent
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool isImplicit;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly MappingStyle style;

		[Token(Token = "0x170000B0")]
		public override int NestingIncrease
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x18CC72C", Offset = "0x18CC72C", VA = "0x18CC72C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B1")]
		internal override EventType Type
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x18CC734", Offset = "0x18CC734", VA = "0x18CC734", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000B2")]
		public bool IsImplicit
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x18CC73C", Offset = "0x18CC73C", VA = "0x18CC73C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B3")]
		public override bool IsCanonical
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x18CC744", Offset = "0x18CC744", VA = "0x18CC744", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public MappingStyle Style
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x18CC754", Offset = "0x18CC754", VA = "0x18CC754")]
			get
			{
				return default(MappingStyle);
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x18CC75C", Offset = "0x18CC75C", VA = "0x18CC75C")]
		public MappingStart(string anchor, string tag, bool isImplicit, MappingStyle style, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x18CC968", Offset = "0x18CC968", VA = "0x18CC968")]
		public MappingStart(string anchor, string tag, bool isImplicit, MappingStyle style)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x18CCA0C", Offset = "0x18CCA0C", VA = "0x18CCA0C")]
		public MappingStart()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x18CCA90", Offset = "0x18CCA90", VA = "0x18CCA90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x18CCC48", Offset = "0x18CCC48", VA = "0x18CCC48", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public enum MappingStyle
	{
		[Token(Token = "0x400018C")]
		Any,
		[Token(Token = "0x400018D")]
		Block,
		[Token(Token = "0x400018E")]
		Flow
	}
	[Token(Token = "0x20000D9")]
	public abstract class NodeEvent : ParsingEvent
	{
		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Regex anchorValidator;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string anchor;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string tag;

		[Token(Token = "0x170000B5")]
		public string Anchor
		{
			[Token(Token = "0x60005E3")]
			[Address(RVA = "0x18CCD08", Offset = "0x18CCD08", VA = "0x18CCD08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public string Tag
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0x18CCD10", Offset = "0x18CCD10", VA = "0x18CCD10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public abstract bool IsCanonical
		{
			[Token(Token = "0x60005E5")]
			get;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x18CC810", Offset = "0x18CC810", VA = "0x18CC810")]
		protected NodeEvent(string anchor, string tag, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x18CCD18", Offset = "0x18CCD18", VA = "0x18CCD18")]
		protected NodeEvent(string anchor, string tag)
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public abstract class ParsingEvent
	{
		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Mark start;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Mark end;

		[Token(Token = "0x170000B8")]
		public virtual int NestingIncrease
		{
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0x18CCE20", Offset = "0x18CCE20", VA = "0x18CCE20", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B9")]
		internal abstract EventType Type
		{
			[Token(Token = "0x60005EA")]
			get;
		}

		[Token(Token = "0x170000BA")]
		public Mark Start
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x18CCE28", Offset = "0x18CCE28", VA = "0x18CCE28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public Mark End
		{
			[Token(Token = "0x60005EC")]
			[Address(RVA = "0x18CCE30", Offset = "0x18CCE30", VA = "0x18CCE30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005ED")]
		public abstract void Accept(IParsingEventVisitor visitor);

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x18CBBE0", Offset = "0x18CBBE0", VA = "0x18CBBE0")]
		internal ParsingEvent(Mark start, Mark end)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class Scalar : NodeEvent
	{
		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string value;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ScalarStyle style;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly bool isPlainImplicit;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private readonly bool isQuotedImplicit;

		[Token(Token = "0x170000BC")]
		internal override EventType Type
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x18CCE38", Offset = "0x18CCE38", VA = "0x18CCE38", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000BD")]
		public string Value
		{
			[Token(Token = "0x60005F0")]
			[Address(RVA = "0x18CCE40", Offset = "0x18CCE40", VA = "0x18CCE40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public ScalarStyle Style
		{
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x18CCE48", Offset = "0x18CCE48", VA = "0x18CCE48")]
			get
			{
				return default(ScalarStyle);
			}
		}

		[Token(Token = "0x170000BF")]
		public bool IsPlainImplicit
		{
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x18CCE50", Offset = "0x18CCE50", VA = "0x18CCE50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		public bool IsQuotedImplicit
		{
			[Token(Token = "0x60005F3")]
			[Address(RVA = "0x18CCE58", Offset = "0x18CCE58", VA = "0x18CCE58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public override bool IsCanonical
		{
			[Token(Token = "0x60005F4")]
			[Address(RVA = "0x18CCE60", Offset = "0x18CCE60", VA = "0x18CCE60", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x18CCE80", Offset = "0x18CCE80", VA = "0x18CCE80")]
		public Scalar(string anchor, string tag, string value, ScalarStyle style, bool isPlainImplicit, bool isQuotedImplicit, Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x18CCF50", Offset = "0x18CCF50", VA = "0x18CCF50")]
		public Scalar(string anchor, string tag, string value, ScalarStyle style, bool isPlainImplicit, bool isQuotedImplicit)
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x18CD018", Offset = "0x18CD018", VA = "0x18CD018")]
		public Scalar(string value)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x18CD0BC", Offset = "0x18CD0BC", VA = "0x18CD0BC")]
		public Scalar(string tag, string value)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x18CD164", Offset = "0x18CD164", VA = "0x18CD164")]
		public Scalar(string anchor, string tag, string value)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x18CD218", Offset = "0x18CD218", VA = "0x18CD218", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x18CD444", Offset = "0x18CD444", VA = "0x18CD444", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class SequenceEnd : ParsingEvent
	{
		[Token(Token = "0x170000C2")]
		public override int NestingIncrease
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x18CD504", Offset = "0x18CD504", VA = "0x18CD504", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C3")]
		internal override EventType Type
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x18CD50C", Offset = "0x18CD50C", VA = "0x18CD50C", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x18CD514", Offset = "0x18CD514", VA = "0x18CD514")]
		public SequenceEnd(Mark start, Mark end)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x18CD54C", Offset = "0x18CD54C", VA = "0x18CD54C")]
		public SequenceEnd()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x18CD5C8", Offset = "0x18CD5C8", VA = "0x18CD5C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x18CD610", Offset = "0x18CD610", VA = "0x18CD610", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class SequenceStart : NodeEvent
	{
		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool isImplicit;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly SequenceStyle style;

		[Token(Token = "0x170000C4")]
		public override int NestingIncrease
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x18CD6D0", Offset = "0x18CD6D0", VA = "0x18CD6D0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C5")]
		internal override EventType Type
		{
			[Token(Token = "0x6000603")]
			[Address(RVA = "0x18CD6D8", Offset = "0x18CD6D8", VA = "0x18CD6D8", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x170000C6")]
		public bool IsImplicit
		{
			[Token(Token = "0x6000604")]
			[Address(RVA = "0x18CD6E0", Offset = "0x18CD6E0", VA = "0x18CD6E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C7")]
		public override bool IsCanonical
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0x18CD6E8", Offset = "0x18CD6E8", VA = "0x18CD6E8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C8")]
		public SequenceStyle Style
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x18CD6F8", Offset = "0x18CD6F8", VA = "0x18CD6F8")]
			get
			{
				return default(SequenceStyle);
			}
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x18CD700", Offset = "0x18CD700", VA = "0x18CD700")]
		public SequenceStart(string anchor, string tag, bool isImplicit, SequenceStyle style, Mark start, Mark end)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x18CD7B4", Offset = "0x18CD7B4", VA = "0x18CD7B4")]
		public SequenceStart(string anchor, string tag, bool isImplicit, SequenceStyle style)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x18CD858", Offset = "0x18CD858", VA = "0x18CD858", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x18CDA10", Offset = "0x18CDA10", VA = "0x18CDA10", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public enum SequenceStyle
	{
		[Token(Token = "0x400019B")]
		Any,
		[Token(Token = "0x400019C")]
		Block,
		[Token(Token = "0x400019D")]
		Flow
	}
	[Token(Token = "0x20000DF")]
	public class StreamEnd : ParsingEvent
	{
		[Token(Token = "0x170000C9")]
		public override int NestingIncrease
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0x18CDAD0", Offset = "0x18CDAD0", VA = "0x18CDAD0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CA")]
		internal override EventType Type
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0x18CDAD8", Offset = "0x18CDAD8", VA = "0x18CDAD8", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x18CDAE0", Offset = "0x18CDAE0", VA = "0x18CDAE0")]
		public StreamEnd(Mark start, Mark end)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x18CDB18", Offset = "0x18CDB18", VA = "0x18CDB18")]
		public StreamEnd()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x18CDB94", Offset = "0x18CDB94", VA = "0x18CDB94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x18CDBDC", Offset = "0x18CDBDC", VA = "0x18CDBDC", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class StreamStart : ParsingEvent
	{
		[Token(Token = "0x170000CB")]
		public override int NestingIncrease
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0x18CDC9C", Offset = "0x18CDC9C", VA = "0x18CDC9C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		internal override EventType Type
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0x18CDCA4", Offset = "0x18CDCA4", VA = "0x18CDCA4", Slot = "5")]
			get
			{
				return default(EventType);
			}
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x18CDCAC", Offset = "0x18CDCAC", VA = "0x18CDCAC")]
		public StreamStart()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x18CDD28", Offset = "0x18CDD28", VA = "0x18CDD28")]
		public StreamStart(Mark start, Mark end)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x18CDD60", Offset = "0x18CDD60", VA = "0x18CDD60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x18CDDA8", Offset = "0x18CDDA8", VA = "0x18CDDA8", Slot = "6")]
		public override void Accept(IParsingEventVisitor visitor)
		{
		}
	}
}
namespace UniRx
{
	[Token(Token = "0x20000E1")]
	public static class WebRequestExtensions
	{
		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC18", Offset = "0x12AAC18")]
		private sealed class <>c__DisplayClass0_0<TResult>
		{
			[Token(Token = "0x4000BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<AsyncCallback, object, IAsyncResult> begin;

			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IAsyncResult, TResult> end;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WebRequest request;

			[Token(Token = "0x60017D4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60017D5")]
			internal IDisposable <AbortableDeferredAsyncRequest>b__0(IObserver<TResult> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC28", Offset = "0x12AAC28")]
		private sealed class <>c__DisplayClass0_1<TResult>
		{
			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int isCompleted;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IDisposable subscription;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass0_0<TResult> CS$<>8__locals1;

			[Token(Token = "0x60017D6")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x60017D7")]
			internal TResult <AbortableDeferredAsyncRequest>b__1(IAsyncResult ar)
			{
				return (TResult)null;
			}

			[Token(Token = "0x60017D8")]
			internal void <AbortableDeferredAsyncRequest>b__2()
			{
			}
		}

		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC38", Offset = "0x12AAC38")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HttpWebRequest request;

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x18BFDCC", Offset = "0x18BFDCC", VA = "0x18BFDCC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x18BFE9C", Offset = "0x18BFE9C", VA = "0x18BFE9C")]
			internal HttpWebResponse <GetResponseAsObservable>b__0(IAsyncResult ar)
			{
				return null;
			}
		}

		[Token(Token = "0x6000617")]
		private static IObservable<TResult> AbortableDeferredAsyncRequest<TResult>(Func<AsyncCallback, object, IAsyncResult> begin, Func<IAsyncResult, TResult> end, WebRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x18BFC14", Offset = "0x18BFC14", VA = "0x18BFC14")]
		public static IObservable<WebResponse> GetResponseAsObservable(this WebRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x18BFCDC", Offset = "0x18BFCDC", VA = "0x18BFCDC")]
		public static IObservable<HttpWebResponse> GetResponseAsObservable(this HttpWebRequest request)
		{
			return null;
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x18BFDD4", Offset = "0x18BFDD4", VA = "0x18BFDD4")]
		public static IObservable<Stream> GetRequestStreamAsObservable(this WebRequest request)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E2")]
	public sealed class BooleanDisposable : IDisposable, ICancelable
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC578", Offset = "0x12AC578")]
		private bool <IsDisposed>k__BackingField;

		[Token(Token = "0x170000CD")]
		public bool IsDisposed
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x2754D50", Offset = "0x2754D50", VA = "0x2754D50", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B65D4", Offset = "0x12B65D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x2754D58", Offset = "0x2754D58", VA = "0x2754D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B65E4", Offset = "0x12B65E4")]
			private set
			{
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x2754D64", Offset = "0x2754D64", VA = "0x2754D64")]
		public BooleanDisposable()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x2754D6C", Offset = "0x2754D6C", VA = "0x2754D6C")]
		internal BooleanDisposable(bool isDisposed)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x2754D9C", Offset = "0x2754D9C", VA = "0x2754D9C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public sealed class CompositeDisposable : ICollection<IDisposable>, IEnumerable<IDisposable>, IEnumerable, IDisposable, ICancelable
	{
		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object _gate;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _disposed;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IDisposable> _disposables;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _count;

		[Token(Token = "0x40001A3")]
		private const int SHRINK_THRESHOLD = 64;

		[Token(Token = "0x170000CE")]
		public int Count
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0x2755838", Offset = "0x2755838", VA = "0x2755838", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsReadOnly
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0x27564EC", Offset = "0x27564EC", VA = "0x27564EC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public bool IsDisposed
		{
			[Token(Token = "0x600062E")]
			[Address(RVA = "0x27566DC", Offset = "0x27566DC", VA = "0x27566DC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x27554D8", Offset = "0x27554D8", VA = "0x27554D8")]
		public CompositeDisposable()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x275556C", Offset = "0x275556C", VA = "0x275556C")]
		public CompositeDisposable(int capacity)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x2755650", Offset = "0x2755650", VA = "0x2755650")]
		public CompositeDisposable(params IDisposable[] disposables)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x2755744", Offset = "0x2755744", VA = "0x2755744")]
		public CompositeDisposable(IEnumerable<IDisposable> disposables)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x2755840", Offset = "0x2755840", VA = "0x2755840", Slot = "6")]
		public void Add(IDisposable item)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x27559EC", Offset = "0x27559EC", VA = "0x27559EC", Slot = "10")]
		public bool Remove(IDisposable item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x2755DAC", Offset = "0x2755DAC", VA = "0x2755DAC", Slot = "13")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x2755F74", Offset = "0x2755F74", VA = "0x2755F74", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x2756124", Offset = "0x2756124", VA = "0x2756124", Slot = "8")]
		public bool Contains(IDisposable item)
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x2756244", Offset = "0x2756244", VA = "0x2756244", Slot = "9")]
		public void CopyTo(IDisposable[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x27564F4", Offset = "0x27564F4", VA = "0x27564F4", Slot = "11")]
		public IEnumerator<IDisposable> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x27566D8", Offset = "0x27566D8", VA = "0x27566D8", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9680", Offset = "0x12A9680")]
	public sealed class DictionaryDisposable<TKey, TValue> : IDisposable, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable where TValue : IDisposable
	{
		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<TKey, TValue> inner;

		[Token(Token = "0x170000D1")]
		public TValue Item
		{
			[Token(Token = "0x6000631")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000632")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public int Count
		{
			[Token(Token = "0x6000633")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public Dictionary<TKey, TValue>.KeyCollection Keys
		{
			[Token(Token = "0x6000634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		public Dictionary<TKey, TValue>.ValueCollection Values
		{
			[Token(Token = "0x6000635")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
		{
			[Token(Token = "0x600063C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
		{
			[Token(Token = "0x600063D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
		{
			[Token(Token = "0x600063E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062F")]
		public DictionaryDisposable()
		{
		}

		[Token(Token = "0x6000630")]
		public DictionaryDisposable(IEqualityComparer<TKey> comparer)
		{
		}

		[Token(Token = "0x6000636")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000637")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000638")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000639")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x600063A")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x600063B")]
		public Dictionary<TKey, TValue>.Enumerator GetEnumerator()
		{
			return default(Dictionary<TKey, TValue>.Enumerator);
		}

		[Token(Token = "0x600063F")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000640")]
		public void OnDeserialization(object sender)
		{
		}

		[Token(Token = "0x6000641")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6000642")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000643")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000644")]
		private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000646")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000647")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public static class Disposable
	{
		[Token(Token = "0x20003A7")]
		private class EmptyDisposable : IDisposable
		{
			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static EmptyDisposable Singleton;

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x2131E50", Offset = "0x2131E50", VA = "0x2131E50")]
			private EmptyDisposable()
			{
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x2131E58", Offset = "0x2131E58", VA = "0x2131E58", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		private class AnonymousDisposable : IDisposable
		{
			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool isDisposed;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly Action dispose;

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x2131D74", Offset = "0x2131D74", VA = "0x2131D74")]
			public AnonymousDisposable(Action dispose)
			{
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x2131E1C", Offset = "0x2131E1C", VA = "0x2131E1C", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20003A9")]
		private class AnonymousDisposable<T> : IDisposable
		{
			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly T state;

			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T> dispose;

			[Token(Token = "0x60017E0")]
			public AnonymousDisposable(T state, Action<T> dispose)
			{
			}

			[Token(Token = "0x60017E1")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IDisposable Empty;

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x2131D10", Offset = "0x2131D10", VA = "0x2131D10")]
		public static IDisposable Create(Action disposeAction)
		{
			return null;
		}

		[Token(Token = "0x6000649")]
		public static IDisposable CreateWithState<TState>(TState state, Action<TState> disposeAction)
		{
			return null;
		}
	}
	[Token(Token = "0x20000E6")]
	public static class DisposableExtensions
	{
		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC48", Offset = "0x12AAC48")]
		private sealed class <MonitorTriggerHealth>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObservableDestroyTrigger trigger;

			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject targetGameObject;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017E5")]
				[Address(RVA = "0x213203C", Offset = "0x213203C", VA = "0x213203C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E7")]
				[Address(RVA = "0x21320A4", Offset = "0x21320A4", VA = "0x21320A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x2131F3C", Offset = "0x2131F3C", VA = "0x2131F3C")]
			[DebuggerHidden]
			public <MonitorTriggerHealth>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x2131F68", Offset = "0x2131F68", VA = "0x2131F68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x2131F6C", Offset = "0x2131F6C", VA = "0x2131F6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x2132044", Offset = "0x2132044", VA = "0x2132044", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600064B")]
		public static T AddTo<T>(this T disposable, ICollection<IDisposable> container) where T : IDisposable
		{
			return (T)null;
		}

		[Token(Token = "0x600064C")]
		public static T AddTo<T>(this T disposable, GameObject gameObject) where T : IDisposable
		{
			return (T)null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x2131EC0", Offset = "0x2131EC0", VA = "0x2131EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B6614", Offset = "0x12B6614")]
		private static IEnumerator MonitorTriggerHealth(ObservableDestroyTrigger trigger, GameObject targetGameObject)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		public static T AddTo<T>(this T disposable, Component gameObjectComponent) where T : IDisposable
		{
			return (T)null;
		}

		[Token(Token = "0x600064F")]
		public static T AddTo<T>(this T disposable, ICollection<IDisposable> container, GameObject gameObject) where T : IDisposable
		{
			return (T)null;
		}

		[Token(Token = "0x6000650")]
		public static T AddTo<T>(this T disposable, ICollection<IDisposable> container, Component gameObjectComponent) where T : IDisposable
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20000E7")]
	public interface ICancelable : IDisposable
	{
		[Token(Token = "0x170000D8")]
		bool IsDisposed
		{
			[Token(Token = "0x6000651")]
			get;
		}
	}
	[Token(Token = "0x20000E8")]
	public sealed class MultipleAssignmentDisposable : IDisposable, ICancelable
	{
		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly BooleanDisposable True;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object gate;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisposable current;

		[Token(Token = "0x170000D9")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0x213D6F4", Offset = "0x213D6F4", VA = "0x213D6F4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DA")]
		public IDisposable Disposable
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x213D7E4", Offset = "0x213D7E4", VA = "0x213D7E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000654")]
			[Address(RVA = "0x213D904", Offset = "0x213D904", VA = "0x213D904")]
			set
			{
			}
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x213DA7C", Offset = "0x213DA7C", VA = "0x213DA7C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x213DC0C", Offset = "0x213DC0C", VA = "0x213DC0C")]
		public MultipleAssignmentDisposable()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public sealed class RefCountDisposable : ICancelable, IDisposable
	{
		[Token(Token = "0x20003AB")]
		private sealed class InnerDisposable : IDisposable
		{
			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private RefCountDisposable _parent;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object parentLock;

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x2B8026C", Offset = "0x2B8026C", VA = "0x2B8026C")]
			public InnerDisposable(RefCountDisposable parent)
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x2B80594", Offset = "0x2B80594", VA = "0x2B80594", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object _gate;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisposable _disposable;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isPrimaryDisposed;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _count;

		[Token(Token = "0x170000DB")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x2B80148", Offset = "0x2B80148", VA = "0x2B80148", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x2B80084", Offset = "0x2B80084", VA = "0x2B80084")]
		public RefCountDisposable(IDisposable disposable)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x2B80158", Offset = "0x2B80158", VA = "0x2B80158")]
		public IDisposable GetDisposable()
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x2B802E8", Offset = "0x2B802E8", VA = "0x2B802E8", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x2B80438", Offset = "0x2B80438", VA = "0x2B80438")]
		private void Release()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public static class Observable
	{
		[Token(Token = "0x20003AC")]
		private class ConnectableObservable<T> : IConnectableObservable<T>, IObservable<T>
		{
			[Token(Token = "0x20005FC")]
			private class Connection : IDisposable
			{
				[Token(Token = "0x400143A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ConnectableObservable<T> parent;

				[Token(Token = "0x400143B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private IDisposable subscription;

				[Token(Token = "0x6002179")]
				public Connection(ConnectableObservable<T> parent, IDisposable subscription)
				{
				}

				[Token(Token = "0x600217A")]
				public void Dispose()
				{
				}
			}

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObservable<T> source;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ISubject<T> subject;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Connection connection;

			[Token(Token = "0x60017EA")]
			public ConnectableObservable(IObservable<T> source, ISubject<T> subject)
			{
			}

			[Token(Token = "0x60017EB")]
			public IDisposable Connect()
			{
				return null;
			}

			[Token(Token = "0x60017EC")]
			public IDisposable Subscribe(IObserver<T> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x20003AD")]
		private class EveryAfterUpdateInvoker : IEnumerator
		{
			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private long count;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly IObserver<long> observer;

			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly CancellationToken cancellationToken;

			[Token(Token = "0x170002A7")]
			public object Current
			{
				[Token(Token = "0x60017EF")]
				[Address(RVA = "0x2142888", Offset = "0x2142888", VA = "0x2142888", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x2140738", Offset = "0x2140738", VA = "0x2140738")]
			public EveryAfterUpdateInvoker(IObserver<long> observer, CancellationToken cancellationToken)
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x2142784", Offset = "0x2142784", VA = "0x2142784", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x2142890", Offset = "0x2142890", VA = "0x2142890", Slot = "6")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC58", Offset = "0x12AAC58")]
		private sealed class <>c__DisplayClass0_0<T>
		{
			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RefCountDisposable r;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<T> xs;

			[Token(Token = "0x60017F1")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60017F2")]
			internal IDisposable <AddRef>b__0(IObserver<T> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC68", Offset = "0x12AAC68")]
		private sealed class <CombineSources>d__21<T> : IEnumerable<IObservable<T>>, IEnumerable, IEnumerator<IObservable<T>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T> <>2__current;

			[Token(Token = "0x4000C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T> first;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<T> <>3__first;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T>[] seconds;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<T>[] <>3__seconds;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x170002A8")]
			private IObservable<T> System.Collections.Generic.IEnumerator<UniRx.IObservable<T>>.Current
			{
				[Token(Token = "0x60017F6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F3")]
			[DebuggerHidden]
			public <CombineSources>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60017F4")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F5")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017F9")]
			[DebuggerHidden]
			private IEnumerator<IObservable<T>> System.Collections.Generic.IEnumerable<UniRx.IObservable<T>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017FA")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC78", Offset = "0x12AAC78")]
		private sealed class <RepeatInfinite>d__121<T> : IEnumerable<IObservable<T>>, IEnumerable, IEnumerator<IObservable<T>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T> <>2__current;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T> source;

			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<T> <>3__source;

			[Token(Token = "0x170002AA")]
			private IObservable<T> System.Collections.Generic.IEnumerator<UniRx.IObservable<T>>.Current
			{
				[Token(Token = "0x60017FE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001800")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FB")]
			[DebuggerHidden]
			public <RepeatInfinite>d__121(int <>1__state)
			{
			}

			[Token(Token = "0x60017FC")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FD")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FF")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001801")]
			[DebuggerHidden]
			private IEnumerator<IObservable<T>> System.Collections.Generic.IEnumerable<UniRx.IObservable<T>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001802")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC88", Offset = "0x12AAC88")]
		private sealed class <>c__DisplayClass133_0<T>
		{
			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IScheduler scheduler;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> function;

			[Token(Token = "0x6001803")]
			public <>c__DisplayClass133_0()
			{
			}

			[Token(Token = "0x6001804")]
			internal IObservable<T> <ToAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAC98", Offset = "0x12AAC98")]
		private sealed class <>c__DisplayClass133_1<T>
		{
			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncSubject<T> subject;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass133_0<T> CS$<>8__locals1;

			[Token(Token = "0x6001805")]
			public <>c__DisplayClass133_1()
			{
			}

			[Token(Token = "0x6001806")]
			internal void <ToAsync>b__1()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACA8", Offset = "0x12AACA8")]
		private sealed class <>c__DisplayClass135_0
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IScheduler scheduler;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x6001807")]
			[Address(RVA = "0x213E4C0", Offset = "0x213E4C0", VA = "0x213E4C0")]
			public <>c__DisplayClass135_0()
			{
			}

			[Token(Token = "0x6001808")]
			[Address(RVA = "0x21407EC", Offset = "0x21407EC", VA = "0x21407EC")]
			internal IObservable<Unit> <ToAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACB8", Offset = "0x12AACB8")]
		private sealed class <>c__DisplayClass135_1
		{
			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncSubject<Unit> subject;

			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass135_0 CS$<>8__locals1;

			[Token(Token = "0x6001809")]
			[Address(RVA = "0x214095C", Offset = "0x214095C", VA = "0x214095C")]
			public <>c__DisplayClass135_1()
			{
			}

			[Token(Token = "0x600180A")]
			[Address(RVA = "0x2140964", Offset = "0x2140964", VA = "0x2140964")]
			internal void <ToAsync>b__1()
			{
			}
		}

		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACC8", Offset = "0x12AACC8")]
		private sealed class <>c__DisplayClass140_0<TSource, TException> where TException : Exception
		{
			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TException> errorAction;

			[Token(Token = "0x600180B")]
			public <>c__DisplayClass140_0()
			{
			}

			[Token(Token = "0x600180C")]
			internal IObservable<TSource> <CatchIgnore>b__0(TException ex)
			{
				return null;
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACD8", Offset = "0x12AACD8")]
		private sealed class <>c__DisplayClass148_0<TSource, TException> where TException : Exception
		{
			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TimeSpan delay;

			[Token(Token = "0x4000C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<TSource> source;

			[Token(Token = "0x4000C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TException> onError;

			[Token(Token = "0x4000C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int retryCount;

			[Token(Token = "0x4000C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IScheduler delayScheduler;

			[Token(Token = "0x600180D")]
			public <>c__DisplayClass148_0()
			{
			}

			[Token(Token = "0x600180E")]
			internal IObservable<TSource> <OnErrorRetry>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACE8", Offset = "0x12AACE8")]
		private sealed class <>c__DisplayClass148_1<TSource, TException> where TException : Exception
		{
			[Token(Token = "0x4000C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x4000C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TimeSpan dueTime;

			[Token(Token = "0x4000C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<TSource> self;

			[Token(Token = "0x4000C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass148_0<TSource, TException> CS$<>8__locals1;

			[Token(Token = "0x600180F")]
			public <>c__DisplayClass148_1()
			{
			}

			[Token(Token = "0x6001810")]
			internal IObservable<TSource> <OnErrorRetry>b__1(TException ex)
			{
				return null;
			}
		}

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AACF8", Offset = "0x12AACF8")]
		private sealed class <>c__DisplayClass154_0<TResult>
		{
			[Token(Token = "0x4000C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<AsyncCallback, object, IAsyncResult> begin;

			[Token(Token = "0x4000C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IAsyncResult, TResult> end;

			[Token(Token = "0x6001811")]
			public <>c__DisplayClass154_0()
			{
			}

			[Token(Token = "0x6001812")]
			internal IObservable<TResult> <FromAsyncPattern>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD08", Offset = "0x12AAD08")]
		private sealed class <>c__DisplayClass154_1<TResult>
		{
			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncSubject<TResult> subject;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass154_0<TResult> CS$<>8__locals1;

			[Token(Token = "0x6001813")]
			public <>c__DisplayClass154_1()
			{
			}

			[Token(Token = "0x6001814")]
			internal void <FromAsyncPattern>b__1(IAsyncResult iar)
			{
			}
		}

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD18", Offset = "0x12AAD18")]
		private sealed class <>c__DisplayClass155_0<T1, TResult>
		{
			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, AsyncCallback, object, IAsyncResult> begin;

			[Token(Token = "0x4000C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IAsyncResult, TResult> end;

			[Token(Token = "0x6001815")]
			public <>c__DisplayClass155_0()
			{
			}

			[Token(Token = "0x6001816")]
			internal IObservable<TResult> <FromAsyncPattern>b__0(T1 x)
			{
				return null;
			}
		}

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD28", Offset = "0x12AAD28")]
		private sealed class <>c__DisplayClass155_1<T1, TResult>
		{
			[Token(Token = "0x4000C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncSubject<TResult> subject;

			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass155_0<T1, TResult> CS$<>8__locals1;

			[Token(Token = "0x6001817")]
			public <>c__DisplayClass155_1()
			{
			}

			[Token(Token = "0x6001818")]
			internal void <FromAsyncPattern>b__1(IAsyncResult iar)
			{
			}
		}

		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD38", Offset = "0x12AAD38")]
		private sealed class <>c__DisplayClass156_0<T1, T2, TResult>
		{
			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, AsyncCallback, object, IAsyncResult> begin;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IAsyncResult, TResult> end;

			[Token(Token = "0x6001819")]
			public <>c__DisplayClass156_0()
			{
			}

			[Token(Token = "0x600181A")]
			internal IObservable<TResult> <FromAsyncPattern>b__0(T1 x, T2 y)
			{
				return null;
			}
		}

		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD48", Offset = "0x12AAD48")]
		private sealed class <>c__DisplayClass156_1<T1, T2, TResult>
		{
			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncSubject<TResult> subject;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass156_0<T1, T2, TResult> CS$<>8__locals1;

			[Token(Token = "0x600181B")]
			public <>c__DisplayClass156_1()
			{
			}

			[Token(Token = "0x600181C")]
			internal void <FromAsyncPattern>b__1(IAsyncResult iar)
			{
			}
		}

		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD58", Offset = "0x12AAD58")]
		private sealed class <>c__DisplayClass157_0
		{
			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<IAsyncResult> end;

			[Token(Token = "0x600181D")]
			[Address(RVA = "0x213E680", Offset = "0x213E680", VA = "0x213E680")]
			public <>c__DisplayClass157_0()
			{
			}

			[Token(Token = "0x600181E")]
			[Address(RVA = "0x2140B00", Offset = "0x2140B00", VA = "0x2140B00")]
			internal Unit <FromAsyncPattern>b__0(IAsyncResult iar)
			{
				return default(Unit);
			}
		}

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD68", Offset = "0x12AAD68")]
		private sealed class <>c__DisplayClass158_0<T1>
		{
			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<IAsyncResult> end;

			[Token(Token = "0x600181F")]
			public <>c__DisplayClass158_0()
			{
			}

			[Token(Token = "0x6001820")]
			internal Unit <FromAsyncPattern>b__0(IAsyncResult iar)
			{
				return default(Unit);
			}
		}

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD78", Offset = "0x12AAD78")]
		private sealed class <>c__DisplayClass159_0<T1, T2>
		{
			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<IAsyncResult> end;

			[Token(Token = "0x6001821")]
			public <>c__DisplayClass159_0()
			{
			}

			[Token(Token = "0x6001822")]
			internal Unit <FromAsyncPattern>b__0(IAsyncResult iar)
			{
				return default(Unit);
			}
		}

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD88", Offset = "0x12AAD88")]
		private sealed class <>c__DisplayClass237_0<T, TR>
		{
			[Token(Token = "0x4000C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<TR> other;

			[Token(Token = "0x6001823")]
			public <>c__DisplayClass237_0()
			{
			}

			[Token(Token = "0x6001824")]
			internal IObservable<TR> <ContinueWith>b__0(T _)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAD98", Offset = "0x12AAD98")]
		private sealed class <>c__DisplayClass239_0<T, TR>
		{
			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<TR> other;

			[Token(Token = "0x6001825")]
			public <>c__DisplayClass239_0()
			{
			}

			[Token(Token = "0x6001826")]
			internal IObservable<TR> <SelectMany>b__0(T _)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADA8", Offset = "0x12AADA8")]
		private sealed class <>c__DisplayClass278_0
		{
			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerator> coroutine;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool publishEveryYield;

			[Token(Token = "0x6001827")]
			[Address(RVA = "0x213EC9C", Offset = "0x213EC9C", VA = "0x213EC9C")]
			public <>c__DisplayClass278_0()
			{
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0x2140BD4", Offset = "0x2140BD4", VA = "0x2140BD4")]
			internal IEnumerator <FromCoroutine>b__0(IObserver<Unit> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADB8", Offset = "0x12AADB8")]
		private sealed class <>c__DisplayClass279_0
		{
			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<CancellationToken, IEnumerator> coroutine;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool publishEveryYield;

			[Token(Token = "0x6001829")]
			[Address(RVA = "0x213ED84", Offset = "0x213ED84", VA = "0x213ED84")]
			public <>c__DisplayClass279_0()
			{
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0x2140C80", Offset = "0x2140C80", VA = "0x2140C80")]
			internal IEnumerator <FromCoroutine>b__0(IObserver<Unit> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADC8", Offset = "0x12AADC8")]
		private sealed class <>c__DisplayClass280_0
		{
			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerator> coroutine;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool publishEveryYield;

			[Token(Token = "0x600182B")]
			[Address(RVA = "0x213EE74", Offset = "0x213EE74", VA = "0x213EE74")]
			public <>c__DisplayClass280_0()
			{
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0x2140D30", Offset = "0x2140D30", VA = "0x2140D30")]
			internal IEnumerator <FromMicroCoroutine>b__0(IObserver<Unit> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADD8", Offset = "0x12AADD8")]
		private sealed class <>c__DisplayClass281_0
		{
			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<CancellationToken, IEnumerator> coroutine;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool publishEveryYield;

			[Token(Token = "0x600182D")]
			[Address(RVA = "0x213EF64", Offset = "0x213EF64", VA = "0x213EF64")]
			public <>c__DisplayClass281_0()
			{
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0x2140DDC", Offset = "0x2140DDC", VA = "0x2140DDC")]
			internal IEnumerator <FromMicroCoroutine>b__0(IObserver<Unit> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADE8", Offset = "0x12AADE8")]
		private sealed class <WrapEnumerator>d__282 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator enumerator;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool publishEveryYield;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <hasNext>5__2;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool <raisedError>5__3;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ICustomYieldInstructionErrorHandler <customHandler>5__4;

			[Token(Token = "0x170002AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001832")]
				[Address(RVA = "0x21423D4", Offset = "0x21423D4", VA = "0x21423D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001834")]
				[Address(RVA = "0x214243C", Offset = "0x214243C", VA = "0x214243C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0x213F004", Offset = "0x213F004", VA = "0x213F004")]
			[DebuggerHidden]
			public <WrapEnumerator>d__282(int <>1__state)
			{
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0x21418C8", Offset = "0x21418C8", VA = "0x21418C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x21418CC", Offset = "0x21418CC", VA = "0x21418CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x21423DC", Offset = "0x21423DC", VA = "0x21423DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AADF8", Offset = "0x12AADF8")]
		private sealed class <>c__DisplayClass283_0<T>
		{
			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerator> coroutine;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool nullAsNextUpdate;

			[Token(Token = "0x6001835")]
			public <>c__DisplayClass283_0()
			{
			}

			[Token(Token = "0x6001836")]
			internal IEnumerator <FromCoroutineValue>b__0(IObserver<T> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE08", Offset = "0x12AAE08")]
		private sealed class <>c__DisplayClass284_0<T>
		{
			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<CancellationToken, IEnumerator> coroutine;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool nullAsNextUpdate;

			[Token(Token = "0x6001837")]
			public <>c__DisplayClass284_0()
			{
			}

			[Token(Token = "0x6001838")]
			internal IEnumerator <FromCoroutineValue>b__0(IObserver<T> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE18", Offset = "0x12AAE18")]
		private sealed class <WrapEnumeratorYieldValue>d__285<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator enumerator;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool nullAsNextUpdate;

			[Token(Token = "0x4000C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <hasNext>5__2;

			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <current>5__3;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <raisedError>5__4;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ICustomYieldInstructionErrorHandler <customHandler>5__5;

			[Token(Token = "0x170002AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001839")]
			[DebuggerHidden]
			public <WrapEnumeratorYieldValue>d__285(int <>1__state)
			{
			}

			[Token(Token = "0x600183A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE28", Offset = "0x12AAE28")]
		private sealed class <>c__DisplayClass286_0<T>
		{
			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IObserver<T>, IEnumerator> coroutine;

			[Token(Token = "0x600183F")]
			public <>c__DisplayClass286_0()
			{
			}

			[Token(Token = "0x6001840")]
			internal IEnumerator <FromCoroutine>b__0(IObserver<T> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE38", Offset = "0x12AAE38")]
		private sealed class <>c__DisplayClass287_0<T>
		{
			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IObserver<T>, IEnumerator> coroutine;

			[Token(Token = "0x6001841")]
			public <>c__DisplayClass287_0()
			{
			}

			[Token(Token = "0x6001842")]
			internal IEnumerator <FromMicroCoroutine>b__0(IObserver<T> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE48", Offset = "0x12AAE48")]
		private sealed class <WrapToCancellableEnumerator>d__288 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator enumerator;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <hasNext>5__2;

			[Token(Token = "0x170002B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001846")]
				[Address(RVA = "0x2142714", Offset = "0x2142714", VA = "0x2142714", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001848")]
				[Address(RVA = "0x214277C", Offset = "0x214277C", VA = "0x214277C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001843")]
			[Address(RVA = "0x213F0AC", Offset = "0x213F0AC", VA = "0x213F0AC")]
			[DebuggerHidden]
			public <WrapToCancellableEnumerator>d__288(int <>1__state)
			{
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0x2142444", Offset = "0x2142444", VA = "0x2142444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001845")]
			[Address(RVA = "0x2142448", Offset = "0x2142448", VA = "0x2142448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001847")]
			[Address(RVA = "0x214271C", Offset = "0x214271C", VA = "0x214271C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE58", Offset = "0x12AAE58")]
		private sealed class <>c__DisplayClass291_0<T>
		{
			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator coroutine;

			[Token(Token = "0x6001849")]
			public <>c__DisplayClass291_0()
			{
			}

			[Token(Token = "0x600184A")]
			internal IEnumerator <SelectMany>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE68", Offset = "0x12AAE68")]
		private sealed class <>c__DisplayClass292_0<T>
		{
			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerator> selector;

			[Token(Token = "0x600184B")]
			public <>c__DisplayClass292_0()
			{
			}

			[Token(Token = "0x600184C")]
			internal IEnumerator <SelectMany>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE78", Offset = "0x12AAE78")]
		private sealed class <>c__DisplayClass293_0<T>
		{
			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerator> selector;

			[Token(Token = "0x600184D")]
			public <>c__DisplayClass293_0()
			{
			}

			[Token(Token = "0x600184E")]
			internal IObservable<Unit> <SelectMany>b__0(T x)
			{
				return null;
			}
		}

		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE88", Offset = "0x12AAE88")]
		private sealed class <>c__DisplayClass293_1<T>
		{
			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T x;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass293_0<T> CS$<>8__locals1;

			[Token(Token = "0x600184F")]
			public <>c__DisplayClass293_1()
			{
			}

			[Token(Token = "0x6001850")]
			internal IEnumerator <SelectMany>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAE98", Offset = "0x12AAE98")]
		private sealed class <>c__DisplayClass294_0
		{
			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IEnumerator coroutine;

			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool publishEveryYield;

			[Token(Token = "0x6001851")]
			[Address(RVA = "0x213F1B8", Offset = "0x213F1B8", VA = "0x213F1B8")]
			public <>c__DisplayClass294_0()
			{
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0x2140E8C", Offset = "0x2140E8C", VA = "0x2140E8C")]
			internal IEnumerator <ToObservable>b__0(IObserver<Unit> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAEA8", Offset = "0x12AAEA8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IObserver<long>, CancellationToken, IEnumerator> <>9__299_0;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IObserver<long>, CancellationToken, IEnumerator> <>9__300_0;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IObserver<long>, CancellationToken, IEnumerator> <>9__301_0;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<long, Unit, long> <>9__303_0;

			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<long, Unit, long> <>9__304_0;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<IObserver<long>, CancellationToken, IEnumerator> <>9__305_0;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<IObserver<Unit>, CancellationToken, IEnumerator> <>9__306_0;

			[Token(Token = "0x6001854")]
			[Address(RVA = "0x214054C", Offset = "0x214054C", VA = "0x214054C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0x2140554", Offset = "0x2140554", VA = "0x2140554")]
			internal IEnumerator <EveryUpdate>b__299_0(IObserver<long> observer, CancellationToken cancellationToken)
			{
				return null;
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0x21405C8", Offset = "0x21405C8", VA = "0x21405C8")]
			internal IEnumerator <EveryFixedUpdate>b__300_0(IObserver<long> observer, CancellationToken cancellationToken)
			{
				return null;
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0x214063C", Offset = "0x214063C", VA = "0x214063C")]
			internal IEnumerator <EveryEndOfFrame>b__301_0(IObserver<long> observer, CancellationToken cancellationToken)
			{
				return null;
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0x21406B0", Offset = "0x21406B0", VA = "0x21406B0")]
			internal long <EveryGameObjectUpdate>b__303_0(long x, Unit y)
			{
				return default(long);
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0x21406B8", Offset = "0x21406B8", VA = "0x21406B8")]
			internal long <EveryLateUpdate>b__304_0(long x, Unit y)
			{
				return default(long);
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0x21406C0", Offset = "0x21406C0", VA = "0x21406C0")]
			internal IEnumerator <EveryAfterUpdate>b__305_0(IObserver<long> observer, CancellationToken cancellationToken)
			{
				return null;
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0x2140778", Offset = "0x2140778", VA = "0x2140778")]
			internal IEnumerator <NextFrame>b__306_0(IObserver<Unit> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAEB8", Offset = "0x12AAEB8")]
		private sealed class <EveryCycleCore>d__302 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IObserver<long> observer;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <count>5__2;

			[Token(Token = "0x170002B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0x2141148", Offset = "0x2141148", VA = "0x2141148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001861")]
				[Address(RVA = "0x21411B0", Offset = "0x21411B0", VA = "0x21411B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0x213F664", Offset = "0x213F664", VA = "0x213F664")]
			[DebuggerHidden]
			public <EveryCycleCore>d__302(int <>1__state)
			{
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0x214101C", Offset = "0x214101C", VA = "0x214101C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0x2141020", Offset = "0x2141020", VA = "0x2141020", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0x2141150", Offset = "0x2141150", VA = "0x2141150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAEC8", Offset = "0x12AAEC8")]
		private sealed class <NextFrameCore>d__307 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken cancellation;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IObserver<Unit> observer;

			[Token(Token = "0x170002B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001865")]
				[Address(RVA = "0x214138C", Offset = "0x214138C", VA = "0x214138C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001867")]
				[Address(RVA = "0x21413F4", Offset = "0x21413F4", VA = "0x21413F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0x213FB94", Offset = "0x213FB94", VA = "0x213FB94")]
			[DebuggerHidden]
			public <NextFrameCore>d__307(int <>1__state)
			{
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0x21411B8", Offset = "0x21411B8", VA = "0x21411B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0x21411BC", Offset = "0x21411BC", VA = "0x21411BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001866")]
			[Address(RVA = "0x2141394", Offset = "0x2141394", VA = "0x2141394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAED8", Offset = "0x12AAED8")]
		private sealed class <>c__DisplayClass309_0
		{
			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int dueTimeFrameCount;

			[Token(Token = "0x6001868")]
			[Address(RVA = "0x213FDF4", Offset = "0x213FDF4", VA = "0x213FDF4")]
			public <>c__DisplayClass309_0()
			{
			}

			[Token(Token = "0x6001869")]
			[Address(RVA = "0x2140F18", Offset = "0x2140F18", VA = "0x2140F18")]
			internal IEnumerator <TimerFrame>b__0(IObserver<long> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAEE8", Offset = "0x12AAEE8")]
		private sealed class <>c__DisplayClass310_0
		{
			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int dueTimeFrameCount;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int periodFrameCount;

			[Token(Token = "0x600186A")]
			[Address(RVA = "0x213FDFC", Offset = "0x213FDFC", VA = "0x213FDFC")]
			public <>c__DisplayClass310_0()
			{
			}

			[Token(Token = "0x600186B")]
			[Address(RVA = "0x2140F98", Offset = "0x2140F98", VA = "0x2140F98")]
			internal IEnumerator <TimerFrame>b__0(IObserver<long> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAEF8", Offset = "0x12AAEF8")]
		private sealed class <TimerFrameCore>d__311 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int dueTimeFrameCount;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IObserver<long> observer;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancel;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <currentFrame>5__2;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600186F")]
				[Address(RVA = "0x21415A0", Offset = "0x21415A0", VA = "0x21415A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001871")]
				[Address(RVA = "0x2141608", Offset = "0x2141608", VA = "0x2141608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600186C")]
			[Address(RVA = "0x213FE88", Offset = "0x213FE88", VA = "0x213FE88")]
			[DebuggerHidden]
			public <TimerFrameCore>d__311(int <>1__state)
			{
			}

			[Token(Token = "0x600186D")]
			[Address(RVA = "0x21413FC", Offset = "0x21413FC", VA = "0x21413FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600186E")]
			[Address(RVA = "0x2141400", Offset = "0x2141400", VA = "0x2141400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001870")]
			[Address(RVA = "0x21415A8", Offset = "0x21415A8", VA = "0x21415A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAF08", Offset = "0x12AAF08")]
		private sealed class <TimerFrameCore>d__312 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int dueTimeFrameCount;

			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int periodFrameCount;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IObserver<long> observer;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancel;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private long <sendCount>5__2;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <currentFrame>5__3;

			[Token(Token = "0x170002B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001875")]
				[Address(RVA = "0x2141858", Offset = "0x2141858", VA = "0x2141858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001877")]
				[Address(RVA = "0x21418C0", Offset = "0x21418C0", VA = "0x21418C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001872")]
			[Address(RVA = "0x213FF44", Offset = "0x213FF44", VA = "0x213FF44")]
			[DebuggerHidden]
			public <TimerFrameCore>d__312(int <>1__state)
			{
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x2141610", Offset = "0x2141610", VA = "0x2141610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001874")]
			[Address(RVA = "0x2141614", Offset = "0x2141614", VA = "0x2141614", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001876")]
			[Address(RVA = "0x2141860", Offset = "0x2141860", VA = "0x2141860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAF18", Offset = "0x12AAF18")]
		private sealed class <ToAwaitableEnumerator>d__327<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObservable<T> source;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancel;

			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onResult;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onError;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ObservableYieldInstruction<T> <enumerator>5__2;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <e>5__3;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600187B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001878")]
			[DebuggerHidden]
			public <ToAwaitableEnumerator>d__327(int <>1__state)
			{
			}

			[Token(Token = "0x6001879")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAF28", Offset = "0x12AAF28")]
		private sealed class <>c__333<T>
		{
			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__333<T> <>9;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, IObservable<long>> <>9__333_0;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, long, T> <>9__333_1;

			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, IObservable<long>> <>9__333_2;

			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, long, T> <>9__333_3;

			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, IObservable<Unit>> <>9__333_4;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, Unit, T> <>9__333_5;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, IObservable<Unit>> <>9__333_6;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, Unit, T> <>9__333_7;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, IObservable<long>> <>9__333_8;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, long, T> <>9__333_9;

			[Token(Token = "0x600187F")]
			public <>c__333()
			{
			}

			[Token(Token = "0x6001880")]
			internal IObservable<long> <ObserveOnMainThread>b__333_0(T _)
			{
				return null;
			}

			[Token(Token = "0x6001881")]
			internal T <ObserveOnMainThread>b__333_1(T x, long _)
			{
				return (T)null;
			}

			[Token(Token = "0x6001882")]
			internal IObservable<long> <ObserveOnMainThread>b__333_2(T _)
			{
				return null;
			}

			[Token(Token = "0x6001883")]
			internal T <ObserveOnMainThread>b__333_3(T x, long _)
			{
				return (T)null;
			}

			[Token(Token = "0x6001884")]
			internal IObservable<Unit> <ObserveOnMainThread>b__333_4(T _)
			{
				return null;
			}

			[Token(Token = "0x6001885")]
			internal T <ObserveOnMainThread>b__333_5(T x, Unit _)
			{
				return (T)null;
			}

			[Token(Token = "0x6001886")]
			internal IObservable<Unit> <ObserveOnMainThread>b__333_6(T _)
			{
				return null;
			}

			[Token(Token = "0x6001887")]
			internal T <ObserveOnMainThread>b__333_7(T x, Unit _)
			{
				return (T)null;
			}

			[Token(Token = "0x6001888")]
			internal IObservable<long> <ObserveOnMainThread>b__333_8(T _)
			{
				return null;
			}

			[Token(Token = "0x6001889")]
			internal T <ObserveOnMainThread>b__333_9(T x, long _)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan InfiniteTimeSpan;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly HashSet<Type> YieldInstructionTypes;

		[Token(Token = "0x600065D")]
		private static IObservable<T> AddRef<T>(IObservable<T> xs, RefCountDisposable r)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		public static IObservable<TSource> Scan<TSource>(this IObservable<TSource> source, Func<TSource, TSource, TSource> accumulator)
		{
			return null;
		}

		[Token(Token = "0x600065F")]
		public static IObservable<TAccumulate> Scan<TSource, TAccumulate>(this IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		public static IObservable<TSource> Aggregate<TSource>(this IObservable<TSource> source, Func<TSource, TSource, TSource> accumulator)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		public static IObservable<TAccumulate> Aggregate<TSource, TAccumulate>(this IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator)
		{
			return null;
		}

		[Token(Token = "0x6000662")]
		public static IObservable<TResult> Aggregate<TSource, TAccumulate, TResult>(this IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator, Func<TAccumulate, TResult> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		public static IConnectableObservable<T> Multicast<T>(this IObservable<T> source, ISubject<T> subject)
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		public static IConnectableObservable<T> Publish<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		public static IConnectableObservable<T> Publish<T>(this IObservable<T> source, T initialValue)
		{
			return null;
		}

		[Token(Token = "0x6000666")]
		public static IConnectableObservable<T> PublishLast<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000667")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000668")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000669")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, int bufferSize)
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, int bufferSize, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, TimeSpan window)
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, TimeSpan window, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600066D")]
		public static IConnectableObservable<T> Replay<T>(this IObservable<T> source, int bufferSize, TimeSpan window, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600066E")]
		public static IObservable<T> RefCount<T>(this IConnectableObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600066F")]
		public static IObservable<T> Share<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000670")]
		public static T Wait<T>(this IObservable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x6000671")]
		public static T Wait<T>(this IObservable<T> source, TimeSpan timeout)
		{
			return (T)null;
		}

		[Token(Token = "0x6000672")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B67E8", Offset = "0x12B67E8")]
		private static IEnumerable<IObservable<T>> CombineSources<T>(IObservable<T> first, IObservable<T>[] seconds)
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		public static IObservable<TSource> Concat<TSource>(params IObservable<TSource>[] sources)
		{
			return null;
		}

		[Token(Token = "0x6000674")]
		public static IObservable<TSource> Concat<TSource>(this IEnumerable<IObservable<TSource>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		public static IObservable<TSource> Concat<TSource>(this IObservable<IObservable<TSource>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000676")]
		public static IObservable<TSource> Concat<TSource>(this IObservable<TSource> first, params IObservable<TSource>[] seconds)
		{
			return null;
		}

		[Token(Token = "0x6000677")]
		public static IObservable<TSource> Merge<TSource>(this IEnumerable<IObservable<TSource>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000678")]
		public static IObservable<TSource> Merge<TSource>(this IEnumerable<IObservable<TSource>> sources, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000679")]
		public static IObservable<TSource> Merge<TSource>(this IEnumerable<IObservable<TSource>> sources, int maxConcurrent)
		{
			return null;
		}

		[Token(Token = "0x600067A")]
		public static IObservable<TSource> Merge<TSource>(this IEnumerable<IObservable<TSource>> sources, int maxConcurrent, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		public static IObservable<TSource> Merge<TSource>(params IObservable<TSource>[] sources)
		{
			return null;
		}

		[Token(Token = "0x600067C")]
		public static IObservable<TSource> Merge<TSource>(IScheduler scheduler, params IObservable<TSource>[] sources)
		{
			return null;
		}

		[Token(Token = "0x600067D")]
		public static IObservable<T> Merge<T>(this IObservable<T> first, params IObservable<T>[] seconds)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		public static IObservable<T> Merge<T>(this IObservable<T> first, IObservable<T> second, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		public static IObservable<T> Merge<T>(this IObservable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		public static IObservable<T> Merge<T>(this IObservable<IObservable<T>> sources, int maxConcurrent)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		public static IObservable<TResult> Zip<TLeft, TRight, TResult>(this IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x6000682")]
		public static IObservable<IList<T>> Zip<T>(this IEnumerable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000683")]
		public static IObservable<IList<T>> Zip<T>(params IObservable<T>[] sources)
		{
			return null;
		}

		[Token(Token = "0x6000684")]
		public static IObservable<TR> Zip<T1, T2, T3, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, ZipFunc<T1, T2, T3, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		public static IObservable<TR> Zip<T1, T2, T3, T4, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, ZipFunc<T1, T2, T3, T4, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		public static IObservable<TR> Zip<T1, T2, T3, T4, T5, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, ZipFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		public static IObservable<TR> Zip<T1, T2, T3, T4, T5, T6, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, ZipFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000688")]
		public static IObservable<TR> Zip<T1, T2, T3, T4, T5, T6, T7, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, ZipFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000689")]
		public static IObservable<TResult> CombineLatest<TLeft, TRight, TResult>(this IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x600068A")]
		public static IObservable<IList<T>> CombineLatest<T>(this IEnumerable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		public static IObservable<IList<TSource>> CombineLatest<TSource>(params IObservable<TSource>[] sources)
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		public static IObservable<TR> CombineLatest<T1, T2, T3, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, CombineLatestFunc<T1, T2, T3, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		public static IObservable<TR> CombineLatest<T1, T2, T3, T4, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, CombineLatestFunc<T1, T2, T3, T4, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		public static IObservable<TR> CombineLatest<T1, T2, T3, T4, T5, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, CombineLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		public static IObservable<TR> CombineLatest<T1, T2, T3, T4, T5, T6, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, CombineLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000690")]
		public static IObservable<TR> CombineLatest<T1, T2, T3, T4, T5, T6, T7, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, CombineLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		public static IObservable<TResult> ZipLatest<TLeft, TRight, TResult>(this IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x6000692")]
		public static IObservable<IList<T>> ZipLatest<T>(this IEnumerable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		public static IObservable<IList<TSource>> ZipLatest<TSource>(params IObservable<TSource>[] sources)
		{
			return null;
		}

		[Token(Token = "0x6000694")]
		public static IObservable<TR> ZipLatest<T1, T2, T3, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, ZipLatestFunc<T1, T2, T3, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000695")]
		public static IObservable<TR> ZipLatest<T1, T2, T3, T4, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, ZipLatestFunc<T1, T2, T3, T4, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		public static IObservable<TR> ZipLatest<T1, T2, T3, T4, T5, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, ZipLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000697")]
		public static IObservable<TR> ZipLatest<T1, T2, T3, T4, T5, T6, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, ZipLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000698")]
		public static IObservable<TR> ZipLatest<T1, T2, T3, T4, T5, T6, T7, TR>(this IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, ZipLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000699")]
		public static IObservable<T> Switch<T>(this IObservable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x600069A")]
		public static IObservable<TResult> WithLatestFrom<TLeft, TRight, TResult>(this IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
			return null;
		}

		[Token(Token = "0x600069B")]
		public static IObservable<T[]> WhenAll<T>(params IObservable<T>[] sources)
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x213DCE4", Offset = "0x213DCE4", VA = "0x213DCE4")]
		public static IObservable<Unit> WhenAll(params IObservable<Unit>[] sources)
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		public static IObservable<T[]> WhenAll<T>(this IEnumerable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x213DDCC", Offset = "0x213DDCC", VA = "0x213DDCC")]
		public static IObservable<Unit> WhenAll(this IEnumerable<IObservable<Unit>> sources)
		{
			return null;
		}

		[Token(Token = "0x600069F")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, T value)
		{
			return null;
		}

		[Token(Token = "0x60006A0")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, Func<T> valueFactory)
		{
			return null;
		}

		[Token(Token = "0x60006A1")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, params T[] values)
		{
			return null;
		}

		[Token(Token = "0x60006A2")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, IEnumerable<T> values)
		{
			return null;
		}

		[Token(Token = "0x60006A3")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, IScheduler scheduler, T value)
		{
			return null;
		}

		[Token(Token = "0x60006A4")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, IScheduler scheduler, IEnumerable<T> values)
		{
			return null;
		}

		[Token(Token = "0x60006A5")]
		public static IObservable<T> StartWith<T>(this IObservable<T> source, IScheduler scheduler, params T[] values)
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		public static IObservable<T> Synchronize<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006A7")]
		public static IObservable<T> Synchronize<T>(this IObservable<T> source, object gate)
		{
			return null;
		}

		[Token(Token = "0x60006A8")]
		public static IObservable<T> ObserveOn<T>(this IObservable<T> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006A9")]
		public static IObservable<T> SubscribeOn<T>(this IObservable<T> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006AA")]
		public static IObservable<T> DelaySubscription<T>(this IObservable<T> source, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x60006AB")]
		public static IObservable<T> DelaySubscription<T>(this IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006AC")]
		public static IObservable<T> DelaySubscription<T>(this IObservable<T> source, DateTimeOffset dueTime)
		{
			return null;
		}

		[Token(Token = "0x60006AD")]
		public static IObservable<T> DelaySubscription<T>(this IObservable<T> source, DateTimeOffset dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		public static IObservable<T> Amb<T>(params IObservable<T>[] sources)
		{
			return null;
		}

		[Token(Token = "0x60006AF")]
		public static IObservable<T> Amb<T>(IEnumerable<IObservable<T>> sources)
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		public static IObservable<T> Amb<T>(this IObservable<T> source, IObservable<T> second)
		{
			return null;
		}

		[Token(Token = "0x60006B1")]
		public static IObservable<T> AsObservable<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006B2")]
		public static IObservable<T> ToObservable<T>(this IEnumerable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006B3")]
		public static IObservable<T> ToObservable<T>(this IEnumerable<T> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006B4")]
		public static IObservable<TResult> Cast<TSource, TResult>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60006B5")]
		public static IObservable<TResult> Cast<TSource, TResult>(this IObservable<TSource> source, TResult witness)
		{
			return null;
		}

		[Token(Token = "0x60006B6")]
		public static IObservable<TResult> OfType<TSource, TResult>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		public static IObservable<TResult> OfType<TSource, TResult>(this IObservable<TSource> source, TResult witness)
		{
			return null;
		}

		[Token(Token = "0x60006B8")]
		public static IObservable<Unit> AsUnitObservable<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006B9")]
		public static IObservable<Unit> AsSingleUnitObservable<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006BA")]
		public static IObservable<T> Create<T>(Func<IObserver<T>, IDisposable> subscribe)
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		public static IObservable<T> Create<T>(Func<IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
			return null;
		}

		[Token(Token = "0x60006BC")]
		public static IObservable<T> CreateWithState<T, TState>(TState state, Func<TState, IObserver<T>, IDisposable> subscribe)
		{
			return null;
		}

		[Token(Token = "0x60006BD")]
		public static IObservable<T> CreateWithState<T, TState>(TState state, Func<TState, IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
			return null;
		}

		[Token(Token = "0x60006BE")]
		public static IObservable<T> CreateSafe<T>(Func<IObserver<T>, IDisposable> subscribe)
		{
			return null;
		}

		[Token(Token = "0x60006BF")]
		public static IObservable<T> CreateSafe<T>(Func<IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
			return null;
		}

		[Token(Token = "0x60006C0")]
		public static IObservable<T> Empty<T>()
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		public static IObservable<T> Empty<T>(IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006C2")]
		public static IObservable<T> Empty<T>(T witness)
		{
			return null;
		}

		[Token(Token = "0x60006C3")]
		public static IObservable<T> Empty<T>(IScheduler scheduler, T witness)
		{
			return null;
		}

		[Token(Token = "0x60006C4")]
		public static IObservable<T> Never<T>()
		{
			return null;
		}

		[Token(Token = "0x60006C5")]
		public static IObservable<T> Never<T>(T witness)
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		public static IObservable<T> Return<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		public static IObservable<T> Return<T>(T value, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x213DE7C", Offset = "0x213DE7C", VA = "0x213DE7C")]
		public static IObservable<Unit> Return(Unit value)
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x213DEE4", Offset = "0x213DEE4", VA = "0x213DEE4")]
		public static IObservable<bool> Return(bool value)
		{
			return null;
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x213DF60", Offset = "0x213DF60", VA = "0x213DF60")]
		public static IObservable<Unit> ReturnUnit()
		{
			return null;
		}

		[Token(Token = "0x60006CB")]
		public static IObservable<T> Throw<T>(Exception error)
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		public static IObservable<T> Throw<T>(Exception error, T witness)
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		public static IObservable<T> Throw<T>(Exception error, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		public static IObservable<T> Throw<T>(Exception error, IScheduler scheduler, T witness)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x21348BC", Offset = "0x21348BC", VA = "0x21348BC")]
		public static IObservable<int> Range(int start, int count)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x213DFC8", Offset = "0x213DFC8", VA = "0x213DFC8")]
		public static IObservable<int> Range(int start, int count, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		public static IObservable<T> Repeat<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60006D2")]
		public static IObservable<T> Repeat<T>(T value, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		public static IObservable<T> Repeat<T>(T value, int repeatCount)
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		public static IObservable<T> Repeat<T>(T value, int repeatCount, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		public static IObservable<T> Repeat<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B6C2C", Offset = "0x12B6C2C")]
		private static IEnumerable<IObservable<T>> RepeatInfinite<T>(IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006D7")]
		public static IObservable<T> RepeatSafe<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		public static IObservable<T> Defer<T>(Func<IObservable<T>> observableFactory)
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		public static IObservable<T> Start<T>(Func<T> function)
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		public static IObservable<T> Start<T>(Func<T> function, TimeSpan timeSpan)
		{
			return null;
		}

		[Token(Token = "0x60006DB")]
		public static IObservable<T> Start<T>(Func<T> function, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		public static IObservable<T> Start<T>(Func<T> function, TimeSpan timeSpan, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x213E12C", Offset = "0x213E12C", VA = "0x213E12C")]
		public static IObservable<Unit> Start(Action action)
		{
			return null;
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x213E1BC", Offset = "0x213E1BC", VA = "0x213E1BC")]
		public static IObservable<Unit> Start(Action action, TimeSpan timeSpan)
		{
			return null;
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x213E270", Offset = "0x213E270", VA = "0x213E270")]
		public static IObservable<Unit> Start(Action action, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x213E2F4", Offset = "0x213E2F4", VA = "0x213E2F4")]
		public static IObservable<Unit> Start(Action action, TimeSpan timeSpan, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		public static Func<IObservable<T>> ToAsync<T>(Func<T> function)
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		public static Func<IObservable<T>> ToAsync<T>(Func<T> function, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x213E39C", Offset = "0x213E39C", VA = "0x213E39C")]
		public static Func<IObservable<Unit>> ToAsync(Action action)
		{
			return null;
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x213E414", Offset = "0x213E414", VA = "0x213E414")]
		public static Func<IObservable<Unit>> ToAsync(Action action, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		public static IObservable<T> Finally<T>(this IObservable<T> source, Action finallyAction)
		{
			return null;
		}

		[Token(Token = "0x60006E6")]
		public static IObservable<T> Catch<T, TException>(this IObservable<T> source, Func<TException, IObservable<T>> errorHandler) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006E7")]
		public static IObservable<TSource> Catch<TSource>(this IEnumerable<IObservable<TSource>> sources)
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		public static IObservable<TSource> CatchIgnore<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60006E9")]
		public static IObservable<TSource> CatchIgnore<TSource, TException>(this IObservable<TSource> source, Action<TException> errorAction) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006EA")]
		public static IObservable<TSource> Retry<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		public static IObservable<TSource> Retry<TSource>(this IObservable<TSource> source, int retryCount)
		{
			return null;
		}

		[Token(Token = "0x60006EC")]
		public static IObservable<TSource> OnErrorRetry<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60006ED")]
		public static IObservable<TSource> OnErrorRetry<TSource, TException>(this IObservable<TSource> source, Action<TException> onError) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006EE")]
		public static IObservable<TSource> OnErrorRetry<TSource, TException>(this IObservable<TSource> source, Action<TException> onError, TimeSpan delay) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006EF")]
		public static IObservable<TSource> OnErrorRetry<TSource, TException>(this IObservable<TSource> source, Action<TException> onError, int retryCount) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006F0")]
		public static IObservable<TSource> OnErrorRetry<TSource, TException>(this IObservable<TSource> source, Action<TException> onError, int retryCount, TimeSpan delay) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006F1")]
		public static IObservable<TSource> OnErrorRetry<TSource, TException>(this IObservable<TSource> source, Action<TException> onError, int retryCount, TimeSpan delay, IScheduler delayScheduler) where TException : Exception
		{
			return null;
		}

		[Token(Token = "0x60006F2")]
		public static IObservable<EventPattern<TEventArgs>> FromEventPattern<TDelegate, TEventArgs>(Func<EventHandler<TEventArgs>, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler) where TEventArgs : EventArgs
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		public static IObservable<Unit> FromEvent<TDelegate>(Func<Action, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		public static IObservable<TEventArgs> FromEvent<TDelegate, TEventArgs>(Func<Action<TEventArgs>, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler)
		{
			return null;
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x213E4C8", Offset = "0x213E4C8", VA = "0x213E4C8")]
		public static IObservable<Unit> FromEvent(Action<Action> addHandler, Action<Action> removeHandler)
		{
			return null;
		}

		[Token(Token = "0x60006F6")]
		public static IObservable<T> FromEvent<T>(Action<Action<T>> addHandler, Action<Action<T>> removeHandler)
		{
			return null;
		}

		[Token(Token = "0x60006F7")]
		public static Func<IObservable<TResult>> FromAsyncPattern<TResult>(Func<AsyncCallback, object, IAsyncResult> begin, Func<IAsyncResult, TResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006F8")]
		public static Func<T1, IObservable<TResult>> FromAsyncPattern<T1, TResult>(Func<T1, AsyncCallback, object, IAsyncResult> begin, Func<IAsyncResult, TResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		public static Func<T1, T2, IObservable<TResult>> FromAsyncPattern<T1, T2, TResult>(Func<T1, T2, AsyncCallback, object, IAsyncResult> begin, Func<IAsyncResult, TResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x213E5A4", Offset = "0x213E5A4", VA = "0x213E5A4")]
		public static Func<IObservable<Unit>> FromAsyncPattern(Func<AsyncCallback, object, IAsyncResult> begin, Action<IAsyncResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		public static Func<T1, IObservable<Unit>> FromAsyncPattern<T1>(Func<T1, AsyncCallback, object, IAsyncResult> begin, Action<IAsyncResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		public static Func<T1, T2, IObservable<Unit>> FromAsyncPattern<T1, T2>(Func<T1, T2, AsyncCallback, object, IAsyncResult> begin, Action<IAsyncResult> end)
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		public static IObservable<T> Take<T>(this IObservable<T> source, int count)
		{
			return null;
		}

		[Token(Token = "0x60006FE")]
		public static IObservable<T> Take<T>(this IObservable<T> source, TimeSpan duration)
		{
			return null;
		}

		[Token(Token = "0x60006FF")]
		public static IObservable<T> Take<T>(this IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		public static IObservable<T> TakeWhile<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		public static IObservable<T> TakeWhile<T>(this IObservable<T> source, Func<T, int, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		public static IObservable<T> TakeUntil<T, TOther>(this IObservable<T> source, IObservable<TOther> other)
		{
			return null;
		}

		[Token(Token = "0x6000703")]
		public static IObservable<T> TakeLast<T>(this IObservable<T> source, int count)
		{
			return null;
		}

		[Token(Token = "0x6000704")]
		public static IObservable<T> TakeLast<T>(this IObservable<T> source, TimeSpan duration)
		{
			return null;
		}

		[Token(Token = "0x6000705")]
		public static IObservable<T> TakeLast<T>(this IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000706")]
		public static IObservable<T> Skip<T>(this IObservable<T> source, int count)
		{
			return null;
		}

		[Token(Token = "0x6000707")]
		public static IObservable<T> Skip<T>(this IObservable<T> source, TimeSpan duration)
		{
			return null;
		}

		[Token(Token = "0x6000708")]
		public static IObservable<T> Skip<T>(this IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000709")]
		public static IObservable<T> SkipWhile<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x600070A")]
		public static IObservable<T> SkipWhile<T>(this IObservable<T> source, Func<T, int, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x600070B")]
		public static IObservable<T> SkipUntil<T, TOther>(this IObservable<T> source, IObservable<TOther> other)
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, int count)
		{
			return null;
		}

		[Token(Token = "0x600070D")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, int count, int skip)
		{
			return null;
		}

		[Token(Token = "0x600070E")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan)
		{
			return null;
		}

		[Token(Token = "0x600070F")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000710")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan, int count)
		{
			return null;
		}

		[Token(Token = "0x6000711")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan, int count, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan, TimeSpan timeShift)
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		public static IObservable<IList<T>> Buffer<T>(this IObservable<T> source, TimeSpan timeSpan, TimeSpan timeShift, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000714")]
		public static IObservable<IList<TSource>> Buffer<TSource, TWindowBoundary>(this IObservable<TSource> source, IObservable<TWindowBoundary> windowBoundaries)
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		public static IObservable<Pair<T>> Pairwise<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000716")]
		public static IObservable<TR> Pairwise<T, TR>(this IObservable<T> source, Func<T, T, TR> selector)
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		public static IObservable<T> Last<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		public static IObservable<T> Last<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		public static IObservable<T> LastOrDefault<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		public static IObservable<T> LastOrDefault<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x600071B")]
		public static IObservable<T> First<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600071C")]
		public static IObservable<T> First<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x600071D")]
		public static IObservable<T> FirstOrDefault<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600071E")]
		public static IObservable<T> FirstOrDefault<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x600071F")]
		public static IObservable<T> Single<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000720")]
		public static IObservable<T> Single<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		public static IObservable<T> SingleOrDefault<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000722")]
		public static IObservable<T> SingleOrDefault<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		public static IObservable<IGroupedObservable<TKey, TSource>> GroupBy<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector)
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		public static IObservable<IGroupedObservable<TKey, TSource>> GroupBy<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		public static IObservable<IGroupedObservable<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		public static IObservable<IGroupedObservable<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		public static IObservable<IGroupedObservable<TKey, TSource>> GroupBy<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, int capacity)
		{
			return null;
		}

		[Token(Token = "0x6000728")]
		public static IObservable<IGroupedObservable<TKey, TSource>> GroupBy<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, int capacity, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x6000729")]
		public static IObservable<IGroupedObservable<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, int capacity)
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		public static IObservable<IGroupedObservable<TKey, TElement>> GroupBy<TSource, TKey, TElement>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, int capacity, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x2136D20", Offset = "0x2136D20", VA = "0x2136D20")]
		public static IObservable<long> Interval(TimeSpan period)
		{
			return null;
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x213E764", Offset = "0x213E764", VA = "0x213E764")]
		public static IObservable<long> Interval(TimeSpan period, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x2134E1C", Offset = "0x2134E1C", VA = "0x2134E1C")]
		public static IObservable<long> Timer(TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x213E7FC", Offset = "0x213E7FC", VA = "0x213E7FC")]
		public static IObservable<long> Timer(DateTimeOffset dueTime)
		{
			return null;
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x213E97C", Offset = "0x213E97C", VA = "0x213E97C")]
		public static IObservable<long> Timer(TimeSpan dueTime, TimeSpan period)
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x213EA24", Offset = "0x213EA24", VA = "0x213EA24")]
		public static IObservable<long> Timer(DateTimeOffset dueTime, TimeSpan period)
		{
			return null;
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x2134EA0", Offset = "0x2134EA0", VA = "0x2134EA0")]
		public static IObservable<long> Timer(TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x213EAD4", Offset = "0x213EAD4", VA = "0x213EAD4")]
		public static IObservable<long> Timer(DateTimeOffset dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x213EB54", Offset = "0x213EB54", VA = "0x213EB54")]
		public static IObservable<long> Timer(TimeSpan dueTime, TimeSpan period, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x213EBF0", Offset = "0x213EBF0", VA = "0x213EBF0")]
		public static IObservable<long> Timer(DateTimeOffset dueTime, TimeSpan period, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		public static IObservable<Timestamped<TSource>> Timestamp<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		public static IObservable<Timestamped<TSource>> Timestamp<TSource>(this IObservable<TSource> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		public static IObservable<TimeInterval<TSource>> TimeInterval<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		public static IObservable<TimeInterval<TSource>> TimeInterval<TSource>(this IObservable<TSource> source, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000739")]
		public static IObservable<T> Delay<T>(this IObservable<T> source, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x600073A")]
		public static IObservable<TSource> Delay<TSource>(this IObservable<TSource> source, TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600073B")]
		public static IObservable<T> Sample<T>(this IObservable<T> source, TimeSpan interval)
		{
			return null;
		}

		[Token(Token = "0x600073C")]
		public static IObservable<T> Sample<T>(this IObservable<T> source, TimeSpan interval, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600073D")]
		public static IObservable<TSource> Throttle<TSource>(this IObservable<TSource> source, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		public static IObservable<TSource> Throttle<TSource>(this IObservable<TSource> source, TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x600073F")]
		public static IObservable<TSource> ThrottleFirst<TSource>(this IObservable<TSource> source, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x6000740")]
		public static IObservable<TSource> ThrottleFirst<TSource>(this IObservable<TSource> source, TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000741")]
		public static IObservable<T> Timeout<T>(this IObservable<T> source, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		public static IObservable<T> Timeout<T>(this IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		public static IObservable<T> Timeout<T>(this IObservable<T> source, DateTimeOffset dueTime)
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		public static IObservable<T> Timeout<T>(this IObservable<T> source, DateTimeOffset dueTime, IScheduler scheduler)
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		public static IObservable<TR> Select<T, TR>(this IObservable<T> source, Func<T, TR> selector)
		{
			return null;
		}

		[Token(Token = "0x6000746")]
		public static IObservable<TR> Select<T, TR>(this IObservable<T> source, Func<T, int, TR> selector)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		public static IObservable<T> Where<T>(this IObservable<T> source, Func<T, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000748")]
		public static IObservable<T> Where<T>(this IObservable<T> source, Func<T, int, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000749")]
		public static IObservable<TR> ContinueWith<T, TR>(this IObservable<T> source, IObservable<TR> other)
		{
			return null;
		}

		[Token(Token = "0x600074A")]
		public static IObservable<TR> ContinueWith<T, TR>(this IObservable<T> source, Func<T, IObservable<TR>> selector)
		{
			return null;
		}

		[Token(Token = "0x600074B")]
		public static IObservable<TR> SelectMany<T, TR>(this IObservable<T> source, IObservable<TR> other)
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		public static IObservable<TR> SelectMany<T, TR>(this IObservable<T> source, Func<T, IObservable<TR>> selector)
		{
			return null;
		}

		[Token(Token = "0x600074D")]
		public static IObservable<TResult> SelectMany<TSource, TResult>(this IObservable<TSource> source, Func<TSource, int, IObservable<TResult>> selector)
		{
			return null;
		}

		[Token(Token = "0x600074E")]
		public static IObservable<TR> SelectMany<T, TC, TR>(this IObservable<T> source, Func<T, IObservable<TC>> collectionSelector, Func<T, TC, TR> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		public static IObservable<TResult> SelectMany<TSource, TCollection, TResult>(this IObservable<TSource> source, Func<TSource, int, IObservable<TCollection>> collectionSelector, Func<TSource, int, TCollection, int, TResult> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000750")]
		public static IObservable<TResult> SelectMany<TSource, TResult>(this IObservable<TSource> source, Func<TSource, IEnumerable<TResult>> selector)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		public static IObservable<TResult> SelectMany<TSource, TResult>(this IObservable<TSource> source, Func<TSource, int, IEnumerable<TResult>> selector)
		{
			return null;
		}

		[Token(Token = "0x6000752")]
		public static IObservable<TResult> SelectMany<TSource, TCollection, TResult>(this IObservable<TSource> source, Func<TSource, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		public static IObservable<TResult> SelectMany<TSource, TCollection, TResult>(this IObservable<TSource> source, Func<TSource, int, IEnumerable<TCollection>> collectionSelector, Func<TSource, int, TCollection, int, TResult> resultSelector)
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		public static IObservable<T[]> ToArray<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		public static IObservable<IList<T>> ToList<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000756")]
		public static IObservable<T> Do<T>(this IObservable<T> source, IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		public static IObservable<T> Do<T>(this IObservable<T> source, Action<T> onNext)
		{
			return null;
		}

		[Token(Token = "0x6000758")]
		public static IObservable<T> Do<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError)
		{
			return null;
		}

		[Token(Token = "0x6000759")]
		public static IObservable<T> Do<T>(this IObservable<T> source, Action<T> onNext, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		public static IObservable<T> Do<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		public static IObservable<T> DoOnError<T>(this IObservable<T> source, Action<Exception> onError)
		{
			return null;
		}

		[Token(Token = "0x600075C")]
		public static IObservable<T> DoOnCompleted<T>(this IObservable<T> source, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		public static IObservable<T> DoOnTerminate<T>(this IObservable<T> source, Action onTerminate)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		public static IObservable<T> DoOnSubscribe<T>(this IObservable<T> source, Action onSubscribe)
		{
			return null;
		}

		[Token(Token = "0x600075F")]
		public static IObservable<T> DoOnCancel<T>(this IObservable<T> source, Action onCancel)
		{
			return null;
		}

		[Token(Token = "0x6000760")]
		public static IObservable<Notification<T>> Materialize<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000761")]
		public static IObservable<T> Dematerialize<T>(this IObservable<Notification<T>> source)
		{
			return null;
		}

		[Token(Token = "0x6000762")]
		public static IObservable<T> DefaultIfEmpty<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		public static IObservable<T> DefaultIfEmpty<T>(this IObservable<T> source, T defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000764")]
		public static IObservable<TSource> Distinct<TSource>(this IObservable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x6000765")]
		public static IObservable<TSource> Distinct<TSource>(this IObservable<TSource> source, IEqualityComparer<TSource> comparer)
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		public static IObservable<TSource> Distinct<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		public static IObservable<TSource> Distinct<TSource, TKey>(this IObservable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x6000768")]
		public static IObservable<T> DistinctUntilChanged<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		public static IObservable<T> DistinctUntilChanged<T>(this IObservable<T> source, IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x600076A")]
		public static IObservable<T> DistinctUntilChanged<T, TKey>(this IObservable<T> source, Func<T, TKey> keySelector)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		public static IObservable<T> DistinctUntilChanged<T, TKey>(this IObservable<T> source, Func<T, TKey> keySelector, IEqualityComparer<TKey> comparer)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		public static IObservable<T> IgnoreElements<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600076D")]
		public static IObservable<Unit> ForEachAsync<T>(this IObservable<T> source, Action<T> onNext)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		public static IObservable<Unit> ForEachAsync<T>(this IObservable<T> source, Action<T, int> onNext)
		{
			return null;
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x213519C", Offset = "0x213519C", VA = "0x213519C")]
		public static IObservable<Unit> FromCoroutine(Func<IEnumerator> coroutine, bool publishEveryYield = false)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x213ECA4", Offset = "0x213ECA4", VA = "0x213ECA4")]
		public static IObservable<Unit> FromCoroutine(Func<CancellationToken, IEnumerator> coroutine, bool publishEveryYield = false)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x213ED8C", Offset = "0x213ED8C", VA = "0x213ED8C")]
		public static IObservable<Unit> FromMicroCoroutine(Func<IEnumerator> coroutine, bool publishEveryYield = false, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x213EE7C", Offset = "0x213EE7C", VA = "0x213EE7C")]
		public static IObservable<Unit> FromMicroCoroutine(Func<CancellationToken, IEnumerator> coroutine, bool publishEveryYield = false, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x213EF6C", Offset = "0x213EF6C", VA = "0x213EF6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B73F0", Offset = "0x12B73F0")]
		private static IEnumerator WrapEnumerator(IEnumerator enumerator, IObserver<Unit> observer, CancellationToken cancellationToken, bool publishEveryYield)
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		public static IObservable<T> FromCoroutineValue<T>(Func<IEnumerator> coroutine, bool nullAsNextUpdate = true)
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		public static IObservable<T> FromCoroutineValue<T>(Func<CancellationToken, IEnumerator> coroutine, bool nullAsNextUpdate = true)
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7454", Offset = "0x12B7454")]
		private static IEnumerator WrapEnumeratorYieldValue<T>(IEnumerator enumerator, IObserver<T> observer, CancellationToken cancellationToken, bool nullAsNextUpdate)
		{
			return null;
		}

		[Token(Token = "0x6000777")]
		public static IObservable<T> FromCoroutine<T>(Func<IObserver<T>, IEnumerator> coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000778")]
		public static IObservable<T> FromMicroCoroutine<T>(Func<IObserver<T>, IEnumerator> coroutine, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x213F030", Offset = "0x213F030", VA = "0x213F030")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B74B8", Offset = "0x12B74B8")]
		private static IEnumerator WrapToCancellableEnumerator(IEnumerator enumerator, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x600077A")]
		public static IObservable<T> FromCoroutine<T>(Func<IObserver<T>, CancellationToken, IEnumerator> coroutine)
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		public static IObservable<T> FromMicroCoroutine<T>(Func<IObserver<T>, CancellationToken, IEnumerator> coroutine, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		public static IObservable<Unit> SelectMany<T>(this IObservable<T> source, IEnumerator coroutine, bool publishEveryYield = false)
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		public static IObservable<Unit> SelectMany<T>(this IObservable<T> source, Func<IEnumerator> selector, bool publishEveryYield = false)
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		public static IObservable<Unit> SelectMany<T>(this IObservable<T> source, Func<T, IEnumerator> selector)
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x213F0D8", Offset = "0x213F0D8", VA = "0x213F0D8")]
		public static IObservable<Unit> ToObservable(this IEnumerator coroutine, bool publishEveryYield = false)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x213F1C0", Offset = "0x213F1C0", VA = "0x213F1C0")]
		public static ObservableYieldInstruction<Unit> ToYieldInstruction(this IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x213F238", Offset = "0x213F238", VA = "0x213F238")]
		public static ObservableYieldInstruction<Unit> ToYieldInstruction(this IEnumerator coroutine, bool throwOnError)
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x213F2C0", Offset = "0x213F2C0", VA = "0x213F2C0")]
		public static ObservableYieldInstruction<Unit> ToYieldInstruction(this IEnumerator coroutine, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x213F348", Offset = "0x213F348", VA = "0x213F348")]
		public static ObservableYieldInstruction<Unit> ToYieldInstruction(this IEnumerator coroutine, bool throwOnError, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x2135870", Offset = "0x2135870", VA = "0x2135870")]
		public static IObservable<long> EveryUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x213F3D8", Offset = "0x213F3D8", VA = "0x213F3D8")]
		public static IObservable<long> EveryFixedUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x213F4E0", Offset = "0x213F4E0", VA = "0x213F4E0")]
		public static IObservable<long> EveryEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x213F5E8", Offset = "0x213F5E8", VA = "0x213F5E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B759C", Offset = "0x12B759C")]
		private static IEnumerator EveryCycleCore(IObserver<long> observer, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x213F690", Offset = "0x213F690", VA = "0x213F690")]
		public static IObservable<long> EveryGameObjectUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x213F7CC", Offset = "0x213F7CC", VA = "0x213F7CC")]
		public static IObservable<long> EveryLateUpdate()
		{
			return null;
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x213F908", Offset = "0x213F908", VA = "0x213F908")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B7600", Offset = "0x12B7600")]
		public static IObservable<long> EveryAfterUpdate()
		{
			return null;
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x213FA0C", Offset = "0x213FA0C", VA = "0x213FA0C")]
		public static IObservable<Unit> NextFrame(FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x213FB18", Offset = "0x213FB18", VA = "0x213FB18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7610", Offset = "0x12B7610")]
		private static IEnumerator NextFrameCore(IObserver<Unit> observer, CancellationToken cancellation)
		{
			return null;
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x213FBC0", Offset = "0x213FBC0", VA = "0x213FBC0")]
		public static IObservable<long> IntervalFrame(int intervalFrameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x213FD18", Offset = "0x213FD18", VA = "0x213FD18")]
		public static IObservable<long> TimerFrame(int dueTimeFrameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x213FC38", Offset = "0x213FC38", VA = "0x213FC38")]
		public static IObservable<long> TimerFrame(int dueTimeFrameCount, int periodFrameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x213FE04", Offset = "0x213FE04", VA = "0x213FE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7674", Offset = "0x12B7674")]
		private static IEnumerator TimerFrameCore(IObserver<long> observer, int dueTimeFrameCount, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x213FEB4", Offset = "0x213FEB4", VA = "0x213FEB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B76D8", Offset = "0x12B76D8")]
		private static IEnumerator TimerFrameCore(IObserver<long> observer, int dueTimeFrameCount, int periodFrameCount, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x6000792")]
		public static IObservable<T> DelayFrame<T>(this IObservable<T> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		public static IObservable<T> Sample<T, T2>(this IObservable<T> source, IObservable<T2> sampler)
		{
			return null;
		}

		[Token(Token = "0x6000794")]
		public static IObservable<T> SampleFrame<T>(this IObservable<T> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000795")]
		public static IObservable<TSource> ThrottleFrame<TSource>(this IObservable<TSource> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000796")]
		public static IObservable<TSource> ThrottleFirstFrame<TSource>(this IObservable<TSource> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000797")]
		public static IObservable<T> TimeoutFrame<T>(this IObservable<T> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		public static IObservable<T> DelayFrameSubscription<T>(this IObservable<T> source, int frameCount, FrameCountType frameCountType = FrameCountType.Update)
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		public static ObservableYieldInstruction<T> ToYieldInstruction<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x600079A")]
		public static ObservableYieldInstruction<T> ToYieldInstruction<T>(this IObservable<T> source, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x600079B")]
		public static ObservableYieldInstruction<T> ToYieldInstruction<T>(this IObservable<T> source, bool throwOnError)
		{
			return null;
		}

		[Token(Token = "0x600079C")]
		public static ObservableYieldInstruction<T> ToYieldInstruction<T>(this IObservable<T> source, bool throwOnError, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x600079D")]
		public static IEnumerator ToAwaitableEnumerator<T>(this IObservable<T> source, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		public static IEnumerator ToAwaitableEnumerator<T>(this IObservable<T> source, Action<T> onResult, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		public static IEnumerator ToAwaitableEnumerator<T>(this IObservable<T> source, Action<Exception> onError, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B781C", Offset = "0x12B781C")]
		public static IEnumerator ToAwaitableEnumerator<T>(this IObservable<T> source, Action<T> onResult, Action<Exception> onError, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A1")]
		public static Coroutine StartAsCoroutine<T>(this IObservable<T> source, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A2")]
		public static Coroutine StartAsCoroutine<T>(this IObservable<T> source, Action<T> onResult, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		public static Coroutine StartAsCoroutine<T>(this IObservable<T> source, Action<Exception> onError, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		public static Coroutine StartAsCoroutine<T>(this IObservable<T> source, Action<T> onResult, Action<Exception> onError, [Optional] CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60007A5")]
		public static IObservable<T> ObserveOnMainThread<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60007A6")]
		public static IObservable<T> ObserveOnMainThread<T>(this IObservable<T> source, MainThreadDispatchType dispatchType)
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		public static IObservable<T> SubscribeOnMainThread<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x213FF70", Offset = "0x213FF70", VA = "0x213FF70")]
		public static IObservable<bool> EveryApplicationPause()
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x2140008", Offset = "0x2140008", VA = "0x2140008")]
		public static IObservable<bool> EveryApplicationFocus()
		{
			return null;
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x21400A0", Offset = "0x21400A0", VA = "0x21400A0")]
		public static IObservable<Unit> OnceApplicationQuit()
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		public static IObservable<T> TakeUntilDestroy<T>(this IObservable<T> source, Component target)
		{
			return null;
		}

		[Token(Token = "0x60007AC")]
		public static IObservable<T> TakeUntilDestroy<T>(this IObservable<T> source, GameObject target)
		{
			return null;
		}

		[Token(Token = "0x60007AD")]
		public static IObservable<T> TakeUntilDisable<T>(this IObservable<T> source, Component target)
		{
			return null;
		}

		[Token(Token = "0x60007AE")]
		public static IObservable<T> TakeUntilDisable<T>(this IObservable<T> source, GameObject target)
		{
			return null;
		}

		[Token(Token = "0x60007AF")]
		public static IObservable<T> RepeatUntilDestroy<T>(this IObservable<T> source, GameObject target)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		public static IObservable<T> RepeatUntilDestroy<T>(this IObservable<T> source, Component target)
		{
			return null;
		}

		[Token(Token = "0x60007B1")]
		public static IObservable<T> RepeatUntilDisable<T>(this IObservable<T> source, GameObject target)
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		public static IObservable<T> RepeatUntilDisable<T>(this IObservable<T> source, Component target)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		private static IObservable<T> RepeatUntilCore<T>(this IEnumerable<IObservable<T>> sources, IObservable<Unit> trigger, GameObject lifeTimeChecker)
		{
			return null;
		}

		[Token(Token = "0x60007B4")]
		public static IObservable<FrameInterval<T>> FrameInterval<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60007B5")]
		public static IObservable<TimeInterval<T>> FrameTimeInterval<T>(this IObservable<T> source, bool ignoreTimeScale = false)
		{
			return null;
		}

		[Token(Token = "0x60007B6")]
		public static IObservable<IList<T>> BatchFrame<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x60007B7")]
		public static IObservable<IList<T>> BatchFrame<T>(this IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x214013C", Offset = "0x214013C", VA = "0x214013C")]
		public static IObservable<Unit> BatchFrame(this IObservable<Unit> source)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x21401A8", Offset = "0x21401A8", VA = "0x21401A8")]
		public static IObservable<Unit> BatchFrame(this IObservable<Unit> source, int frameCount, FrameCountType frameCountType)
		{
			return null;
		}
	}
	[Token(Token = "0x20000EB")]
	public sealed class ScheduledDisposable : ICancelable, IDisposable
	{
		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisposable disposable;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int isDisposed;

		[Token(Token = "0x170000DC")]
		public IScheduler Scheduler
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x2B8067C", Offset = "0x2B8067C", VA = "0x2B8067C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public IDisposable Disposable
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x2B80684", Offset = "0x2B80684", VA = "0x2B80684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public bool IsDisposed
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x2B806A8", Offset = "0x2B806A8", VA = "0x2B806A8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x2B8063C", Offset = "0x2B8063C", VA = "0x2B8063C")]
		public ScheduledDisposable(IScheduler scheduler, IDisposable disposable)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x2B806B8", Offset = "0x2B806B8", VA = "0x2B806B8", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x2B807A4", Offset = "0x2B807A4", VA = "0x2B807A4")]
		private void DisposeInner()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public sealed class SerialDisposable : IDisposable, ICancelable
	{
		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object gate;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisposable current;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool disposed;

		[Token(Token = "0x170000DF")]
		public bool IsDisposed
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x2B8680C", Offset = "0x2B8680C", VA = "0x2B8680C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public IDisposable Disposable
		{
			[Token(Token = "0x60007C2")]
			[Address(RVA = "0x2B868A0", Offset = "0x2B868A0", VA = "0x2B868A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C3")]
			[Address(RVA = "0x2B7D094", Offset = "0x2B7D094", VA = "0x2B7D094")]
			set
			{
			}
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x2B868A8", Offset = "0x2B868A8", VA = "0x2B868A8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x2B869EC", Offset = "0x2B869EC", VA = "0x2B869EC")]
		public SerialDisposable()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public sealed class SingleAssignmentDisposable : IDisposable, ICancelable
	{
		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object gate;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisposable current;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool disposed;

		[Token(Token = "0x170000E1")]
		public bool IsDisposed
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x2B86414", Offset = "0x2B86414", VA = "0x2B86414", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E2")]
		public IDisposable Disposable
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x2B86A54", Offset = "0x2B86A54", VA = "0x2B86A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x2B861AC", Offset = "0x2B861AC", VA = "0x2B861AC")]
			set
			{
			}
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x2B86654", Offset = "0x2B86654", VA = "0x2B86654", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x2B86144", Offset = "0x2B86144", VA = "0x2B86144")]
		public SingleAssignmentDisposable()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public abstract class StableCompositeDisposable : ICancelable, IDisposable
	{
		[Token(Token = "0x20003DC")]
		private class Binary : StableCompositeDisposable
		{
			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int disposedCallCount;

			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IDisposable _disposable1;

			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IDisposable _disposable2;

			[Token(Token = "0x170002BC")]
			public override bool IsDisposed
			{
				[Token(Token = "0x600188B")]
				[Address(RVA = "0x2B86F18", Offset = "0x2B86F18", VA = "0x2B86F18", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x2B86A5C", Offset = "0x2B86A5C", VA = "0x2B86A5C")]
			public Binary(IDisposable disposable1, IDisposable disposable2)
			{
			}

			[Token(Token = "0x600188C")]
			[Address(RVA = "0x2B86F28", Offset = "0x2B86F28", VA = "0x2B86F28", Slot = "6")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x20003DD")]
		private class Trinary : StableCompositeDisposable
		{
			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int disposedCallCount;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IDisposable _disposable1;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IDisposable _disposable2;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IDisposable _disposable3;

			[Token(Token = "0x170002BD")]
			public override bool IsDisposed
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0x2B8755C", Offset = "0x2B8755C", VA = "0x2B8755C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x2B86AA8", Offset = "0x2B86AA8", VA = "0x2B86AA8")]
			public Trinary(IDisposable disposable1, IDisposable disposable2, IDisposable disposable3)
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x2B8756C", Offset = "0x2B8756C", VA = "0x2B8756C", Slot = "6")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x20003DE")]
		private class Quaternary : StableCompositeDisposable
		{
			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int disposedCallCount;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IDisposable _disposable1;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IDisposable _disposable2;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IDisposable _disposable3;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IDisposable _disposable4;

			[Token(Token = "0x170002BE")]
			public override bool IsDisposed
			{
				[Token(Token = "0x6001891")]
				[Address(RVA = "0x2B8732C", Offset = "0x2B8732C", VA = "0x2B8732C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x2B86C28", Offset = "0x2B86C28", VA = "0x2B86C28")]
			public Quaternary(IDisposable disposable1, IDisposable disposable2, IDisposable disposable3, IDisposable disposable4)
			{
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x2B8733C", Offset = "0x2B8733C", VA = "0x2B8733C", Slot = "6")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x20003DF")]
		private class NAry : StableCompositeDisposable
		{
			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int disposedCallCount;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<IDisposable> _disposables;

			[Token(Token = "0x170002BF")]
			public override bool IsDisposed
			{
				[Token(Token = "0x6001895")]
				[Address(RVA = "0x2B87070", Offset = "0x2B87070", VA = "0x2B87070", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x2B86D34", Offset = "0x2B86D34", VA = "0x2B86D34")]
			public NAry(IDisposable[] disposables)
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0x2B86E10", Offset = "0x2B86E10", VA = "0x2B86E10")]
			public NAry(IEnumerable<IDisposable> disposables)
			{
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0x2B87080", Offset = "0x2B87080", VA = "0x2B87080", Slot = "6")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x20003E0")]
		private class NAryUnsafe : StableCompositeDisposable
		{
			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int disposedCallCount;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IDisposable[] _disposables;

			[Token(Token = "0x170002C0")]
			public override bool IsDisposed
			{
				[Token(Token = "0x6001898")]
				[Address(RVA = "0x2B871F8", Offset = "0x2B871F8", VA = "0x2B871F8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x2B86D38", Offset = "0x2B86D38", VA = "0x2B86D38")]
			public NAryUnsafe(IDisposable[] disposables)
			{
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x2B87208", Offset = "0x2B87208", VA = "0x2B87208", Slot = "6")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public abstract bool IsDisposed
		{
			[Token(Token = "0x60007D2")]
			get;
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x2B7F250", Offset = "0x2B7F250", VA = "0x2B7F250")]
		public static ICancelable Create(IDisposable disposable1, IDisposable disposable2)
		{
			return null;
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x2B7F49C", Offset = "0x2B7F49C", VA = "0x2B7F49C")]
		public static ICancelable Create(IDisposable disposable1, IDisposable disposable2, IDisposable disposable3)
		{
			return null;
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x2B86B00", Offset = "0x2B86B00", VA = "0x2B86B00")]
		public static ICancelable Create(IDisposable disposable1, IDisposable disposable2, IDisposable disposable3, IDisposable disposable4)
		{
			return null;
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x2B86C94", Offset = "0x2B86C94", VA = "0x2B86C94")]
		public static ICancelable Create(params IDisposable[] disposables)
		{
			return null;
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x2B7DFE0", Offset = "0x2B7DFE0", VA = "0x2B7DFE0")]
		public static ICancelable CreateUnsafe(IDisposable[] disposables)
		{
			return null;
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x2B86D70", Offset = "0x2B86D70", VA = "0x2B86D70")]
		public static ICancelable Create(IEnumerable<IDisposable> disposables)
		{
			return null;
		}

		[Token(Token = "0x60007D1")]
		public abstract void Dispose();

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x2B86F10", Offset = "0x2B86F10", VA = "0x2B86F10")]
		protected StableCompositeDisposable()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public interface IEventPattern<TSender, TEventArgs>
	{
		[Token(Token = "0x170000E4")]
		TSender Sender
		{
			[Token(Token = "0x60007D4")]
			get;
		}

		[Token(Token = "0x170000E5")]
		TEventArgs EventArgs
		{
			[Token(Token = "0x60007D5")]
			get;
		}
	}
	[Token(Token = "0x20000F0")]
	public class EventPattern<TEventArgs> : EventPattern<object, TEventArgs>
	{
		[Token(Token = "0x60007D6")]
		public EventPattern(object sender, TEventArgs e)
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class EventPattern<TSender, TEventArgs> : IEquatable<EventPattern<TSender, TEventArgs>>, IEventPattern<TSender, TEventArgs>
	{
		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC588", Offset = "0x12AC588")]
		private TSender <Sender>k__BackingField;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC598", Offset = "0x12AC598")]
		private TEventArgs <EventArgs>k__BackingField;

		[Token(Token = "0x170000E6")]
		public TSender Sender
		{
			[Token(Token = "0x60007D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B79F0", Offset = "0x12B79F0")]
			get
			{
				return (TSender)null;
			}
			[Token(Token = "0x60007D9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7A00", Offset = "0x12B7A00")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public TEventArgs EventArgs
		{
			[Token(Token = "0x60007DA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7A10", Offset = "0x12B7A10")]
			get
			{
				return (TEventArgs)null;
			}
			[Token(Token = "0x60007DB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7A20", Offset = "0x12B7A20")]
			private set
			{
			}
		}

		[Token(Token = "0x60007D7")]
		public EventPattern(TSender sender, TEventArgs e)
		{
		}

		[Token(Token = "0x60007DC")]
		public bool Equals(EventPattern<TSender, TEventArgs> other)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DD")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007DF")]
		public static bool operator ==(EventPattern<TSender, TEventArgs> first, EventPattern<TSender, TEventArgs> second)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E0")]
		public static bool operator !=(EventPattern<TSender, TEventArgs> first, EventPattern<TSender, TEventArgs> second)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F2")]
	public interface IObserver<TValue, TResult>
	{
		[Token(Token = "0x60007E1")]
		TResult OnNext(TValue value);

		[Token(Token = "0x60007E2")]
		TResult OnError(Exception exception);

		[Token(Token = "0x60007E3")]
		TResult OnCompleted();
	}
	[Token(Token = "0x20000F3")]
	public enum NotificationKind
	{
		[Token(Token = "0x40001BC")]
		OnNext,
		[Token(Token = "0x40001BD")]
		OnError,
		[Token(Token = "0x40001BE")]
		OnCompleted
	}
	[Serializable]
	[Token(Token = "0x20000F4")]
	public abstract class Notification<T> : IEquatable<Notification<T>>
	{
		[Serializable]
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x12AAF38", Offset = "0x12AAF38")]
		internal sealed class OnNextNotification : Notification<T>
		{
			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T value;

			[Token(Token = "0x170002C1")]
			public override T Value
			{
				[Token(Token = "0x600189B")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170002C2")]
			public override Exception Exception
			{
				[Token(Token = "0x600189C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			public override bool HasValue
			{
				[Token(Token = "0x600189D")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C4")]
			public override NotificationKind Kind
			{
				[Token(Token = "0x600189E")]
				get
				{
					return default(NotificationKind);
				}
			}

			[Token(Token = "0x600189A")]
			public OnNextNotification(T value)
			{
			}

			[Token(Token = "0x600189F")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60018A0")]
			public override bool Equals(Notification<T> other)
			{
				return default(bool);
			}

			[Token(Token = "0x60018A1")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x60018A2")]
			public override void Accept(IObserver<T> observer)
			{
			}

			[Token(Token = "0x60018A3")]
			public override TResult Accept<TResult>(IObserver<T, TResult> observer)
			{
				return (TResult)null;
			}

			[Token(Token = "0x60018A4")]
			public override void Accept(Action<T> onNext, Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018A5")]
			public override TResult Accept<TResult>(Func<T, TResult> onNext, Func<Exception, TResult> onError, Func<TResult> onCompleted)
			{
				return (TResult)null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x12AAF70", Offset = "0x12AAF70")]
		internal sealed class OnErrorNotification : Notification<T>
		{
			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Exception exception;

			[Token(Token = "0x170002C5")]
			public override T Value
			{
				[Token(Token = "0x60018A7")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170002C6")]
			public override Exception Exception
			{
				[Token(Token = "0x60018A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			public override bool HasValue
			{
				[Token(Token = "0x60018A9")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002C8")]
			public override NotificationKind Kind
			{
				[Token(Token = "0x60018AA")]
				get
				{
					return default(NotificationKind);
				}
			}

			[Token(Token = "0x60018A6")]
			public OnErrorNotification(Exception exception)
			{
			}

			[Token(Token = "0x60018AB")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60018AC")]
			public override bool Equals(Notification<T> other)
			{
				return default(bool);
			}

			[Token(Token = "0x60018AD")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x60018AE")]
			public override void Accept(IObserver<T> observer)
			{
			}

			[Token(Token = "0x60018AF")]
			public override TResult Accept<TResult>(IObserver<T, TResult> observer)
			{
				return (TResult)null;
			}

			[Token(Token = "0x60018B0")]
			public override void Accept(Action<T> onNext, Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018B1")]
			public override TResult Accept<TResult>(Func<T, TResult> onNext, Func<Exception, TResult> onError, Func<TResult> onCompleted)
			{
				return (TResult)null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x12AAFA8", Offset = "0x12AAFA8")]
		internal sealed class OnCompletedNotification : Notification<T>
		{
			[Token(Token = "0x170002C9")]
			public override T Value
			{
				[Token(Token = "0x60018B3")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170002CA")]
			public override Exception Exception
			{
				[Token(Token = "0x60018B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			public override bool HasValue
			{
				[Token(Token = "0x60018B5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002CC")]
			public override NotificationKind Kind
			{
				[Token(Token = "0x60018B6")]
				get
				{
					return default(NotificationKind);
				}
			}

			[Token(Token = "0x60018B2")]
			public OnCompletedNotification()
			{
			}

			[Token(Token = "0x60018B7")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60018B8")]
			public override bool Equals(Notification<T> other)
			{
				return default(bool);
			}

			[Token(Token = "0x60018B9")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x60018BA")]
			public override void Accept(IObserver<T> observer)
			{
			}

			[Token(Token = "0x60018BB")]
			public override TResult Accept<TResult>(IObserver<T, TResult> observer)
			{
				return (TResult)null;
			}

			[Token(Token = "0x60018BC")]
			public override void Accept(Action<T> onNext, Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018BD")]
			public override TResult Accept<TResult>(Func<T, TResult> onNext, Func<Exception, TResult> onError, Func<TResult> onCompleted)
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAFE0", Offset = "0x12AAFE0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IScheduler scheduler;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Notification<T> <>4__this;

			[Token(Token = "0x60018BE")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60018BF")]
			internal IDisposable <ToObservable>b__0(IObserver<T> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AAFF0", Offset = "0x12AAFF0")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass21_0 CS$<>8__locals1;

			[Token(Token = "0x60018C0")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x60018C1")]
			internal void <ToObservable>b__1()
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public abstract T Value
		{
			[Token(Token = "0x60007E5")]
			get;
		}

		[Token(Token = "0x170000E9")]
		public abstract bool HasValue
		{
			[Token(Token = "0x60007E6")]
			get;
		}

		[Token(Token = "0x170000EA")]
		public abstract Exception Exception
		{
			[Token(Token = "0x60007E7")]
			get;
		}

		[Token(Token = "0x170000EB")]
		public abstract NotificationKind Kind
		{
			[Token(Token = "0x60007E8")]
			get;
		}

		[Token(Token = "0x60007E4")]
		protected internal Notification()
		{
		}

		[Token(Token = "0x60007E9")]
		public abstract bool Equals(Notification<T> other);

		[Token(Token = "0x60007EA")]
		public static bool operator ==(Notification<T> left, Notification<T> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		public static bool operator !=(Notification<T> left, Notification<T> right)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EC")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007ED")]
		public abstract void Accept(IObserver<T> observer);

		[Token(Token = "0x60007EE")]
		public abstract TResult Accept<TResult>(IObserver<T, TResult> observer);

		[Token(Token = "0x60007EF")]
		public abstract void Accept(Action<T> onNext, Action<Exception> onError, Action onCompleted);

		[Token(Token = "0x60007F0")]
		public abstract TResult Accept<TResult>(Func<T, TResult> onNext, Func<Exception, TResult> onError, Func<TResult> onCompleted);

		[Token(Token = "0x60007F1")]
		public IObservable<T> ToObservable()
		{
			return null;
		}

		[Token(Token = "0x60007F2")]
		public IObservable<T> ToObservable(IScheduler scheduler)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F5")]
	public static class Notification
	{
		[Token(Token = "0x60007F3")]
		public static Notification<T> CreateOnNext<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x60007F4")]
		public static Notification<T> CreateOnError<T>(Exception error)
		{
			return null;
		}

		[Token(Token = "0x60007F5")]
		public static Notification<T> CreateOnCompleted<T>()
		{
			return null;
		}
	}
	[Token(Token = "0x20000F6")]
	public class BooleanNotifier : IObservable<bool>
	{
		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Subject<bool> boolTrigger;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool boolValue;

		[Token(Token = "0x170000EC")]
		public bool Value
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x2754DB4", Offset = "0x2754DB4", VA = "0x2754DB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x2754DBC", Offset = "0x2754DBC", VA = "0x2754DBC")]
			set
			{
			}
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x2754E28", Offset = "0x2754E28", VA = "0x2754E28")]
		public BooleanNotifier(bool initialValue = false)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x2754EB0", Offset = "0x2754EB0", VA = "0x2754EB0")]
		public void TurnOn()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x2754EC4", Offset = "0x2754EC4", VA = "0x2754EC4")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x2754ED8", Offset = "0x2754ED8", VA = "0x2754ED8")]
		public void SwitchValue()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x2754EE8", Offset = "0x2754EE8", VA = "0x2754EE8", Slot = "4")]
		public IDisposable Subscribe(IObserver<bool> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F7")]
	public enum CountChangedStatus
	{
		[Token(Token = "0x40001C2")]
		Increment,
		[Token(Token = "0x40001C3")]
		Decrement,
		[Token(Token = "0x40001C4")]
		Empty,
		[Token(Token = "0x40001C5")]
		Max
	}
	[Token(Token = "0x20000F8")]
	public class CountNotifier : IObservable<CountChangedStatus>
	{
		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB000", Offset = "0x12AB000")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CountNotifier <>4__this;

			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int incrementCount;

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x2756A14", Offset = "0x2756A14", VA = "0x2756A14")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x2756BCC", Offset = "0x2756BCC", VA = "0x2756BCC")]
			internal void <Increment>b__0()
			{
			}
		}

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object lockObject;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Subject<CountChangedStatus> statusChanged;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int max;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5A8", Offset = "0x12AC5A8")]
		private int <Count>k__BackingField;

		[Token(Token = "0x170000ED")]
		public int Max
		{
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x27566E4", Offset = "0x27566E4", VA = "0x27566E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public int Count
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x27566EC", Offset = "0x27566EC", VA = "0x27566EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7A30", Offset = "0x12B7A30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x27566F4", Offset = "0x27566F4", VA = "0x27566F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7A40", Offset = "0x12B7A40")]
			private set
			{
			}
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x27566FC", Offset = "0x27566FC", VA = "0x27566FC")]
		public CountNotifier(int max = int.MaxValue)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x27567E4", Offset = "0x27567E4", VA = "0x27567E4")]
		public IDisposable Increment(int incrementCount = 1)
		{
			return null;
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x2756A1C", Offset = "0x2756A1C", VA = "0x2756A1C")]
		public void Decrement(int decrementCount = 1)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x2756B64", Offset = "0x2756B64", VA = "0x2756B64", Slot = "4")]
		public IDisposable Subscribe(IObserver<CountChangedStatus> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F9")]
	public interface IMessagePublisher
	{
		[Token(Token = "0x6000804")]
		void Publish<T>(T message);
	}
	[Token(Token = "0x20000FA")]
	public interface IMessageReceiver
	{
		[Token(Token = "0x6000805")]
		IObservable<T> Receive<T>();
	}
	[Token(Token = "0x20000FB")]
	public interface IMessageBroker : IMessagePublisher, IMessageReceiver
	{
	}
	[Token(Token = "0x20000FC")]
	public interface IAsyncMessagePublisher
	{
		[Token(Token = "0x6000806")]
		IObservable<Unit> PublishAsync<T>(T message);
	}
	[Token(Token = "0x20000FD")]
	public interface IAsyncMessageReceiver
	{
		[Token(Token = "0x6000807")]
		IDisposable Subscribe<T>(Func<T, IObservable<Unit>> asyncMessageReceiver);
	}
	[Token(Token = "0x20000FE")]
	public interface IAsyncMessageBroker : IAsyncMessagePublisher, IAsyncMessageReceiver
	{
	}
	[Token(Token = "0x20000FF")]
	public class MessageBroker : IMessageBroker, IMessagePublisher, IMessageReceiver, IDisposable
	{
		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IMessageBroker Default;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isDisposed;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Type, object> notifiers;

		[Token(Token = "0x6000808")]
		public void Publish<T>(T message)
		{
		}

		[Token(Token = "0x6000809")]
		public IObservable<T> Receive<T>()
		{
			return null;
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x213D4E8", Offset = "0x213D4E8", VA = "0x213D4E8", Slot = "6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x213D5BC", Offset = "0x213D5BC", VA = "0x213D5BC")]
		public MessageBroker()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class AsyncMessageBroker : IAsyncMessageBroker, IAsyncMessagePublisher, IAsyncMessageReceiver, IDisposable
	{
		[Token(Token = "0x20003E7")]
		private class Subscription<T> : IDisposable
		{
			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AsyncMessageBroker parent;

			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, IObservable<Unit>> asyncMessageReceiver;

			[Token(Token = "0x60018C4")]
			public Subscription(AsyncMessageBroker parent, Func<T, IObservable<Unit>> asyncMessageReceiver)
			{
			}

			[Token(Token = "0x60018C5")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IAsyncMessageBroker Default;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isDisposed;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Type, object> notifiers;

		[Token(Token = "0x600080D")]
		public IObservable<Unit> PublishAsync<T>(T message)
		{
			return null;
		}

		[Token(Token = "0x600080E")]
		public IDisposable Subscribe<T>(Func<T, IObservable<Unit>> asyncMessageReceiver)
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x27542BC", Offset = "0x27542BC", VA = "0x27542BC", Slot = "6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x2754390", Offset = "0x2754390", VA = "0x2754390")]
		public AsyncMessageBroker()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class ScheduledNotifier<T> : IObservable<T>, IProgress<T>
	{
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB010", Offset = "0x12AB010")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScheduledNotifier<T> <>4__this;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x60018C6")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60018C7")]
			internal void <Report>b__0()
			{
			}
		}

		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB020", Offset = "0x12AB020")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScheduledNotifier<T> <>4__this;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x60018C8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60018C9")]
			internal void <Report>b__0()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB030", Offset = "0x12AB030")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ScheduledNotifier<T> <>4__this;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x60018CA")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60018CB")]
			internal void <Report>b__0()
			{
			}
		}

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Subject<T> trigger;

		[Token(Token = "0x6000812")]
		public ScheduledNotifier()
		{
		}

		[Token(Token = "0x6000813")]
		public ScheduledNotifier(IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000814")]
		public void Report(T value)
		{
		}

		[Token(Token = "0x6000815")]
		public IDisposable Report(T value, TimeSpan dueTime)
		{
			return null;
		}

		[Token(Token = "0x6000816")]
		public IDisposable Report(T value, DateTimeOffset dueTime)
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000102")]
	public static class Observer
	{
		[Token(Token = "0x20003EB")]
		private class AnonymousObserver<T> : IObserver<T>
		{
			[Token(Token = "0x4000CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T> onNext;

			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception> onError;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action onCompleted;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018CC")]
			public AnonymousObserver(Action<T> onNext, Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018CD")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018CE")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018CF")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003EC")]
		private class EmptyOnNextAnonymousObserver<T> : IObserver<T>
		{
			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception> onError;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action onCompleted;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018D0")]
			public EmptyOnNextAnonymousObserver(Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018D1")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018D2")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018D3")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		private class Subscribe<T> : IObserver<T>
		{
			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T> onNext;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception> onError;

			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action onCompleted;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018D4")]
			public Subscribe(Action<T> onNext, Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018D5")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018D6")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018D7")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		private class Subscribe_<T> : IObserver<T>
		{
			[Token(Token = "0x4000CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception> onError;

			[Token(Token = "0x4000CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action onCompleted;

			[Token(Token = "0x4000CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018D8")]
			public Subscribe_(Action<Exception> onError, Action onCompleted)
			{
			}

			[Token(Token = "0x60018D9")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018DA")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018DB")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003EF")]
		private class Subscribe<T, TState> : IObserver<T>
		{
			[Token(Token = "0x4000CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState state;

			[Token(Token = "0x4000CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T, TState> onNext;

			[Token(Token = "0x4000CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception, TState> onError;

			[Token(Token = "0x4000CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<TState> onCompleted;

			[Token(Token = "0x4000CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018DC")]
			public Subscribe(TState state, Action<T, TState> onNext, Action<Exception, TState> onError, Action<TState> onCompleted)
			{
			}

			[Token(Token = "0x60018DD")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018DE")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018DF")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003F0")]
		private class Subscribe<T, TState1, TState2> : IObserver<T>
		{
			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState1 state1;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState2 state2;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T, TState1, TState2> onNext;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception, TState1, TState2> onError;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<TState1, TState2> onCompleted;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018E0")]
			public Subscribe(TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext, Action<Exception, TState1, TState2> onError, Action<TState1, TState2> onCompleted)
			{
			}

			[Token(Token = "0x60018E1")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018E2")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018E3")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003F1")]
		private class Subscribe<T, TState1, TState2, TState3> : IObserver<T>
		{
			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState1 state1;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState2 state2;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TState3 state3;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T, TState1, TState2, TState3> onNext;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<Exception, TState1, TState2, TState3> onError;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<TState1, TState2, TState3> onCompleted;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x60018E4")]
			public Subscribe(TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext, Action<Exception, TState1, TState2, TState3> onError, Action<TState1, TState2, TState3> onCompleted)
			{
			}

			[Token(Token = "0x60018E5")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x60018E6")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018E7")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		private class AutoDetachObserver<T> : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x60018E8")]
			public AutoDetachObserver(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x60018E9")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x60018EA")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x60018EB")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x6000818")]
		internal static IObserver<T> CreateSubscribeObserver<T>(Action<T> onNext, Action<Exception> onError, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		internal static IObserver<T> CreateSubscribeWithStateObserver<T, TState>(TState state, Action<T, TState> onNext, Action<Exception, TState> onError, Action<TState> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		internal static IObserver<T> CreateSubscribeWithState2Observer<T, TState1, TState2>(TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext, Action<Exception, TState1, TState2> onError, Action<TState1, TState2> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600081B")]
		internal static IObserver<T> CreateSubscribeWithState3Observer<T, TState1, TState2, TState3>(TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext, Action<Exception, TState1, TState2, TState3> onError, Action<TState1, TState2, TState3> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600081C")]
		public static IObserver<T> Create<T>(Action<T> onNext)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		public static IObserver<T> Create<T>(Action<T> onNext, Action<Exception> onError)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		public static IObserver<T> Create<T>(Action<T> onNext, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		public static IObserver<T> Create<T>(Action<T> onNext, Action<Exception> onError, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		public static IObserver<T> CreateAutoDetachObserver<T>(IObserver<T> observer, IDisposable disposable)
		{
			return null;
		}
	}
	[Token(Token = "0x2000103")]
	public static class ObserverExtensions
	{
		[Token(Token = "0x6000821")]
		public static IObserver<T> Synchronize<T>(this IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		public static IObserver<T> Synchronize<T>(this IObserver<T> observer, object gate)
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public static class ObservableExtensions
	{
		[Token(Token = "0x6000823")]
		public static IDisposable Subscribe<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		public static IDisposable Subscribe<T>(this IObservable<T> source, Action<T> onNext)
		{
			return null;
		}

		[Token(Token = "0x6000825")]
		public static IDisposable Subscribe<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		public static IDisposable Subscribe<T>(this IObservable<T> source, Action<T> onNext, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		public static IDisposable Subscribe<T>(this IObservable<T> source, Action<T> onNext, Action<Exception> onError, Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000828")]
		public static IDisposable SubscribeWithState<T, TState>(this IObservable<T> source, TState state, Action<T, TState> onNext)
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		public static IDisposable SubscribeWithState<T, TState>(this IObservable<T> source, TState state, Action<T, TState> onNext, Action<Exception, TState> onError)
		{
			return null;
		}

		[Token(Token = "0x600082A")]
		public static IDisposable SubscribeWithState<T, TState>(this IObservable<T> source, TState state, Action<T, TState> onNext, Action<TState> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600082B")]
		public static IDisposable SubscribeWithState<T, TState>(this IObservable<T> source, TState state, Action<T, TState> onNext, Action<Exception, TState> onError, Action<TState> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		public static IDisposable SubscribeWithState2<T, TState1, TState2>(this IObservable<T> source, TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext)
		{
			return null;
		}

		[Token(Token = "0x600082D")]
		public static IDisposable SubscribeWithState2<T, TState1, TState2>(this IObservable<T> source, TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext, Action<Exception, TState1, TState2> onError)
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		public static IDisposable SubscribeWithState2<T, TState1, TState2>(this IObservable<T> source, TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext, Action<TState1, TState2> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x600082F")]
		public static IDisposable SubscribeWithState2<T, TState1, TState2>(this IObservable<T> source, TState1 state1, TState2 state2, Action<T, TState1, TState2> onNext, Action<Exception, TState1, TState2> onError, Action<TState1, TState2> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000830")]
		public static IDisposable SubscribeWithState3<T, TState1, TState2, TState3>(this IObservable<T> source, TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext)
		{
			return null;
		}

		[Token(Token = "0x6000831")]
		public static IDisposable SubscribeWithState3<T, TState1, TState2, TState3>(this IObservable<T> source, TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext, Action<Exception, TState1, TState2, TState3> onError)
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		public static IDisposable SubscribeWithState3<T, TState1, TState2, TState3>(this IObservable<T> source, TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext, Action<TState1, TState2, TState3> onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6000833")]
		public static IDisposable SubscribeWithState3<T, TState1, TState2, TState3>(this IObservable<T> source, TState1 state1, TState2 state2, TState3 state3, Action<T, TState1, TState2, TState3> onNext, Action<Exception, TState1, TState2, TState3> onError, Action<TState1, TState2, TState3> onCompleted)
		{
			return null;
		}
	}
	[Token(Token = "0x2000105")]
	internal static class Stubs
	{
		[Serializable]
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB040", Offset = "0x12AB040")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x2B87970", Offset = "0x2B87970", VA = "0x2B87970")]
			public <>c()
			{
			}

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x2B87978", Offset = "0x2B87978", VA = "0x2B87978")]
			internal void <.cctor>b__3_0()
			{
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x2B8797C", Offset = "0x2B8797C", VA = "0x2B8797C")]
			internal void <.cctor>b__3_1(Exception ex)
			{
			}
		}

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action Nop;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Action<Exception> Throw;

		[Token(Token = "0x6000834")]
		public static IObservable<TSource> CatchIgnore<TSource>(Exception ex)
		{
			return null;
		}
	}
	[Token(Token = "0x2000106")]
	internal static class Stubs<T>
	{
		[Serializable]
		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB050", Offset = "0x12AB050")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60018F1")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F2")]
			internal void <.cctor>b__3_0(T t)
			{
			}

			[Token(Token = "0x60018F3")]
			internal T <.cctor>b__3_1(T t)
			{
				return (T)null;
			}

			[Token(Token = "0x60018F4")]
			internal void <.cctor>b__3_2(Exception ex, T _)
			{
			}
		}

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<T> Ignore;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Func<T, T> Identity;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<Exception, T> Throw;
	}
	[Token(Token = "0x2000107")]
	internal static class Stubs<T1, T2>
	{
		[Serializable]
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB060", Offset = "0x12AB060")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60018F6")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F7")]
			internal void <.cctor>b__2_0(T1 x, T2 y)
			{
			}

			[Token(Token = "0x60018F8")]
			internal void <.cctor>b__2_1(Exception ex, T1 _, T2 __)
			{
			}
		}

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<T1, T2> Ignore;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<Exception, T1, T2> Throw;
	}
	[Token(Token = "0x2000108")]
	internal static class Stubs<T1, T2, T3>
	{
		[Serializable]
		[Token(Token = "0x20003F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB070", Offset = "0x12AB070")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60018FA")]
			public <>c()
			{
			}

			[Token(Token = "0x60018FB")]
			internal void <.cctor>b__2_0(T1 x, T2 y, T3 z)
			{
			}

			[Token(Token = "0x60018FC")]
			internal void <.cctor>b__2_1(Exception ex, T1 _, T2 __, T3 ___)
			{
			}
		}

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<T1, T2, T3> Ignore;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Action<Exception, T1, T2, T3> Throw;
	}
	[Serializable]
	[Token(Token = "0x2000109")]
	public struct Pair<T> : IEquatable<Pair<T>>
	{
		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T previous;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T current;

		[Token(Token = "0x170000EF")]
		public T Previous
		{
			[Token(Token = "0x6000839")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000F0")]
		public T Current
		{
			[Token(Token = "0x600083A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600083B")]
		public Pair(T previous, T current)
		{
		}

		[Token(Token = "0x600083C")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600083D")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600083E")]
		public bool Equals(Pair<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x600083F")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200010A")]
	public static class Scheduler
	{
		[Token(Token = "0x20003F7")]
		private class CurrentThreadScheduler : IScheduler
		{
			[Token(Token = "0x20005FD")]
			private static class Trampoline
			{
				[Token(Token = "0x600217B")]
				[Address(RVA = "0x2B8248C", Offset = "0x2B8248C", VA = "0x2B8248C")]
				public static void Run(SchedulerQueue queue)
				{
				}
			}

			[Token(Token = "0x4000CF1")]
			[ThreadStatic]
			private static SchedulerQueue s_threadLocalQueue;

			[Token(Token = "0x4000CF2")]
			[ThreadStatic]
			private static Stopwatch s_clock;

			[Token(Token = "0x170002CD")]
			private static TimeSpan Time
			{
				[Token(Token = "0x60018FF")]
				[Address(RVA = "0x2B82110", Offset = "0x2B82110", VA = "0x2B82110")]
				get
				{
					return default(TimeSpan);
				}
			}

			[Token(Token = "0x170002CE")]
			[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x12BF904", Offset = "0x12BF904")]
			public static bool IsScheduleRequired
			{
				[Token(Token = "0x6001900")]
				[Address(RVA = "0x2B8087C", Offset = "0x2B8087C", VA = "0x2B8087C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002CF")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x6001903")]
				[Address(RVA = "0x2B82598", Offset = "0x2B82598", VA = "0x2B82598", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x2B8206C", Offset = "0x2B8206C", VA = "0x2B8206C")]
			private static SchedulerQueue GetQueue()
			{
				return null;
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x2B820BC", Offset = "0x2B820BC", VA = "0x2B820BC")]
			private static void SetQueue(SchedulerQueue newQueue)
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0x2B821B8", Offset = "0x2B821B8", VA = "0x2B821B8", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001902")]
			[Address(RVA = "0x2B82228", Offset = "0x2B82228", VA = "0x2B82228", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001904")]
			[Address(RVA = "0x2B81670", Offset = "0x2B81670", VA = "0x2B81670")]
			public CurrentThreadScheduler()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		private class ImmediateScheduler : IScheduler
		{
			[Token(Token = "0x170002D0")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x6001906")]
				[Address(RVA = "0x2B84B74", Offset = "0x2B84B74", VA = "0x2B84B74", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x2B81678", Offset = "0x2B81678", VA = "0x2B81678")]
			public ImmediateScheduler()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x2B84BD0", Offset = "0x2B84BD0", VA = "0x2B84BD0", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0x2B84C50", Offset = "0x2B84C50", VA = "0x2B84C50", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}
		}

		[Token(Token = "0x20003F9")]
		public static class DefaultSchedulers
		{
			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IScheduler constantTime;

			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static IScheduler tailRecursion;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static IScheduler iteration;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static IScheduler timeBasedOperations;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private static IScheduler asyncConversions;

			[Token(Token = "0x170002D1")]
			public static IScheduler ConstantTimeOperations
			{
				[Token(Token = "0x6001909")]
				[Address(RVA = "0x2B825F4", Offset = "0x2B825F4", VA = "0x2B825F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600190A")]
				[Address(RVA = "0x2B82680", Offset = "0x2B82680", VA = "0x2B82680")]
				set
				{
				}
			}

			[Token(Token = "0x170002D2")]
			public static IScheduler TailRecursion
			{
				[Token(Token = "0x600190B")]
				[Address(RVA = "0x2B826D4", Offset = "0x2B826D4", VA = "0x2B826D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600190C")]
				[Address(RVA = "0x2B82764", Offset = "0x2B82764", VA = "0x2B82764")]
				set
				{
				}
			}

			[Token(Token = "0x170002D3")]
			public static IScheduler Iteration
			{
				[Token(Token = "0x600190D")]
				[Address(RVA = "0x2B827B8", Offset = "0x2B827B8", VA = "0x2B827B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600190E")]
				[Address(RVA = "0x2B82848", Offset = "0x2B82848", VA = "0x2B82848")]
				set
				{
				}
			}

			[Token(Token = "0x170002D4")]
			public static IScheduler TimeBasedOperations
			{
				[Token(Token = "0x600190F")]
				[Address(RVA = "0x2B8289C", Offset = "0x2B8289C", VA = "0x2B8289C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001910")]
				[Address(RVA = "0x2B82920", Offset = "0x2B82920", VA = "0x2B82920")]
				set
				{
				}
			}

			[Token(Token = "0x170002D5")]
			public static IScheduler AsyncConversions
			{
				[Token(Token = "0x6001911")]
				[Address(RVA = "0x2B82974", Offset = "0x2B82974", VA = "0x2B82974")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001912")]
				[Address(RVA = "0x2B82A04", Offset = "0x2B82A04", VA = "0x2B82A04")]
				set
				{
				}
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0x2B82A58", Offset = "0x2B82A58", VA = "0x2B82A58")]
			public static void SetDotNetCompatible()
			{
			}
		}

		[Token(Token = "0x20003FA")]
		private class ThreadPoolScheduler : IScheduler, ISchedulerPeriodic, ISchedulerQueueing
		{
			[Token(Token = "0x20005FE")]
			private sealed class Timer : IDisposable
			{
				[Token(Token = "0x400143C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly HashSet<System.Threading.Timer> s_timers;

				[Token(Token = "0x400143D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private readonly SingleAssignmentDisposable _disposable;

				[Token(Token = "0x400143E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Action _action;

				[Token(Token = "0x400143F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private System.Threading.Timer _timer;

				[Token(Token = "0x4001440")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool _hasAdded;

				[Token(Token = "0x4001441")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
				private bool _hasRemoved;

				[Token(Token = "0x600217C")]
				[Address(RVA = "0x2B859F8", Offset = "0x2B859F8", VA = "0x2B859F8")]
				public Timer(TimeSpan dueTime, Action action)
				{
				}

				[Token(Token = "0x600217D")]
				[Address(RVA = "0x2B86388", Offset = "0x2B86388", VA = "0x2B86388")]
				private void Tick(object state)
				{
				}

				[Token(Token = "0x600217E")]
				[Address(RVA = "0x2B864A8", Offset = "0x2B864A8", VA = "0x2B864A8")]
				private void Unroot()
				{
				}

				[Token(Token = "0x600217F")]
				[Address(RVA = "0x2B8663C", Offset = "0x2B8663C", VA = "0x2B8663C", Slot = "4")]
				public void Dispose()
				{
				}
			}

			[Token(Token = "0x20005FF")]
			private sealed class PeriodicTimer : IDisposable
			{
				[Token(Token = "0x4001442")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly HashSet<System.Threading.Timer> s_timers;

				[Token(Token = "0x4001443")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private Action _action;

				[Token(Token = "0x4001444")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private System.Threading.Timer _timer;

				[Token(Token = "0x4001445")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private readonly AsyncLock _gate;

				[Token(Token = "0x6002181")]
				[Address(RVA = "0x2B85CD0", Offset = "0x2B85CD0", VA = "0x2B85CD0")]
				public PeriodicTimer(TimeSpan period, Action action)
				{
				}

				[Token(Token = "0x6002182")]
				[Address(RVA = "0x2B85EB8", Offset = "0x2B85EB8", VA = "0x2B85EB8")]
				private void Tick(object state)
				{
				}

				[Token(Token = "0x6002183")]
				[Address(RVA = "0x2B85F44", Offset = "0x2B85F44", VA = "0x2B85F44", Slot = "4")]
				public void Dispose()
				{
				}

				[Token(Token = "0x6002185")]
				[Address(RVA = "0x2B86128", Offset = "0x2B86128", VA = "0x2B86128")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BF13C", Offset = "0x12BF13C")]
				private void <Tick>b__5_0()
				{
				}
			}

			[Token(Token = "0x2000600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF00", Offset = "0x12ABF00")]
			private sealed class <>c__DisplayClass3_0
			{
				[Token(Token = "0x4001446")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public BooleanDisposable d;

				[Token(Token = "0x4001447")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Action action;

				[Token(Token = "0x6002186")]
				[Address(RVA = "0x2B858DC", Offset = "0x2B858DC", VA = "0x2B858DC")]
				public <>c__DisplayClass3_0()
				{
				}

				[Token(Token = "0x6002187")]
				[Address(RVA = "0x2B85E80", Offset = "0x2B85E80", VA = "0x2B85E80")]
				internal void <Schedule>b__0(object _)
				{
				}
			}

			[Token(Token = "0x2000601")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF10", Offset = "0x12ABF10")]
			private sealed class <>c__DisplayClass7_0<T>
			{
				[Token(Token = "0x4001448")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ICancelable cancel;

				[Token(Token = "0x4001449")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Action<T> action;

				[Token(Token = "0x6002188")]
				public <>c__DisplayClass7_0()
				{
				}

				[Token(Token = "0x6002189")]
				internal void <ScheduleQueueing>b__0(object callBackState)
				{
				}
			}

			[Token(Token = "0x170002D6")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x6001915")]
				[Address(RVA = "0x2B857BC", Offset = "0x2B857BC", VA = "0x2B857BC", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0x2B81680", Offset = "0x2B81680", VA = "0x2B81680")]
			public ThreadPoolScheduler()
			{
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0x2B85818", Offset = "0x2B85818", VA = "0x2B85818", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001917")]
			[Address(RVA = "0x2B858E4", Offset = "0x2B858E4", VA = "0x2B858E4")]
			public IDisposable Schedule(DateTimeOffset dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0x2B85988", Offset = "0x2B85988", VA = "0x2B85988", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001919")]
			[Address(RVA = "0x2B85C60", Offset = "0x2B85C60", VA = "0x2B85C60", Slot = "7")]
			public IDisposable SchedulePeriodic(TimeSpan period, Action action)
			{
				return null;
			}

			[Token(Token = "0x600191A")]
			public void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action)
			{
			}
		}

		[Token(Token = "0x20003FB")]
		private class MainThreadScheduler : IScheduler, ISchedulerPeriodic, ISchedulerQueueing
		{
			[Token(Token = "0x2000602")]
			private static class QueuedAction<T>
			{
				[Token(Token = "0x400144A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly Action<object> Instance;

				[Token(Token = "0x600218A")]
				public static void Invoke(object state)
				{
				}
			}

			[Token(Token = "0x2000603")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF20", Offset = "0x12ABF20")]
			private sealed class <DelayAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400144B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400144C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400144D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan dueTime;

				[Token(Token = "0x400144E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x400144F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x17000395")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600218F")]
					[Address(RVA = "0x2B8545C", Offset = "0x2B8545C", VA = "0x2B8545C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000396")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002191")]
					[Address(RVA = "0x2B854C4", Offset = "0x2B854C4", VA = "0x2B854C4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600218C")]
				[Address(RVA = "0x2B84D98", Offset = "0x2B84D98", VA = "0x2B84D98")]
				[DebuggerHidden]
				public <DelayAction>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x600218D")]
				[Address(RVA = "0x2B852A4", Offset = "0x2B852A4", VA = "0x2B852A4", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600218E")]
				[Address(RVA = "0x2B852A8", Offset = "0x2B852A8", VA = "0x2B852A8", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002190")]
				[Address(RVA = "0x2B85464", Offset = "0x2B85464", VA = "0x2B85464", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x2000604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF30", Offset = "0x12ABF30")]
			private sealed class <PeriodicAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001450")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001451")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001452")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan period;

				[Token(Token = "0x4001453")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x4001454")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x4001455")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private WaitForSeconds <yieldInstruction>5__2;

				[Token(Token = "0x17000397")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002195")]
					[Address(RVA = "0x2B8574C", Offset = "0x2B8574C", VA = "0x2B8574C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000398")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002197")]
					[Address(RVA = "0x2B857B4", Offset = "0x2B857B4", VA = "0x2B857B4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002192")]
				[Address(RVA = "0x2B84E48", Offset = "0x2B84E48", VA = "0x2B84E48")]
				[DebuggerHidden]
				public <PeriodicAction>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x6002193")]
				[Address(RVA = "0x2B854CC", Offset = "0x2B854CC", VA = "0x2B854CC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002194")]
				[Address(RVA = "0x2B854D0", Offset = "0x2B854D0", VA = "0x2B854D0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002196")]
				[Address(RVA = "0x2B85754", Offset = "0x2B85754", VA = "0x2B85754", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Action<object> scheduleAction;

			[Token(Token = "0x170002D7")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x600191E")]
				[Address(RVA = "0x2B84E74", Offset = "0x2B84E74", VA = "0x2B84E74", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0x2B81178", Offset = "0x2B81178", VA = "0x2B81178")]
			public MainThreadScheduler()
			{
			}

			[Token(Token = "0x600191C")]
			[Address(RVA = "0x2B84D14", Offset = "0x2B84D14", VA = "0x2B84D14")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD58C", Offset = "0x12BD58C")]
			private IEnumerator DelayAction(TimeSpan dueTime, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600191D")]
			[Address(RVA = "0x2B84DC4", Offset = "0x2B84DC4", VA = "0x2B84DC4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD5F0", Offset = "0x12BD5F0")]
			private IEnumerator PeriodicAction(TimeSpan period, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600191F")]
			[Address(RVA = "0x2B84ED0", Offset = "0x2B84ED0", VA = "0x2B84ED0")]
			private void Schedule(object state)
			{
			}

			[Token(Token = "0x6001920")]
			[Address(RVA = "0x2B84F6C", Offset = "0x2B84F6C", VA = "0x2B84F6C", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x2B85050", Offset = "0x2B85050", VA = "0x2B85050")]
			public IDisposable Schedule(DateTimeOffset dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x2B850F4", Offset = "0x2B850F4", VA = "0x2B850F4", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x2B851CC", Offset = "0x2B851CC", VA = "0x2B851CC", Slot = "7")]
			public IDisposable SchedulePeriodic(TimeSpan period, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001924")]
			private void ScheduleQueueing<T>(object state)
			{
			}

			[Token(Token = "0x6001925")]
			public void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action)
			{
			}
		}

		[Token(Token = "0x20003FC")]
		private class IgnoreTimeScaleMainThreadScheduler : IScheduler, ISchedulerPeriodic, ISchedulerQueueing
		{
			[Token(Token = "0x2000605")]
			private static class QueuedAction<T>
			{
				[Token(Token = "0x4001456")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly Action<object> Instance;

				[Token(Token = "0x6002198")]
				public static void Invoke(object state)
				{
				}
			}

			[Token(Token = "0x2000606")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF40", Offset = "0x12ABF40")]
			private sealed class <DelayAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001457")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001458")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001459")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan dueTime;

				[Token(Token = "0x400145A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x400145B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x400145C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <elapsed>5__2;

				[Token(Token = "0x400145D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x17000399")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600219D")]
					[Address(RVA = "0x2B8481C", Offset = "0x2B8481C", VA = "0x2B8481C", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039A")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600219F")]
					[Address(RVA = "0x2B84884", Offset = "0x2B84884", VA = "0x2B84884", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600219A")]
				[Address(RVA = "0x2B840C8", Offset = "0x2B840C8", VA = "0x2B840C8")]
				[DebuggerHidden]
				public <DelayAction>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x600219B")]
				[Address(RVA = "0x2B845D4", Offset = "0x2B845D4", VA = "0x2B845D4", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600219C")]
				[Address(RVA = "0x2B845D8", Offset = "0x2B845D8", VA = "0x2B845D8", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600219E")]
				[Address(RVA = "0x2B84824", Offset = "0x2B84824", VA = "0x2B84824", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x2000607")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF50", Offset = "0x12ABF50")]
			private sealed class <PeriodicAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400145E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400145F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001460")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan period;

				[Token(Token = "0x4001461")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x4001462")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x4001463")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <elapsed>5__2;

				[Token(Token = "0x4001464")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x1700039B")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021A3")]
					[Address(RVA = "0x2B84B04", Offset = "0x2B84B04", VA = "0x2B84B04", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039C")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021A5")]
					[Address(RVA = "0x2B84B6C", Offset = "0x2B84B6C", VA = "0x2B84B6C", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021A0")]
				[Address(RVA = "0x2B84178", Offset = "0x2B84178", VA = "0x2B84178")]
				[DebuggerHidden]
				public <PeriodicAction>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x60021A1")]
				[Address(RVA = "0x2B8488C", Offset = "0x2B8488C", VA = "0x2B8488C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021A2")]
				[Address(RVA = "0x2B84890", Offset = "0x2B84890", VA = "0x2B84890", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021A4")]
				[Address(RVA = "0x2B84B0C", Offset = "0x2B84B0C", VA = "0x2B84B0C", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Action<object> scheduleAction;

			[Token(Token = "0x170002D8")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x6001929")]
				[Address(RVA = "0x2B841A4", Offset = "0x2B841A4", VA = "0x2B841A4", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x6001926")]
			[Address(RVA = "0x2B812D0", Offset = "0x2B812D0", VA = "0x2B812D0")]
			public IgnoreTimeScaleMainThreadScheduler()
			{
			}

			[Token(Token = "0x6001927")]
			[Address(RVA = "0x2B84044", Offset = "0x2B84044", VA = "0x2B84044")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD654", Offset = "0x12BD654")]
			private IEnumerator DelayAction(TimeSpan dueTime, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0x2B840F4", Offset = "0x2B840F4", VA = "0x2B840F4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD6B8", Offset = "0x12BD6B8")]
			private IEnumerator PeriodicAction(TimeSpan period, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0x2B84200", Offset = "0x2B84200", VA = "0x2B84200")]
			private void Schedule(object state)
			{
			}

			[Token(Token = "0x600192B")]
			[Address(RVA = "0x2B8429C", Offset = "0x2B8429C", VA = "0x2B8429C", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x600192C")]
			[Address(RVA = "0x2B84380", Offset = "0x2B84380", VA = "0x2B84380")]
			public IDisposable Schedule(DateTimeOffset dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x600192D")]
			[Address(RVA = "0x2B84424", Offset = "0x2B84424", VA = "0x2B84424", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x600192E")]
			[Address(RVA = "0x2B844FC", Offset = "0x2B844FC", VA = "0x2B844FC", Slot = "7")]
			public IDisposable SchedulePeriodic(TimeSpan period, Action action)
			{
				return null;
			}

			[Token(Token = "0x600192F")]
			public void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action)
			{
			}
		}

		[Token(Token = "0x20003FD")]
		private class FixedUpdateMainThreadScheduler : IScheduler, ISchedulerPeriodic, ISchedulerQueueing
		{
			[Token(Token = "0x2000608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF60", Offset = "0x12ABF60")]
			private sealed class <ImmediateAction>d__1<T> : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001465")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x4001466")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x4001467")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ICancelable cancellation;

				[Token(Token = "0x4001468")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Action<T> action;

				[Token(Token = "0x4001469")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public T state;

				[Token(Token = "0x1700039D")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021A9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039E")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021AB")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021A6")]
				[DebuggerHidden]
				public <ImmediateAction>d__1(int <>1__state)
				{
				}

				[Token(Token = "0x60021A7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021A8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021AA")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x2000609")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF70", Offset = "0x12ABF70")]
			private sealed class <DelayAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400146A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400146B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400146C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan dueTime;

				[Token(Token = "0x400146D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x400146E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x400146F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <startTime>5__2;

				[Token(Token = "0x4001470")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x1700039F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021AF")]
					[Address(RVA = "0x2B83CE8", Offset = "0x2B83CE8", VA = "0x2B83CE8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A0")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021B1")]
					[Address(RVA = "0x2B83D50", Offset = "0x2B83D50", VA = "0x2B83D50", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021AC")]
				[Address(RVA = "0x2B836AC", Offset = "0x2B836AC", VA = "0x2B836AC")]
				[DebuggerHidden]
				public <DelayAction>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x60021AD")]
				[Address(RVA = "0x2B83AA8", Offset = "0x2B83AA8", VA = "0x2B83AA8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021AE")]
				[Address(RVA = "0x2B83AAC", Offset = "0x2B83AAC", VA = "0x2B83AAC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021B0")]
				[Address(RVA = "0x2B83CF0", Offset = "0x2B83CF0", VA = "0x2B83CF0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200060A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF80", Offset = "0x12ABF80")]
			private sealed class <PeriodicAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001471")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001472")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001473")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan period;

				[Token(Token = "0x4001474")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x4001475")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x4001476")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <startTime>5__2;

				[Token(Token = "0x4001477")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x170003A1")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021B5")]
					[Address(RVA = "0x2B83FD4", Offset = "0x2B83FD4", VA = "0x2B83FD4", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A2")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021B7")]
					[Address(RVA = "0x2B8403C", Offset = "0x2B8403C", VA = "0x2B8403C", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021B2")]
				[Address(RVA = "0x2B8375C", Offset = "0x2B8375C", VA = "0x2B8375C")]
				[DebuggerHidden]
				public <PeriodicAction>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x60021B3")]
				[Address(RVA = "0x2B83D58", Offset = "0x2B83D58", VA = "0x2B83D58", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021B4")]
				[Address(RVA = "0x2B83D5C", Offset = "0x2B83D5C", VA = "0x2B83D5C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021B6")]
				[Address(RVA = "0x2B83FDC", Offset = "0x2B83FDC", VA = "0x2B83FDC", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x170002D9")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x6001934")]
				[Address(RVA = "0x2B83788", Offset = "0x2B83788", VA = "0x2B83788", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0x2B81428", Offset = "0x2B81428", VA = "0x2B81428")]
			public FixedUpdateMainThreadScheduler()
			{
			}

			[Token(Token = "0x6001931")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD71C", Offset = "0x12BD71C")]
			private IEnumerator ImmediateAction<T>(T state, Action<T> action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0x2B83628", Offset = "0x2B83628", VA = "0x2B83628")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD780", Offset = "0x12BD780")]
			private IEnumerator DelayAction(TimeSpan dueTime, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0x2B836D8", Offset = "0x2B836D8", VA = "0x2B836D8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD7E4", Offset = "0x12BD7E4")]
			private IEnumerator PeriodicAction(TimeSpan period, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x6001935")]
			[Address(RVA = "0x2B837E4", Offset = "0x2B837E4", VA = "0x2B837E4", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0x2B8392C", Offset = "0x2B8392C", VA = "0x2B8392C")]
			public IDisposable Schedule(DateTimeOffset dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0x2B83854", Offset = "0x2B83854", VA = "0x2B83854", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001938")]
			[Address(RVA = "0x2B839D0", Offset = "0x2B839D0", VA = "0x2B839D0", Slot = "7")]
			public IDisposable SchedulePeriodic(TimeSpan period, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001939")]
			public void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action)
			{
			}
		}

		[Token(Token = "0x20003FE")]
		private class EndOfFrameMainThreadScheduler : IScheduler, ISchedulerPeriodic, ISchedulerQueueing
		{
			[Token(Token = "0x200060B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABF90", Offset = "0x12ABF90")]
			private sealed class <ImmediateAction>d__1<T> : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001478")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x4001479")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x400147A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ICancelable cancellation;

				[Token(Token = "0x400147B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Action<T> action;

				[Token(Token = "0x400147C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public T state;

				[Token(Token = "0x170003A3")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021BB")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A4")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021BD")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021B8")]
				[DebuggerHidden]
				public <ImmediateAction>d__1(int <>1__state)
				{
				}

				[Token(Token = "0x60021B9")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021BA")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021BC")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200060C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFA0", Offset = "0x12ABFA0")]
			private sealed class <DelayAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400147D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400147E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x400147F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan dueTime;

				[Token(Token = "0x4001480")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x4001481")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x4001482")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <elapsed>5__2;

				[Token(Token = "0x4001483")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x170003A5")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021C1")]
					[Address(RVA = "0x2B832D0", Offset = "0x2B832D0", VA = "0x2B832D0", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A6")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021C3")]
					[Address(RVA = "0x2B83338", Offset = "0x2B83338", VA = "0x2B83338", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021BE")]
				[Address(RVA = "0x2B82C8C", Offset = "0x2B82C8C", VA = "0x2B82C8C")]
				[DebuggerHidden]
				public <DelayAction>d__2(int <>1__state)
				{
				}

				[Token(Token = "0x60021BF")]
				[Address(RVA = "0x2B83088", Offset = "0x2B83088", VA = "0x2B83088", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021C0")]
				[Address(RVA = "0x2B8308C", Offset = "0x2B8308C", VA = "0x2B8308C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021C2")]
				[Address(RVA = "0x2B832D8", Offset = "0x2B832D8", VA = "0x2B832D8", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200060D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFB0", Offset = "0x12ABFB0")]
			private sealed class <PeriodicAction>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001484")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001485")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001486")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TimeSpan period;

				[Token(Token = "0x4001487")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ICancelable cancellation;

				[Token(Token = "0x4001488")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Action action;

				[Token(Token = "0x4001489")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private float <elapsed>5__2;

				[Token(Token = "0x400148A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float <dt>5__3;

				[Token(Token = "0x170003A7")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60021C7")]
					[Address(RVA = "0x2B835B8", Offset = "0x2B835B8", VA = "0x2B835B8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A8")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60021C9")]
					[Address(RVA = "0x2B83620", Offset = "0x2B83620", VA = "0x2B83620", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60021C4")]
				[Address(RVA = "0x2B82D3C", Offset = "0x2B82D3C", VA = "0x2B82D3C")]
				[DebuggerHidden]
				public <PeriodicAction>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x60021C5")]
				[Address(RVA = "0x2B83340", Offset = "0x2B83340", VA = "0x2B83340", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60021C6")]
				[Address(RVA = "0x2B83344", Offset = "0x2B83344", VA = "0x2B83344", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60021C8")]
				[Address(RVA = "0x2B835C0", Offset = "0x2B835C0", VA = "0x2B835C0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x170002DA")]
			public DateTimeOffset Now
			{
				[Token(Token = "0x600193E")]
				[Address(RVA = "0x2B82D68", Offset = "0x2B82D68", VA = "0x2B82D68", Slot = "4")]
				get
				{
					return default(DateTimeOffset);
				}
			}

			[Token(Token = "0x600193A")]
			[Address(RVA = "0x2B81544", Offset = "0x2B81544", VA = "0x2B81544")]
			public EndOfFrameMainThreadScheduler()
			{
			}

			[Token(Token = "0x600193B")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD848", Offset = "0x12BD848")]
			private IEnumerator ImmediateAction<T>(T state, Action<T> action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0x2B82C08", Offset = "0x2B82C08", VA = "0x2B82C08")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD8AC", Offset = "0x12BD8AC")]
			private IEnumerator DelayAction(TimeSpan dueTime, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600193D")]
			[Address(RVA = "0x2B82CB8", Offset = "0x2B82CB8", VA = "0x2B82CB8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BD910", Offset = "0x12BD910")]
			private IEnumerator PeriodicAction(TimeSpan period, Action action, ICancelable cancellation)
			{
				return null;
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0x2B82DC4", Offset = "0x2B82DC4", VA = "0x2B82DC4", Slot = "5")]
			public IDisposable Schedule(Action action)
			{
				return null;
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0x2B82F0C", Offset = "0x2B82F0C", VA = "0x2B82F0C")]
			public IDisposable Schedule(DateTimeOffset dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001941")]
			[Address(RVA = "0x2B82E34", Offset = "0x2B82E34", VA = "0x2B82E34", Slot = "6")]
			public IDisposable Schedule(TimeSpan dueTime, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001942")]
			[Address(RVA = "0x2B82FB0", Offset = "0x2B82FB0", VA = "0x2B82FB0", Slot = "7")]
			public IDisposable SchedulePeriodic(TimeSpan period, Action action)
			{
				return null;
			}

			[Token(Token = "0x6001943")]
			public void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action)
			{
			}
		}

		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB080", Offset = "0x12AB080")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Action> action;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IScheduler scheduler;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object gate;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CompositeDisposable group;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action recursiveAction;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action <>9__1;

			[Token(Token = "0x6001944")]
			[Address(RVA = "0x2B80C34", Offset = "0x2B80C34", VA = "0x2B80C34")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001945")]
			[Address(RVA = "0x2B81688", Offset = "0x2B81688", VA = "0x2B81688")]
			internal void <Schedule>b__0()
			{
			}

			[Token(Token = "0x6001946")]
			[Address(RVA = "0x2B81728", Offset = "0x2B81728", VA = "0x2B81728")]
			internal void <Schedule>b__1()
			{
			}
		}

		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB090", Offset = "0x12AB090")]
		private sealed class <>c__DisplayClass11_1
		{
			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isAdded;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IDisposable d;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDone;

			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass11_0 CS$<>8__locals1;

			[Token(Token = "0x6001947")]
			[Address(RVA = "0x2B818E8", Offset = "0x2B818E8", VA = "0x2B818E8")]
			public <>c__DisplayClass11_1()
			{
			}

			[Token(Token = "0x6001948")]
			[Address(RVA = "0x2B818F0", Offset = "0x2B818F0", VA = "0x2B818F0")]
			internal void <Schedule>b__2()
			{
			}
		}

		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0A0", Offset = "0x12AB0A0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Action<TimeSpan>> action;

			[Token(Token = "0x4000D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IScheduler scheduler;

			[Token(Token = "0x4000D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object gate;

			[Token(Token = "0x4000D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CompositeDisposable group;

			[Token(Token = "0x4000D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action recursiveAction;

			[Token(Token = "0x4000D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<TimeSpan> <>9__1;

			[Token(Token = "0x6001949")]
			[Address(RVA = "0x2B80DCC", Offset = "0x2B80DCC", VA = "0x2B80DCC")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0x2B819DC", Offset = "0x2B819DC", VA = "0x2B819DC")]
			internal void <Schedule>b__0()
			{
			}

			[Token(Token = "0x600194B")]
			[Address(RVA = "0x2B81A84", Offset = "0x2B81A84", VA = "0x2B81A84")]
			internal void <Schedule>b__1(TimeSpan dt)
			{
			}
		}

		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0B0", Offset = "0x12AB0B0")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x4000D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isAdded;

			[Token(Token = "0x4000D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IDisposable d;

			[Token(Token = "0x4000D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDone;

			[Token(Token = "0x4000D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x600194C")]
			[Address(RVA = "0x2B81C4C", Offset = "0x2B81C4C", VA = "0x2B81C4C")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x600194D")]
			[Address(RVA = "0x2B81C54", Offset = "0x2B81C54", VA = "0x2B81C54")]
			internal void <Schedule>b__2()
			{
			}
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0C0", Offset = "0x12AB0C0")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Action<DateTimeOffset>> action;

			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IScheduler scheduler;

			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object gate;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CompositeDisposable group;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action recursiveAction;

			[Token(Token = "0x4000D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<DateTimeOffset> <>9__1;

			[Token(Token = "0x600194E")]
			[Address(RVA = "0x2B80F24", Offset = "0x2B80F24", VA = "0x2B80F24")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600194F")]
			[Address(RVA = "0x2B81D40", Offset = "0x2B81D40", VA = "0x2B81D40")]
			internal void <Schedule>b__0()
			{
			}

			[Token(Token = "0x6001950")]
			[Address(RVA = "0x2B81DE8", Offset = "0x2B81DE8", VA = "0x2B81DE8")]
			internal void <Schedule>b__1(DateTimeOffset dt)
			{
			}
		}

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0D0", Offset = "0x12AB0D0")]
		private sealed class <>c__DisplayClass13_1
		{
			[Token(Token = "0x4000D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isAdded;

			[Token(Token = "0x4000D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IDisposable d;

			[Token(Token = "0x4000D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDone;

			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public <>c__DisplayClass13_0 CS$<>8__locals1;

			[Token(Token = "0x6001951")]
			[Address(RVA = "0x2B81F78", Offset = "0x2B81F78", VA = "0x2B81F78")]
			public <>c__DisplayClass13_1()
			{
			}

			[Token(Token = "0x6001952")]
			[Address(RVA = "0x2B81F80", Offset = "0x2B81F80", VA = "0x2B81F80")]
			internal void <Schedule>b__2()
			{
			}
		}

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IScheduler CurrentThread;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly IScheduler Immediate;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IScheduler ThreadPool;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IScheduler mainThread;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IScheduler mainThreadIgnoreTimeScale;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IScheduler mainThreadFixedUpdate;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IScheduler mainThreadEndOfFrame;

		[Token(Token = "0x170000F1")]
		public static bool IsCurrentThreadSchedulerScheduleRequired
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x2B80878", Offset = "0x2B80878", VA = "0x2B80878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F2")]
		public static DateTimeOffset Now
		{
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x2B808D4", Offset = "0x2B808D4", VA = "0x2B808D4")]
			get
			{
				return default(DateTimeOffset);
			}
		}

		[Token(Token = "0x170000F3")]
		public static IScheduler MainThread
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x2B810CC", Offset = "0x2B810CC", VA = "0x2B810CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public static IScheduler MainThreadIgnoreTimeScale
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x2B81224", Offset = "0x2B81224", VA = "0x2B81224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		public static IScheduler MainThreadFixedUpdate
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x2B8137C", Offset = "0x2B8137C", VA = "0x2B8137C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public static IScheduler MainThreadEndOfFrame
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x2B81498", Offset = "0x2B81498", VA = "0x2B81498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x2B7CFF0", Offset = "0x2B7CFF0", VA = "0x2B7CFF0")]
		public static TimeSpan Normalize(TimeSpan timeSpan)
		{
			return default(TimeSpan);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x2B80934", Offset = "0x2B80934", VA = "0x2B80934")]
		public static IDisposable Schedule(this IScheduler scheduler, DateTimeOffset dueTime, Action action)
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x2B80AB4", Offset = "0x2B80AB4", VA = "0x2B80AB4")]
		public static IDisposable Schedule(this IScheduler scheduler, Action<Action> action)
		{
			return null;
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x2B80C3C", Offset = "0x2B80C3C", VA = "0x2B80C3C")]
		public static IDisposable Schedule(this IScheduler scheduler, TimeSpan dueTime, Action<Action<TimeSpan>> action)
		{
			return null;
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x2B80DD4", Offset = "0x2B80DD4", VA = "0x2B80DD4")]
		public static IDisposable Schedule(this IScheduler scheduler, DateTimeOffset dueTime, Action<Action<DateTimeOffset>> action)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x2B80F2C", Offset = "0x2B80F2C", VA = "0x2B80F2C")]
		public static void SetDefaultForUnity()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public interface IScheduler
	{
		[Token(Token = "0x170000F7")]
		DateTimeOffset Now
		{
			[Token(Token = "0x600084D")]
			get;
		}

		[Token(Token = "0x600084E")]
		IDisposable Schedule(Action action);

		[Token(Token = "0x600084F")]
		IDisposable Schedule(TimeSpan dueTime, Action action);
	}
	[Token(Token = "0x200010C")]
	public interface ISchedulerPeriodic
	{
		[Token(Token = "0x6000850")]
		IDisposable SchedulePeriodic(TimeSpan period, Action action);
	}
	[Token(Token = "0x200010D")]
	public interface ISchedulerLongRunning
	{
		[Token(Token = "0x6000851")]
		IDisposable ScheduleLongRunning(Action<ICancelable> action);
	}
	[Token(Token = "0x200010E")]
	public interface ISchedulerQueueing
	{
		[Token(Token = "0x6000852")]
		void ScheduleQueueing<T>(ICancelable cancel, T state, Action<T> action);
	}
	[Token(Token = "0x200010F")]
	public sealed class AsyncSubject<T> : ISubject<T>, ISubject<T, T>, IObserver<T>, IObservable<T>, IOptimizedObservable<T>, IDisposable
	{
		[Token(Token = "0x2000405")]
		private class Subscription : IDisposable
		{
			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private AsyncSubject<T> parent;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObserver<T> unsubscribeTarget;

			[Token(Token = "0x6001953")]
			public Subscription(AsyncSubject<T> parent, IObserver<T> unsubscribeTarget)
			{
			}

			[Token(Token = "0x6001954")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object observerLock;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T lastValue;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasValue;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isStopped;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastError;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObserver<T> outObserver;

		[Token(Token = "0x170000F8")]
		public T Value
		{
			[Token(Token = "0x6000853")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000F9")]
		public bool HasObservers
		{
			[Token(Token = "0x6000854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsCompleted
		{
			[Token(Token = "0x6000855")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000856")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000857")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000858")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000859")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600085B")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x600085C")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x600085D")]
		public AsyncSubject()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public sealed class BehaviorSubject<T> : ISubject<T>, ISubject<T, T>, IObserver<T>, IObservable<T>, IDisposable, IOptimizedObservable<T>
	{
		[Token(Token = "0x2000406")]
		private class Subscription : IDisposable
		{
			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private BehaviorSubject<T> parent;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObserver<T> unsubscribeTarget;

			[Token(Token = "0x6001955")]
			public Subscription(BehaviorSubject<T> parent, IObserver<T> unsubscribeTarget)
			{
			}

			[Token(Token = "0x6001956")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object observerLock;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isStopped;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T lastValue;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastError;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObserver<T> outObserver;

		[Token(Token = "0x170000FB")]
		public T Value
		{
			[Token(Token = "0x600085F")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000FC")]
		public bool HasObservers
		{
			[Token(Token = "0x6000860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600085E")]
		public BehaviorSubject(T defaultValue)
		{
		}

		[Token(Token = "0x6000861")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000862")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000863")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000864")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000865")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000866")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x6000867")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000111")]
	public interface IConnectableObservable<T> : IObservable<T>
	{
		[Token(Token = "0x6000868")]
		IDisposable Connect();
	}
	[Token(Token = "0x2000112")]
	public interface ISubject<TSource, TResult> : IObserver<TSource>, IObservable<TResult>
	{
	}
	[Token(Token = "0x2000113")]
	public interface ISubject<T> : ISubject<T, T>, IObserver<T>, IObservable<T>
	{
	}
	[Token(Token = "0x2000114")]
	public sealed class ReplaySubject<T> : ISubject<T>, ISubject<T, T>, IObserver<T>, IObservable<T>, IOptimizedObservable<T>, IDisposable
	{
		[Token(Token = "0x2000407")]
		private class Subscription : IDisposable
		{
			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReplaySubject<T> parent;

			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObserver<T> unsubscribeTarget;

			[Token(Token = "0x6001957")]
			public Subscription(ReplaySubject<T> parent, IObserver<T> unsubscribeTarget)
			{
			}

			[Token(Token = "0x6001958")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object observerLock;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isStopped;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastError;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObserver<T> outObserver;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int bufferSize;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan window;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DateTimeOffset startTime;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<TimeInterval<T>> queue;

		[Token(Token = "0x6000869")]
		public ReplaySubject()
		{
		}

		[Token(Token = "0x600086A")]
		public ReplaySubject(IScheduler scheduler)
		{
		}

		[Token(Token = "0x600086B")]
		public ReplaySubject(int bufferSize)
		{
		}

		[Token(Token = "0x600086C")]
		public ReplaySubject(int bufferSize, IScheduler scheduler)
		{
		}

		[Token(Token = "0x600086D")]
		public ReplaySubject(TimeSpan window)
		{
		}

		[Token(Token = "0x600086E")]
		public ReplaySubject(TimeSpan window, IScheduler scheduler)
		{
		}

		[Token(Token = "0x600086F")]
		public ReplaySubject(int bufferSize, TimeSpan window, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000870")]
		private void Trim()
		{
		}

		[Token(Token = "0x6000871")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000872")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000873")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000874")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000875")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000876")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x6000877")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000115")]
	public sealed class Subject<T> : ISubject<T>, ISubject<T, T>, IObserver<T>, IObservable<T>, IDisposable, IOptimizedObservable<T>
	{
		[Token(Token = "0x2000408")]
		private class Subscription : IDisposable
		{
			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Subject<T> parent;

			[Token(Token = "0x4000D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObserver<T> unsubscribeTarget;

			[Token(Token = "0x6001959")]
			public Subscription(Subject<T> parent, IObserver<T> unsubscribeTarget)
			{
			}

			[Token(Token = "0x600195A")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object observerLock;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isStopped;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastError;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObserver<T> outObserver;

		[Token(Token = "0x170000FD")]
		public bool HasObservers
		{
			[Token(Token = "0x6000878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000879")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x600087A")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x600087B")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x600087C")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600087E")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x600087F")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000880")]
		public Subject()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public static class SubjectExtensions
	{
		[Token(Token = "0x2000409")]
		private class AnonymousSubject<T, U> : ISubject<T, U>, IObserver<T>, IObservable<U>
		{
			[Token(Token = "0x4000D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObserver<T> observer;

			[Token(Token = "0x4000D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObservable<U> observable;

			[Token(Token = "0x600195B")]
			public AnonymousSubject(IObserver<T> observer, IObservable<U> observable)
			{
			}

			[Token(Token = "0x600195C")]
			public void OnCompleted()
			{
			}

			[Token(Token = "0x600195D")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x600195E")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x600195F")]
			public IDisposable Subscribe(IObserver<U> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x200040A")]
		private class AnonymousSubject<T> : AnonymousSubject<T, T>, ISubject<T>, ISubject<T, T>, IObserver<T>, IObservable<T>
		{
			[Token(Token = "0x6001960")]
			public AnonymousSubject(IObserver<T> observer, IObservable<T> observable)
			{
			}
		}

		[Token(Token = "0x6000881")]
		public static ISubject<T> Synchronize<T>(this ISubject<T> subject)
		{
			return null;
		}

		[Token(Token = "0x6000882")]
		public static ISubject<T> Synchronize<T>(this ISubject<T> subject, object gate)
		{
			return null;
		}
	}
	[Token(Token = "0x2000117")]
	public interface IObservable<T>
	{
		[Token(Token = "0x6000883")]
		IDisposable Subscribe(IObserver<T> observer);
	}
	[Token(Token = "0x2000118")]
	public interface IGroupedObservable<TKey, TElement> : IObservable<TElement>
	{
		[Token(Token = "0x170000FE")]
		TKey Key
		{
			[Token(Token = "0x6000884")]
			get;
		}
	}
	[Token(Token = "0x2000119")]
	public interface IObserver<T>
	{
		[Token(Token = "0x6000885")]
		void OnCompleted();

		[Token(Token = "0x6000886")]
		void OnError(Exception error);

		[Token(Token = "0x6000887")]
		void OnNext(T value);
	}
	[Token(Token = "0x200011A")]
	public interface IOptimizedObservable<T> : IObservable<T>
	{
		[Token(Token = "0x6000888")]
		bool IsRequiredSubscribeOnCurrentThread();
	}
	[Token(Token = "0x200011B")]
	public static class OptimizedObservableExtensions
	{
		[Token(Token = "0x6000889")]
		public static bool IsRequiredSubscribeOnCurrentThread<T>(this IObservable<T> source)
		{
			return default(bool);
		}

		[Token(Token = "0x600088A")]
		public static bool IsRequiredSubscribeOnCurrentThread<T>(this IObservable<T> source, IScheduler scheduler)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200011C")]
	public interface IProgress<T>
	{
		[Token(Token = "0x600088B")]
		void Report(T value);
	}
	[Token(Token = "0x200011D")]
	public class Progress<T> : IProgress<T>
	{
		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> report;

		[Token(Token = "0x600088C")]
		public Progress(Action<T> report)
		{
		}

		[Token(Token = "0x600088D")]
		public void Report(T value)
		{
		}
	}
	[Token(Token = "0x200011E")]
	public interface IStructuralEquatable
	{
		[Token(Token = "0x600088E")]
		bool Equals(object other, IEqualityComparer comparer);

		[Token(Token = "0x600088F")]
		int GetHashCode(IEqualityComparer comparer);
	}
	[Token(Token = "0x200011F")]
	public interface IStructuralComparable
	{
		[Token(Token = "0x6000890")]
		int CompareTo(object other, IComparer comparer);
	}
	[Token(Token = "0x2000120")]
	internal interface ITuple
	{
		[Token(Token = "0x6000891")]
		new string ToString();
	}
	[Token(Token = "0x2000121")]
	public static class Tuple
	{
		[Token(Token = "0x6000892")]
		public static Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>> Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		public static Tuple<T1, T2, T3, T4, T5, T6, T7> Create<T1, T2, T3, T4, T5, T6, T7>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
		{
			return default(Tuple<T1, T2, T3, T4, T5, T6, T7>);
		}

		[Token(Token = "0x6000894")]
		public static Tuple<T1, T2, T3, T4, T5, T6> Create<T1, T2, T3, T4, T5, T6>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
		{
			return default(Tuple<T1, T2, T3, T4, T5, T6>);
		}

		[Token(Token = "0x6000895")]
		public static Tuple<T1, T2, T3, T4, T5> Create<T1, T2, T3, T4, T5>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
		{
			return default(Tuple<T1, T2, T3, T4, T5>);
		}

		[Token(Token = "0x6000896")]
		public static Tuple<T1, T2, T3, T4> Create<T1, T2, T3, T4>(T1 item1, T2 item2, T3 item3, T4 item4)
		{
			return default(Tuple<T1, T2, T3, T4>);
		}

		[Token(Token = "0x6000897")]
		public static Tuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3)
		{
			return default(Tuple<T1, T2, T3>);
		}

		[Token(Token = "0x6000898")]
		public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2)
		{
			return default(Tuple<T1, T2>);
		}

		[Token(Token = "0x6000899")]
		public static Tuple<T1> Create<T1>(T1 item1)
		{
			return default(Tuple<T1>);
		}
	}
	[Serializable]
	[Token(Token = "0x2000122")]
	public class Tuple<T1, T2, T3, T4, T5, T6, T7, TRest> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3, T4, T5, T6, T7, TRest>>
	{
		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 item4;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 item5;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T6 item6;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T7 item7;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TRest rest;

		[Token(Token = "0x170000FF")]
		public T1 Item1
		{
			[Token(Token = "0x600089B")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x17000100")]
		public T2 Item2
		{
			[Token(Token = "0x600089C")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x17000101")]
		public T3 Item3
		{
			[Token(Token = "0x600089D")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x17000102")]
		public T4 Item4
		{
			[Token(Token = "0x600089E")]
			get
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x17000103")]
		public T5 Item5
		{
			[Token(Token = "0x600089F")]
			get
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x17000104")]
		public T6 Item6
		{
			[Token(Token = "0x60008A0")]
			get
			{
				return (T6)null;
			}
		}

		[Token(Token = "0x17000105")]
		public T7 Item7
		{
			[Token(Token = "0x60008A1")]
			get
			{
				return (T7)null;
			}
		}

		[Token(Token = "0x17000106")]
		public TRest Rest
		{
			[Token(Token = "0x60008A2")]
			get
			{
				return (TRest)null;
			}
		}

		[Token(Token = "0x600089A")]
		public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)
		{
		}

		[Token(Token = "0x60008A3")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008A4")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008A5")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A6")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A7")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008A8")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008A9")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008AA")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008AB")]
		public bool Equals(Tuple<T1, T2, T3, T4, T5, T6, T7, TRest> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000123")]
	public struct Tuple<T1> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1>>
	{
		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x17000107")]
		public T1 Item1
		{
			[Token(Token = "0x60008AD")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x60008AC")]
		public Tuple(T1 item1)
		{
		}

		[Token(Token = "0x60008AE")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008AF")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008B0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B1")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008B3")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008B4")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008B6")]
		public bool Equals(Tuple<T1> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000124")]
	public struct Tuple<T1, T2> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2>>
	{
		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x17000108")]
		public T1 Item1
		{
			[Token(Token = "0x60008B8")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x17000109")]
		public T2 Item2
		{
			[Token(Token = "0x60008B9")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x60008B7")]
		public Tuple(T1 item1, T2 item2)
		{
		}

		[Token(Token = "0x60008BA")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008BB")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008BC")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BD")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008BF")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008C0")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008C1")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		public bool Equals(Tuple<T1, T2> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000125")]
	public struct Tuple<T1, T2, T3> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3>>
	{
		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x1700010A")]
		public T1 Item1
		{
			[Token(Token = "0x60008C4")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x1700010B")]
		public T2 Item2
		{
			[Token(Token = "0x60008C5")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x1700010C")]
		public T3 Item3
		{
			[Token(Token = "0x60008C6")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x60008C3")]
		public Tuple(T1 item1, T2 item2, T3 item3)
		{
		}

		[Token(Token = "0x60008C7")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008C8")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008C9")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CA")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CB")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008CC")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008CD")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008CE")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008CF")]
		public bool Equals(Tuple<T1, T2, T3> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000126")]
	public struct Tuple<T1, T2, T3, T4> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3, T4>>
	{
		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 item4;

		[Token(Token = "0x1700010D")]
		public T1 Item1
		{
			[Token(Token = "0x60008D1")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x1700010E")]
		public T2 Item2
		{
			[Token(Token = "0x60008D2")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x1700010F")]
		public T3 Item3
		{
			[Token(Token = "0x60008D3")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x17000110")]
		public T4 Item4
		{
			[Token(Token = "0x60008D4")]
			get
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x60008D0")]
		public Tuple(T1 item1, T2 item2, T3 item3, T4 item4)
		{
		}

		[Token(Token = "0x60008D5")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008D6")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008D7")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D8")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008DA")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008DB")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		public bool Equals(Tuple<T1, T2, T3, T4> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000127")]
	public struct Tuple<T1, T2, T3, T4, T5> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3, T4, T5>>
	{
		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 item4;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 item5;

		[Token(Token = "0x17000111")]
		public T1 Item1
		{
			[Token(Token = "0x60008DF")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x17000112")]
		public T2 Item2
		{
			[Token(Token = "0x60008E0")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x17000113")]
		public T3 Item3
		{
			[Token(Token = "0x60008E1")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x17000114")]
		public T4 Item4
		{
			[Token(Token = "0x60008E2")]
			get
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x17000115")]
		public T5 Item5
		{
			[Token(Token = "0x60008E3")]
			get
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x60008DE")]
		public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
		{
		}

		[Token(Token = "0x60008E4")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008E5")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008E6")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E7")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E8")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008E9")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008EA")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008EC")]
		public bool Equals(Tuple<T1, T2, T3, T4, T5> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000128")]
	public struct Tuple<T1, T2, T3, T4, T5, T6> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3, T4, T5, T6>>
	{
		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 item4;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 item5;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T6 item6;

		[Token(Token = "0x17000116")]
		public T1 Item1
		{
			[Token(Token = "0x60008EE")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x17000117")]
		public T2 Item2
		{
			[Token(Token = "0x60008EF")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x17000118")]
		public T3 Item3
		{
			[Token(Token = "0x60008F0")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x17000119")]
		public T4 Item4
		{
			[Token(Token = "0x60008F1")]
			get
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x1700011A")]
		public T5 Item5
		{
			[Token(Token = "0x60008F2")]
			get
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x1700011B")]
		public T6 Item6
		{
			[Token(Token = "0x60008F3")]
			get
			{
				return (T6)null;
			}
		}

		[Token(Token = "0x60008ED")]
		public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
		{
		}

		[Token(Token = "0x60008F4")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60008F5")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008F6")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F7")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F8")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60008F9")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x60008FA")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60008FC")]
		public bool Equals(Tuple<T1, T2, T3, T4, T5, T6> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000129")]
	public struct Tuple<T1, T2, T3, T4, T5, T6, T7> : IStructuralEquatable, IStructuralComparable, IComparable, ITuple, IEquatable<Tuple<T1, T2, T3, T4, T5, T6, T7>>
	{
		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 item1;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 item2;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 item3;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 item4;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 item5;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T6 item6;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T7 item7;

		[Token(Token = "0x1700011C")]
		public T1 Item1
		{
			[Token(Token = "0x60008FE")]
			get
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x1700011D")]
		public T2 Item2
		{
			[Token(Token = "0x60008FF")]
			get
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x1700011E")]
		public T3 Item3
		{
			[Token(Token = "0x6000900")]
			get
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x1700011F")]
		public T4 Item4
		{
			[Token(Token = "0x6000901")]
			get
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x17000120")]
		public T5 Item5
		{
			[Token(Token = "0x6000902")]
			get
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x17000121")]
		public T6 Item6
		{
			[Token(Token = "0x6000903")]
			get
			{
				return (T6)null;
			}
		}

		[Token(Token = "0x17000122")]
		public T7 Item7
		{
			[Token(Token = "0x6000904")]
			get
			{
				return (T7)null;
			}
		}

		[Token(Token = "0x60008FD")]
		public Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
		{
		}

		[Token(Token = "0x6000905")]
		private int System.IComparable.CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000906")]
		private int UniRx.IStructuralComparable.CompareTo(object other, IComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x6000907")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000908")]
		private bool UniRx.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000909")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600090A")]
		private int UniRx.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
		{
			return default(int);
		}

		[Token(Token = "0x600090B")]
		private string UniRx.ITuple.ToString()
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600090D")]
		public bool Equals(Tuple<T1, T2, T3, T4, T5, T6, T7> other)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public struct Unit : IEquatable<Unit>
	{
		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Unit @default;

		[Token(Token = "0x17000123")]
		public static Unit Default
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x2B92740", Offset = "0x2B92740", VA = "0x2B92740")]
			get
			{
				return default(Unit);
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x2B927A8", Offset = "0x2B927A8", VA = "0x2B927A8")]
		public static bool operator ==(Unit first, Unit second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x2B927B0", Offset = "0x2B927B0", VA = "0x2B927B0")]
		public static bool operator !=(Unit first, Unit second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x141E550", Offset = "0x141E550", VA = "0x141E550", Slot = "4")]
		public bool Equals(Unit other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x141E558", Offset = "0x141E558", VA = "0x141E558", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x141E5BC", Offset = "0x141E5BC", VA = "0x141E5BC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x141E5C4", Offset = "0x141E5C4", VA = "0x141E5C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public struct TimeInterval<T> : IEquatable<TimeInterval<T>>
	{
		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan _interval;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _value;

		[Token(Token = "0x17000124")]
		public T Value
		{
			[Token(Token = "0x6000917")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000125")]
		public TimeSpan Interval
		{
			[Token(Token = "0x6000918")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x6000916")]
		public TimeInterval(T value, TimeSpan interval)
		{
		}

		[Token(Token = "0x6000919")]
		public bool Equals(TimeInterval<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		public static bool operator ==(TimeInterval<T> first, TimeInterval<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x600091B")]
		public static bool operator !=(TimeInterval<T> first, TimeInterval<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x600091C")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600091D")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600091E")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public struct Timestamped<T> : IEquatable<Timestamped<T>>
	{
		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DateTimeOffset _timestamp;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _value;

		[Token(Token = "0x17000126")]
		public T Value
		{
			[Token(Token = "0x6000920")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000127")]
		public DateTimeOffset Timestamp
		{
			[Token(Token = "0x6000921")]
			get
			{
				return default(DateTimeOffset);
			}
		}

		[Token(Token = "0x600091F")]
		public Timestamped(T value, DateTimeOffset timestamp)
		{
		}

		[Token(Token = "0x6000922")]
		public bool Equals(Timestamped<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000923")]
		public static bool operator ==(Timestamped<T> first, Timestamped<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000924")]
		public static bool operator !=(Timestamped<T> first, Timestamped<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000925")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000926")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000927")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public static class Timestamped
	{
		[Token(Token = "0x6000928")]
		public static Timestamped<T> Create<T>(T value, DateTimeOffset timestamp)
		{
			return default(Timestamped<T>);
		}
	}
	[Token(Token = "0x200012E")]
	public static class AotSafeExtensions
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0E0", Offset = "0x12AB0E0")]
		private sealed class <AsSafeEnumerable>d__0<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4000D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> source;

			[Token(Token = "0x4000D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__source;

			[Token(Token = "0x4000D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator <e>5__2;

			[Token(Token = "0x4000D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable <>7__wrap2;

			[Token(Token = "0x170002DB")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6001965")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001967")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001961")]
			[DebuggerHidden]
			public <AsSafeEnumerable>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001962")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001963")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001964")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001966")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001968")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001969")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000929")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7C00", Offset = "0x12B7C00")]
		public static IEnumerable<T> AsSafeEnumerable<T>(this IEnumerable<T> source)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public static class AsyncOperationExtensions
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB0F0", Offset = "0x12AB0F0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperation asyncOperation;

			[Token(Token = "0x4000D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IProgress<float> progress;

			[Token(Token = "0x600196A")]
			[Address(RVA = "0x2754538", Offset = "0x2754538", VA = "0x2754538")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600196B")]
			[Address(RVA = "0x2754540", Offset = "0x2754540", VA = "0x2754540")]
			internal IEnumerator <AsObservable>b__0(IObserver<AsyncOperation> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB100", Offset = "0x12AB100")]
		private sealed class <>c__DisplayClass1_0<T> where T : AsyncOperation
		{
			[Token(Token = "0x4000D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T asyncOperation;

			[Token(Token = "0x4000D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IProgress<float> progress;

			[Token(Token = "0x600196C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600196D")]
			internal IEnumerator <AsAsyncOperationObservable>b__0(IObserver<T> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB110", Offset = "0x12AB110")]
		private sealed class <AsObservableCore>d__2<T> : IEnumerator<object>, IEnumerator, IDisposable where T : AsyncOperation
		{
			[Token(Token = "0x4000D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IProgress<float> reportProgress;

			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T asyncOperation;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancel;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001971")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001973")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600196E")]
			[DebuggerHidden]
			public <AsObservableCore>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600196F")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001970")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001972")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x2754460", Offset = "0x2754460", VA = "0x2754460")]
		public static IObservable<AsyncOperation> AsObservable(this AsyncOperation asyncOperation, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		public static IObservable<T> AsAsyncOperationObservable<T>(this T asyncOperation, [Optional] IProgress<float> progress) where T : AsyncOperation
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7C94", Offset = "0x12B7C94")]
		private static IEnumerator AsObservableCore<T>(T asyncOperation, IObserver<T> observer, IProgress<float> reportProgress, CancellationToken cancel) where T : AsyncOperation
		{
			return null;
		}
	}
	[Token(Token = "0x2000130")]
	public struct CancellationToken
	{
		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ICancelable source;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly CancellationToken Empty;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly CancellationToken None;

		[Token(Token = "0x17000128")]
		public bool IsCancellationRequested
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x140D030", Offset = "0x140D030", VA = "0x140D030")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x140D028", Offset = "0x140D028", VA = "0x140D028")]
		public CancellationToken(ICancelable source)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x140D038", Offset = "0x140D038", VA = "0x140D038")]
		public void ThrowIfCancellationRequested()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000131")]
	public struct FrameInterval<T> : IEquatable<FrameInterval<T>>
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _interval;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _value;

		[Token(Token = "0x17000129")]
		public T Value
		{
			[Token(Token = "0x6000932")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700012A")]
		public int Interval
		{
			[Token(Token = "0x6000933")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000931")]
		public FrameInterval(T value, int interval)
		{
		}

		[Token(Token = "0x6000934")]
		public bool Equals(FrameInterval<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000935")]
		public static bool operator ==(FrameInterval<T> first, FrameInterval<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000936")]
		public static bool operator !=(FrameInterval<T> first, FrameInterval<T> second)
		{
			return default(bool);
		}

		[Token(Token = "0x6000937")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000938")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000939")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public class IntReactiveProperty : ReactiveProperty<int>
	{
		[Token(Token = "0x600093A")]
		[Address(RVA = "0x2137B88", Offset = "0x2137B88", VA = "0x2137B88")]
		public IntReactiveProperty()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x2138BDC", Offset = "0x2138BDC", VA = "0x2138BDC")]
		public IntReactiveProperty(int initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000133")]
	public class LongReactiveProperty : ReactiveProperty<long>
	{
		[Token(Token = "0x600093C")]
		[Address(RVA = "0x213AE74", Offset = "0x213AE74", VA = "0x213AE74")]
		public LongReactiveProperty()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x213AEE4", Offset = "0x213AEE4", VA = "0x213AEE4")]
		public LongReactiveProperty(long initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000134")]
	public class ByteReactiveProperty : ReactiveProperty<byte>
	{
		[Token(Token = "0x600093E")]
		[Address(RVA = "0x27550D4", Offset = "0x27550D4", VA = "0x27550D4")]
		public ByteReactiveProperty()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x2755144", Offset = "0x2755144", VA = "0x2755144")]
		public ByteReactiveProperty(byte initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000135")]
	public class FloatReactiveProperty : ReactiveProperty<float>
	{
		[Token(Token = "0x6000940")]
		[Address(RVA = "0x21389D4", Offset = "0x21389D4", VA = "0x21389D4")]
		public FloatReactiveProperty()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x2138A44", Offset = "0x2138A44", VA = "0x2138A44")]
		public FloatReactiveProperty(float initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000136")]
	public class DoubleReactiveProperty : ReactiveProperty<double>
	{
		[Token(Token = "0x6000942")]
		[Address(RVA = "0x21320AC", Offset = "0x21320AC", VA = "0x21320AC")]
		public DoubleReactiveProperty()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x213211C", Offset = "0x213211C", VA = "0x213211C")]
		public DoubleReactiveProperty(double initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000137")]
	public class StringReactiveProperty : ReactiveProperty<string>
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2B87720", Offset = "0x2B87720", VA = "0x2B87720")]
		public StringReactiveProperty()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x2B87790", Offset = "0x2B87790", VA = "0x2B87790")]
		public StringReactiveProperty(string initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000138")]
	public class BoolReactiveProperty : ReactiveProperty<bool>
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x2754C60", Offset = "0x2754C60", VA = "0x2754C60")]
		public BoolReactiveProperty()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x2754CD0", Offset = "0x2754CD0", VA = "0x2754CD0")]
		public BoolReactiveProperty(bool initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000139")]
	public class Vector2ReactiveProperty : ReactiveProperty<Vector2>
	{
		[Token(Token = "0x1700012B")]
		protected override IEqualityComparer<Vector2> EqualityComparer
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x18BF694", Offset = "0x18BF694", VA = "0x18BF694", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x18BF59C", Offset = "0x18BF59C", VA = "0x18BF59C")]
		public Vector2ReactiveProperty()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x18BF60C", Offset = "0x18BF60C", VA = "0x18BF60C")]
		public Vector2ReactiveProperty(Vector2 initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013A")]
	public class Vector3ReactiveProperty : ReactiveProperty<Vector3>
	{
		[Token(Token = "0x1700012C")]
		protected override IEqualityComparer<Vector3> EqualityComparer
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x18BF804", Offset = "0x18BF804", VA = "0x18BF804", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x18BF6FC", Offset = "0x18BF6FC", VA = "0x18BF6FC")]
		public Vector3ReactiveProperty()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x18BF76C", Offset = "0x18BF76C", VA = "0x18BF76C")]
		public Vector3ReactiveProperty(Vector3 initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013B")]
	public class Vector4ReactiveProperty : ReactiveProperty<Vector4>
	{
		[Token(Token = "0x1700012D")]
		protected override IEqualityComparer<Vector4> EqualityComparer
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x18BF97C", Offset = "0x18BF97C", VA = "0x18BF97C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x18BF86C", Offset = "0x18BF86C", VA = "0x18BF86C")]
		public Vector4ReactiveProperty()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x18BF8DC", Offset = "0x18BF8DC", VA = "0x18BF8DC")]
		public Vector4ReactiveProperty(Vector4 initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013C")]
	public class ColorReactiveProperty : ReactiveProperty<Color>
	{
		[Token(Token = "0x1700012E")]
		protected override IEqualityComparer<Color> EqualityComparer
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x2755470", Offset = "0x2755470", VA = "0x2755470", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x2755360", Offset = "0x2755360", VA = "0x2755360")]
		public ColorReactiveProperty()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x27553D0", Offset = "0x27553D0", VA = "0x27553D0")]
		public ColorReactiveProperty(Color initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public class RectReactiveProperty : ReactiveProperty<Rect>
	{
		[Token(Token = "0x1700012F")]
		protected override IEqualityComparer<Rect> EqualityComparer
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x2B8001C", Offset = "0x2B8001C", VA = "0x2B8001C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x2B7FF0C", Offset = "0x2B7FF0C", VA = "0x2B7FF0C")]
		public RectReactiveProperty()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x2B7FF7C", Offset = "0x2B7FF7C", VA = "0x2B7FF7C")]
		public RectReactiveProperty(Rect initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013E")]
	public class AnimationCurveReactiveProperty : ReactiveProperty<AnimationCurve>
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x27541CC", Offset = "0x27541CC", VA = "0x27541CC")]
		public AnimationCurveReactiveProperty()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x275423C", Offset = "0x275423C", VA = "0x275423C")]
		public AnimationCurveReactiveProperty(AnimationCurve initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013F")]
	public class BoundsReactiveProperty : ReactiveProperty<Bounds>
	{
		[Token(Token = "0x17000130")]
		protected override IEqualityComparer<Bounds> EqualityComparer
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x275506C", Offset = "0x275506C", VA = "0x275506C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x2754F50", Offset = "0x2754F50", VA = "0x2754F50")]
		public BoundsReactiveProperty()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x2754FC0", Offset = "0x2754FC0", VA = "0x2754FC0")]
		public BoundsReactiveProperty(Bounds initialValue)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000140")]
	public class QuaternionReactiveProperty : ReactiveProperty<Quaternion>
	{
		[Token(Token = "0x17000131")]
		protected override IEqualityComparer<Quaternion> EqualityComparer
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x2B7EDAC", Offset = "0x2B7EDAC", VA = "0x2B7EDAC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x2B7EC9C", Offset = "0x2B7EC9C", VA = "0x2B7EC9C")]
		public QuaternionReactiveProperty()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x2B7ED0C", Offset = "0x2B7ED0C", VA = "0x2B7ED0C")]
		public QuaternionReactiveProperty(Quaternion initialValue)
		{
		}
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x12A9748", Offset = "0x12A9748")]
	public class InspectorDisplayAttribute : PropertyAttribute
	{
		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5B8", Offset = "0x12AC5B8")]
		private string <FieldName>k__BackingField;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5C8", Offset = "0x12AC5C8")]
		private bool <NotifyPropertyChanged>k__BackingField;

		[Token(Token = "0x17000132")]
		public string FieldName
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x2138B78", Offset = "0x2138B78", VA = "0x2138B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7CF8", Offset = "0x12B7CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x2138B80", Offset = "0x2138B80", VA = "0x2138B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D08", Offset = "0x12B7D08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool NotifyPropertyChanged
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x2138B88", Offset = "0x2138B88", VA = "0x2138B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D18", Offset = "0x12B7D18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x2138B90", Offset = "0x2138B90", VA = "0x2138B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D28", Offset = "0x12B7D28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x2138B9C", Offset = "0x2138B9C", VA = "0x2138B9C")]
		public InspectorDisplayAttribute(string fieldName = "value", bool notifyPropertyChanged = true)
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x12A977C", Offset = "0x12A977C")]
	public class MultilineReactivePropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5D8", Offset = "0x12AC5D8")]
		private int <Lines>k__BackingField;

		[Token(Token = "0x17000134")]
		public int Lines
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x213D68C", Offset = "0x213D68C", VA = "0x213D68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D38", Offset = "0x12B7D38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x213D694", Offset = "0x213D694", VA = "0x213D694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D48", Offset = "0x12B7D48")]
			private set
			{
			}
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x213D69C", Offset = "0x213D69C", VA = "0x213D69C")]
		public MultilineReactivePropertyAttribute()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x213D6C8", Offset = "0x213D6C8", VA = "0x213D6C8")]
		public MultilineReactivePropertyAttribute(int lines)
		{
		}
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x12A97B0", Offset = "0x12A97B0")]
	public class RangeReactivePropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5E8", Offset = "0x12AC5E8")]
		private float <Min>k__BackingField;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC5F8", Offset = "0x12AC5F8")]
		private float <Max>k__BackingField;

		[Token(Token = "0x17000135")]
		public float Min
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x2B7EE14", Offset = "0x2B7EE14", VA = "0x2B7EE14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D58", Offset = "0x12B7D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x2B7EE1C", Offset = "0x2B7EE1C", VA = "0x2B7EE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D68", Offset = "0x12B7D68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float Max
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x2B7EE24", Offset = "0x2B7EE24", VA = "0x2B7EE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D78", Offset = "0x12B7D78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x2B7EE2C", Offset = "0x2B7EE2C", VA = "0x2B7EE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D88", Offset = "0x12B7D88")]
			private set
			{
			}
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x2B7EE34", Offset = "0x2B7EE34", VA = "0x2B7EE34")]
		public RangeReactivePropertyAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x2000144")]
	public abstract class LazyTask
	{
		[Token(Token = "0x200040F")]
		public enum TaskStatus
		{
			[Token(Token = "0x4000D38")]
			WaitingToRun,
			[Token(Token = "0x4000D39")]
			Running,
			[Token(Token = "0x4000D3A")]
			Completed,
			[Token(Token = "0x4000D3B")]
			Canceled,
			[Token(Token = "0x4000D3C")]
			Faulted
		}

		[Serializable]
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB120", Offset = "0x12AB120")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LazyTask, Coroutine> <>9__10_0;

			[Token(Token = "0x6001975")]
			[Address(RVA = "0x213AD28", Offset = "0x213AD28", VA = "0x213AD28")]
			public <>c()
			{
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x213AD30", Offset = "0x213AD30", VA = "0x213AD30")]
			internal Coroutine <WhenAll>b__10_0(LazyTask x)
			{
				return null;
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB130", Offset = "0x12AB130")]
		private sealed class <WhenAllCore>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Coroutine[] coroutines;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Coroutine[] <>7__wrap1;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600197A")]
				[Address(RVA = "0x213AE04", Offset = "0x213AE04", VA = "0x213AE04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600197C")]
				[Address(RVA = "0x213AE6C", Offset = "0x213AE6C", VA = "0x213AE6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001977")]
			[Address(RVA = "0x213AC30", Offset = "0x213AC30", VA = "0x213AC30")]
			[DebuggerHidden]
			public <WhenAllCore>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0x213AD50", Offset = "0x213AD50", VA = "0x213AD50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0x213AD54", Offset = "0x213AD54", VA = "0x213AD54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600197B")]
			[Address(RVA = "0x213AE0C", Offset = "0x213AE0C", VA = "0x213AE0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC608", Offset = "0x12AC608")]
		private TaskStatus <Status>k__BackingField;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly BooleanDisposable cancellation;

		[Token(Token = "0x17000137")]
		public TaskStatus Status
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x213A9F4", Offset = "0x213A9F4", VA = "0x213A9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7D98", Offset = "0x12B7D98")]
			get
			{
				return default(TaskStatus);
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x213A9FC", Offset = "0x213A9FC", VA = "0x213A9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7DA8", Offset = "0x12B7DA8")]
			protected set
			{
			}
		}

		[Token(Token = "0x600096F")]
		public abstract Coroutine Start();

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x213AA04", Offset = "0x213AA04", VA = "0x213AA04")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000971")]
		public static LazyTask<T> FromResult<T>(T value)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x213AA3C", Offset = "0x213AA3C", VA = "0x213AA3C")]
		public static Coroutine WhenAll(params LazyTask[] tasks)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x213AA90", Offset = "0x213AA90", VA = "0x213AA90")]
		public static Coroutine WhenAll(IEnumerable<LazyTask> tasks)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x213ABC0", Offset = "0x213ABC0", VA = "0x213ABC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7DB8", Offset = "0x12B7DB8")]
		private static IEnumerator WhenAllCore(Coroutine[] coroutines)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x213AC5C", Offset = "0x213AC5C", VA = "0x213AC5C")]
		protected LazyTask()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class LazyTask<T> : LazyTask
	{
		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T result;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC618", Offset = "0x12AC618")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x17000138")]
		public T Result
		{
			[Token(Token = "0x6000976")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000139")]
		public Exception Exception
		{
			[Token(Token = "0x6000977")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7E1C", Offset = "0x12B7E1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7E2C", Offset = "0x12B7E2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000979")]
		public LazyTask(IObservable<T> source)
		{
		}

		[Token(Token = "0x600097A")]
		public override Coroutine Start()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		public static LazyTask<T> FromResult(T value)
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7E3C", Offset = "0x12B7E3C")]
		private void <Start>b__9_0(T x)
		{
		}

		[Token(Token = "0x600097E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7E4C", Offset = "0x12B7E4C")]
		private void <Start>b__9_1(Exception ex)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public static class LazyTaskExtensions
	{
		[Token(Token = "0x600097F")]
		public static LazyTask<T> ToLazyTask<T>(this IObservable<T> source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000147")]
	public sealed class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000412")]
		public enum CullingMode
		{
			[Token(Token = "0x4000D45")]
			Disabled,
			[Token(Token = "0x4000D46")]
			Self,
			[Token(Token = "0x4000D47")]
			All
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB140", Offset = "0x12AB140")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IEnumerator routine;

			[Token(Token = "0x600197D")]
			[Address(RVA = "0x213B434", Offset = "0x213B434", VA = "0x213B434")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600197E")]
			[Address(RVA = "0x213D0E8", Offset = "0x213D0E8", VA = "0x213D0E8")]
			internal void <SendStartCoroutine>b__0(object _)
			{
			}
		}

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB150", Offset = "0x12AB150")]
		private sealed class <RunUpdateMicroCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001982")]
				[Address(RVA = "0x213D478", Offset = "0x213D478", VA = "0x213D478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001984")]
				[Address(RVA = "0x213D4E0", Offset = "0x213D4E0", VA = "0x213D4E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600197F")]
			[Address(RVA = "0x213C3CC", Offset = "0x213C3CC", VA = "0x213C3CC")]
			[DebuggerHidden]
			public <RunUpdateMicroCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001980")]
			[Address(RVA = "0x213D408", Offset = "0x213D408", VA = "0x213D408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001981")]
			[Address(RVA = "0x213D40C", Offset = "0x213D40C", VA = "0x213D40C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001983")]
			[Address(RVA = "0x213D480", Offset = "0x213D480", VA = "0x213D480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB160", Offset = "0x12AB160")]
		private sealed class <RunFixedUpdateMicroCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001988")]
				[Address(RVA = "0x213D398", Offset = "0x213D398", VA = "0x213D398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198A")]
				[Address(RVA = "0x213D400", Offset = "0x213D400", VA = "0x213D400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001985")]
			[Address(RVA = "0x213C3F8", Offset = "0x213C3F8", VA = "0x213C3F8")]
			[DebuggerHidden]
			public <RunFixedUpdateMicroCoroutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001986")]
			[Address(RVA = "0x213D2D8", Offset = "0x213D2D8", VA = "0x213D2D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001987")]
			[Address(RVA = "0x213D2DC", Offset = "0x213D2DC", VA = "0x213D2DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001989")]
			[Address(RVA = "0x213D3A0", Offset = "0x213D3A0", VA = "0x213D3A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB170", Offset = "0x12AB170")]
		private sealed class <RunEndOfFrameMicroCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198E")]
				[Address(RVA = "0x213D268", Offset = "0x213D268", VA = "0x213D268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001990")]
				[Address(RVA = "0x213D2D0", Offset = "0x213D2D0", VA = "0x213D2D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198B")]
			[Address(RVA = "0x213C424", Offset = "0x213C424", VA = "0x213C424")]
			[DebuggerHidden]
			public <RunEndOfFrameMicroCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0x213D1A8", Offset = "0x213D1A8", VA = "0x213D1A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198D")]
			[Address(RVA = "0x213D1AC", Offset = "0x213D1AC", VA = "0x213D1AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198F")]
			[Address(RVA = "0x213D270", Offset = "0x213D270", VA = "0x213D270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB180", Offset = "0x12AB180")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__52_0;

			[Token(Token = "0x6001992")]
			[Address(RVA = "0x213D078", Offset = "0x213D078", VA = "0x213D078")]
			public <>c()
			{
			}

			[Token(Token = "0x6001993")]
			[Address(RVA = "0x213D080", Offset = "0x213D080", VA = "0x213D080")]
			internal void <.ctor>b__52_0(Exception ex)
			{
			}
		}

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CullingMode cullingMode;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ThreadSafeQueueWorker queueWorker;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<Exception> unhandledExceptionCallback;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MicroCoroutine updateMicroCoroutine;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MicroCoroutine fixedUpdateMicroCoroutine;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MicroCoroutine endOfFrameMicroCoroutine;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool initialized;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private static bool isQuitting;

		[Token(Token = "0x4000242")]
		[ThreadStatic]
		private static object mainThreadToken;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subject<Unit> update;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> lateUpdate;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<bool> onApplicationFocus;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<bool> onApplicationPause;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Subject<Unit> onApplicationQuit;

		[Token(Token = "0x1700013A")]
		public static string InstanceName
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0x213B744", Offset = "0x213B744", VA = "0x213B744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public static bool IsInitialized
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x213B850", Offset = "0x213B850", VA = "0x213B850")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		private static MainThreadDispatcher Instance
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0x213AF64", Offset = "0x213AF64", VA = "0x213AF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public static bool IsInMainThread
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x213BF5C", Offset = "0x213BF5C", VA = "0x213BF5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x2136C78", Offset = "0x2136C78", VA = "0x2136C78")]
		public static void Post(Action<object> action, object state)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x213AFD0", Offset = "0x213AFD0", VA = "0x213AFD0")]
		public static void Send(Action<object> action, object state)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x213B190", Offset = "0x213B190", VA = "0x213B190")]
		public static void UnsafeSend(Action action)
		{
		}

		[Token(Token = "0x6000983")]
		public static void UnsafeSend<T>(Action<T> action, T state)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x213B2DC", Offset = "0x213B2DC", VA = "0x213B2DC")]
		public static void SendStartCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x213B43C", Offset = "0x213B43C", VA = "0x213B43C")]
		public static void StartUpdateMicroCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x213B4FC", Offset = "0x213B4FC", VA = "0x213B4FC")]
		public static void StartFixedUpdateMicroCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x213B5BC", Offset = "0x213B5BC", VA = "0x213B5BC")]
		public static void StartEndOfFrameMicroCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x2136BB4", Offset = "0x2136BB4", VA = "0x2136BB4")]
		public new static Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x213B67C", Offset = "0x213B67C", VA = "0x213B67C")]
		public static void RegisterUnhandledExceptionCallback(Action<Exception> exceptionCallback)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x213B918", Offset = "0x213B918", VA = "0x213B918")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x213BB60", Offset = "0x213BB60", VA = "0x213BB60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x213BFCC", Offset = "0x213BFCC", VA = "0x213BFCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7E6C", Offset = "0x12B7E6C")]
		private IEnumerator RunUpdateMicroCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x213C03C", Offset = "0x213C03C", VA = "0x213C03C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7ED0", Offset = "0x12B7ED0")]
		private IEnumerator RunFixedUpdateMicroCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x213C0AC", Offset = "0x213C0AC", VA = "0x213C0AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7F34", Offset = "0x12B7F34")]
		private IEnumerator RunEndOfFrameMicroCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x213C11C", Offset = "0x213C11C", VA = "0x213C11C")]
		private static void DestroyDispatcher(MainThreadDispatcher aDispatcher)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x213C2DC", Offset = "0x213C2DC", VA = "0x213C2DC")]
		public static void CullAllExcessDispatchers()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x213C450", Offset = "0x213C450", VA = "0x213C450")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x213C574", Offset = "0x213C574", VA = "0x213C574")]
		private void Update()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x213C6E0", Offset = "0x213C6E0", VA = "0x213C6E0")]
		public static IObservable<Unit> UpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x213C7A4", Offset = "0x213C7A4", VA = "0x213C7A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x213C87C", Offset = "0x213C87C", VA = "0x213C87C")]
		public static IObservable<Unit> LateUpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x213C940", Offset = "0x213C940", VA = "0x213C940")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x213C9B4", Offset = "0x213C9B4", VA = "0x213C9B4")]
		public static IObservable<bool> OnApplicationFocusAsObservable()
		{
			return null;
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x213CA78", Offset = "0x213CA78", VA = "0x213CA78")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x213CAEC", Offset = "0x213CAEC", VA = "0x213CAEC")]
		public static IObservable<bool> OnApplicationPauseAsObservable()
		{
			return null;
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x213CBB0", Offset = "0x213CBB0", VA = "0x213CBB0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x213CCB8", Offset = "0x213CCB8", VA = "0x213CCB8")]
		public static IObservable<Unit> OnApplicationQuitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x213CD7C", Offset = "0x213CD7C", VA = "0x213CD7C")]
		public MainThreadDispatcher()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x213CEDC", Offset = "0x213CEDC", VA = "0x213CEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7F98", Offset = "0x12B7F98")]
		private void <Awake>b__30_0(Exception ex)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x213CF44", Offset = "0x213CF44", VA = "0x213CF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7FA8", Offset = "0x12B7FA8")]
		private void <Awake>b__30_1(Exception ex)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x213CFAC", Offset = "0x213CFAC", VA = "0x213CFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B7FB8", Offset = "0x12B7FB8")]
		private void <Awake>b__30_2(Exception ex)
		{
		}
	}
	[Token(Token = "0x2000148")]
	public enum FrameCountType
	{
		[Token(Token = "0x4000249")]
		Update,
		[Token(Token = "0x400024A")]
		FixedUpdate,
		[Token(Token = "0x400024B")]
		EndOfFrame
	}
	[Token(Token = "0x2000149")]
	public enum MainThreadDispatchType
	{
		[Token(Token = "0x400024D")]
		Update,
		[Token(Token = "0x400024E")]
		FixedUpdate,
		[Token(Token = "0x400024F")]
		EndOfFrame,
		[Token(Token = "0x4000250")]
		GameObjectUpdate,
		[Token(Token = "0x4000251")]
		LateUpdate,
		[Token(Token = "0x4000252")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12AC638", Offset = "0x12AC638")]
		AfterUpdate
	}
	[Token(Token = "0x200014A")]
	public static class FrameCountTypeExtensions
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x2138AC4", Offset = "0x2138AC4", VA = "0x2138AC4")]
		public static YieldInstruction GetYieldInstruction(this FrameCountType frameCountType)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	internal interface ICustomYieldInstructionErrorHandler
	{
		[Token(Token = "0x1700013E")]
		bool HasError
		{
			[Token(Token = "0x60009A6")]
			get;
		}

		[Token(Token = "0x1700013F")]
		Exception Error
		{
			[Token(Token = "0x60009A7")]
			get;
		}

		[Token(Token = "0x17000140")]
		bool IsReThrowOnError
		{
			[Token(Token = "0x60009A8")]
			get;
		}

		[Token(Token = "0x60009A9")]
		void ForceDisableRethrowOnError();

		[Token(Token = "0x60009AA")]
		void ForceEnableRethrowOnError();
	}
	[Token(Token = "0x200014C")]
	public class ObservableYieldInstruction<T> : IEnumerator<T>, IEnumerator, IDisposable, ICustomYieldInstructionErrorHandler
	{
		[Token(Token = "0x2000418")]
		private class ToYieldInstruction : IObserver<T>
		{
			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ObservableYieldInstruction<T> parent;

			[Token(Token = "0x6001994")]
			public ToYieldInstruction(ObservableYieldInstruction<T> parent)
			{
			}

			[Token(Token = "0x6001995")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x6001996")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001997")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDisposable subscription;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly CancellationToken cancel;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool reThrowOnError;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T current;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T result;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool moveNext;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasResult;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception error;

		[Token(Token = "0x17000141")]
		public bool HasError
		{
			[Token(Token = "0x60009AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool HasResult
		{
			[Token(Token = "0x60009AD")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool IsCanceled
		{
			[Token(Token = "0x60009AE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public bool IsDone
		{
			[Token(Token = "0x60009AF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		public T Result
		{
			[Token(Token = "0x60009B0")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000146")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60009B1")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public Exception Error
		{
			[Token(Token = "0x60009B3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private bool UniRx.ICustomYieldInstructionErrorHandler.IsReThrowOnError
		{
			[Token(Token = "0x60009B5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009AB")]
		public ObservableYieldInstruction(IObservable<T> source, bool reThrowOnError, CancellationToken cancel)
		{
		}

		[Token(Token = "0x60009B4")]
		private bool System.Collections.IEnumerator.MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B6")]
		private void UniRx.ICustomYieldInstructionErrorHandler.ForceDisableRethrowOnError()
		{
		}

		[Token(Token = "0x60009B7")]
		private void UniRx.ICustomYieldInstructionErrorHandler.ForceEnableRethrowOnError()
		{
		}

		[Token(Token = "0x60009B8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009B9")]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public static class ObservableWWW
	{
		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB190", Offset = "0x12AB190")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x6001998")]
			[Address(RVA = "0x21428F0", Offset = "0x21428F0", VA = "0x21428F0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001999")]
			[Address(RVA = "0x2143E10", Offset = "0x2143E10", VA = "0x2143E10")]
			internal IEnumerator <Get>b__0(IObserver<string> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1A0", Offset = "0x12AB1A0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x600199A")]
			[Address(RVA = "0x21429D8", Offset = "0x21429D8", VA = "0x21429D8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600199B")]
			[Address(RVA = "0x2144340", Offset = "0x2144340", VA = "0x2144340")]
			internal IEnumerator <GetAndGetBytes>b__0(IObserver<byte[]> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1B0", Offset = "0x12AB1B0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x600199C")]
			[Address(RVA = "0x2142AC0", Offset = "0x2142AC0", VA = "0x2142AC0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0x21443FC", Offset = "0x21443FC", VA = "0x21443FC")]
			internal IEnumerator <GetWWW>b__0(IObserver<WWW> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1C0", Offset = "0x12AB1C0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x2142BA8", Offset = "0x2142BA8", VA = "0x2142BA8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0x21444B8", Offset = "0x21444B8", VA = "0x21444B8")]
			internal IEnumerator <Post>b__0(IObserver<string> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1D0", Offset = "0x12AB1D0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> progress;

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x2142C9C", Offset = "0x2142C9C", VA = "0x2142C9C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x2144548", Offset = "0x2144548", VA = "0x2144548")]
			internal IEnumerator <Post>b__0(IObserver<string> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1E0", Offset = "0x12AB1E0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x2142D84", Offset = "0x2142D84", VA = "0x2142D84")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x21445E8", Offset = "0x21445E8", VA = "0x21445E8")]
			internal IEnumerator <Post>b__0(IObserver<string> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB1F0", Offset = "0x12AB1F0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> contentHeaders;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IProgress<float> progress;

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x2142E8C", Offset = "0x2142E8C", VA = "0x2142E8C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x2144678", Offset = "0x2144678", VA = "0x2144678")]
			internal IEnumerator <Post>b__0(IObserver<string> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB200", Offset = "0x12AB200")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x2142F74", Offset = "0x2142F74", VA = "0x2142F74")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x2144738", Offset = "0x2144738", VA = "0x2144738")]
			internal IEnumerator <PostAndGetBytes>b__0(IObserver<byte[]> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB210", Offset = "0x12AB210")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> progress;

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x2143068", Offset = "0x2143068", VA = "0x2143068")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x21447C8", Offset = "0x21447C8", VA = "0x21447C8")]
			internal IEnumerator <PostAndGetBytes>b__0(IObserver<byte[]> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB220", Offset = "0x12AB220")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x2143150", Offset = "0x2143150", VA = "0x2143150")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x2144868", Offset = "0x2144868", VA = "0x2144868")]
			internal IEnumerator <PostAndGetBytes>b__0(IObserver<byte[]> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB230", Offset = "0x12AB230")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> contentHeaders;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IProgress<float> progress;

			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x2143258", Offset = "0x2143258", VA = "0x2143258")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x2143ECC", Offset = "0x2143ECC", VA = "0x2143ECC")]
			internal IEnumerator <PostAndGetBytes>b__0(IObserver<byte[]> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB240", Offset = "0x12AB240")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x2143340", Offset = "0x2143340", VA = "0x2143340")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x2143F8C", Offset = "0x2143F8C", VA = "0x2143F8C")]
			internal IEnumerator <PostWWW>b__0(IObserver<WWW> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB250", Offset = "0x12AB250")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] postData;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> progress;

			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x2143434", Offset = "0x2143434", VA = "0x2143434")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x214401C", Offset = "0x214401C", VA = "0x214401C")]
			internal IEnumerator <PostWWW>b__0(IObserver<WWW> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB260", Offset = "0x12AB260")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x214351C", Offset = "0x214351C", VA = "0x214351C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x21440BC", Offset = "0x21440BC", VA = "0x21440BC")]
			internal IEnumerator <PostWWW>b__0(IObserver<WWW> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB270", Offset = "0x12AB270")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WWWForm content;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> contentHeaders;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, string> headers;

			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IProgress<float> progress;

			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x2143624", Offset = "0x2143624", VA = "0x2143624")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x214414C", Offset = "0x214414C", VA = "0x214414C")]
			internal IEnumerator <PostWWW>b__0(IObserver<WWW> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB280", Offset = "0x12AB280")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int version;

			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x2143710", Offset = "0x2143710", VA = "0x2143710")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x214420C", Offset = "0x214420C", VA = "0x214420C")]
			internal IEnumerator <LoadFromCacheOrDownload>b__0(IObserver<AssetBundle> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB290", Offset = "0x12AB290")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int version;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public uint crc;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<float> progress;

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x2143808", Offset = "0x2143808", VA = "0x2143808")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x2144258", Offset = "0x2144258", VA = "0x2144258")]
			internal IEnumerator <LoadFromCacheOrDownload>b__0(IObserver<AssetBundle> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2A0", Offset = "0x12AB2A0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Hash128 hash128;

			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> progress;

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x21438FC", Offset = "0x21438FC", VA = "0x21438FC")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x21442A4", Offset = "0x21442A4", VA = "0x21442A4")]
			internal IEnumerator <LoadFromCacheOrDownload>b__0(IObserver<AssetBundle> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2B0", Offset = "0x12AB2B0")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Hash128 hash128;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public uint crc;

			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IProgress<float> progress;

			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x21439FC", Offset = "0x21439FC", VA = "0x21439FC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x21442F0", Offset = "0x21442F0", VA = "0x21442F0")]
			internal IEnumerator <LoadFromCacheOrDownload>b__0(IObserver<AssetBundle> observer, CancellationToken cancellation)
			{
				return null;
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2C0", Offset = "0x12AB2C0")]
		private sealed class <Fetch>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> reportProgress;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IObserver<WWW> observer;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancel;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <>7__wrap1;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C2")]
				[Address(RVA = "0x214507C", Offset = "0x214507C", VA = "0x214507C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C4")]
				[Address(RVA = "0x21450E4", Offset = "0x21450E4", VA = "0x21450E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x2143BB0", Offset = "0x2143BB0", VA = "0x2143BB0")]
			[DebuggerHidden]
			public <Fetch>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x21448F8", Offset = "0x21448F8", VA = "0x21448F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x21449E4", Offset = "0x21449E4", VA = "0x21449E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x2144924", Offset = "0x2144924", VA = "0x2144924")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x2145084", Offset = "0x2145084", VA = "0x2145084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2D0", Offset = "0x12AB2D0")]
		private sealed class <FetchText>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> reportProgress;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IObserver<string> observer;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancel;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <>7__wrap1;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C9")]
				[Address(RVA = "0x214688C", Offset = "0x214688C", VA = "0x214688C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019CB")]
				[Address(RVA = "0x21468F4", Offset = "0x21468F4", VA = "0x21468F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x2143C6C", Offset = "0x2143C6C", VA = "0x2143C6C")]
			[DebuggerHidden]
			public <FetchText>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x21460EC", Offset = "0x21460EC", VA = "0x21460EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x21461D8", Offset = "0x21461D8", VA = "0x21461D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x2146118", Offset = "0x2146118", VA = "0x2146118")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x2146894", Offset = "0x2146894", VA = "0x2146894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2E0", Offset = "0x12AB2E0")]
		private sealed class <FetchBytes>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> reportProgress;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IObserver<byte[]> observer;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancel;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <>7__wrap1;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D0")]
				[Address(RVA = "0x214607C", Offset = "0x214607C", VA = "0x214607C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D2")]
				[Address(RVA = "0x21460E4", Offset = "0x21460E4", VA = "0x21460E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x2143D28", Offset = "0x2143D28", VA = "0x2143D28")]
			[DebuggerHidden]
			public <FetchBytes>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x21458DC", Offset = "0x21458DC", VA = "0x21458DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x21459C8", Offset = "0x21459C8", VA = "0x21459C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x2145908", Offset = "0x2145908", VA = "0x2145908")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x2146084", Offset = "0x2146084", VA = "0x2146084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB2F0", Offset = "0x12AB2F0")]
		private sealed class <FetchAssetBundle>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWW www;

			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IProgress<float> reportProgress;

			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IObserver<AssetBundle> observer;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken cancel;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <>7__wrap1;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D7")]
				[Address(RVA = "0x214586C", Offset = "0x214586C", VA = "0x214586C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D9")]
				[Address(RVA = "0x21458D4", Offset = "0x21458D4", VA = "0x21458D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x2143DE4", Offset = "0x2143DE4", VA = "0x2143DE4")]
			[DebuggerHidden]
			public <FetchAssetBundle>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x21450EC", Offset = "0x21450EC", VA = "0x21450EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x21451D8", Offset = "0x21451D8", VA = "0x21451D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x2145118", Offset = "0x2145118", VA = "0x2145118")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x2145874", Offset = "0x2145874", VA = "0x2145874", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x2132B6C", Offset = "0x2132B6C", VA = "0x2132B6C")]
		public static IObservable<string> Get(string url, [Optional] Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x21428F8", Offset = "0x21428F8", VA = "0x21428F8")]
		public static IObservable<byte[]> GetAndGetBytes(string url, [Optional] Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x21429E0", Offset = "0x21429E0", VA = "0x21429E0")]
		public static IObservable<WWW> GetWWW(string url, [Optional] Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x2142AC8", Offset = "0x2142AC8", VA = "0x2142AC8")]
		public static IObservable<string> Post(string url, byte[] postData, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x2142BB0", Offset = "0x2142BB0", VA = "0x2142BB0")]
		public static IObservable<string> Post(string url, byte[] postData, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x2142CA4", Offset = "0x2142CA4", VA = "0x2142CA4")]
		public static IObservable<string> Post(string url, WWWForm content, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x2142D8C", Offset = "0x2142D8C", VA = "0x2142D8C")]
		public static IObservable<string> Post(string url, WWWForm content, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x2142E94", Offset = "0x2142E94", VA = "0x2142E94")]
		public static IObservable<byte[]> PostAndGetBytes(string url, byte[] postData, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x2142F7C", Offset = "0x2142F7C", VA = "0x2142F7C")]
		public static IObservable<byte[]> PostAndGetBytes(string url, byte[] postData, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x2143070", Offset = "0x2143070", VA = "0x2143070")]
		public static IObservable<byte[]> PostAndGetBytes(string url, WWWForm content, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x2143158", Offset = "0x2143158", VA = "0x2143158")]
		public static IObservable<byte[]> PostAndGetBytes(string url, WWWForm content, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x2143260", Offset = "0x2143260", VA = "0x2143260")]
		public static IObservable<WWW> PostWWW(string url, byte[] postData, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x2143348", Offset = "0x2143348", VA = "0x2143348")]
		public static IObservable<WWW> PostWWW(string url, byte[] postData, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x214343C", Offset = "0x214343C", VA = "0x214343C")]
		public static IObservable<WWW> PostWWW(string url, WWWForm content, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x2143524", Offset = "0x2143524", VA = "0x2143524")]
		public static IObservable<WWW> PostWWW(string url, WWWForm content, Dictionary<string, string> headers, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x214362C", Offset = "0x214362C", VA = "0x214362C")]
		public static IObservable<AssetBundle> LoadFromCacheOrDownload(string url, int version, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x2143718", Offset = "0x2143718", VA = "0x2143718")]
		public static IObservable<AssetBundle> LoadFromCacheOrDownload(string url, int version, uint crc, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x2143810", Offset = "0x2143810", VA = "0x2143810")]
		public static IObservable<AssetBundle> LoadFromCacheOrDownload(string url, Hash128 hash128, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x2143904", Offset = "0x2143904", VA = "0x2143904")]
		public static IObservable<AssetBundle> LoadFromCacheOrDownload(string url, Hash128 hash128, uint crc, [Optional] IProgress<float> progress)
		{
			return null;
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x2143A04", Offset = "0x2143A04", VA = "0x2143A04")]
		private static Dictionary<string, string> MergeHash(Dictionary<string, string> wwwFormHeaders, Dictionary<string, string> externalHeaders)
		{
			return null;
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x2143B20", Offset = "0x2143B20", VA = "0x2143B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B7FD8", Offset = "0x12B7FD8")]
		private static IEnumerator Fetch(WWW www, IObserver<WWW> observer, IProgress<float> reportProgress, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x2143BDC", Offset = "0x2143BDC", VA = "0x2143BDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B803C", Offset = "0x12B803C")]
		private static IEnumerator FetchText(WWW www, IObserver<string> observer, IProgress<float> reportProgress, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x2143C98", Offset = "0x2143C98", VA = "0x2143C98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B80A0", Offset = "0x12B80A0")]
		private static IEnumerator FetchBytes(WWW www, IObserver<byte[]> observer, IProgress<float> reportProgress, CancellationToken cancel)
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x2143D54", Offset = "0x2143D54", VA = "0x2143D54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B8104", Offset = "0x12B8104")]
		private static IEnumerator FetchAssetBundle(WWW www, IObserver<AssetBundle> observer, IProgress<float> reportProgress, CancellationToken cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	public class WWWErrorException : Exception
	{
		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC648", Offset = "0x12AC648")]
		private string <RawErrorMessage>k__BackingField;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC658", Offset = "0x12AC658")]
		private bool <HasResponse>k__BackingField;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC668", Offset = "0x12AC668")]
		private string <Text>k__BackingField;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC678", Offset = "0x12AC678")]
		private HttpStatusCode <StatusCode>k__BackingField;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC688", Offset = "0x12AC688")]
		private Dictionary<string, string> <ResponseHeaders>k__BackingField;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC698", Offset = "0x12AC698")]
		private WWW <WWW>k__BackingField;

		[Token(Token = "0x1700014A")]
		public string RawErrorMessage
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x18BF9E4", Offset = "0x18BF9E4", VA = "0x18BF9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8168", Offset = "0x12B8168")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x18BF9EC", Offset = "0x18BF9EC", VA = "0x18BF9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8178", Offset = "0x12B8178")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool HasResponse
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x18BF9F4", Offset = "0x18BF9F4", VA = "0x18BF9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8188", Offset = "0x12B8188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0x18BF9FC", Offset = "0x18BF9FC", VA = "0x18BF9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8198", Offset = "0x12B8198")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public string Text
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x18BFA08", Offset = "0x18BFA08", VA = "0x18BFA08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81A8", Offset = "0x12B81A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x18BFA10", Offset = "0x18BFA10", VA = "0x18BFA10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81B8", Offset = "0x12B81B8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public HttpStatusCode StatusCode
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x18BFA18", Offset = "0x18BFA18", VA = "0x18BFA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81C8", Offset = "0x12B81C8")]
			get
			{
				return default(HttpStatusCode);
			}
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x18BFA20", Offset = "0x18BFA20", VA = "0x18BFA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81D8", Offset = "0x12B81D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public Dictionary<string, string> ResponseHeaders
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x18BFA28", Offset = "0x18BFA28", VA = "0x18BFA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81E8", Offset = "0x12B81E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x18BFA30", Offset = "0x18BFA30", VA = "0x18BFA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B81F8", Offset = "0x12B81F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public WWW WWW
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x18BFA38", Offset = "0x18BFA38", VA = "0x18BFA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8208", Offset = "0x12B8208")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x18BFA40", Offset = "0x18BFA40", VA = "0x18BFA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8218", Offset = "0x12B8218")]
			private set
			{
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x18BFA48", Offset = "0x18BFA48", VA = "0x18BFA48")]
		public WWWErrorException(WWW www, string text)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x18BFB94", Offset = "0x18BFB94", VA = "0x18BFB94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public static class ObserveExtensions
	{
		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB300", Offset = "0x12AB300")]
		private sealed class <>c__DisplayClass2_0<TSource, TProperty> where TSource : class
		{
			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Object unityObject;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TSource, TProperty> propertySelector;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEqualityComparer<TProperty> comparer;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool fastDestroyCheck;

			[Token(Token = "0x60019DA")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60019DB")]
			internal IEnumerator <ObserveEveryValueChanged>b__0(IObserver<TProperty> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB310", Offset = "0x12AB310")]
		private sealed class <>c__DisplayClass2_1<TSource, TProperty> where TSource : class
		{
			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WeakReference reference;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass2_0<TSource, TProperty> CS$<>8__locals1;

			[Token(Token = "0x60019DC")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x60019DD")]
			internal IEnumerator <ObserveEveryValueChanged>b__1(IObserver<TProperty> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB320", Offset = "0x12AB320")]
		private sealed class <EmptyEnumerator>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E1")]
				[Address(RVA = "0x2146A5C", Offset = "0x2146A5C", VA = "0x2146A5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E3")]
				[Address(RVA = "0x2146AC4", Offset = "0x2146AC4", VA = "0x2146AC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x214695C", Offset = "0x214695C", VA = "0x214695C")]
			[DebuggerHidden]
			public <EmptyEnumerator>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x2146A40", Offset = "0x2146A40", VA = "0x2146A40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x2146A44", Offset = "0x2146A44", VA = "0x2146A44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x2146A64", Offset = "0x2146A64", VA = "0x2146A64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB330", Offset = "0x12AB330")]
		private sealed class <PublishPocoValueChanged>d__4<TSource, TProperty> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TProperty firstValue;

			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WeakReference sourceReference;

			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TSource, TProperty> propertySelector;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<TProperty> observer;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEqualityComparer<TProperty> comparer;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TProperty <prevValue>5__2;

			[Token(Token = "0x170002F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E4")]
			[DebuggerHidden]
			public <PublishPocoValueChanged>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60019E5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB340", Offset = "0x12AB340")]
		private sealed class <PublishUnityObjectValueChanged>d__5<TSource, TProperty> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TProperty firstValue;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Object unityObject;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool fastDestroyCheck;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TSource, TProperty> propertySelector;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<TProperty> observer;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEqualityComparer<TProperty> comparer;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TProperty <prevValue>5__2;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource <source>5__3;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ObservableDestroyTrigger <destroyTrigger>5__4;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019ED")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019EF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019EA")]
			[DebuggerHidden]
			public <PublishUnityObjectValueChanged>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60019EB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019EC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019EE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60009E0")]
		public static IObservable<TProperty> ObserveEveryValueChanged<TSource, TProperty>(this TSource source, Func<TSource, TProperty> propertySelector, FrameCountType frameCountType = FrameCountType.Update, bool fastDestroyCheck = false) where TSource : class
		{
			return null;
		}

		[Token(Token = "0x60009E1")]
		public static IObservable<TProperty> ObserveEveryValueChanged<TSource, TProperty>(this TSource source, Func<TSource, TProperty> propertySelector, FrameCountType frameCountType, IEqualityComparer<TProperty> comparer) where TSource : class
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		public static IObservable<TProperty> ObserveEveryValueChanged<TSource, TProperty>(this TSource source, Func<TSource, TProperty> propertySelector, FrameCountType frameCountType, IEqualityComparer<TProperty> comparer, bool fastDestroyCheck) where TSource : class
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x21468FC", Offset = "0x21468FC", VA = "0x21468FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B8258", Offset = "0x12B8258")]
		private static IEnumerator EmptyEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B82BC", Offset = "0x12B82BC")]
		private static IEnumerator PublishPocoValueChanged<TSource, TProperty>(WeakReference sourceReference, TProperty firstValue, Func<TSource, TProperty> propertySelector, IEqualityComparer<TProperty> comparer, IObserver<TProperty> observer, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x60009E5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B8320", Offset = "0x12B8320")]
		private static IEnumerator PublishUnityObjectValueChanged<TSource, TProperty>(UnityEngine.Object unityObject, TProperty firstValue, Func<TSource, TProperty> propertySelector, IEqualityComparer<TProperty> comparer, IObserver<TProperty> observer, CancellationToken cancellationToken, bool fastDestroyCheck)
		{
			return null;
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x2146988", Offset = "0x2146988", VA = "0x2146988")]
		private static ObservableDestroyTrigger GetOrAddDestroyTrigger(GameObject go)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public interface IPresenter
	{
		[Token(Token = "0x17000150")]
		IPresenter Parent
		{
			[Token(Token = "0x60009E7")]
			get;
		}

		[Token(Token = "0x17000151")]
		GameObject gameObject
		{
			[Token(Token = "0x60009E8")]
			get;
		}

		[Token(Token = "0x60009E9")]
		void RegisterParent(IPresenter parent);

		[Token(Token = "0x60009EA")]
		void InitializeCore();

		[Token(Token = "0x60009EB")]
		void StartCapturePhase();

		[Token(Token = "0x60009EC")]
		void Awake();

		[Token(Token = "0x60009ED")]
		void ForceInitialize(object argument);
	}
	[Token(Token = "0x2000151")]
	public abstract class PresenterBase : PresenterBase<Unit>
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x2B7EB4C", Offset = "0x2B7EB4C", VA = "0x2B7EB4C", Slot = "12")]
		protected sealed override void BeforeInitialize(Unit argument)
		{
		}

		[Token(Token = "0x60009EF")]
		protected abstract void BeforeInitialize();

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x2B7EB5C", Offset = "0x2B7EB5C", VA = "0x2B7EB5C", Slot = "13")]
		protected override void Initialize(Unit argument)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x2B7EB6C", Offset = "0x2B7EB6C", VA = "0x2B7EB6C")]
		public void ForceInitialize()
		{
		}

		[Token(Token = "0x60009F2")]
		protected abstract void Initialize();

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x2B7EC2C", Offset = "0x2B7EC2C", VA = "0x2B7EC2C")]
		protected PresenterBase()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public abstract class PresenterBase<T> : MonoBehaviour, IPresenter
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly IPresenter[] EmptyChildren;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int childrenCount;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCalledCount;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isAwaken;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isInitialized;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isStartedCapturePhase;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<Unit> initializeSubject;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPresenter[] children;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IPresenter parent;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T argument;

		[Token(Token = "0x17000152")]
		public IPresenter Parent
		{
			[Token(Token = "0x60009F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		protected abstract IPresenter[] Children
		{
			[Token(Token = "0x60009F7")]
			get;
		}

		[Token(Token = "0x60009F5")]
		public IObservable<Unit> InitializeAsObservable()
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		public void PropagateArgument(T argument)
		{
		}

		[Token(Token = "0x60009F8")]
		protected abstract void BeforeInitialize(T argument);

		[Token(Token = "0x60009F9")]
		protected abstract void Initialize(T argument);

		[Token(Token = "0x60009FA")]
		public virtual void ForceInitialize(T argument)
		{
		}

		[Token(Token = "0x60009FB")]
		private void UniRx.IPresenter.ForceInitialize(object argument)
		{
		}

		[Token(Token = "0x60009FC")]
		private void UniRx.IPresenter.Awake()
		{
		}

		[Token(Token = "0x60009FD")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60009FE")]
		protected virtual void OnAwake()
		{
		}

		[Token(Token = "0x60009FF")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000A00")]
		private void UniRx.IPresenter.StartCapturePhase()
		{
		}

		[Token(Token = "0x6000A01")]
		private void UniRx.IPresenter.RegisterParent(IPresenter parent)
		{
		}

		[Token(Token = "0x6000A02")]
		private void UniRx.IPresenter.InitializeCore()
		{
		}

		[Token(Token = "0x6000A03")]
		protected PresenterBase()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000A05")]
		private GameObject UniRx.IPresenter.get_gameObject()
		{
			return null;
		}
	}
	[Token(Token = "0x2000153")]
	public struct CollectionAddEvent<T> : IEquatable<CollectionAddEvent<T>>
	{
		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6A8", Offset = "0x12AC6A8")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6B8", Offset = "0x12AC6B8")]
		private T <Value>k__BackingField;

		[Token(Token = "0x17000154")]
		public int Index
		{
			[Token(Token = "0x6000A06")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8384", Offset = "0x12B8384")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A07")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8394", Offset = "0x12B8394")]
			private set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public T Value
		{
			[Token(Token = "0x6000A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83A4", Offset = "0x12B83A4")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A09")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83B4", Offset = "0x12B83B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A0A")]
		public CollectionAddEvent(int index, T value)
		{
		}

		[Token(Token = "0x6000A0B")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0D")]
		public bool Equals(CollectionAddEvent<T> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000154")]
	public struct CollectionRemoveEvent<T> : IEquatable<CollectionRemoveEvent<T>>
	{
		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6C8", Offset = "0x12AC6C8")]
		private int <Index>k__BackingField;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6D8", Offset = "0x12AC6D8")]
		private T <Value>k__BackingField;

		[Token(Token = "0x17000156")]
		public int Index
		{
			[Token(Token = "0x6000A0E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83C4", Offset = "0x12B83C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A0F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83D4", Offset = "0x12B83D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public T Value
		{
			[Token(Token = "0x6000A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83E4", Offset = "0x12B83E4")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B83F4", Offset = "0x12B83F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A12")]
		public CollectionRemoveEvent(int index, T value)
		{
		}

		[Token(Token = "0x6000A13")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A15")]
		public bool Equals(CollectionRemoveEvent<T> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000155")]
	public struct CollectionMoveEvent<T> : IEquatable<CollectionMoveEvent<T>>
	{
		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6E8", Offset = "0x12AC6E8")]
		private int <OldIndex>k__BackingField;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC6F8", Offset = "0x12AC6F8")]
		private int <NewIndex>k__BackingField;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC708", Offset = "0x12AC708")]
		private T <Value>k__BackingField;

		[Token(Token = "0x17000158")]
		public int OldIndex
		{
			[Token(Token = "0x6000A16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8404", Offset = "0x12B8404")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8414", Offset = "0x12B8414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public int NewIndex
		{
			[Token(Token = "0x6000A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8424", Offset = "0x12B8424")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8434", Offset = "0x12B8434")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public T Value
		{
			[Token(Token = "0x6000A1A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8444", Offset = "0x12B8444")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A1B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8454", Offset = "0x12B8454")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A1C")]
		public CollectionMoveEvent(int oldIndex, int newIndex, T value)
		{
		}

		[Token(Token = "0x6000A1D")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A1F")]
		public bool Equals(CollectionMoveEvent<T> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000156")]
	public struct CollectionReplaceEvent<T> : IEquatable<CollectionReplaceEvent<T>>
	{
		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC718", Offset = "0x12AC718")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC728", Offset = "0x12AC728")]
		private T <OldValue>k__BackingField;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC738", Offset = "0x12AC738")]
		private T <NewValue>k__BackingField;

		[Token(Token = "0x1700015B")]
		public int Index
		{
			[Token(Token = "0x6000A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8464", Offset = "0x12B8464")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8474", Offset = "0x12B8474")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public T OldValue
		{
			[Token(Token = "0x6000A22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8484", Offset = "0x12B8484")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8494", Offset = "0x12B8494")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public T NewValue
		{
			[Token(Token = "0x6000A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B84A4", Offset = "0x12B84A4")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000A25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B84B4", Offset = "0x12B84B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A26")]
		public CollectionReplaceEvent(int index, T oldValue, T newValue)
		{
		}

		[Token(Token = "0x6000A27")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A29")]
		public bool Equals(CollectionReplaceEvent<T> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9814", Offset = "0x12A9814")]
	public interface IReadOnlyReactiveCollection<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x1700015E")]
		int Count
		{
			[Token(Token = "0x6000A2A")]
			get;
		}

		[Token(Token = "0x1700015F")]
		T Item
		{
			[Token(Token = "0x6000A2B")]
			get;
		}

		[Token(Token = "0x6000A2C")]
		IObservable<CollectionAddEvent<T>> ObserveAdd();

		[Token(Token = "0x6000A2D")]
		IObservable<int> ObserveCountChanged(bool notifyCurrentCount = false);

		[Token(Token = "0x6000A2E")]
		IObservable<CollectionMoveEvent<T>> ObserveMove();

		[Token(Token = "0x6000A2F")]
		IObservable<CollectionRemoveEvent<T>> ObserveRemove();

		[Token(Token = "0x6000A30")]
		IObservable<CollectionReplaceEvent<T>> ObserveReplace();

		[Token(Token = "0x6000A31")]
		IObservable<Unit> ObserveReset();
	}
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A984C", Offset = "0x12A984C")]
	public interface IReactiveCollection<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable, IReadOnlyReactiveCollection<T>
	{
		[Token(Token = "0x17000160")]
		new int Count
		{
			[Token(Token = "0x6000A32")]
			get;
		}

		[Token(Token = "0x17000161")]
		new T Item
		{
			[Token(Token = "0x6000A33")]
			get;
			[Token(Token = "0x6000A34")]
			set;
		}

		[Token(Token = "0x6000A35")]
		void Move(int oldIndex, int newIndex);
	}
	[Serializable]
	[Token(Token = "0x2000159")]
	public class ReactiveCollection<T> : Collection<T>, IReactiveCollection<T>, IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable, IReadOnlyReactiveCollection<T>, IDisposable
	{
		[NonSerialized]
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[NonSerialized]
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<int> countChanged;

		[NonSerialized]
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<Unit> collectionReset;

		[NonSerialized]
		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<CollectionAddEvent<T>> collectionAdd;

		[NonSerialized]
		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<CollectionMoveEvent<T>> collectionMove;

		[NonSerialized]
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<CollectionRemoveEvent<T>> collectionRemove;

		[NonSerialized]
		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<CollectionReplaceEvent<T>> collectionReplace;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool disposedValue;

		[Token(Token = "0x6000A36")]
		public ReactiveCollection()
		{
		}

		[Token(Token = "0x6000A37")]
		public ReactiveCollection(IEnumerable<T> collection)
		{
		}

		[Token(Token = "0x6000A38")]
		public ReactiveCollection(List<T> list)
		{
		}

		[Token(Token = "0x6000A39")]
		protected override void ClearItems()
		{
		}

		[Token(Token = "0x6000A3A")]
		protected override void InsertItem(int index, T item)
		{
		}

		[Token(Token = "0x6000A3B")]
		public void Move(int oldIndex, int newIndex)
		{
		}

		[Token(Token = "0x6000A3C")]
		protected virtual void MoveItem(int oldIndex, int newIndex)
		{
		}

		[Token(Token = "0x6000A3D")]
		protected override void RemoveItem(int index)
		{
		}

		[Token(Token = "0x6000A3E")]
		protected override void SetItem(int index, T item)
		{
		}

		[Token(Token = "0x6000A3F")]
		public IObservable<int> ObserveCountChanged(bool notifyCurrentCount = false)
		{
			return null;
		}

		[Token(Token = "0x6000A40")]
		public IObservable<Unit> ObserveReset()
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		public IObservable<CollectionAddEvent<T>> ObserveAdd()
		{
			return null;
		}

		[Token(Token = "0x6000A42")]
		public IObservable<CollectionMoveEvent<T>> ObserveMove()
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		public IObservable<CollectionRemoveEvent<T>> ObserveRemove()
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		public IObservable<CollectionReplaceEvent<T>> ObserveReplace()
		{
			return null;
		}

		[Token(Token = "0x6000A45")]
		private void DisposeSubject<TSubject>(ref Subject<TSubject> subject)
		{
		}

		[Token(Token = "0x6000A46")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000A47")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B84C4", Offset = "0x12B84C4")]
		private int <ObserveCountChanged>b__11_0()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200015A")]
	public static class ReactiveCollectionExtensions
	{
		[Token(Token = "0x6000A49")]
		public static ReactiveCollection<T> ToReactiveCollection<T>(this IEnumerable<T> source)
		{
			return null;
		}
	}
	[Token(Token = "0x200015B")]
	public interface IReactiveCommand<T> : IObservable<T>
	{
		[Token(Token = "0x17000162")]
		IReadOnlyReactiveProperty<bool> CanExecute
		{
			[Token(Token = "0x6000A4A")]
			get;
		}

		[Token(Token = "0x6000A4B")]
		bool Execute(T parameter);
	}
	[Token(Token = "0x200015C")]
	public interface IAsyncReactiveCommand<T>
	{
		[Token(Token = "0x17000163")]
		IReadOnlyReactiveProperty<bool> CanExecute
		{
			[Token(Token = "0x6000A4C")]
			get;
		}

		[Token(Token = "0x6000A4D")]
		IDisposable Execute(T parameter);

		[Token(Token = "0x6000A4E")]
		IDisposable Subscribe(Func<T, IObservable<Unit>> asyncAction);
	}
	[Token(Token = "0x200015D")]
	public class ReactiveCommand : ReactiveCommand<Unit>
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x2B7EE6C", Offset = "0x2B7EE6C", VA = "0x2B7EE6C")]
		public ReactiveCommand()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x2B7EEBC", Offset = "0x2B7EEBC", VA = "0x2B7EEBC")]
		public ReactiveCommand(IObservable<bool> canExecuteSource, bool initialValue = true)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2B7EF24", Offset = "0x2B7EF24", VA = "0x2B7EF24")]
		public bool Execute()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x2B7EFE4", Offset = "0x2B7EFE4", VA = "0x2B7EFE4")]
		public void ForceExecute()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class ReactiveCommand<T> : IReactiveCommand<T>, IObservable<T>, IDisposable
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB350", Offset = "0x12AB350")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<bool, ReactiveProperty<bool>> <>9__10_0;

			[Token(Token = "0x60019F1")]
			public <>c()
			{
			}

			[Token(Token = "0x60019F2")]
			internal void <.ctor>b__10_0(bool b, ReactiveProperty<bool> c)
			{
			}
		}

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Subject<T> trigger;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IDisposable canExecuteSubscription;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ReactiveProperty<bool> canExecute;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC748", Offset = "0x12AC748")]
		private bool <IsDisposed>k__BackingField;

		[Token(Token = "0x17000164")]
		public IReadOnlyReactiveProperty<bool> CanExecute
		{
			[Token(Token = "0x6000A53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B84E4", Offset = "0x12B84E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B84F4", Offset = "0x12B84F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A56")]
		public ReactiveCommand()
		{
		}

		[Token(Token = "0x6000A57")]
		public ReactiveCommand(IObservable<bool> canExecuteSource, bool initialValue = true)
		{
		}

		[Token(Token = "0x6000A58")]
		public bool Execute(T parameter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A59")]
		public void ForceExecute(T parameter)
		{
		}

		[Token(Token = "0x6000A5A")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class AsyncReactiveCommand : AsyncReactiveCommand<Unit>
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x27545A8", Offset = "0x27545A8", VA = "0x27545A8")]
		public AsyncReactiveCommand()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x27545F8", Offset = "0x27545F8", VA = "0x27545F8")]
		public AsyncReactiveCommand(IObservable<bool> canExecuteSource)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x2754658", Offset = "0x2754658", VA = "0x2754658")]
		public AsyncReactiveCommand(IReactiveProperty<bool> sharedCanExecute)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x27546B8", Offset = "0x27546B8", VA = "0x27546B8")]
		public IDisposable Execute()
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	public class AsyncReactiveCommand<T> : IAsyncReactiveCommand<T>
	{
		[Token(Token = "0x2000436")]
		private class Subscription : IDisposable
		{
			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AsyncReactiveCommand<T> parent;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, IObservable<Unit>> asyncAction;

			[Token(Token = "0x60019F3")]
			public Subscription(AsyncReactiveCommand<T> parent, Func<T, IObservable<Unit>> asyncAction)
			{
			}

			[Token(Token = "0x60019F4")]
			public void Dispose()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB360", Offset = "0x12AB360")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<bool, bool, bool> <>9__11_0;

			[Token(Token = "0x60019F6")]
			public <>c()
			{
			}

			[Token(Token = "0x60019F7")]
			internal bool <.ctor>b__11_0(bool x, bool y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ImmutableList<Func<T, IObservable<Unit>>> asyncActions;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IReactiveProperty<bool> canExecuteSource;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IReadOnlyReactiveProperty<bool> canExecute;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC758", Offset = "0x12AC758")]
		private bool <IsDisposed>k__BackingField;

		[Token(Token = "0x17000166")]
		public IReadOnlyReactiveProperty<bool> CanExecute
		{
			[Token(Token = "0x6000A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public bool IsDisposed
		{
			[Token(Token = "0x6000A61")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8504", Offset = "0x12B8504")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A62")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8514", Offset = "0x12B8514")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A63")]
		public AsyncReactiveCommand()
		{
		}

		[Token(Token = "0x6000A64")]
		public AsyncReactiveCommand(IObservable<bool> canExecuteSource)
		{
		}

		[Token(Token = "0x6000A65")]
		public AsyncReactiveCommand(IReactiveProperty<bool> sharedCanExecute)
		{
		}

		[Token(Token = "0x6000A66")]
		public IDisposable Execute(T parameter)
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		public IDisposable Subscribe(Func<T, IObservable<Unit>> asyncAction)
		{
			return null;
		}

		[Token(Token = "0x6000A68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8524", Offset = "0x12B8524")]
		private void <Execute>b__13_0()
		{
		}

		[Token(Token = "0x6000A69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8534", Offset = "0x12B8534")]
		private void <Execute>b__13_1()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public static class ReactiveCommandExtensions
	{
		[Serializable]
		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB370", Offset = "0x12AB370")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Unit, ReactiveCommand<Unit>> <>9__2_0;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Unit, ReactiveCommand<Unit>> <>9__3_0;

			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x2B7F628", Offset = "0x2B7F628", VA = "0x2B7F628")]
			public <>c()
			{
			}

			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x2B7F630", Offset = "0x2B7F630", VA = "0x2B7F630")]
			internal void <BindTo>b__2_0(Unit x, ReactiveCommand<Unit> c)
			{
			}

			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x2B7F698", Offset = "0x2B7F698", VA = "0x2B7F698")]
			internal void <BindToOnClick>b__3_0(Unit x, ReactiveCommand<Unit> c)
			{
			}
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x2B7F0A4", Offset = "0x2B7F0A4", VA = "0x2B7F0A4")]
		public static ReactiveCommand ToReactiveCommand(this IObservable<bool> canExecuteSource, bool initialValue = true)
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		public static ReactiveCommand<T> ToReactiveCommand<T>(this IObservable<bool> canExecuteSource, bool initialValue = true)
		{
			return null;
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x2B7F114", Offset = "0x2B7F114", VA = "0x2B7F114")]
		public static IDisposable BindTo(this ReactiveCommand<Unit> command, Button button)
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x2B7F334", Offset = "0x2B7F334", VA = "0x2B7F334")]
		public static IDisposable BindToOnClick(this ReactiveCommand<Unit> command, Button button, Action<Unit> onClick)
		{
			return null;
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x2B7F594", Offset = "0x2B7F594", VA = "0x2B7F594")]
		public static IDisposable BindToButtonOnClick(this IObservable<bool> canExecuteSource, Button button, Action<Unit> onClick, bool initialValue = true)
		{
			return null;
		}
	}
	[Token(Token = "0x2000162")]
	public static class AsyncReactiveCommandExtensions
	{
		[Serializable]
		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB380", Offset = "0x12AB380")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Unit, AsyncReactiveCommand<Unit>> <>9__2_0;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Unit, AsyncReactiveCommand<Unit>> <>9__3_0;

			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x2754B88", Offset = "0x2754B88", VA = "0x2754B88")]
			public <>c()
			{
			}

			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x2754B90", Offset = "0x2754B90", VA = "0x2754B90")]
			internal void <BindTo>b__2_0(Unit x, AsyncReactiveCommand<Unit> c)
			{
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x2754BF8", Offset = "0x2754BF8", VA = "0x2754BF8")]
			internal void <BindToOnClick>b__3_0(Unit x, AsyncReactiveCommand<Unit> c)
			{
			}
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x2754778", Offset = "0x2754778", VA = "0x2754778")]
		public static AsyncReactiveCommand ToAsyncReactiveCommand(this IReactiveProperty<bool> sharedCanExecuteSource)
		{
			return null;
		}

		[Token(Token = "0x6000A70")]
		public static AsyncReactiveCommand<T> ToAsyncReactiveCommand<T>(this IReactiveProperty<bool> sharedCanExecuteSource)
		{
			return null;
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x27547D8", Offset = "0x27547D8", VA = "0x27547D8")]
		public static IDisposable BindTo(this AsyncReactiveCommand<Unit> command, Button button)
		{
			return null;
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x2754918", Offset = "0x2754918", VA = "0x2754918")]
		public static IDisposable BindToOnClick(this AsyncReactiveCommand<Unit> command, Button button, Func<Unit, IObservable<Unit>> asyncOnClick)
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x2754A84", Offset = "0x2754A84", VA = "0x2754A84")]
		public static IDisposable BindToOnClick(this Button button, Func<Unit, IObservable<Unit>> asyncOnClick)
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x2754AF4", Offset = "0x2754AF4", VA = "0x2754AF4")]
		public static IDisposable BindToOnClick(this Button button, IReactiveProperty<bool> sharedCanExecuteSource, Func<Unit, IObservable<Unit>> asyncOnClick)
		{
			return null;
		}
	}
	[Token(Token = "0x2000163")]
	public struct DictionaryAddEvent<TKey, TValue> : IEquatable<DictionaryAddEvent<TKey, TValue>>
	{
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC768", Offset = "0x12AC768")]
		private TKey <Key>k__BackingField;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC778", Offset = "0x12AC778")]
		private TValue <Value>k__BackingField;

		[Token(Token = "0x17000168")]
		public TKey Key
		{
			[Token(Token = "0x6000A75")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B85F4", Offset = "0x12B85F4")]
			get
			{
				return (TKey)null;
			}
			[Token(Token = "0x6000A76")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8604", Offset = "0x12B8604")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public TValue Value
		{
			[Token(Token = "0x6000A77")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8614", Offset = "0x12B8614")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8624", Offset = "0x12B8624")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A79")]
		public DictionaryAddEvent(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000A7A")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A7B")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A7C")]
		public bool Equals(DictionaryAddEvent<TKey, TValue> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000164")]
	public struct DictionaryRemoveEvent<TKey, TValue> : IEquatable<DictionaryRemoveEvent<TKey, TValue>>
	{
		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC788", Offset = "0x12AC788")]
		private TKey <Key>k__BackingField;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC798", Offset = "0x12AC798")]
		private TValue <Value>k__BackingField;

		[Token(Token = "0x1700016A")]
		public TKey Key
		{
			[Token(Token = "0x6000A7D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8634", Offset = "0x12B8634")]
			get
			{
				return (TKey)null;
			}
			[Token(Token = "0x6000A7E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8644", Offset = "0x12B8644")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public TValue Value
		{
			[Token(Token = "0x6000A7F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8654", Offset = "0x12B8654")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8664", Offset = "0x12B8664")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A81")]
		public DictionaryRemoveEvent(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000A82")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A83")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A84")]
		public bool Equals(DictionaryRemoveEvent<TKey, TValue> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000165")]
	public struct DictionaryReplaceEvent<TKey, TValue> : IEquatable<DictionaryReplaceEvent<TKey, TValue>>
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC7A8", Offset = "0x12AC7A8")]
		private TKey <Key>k__BackingField;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC7B8", Offset = "0x12AC7B8")]
		private TValue <OldValue>k__BackingField;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC7C8", Offset = "0x12AC7C8")]
		private TValue <NewValue>k__BackingField;

		[Token(Token = "0x1700016C")]
		public TKey Key
		{
			[Token(Token = "0x6000A85")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8674", Offset = "0x12B8674")]
			get
			{
				return (TKey)null;
			}
			[Token(Token = "0x6000A86")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8684", Offset = "0x12B8684")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public TValue OldValue
		{
			[Token(Token = "0x6000A87")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8694", Offset = "0x12B8694")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B86A4", Offset = "0x12B86A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public TValue NewValue
		{
			[Token(Token = "0x6000A89")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B86B4", Offset = "0x12B86B4")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000A8A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B86C4", Offset = "0x12B86C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A8B")]
		public DictionaryReplaceEvent(TKey key, TValue oldValue, TValue newValue)
		{
		}

		[Token(Token = "0x6000A8C")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A8E")]
		public bool Equals(DictionaryReplaceEvent<TKey, TValue> other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A98B4", Offset = "0x12A98B4")]
	public interface IReadOnlyReactiveDictionary<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
	{
		[Token(Token = "0x1700016F")]
		int Count
		{
			[Token(Token = "0x6000A8F")]
			get;
		}

		[Token(Token = "0x17000170")]
		TValue Item
		{
			[Token(Token = "0x6000A90")]
			get;
		}

		[Token(Token = "0x6000A91")]
		bool ContainsKey(TKey key);

		[Token(Token = "0x6000A92")]
		bool TryGetValue(TKey key, out TValue value);

		[Token(Token = "0x6000A93")]
		IObservable<DictionaryAddEvent<TKey, TValue>> ObserveAdd();

		[Token(Token = "0x6000A94")]
		IObservable<int> ObserveCountChanged();

		[Token(Token = "0x6000A95")]
		IObservable<DictionaryRemoveEvent<TKey, TValue>> ObserveRemove();

		[Token(Token = "0x6000A96")]
		IObservable<DictionaryReplaceEvent<TKey, TValue>> ObserveReplace();

		[Token(Token = "0x6000A97")]
		IObservable<Unit> ObserveReset();
	}
	[Token(Token = "0x2000167")]
	public interface IReactiveDictionary<TKey, TValue> : IReadOnlyReactiveDictionary<TKey, TValue>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>
	{
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A98EC", Offset = "0x12A98EC")]
	public class ReactiveDictionary<TKey, TValue> : IReactiveDictionary<TKey, TValue>, IReadOnlyReactiveDictionary<TKey, TValue>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IDisposable, ISerializable, IDeserializationCallback
	{
		[NonSerialized]
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private readonly Dictionary<TKey, TValue> inner;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool disposedValue;

		[NonSerialized]
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<int> countChanged;

		[NonSerialized]
		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<Unit> collectionReset;

		[NonSerialized]
		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<DictionaryAddEvent<TKey, TValue>> dictionaryAdd;

		[NonSerialized]
		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<DictionaryRemoveEvent<TKey, TValue>> dictionaryRemove;

		[NonSerialized]
		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<DictionaryReplaceEvent<TKey, TValue>> dictionaryReplace;

		[Token(Token = "0x17000171")]
		public TValue Item
		{
			[Token(Token = "0x6000A9B")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public int Count
		{
			[Token(Token = "0x6000A9D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000173")]
		public Dictionary<TKey, TValue>.KeyCollection Keys
		{
			[Token(Token = "0x6000A9E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public Dictionary<TKey, TValue>.ValueCollection Values
		{
			[Token(Token = "0x6000A9F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000AAE")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AAF")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000AB1")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000AB2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000AB3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000AB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000AB5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
		{
			[Token(Token = "0x6000AB6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017D")]
		private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
		{
			[Token(Token = "0x6000AB7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
		{
			[Token(Token = "0x6000AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A98")]
		public ReactiveDictionary()
		{
		}

		[Token(Token = "0x6000A99")]
		public ReactiveDictionary(IEqualityComparer<TKey> comparer)
		{
		}

		[Token(Token = "0x6000A9A")]
		public ReactiveDictionary(Dictionary<TKey, TValue> innerDictionary)
		{
		}

		[Token(Token = "0x6000AA0")]
		public void Add(TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000AA1")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000AA2")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA5")]
		public Dictionary<TKey, TValue>.Enumerator GetEnumerator()
		{
			return default(Dictionary<TKey, TValue>.Enumerator);
		}

		[Token(Token = "0x6000AA6")]
		private void DisposeSubject<TSubject>(ref Subject<TSubject> subject)
		{
		}

		[Token(Token = "0x6000AA7")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000AA8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000AA9")]
		public IObservable<int> ObserveCountChanged()
		{
			return null;
		}

		[Token(Token = "0x6000AAA")]
		public IObservable<Unit> ObserveReset()
		{
			return null;
		}

		[Token(Token = "0x6000AAB")]
		public IObservable<DictionaryAddEvent<TKey, TValue>> ObserveAdd()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		public IObservable<DictionaryRemoveEvent<TKey, TValue>> ObserveRemove()
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		public IObservable<DictionaryReplaceEvent<TKey, TValue>> ObserveReplace()
		{
			return null;
		}

		[Token(Token = "0x6000AB9")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000ABA")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000ABC")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000ABD")]
		public void OnDeserialization(object sender)
		{
		}

		[Token(Token = "0x6000ABE")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000ABF")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6000AC0")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC1")]
		private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000AC2")]
		private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000AC3")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC5")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000169")]
	public static class ReactiveDictionaryExtensions
	{
		[Token(Token = "0x6000AC6")]
		public static ReactiveDictionary<TKey, TValue> ToReactiveDictionary<TKey, TValue>(this Dictionary<TKey, TValue> dictionary)
		{
			return null;
		}
	}
	[Token(Token = "0x200016A")]
	public interface IReadOnlyReactiveProperty<T> : IObservable<T>
	{
		[Token(Token = "0x1700017F")]
		T Value
		{
			[Token(Token = "0x6000AC7")]
			get;
		}

		[Token(Token = "0x17000180")]
		bool HasValue
		{
			[Token(Token = "0x6000AC8")]
			get;
		}
	}
	[Token(Token = "0x200016B")]
	public interface IReactiveProperty<T> : IReadOnlyReactiveProperty<T>, IObservable<T>
	{
		[Token(Token = "0x17000181")]
		new T Value
		{
			[Token(Token = "0x6000AC9")]
			get;
			[Token(Token = "0x6000ACA")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class ReactiveProperty<T> : IReactiveProperty<T>, IReadOnlyReactiveProperty<T>, IObservable<T>, IDisposable, IOptimizedObservable<T>
	{
		[Token(Token = "0x200043A")]
		private class ReactivePropertyObserver : IObserver<T>
		{
			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ReactiveProperty<T> parent;

			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x6001A00")]
			public ReactivePropertyObserver(ReactiveProperty<T> parent)
			{
			}

			[Token(Token = "0x6001A01")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x6001A02")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A03")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IEqualityComparer<T> defaultEqualityComparer;

		[NonSerialized]
		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool canPublishValueOnSubscribe;

		[NonSerialized]
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T value;

		[NonSerialized]
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<T> publisher;

		[NonSerialized]
		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IDisposable sourceConnection;

		[NonSerialized]
		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastException;

		[Token(Token = "0x17000182")]
		protected virtual IEqualityComparer<T> EqualityComparer
		{
			[Token(Token = "0x6000ACB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public T Value
		{
			[Token(Token = "0x6000ACC")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000ACD")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool HasValue
		{
			[Token(Token = "0x6000ACE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ACF")]
		public ReactiveProperty()
		{
		}

		[Token(Token = "0x6000AD0")]
		public ReactiveProperty(T initialValue)
		{
		}

		[Token(Token = "0x6000AD1")]
		public ReactiveProperty(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000AD2")]
		public ReactiveProperty(IObservable<T> source, T initialValue)
		{
		}

		[Token(Token = "0x6000AD3")]
		protected virtual void SetValue(T value)
		{
		}

		[Token(Token = "0x6000AD4")]
		public void SetValueAndForceNotify(T value)
		{
		}

		[Token(Token = "0x6000AD5")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000AD7")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000AD8")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016D")]
	public class ReadOnlyReactiveProperty<T> : IReadOnlyReactiveProperty<T>, IObservable<T>, IDisposable, IOptimizedObservable<T>
	{
		[Token(Token = "0x200043B")]
		private class ReadOnlyReactivePropertyObserver : IObserver<T>
		{
			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ReadOnlyReactiveProperty<T> parent;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int isStopped;

			[Token(Token = "0x6001A04")]
			public ReadOnlyReactivePropertyObserver(ReadOnlyReactiveProperty<T> parent)
			{
			}

			[Token(Token = "0x6001A05")]
			public void OnNext(T value)
			{
			}

			[Token(Token = "0x6001A06")]
			public void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A07")]
			public void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IEqualityComparer<T> defaultEqualityComparer;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool distinctUntilChanged;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool canPublishValueOnSubscribe;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isDisposed;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception lastException;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Subject<T> publisher;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IDisposable sourceConnection;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isSourceCompleted;

		[Token(Token = "0x17000185")]
		public T Value
		{
			[Token(Token = "0x6000ADB")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000186")]
		public bool HasValue
		{
			[Token(Token = "0x6000ADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000187")]
		protected virtual IEqualityComparer<T> EqualityComparer
		{
			[Token(Token = "0x6000ADD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADE")]
		public ReadOnlyReactiveProperty(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000ADF")]
		public ReadOnlyReactiveProperty(IObservable<T> source, bool distinctUntilChanged)
		{
		}

		[Token(Token = "0x6000AE0")]
		public ReadOnlyReactiveProperty(IObservable<T> source, T initialValue)
		{
		}

		[Token(Token = "0x6000AE1")]
		public ReadOnlyReactiveProperty(IObservable<T> source, T initialValue, bool distinctUntilChanged)
		{
		}

		[Token(Token = "0x6000AE2")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000AE4")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000AE5")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000AE6")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016E")]
	public static class ReactivePropertyExtensions
	{
		[Serializable]
		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB390", Offset = "0x12AB390")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IList<bool>, bool> <>9__7_0;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IList<bool>, bool> <>9__8_0;

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x2B7F9FC", Offset = "0x2B7F9FC", VA = "0x2B7F9FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x2B7FA04", Offset = "0x2B7FA04", VA = "0x2B7FA04")]
			internal bool <CombineLatestValuesAreAllTrue>b__7_0(IList<bool> xs)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x2B7FC88", Offset = "0x2B7FC88", VA = "0x2B7FC88")]
			internal bool <CombineLatestValuesAreAllFalse>b__8_0(IList<bool> xs)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AE8")]
		public static ReactiveProperty<T> ToReactiveProperty<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000AE9")]
		public static ReactiveProperty<T> ToReactiveProperty<T>(this IObservable<T> source, T initialValue)
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		public static ReadOnlyReactiveProperty<T> ToReadOnlyReactiveProperty<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000AEB")]
		public static ReadOnlyReactiveProperty<T> ToSequentialReadOnlyReactiveProperty<T>(this IObservable<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000AEC")]
		public static ReadOnlyReactiveProperty<T> ToReadOnlyReactiveProperty<T>(this IObservable<T> source, T initialValue)
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		public static ReadOnlyReactiveProperty<T> ToSequentialReadOnlyReactiveProperty<T>(this IObservable<T> source, T initialValue)
		{
			return null;
		}

		[Token(Token = "0x6000AEE")]
		public static IObservable<T> SkipLatestValueOnSubscribe<T>(this IReadOnlyReactiveProperty<T> source)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x2B7F700", Offset = "0x2B7F700", VA = "0x2B7F700")]
		public static IObservable<bool> CombineLatestValuesAreAllTrue(this IEnumerable<IObservable<bool>> sources)
		{
			return null;
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x2B7F84C", Offset = "0x2B7F84C", VA = "0x2B7F84C")]
		public static IObservable<bool> CombineLatestValuesAreAllFalse(this IEnumerable<IObservable<bool>> sources)
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public static class UnityEqualityComparer
	{
		[Token(Token = "0x200043D")]
		private static class RuntimeTypeHandlerCache<T>
		{
			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly RuntimeTypeHandle TypeHandle;
		}

		[Token(Token = "0x200043E")]
		private class Vector2EqualityComparer : IEqualityComparer<Vector2>
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x18BD4AC", Offset = "0x18BD4AC", VA = "0x18BD4AC", Slot = "4")]
			public bool Equals(Vector2 self, Vector2 vector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x18BD510", Offset = "0x18BD510", VA = "0x18BD510", Slot = "5")]
			public int GetHashCode(Vector2 obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x18BD55C", Offset = "0x18BD55C", VA = "0x18BD55C")]
			public Vector2EqualityComparer()
			{
			}
		}

		[Token(Token = "0x200043F")]
		private class Vector3EqualityComparer : IEqualityComparer<Vector3>
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x18BD564", Offset = "0x18BD564", VA = "0x18BD564", Slot = "4")]
			public bool Equals(Vector3 self, Vector3 vector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x18BD5E4", Offset = "0x18BD5E4", VA = "0x18BD5E4", Slot = "5")]
			public int GetHashCode(Vector3 obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A12")]
			[Address(RVA = "0x18BD654", Offset = "0x18BD654", VA = "0x18BD654")]
			public Vector3EqualityComparer()
			{
			}
		}

		[Token(Token = "0x2000440")]
		private class Vector4EqualityComparer : IEqualityComparer<Vector4>
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x18BD65C", Offset = "0x18BD65C", VA = "0x18BD65C", Slot = "4")]
			public bool Equals(Vector4 self, Vector4 vector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x18BD6FC", Offset = "0x18BD6FC", VA = "0x18BD6FC", Slot = "5")]
			public int GetHashCode(Vector4 obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x18BD784", Offset = "0x18BD784", VA = "0x18BD784")]
			public Vector4EqualityComparer()
			{
			}
		}

		[Token(Token = "0x2000441")]
		private class ColorEqualityComparer : IEqualityComparer<Color>
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x2B92C84", Offset = "0x2B92C84", VA = "0x2B92C84", Slot = "4")]
			public bool Equals(Color self, Color other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x2B92D24", Offset = "0x2B92D24", VA = "0x2B92D24", Slot = "5")]
			public int GetHashCode(Color obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x2B92B68", Offset = "0x2B92B68", VA = "0x2B92B68")]
			public ColorEqualityComparer()
			{
			}
		}

		[Token(Token = "0x2000442")]
		private class RectEqualityComparer : IEqualityComparer<Rect>
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x2B92ED4", Offset = "0x2B92ED4", VA = "0x2B92ED4", Slot = "4")]
			public bool Equals(Rect self, Rect other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x2B92FB4", Offset = "0x2B92FB4", VA = "0x2B92FB4", Slot = "5")]
			public int GetHashCode(Rect obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x2B92B70", Offset = "0x2B92B70", VA = "0x2B92B70")]
			public RectEqualityComparer()
			{
			}
		}

		[Token(Token = "0x2000443")]
		private class BoundsEqualityComparer : IEqualityComparer<Bounds>
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x2B92B88", Offset = "0x2B92B88", VA = "0x2B92B88", Slot = "4")]
			public bool Equals(Bounds self, Bounds vector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x2B92C18", Offset = "0x2B92C18", VA = "0x2B92C18", Slot = "5")]
			public int GetHashCode(Bounds obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x2B92B78", Offset = "0x2B92B78", VA = "0x2B92B78")]
			public BoundsEqualityComparer()
			{
			}
		}

		[Token(Token = "0x2000444")]
		private class QuaternionEqualityComparer : IEqualityComparer<Quaternion>
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x2B92DAC", Offset = "0x2B92DAC", VA = "0x2B92DAC", Slot = "4")]
			public bool Equals(Quaternion self, Quaternion vector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x2B92E4C", Offset = "0x2B92E4C", VA = "0x2B92E4C", Slot = "5")]
			public int GetHashCode(Quaternion obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x2B92B80", Offset = "0x2B92B80", VA = "0x2B92B80")]
			public QuaternionEqualityComparer()
			{
			}
		}

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly IEqualityComparer<Vector2> Vector2;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly IEqualityComparer<Vector3> Vector3;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IEqualityComparer<Vector4> Vector4;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly IEqualityComparer<Color> Color;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly IEqualityComparer<Rect> Rect;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly IEqualityComparer<Bounds> Bounds;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly IEqualityComparer<Quaternion> Quaternion;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly RuntimeTypeHandle vector2Type;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly RuntimeTypeHandle vector3Type;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly RuntimeTypeHandle vector4Type;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly RuntimeTypeHandle colorType;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly RuntimeTypeHandle rectType;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly RuntimeTypeHandle boundsType;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly RuntimeTypeHandle quaternionType;

		[Token(Token = "0x6000AF1")]
		public static IEqualityComparer<T> GetDefault<T>()
		{
			return null;
		}
	}
	[Token(Token = "0x2000170")]
	public static class UnityEventExtensions
	{
		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3A0", Offset = "0x12AB3A0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x18BD924", Offset = "0x18BD924", VA = "0x18BD924")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x18BDA08", Offset = "0x18BDA08", VA = "0x18BDA08")]
			internal void <AsObservable>b__1(UnityAction h)
			{
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x18BDA24", Offset = "0x18BDA24", VA = "0x18BDA24")]
			internal void <AsObservable>b__2(UnityAction h)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3B0", Offset = "0x12AB3B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Action, UnityAction> <>9__0_0;

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x18BD990", Offset = "0x18BD990", VA = "0x18BD990")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x18BD998", Offset = "0x18BD998", VA = "0x18BD998")]
			internal UnityAction <AsObservable>b__0_0(Action h)
			{
				return null;
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3C0", Offset = "0x12AB3C0")]
		private sealed class <>c__DisplayClass1_0<T>
		{
			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEvent<T> unityEvent;

			[Token(Token = "0x6001A28")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001A29")]
			internal void <AsObservable>b__1(UnityAction<T> h)
			{
			}

			[Token(Token = "0x6001A2A")]
			internal void <AsObservable>b__2(UnityAction<T> h)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3D0", Offset = "0x12AB3D0")]
		private sealed class <>c__1<T>
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__1<T> <>9;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Action<T>, UnityAction<T>> <>9__1_0;

			[Token(Token = "0x6001A2C")]
			public <>c__1()
			{
			}

			[Token(Token = "0x6001A2D")]
			internal UnityAction<T> <AsObservable>b__1_0(Action<T> h)
			{
				return null;
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3E0", Offset = "0x12AB3E0")]
		private sealed class <>c__DisplayClass2_0<T0, T1>
		{
			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEvent<T0, T1> unityEvent;

			[Token(Token = "0x6001A2E")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001A2F")]
			internal void <AsObservable>b__1(UnityAction<T0, T1> h)
			{
			}

			[Token(Token = "0x6001A30")]
			internal void <AsObservable>b__2(UnityAction<T0, T1> h)
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB3F0", Offset = "0x12AB3F0")]
		private sealed class <>c__DisplayClass2_1<T0, T1>
		{
			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Tuple<T0, T1>> h;

			[Token(Token = "0x6001A31")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x6001A32")]
			internal void <AsObservable>b__3(T0 t0, T1 t1)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB400", Offset = "0x12AB400")]
		private sealed class <>c__2<T0, T1>
		{
			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__2<T0, T1> <>9;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Action<Tuple<T0, T1>>, UnityAction<T0, T1>> <>9__2_0;

			[Token(Token = "0x6001A34")]
			public <>c__2()
			{
			}

			[Token(Token = "0x6001A35")]
			internal UnityAction<T0, T1> <AsObservable>b__2_0(Action<Tuple<T0, T1>> h)
			{
				return null;
			}
		}

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB410", Offset = "0x12AB410")]
		private sealed class <>c__DisplayClass3_0<T0, T1, T2>
		{
			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEvent<T0, T1, T2> unityEvent;

			[Token(Token = "0x6001A36")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001A37")]
			internal void <AsObservable>b__1(UnityAction<T0, T1, T2> h)
			{
			}

			[Token(Token = "0x6001A38")]
			internal void <AsObservable>b__2(UnityAction<T0, T1, T2> h)
			{
			}
		}

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB420", Offset = "0x12AB420")]
		private sealed class <>c__DisplayClass3_1<T0, T1, T2>
		{
			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Tuple<T0, T1, T2>> h;

			[Token(Token = "0x6001A39")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x6001A3A")]
			internal void <AsObservable>b__3(T0 t0, T1 t1, T2 t2)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB430", Offset = "0x12AB430")]
		private sealed class <>c__3<T0, T1, T2>
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__3<T0, T1, T2> <>9;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Action<Tuple<T0, T1, T2>>, UnityAction<T0, T1, T2>> <>9__3_0;

			[Token(Token = "0x6001A3C")]
			public <>c__3()
			{
			}

			[Token(Token = "0x6001A3D")]
			internal UnityAction<T0, T1, T2> <AsObservable>b__3_0(Action<Tuple<T0, T1, T2>> h)
			{
				return null;
			}
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB440", Offset = "0x12AB440")]
		private sealed class <>c__DisplayClass4_0<T0, T1, T2, T3>
		{
			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEvent<T0, T1, T2, T3> unityEvent;

			[Token(Token = "0x6001A3E")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001A3F")]
			internal void <AsObservable>b__1(UnityAction<T0, T1, T2, T3> h)
			{
			}

			[Token(Token = "0x6001A40")]
			internal void <AsObservable>b__2(UnityAction<T0, T1, T2, T3> h)
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB450", Offset = "0x12AB450")]
		private sealed class <>c__DisplayClass4_1<T0, T1, T2, T3>
		{
			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Tuple<T0, T1, T2, T3>> h;

			[Token(Token = "0x6001A41")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001A42")]
			internal void <AsObservable>b__3(T0 t0, T1 t1, T2 t2, T3 t3)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB460", Offset = "0x12AB460")]
		private sealed class <>c__4<T0, T1, T2, T3>
		{
			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__4<T0, T1, T2, T3> <>9;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Action<Tuple<T0, T1, T2, T3>>, UnityAction<T0, T1, T2, T3>> <>9__4_0;

			[Token(Token = "0x6001A44")]
			public <>c__4()
			{
			}

			[Token(Token = "0x6001A45")]
			internal UnityAction<T0, T1, T2, T3> <AsObservable>b__4_0(Action<Tuple<T0, T1, T2, T3>> h)
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x18BD78C", Offset = "0x18BD78C", VA = "0x18BD78C")]
		public static IObservable<Unit> AsObservable(this UnityEvent unityEvent)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		public static IObservable<T> AsObservable<T>(this UnityEvent<T> unityEvent)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		public static IObservable<Tuple<T0, T1>> AsObservable<T0, T1>(this UnityEvent<T0, T1> unityEvent)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		public static IObservable<Tuple<T0, T1, T2>> AsObservable<T0, T1, T2>(this UnityEvent<T0, T1, T2> unityEvent)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		public static IObservable<Tuple<T0, T1, T2, T3>> AsObservable<T0, T1, T2, T3>(this UnityEvent<T0, T1, T2, T3> unityEvent)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public static class UnityGraphicExtensions
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB470", Offset = "0x12AB470")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic;

			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x18BDB0C", Offset = "0x18BDB0C", VA = "0x18BDB0C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x18BDCBC", Offset = "0x18BDCBC", VA = "0x18BDCBC")]
			internal IDisposable <DirtyLayoutCallbackAsObservable>b__0(IObserver<Unit> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB480", Offset = "0x12AB480")]
		private sealed class <>c__DisplayClass0_1
		{
			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction registerHandler;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass0_0 CS$<>8__locals1;

			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x18BDDCC", Offset = "0x18BDDCC", VA = "0x18BDDCC")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x18BDDD4", Offset = "0x18BDDD4", VA = "0x18BDDD4")]
			internal void <DirtyLayoutCallbackAsObservable>b__1()
			{
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x18BDEFC", Offset = "0x18BDEFC", VA = "0x18BDEFC")]
			internal void <DirtyLayoutCallbackAsObservable>b__2()
			{
			}
		}

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB490", Offset = "0x12AB490")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic;

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x18BDBE0", Offset = "0x18BDBE0", VA = "0x18BDBE0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x18BDF2C", Offset = "0x18BDF2C", VA = "0x18BDF2C")]
			internal IDisposable <DirtyMaterialCallbackAsObservable>b__0(IObserver<Unit> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4A0", Offset = "0x12AB4A0")]
		private sealed class <>c__DisplayClass1_1
		{
			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction registerHandler;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass1_0 CS$<>8__locals1;

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x18BE03C", Offset = "0x18BE03C", VA = "0x18BE03C")]
			public <>c__DisplayClass1_1()
			{
			}

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x18BE044", Offset = "0x18BE044", VA = "0x18BE044")]
			internal void <DirtyMaterialCallbackAsObservable>b__1()
			{
			}

			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x18BE16C", Offset = "0x18BE16C", VA = "0x18BE16C")]
			internal void <DirtyMaterialCallbackAsObservable>b__2()
			{
			}
		}

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4B0", Offset = "0x12AB4B0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic graphic;

			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x18BDCB4", Offset = "0x18BDCB4", VA = "0x18BDCB4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x18BE19C", Offset = "0x18BE19C", VA = "0x18BE19C")]
			internal IDisposable <DirtyVerticesCallbackAsObservable>b__0(IObserver<Unit> observer)
			{
				return null;
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4C0", Offset = "0x12AB4C0")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityAction registerHandler;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass2_0 CS$<>8__locals1;

			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x18BE2AC", Offset = "0x18BE2AC", VA = "0x18BE2AC")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x18BE2B4", Offset = "0x18BE2B4", VA = "0x18BE2B4")]
			internal void <DirtyVerticesCallbackAsObservable>b__1()
			{
			}

			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x18BE3DC", Offset = "0x18BE3DC", VA = "0x18BE3DC")]
			internal void <DirtyVerticesCallbackAsObservable>b__2()
			{
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x18BDA40", Offset = "0x18BDA40", VA = "0x18BDA40")]
		public static IObservable<Unit> DirtyLayoutCallbackAsObservable(this Graphic graphic)
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x18BDB14", Offset = "0x18BDB14", VA = "0x18BDB14")]
		public static IObservable<Unit> DirtyMaterialCallbackAsObservable(this Graphic graphic)
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x18BDBE8", Offset = "0x18BDBE8", VA = "0x18BDBE8")]
		public static IObservable<Unit> DirtyVerticesCallbackAsObservable(this Graphic graphic)
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public static class UnityUIComponentExtensions
	{
		[Serializable]
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4D0", Offset = "0x12AB4D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string, Text> <>9__0_0;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<bool, Selectable> <>9__3_0;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Toggle, IObserver<bool>, IDisposable> <>9__5_0;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Scrollbar, IObserver<float>, IDisposable> <>9__6_0;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ScrollRect, IObserver<Vector2>, IDisposable> <>9__7_0;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Slider, IObserver<float>, IDisposable> <>9__8_0;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<InputField, IObserver<string>, IDisposable> <>9__10_0;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<InputField, IObserver<string>, IDisposable> <>9__11_0;

			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x18BED20", Offset = "0x18BED20", VA = "0x18BED20")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x18BED28", Offset = "0x18BED28", VA = "0x18BED28")]
			internal void <SubscribeToText>b__0_0(string x, Text t)
			{
			}

			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x18BED4C", Offset = "0x18BED4C", VA = "0x18BED4C")]
			internal void <SubscribeToInteractable>b__3_0(bool x, Selectable s)
			{
			}

			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x18BED6C", Offset = "0x18BED6C", VA = "0x18BED6C")]
			internal IDisposable <OnValueChangedAsObservable>b__5_0(Toggle t, IObserver<bool> observer)
			{
				return null;
			}

			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x18BEEC0", Offset = "0x18BEEC0", VA = "0x18BEEC0")]
			internal IDisposable <OnValueChangedAsObservable>b__6_0(Scrollbar s, IObserver<float> observer)
			{
				return null;
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x18BF024", Offset = "0x18BF024", VA = "0x18BF024")]
			internal IDisposable <OnValueChangedAsObservable>b__7_0(ScrollRect s, IObserver<Vector2> observer)
			{
				return null;
			}

			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x18BF190", Offset = "0x18BF190", VA = "0x18BF190")]
			internal IDisposable <OnValueChangedAsObservable>b__8_0(Slider s, IObserver<float> observer)
			{
				return null;
			}

			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x18BF2FC", Offset = "0x18BF2FC", VA = "0x18BF2FC")]
			internal IDisposable <OnValueChangeAsObservable>b__10_0(InputField i, IObserver<string> observer)
			{
				return null;
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x18BF44C", Offset = "0x18BF44C", VA = "0x18BF44C")]
			internal IDisposable <OnValueChangedAsObservable>b__11_0(InputField i, IObserver<string> observer)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4E0", Offset = "0x12AB4E0")]
		private sealed class <>c__1<T>
		{
			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__1<T> <>9;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<T, Text> <>9__1_0;

			[Token(Token = "0x6001A60")]
			public <>c__1()
			{
			}

			[Token(Token = "0x6001A61")]
			internal void <SubscribeToText>b__1_0(T x, Text t)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB4F0", Offset = "0x12AB4F0")]
		private sealed class <>c__2<T>
		{
			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__2<T> <>9;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<T, Text, Func<T, string>> <>9__2_0;

			[Token(Token = "0x6001A63")]
			public <>c__2()
			{
			}

			[Token(Token = "0x6001A64")]
			internal void <SubscribeToText>b__2_0(T x, Text t, Func<T, string> s)
			{
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x18BE40C", Offset = "0x18BE40C", VA = "0x18BE40C")]
		public static IDisposable SubscribeToText(this IObservable<string> source, Text text)
		{
			return null;
		}

		[Token(Token = "0x6000AFC")]
		public static IDisposable SubscribeToText<T>(this IObservable<T> source, Text text)
		{
			return null;
		}

		[Token(Token = "0x6000AFD")]
		public static IDisposable SubscribeToText<T>(this IObservable<T> source, Text text, Func<T, string> selector)
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x18BE508", Offset = "0x18BE508", VA = "0x18BE508")]
		public static IDisposable SubscribeToInteractable(this IObservable<bool> source, Selectable selectable)
		{
			return null;
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x18BE604", Offset = "0x18BE604", VA = "0x18BE604")]
		public static IObservable<Unit> OnClickAsObservable(this Button button)
		{
			return null;
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x18BE61C", Offset = "0x18BE61C", VA = "0x18BE61C")]
		public static IObservable<bool> OnValueChangedAsObservable(this Toggle toggle)
		{
			return null;
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x18BE728", Offset = "0x18BE728", VA = "0x18BE728")]
		public static IObservable<float> OnValueChangedAsObservable(this Scrollbar scrollbar)
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x18BE834", Offset = "0x18BE834", VA = "0x18BE834")]
		public static IObservable<Vector2> OnValueChangedAsObservable(this ScrollRect scrollRect)
		{
			return null;
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x18BE940", Offset = "0x18BE940", VA = "0x18BE940")]
		public static IObservable<float> OnValueChangedAsObservable(this Slider slider)
		{
			return null;
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x18BEA4C", Offset = "0x18BEA4C", VA = "0x18BEA4C")]
		public static IObservable<string> OnEndEditAsObservable(this InputField inputField)
		{
			return null;
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x18BEAA4", Offset = "0x18BEAA4", VA = "0x18BEAA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12B8894", Offset = "0x12B8894")]
		public static IObservable<string> OnValueChangeAsObservable(this InputField inputField)
		{
			return null;
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x18BEBB0", Offset = "0x18BEBB0", VA = "0x18BEBB0")]
		public static IObservable<string> OnValueChangedAsObservable(this InputField inputField)
		{
			return null;
		}
	}
	[Token(Token = "0x2000173")]
	internal static class YieldInstructionCache
	{
		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly WaitForEndOfFrame WaitForEndOfFrame;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly WaitForFixedUpdate WaitForFixedUpdate;
	}
}
namespace UniRx.Triggers
{
	[Token(Token = "0x2000174")]
	[DisallowMultipleComponent]
	public class ObservableAnimatorTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<int> onAnimatorIK;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onAnimatorMove;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x2B879A4", Offset = "0x2B879A4", VA = "0x2B879A4")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x2B87A18", Offset = "0x2B87A18", VA = "0x2B87A18")]
		public IObservable<int> OnAnimatorIKAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x2B87A8C", Offset = "0x2B87A8C", VA = "0x2B87A8C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x2B87B64", Offset = "0x2B87B64", VA = "0x2B87B64")]
		public IObservable<Unit> OnAnimatorMoveAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x2B87BD8", Offset = "0x2B87BD8", VA = "0x2B87BD8", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x2B87C50", Offset = "0x2B87C50", VA = "0x2B87C50")]
		public ObservableAnimatorTrigger()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[DisallowMultipleComponent]
	public class ObservableBeginDragTrigger : ObservableTriggerBase, IEventSystemHandler, IBeginDragHandler
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onBeginDrag;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x2B87C60", Offset = "0x2B87C60", VA = "0x2B87C60", Slot = "5")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x2B87CD4", Offset = "0x2B87CD4", VA = "0x2B87CD4")]
		public IObservable<PointerEventData> OnBeginDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x2B87D48", Offset = "0x2B87D48", VA = "0x2B87D48", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x2B87DA8", Offset = "0x2B87DA8", VA = "0x2B87DA8")]
		public ObservableBeginDragTrigger()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[DisallowMultipleComponent]
	public class ObservableCancelTrigger : ObservableTriggerBase, IEventSystemHandler, ICancelHandler
	{
		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onCancel;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x2B87DB0", Offset = "0x2B87DB0", VA = "0x2B87DB0", Slot = "5")]
		private void UnityEngine.EventSystems.ICancelHandler.OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x2B87E24", Offset = "0x2B87E24", VA = "0x2B87E24")]
		public IObservable<BaseEventData> OnCancelAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x2B87E98", Offset = "0x2B87E98", VA = "0x2B87E98", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x2B87EF8", Offset = "0x2B87EF8", VA = "0x2B87EF8")]
		public ObservableCancelTrigger()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[DisallowMultipleComponent]
	public class ObservableCanvasGroupChangedTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> onCanvasGroupChanged;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x2B87F00", Offset = "0x2B87F00", VA = "0x2B87F00")]
		private void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x2B87FD8", Offset = "0x2B87FD8", VA = "0x2B87FD8")]
		public IObservable<Unit> OnCanvasGroupChangedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x2B8804C", Offset = "0x2B8804C", VA = "0x2B8804C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x2B880AC", Offset = "0x2B880AC", VA = "0x2B880AC")]
		public ObservableCanvasGroupChangedTrigger()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[DisallowMultipleComponent]
	public class ObservableCollision2DTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Collision2D> onCollisionEnter2D;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Collision2D> onCollisionExit2D;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<Collision2D> onCollisionStay2D;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2B880B4", Offset = "0x2B880B4", VA = "0x2B880B4")]
		private void OnCollisionEnter2D(Collision2D coll)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x2B88128", Offset = "0x2B88128", VA = "0x2B88128")]
		public IObservable<Collision2D> OnCollisionEnter2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2B8819C", Offset = "0x2B8819C", VA = "0x2B8819C")]
		private void OnCollisionExit2D(Collision2D coll)
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x2B88210", Offset = "0x2B88210", VA = "0x2B88210")]
		public IObservable<Collision2D> OnCollisionExit2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x2B88284", Offset = "0x2B88284", VA = "0x2B88284")]
		private void OnCollisionStay2D(Collision2D coll)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2B882F8", Offset = "0x2B882F8", VA = "0x2B882F8")]
		public IObservable<Collision2D> OnCollisionStay2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x2B8836C", Offset = "0x2B8836C", VA = "0x2B8836C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x2B883FC", Offset = "0x2B883FC", VA = "0x2B883FC")]
		public ObservableCollision2DTrigger()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[DisallowMultipleComponent]
	public class ObservableCollisionTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Collision> onCollisionEnter;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Collision> onCollisionExit;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<Collision> onCollisionStay;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x2B88404", Offset = "0x2B88404", VA = "0x2B88404")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x2B88478", Offset = "0x2B88478", VA = "0x2B88478")]
		public IObservable<Collision> OnCollisionEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x2B884EC", Offset = "0x2B884EC", VA = "0x2B884EC")]
		private void OnCollisionExit(Collision collisionInfo)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x2B88560", Offset = "0x2B88560", VA = "0x2B88560")]
		public IObservable<Collision> OnCollisionExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x2B885D4", Offset = "0x2B885D4", VA = "0x2B885D4")]
		private void OnCollisionStay(Collision collisionInfo)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x2B88648", Offset = "0x2B88648", VA = "0x2B88648")]
		public IObservable<Collision> OnCollisionStayAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x2B886BC", Offset = "0x2B886BC", VA = "0x2B886BC", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x2B8874C", Offset = "0x2B8874C", VA = "0x2B8874C")]
		public ObservableCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[DisallowMultipleComponent]
	public class ObservableDeselectTrigger : ObservableTriggerBase, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onDeselect;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x2B88754", Offset = "0x2B88754", VA = "0x2B88754", Slot = "5")]
		private void UnityEngine.EventSystems.IDeselectHandler.OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x2B887C8", Offset = "0x2B887C8", VA = "0x2B887C8")]
		public IObservable<BaseEventData> OnDeselectAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x2B8883C", Offset = "0x2B8883C", VA = "0x2B8883C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x2B8889C", Offset = "0x2B8889C", VA = "0x2B8889C")]
		public ObservableDeselectTrigger()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[DisallowMultipleComponent]
	public class ObservableDestroyTrigger : MonoBehaviour
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool calledDestroy;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Subject<Unit> onDestroy;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CompositeDisposable disposablesOnDestroy;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC7F8", Offset = "0x12AC7F8")]
		private bool <IsMonitoredActivate>k__BackingField;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC808", Offset = "0x12AC808")]
		private bool <IsActivated>k__BackingField;

		[Token(Token = "0x17000188")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x12BF7FC", Offset = "0x12BF7FC")]
		internal bool IsMonitoredActivate
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x2B888A4", Offset = "0x2B888A4", VA = "0x2B888A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B88F0", Offset = "0x12B88F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x2B888AC", Offset = "0x2B888AC", VA = "0x2B888AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8900", Offset = "0x12B8900")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public bool IsActivated
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x2B888B8", Offset = "0x2B888B8", VA = "0x2B888B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8910", Offset = "0x12B8910")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x2B888C0", Offset = "0x2B888C0", VA = "0x2B888C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8920", Offset = "0x12B8920")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public bool IsCalledOnDestroy
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x2B888CC", Offset = "0x2B888CC", VA = "0x2B888CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x2B888D4", Offset = "0x2B888D4", VA = "0x2B888D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x2B888E0", Offset = "0x2B888E0", VA = "0x2B888E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x2B889F4", Offset = "0x2B889F4", VA = "0x2B889F4")]
		public IObservable<Unit> OnDestroyAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x2B88B74", Offset = "0x2B88B74", VA = "0x2B88B74")]
		public void ForceRaiseOnDestroy()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x2B88B78", Offset = "0x2B88B78", VA = "0x2B88B78")]
		public void AddDisposableOnDestroy(IDisposable disposable)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x2B88C80", Offset = "0x2B88C80", VA = "0x2B88C80")]
		public ObservableDestroyTrigger()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[DisallowMultipleComponent]
	public class ObservableDragTrigger : ObservableTriggerBase, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onDrag;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x2B88C88", Offset = "0x2B88C88", VA = "0x2B88C88", Slot = "5")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x2B88CFC", Offset = "0x2B88CFC", VA = "0x2B88CFC")]
		public IObservable<PointerEventData> OnDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x2B88D70", Offset = "0x2B88D70", VA = "0x2B88D70", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x2B88DD0", Offset = "0x2B88DD0", VA = "0x2B88DD0")]
		public ObservableDragTrigger()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[DisallowMultipleComponent]
	public class ObservableDropTrigger : ObservableTriggerBase, IEventSystemHandler, IDropHandler
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onDrop;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x2B88DD8", Offset = "0x2B88DD8", VA = "0x2B88DD8", Slot = "5")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2B88E4C", Offset = "0x2B88E4C", VA = "0x2B88E4C")]
		public IObservable<PointerEventData> OnDropAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2B88EC0", Offset = "0x2B88EC0", VA = "0x2B88EC0", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x2B88F20", Offset = "0x2B88F20", VA = "0x2B88F20")]
		public ObservableDropTrigger()
		{
		}
	}
	[Token(Token = "0x200017E")]
	[DisallowMultipleComponent]
	public class ObservableEnableTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> onEnable;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onDisable;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2B88F28", Offset = "0x2B88F28", VA = "0x2B88F28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x2B89000", Offset = "0x2B89000", VA = "0x2B89000")]
		public IObservable<Unit> OnEnableAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x2B89074", Offset = "0x2B89074", VA = "0x2B89074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x2B8914C", Offset = "0x2B8914C", VA = "0x2B8914C")]
		public IObservable<Unit> OnDisableAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x2B891C0", Offset = "0x2B891C0", VA = "0x2B891C0", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x2B89238", Offset = "0x2B89238", VA = "0x2B89238")]
		public ObservableEnableTrigger()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[DisallowMultipleComponent]
	public class ObservableEndDragTrigger : ObservableTriggerBase, IEventSystemHandler, IEndDragHandler
	{
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onEndDrag;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x2B89240", Offset = "0x2B89240", VA = "0x2B89240", Slot = "5")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x2B892B4", Offset = "0x2B892B4", VA = "0x2B892B4")]
		public IObservable<PointerEventData> OnEndDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x2B89328", Offset = "0x2B89328", VA = "0x2B89328", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x2B89388", Offset = "0x2B89388", VA = "0x2B89388")]
		public ObservableEndDragTrigger()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[DisallowMultipleComponent]
	public class ObservableEventTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IBeginDragHandler, IInitializePotentialDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler, ICancelHandler
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onDeselect;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<AxisEventData> onMove;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<PointerEventData> onPointerDown;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Subject<PointerEventData> onPointerEnter;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Subject<PointerEventData> onPointerExit;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Subject<PointerEventData> onPointerUp;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Subject<BaseEventData> onSelect;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Subject<PointerEventData> onPointerClick;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Subject<BaseEventData> onSubmit;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Subject<PointerEventData> onDrag;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Subject<PointerEventData> onBeginDrag;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Subject<PointerEventData> onEndDrag;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Subject<PointerEventData> onDrop;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Subject<BaseEventData> onUpdateSelected;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Subject<PointerEventData> onInitializePotentialDrag;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Subject<BaseEventData> onCancel;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Subject<PointerEventData> onScroll;

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x2B89390", Offset = "0x2B89390", VA = "0x2B89390", Slot = "18")]
		private void UnityEngine.EventSystems.IDeselectHandler.OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x2B89404", Offset = "0x2B89404", VA = "0x2B89404")]
		public IObservable<BaseEventData> OnDeselectAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x2B89478", Offset = "0x2B89478", VA = "0x2B89478", Slot = "19")]
		private void UnityEngine.EventSystems.IMoveHandler.OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x2B894EC", Offset = "0x2B894EC", VA = "0x2B894EC")]
		public IObservable<AxisEventData> OnMoveAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x2B89560", Offset = "0x2B89560", VA = "0x2B89560", Slot = "7")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x2B895D4", Offset = "0x2B895D4", VA = "0x2B895D4")]
		public IObservable<PointerEventData> OnPointerDownAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x2B89648", Offset = "0x2B89648", VA = "0x2B89648", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x2B896BC", Offset = "0x2B896BC", VA = "0x2B896BC")]
		public IObservable<PointerEventData> OnPointerEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x2B89730", Offset = "0x2B89730", VA = "0x2B89730", Slot = "6")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x2B897A4", Offset = "0x2B897A4", VA = "0x2B897A4")]
		public IObservable<PointerEventData> OnPointerExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x2B89818", Offset = "0x2B89818", VA = "0x2B89818", Slot = "8")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x2B8988C", Offset = "0x2B8988C", VA = "0x2B8988C")]
		public IObservable<PointerEventData> OnPointerUpAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x2B89900", Offset = "0x2B89900", VA = "0x2B89900", Slot = "17")]
		private void UnityEngine.EventSystems.ISelectHandler.OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x2B89974", Offset = "0x2B89974", VA = "0x2B89974")]
		public IObservable<BaseEventData> OnSelectAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x2B899E8", Offset = "0x2B899E8", VA = "0x2B899E8", Slot = "9")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x2B89A5C", Offset = "0x2B89A5C", VA = "0x2B89A5C")]
		public IObservable<PointerEventData> OnPointerClickAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x2B89AD0", Offset = "0x2B89AD0", VA = "0x2B89AD0", Slot = "20")]
		private void UnityEngine.EventSystems.ISubmitHandler.OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x2B89B44", Offset = "0x2B89B44", VA = "0x2B89B44")]
		public IObservable<BaseEventData> OnSubmitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x2B89BB8", Offset = "0x2B89BB8", VA = "0x2B89BB8", Slot = "12")]
		private void UnityEngine.EventSystems.IDragHandler.OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x2B89C2C", Offset = "0x2B89C2C", VA = "0x2B89C2C")]
		public IObservable<PointerEventData> OnDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x2B89CA0", Offset = "0x2B89CA0", VA = "0x2B89CA0", Slot = "10")]
		private void UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x2B89D14", Offset = "0x2B89D14", VA = "0x2B89D14")]
		public IObservable<PointerEventData> OnBeginDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x2B89D88", Offset = "0x2B89D88", VA = "0x2B89D88", Slot = "13")]
		private void UnityEngine.EventSystems.IEndDragHandler.OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x2B89DFC", Offset = "0x2B89DFC", VA = "0x2B89DFC")]
		public IObservable<PointerEventData> OnEndDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x2B89E70", Offset = "0x2B89E70", VA = "0x2B89E70", Slot = "14")]
		private void UnityEngine.EventSystems.IDropHandler.OnDrop(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x2B89EE4", Offset = "0x2B89EE4", VA = "0x2B89EE4")]
		public IObservable<PointerEventData> OnDropAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x2B89F58", Offset = "0x2B89F58", VA = "0x2B89F58", Slot = "16")]
		private void UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x2B89FCC", Offset = "0x2B89FCC", VA = "0x2B89FCC")]
		public IObservable<BaseEventData> OnUpdateSelectedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x2B8A040", Offset = "0x2B8A040", VA = "0x2B8A040", Slot = "11")]
		private void UnityEngine.EventSystems.IInitializePotentialDragHandler.OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x2B8A0B4", Offset = "0x2B8A0B4", VA = "0x2B8A0B4")]
		public IObservable<PointerEventData> OnInitializePotentialDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x2B8A128", Offset = "0x2B8A128", VA = "0x2B8A128", Slot = "21")]
		private void UnityEngine.EventSystems.ICancelHandler.OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x2B8A19C", Offset = "0x2B8A19C", VA = "0x2B8A19C")]
		public IObservable<BaseEventData> OnCancelAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x2B8A210", Offset = "0x2B8A210", VA = "0x2B8A210", Slot = "15")]
		private void UnityEngine.EventSystems.IScrollHandler.OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x2B8A284", Offset = "0x2B8A284", VA = "0x2B8A284")]
		public IObservable<PointerEventData> OnScrollAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x2B8A2F8", Offset = "0x2B8A2F8", VA = "0x2B8A2F8", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x2B8A4D8", Offset = "0x2B8A4D8", VA = "0x2B8A4D8")]
		public ObservableEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[DisallowMultipleComponent]
	public class ObservableFixedUpdateTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> fixedUpdate;

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x2B8A4E0", Offset = "0x2B8A4E0", VA = "0x2B8A4E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x2B8A5B8", Offset = "0x2B8A5B8", VA = "0x2B8A5B8")]
		public IObservable<Unit> FixedUpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x2B8A62C", Offset = "0x2B8A62C", VA = "0x2B8A62C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x2B8A68C", Offset = "0x2B8A68C", VA = "0x2B8A68C")]
		public ObservableFixedUpdateTrigger()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[DisallowMultipleComponent]
	public class ObservableInitializePotentialDragTrigger : ObservableTriggerBase, IEventSystemHandler, IInitializePotentialDragHandler
	{
		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onInitializePotentialDrag;

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x2B8A694", Offset = "0x2B8A694", VA = "0x2B8A694", Slot = "5")]
		private void UnityEngine.EventSystems.IInitializePotentialDragHandler.OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x2B8A708", Offset = "0x2B8A708", VA = "0x2B8A708")]
		public IObservable<PointerEventData> OnInitializePotentialDragAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x2B8A77C", Offset = "0x2B8A77C", VA = "0x2B8A77C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x2B8A7DC", Offset = "0x2B8A7DC", VA = "0x2B8A7DC")]
		public ObservableInitializePotentialDragTrigger()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[DisallowMultipleComponent]
	public class ObservableLateUpdateTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> lateUpdate;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x2B8A7E4", Offset = "0x2B8A7E4", VA = "0x2B8A7E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x2B8A8BC", Offset = "0x2B8A8BC", VA = "0x2B8A8BC")]
		public IObservable<Unit> LateUpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x2B8A930", Offset = "0x2B8A930", VA = "0x2B8A930", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x2B8A990", Offset = "0x2B8A990", VA = "0x2B8A990")]
		public ObservableLateUpdateTrigger()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[DisallowMultipleComponent]
	public class ObservableMoveTrigger : ObservableTriggerBase, IEventSystemHandler, IMoveHandler
	{
		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<AxisEventData> onMove;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x2B8A998", Offset = "0x2B8A998", VA = "0x2B8A998", Slot = "5")]
		private void UnityEngine.EventSystems.IMoveHandler.OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x2B8AA0C", Offset = "0x2B8AA0C", VA = "0x2B8AA0C")]
		public IObservable<AxisEventData> OnMoveAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x2B8AA80", Offset = "0x2B8AA80", VA = "0x2B8AA80", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x2B8AAE0", Offset = "0x2B8AAE0", VA = "0x2B8AAE0")]
		public ObservableMoveTrigger()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[DisallowMultipleComponent]
	public class ObservableParticleTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<GameObject> onParticleCollision;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onParticleTrigger;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x2B8AAE8", Offset = "0x2B8AAE8", VA = "0x2B8AAE8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x2B8AB5C", Offset = "0x2B8AB5C", VA = "0x2B8AB5C")]
		public IObservable<GameObject> OnParticleCollisionAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x2B8ABD0", Offset = "0x2B8ABD0", VA = "0x2B8ABD0")]
		private void OnParticleTrigger()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x2B8ACA8", Offset = "0x2B8ACA8", VA = "0x2B8ACA8")]
		public IObservable<Unit> OnParticleTriggerAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x2B8AD1C", Offset = "0x2B8AD1C", VA = "0x2B8AD1C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x2B8AD94", Offset = "0x2B8AD94", VA = "0x2B8AD94")]
		public ObservableParticleTrigger()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[DisallowMultipleComponent]
	public class ObservablePointerClickTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerClickHandler
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onPointerClick;

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x2B8AD9C", Offset = "0x2B8AD9C", VA = "0x2B8AD9C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x2B8AE10", Offset = "0x2B8AE10", VA = "0x2B8AE10")]
		public IObservable<PointerEventData> OnPointerClickAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x2B8AE84", Offset = "0x2B8AE84", VA = "0x2B8AE84", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x2B8AEE4", Offset = "0x2B8AEE4", VA = "0x2B8AEE4")]
		public ObservablePointerClickTrigger()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[DisallowMultipleComponent]
	public class ObservablePointerDownTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerDownHandler
	{
		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onPointerDown;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x2B8AEEC", Offset = "0x2B8AEEC", VA = "0x2B8AEEC", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x2B8AF60", Offset = "0x2B8AF60", VA = "0x2B8AF60")]
		public IObservable<PointerEventData> OnPointerDownAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x2B8AFD4", Offset = "0x2B8AFD4", VA = "0x2B8AFD4", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x2B8B034", Offset = "0x2B8B034", VA = "0x2B8B034")]
		public ObservablePointerDownTrigger()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[DisallowMultipleComponent]
	public class ObservablePointerEnterTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerEnterHandler
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onPointerEnter;

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x2B8B03C", Offset = "0x2B8B03C", VA = "0x2B8B03C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x2B8B0B0", Offset = "0x2B8B0B0", VA = "0x2B8B0B0")]
		public IObservable<PointerEventData> OnPointerEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x2B8B124", Offset = "0x2B8B124", VA = "0x2B8B124", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x2B8B184", Offset = "0x2B8B184", VA = "0x2B8B184")]
		public ObservablePointerEnterTrigger()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[DisallowMultipleComponent]
	public class ObservablePointerExitTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onPointerExit;

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x2B8B18C", Offset = "0x2B8B18C", VA = "0x2B8B18C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x2B8B200", Offset = "0x2B8B200", VA = "0x2B8B200")]
		public IObservable<PointerEventData> OnPointerExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x2B8B274", Offset = "0x2B8B274", VA = "0x2B8B274", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x2B8B2D4", Offset = "0x2B8B2D4", VA = "0x2B8B2D4")]
		public ObservablePointerExitTrigger()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[DisallowMultipleComponent]
	public class ObservablePointerUpTrigger : ObservableTriggerBase, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onPointerUp;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x2B8B2DC", Offset = "0x2B8B2DC", VA = "0x2B8B2DC", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x2B8B350", Offset = "0x2B8B350", VA = "0x2B8B350")]
		public IObservable<PointerEventData> OnPointerUpAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x2B8B3C4", Offset = "0x2B8B3C4", VA = "0x2B8B3C4", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x2B8B424", Offset = "0x2B8B424", VA = "0x2B8B424")]
		public ObservablePointerUpTrigger()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[DisallowMultipleComponent]
	public class ObservableRectTransformTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> onRectTransformDimensionsChange;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onRectTransformRemoved;

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x2B8B42C", Offset = "0x2B8B42C", VA = "0x2B8B42C")]
		public void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x2B8B504", Offset = "0x2B8B504", VA = "0x2B8B504")]
		public IObservable<Unit> OnRectTransformDimensionsChangeAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x2B8B578", Offset = "0x2B8B578", VA = "0x2B8B578")]
		public void OnRectTransformRemoved()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x2B8B650", Offset = "0x2B8B650", VA = "0x2B8B650")]
		public IObservable<Unit> OnRectTransformRemovedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x2B8B6C4", Offset = "0x2B8B6C4", VA = "0x2B8B6C4", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x2B8B73C", Offset = "0x2B8B73C", VA = "0x2B8B73C")]
		public ObservableRectTransformTrigger()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[DisallowMultipleComponent]
	public class ObservableScrollTrigger : ObservableTriggerBase, IEventSystemHandler, IScrollHandler
	{
		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<PointerEventData> onScroll;

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x2B8B744", Offset = "0x2B8B744", VA = "0x2B8B744", Slot = "5")]
		private void UnityEngine.EventSystems.IScrollHandler.OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x2B8B7B8", Offset = "0x2B8B7B8", VA = "0x2B8B7B8")]
		public IObservable<PointerEventData> OnScrollAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x2B8B82C", Offset = "0x2B8B82C", VA = "0x2B8B82C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x2B8B88C", Offset = "0x2B8B88C", VA = "0x2B8B88C")]
		public ObservableScrollTrigger()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[DisallowMultipleComponent]
	public class ObservableSelectTrigger : ObservableTriggerBase, IEventSystemHandler, ISelectHandler
	{
		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onSelect;

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x2B8B894", Offset = "0x2B8B894", VA = "0x2B8B894", Slot = "5")]
		private void UnityEngine.EventSystems.ISelectHandler.OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x2B8B908", Offset = "0x2B8B908", VA = "0x2B8B908")]
		public IObservable<BaseEventData> OnSelectAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x2B8B97C", Offset = "0x2B8B97C", VA = "0x2B8B97C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x2B8B9DC", Offset = "0x2B8B9DC", VA = "0x2B8B9DC")]
		public ObservableSelectTrigger()
		{
		}
	}
	[Token(Token = "0x200018E")]
	[DisallowMultipleComponent]
	public class ObservableStateMachineTrigger : StateMachineBehaviour
	{
		[Token(Token = "0x200045B")]
		public class OnStateInfo
		{
			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B19F8", Offset = "0x12B19F8")]
			private Animator <Animator>k__BackingField;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1A08", Offset = "0x12B1A08")]
			private AnimatorStateInfo <StateInfo>k__BackingField;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1A18", Offset = "0x12B1A18")]
			private int <LayerIndex>k__BackingField;

			[Token(Token = "0x170002F5")]
			public Animator Animator
			{
				[Token(Token = "0x6001A65")]
				[Address(RVA = "0x2B8C1E0", Offset = "0x2B8C1E0", VA = "0x2B8C1E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDA4", Offset = "0x12BDDA4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A66")]
				[Address(RVA = "0x2B8C1E8", Offset = "0x2B8C1E8", VA = "0x2B8C1E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDB4", Offset = "0x12BDDB4")]
				private set
				{
				}
			}

			[Token(Token = "0x170002F6")]
			public AnimatorStateInfo StateInfo
			{
				[Token(Token = "0x6001A67")]
				[Address(RVA = "0x2B8C1F0", Offset = "0x2B8C1F0", VA = "0x2B8C1F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDC4", Offset = "0x12BDDC4")]
				get
				{
					return default(AnimatorStateInfo);
				}
				[Token(Token = "0x6001A68")]
				[Address(RVA = "0x2B8C208", Offset = "0x2B8C208", VA = "0x2B8C208")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDD4", Offset = "0x12BDDD4")]
				private set
				{
				}
			}

			[Token(Token = "0x170002F7")]
			public int LayerIndex
			{
				[Token(Token = "0x6001A69")]
				[Address(RVA = "0x2B8C220", Offset = "0x2B8C220", VA = "0x2B8C220")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDE4", Offset = "0x12BDDE4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001A6A")]
				[Address(RVA = "0x2B8C228", Offset = "0x2B8C228", VA = "0x2B8C228")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDDF4", Offset = "0x12BDDF4")]
				private set
				{
				}
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x2B8BAC0", Offset = "0x2B8BAC0", VA = "0x2B8BAC0")]
			public OnStateInfo(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
			{
			}
		}

		[Token(Token = "0x200045C")]
		public class OnStateMachineInfo
		{
			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1A28", Offset = "0x12B1A28")]
			private Animator <Animator>k__BackingField;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1A38", Offset = "0x12B1A38")]
			private int <StateMachinePathHash>k__BackingField;

			[Token(Token = "0x170002F8")]
			public Animator Animator
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0x2B8C230", Offset = "0x2B8C230", VA = "0x2B8C230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDE04", Offset = "0x12BDE04")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A6D")]
				[Address(RVA = "0x2B8C238", Offset = "0x2B8C238", VA = "0x2B8C238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDE14", Offset = "0x12BDE14")]
				private set
				{
				}
			}

			[Token(Token = "0x170002F9")]
			public int StateMachinePathHash
			{
				[Token(Token = "0x6001A6E")]
				[Address(RVA = "0x2B8C240", Offset = "0x2B8C240", VA = "0x2B8C240")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDE24", Offset = "0x12BDE24")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001A6F")]
				[Address(RVA = "0x2B8C248", Offset = "0x2B8C248", VA = "0x2B8C248")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDE34", Offset = "0x12BDE34")]
				private set
				{
				}
			}

			[Token(Token = "0x6001A70")]
			[Address(RVA = "0x2B8C014", Offset = "0x2B8C014", VA = "0x2B8C014")]
			public OnStateMachineInfo(Animator animator, int stateMachinePathHash)
			{
			}
		}

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Subject<OnStateInfo> onStateExit;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Subject<OnStateInfo> onStateEnter;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Subject<OnStateInfo> onStateIK;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subject<OnStateInfo> onStateUpdate;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Subject<OnStateMachineInfo> onStateMachineEnter;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subject<OnStateMachineInfo> onStateMachineExit;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x2B8B9E4", Offset = "0x2B8B9E4", VA = "0x2B8B9E4", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x2B8BB10", Offset = "0x2B8BB10", VA = "0x2B8BB10")]
		public IObservable<OnStateInfo> OnStateExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x2B8BB84", Offset = "0x2B8BB84", VA = "0x2B8BB84", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x2B8BC60", Offset = "0x2B8BC60", VA = "0x2B8BC60")]
		public IObservable<OnStateInfo> OnStateEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x2B8BCD4", Offset = "0x2B8BCD4", VA = "0x2B8BCD4", Slot = "8")]
		public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x2B8BDB0", Offset = "0x2B8BDB0", VA = "0x2B8BDB0")]
		public IObservable<OnStateInfo> OnStateIKAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x2B8BE24", Offset = "0x2B8BE24", VA = "0x2B8BE24", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x2B8BF00", Offset = "0x2B8BF00", VA = "0x2B8BF00")]
		public IObservable<OnStateInfo> OnStateUpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x2B8BF74", Offset = "0x2B8BF74", VA = "0x2B8BF74", Slot = "9")]
		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x2B8C050", Offset = "0x2B8C050", VA = "0x2B8C050")]
		public IObservable<OnStateMachineInfo> OnStateMachineEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x2B8C0C4", Offset = "0x2B8C0C4", VA = "0x2B8C0C4", Slot = "10")]
		public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x2B8C164", Offset = "0x2B8C164", VA = "0x2B8C164")]
		public IObservable<OnStateMachineInfo> OnStateMachineExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x2B8C1D8", Offset = "0x2B8C1D8", VA = "0x2B8C1D8")]
		public ObservableStateMachineTrigger()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[DisallowMultipleComponent]
	public class ObservableSubmitTrigger : ObservableTriggerBase, IEventSystemHandler, ISubmitHandler
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onSubmit;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x2B8C250", Offset = "0x2B8C250", VA = "0x2B8C250", Slot = "5")]
		private void UnityEngine.EventSystems.ISubmitHandler.OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x2B8C2C4", Offset = "0x2B8C2C4", VA = "0x2B8C2C4")]
		public IObservable<BaseEventData> OnSubmitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x2B8C338", Offset = "0x2B8C338", VA = "0x2B8C338", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x2B8C398", Offset = "0x2B8C398", VA = "0x2B8C398")]
		public ObservableSubmitTrigger()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[DisallowMultipleComponent]
	public class ObservableTransformChangedTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> onBeforeTransformParentChanged;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onTransformParentChanged;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<Unit> onTransformChildrenChanged;

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x2B8C3A0", Offset = "0x2B8C3A0", VA = "0x2B8C3A0")]
		private void OnBeforeTransformParentChanged()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x2B8C478", Offset = "0x2B8C478", VA = "0x2B8C478")]
		public IObservable<Unit> OnBeforeTransformParentChangedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x2B8C4EC", Offset = "0x2B8C4EC", VA = "0x2B8C4EC")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x2B8C5C4", Offset = "0x2B8C5C4", VA = "0x2B8C5C4")]
		public IObservable<Unit> OnTransformParentChangedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x2B8C638", Offset = "0x2B8C638", VA = "0x2B8C638")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x2B8C710", Offset = "0x2B8C710", VA = "0x2B8C710")]
		public IObservable<Unit> OnTransformChildrenChangedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x2B8C784", Offset = "0x2B8C784", VA = "0x2B8C784", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x2B8C814", Offset = "0x2B8C814", VA = "0x2B8C814")]
		public ObservableTransformChangedTrigger()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[DisallowMultipleComponent]
	public class ObservableTrigger2DTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Collider2D> onTriggerEnter2D;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Collider2D> onTriggerExit2D;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<Collider2D> onTriggerStay2D;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x2B8C81C", Offset = "0x2B8C81C", VA = "0x2B8C81C")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x2B8C890", Offset = "0x2B8C890", VA = "0x2B8C890")]
		public IObservable<Collider2D> OnTriggerEnter2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x2B8C904", Offset = "0x2B8C904", VA = "0x2B8C904")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x2B8C978", Offset = "0x2B8C978", VA = "0x2B8C978")]
		public IObservable<Collider2D> OnTriggerExit2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x2B8C9EC", Offset = "0x2B8C9EC", VA = "0x2B8C9EC")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x2B8CA60", Offset = "0x2B8CA60", VA = "0x2B8CA60")]
		public IObservable<Collider2D> OnTriggerStay2DAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x2B8CAD4", Offset = "0x2B8CAD4", VA = "0x2B8CAD4", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x2B8CB64", Offset = "0x2B8CB64", VA = "0x2B8CB64")]
		public ObservableTrigger2DTrigger()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public abstract class ObservableTriggerBase : MonoBehaviour
	{
		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool calledAwake;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Subject<Unit> awake;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool calledStart;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subject<Unit> start;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool calledDestroy;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Subject<Unit> onDestroy;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x2B8CB6C", Offset = "0x2B8CB6C", VA = "0x2B8CB6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x2B8CC68", Offset = "0x2B8CC68", VA = "0x2B8CC68")]
		public IObservable<Unit> AwakeAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x2B8CDB4", Offset = "0x2B8CDB4", VA = "0x2B8CDB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x2B8CEB0", Offset = "0x2B8CEB0", VA = "0x2B8CEB0")]
		public IObservable<Unit> StartAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x2B8CFFC", Offset = "0x2B8CFFC", VA = "0x2B8CFFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x2B8D0F8", Offset = "0x2B8D0F8", VA = "0x2B8D0F8")]
		public IObservable<Unit> OnDestroyAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		protected abstract void RaiseOnCompletedOnDestroy();

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x2B87C58", Offset = "0x2B87C58", VA = "0x2B87C58")]
		protected ObservableTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public static class ObservableTriggerExtensions
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x2B8D278", Offset = "0x2B8D278", VA = "0x2B8D278")]
		public static IObservable<int> OnAnimatorIKAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x2B8D38C", Offset = "0x2B8D38C", VA = "0x2B8D38C")]
		public static IObservable<Unit> OnAnimatorMoveAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x2B8D4A0", Offset = "0x2B8D4A0", VA = "0x2B8D4A0")]
		public static IObservable<Collision2D> OnCollisionEnter2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x2B8D5B4", Offset = "0x2B8D5B4", VA = "0x2B8D5B4")]
		public static IObservable<Collision2D> OnCollisionExit2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x2B8D6C8", Offset = "0x2B8D6C8", VA = "0x2B8D6C8")]
		public static IObservable<Collision2D> OnCollisionStay2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x2B8D7DC", Offset = "0x2B8D7DC", VA = "0x2B8D7DC")]
		public static IObservable<Collision> OnCollisionEnterAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x2B8D8F0", Offset = "0x2B8D8F0", VA = "0x2B8D8F0")]
		public static IObservable<Collision> OnCollisionExitAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x2B8DA04", Offset = "0x2B8DA04", VA = "0x2B8DA04")]
		public static IObservable<Collision> OnCollisionStayAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x2B8DB18", Offset = "0x2B8DB18", VA = "0x2B8DB18")]
		public static IObservable<Unit> OnDestroyAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x2B8DCCC", Offset = "0x2B8DCCC", VA = "0x2B8DCCC")]
		public static IObservable<Unit> OnEnableAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x2B8DDE0", Offset = "0x2B8DDE0", VA = "0x2B8DDE0")]
		public static IObservable<Unit> OnDisableAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x2B8DEF4", Offset = "0x2B8DEF4", VA = "0x2B8DEF4")]
		public static IObservable<Unit> FixedUpdateAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x2B8E008", Offset = "0x2B8E008", VA = "0x2B8E008")]
		public static IObservable<Unit> LateUpdateAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x2B8E11C", Offset = "0x2B8E11C", VA = "0x2B8E11C")]
		public static IObservable<Collider2D> OnTriggerEnter2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x2B8E230", Offset = "0x2B8E230", VA = "0x2B8E230")]
		public static IObservable<Collider2D> OnTriggerExit2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x2B8E344", Offset = "0x2B8E344", VA = "0x2B8E344")]
		public static IObservable<Collider2D> OnTriggerStay2DAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x2B8E458", Offset = "0x2B8E458", VA = "0x2B8E458")]
		public static IObservable<Collider> OnTriggerEnterAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x2B8E5E0", Offset = "0x2B8E5E0", VA = "0x2B8E5E0")]
		public static IObservable<Collider> OnTriggerExitAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x2B8E768", Offset = "0x2B8E768", VA = "0x2B8E768")]
		public static IObservable<Collider> OnTriggerStayAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x2B8E8F0", Offset = "0x2B8E8F0", VA = "0x2B8E8F0")]
		public static IObservable<Unit> UpdateAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x2B8EA78", Offset = "0x2B8EA78", VA = "0x2B8EA78")]
		public static IObservable<Unit> OnBecameInvisibleAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x2B8EC00", Offset = "0x2B8EC00", VA = "0x2B8EC00")]
		public static IObservable<Unit> OnBecameVisibleAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x2B8ED88", Offset = "0x2B8ED88", VA = "0x2B8ED88")]
		public static IObservable<Unit> OnBeforeTransformParentChangedAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x2B8EE9C", Offset = "0x2B8EE9C", VA = "0x2B8EE9C")]
		public static IObservable<Unit> OnTransformParentChangedAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x2B8EFB0", Offset = "0x2B8EFB0", VA = "0x2B8EFB0")]
		public static IObservable<Unit> OnTransformChildrenChangedAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x2B8F0C4", Offset = "0x2B8F0C4", VA = "0x2B8F0C4")]
		public static IObservable<Unit> OnCanvasGroupChangedAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x2B8F1D8", Offset = "0x2B8F1D8", VA = "0x2B8F1D8")]
		public static IObservable<Unit> OnRectTransformDimensionsChangeAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x2B8F2EC", Offset = "0x2B8F2EC", VA = "0x2B8F2EC")]
		public static IObservable<Unit> OnRectTransformRemovedAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x2B8F400", Offset = "0x2B8F400", VA = "0x2B8F400")]
		public static IObservable<BaseEventData> OnDeselectAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x2B8F514", Offset = "0x2B8F514", VA = "0x2B8F514")]
		public static IObservable<AxisEventData> OnMoveAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x2B8F628", Offset = "0x2B8F628", VA = "0x2B8F628")]
		public static IObservable<PointerEventData> OnPointerDownAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x2B8F73C", Offset = "0x2B8F73C", VA = "0x2B8F73C")]
		public static IObservable<PointerEventData> OnPointerEnterAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x2B8F850", Offset = "0x2B8F850", VA = "0x2B8F850")]
		public static IObservable<PointerEventData> OnPointerExitAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x2B8F964", Offset = "0x2B8F964", VA = "0x2B8F964")]
		public static IObservable<PointerEventData> OnPointerUpAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x2B8FA78", Offset = "0x2B8FA78", VA = "0x2B8FA78")]
		public static IObservable<BaseEventData> OnSelectAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x2B8FB8C", Offset = "0x2B8FB8C", VA = "0x2B8FB8C")]
		public static IObservable<PointerEventData> OnPointerClickAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x2B8FCA0", Offset = "0x2B8FCA0", VA = "0x2B8FCA0")]
		public static IObservable<BaseEventData> OnSubmitAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x2B8FDB4", Offset = "0x2B8FDB4", VA = "0x2B8FDB4")]
		public static IObservable<PointerEventData> OnDragAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x2B8FEC8", Offset = "0x2B8FEC8", VA = "0x2B8FEC8")]
		public static IObservable<PointerEventData> OnBeginDragAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x2B8FFDC", Offset = "0x2B8FFDC", VA = "0x2B8FFDC")]
		public static IObservable<PointerEventData> OnEndDragAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x2B900F0", Offset = "0x2B900F0", VA = "0x2B900F0")]
		public static IObservable<PointerEventData> OnDropAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x2B90204", Offset = "0x2B90204", VA = "0x2B90204")]
		public static IObservable<BaseEventData> OnUpdateSelectedAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x2B9038C", Offset = "0x2B9038C", VA = "0x2B9038C")]
		public static IObservable<PointerEventData> OnInitializePotentialDragAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x2B904A0", Offset = "0x2B904A0", VA = "0x2B904A0")]
		public static IObservable<BaseEventData> OnCancelAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x2B905B4", Offset = "0x2B905B4", VA = "0x2B905B4")]
		public static IObservable<PointerEventData> OnScrollAsObservable(this UIBehaviour component)
		{
			return null;
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x2B906C8", Offset = "0x2B906C8", VA = "0x2B906C8")]
		public static IObservable<GameObject> OnParticleCollisionAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x2B907DC", Offset = "0x2B907DC", VA = "0x2B907DC")]
		public static IObservable<Unit> OnParticleTriggerAsObservable(this Component component)
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x2B908F0", Offset = "0x2B908F0", VA = "0x2B908F0")]
		public static IObservable<int> OnAnimatorIKAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x2B909B8", Offset = "0x2B909B8", VA = "0x2B909B8")]
		public static IObservable<Unit> OnAnimatorMoveAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x2B90A80", Offset = "0x2B90A80", VA = "0x2B90A80")]
		public static IObservable<Collision2D> OnCollisionEnter2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x2B90B48", Offset = "0x2B90B48", VA = "0x2B90B48")]
		public static IObservable<Collision2D> OnCollisionExit2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x2B90C10", Offset = "0x2B90C10", VA = "0x2B90C10")]
		public static IObservable<Collision2D> OnCollisionStay2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x2B90CD8", Offset = "0x2B90CD8", VA = "0x2B90CD8")]
		public static IObservable<Collision> OnCollisionEnterAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x2B90DA0", Offset = "0x2B90DA0", VA = "0x2B90DA0")]
		public static IObservable<Collision> OnCollisionExitAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x2B90E68", Offset = "0x2B90E68", VA = "0x2B90E68")]
		public static IObservable<Collision> OnCollisionStayAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x2B90F30", Offset = "0x2B90F30", VA = "0x2B90F30")]
		public static IObservable<Unit> OnDestroyAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x2B91098", Offset = "0x2B91098", VA = "0x2B91098")]
		public static IObservable<Unit> OnEnableAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x2B91160", Offset = "0x2B91160", VA = "0x2B91160")]
		public static IObservable<Unit> OnDisableAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x2B91228", Offset = "0x2B91228", VA = "0x2B91228")]
		public static IObservable<Unit> FixedUpdateAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x2B912F0", Offset = "0x2B912F0", VA = "0x2B912F0")]
		public static IObservable<Unit> LateUpdateAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x2B913B8", Offset = "0x2B913B8", VA = "0x2B913B8")]
		public static IObservable<Collider2D> OnTriggerEnter2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x2B91480", Offset = "0x2B91480", VA = "0x2B91480")]
		public static IObservable<Collider2D> OnTriggerExit2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x2B91548", Offset = "0x2B91548", VA = "0x2B91548")]
		public static IObservable<Collider2D> OnTriggerStay2DAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x2B91610", Offset = "0x2B91610", VA = "0x2B91610")]
		public static IObservable<Collider> OnTriggerEnterAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x2B916D8", Offset = "0x2B916D8", VA = "0x2B916D8")]
		public static IObservable<Collider> OnTriggerExitAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x2B917A0", Offset = "0x2B917A0", VA = "0x2B917A0")]
		public static IObservable<Collider> OnTriggerStayAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x2B91868", Offset = "0x2B91868", VA = "0x2B91868")]
		public static IObservable<Unit> UpdateAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x2B91930", Offset = "0x2B91930", VA = "0x2B91930")]
		public static IObservable<Unit> OnBecameInvisibleAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x2B919F8", Offset = "0x2B919F8", VA = "0x2B919F8")]
		public static IObservable<Unit> OnBecameVisibleAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x2B91AC0", Offset = "0x2B91AC0", VA = "0x2B91AC0")]
		public static IObservable<Unit> OnBeforeTransformParentChangedAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x2B91B88", Offset = "0x2B91B88", VA = "0x2B91B88")]
		public static IObservable<Unit> OnTransformParentChangedAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x2B91C50", Offset = "0x2B91C50", VA = "0x2B91C50")]
		public static IObservable<Unit> OnTransformChildrenChangedAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x2B91D18", Offset = "0x2B91D18", VA = "0x2B91D18")]
		public static IObservable<Unit> OnCanvasGroupChangedAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x2B91DE0", Offset = "0x2B91DE0", VA = "0x2B91DE0")]
		public static IObservable<Unit> OnRectTransformDimensionsChangeAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x2B91EA8", Offset = "0x2B91EA8", VA = "0x2B91EA8")]
		public static IObservable<Unit> OnRectTransformRemovedAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x2B91F70", Offset = "0x2B91F70", VA = "0x2B91F70")]
		public static IObservable<GameObject> OnParticleCollisionAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x2B92038", Offset = "0x2B92038", VA = "0x2B92038")]
		public static IObservable<Unit> OnParticleTriggerAsObservable(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C1D")]
		private static T GetOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000194")]
	[DisallowMultipleComponent]
	public class ObservableTriggerTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Collider> onTriggerEnter;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Collider> onTriggerExit;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Subject<Collider> onTriggerStay;

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x2B92100", Offset = "0x2B92100", VA = "0x2B92100")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x2B8E56C", Offset = "0x2B8E56C", VA = "0x2B8E56C")]
		public IObservable<Collider> OnTriggerEnterAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x2B92174", Offset = "0x2B92174", VA = "0x2B92174")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x2B8E6F4", Offset = "0x2B8E6F4", VA = "0x2B8E6F4")]
		public IObservable<Collider> OnTriggerExitAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x2B921E8", Offset = "0x2B921E8", VA = "0x2B921E8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x2B8E87C", Offset = "0x2B8E87C", VA = "0x2B8E87C")]
		public IObservable<Collider> OnTriggerStayAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x2B9225C", Offset = "0x2B9225C", VA = "0x2B9225C", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x2B922EC", Offset = "0x2B922EC", VA = "0x2B922EC")]
		public ObservableTriggerTrigger()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[DisallowMultipleComponent]
	public class ObservableUpdateSelectedTrigger : ObservableTriggerBase, IEventSystemHandler, IUpdateSelectedHandler
	{
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<BaseEventData> onUpdateSelected;

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x2B922F4", Offset = "0x2B922F4", VA = "0x2B922F4", Slot = "5")]
		private void UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x2B90318", Offset = "0x2B90318", VA = "0x2B90318")]
		public IObservable<BaseEventData> OnUpdateSelectedAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x2B92368", Offset = "0x2B92368", VA = "0x2B92368", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x2B923C8", Offset = "0x2B923C8", VA = "0x2B923C8")]
		public ObservableUpdateSelectedTrigger()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[DisallowMultipleComponent]
	public class ObservableUpdateTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> update;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x2B923D0", Offset = "0x2B923D0", VA = "0x2B923D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x2B8EA04", Offset = "0x2B8EA04", VA = "0x2B8EA04")]
		public IObservable<Unit> UpdateAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x2B924A8", Offset = "0x2B924A8", VA = "0x2B924A8", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x2B92508", Offset = "0x2B92508", VA = "0x2B92508")]
		public ObservableUpdateTrigger()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[DisallowMultipleComponent]
	public class ObservableVisibleTrigger : ObservableTriggerBase
	{
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Subject<Unit> onBecameInvisible;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Subject<Unit> onBecameVisible;

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x2B92510", Offset = "0x2B92510", VA = "0x2B92510")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x2B8EB8C", Offset = "0x2B8EB8C", VA = "0x2B8EB8C")]
		public IObservable<Unit> OnBecameInvisibleAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x2B925E8", Offset = "0x2B925E8", VA = "0x2B925E8")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x2B8ED14", Offset = "0x2B8ED14", VA = "0x2B8ED14")]
		public IObservable<Unit> OnBecameVisibleAsObservable()
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x2B926C0", Offset = "0x2B926C0", VA = "0x2B926C0", Slot = "4")]
		protected override void RaiseOnCompletedOnDestroy()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x2B92738", Offset = "0x2B92738", VA = "0x2B92738")]
		public ObservableVisibleTrigger()
		{
		}
	}
}
namespace UniRx.Toolkit
{
	[Token(Token = "0x2000198")]
	public abstract class ObjectPool<T> : IDisposable where T : Component
	{
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB500", Offset = "0x12AB500")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjectPool<T> <>4__this;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float instanceCountRatio;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int minSize;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool callOnBeforeRent;

			[Token(Token = "0x6001A71")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001A72")]
			internal bool <StartShrinkTimer>b__0(long _)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A73")]
			internal void <StartShrinkTimer>b__1(long _)
			{
			}
		}

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB510", Offset = "0x12AB510")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjectPool<T> <>4__this;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int preloadCount;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int threshold;

			[Token(Token = "0x6001A74")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001A75")]
			internal IEnumerator <PreloadAsync>b__0(IObserver<Unit> observer, CancellationToken cancel)
			{
				return null;
			}
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB520", Offset = "0x12AB520")]
		private sealed class <PreloadCore>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int preloadCount;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ObjectPool<T> <>4__this;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int threshold;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x170002FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A79")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A76")]
			[DebuggerHidden]
			public <PreloadCore>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001A77")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A78")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool disposedValue;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> q;

		[Token(Token = "0x1700018B")]
		protected int MaxPoolCount
		{
			[Token(Token = "0x6000C34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018C")]
		public int Count
		{
			[Token(Token = "0x6000C39")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C35")]
		protected abstract T CreateInstance();

		[Token(Token = "0x6000C36")]
		protected virtual void OnBeforeRent(T instance)
		{
		}

		[Token(Token = "0x6000C37")]
		protected virtual void OnBeforeReturn(T instance)
		{
		}

		[Token(Token = "0x6000C38")]
		protected virtual void OnClear(T instance)
		{
		}

		[Token(Token = "0x6000C3A")]
		public T Rent()
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		public void Return(T instance)
		{
		}

		[Token(Token = "0x6000C3C")]
		public void Clear(bool callOnBeforeRent = false)
		{
		}

		[Token(Token = "0x6000C3D")]
		public void Shrink(float instanceCountRatio, int minSize, bool callOnBeforeRent = false)
		{
		}

		[Token(Token = "0x6000C3E")]
		public IDisposable StartShrinkTimer(TimeSpan checkInterval, float instanceCountRatio, int minSize, bool callOnBeforeRent = false)
		{
			return null;
		}

		[Token(Token = "0x6000C3F")]
		public IObservable<Unit> PreloadAsync(int preloadCount, int threshold)
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B8E00", Offset = "0x12B8E00")]
		private IEnumerator PreloadCore(int preloadCount, int threshold, IObserver<Unit> observer, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000C41")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000C42")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000C43")]
		protected ObjectPool()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public abstract class AsyncObjectPool<T> : IDisposable where T : Component
	{
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB530", Offset = "0x12AB530")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncObjectPool<T> <>4__this;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float instanceCountRatio;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int minSize;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool callOnBeforeRent;

			[Token(Token = "0x6001A7C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001A7D")]
			internal bool <StartShrinkTimer>b__0(long _)
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7E")]
			internal void <StartShrinkTimer>b__1(long _)
			{
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB540", Offset = "0x12AB540")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncObjectPool<T> <>4__this;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int preloadCount;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int threshold;

			[Token(Token = "0x6001A7F")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001A80")]
			internal IEnumerator <PreloadAsync>b__0(IObserver<Unit> observer, CancellationToken cancel)
			{
				return null;
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB550", Offset = "0x12AB550")]
		private sealed class <PreloadCore>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int preloadCount;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncObjectPool<T> <>4__this;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int threshold;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<Unit> observer;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ObservableYieldInstruction<Unit> <awaiter>5__2;

			[Token(Token = "0x170002FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A84")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A86")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A81")]
			[DebuggerHidden]
			public <PreloadCore>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001A82")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A83")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A85")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool disposedValue;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> q;

		[Token(Token = "0x1700018D")]
		protected int MaxPoolCount
		{
			[Token(Token = "0x6000C44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public int Count
		{
			[Token(Token = "0x6000C49")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C45")]
		protected abstract IObservable<T> CreateInstanceAsync();

		[Token(Token = "0x6000C46")]
		protected virtual void OnBeforeRent(T instance)
		{
		}

		[Token(Token = "0x6000C47")]
		protected virtual void OnBeforeReturn(T instance)
		{
		}

		[Token(Token = "0x6000C48")]
		protected virtual void OnClear(T instance)
		{
		}

		[Token(Token = "0x6000C4A")]
		public IObservable<T> RentAsync()
		{
			return null;
		}

		[Token(Token = "0x6000C4B")]
		public void Return(T instance)
		{
		}

		[Token(Token = "0x6000C4C")]
		public void Shrink(float instanceCountRatio, int minSize, bool callOnBeforeRent = false)
		{
		}

		[Token(Token = "0x6000C4D")]
		public IDisposable StartShrinkTimer(TimeSpan checkInterval, float instanceCountRatio, int minSize, bool callOnBeforeRent = false)
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		public void Clear(bool callOnBeforeRent = false)
		{
		}

		[Token(Token = "0x6000C4F")]
		public IObservable<Unit> PreloadAsync(int preloadCount, int threshold)
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B8E64", Offset = "0x12B8E64")]
		private IEnumerator PreloadCore(int preloadCount, int threshold, IObserver<Unit> observer, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000C52")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000C53")]
		protected AsyncObjectPool()
		{
		}

		[Token(Token = "0x6000C54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8EC8", Offset = "0x12B8EC8")]
		private void <RentAsync>b__10_0(T x)
		{
		}

		[Token(Token = "0x6000C55")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8ED8", Offset = "0x12B8ED8")]
		private void <PreloadCore>b__16_0(T x)
		{
		}
	}
}
namespace UniRx.Diagnostics
{
	[Token(Token = "0x200019A")]
	public struct LogEntry
	{
		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC818", Offset = "0x12AC818")]
		private string <LoggerName>k__BackingField;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC828", Offset = "0x12AC828")]
		private LogType <LogType>k__BackingField;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC838", Offset = "0x12AC838")]
		private string <Message>k__BackingField;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC848", Offset = "0x12AC848")]
		private DateTime <Timestamp>k__BackingField;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC858", Offset = "0x12AC858")]
		private UnityEngine.Object <Context>k__BackingField;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC868", Offset = "0x12AC868")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC878", Offset = "0x12AC878")]
		private string <StackTrace>k__BackingField;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC888", Offset = "0x12AC888")]
		private object <State>k__BackingField;

		[Token(Token = "0x1700018F")]
		public string LoggerName
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x140D07C", Offset = "0x140D07C", VA = "0x140D07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8EE8", Offset = "0x12B8EE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x140D084", Offset = "0x140D084", VA = "0x140D084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8EF8", Offset = "0x12B8EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public LogType LogType
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x140D08C", Offset = "0x140D08C", VA = "0x140D08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F08", Offset = "0x12B8F08")]
			get
			{
				return default(LogType);
			}
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x140D094", Offset = "0x140D094", VA = "0x140D094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F18", Offset = "0x12B8F18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public string Message
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x140D09C", Offset = "0x140D09C", VA = "0x140D09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F28", Offset = "0x12B8F28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x140D0A4", Offset = "0x140D0A4", VA = "0x140D0A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F38", Offset = "0x12B8F38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public DateTime Timestamp
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x140D0AC", Offset = "0x140D0AC", VA = "0x140D0AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F48", Offset = "0x12B8F48")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x140D0B4", Offset = "0x140D0B4", VA = "0x140D0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F58", Offset = "0x12B8F58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public UnityEngine.Object Context
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x140D0BC", Offset = "0x140D0BC", VA = "0x140D0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F68", Offset = "0x12B8F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x140D0C4", Offset = "0x140D0C4", VA = "0x140D0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F78", Offset = "0x12B8F78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public Exception Exception
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x140D0CC", Offset = "0x140D0CC", VA = "0x140D0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F88", Offset = "0x12B8F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x140D0D4", Offset = "0x140D0D4", VA = "0x140D0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8F98", Offset = "0x12B8F98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public string StackTrace
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x140D0DC", Offset = "0x140D0DC", VA = "0x140D0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8FA8", Offset = "0x12B8FA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x140D0E4", Offset = "0x140D0E4", VA = "0x140D0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8FB8", Offset = "0x12B8FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public object State
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x140D0EC", Offset = "0x140D0EC", VA = "0x140D0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8FC8", Offset = "0x12B8FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x140D0F4", Offset = "0x140D0F4", VA = "0x140D0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8FD8", Offset = "0x12B8FD8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x140D0FC", Offset = "0x140D0FC", VA = "0x140D0FC")]
		public LogEntry(string loggerName, LogType logType, DateTime timestamp, string message, [Optional] UnityEngine.Object context, [Optional] Exception exception, [Optional] string stackTrace, [Optional] object state)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x140D118", Offset = "0x140D118", VA = "0x140D118", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200019B")]
	public static class LogEntryExtensions
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x2130C00", Offset = "0x2130C00", VA = "0x2130C00")]
		public static IDisposable LogToUnityDebug(this IObservable<LogEntry> source)
		{
			return null;
		}
	}
	[Token(Token = "0x200019C")]
	public class Logger
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInitialized;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool isDebugBuild;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC898", Offset = "0x12AC898")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly Action<LogEntry> logPublisher;

		[Token(Token = "0x17000197")]
		public string Name
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x2130CD4", Offset = "0x2130CD4", VA = "0x2130CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B8FF8", Offset = "0x12B8FF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x2130CDC", Offset = "0x2130CDC", VA = "0x2130CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9008", Offset = "0x12B9008")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x2130CE4", Offset = "0x2130CE4", VA = "0x2130CE4")]
		public Logger(string loggerName)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x2130E5C", Offset = "0x2130E5C", VA = "0x2130E5C", Slot = "4")]
		public virtual void Debug(object message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x2131020", Offset = "0x2131020", VA = "0x2131020", Slot = "5")]
		public virtual void DebugFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x21311E4", Offset = "0x21311E4", VA = "0x21311E4", Slot = "6")]
		public virtual void Log(object message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x21312F4", Offset = "0x21312F4", VA = "0x21312F4", Slot = "7")]
		public virtual void LogFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x2131404", Offset = "0x2131404", VA = "0x2131404", Slot = "8")]
		public virtual void Warning(object message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x2131514", Offset = "0x2131514", VA = "0x2131514", Slot = "9")]
		public virtual void WarningFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x2131624", Offset = "0x2131624", VA = "0x2131624", Slot = "10")]
		public virtual void Error(object message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x2131734", Offset = "0x2131734", VA = "0x2131734", Slot = "11")]
		public virtual void ErrorFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x2131844", Offset = "0x2131844", VA = "0x2131844", Slot = "12")]
		public virtual void Exception(Exception exception, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x213195C", Offset = "0x213195C", VA = "0x213195C", Slot = "13")]
		public virtual void Raw(LogEntry logEntry)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public static class ObservableDebugExtensions
	{
		[Token(Token = "0x6000C77")]
		public static IObservable<T> Debug<T>(this IObservable<T> source, [Optional] string label)
		{
			return null;
		}

		[Token(Token = "0x6000C78")]
		public static IObservable<T> Debug<T>(this IObservable<T> source, Logger logger)
		{
			return null;
		}
	}
	[Token(Token = "0x200019E")]
	public class ObservableLogger : IObservable<LogEntry>
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Subject<LogEntry> logPublisher;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ObservableLogger Listener;

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x21319F4", Offset = "0x21319F4", VA = "0x21319F4")]
		private ObservableLogger()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x2130D6C", Offset = "0x2130D6C", VA = "0x2130D6C")]
		public static Action<LogEntry> RegisterLogger(Logger logger)
		{
			return null;
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x21319FC", Offset = "0x21319FC", VA = "0x21319FC", Slot = "4")]
		public IDisposable Subscribe(IObserver<LogEntry> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x200019F")]
	public class UnityDebugSink : IObserver<LogEntry>
	{
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x2131B14", Offset = "0x2131B14", VA = "0x2131B14", Slot = "4")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x2131B18", Offset = "0x2131B18", VA = "0x2131B18", Slot = "5")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x2131B1C", Offset = "0x2131B1C", VA = "0x2131B1C", Slot = "6")]
		public void OnNext(LogEntry value)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x2130CCC", Offset = "0x2130CCC", VA = "0x2130CCC")]
		public UnityDebugSink()
		{
		}
	}
}
namespace UniRx.Operators
{
	[Token(Token = "0x20001A0")]
	internal class AggregateObservable<TSource> : OperatorObservableBase<TSource>
	{
		[Token(Token = "0x2000463")]
		private class Aggregate : OperatorObserverBase<TSource, TSource>
		{
			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AggregateObservable<TSource> parent;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource accumulation;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool seenValue;

			[Token(Token = "0x6001A87")]
			public Aggregate(AggregateObservable<TSource> parent, IObserver<TSource> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A88")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001A89")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A8A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, TSource, TSource> accumulator;

		[Token(Token = "0x6000C81")]
		public AggregateObservable(IObservable<TSource> source, Func<TSource, TSource, TSource> accumulator)
		{
		}

		[Token(Token = "0x6000C82")]
		protected override IDisposable SubscribeCore(IObserver<TSource> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A1")]
	internal class AggregateObservable<TSource, TAccumulate> : OperatorObservableBase<TAccumulate>
	{
		[Token(Token = "0x2000464")]
		private class Aggregate : OperatorObserverBase<TSource, TAccumulate>
		{
			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AggregateObservable<TSource, TAccumulate> parent;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TAccumulate accumulation;

			[Token(Token = "0x6001A8B")]
			public Aggregate(AggregateObservable<TSource, TAccumulate> parent, IObserver<TAccumulate> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A8C")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001A8D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A8E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TAccumulate seed;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TAccumulate, TSource, TAccumulate> accumulator;

		[Token(Token = "0x6000C83")]
		public AggregateObservable(IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator)
		{
		}

		[Token(Token = "0x6000C84")]
		protected override IDisposable SubscribeCore(IObserver<TAccumulate> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A2")]
	internal class AggregateObservable<TSource, TAccumulate, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x2000465")]
		private class Aggregate : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AggregateObservable<TSource, TAccumulate, TResult> parent;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TAccumulate accumulation;

			[Token(Token = "0x6001A8F")]
			public Aggregate(AggregateObservable<TSource, TAccumulate, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A90")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001A91")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A92")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TAccumulate seed;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TAccumulate, TSource, TAccumulate> accumulator;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TAccumulate, TResult> resultSelector;

		[Token(Token = "0x6000C85")]
		public AggregateObservable(IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator, Func<TAccumulate, TResult> resultSelector)
		{
		}

		[Token(Token = "0x6000C86")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A3")]
	internal class AmbObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000466")]
		private class AmbOuterObserver : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200060E")]
			private enum AmbState
			{
				[Token(Token = "0x400148C")]
				Left,
				[Token(Token = "0x400148D")]
				Right,
				[Token(Token = "0x400148E")]
				Neither
			}

			[Token(Token = "0x200060F")]
			private class Amb : IObserver<T>
			{
				[Token(Token = "0x400148F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IObserver<T> targetObserver;

				[Token(Token = "0x4001490")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IDisposable targetDisposable;

				[Token(Token = "0x60021CA")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x60021CB")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021CC")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x60021CD")]
				public Amb()
				{
				}
			}

			[Token(Token = "0x2000610")]
			private class AmbDecisionObserver : IObserver<T>
			{
				[Token(Token = "0x4001491")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly AmbOuterObserver parent;

				[Token(Token = "0x4001492")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly AmbState me;

				[Token(Token = "0x4001493")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable otherSubscription;

				[Token(Token = "0x4001494")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Amb self;

				[Token(Token = "0x60021CE")]
				public AmbDecisionObserver(AmbOuterObserver parent, AmbState me, IDisposable otherSubscription, Amb self)
				{
				}

				[Token(Token = "0x60021CF")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x60021D0")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021D1")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly AmbObservable<T> parent;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable leftSubscription;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable rightSubscription;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private AmbState choice;

			[Token(Token = "0x6001A93")]
			public AmbOuterObserver(AmbObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A94")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001A95")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001A96")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A97")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> second;

		[Token(Token = "0x6000C87")]
		public AmbObservable(IObservable<T> source, IObservable<T> second)
		{
		}

		[Token(Token = "0x6000C88")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A4")]
	internal class AsObservableObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000467")]
		private class AsObservable : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001A98")]
			public AsObservable(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A99")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001A9A")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A9B")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000C89")]
		public AsObservableObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000C8A")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A5")]
	internal class AsSingleUnitObservableObservable<T> : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x2000468")]
		private class AsSingleUnitObservable : OperatorObserverBase<T, Unit>
		{
			[Token(Token = "0x6001A9C")]
			public AsSingleUnitObservable(IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001A9D")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001A9E")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001A9F")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000C8B")]
		public AsSingleUnitObservableObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000C8C")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A6")]
	internal class AsUnitObservableObservable<T> : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x2000469")]
		private class AsUnitObservable : OperatorObserverBase<T, Unit>
		{
			[Token(Token = "0x6001AA0")]
			public AsUnitObservable(IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AA1")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AA2")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AA3")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000C8D")]
		public AsUnitObservableObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000C8E")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A7")]
	internal class BufferObservable<T> : OperatorObservableBase<IList<T>>
	{
		[Token(Token = "0x200046A")]
		private class Buffer : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<T> parent;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> list;

			[Token(Token = "0x6001AA4")]
			public Buffer(BufferObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AA5")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AA6")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AA7")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AA8")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x200046B")]
		private class Buffer_ : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<T> parent;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<List<T>> q;

			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001AA9")]
			public Buffer_(BufferObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AAA")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AAB")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AAC")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AAD")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x200046C")]
		private class BufferT : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x2000611")]
			private class Buffer : IObserver<long>
			{
				[Token(Token = "0x4001495")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private BufferT parent;

				[Token(Token = "0x60021D2")]
				public Buffer(BufferT parent)
				{
				}

				[Token(Token = "0x60021D3")]
				public void OnNext(long value)
				{
				}

				[Token(Token = "0x60021D4")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021D5")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly T[] EmptyArray;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<T> parent;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> list;

			[Token(Token = "0x6001AAE")]
			public BufferT(BufferObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AAF")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AB0")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AB1")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AB2")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x200046D")]
		private class BufferTS : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x2000612")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFC0", Offset = "0x12ABFC0")]
			private sealed class <>c__DisplayClass9_0
			{
				[Token(Token = "0x4001496")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public BufferTS <>4__this;

				[Token(Token = "0x4001497")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public bool isShift;

				[Token(Token = "0x4001498")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public bool isSpan;

				[Token(Token = "0x60021D6")]
				public <>c__DisplayClass9_0()
				{
				}

				[Token(Token = "0x60021D7")]
				internal void <CreateTimer>b__0()
				{
				}
			}

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<T> parent;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<IList<T>> q;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TimeSpan totalTime;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TimeSpan nextShift;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TimeSpan nextSpan;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable timerD;

			[Token(Token = "0x6001AB4")]
			public BufferTS(BufferObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AB5")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AB6")]
			private void CreateTimer()
			{
			}

			[Token(Token = "0x6001AB7")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AB8")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AB9")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x200046E")]
		private class BufferTC : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x2000613")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFD0", Offset = "0x12ABFD0")]
			private sealed class <>c__DisplayClass8_0
			{
				[Token(Token = "0x4001499")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public BufferTC <>4__this;

				[Token(Token = "0x400149A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public long currentTimerId;

				[Token(Token = "0x60021D8")]
				public <>c__DisplayClass8_0()
				{
				}

				[Token(Token = "0x60021D9")]
				internal void <CreateTimer>b__0()
				{
				}

				[Token(Token = "0x60021DA")]
				internal void <CreateTimer>b__1(Action<TimeSpan> self)
				{
				}
			}

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly T[] EmptyArray;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<T> parent;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> list;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private long timerId;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable timerD;

			[Token(Token = "0x6001ABA")]
			public BufferTC(BufferObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001ABB")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001ABC")]
			private void CreateTimer()
			{
			}

			[Token(Token = "0x6001ABD")]
			private void OnNextTick(long currentTimerId)
			{
			}

			[Token(Token = "0x6001ABE")]
			private void OnNextRecursive(long currentTimerId, Action<TimeSpan> self)
			{
			}

			[Token(Token = "0x6001ABF")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AC0")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AC1")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int count;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int skip;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan timeSpan;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan timeShift;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000C8F")]
		public BufferObservable(IObservable<T> source, int count, int skip)
		{
		}

		[Token(Token = "0x6000C90")]
		public BufferObservable(IObservable<T> source, TimeSpan timeSpan, TimeSpan timeShift, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000C91")]
		public BufferObservable(IObservable<T> source, TimeSpan timeSpan, int count, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000C92")]
		protected override IDisposable SubscribeCore(IObserver<IList<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A8")]
	internal class BufferObservable<TSource, TWindowBoundary> : OperatorObservableBase<IList<TSource>>
	{
		[Token(Token = "0x200046F")]
		private class Buffer : OperatorObserverBase<TSource, IList<TSource>>
		{
			[Token(Token = "0x2000614")]
			private class Buffer_ : IObserver<TWindowBoundary>
			{
				[Token(Token = "0x400149B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Buffer parent;

				[Token(Token = "0x60021DB")]
				public Buffer_(Buffer parent)
				{
				}

				[Token(Token = "0x60021DC")]
				public void OnNext(TWindowBoundary value)
				{
				}

				[Token(Token = "0x60021DD")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021DE")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly TSource[] EmptyArray;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BufferObservable<TSource, TWindowBoundary> parent;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<TSource> list;

			[Token(Token = "0x6001AC3")]
			public Buffer(BufferObservable<TSource, TWindowBoundary> parent, IObserver<IList<TSource>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AC4")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AC5")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001AC6")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AC7")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TWindowBoundary> windowBoundaries;

		[Token(Token = "0x6000C93")]
		public BufferObservable(IObservable<TSource> source, IObservable<TWindowBoundary> windowBoundaries)
		{
		}

		[Token(Token = "0x6000C94")]
		protected override IDisposable SubscribeCore(IObserver<IList<TSource>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A9")]
	internal class CastObservable<TSource, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x2000470")]
		private class Cast : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x6001AC9")]
			public Cast(IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001ACA")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001ACB")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001ACC")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x6000C95")]
		public CastObservable(IObservable<TSource> source)
		{
		}

		[Token(Token = "0x6000C96")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AA")]
	internal class CatchObservable<T, TException> : OperatorObservableBase<T> where TException : Exception
	{
		[Token(Token = "0x2000471")]
		private class Catch : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CatchObservable<T, TException> parent;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable serialDisposable;

			[Token(Token = "0x6001ACD")]
			public Catch(CatchObservable<T, TException> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001ACE")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001ACF")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AD0")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AD1")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TException, IObservable<T>> errorHandler;

		[Token(Token = "0x6000C97")]
		public CatchObservable(IObservable<T> source, Func<TException, IObservable<T>> errorHandler)
		{
		}

		[Token(Token = "0x6000C98")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AB")]
	internal class CatchObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000472")]
		private class Catch : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CatchObservable<T> parent;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<IObservable<T>> e;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable subscription;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Exception lastException;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action nextSelf;

			[Token(Token = "0x6001AD2")]
			public Catch(CatchObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AD3")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AD4")]
			private void RecursiveRun(Action self)
			{
			}

			[Token(Token = "0x6001AD5")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001AD6")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AD7")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDEE4", Offset = "0x12BDEE4")]
			private void <Run>b__8_0()
			{
			}
		}

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<IObservable<T>> sources;

		[Token(Token = "0x6000C99")]
		public CatchObservable(IEnumerable<IObservable<T>> sources)
		{
		}

		[Token(Token = "0x6000C9A")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AC")]
	public delegate TR CombineLatestFunc<T1, T2, T3, TR>(T1 arg1, T2 arg2, T3 arg3);
	[Token(Token = "0x20001AD")]
	public delegate TR CombineLatestFunc<T1, T2, T3, T4, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4);
	[Token(Token = "0x20001AE")]
	public delegate TR CombineLatestFunc<T1, T2, T3, T4, T5, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
	[Token(Token = "0x20001AF")]
	public delegate TR CombineLatestFunc<T1, T2, T3, T4, T5, T6, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
	[Token(Token = "0x20001B0")]
	public delegate TR CombineLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
	[Token(Token = "0x20001B1")]
	internal class CombineLatestObservable<TLeft, TRight, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x2000473")]
		private class CombineLatest : OperatorObserverBase<TResult, TResult>
		{
			[Token(Token = "0x2000615")]
			private class LeftObserver : IObserver<TLeft>
			{
				[Token(Token = "0x400149C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly CombineLatest parent;

				[Token(Token = "0x60021DF")]
				public LeftObserver(CombineLatest parent)
				{
				}

				[Token(Token = "0x60021E0")]
				public void OnNext(TLeft value)
				{
				}

				[Token(Token = "0x60021E1")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021E2")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x2000616")]
			private class RightObserver : IObserver<TRight>
			{
				[Token(Token = "0x400149D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly CombineLatest parent;

				[Token(Token = "0x60021E3")]
				public RightObserver(CombineLatest parent)
				{
				}

				[Token(Token = "0x60021E4")]
				public void OnNext(TRight value)
				{
				}

				[Token(Token = "0x60021E5")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021E6")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<TLeft, TRight, TResult> parent;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TLeft leftValue;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool leftStarted;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool leftCompleted;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TRight rightValue;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool rightStarted;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool rightCompleted;

			[Token(Token = "0x6001AD9")]
			public CombineLatest(CombineLatestObservable<TLeft, TRight, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001ADA")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001ADB")]
			public void Publish()
			{
			}

			[Token(Token = "0x6001ADC")]
			public override void OnNext(TResult value)
			{
			}

			[Token(Token = "0x6001ADD")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001ADE")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TLeft> left;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TRight> right;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TLeft, TRight, TResult> selector;

		[Token(Token = "0x6000CAF")]
		public CombineLatestObservable(IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
		}

		[Token(Token = "0x6000CB0")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B2")]
	internal class CombineLatestObservable<T> : OperatorObservableBase<IList<T>>
	{
		[Token(Token = "0x2000474")]
		private class CombineLatest : OperatorObserverBase<IList<T>, IList<T>>
		{
			[Token(Token = "0x2000617")]
			private class CombineLatestObserver : IObserver<T>
			{
				[Token(Token = "0x400149E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly CombineLatest parent;

				[Token(Token = "0x400149F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int index;

				[Token(Token = "0x60021E7")]
				public CombineLatestObserver(CombineLatest parent, int index)
				{
				}

				[Token(Token = "0x60021E8")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x60021E9")]
				public void OnError(Exception ex)
				{
				}

				[Token(Token = "0x60021EA")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T> parent;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int length;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] values;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool[] isStarted;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool[] isCompleted;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isAllValueStarted;

			[Token(Token = "0x6001ADF")]
			public CombineLatest(CombineLatestObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AE0")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AE1")]
			private void Publish(int index)
			{
			}

			[Token(Token = "0x6001AE2")]
			public override void OnNext(IList<T> value)
			{
			}

			[Token(Token = "0x6001AE3")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AE4")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T>[] sources;

		[Token(Token = "0x6000CB1")]
		public CombineLatestObservable(IObservable<T>[] sources)
		{
		}

		[Token(Token = "0x6000CB2")]
		protected override IDisposable SubscribeCore(IObserver<IList<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B3")]
	internal class CombineLatestObservable<T1, T2, T3, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x2000475")]
		private class CombineLatest : NthCombineLatestObserverBase<TR>
		{
			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T1, T2, T3, TR> parent;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T1> c1;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T2> c2;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T3> c3;

			[Token(Token = "0x6001AE5")]
			public CombineLatest(int length, CombineLatestObservable<T1, T2, T3, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AE6")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AE7")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001AE8")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001AE9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AEA")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CombineLatestFunc<T1, T2, T3, TR> resultSelector;

		[Token(Token = "0x6000CB3")]
		public CombineLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, CombineLatestFunc<T1, T2, T3, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000CB4")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B4")]
	internal class CombineLatestObservable<T1, T2, T3, T4, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x2000476")]
		private class CombineLatest : NthCombineLatestObserverBase<TR>
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T1, T2, T3, T4, TR> parent;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T1> c1;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T2> c2;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T3> c3;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T4> c4;

			[Token(Token = "0x6001AEB")]
			public CombineLatest(int length, CombineLatestObservable<T1, T2, T3, T4, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AEC")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AED")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001AEE")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001AEF")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AF0")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CombineLatestFunc<T1, T2, T3, T4, TR> resultSelector;

		[Token(Token = "0x6000CB5")]
		public CombineLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, CombineLatestFunc<T1, T2, T3, T4, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000CB6")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B5")]
	internal class CombineLatestObservable<T1, T2, T3, T4, T5, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x2000477")]
		private class CombineLatest : NthCombineLatestObserverBase<TR>
		{
			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T1, T2, T3, T4, T5, TR> parent;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T1> c1;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T2> c2;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T3> c3;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T4> c4;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T5> c5;

			[Token(Token = "0x6001AF1")]
			public CombineLatest(int length, CombineLatestObservable<T1, T2, T3, T4, T5, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AF2")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AF3")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001AF4")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001AF5")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AF6")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CombineLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector;

		[Token(Token = "0x6000CB7")]
		public CombineLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, CombineLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000CB8")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B6")]
	internal class CombineLatestObservable<T1, T2, T3, T4, T5, T6, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x2000478")]
		private class CombineLatest : NthCombineLatestObserverBase<TR>
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T1, T2, T3, T4, T5, T6, TR> parent;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T1> c1;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T2> c2;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T3> c3;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T4> c4;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T5> c5;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T6> c6;

			[Token(Token = "0x6001AF7")]
			public CombineLatest(int length, CombineLatestObservable<T1, T2, T3, T4, T5, T6, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AF8")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AF9")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001AFA")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001AFB")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001AFC")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CombineLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector;

		[Token(Token = "0x6000CB9")]
		public CombineLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, CombineLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000CBA")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B7")]
	internal class CombineLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x2000479")]
		private class CombineLatest : NthCombineLatestObserverBase<TR>
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly CombineLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T1> c1;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T2> c2;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T3> c3;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T4> c4;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T5> c5;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T6> c6;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CombineLatestObserver<T7> c7;

			[Token(Token = "0x6001AFD")]
			public CombineLatest(int length, CombineLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001AFE")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001AFF")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001B00")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001B01")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B02")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T7> source7;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CombineLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector;

		[Token(Token = "0x6000CBB")]
		public CombineLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, CombineLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000CBC")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B8")]
	internal interface ICombineLatestObservable
	{
		[Token(Token = "0x6000CBD")]
		void Publish(int index);

		[Token(Token = "0x6000CBE")]
		void Fail(Exception error);

		[Token(Token = "0x6000CBF")]
		void Done(int index);
	}
	[Token(Token = "0x20001B9")]
	internal abstract class NthCombineLatestObserverBase<T> : OperatorObserverBase<T, T>, ICombineLatestObservable
	{
		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int length;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool isAllValueStarted;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool[] isStarted;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool[] isCompleted;

		[Token(Token = "0x6000CC0")]
		public NthCombineLatestObserverBase(int length, IObserver<T> observer, IDisposable cancel)
		{
		}

		[Token(Token = "0x6000CC1")]
		public abstract T GetResult();

		[Token(Token = "0x6000CC2")]
		public void Publish(int index)
		{
		}

		[Token(Token = "0x6000CC3")]
		public void Done(int index)
		{
		}

		[Token(Token = "0x6000CC4")]
		public void Fail(Exception error)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	internal class CombineLatestObserver<T> : IObserver<T>
	{
		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ICombineLatestObservable parent;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int index;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x17000198")]
		public T Value
		{
			[Token(Token = "0x6000CC5")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000CC6")]
		public CombineLatestObserver(object gate, ICombineLatestObservable parent, int index)
		{
		}

		[Token(Token = "0x6000CC7")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000CC8")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000CC9")]
		public void OnCompleted()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	internal class ConcatObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200047A")]
		private class Concat : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ConcatObservable<T> parent;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<IObservable<T>> e;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable subscription;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action nextSelf;

			[Token(Token = "0x6001B03")]
			public Concat(ConcatObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B04")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B05")]
			private void RecursiveRun(Action self)
			{
			}

			[Token(Token = "0x6001B06")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B07")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B08")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001B09")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDEF4", Offset = "0x12BDEF4")]
			private void <Run>b__7_0()
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB560", Offset = "0x12AB560")]
		private sealed class <CombineSources>d__3 : IEnumerable<IObservable<T>>, IEnumerable, IEnumerator<IObservable<T>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IObservable<T> <>2__current;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<IObservable<T>> first;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<IObservable<T>> <>3__first;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<IObservable<T>> second;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<IObservable<T>> <>3__second;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<IObservable<T>> <>7__wrap1;

			[Token(Token = "0x170002FE")]
			private IObservable<T> System.Collections.Generic.IEnumerator<UniRx.IObservable<T>>.Current
			{
				[Token(Token = "0x6001B0F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B11")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0A")]
			[DebuggerHidden]
			public <CombineSources>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001B0B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0D")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001B0E")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001B10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001B12")]
			[DebuggerHidden]
			private IEnumerator<IObservable<T>> System.Collections.Generic.IEnumerable<UniRx.IObservable<T>>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001B13")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<IObservable<T>> sources;

		[Token(Token = "0x6000CCA")]
		public ConcatObservable(IEnumerable<IObservable<T>> sources)
		{
		}

		[Token(Token = "0x6000CCB")]
		public IObservable<T> Combine(IEnumerable<IObservable<T>> combineSources)
		{
			return null;
		}

		[Token(Token = "0x6000CCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B9038", Offset = "0x12B9038")]
		private static IEnumerable<IObservable<T>> CombineSources(IEnumerable<IObservable<T>> first, IEnumerable<IObservable<T>> second)
		{
			return null;
		}

		[Token(Token = "0x6000CCD")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BC")]
	internal class ContinueWithObservable<TSource, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x200047C")]
		private class ContinueWith : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ContinueWithObservable<TSource, TResult> parent;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SerialDisposable serialDisposable;

			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool seenValue;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource lastValue;

			[Token(Token = "0x6001B14")]
			public ContinueWith(ContinueWithObservable<TSource, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B15")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B16")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001B17")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B18")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, IObservable<TResult>> selector;

		[Token(Token = "0x6000CCE")]
		public ContinueWithObservable(IObservable<TSource> source, Func<TSource, IObservable<TResult>> selector)
		{
		}

		[Token(Token = "0x6000CCF")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BD")]
	internal class CreateObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200047D")]
		private class Create : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001B19")]
			public Create(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B1A")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B1B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B1C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<IObserver<T>, IDisposable> subscribe;

		[Token(Token = "0x6000CD0")]
		public CreateObservable(Func<IObserver<T>, IDisposable> subscribe)
		{
		}

		[Token(Token = "0x6000CD1")]
		public CreateObservable(Func<IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000CD2")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BE")]
	internal class CreateObservable<T, TState> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200047E")]
		private class Create : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001B1D")]
			public Create(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B1E")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B1F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B20")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TState state;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TState, IObserver<T>, IDisposable> subscribe;

		[Token(Token = "0x6000CD3")]
		public CreateObservable(TState state, Func<TState, IObserver<T>, IDisposable> subscribe)
		{
		}

		[Token(Token = "0x6000CD4")]
		public CreateObservable(TState state, Func<TState, IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000CD5")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BF")]
	internal class CreateSafeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200047F")]
		private class CreateSafe : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001B21")]
			public CreateSafe(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B22")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B23")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B24")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<IObserver<T>, IDisposable> subscribe;

		[Token(Token = "0x6000CD6")]
		public CreateSafeObservable(Func<IObserver<T>, IDisposable> subscribe)
		{
		}

		[Token(Token = "0x6000CD7")]
		public CreateSafeObservable(Func<IObserver<T>, IDisposable> subscribe, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000CD8")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C0")]
	internal class DefaultIfEmptyObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000480")]
		private class DefaultIfEmpty : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DefaultIfEmptyObservable<T> parent;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasValue;

			[Token(Token = "0x6001B25")]
			public DefaultIfEmpty(DefaultIfEmptyObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B26")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B27")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B28")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T defaultValue;

		[Token(Token = "0x6000CD9")]
		public DefaultIfEmptyObservable(IObservable<T> source, T defaultValue)
		{
		}

		[Token(Token = "0x6000CDA")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C1")]
	internal class DeferObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000481")]
		private class Defer : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001B29")]
			public Defer(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B2A")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B2B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B2C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<IObservable<T>> observableFactory;

		[Token(Token = "0x6000CDB")]
		public DeferObservable(Func<IObservable<T>> observableFactory)
		{
		}

		[Token(Token = "0x6000CDC")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C2")]
	internal class DelayObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000482")]
		private class Delay : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DelayObservable<T> parent;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasFailed;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool running;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool active;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Exception exception;

			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<Timestamped<T>> queue;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool onCompleted;

			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private DateTimeOffset completeAt;

			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable sourceSubscription;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TimeSpan delay;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool ready;

			[Token(Token = "0x4000EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable cancelable;

			[Token(Token = "0x6001B2D")]
			public Delay(DelayObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B2E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B2F")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B30")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B31")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001B32")]
			private void DrainQueue(Action<TimeSpan> recurse)
			{
			}
		}

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan dueTime;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000CDD")]
		public DelayObservable(IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000CDE")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	internal class DelaySubscriptionObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB570", Offset = "0x12AB570")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DelaySubscriptionObservable<T> <>4__this;

			[Token(Token = "0x4000EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x6001B33")]
			public <>c__DisplayClass6_0()
			{
			}
		}

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB580", Offset = "0x12AB580")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4000EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MultipleAssignmentDisposable d;

			[Token(Token = "0x4000EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6001B34")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x6001B35")]
			internal void <SubscribeCore>b__0()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB590", Offset = "0x12AB590")]
		private sealed class <>c__DisplayClass6_2
		{
			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MultipleAssignmentDisposable d;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass6_0 CS$<>8__locals2;

			[Token(Token = "0x6001B36")]
			public <>c__DisplayClass6_2()
			{
			}

			[Token(Token = "0x6001B37")]
			internal void <SubscribeCore>b__1()
			{
			}
		}

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan? dueTimeT;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DateTimeOffset? dueTimeD;

		[Token(Token = "0x6000CDF")]
		public DelaySubscriptionObservable(IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000CE0")]
		public DelaySubscriptionObservable(IObservable<T> source, DateTimeOffset dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000CE1")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C4")]
	internal class DematerializeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000486")]
		private class Dematerialize : OperatorObserverBase<Notification<T>, T>
		{
			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DematerializeObservable<T> parent;

			[Token(Token = "0x6001B38")]
			public Dematerialize(DematerializeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B39")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B3A")]
			public override void OnNext(Notification<T> value)
			{
			}

			[Token(Token = "0x6001B3B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B3C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<Notification<T>> source;

		[Token(Token = "0x6000CE2")]
		public DematerializeObservable(IObservable<Notification<T>> source)
		{
		}

		[Token(Token = "0x6000CE3")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C5")]
	internal class DistinctObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000487")]
		private class Distinct : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly HashSet<T> hashSet;

			[Token(Token = "0x6001B3D")]
			public Distinct(DistinctObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B3E")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B3F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B40")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEqualityComparer<T> comparer;

		[Token(Token = "0x6000CE4")]
		public DistinctObservable(IObservable<T> source, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000CE5")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C6")]
	internal class DistinctObservable<T, TKey> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000488")]
		private class Distinct : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DistinctObservable<T, TKey> parent;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly HashSet<TKey> hashSet;

			[Token(Token = "0x6001B41")]
			public Distinct(DistinctObservable<T, TKey> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B42")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B43")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B44")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEqualityComparer<TKey> comparer;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, TKey> keySelector;

		[Token(Token = "0x6000CE6")]
		public DistinctObservable(IObservable<T> source, Func<T, TKey> keySelector, IEqualityComparer<TKey> comparer)
		{
		}

		[Token(Token = "0x6000CE7")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	internal class DistinctUntilChangedObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000489")]
		private class DistinctUntilChanged : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DistinctUntilChangedObservable<T> parent;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T prevKey;

			[Token(Token = "0x6001B45")]
			public DistinctUntilChanged(DistinctUntilChangedObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B46")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B47")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B48")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEqualityComparer<T> comparer;

		[Token(Token = "0x6000CE8")]
		public DistinctUntilChangedObservable(IObservable<T> source, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6000CE9")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C8")]
	internal class DistinctUntilChangedObservable<T, TKey> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048A")]
		private class DistinctUntilChanged : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DistinctUntilChangedObservable<T, TKey> parent;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TKey prevKey;

			[Token(Token = "0x6001B49")]
			public DistinctUntilChanged(DistinctUntilChangedObservable<T, TKey> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B4A")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B4B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B4C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEqualityComparer<TKey> comparer;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, TKey> keySelector;

		[Token(Token = "0x6000CEA")]
		public DistinctUntilChangedObservable(IObservable<T> source, Func<T, TKey> keySelector, IEqualityComparer<TKey> comparer)
		{
		}

		[Token(Token = "0x6000CEB")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	internal class DoObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048B")]
		private class Do : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoObservable<T> parent;

			[Token(Token = "0x6001B4D")]
			public Do(DoObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B4E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B4F")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B50")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B51")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> onNext;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Exception> onError;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action onCompleted;

		[Token(Token = "0x6000CEC")]
		public DoObservable(IObservable<T> source, Action<T> onNext, Action<Exception> onError, Action onCompleted)
		{
		}

		[Token(Token = "0x6000CED")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CA")]
	internal class DoObserverObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048C")]
		private class Do : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoObserverObservable<T> parent;

			[Token(Token = "0x6001B52")]
			public Do(DoObserverObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B53")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B54")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B55")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B56")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObserver<T> observer;

		[Token(Token = "0x6000CEE")]
		public DoObserverObservable(IObservable<T> source, IObserver<T> observer)
		{
		}

		[Token(Token = "0x6000CEF")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CB")]
	internal class DoOnErrorObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048D")]
		private class DoOnError : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoOnErrorObservable<T> parent;

			[Token(Token = "0x6001B57")]
			public DoOnError(DoOnErrorObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B58")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B59")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B5A")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B5B")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Exception> onError;

		[Token(Token = "0x6000CF0")]
		public DoOnErrorObservable(IObservable<T> source, Action<Exception> onError)
		{
		}

		[Token(Token = "0x6000CF1")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CC")]
	internal class DoOnCompletedObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048E")]
		private class DoOnCompleted : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoOnCompletedObservable<T> parent;

			[Token(Token = "0x6001B5C")]
			public DoOnCompleted(DoOnCompletedObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B5D")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B5E")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B5F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B60")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action onCompleted;

		[Token(Token = "0x6000CF2")]
		public DoOnCompletedObservable(IObservable<T> source, Action onCompleted)
		{
		}

		[Token(Token = "0x6000CF3")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CD")]
	internal class DoOnTerminateObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200048F")]
		private class DoOnTerminate : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoOnTerminateObservable<T> parent;

			[Token(Token = "0x6001B61")]
			public DoOnTerminate(DoOnTerminateObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B62")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B63")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B64")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B65")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action onTerminate;

		[Token(Token = "0x6000CF4")]
		public DoOnTerminateObservable(IObservable<T> source, Action onTerminate)
		{
		}

		[Token(Token = "0x6000CF5")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CE")]
	internal class DoOnSubscribeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000490")]
		private class DoOnSubscribe : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoOnSubscribeObservable<T> parent;

			[Token(Token = "0x6001B66")]
			public DoOnSubscribe(DoOnSubscribeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B67")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B68")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B69")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B6A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action onSubscribe;

		[Token(Token = "0x6000CF6")]
		public DoOnSubscribeObservable(IObservable<T> source, Action onSubscribe)
		{
		}

		[Token(Token = "0x6000CF7")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CF")]
	internal class DoOnCancelObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000491")]
		private class DoOnCancel : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DoOnCancelObservable<T> parent;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isCompletedCall;

			[Token(Token = "0x6001B6B")]
			public DoOnCancel(DoOnCancelObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B6C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B6D")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B6E")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B6F")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDF74", Offset = "0x12BDF74")]
			private void <Run>b__3_0()
			{
			}
		}

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action onCancel;

		[Token(Token = "0x6000CF8")]
		public DoOnCancelObservable(IObservable<T> source, Action onCancel)
		{
		}

		[Token(Token = "0x6000CF9")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D0")]
	internal class EmptyObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000492")]
		private class Empty : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001B71")]
			public Empty(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B72")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B73")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B74")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000CFA")]
		public EmptyObservable(IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000CFB")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D1")]
	internal class ImmutableEmptyObservable<T> : IObservable<T>, IOptimizedObservable<T>
	{
		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ImmutableEmptyObservable<T> Instance;

		[Token(Token = "0x6000CFC")]
		private ImmutableEmptyObservable()
		{
		}

		[Token(Token = "0x6000CFD")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFE")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D2")]
	internal class FinallyObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000493")]
		private class Finally : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FinallyObservable<T> parent;

			[Token(Token = "0x6001B75")]
			public Finally(FinallyObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B76")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001B77")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B78")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B79")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001B7A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDF84", Offset = "0x12BDF84")]
			private void <Run>b__2_0()
			{
			}
		}

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action finallyAction;

		[Token(Token = "0x6000D00")]
		public FinallyObservable(IObservable<T> source, Action finallyAction)
		{
		}

		[Token(Token = "0x6000D01")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D3")]
	internal class FirstObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000494")]
		private class First : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FirstObservable<T> parent;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool notPublished;

			[Token(Token = "0x6001B7B")]
			public First(FirstObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B7C")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B7D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B7E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x2000495")]
		private class First_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FirstObservable<T> parent;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool notPublished;

			[Token(Token = "0x6001B7F")]
			public First_(FirstObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B80")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B81")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B82")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool useDefault;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x6000D02")]
		public FirstObservable(IObservable<T> source, bool useDefault)
		{
		}

		[Token(Token = "0x6000D03")]
		public FirstObservable(IObservable<T> source, Func<T, bool> predicate, bool useDefault)
		{
		}

		[Token(Token = "0x6000D04")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D4")]
	internal class ForEachAsyncObservable<T> : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x2000496")]
		private class ForEachAsync : OperatorObserverBase<T, Unit>
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ForEachAsyncObservable<T> parent;

			[Token(Token = "0x6001B83")]
			public ForEachAsync(ForEachAsyncObservable<T> parent, IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B84")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B85")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B86")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x2000497")]
		private class ForEachAsync_ : OperatorObserverBase<T, Unit>
		{
			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ForEachAsyncObservable<T> parent;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001B87")]
			public ForEachAsync_(ForEachAsyncObservable<T> parent, IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001B88")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B89")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001B8A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> onNext;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T, int> onNextWithIndex;

		[Token(Token = "0x6000D05")]
		public ForEachAsyncObservable(IObservable<T> source, Action<T> onNext)
		{
		}

		[Token(Token = "0x6000D06")]
		public ForEachAsyncObservable(IObservable<T> source, Action<T, int> onNext)
		{
		}

		[Token(Token = "0x6000D07")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	internal class FromEventPatternObservable<TDelegate, TEventArgs> : OperatorObservableBase<EventPattern<TEventArgs>> where TEventArgs : EventArgs
	{
		[Token(Token = "0x2000498")]
		private class FromEventPattern : IDisposable
		{
			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FromEventPatternObservable<TDelegate, TEventArgs> parent;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObserver<EventPattern<TEventArgs>> observer;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TDelegate handler;

			[Token(Token = "0x6001B8B")]
			public FromEventPattern(FromEventPatternObservable<TDelegate, TEventArgs> parent, IObserver<EventPattern<TEventArgs>> observer)
			{
			}

			[Token(Token = "0x6001B8C")]
			public bool Register()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8D")]
			private void OnNext(object sender, TEventArgs eventArgs)
			{
			}

			[Token(Token = "0x6001B8E")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<EventHandler<TEventArgs>, TDelegate> conversion;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> addHandler;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> removeHandler;

		[Token(Token = "0x6000D08")]
		public FromEventPatternObservable(Func<EventHandler<TEventArgs>, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler)
		{
		}

		[Token(Token = "0x6000D09")]
		protected override IDisposable SubscribeCore(IObserver<EventPattern<TEventArgs>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D6")]
	internal class FromEventObservable<TDelegate> : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x2000499")]
		private class FromEvent : IDisposable
		{
			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FromEventObservable<TDelegate> parent;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObserver<Unit> observer;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TDelegate handler;

			[Token(Token = "0x6001B8F")]
			public FromEvent(FromEventObservable<TDelegate> parent, IObserver<Unit> observer)
			{
			}

			[Token(Token = "0x6001B90")]
			public bool Register()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B91")]
			private void OnNext()
			{
			}

			[Token(Token = "0x6001B92")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<Action, TDelegate> conversion;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> addHandler;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> removeHandler;

		[Token(Token = "0x6000D0A")]
		public FromEventObservable(Func<Action, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler)
		{
		}

		[Token(Token = "0x6000D0B")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D7")]
	internal class FromEventObservable<TDelegate, TEventArgs> : OperatorObservableBase<TEventArgs>
	{
		[Token(Token = "0x200049A")]
		private class FromEvent : IDisposable
		{
			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FromEventObservable<TDelegate, TEventArgs> parent;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObserver<TEventArgs> observer;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TDelegate handler;

			[Token(Token = "0x6001B93")]
			public FromEvent(FromEventObservable<TDelegate, TEventArgs> parent, IObserver<TEventArgs> observer)
			{
			}

			[Token(Token = "0x6001B94")]
			public bool Register()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B95")]
			private void OnNext(TEventArgs args)
			{
			}

			[Token(Token = "0x6001B96")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<Action<TEventArgs>, TDelegate> conversion;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> addHandler;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<TDelegate> removeHandler;

		[Token(Token = "0x6000D0C")]
		public FromEventObservable(Func<Action<TEventArgs>, TDelegate> conversion, Action<TDelegate> addHandler, Action<TDelegate> removeHandler)
		{
		}

		[Token(Token = "0x6000D0D")]
		protected override IDisposable SubscribeCore(IObserver<TEventArgs> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D8")]
	internal class FromEventObservable : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x200049B")]
		private class FromEvent : IDisposable
		{
			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly FromEventObservable parent;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly IObserver<Unit> observer;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Action handler;

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x2147618", Offset = "0x2147618", VA = "0x2147618")]
			public FromEvent(FromEventObservable parent, IObserver<Unit> observer)
			{
			}

			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x21476A8", Offset = "0x21476A8", VA = "0x21476A8")]
			public bool Register()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x2147814", Offset = "0x2147814", VA = "0x2147814")]
			private void OnNext()
			{
			}

			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x214793C", Offset = "0x214793C", VA = "0x214793C", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Action> addHandler;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<Action> removeHandler;

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x213E538", Offset = "0x213E538", VA = "0x213E538")]
		public FromEventObservable(Action<Action> addHandler, Action<Action> removeHandler)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x2147568", Offset = "0x2147568", VA = "0x2147568", Slot = "6")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D9")]
	internal class FromEventObservable_<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200049C")]
		private class FromEvent : IDisposable
		{
			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FromEventObservable_<T> parent;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObserver<T> observer;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<T> handler;

			[Token(Token = "0x6001B9B")]
			public FromEvent(FromEventObservable_<T> parent, IObserver<T> observer)
			{
			}

			[Token(Token = "0x6001B9C")]
			public bool Register()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B9D")]
			private void OnNext(T value)
			{
			}

			[Token(Token = "0x6001B9E")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Action<T>> addHandler;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Action<T>> removeHandler;

		[Token(Token = "0x6000D10")]
		public FromEventObservable_(Action<Action<T>> addHandler, Action<Action<T>> removeHandler)
		{
		}

		[Token(Token = "0x6000D11")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	internal class GroupedObservable<TKey, TElement> : IGroupedObservable<TKey, TElement>, IObservable<TElement>
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TKey key;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TElement> subject;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly RefCountDisposable refCount;

		[Token(Token = "0x17000199")]
		public TKey Key
		{
			[Token(Token = "0x6000D12")]
			get
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x6000D13")]
		public GroupedObservable(TKey key, ISubject<TElement> subject, RefCountDisposable refCount)
		{
		}

		[Token(Token = "0x6000D14")]
		public IDisposable Subscribe(IObserver<TElement> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DB")]
	internal class GroupByObservable<TSource, TKey, TElement> : OperatorObservableBase<IGroupedObservable<TKey, TElement>>
	{
		[Token(Token = "0x200049D")]
		private class GroupBy : OperatorObserverBase<TSource, IGroupedObservable<TKey, TElement>>
		{
			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly GroupByObservable<TSource, TKey, TElement> parent;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Dictionary<TKey, ISubject<TElement>> map;

			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ISubject<TElement> nullKeySubject;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable groupDisposable;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private RefCountDisposable refCountDisposable;

			[Token(Token = "0x6001B9F")]
			public GroupBy(GroupByObservable<TSource, TKey, TElement> parent, IObserver<IGroupedObservable<TKey, TElement>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BA0")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BA1")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001BA2")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BA3")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001BA4")]
			private void Error(Exception exception)
			{
			}
		}

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, TKey> keySelector;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, TElement> elementSelector;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int? capacity;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEqualityComparer<TKey> comparer;

		[Token(Token = "0x6000D15")]
		public GroupByObservable(IObservable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, int? capacity, IEqualityComparer<TKey> comparer)
		{
		}

		[Token(Token = "0x6000D16")]
		protected override IDisposable SubscribeCore(IObserver<IGroupedObservable<TKey, TElement>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DC")]
	internal class IgnoreElementsObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200049E")]
		private class IgnoreElements : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001BA5")]
			public IgnoreElements(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BA6")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BA7")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BA8")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000D17")]
		public IgnoreElementsObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000D18")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DD")]
	internal class LastObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200049F")]
		private class Last : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LastObservable<T> parent;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool notPublished;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T lastValue;

			[Token(Token = "0x6001BA9")]
			public Last(LastObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BAA")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BAB")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BAC")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		private class Last_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LastObservable<T> parent;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool notPublished;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T lastValue;

			[Token(Token = "0x6001BAD")]
			public Last_(LastObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BAE")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BAF")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BB0")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool useDefault;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x6000D19")]
		public LastObservable(IObservable<T> source, bool useDefault)
		{
		}

		[Token(Token = "0x6000D1A")]
		public LastObservable(IObservable<T> source, Func<T, bool> predicate, bool useDefault)
		{
		}

		[Token(Token = "0x6000D1B")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	internal class MaterializeObservable<T> : OperatorObservableBase<Notification<T>>
	{
		[Token(Token = "0x20004A1")]
		private class Materialize : OperatorObserverBase<T, Notification<T>>
		{
			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly MaterializeObservable<T> parent;

			[Token(Token = "0x6001BB1")]
			public Materialize(MaterializeObservable<T> parent, IObserver<Notification<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BB2")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BB3")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BB4")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BB5")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000D1C")]
		public MaterializeObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000D1D")]
		protected override IDisposable SubscribeCore(IObserver<Notification<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DF")]
	internal class MergeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004A2")]
		private class MergeOuterObserver : OperatorObserverBase<IObservable<T>, T>
		{
			[Token(Token = "0x2000618")]
			private class Merge : OperatorObserverBase<T, T>
			{
				[Token(Token = "0x40014A0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly MergeOuterObserver parent;

				[Token(Token = "0x40014A1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x60021EB")]
				public Merge(MergeOuterObserver parent, IDisposable cancel)
				{
				}

				[Token(Token = "0x60021EC")]
				public override void OnNext(T value)
				{
				}

				[Token(Token = "0x60021ED")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021EE")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly MergeObservable<T> parent;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x6001BB6")]
			public MergeOuterObserver(MergeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BB7")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BB8")]
			public override void OnNext(IObservable<T> value)
			{
			}

			[Token(Token = "0x6001BB9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BBA")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004A3")]
		private class MergeConcurrentObserver : OperatorObserverBase<IObservable<T>, T>
		{
			[Token(Token = "0x2000619")]
			private class Merge : OperatorObserverBase<T, T>
			{
				[Token(Token = "0x40014A2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly MergeConcurrentObserver parent;

				[Token(Token = "0x40014A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x60021EF")]
				public Merge(MergeConcurrentObserver parent, IDisposable cancel)
				{
				}

				[Token(Token = "0x60021F0")]
				public override void OnNext(T value)
				{
				}

				[Token(Token = "0x60021F1")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021F2")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly MergeObservable<T> parent;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<IObservable<T>> q;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int activeCount;

			[Token(Token = "0x6001BBB")]
			public MergeConcurrentObserver(MergeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BBC")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BBD")]
			public override void OnNext(IObservable<T> value)
			{
			}

			[Token(Token = "0x6001BBE")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BBF")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001BC0")]
			private void Subscribe(IObservable<T> innerSource)
			{
			}
		}

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<IObservable<T>> sources;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int maxConcurrent;

		[Token(Token = "0x6000D1E")]
		public MergeObservable(IObservable<IObservable<T>> sources, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000D1F")]
		public MergeObservable(IObservable<IObservable<T>> sources, int maxConcurrent, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000D20")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E0")]
	internal class NeverObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x6000D21")]
		public NeverObservable()
		{
		}

		[Token(Token = "0x6000D22")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	internal class ImmutableNeverObservable<T> : IObservable<T>, IOptimizedObservable<T>
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ImmutableNeverObservable<T> Instance;

		[Token(Token = "0x6000D23")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		public ImmutableNeverObservable()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	internal class ObserveOnObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004A4")]
		private class ObserveOn : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200061A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFE0", Offset = "0x12ABFE0")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x40014A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SingleAssignmentDisposable self;

				[Token(Token = "0x40014A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ObserveOn <>4__this;

				[Token(Token = "0x40014A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public LinkedListNode<IDisposable> node;

				[Token(Token = "0x40014A7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public T value;

				[Token(Token = "0x60021F3")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x60021F4")]
				internal void <OnNext>b__0()
				{
				}
			}

			[Token(Token = "0x200061B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABFF0", Offset = "0x12ABFF0")]
			private sealed class <>c__DisplayClass6_0
			{
				[Token(Token = "0x40014A8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SingleAssignmentDisposable self;

				[Token(Token = "0x40014A9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ObserveOn <>4__this;

				[Token(Token = "0x40014AA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public LinkedListNode<IDisposable> node;

				[Token(Token = "0x40014AB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Exception error;

				[Token(Token = "0x60021F5")]
				public <>c__DisplayClass6_0()
				{
				}

				[Token(Token = "0x60021F6")]
				internal void <OnError>b__0()
				{
				}
			}

			[Token(Token = "0x200061C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC000", Offset = "0x12AC000")]
			private sealed class <>c__DisplayClass7_0
			{
				[Token(Token = "0x40014AC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SingleAssignmentDisposable self;

				[Token(Token = "0x40014AD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ObserveOn <>4__this;

				[Token(Token = "0x40014AE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public LinkedListNode<IDisposable> node;

				[Token(Token = "0x60021F7")]
				public <>c__DisplayClass7_0()
				{
				}

				[Token(Token = "0x60021F8")]
				internal void <OnCompleted>b__0()
				{
				}
			}

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ObserveOnObservable<T> parent;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly LinkedList<IDisposable> scheduleDisposables;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x6001BC1")]
			public ObserveOn(ObserveOnObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BC2")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BC3")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BC4")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BC5")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001BC6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDF94", Offset = "0x12BDF94")]
			private void <Run>b__4_0()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		private class ObserveOn_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ObserveOnObservable<T> parent;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ISchedulerQueueing scheduler;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BooleanDisposable isDisposed;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action<T> onNext;

			[Token(Token = "0x6001BC7")]
			public ObserveOn_(ObserveOnObservable<T> parent, ISchedulerQueueing scheduler, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BC8")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BC9")]
			private void OnNext_(T value)
			{
			}

			[Token(Token = "0x6001BCA")]
			private void OnError_(Exception error)
			{
			}

			[Token(Token = "0x6001BCB")]
			private void OnCompleted_(Unit _)
			{
			}

			[Token(Token = "0x6001BCC")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BCD")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BCE")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D27")]
		public ObserveOnObservable(IObservable<T> source, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D28")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	internal class OfTypeObservable<TSource, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004A6")]
		private class OfType : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x6001BCF")]
			public OfType(IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BD0")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001BD1")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BD2")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x6000D29")]
		public OfTypeObservable(IObservable<TSource> source)
		{
		}

		[Token(Token = "0x6000D2A")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E4")]
	public abstract class OperatorObservableBase<T> : IObservable<T>, IOptimizedObservable<T>
	{
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5A0", Offset = "0x12AB5A0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SingleAssignmentDisposable subscription;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OperatorObservableBase<T> <>4__this;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x6001BD3")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001BD4")]
			internal void <Subscribe>b__0()
			{
			}
		}

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool isRequiredSubscribeOnCurrentThread;

		[Token(Token = "0x6000D2B")]
		public OperatorObservableBase(bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000D2C")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2D")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000D2E")]
		protected abstract IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel);
	}
	[Token(Token = "0x20001E5")]
	public abstract class OperatorObserverBase<TSource, TResult> : IDisposable, IObserver<TSource>
	{
		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected internal IObserver<TResult> observer;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IDisposable cancel;

		[Token(Token = "0x6000D2F")]
		public OperatorObserverBase(IObserver<TResult> observer, IDisposable cancel)
		{
		}

		[Token(Token = "0x6000D30")]
		public abstract void OnNext(TSource value);

		[Token(Token = "0x6000D31")]
		public abstract void OnError(Exception error);

		[Token(Token = "0x6000D32")]
		public abstract void OnCompleted();

		[Token(Token = "0x6000D33")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	internal class PairwiseObservable<T, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004A8")]
		private class Pairwise : OperatorObserverBase<T, TR>
		{
			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly PairwiseObservable<T, TR> parent;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T prev;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x6001BD5")]
			public Pairwise(PairwiseObservable<T, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BD6")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BD7")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BD8")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, T, TR> selector;

		[Token(Token = "0x6000D34")]
		public PairwiseObservable(IObservable<T> source, Func<T, T, TR> selector)
		{
		}

		[Token(Token = "0x6000D35")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	internal class PairwiseObservable<T> : OperatorObservableBase<Pair<T>>
	{
		[Token(Token = "0x20004A9")]
		private class Pairwise : OperatorObserverBase<T, Pair<T>>
		{
			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T prev;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x6001BD9")]
			public Pairwise(IObserver<Pair<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BDA")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BDB")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BDC")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000D36")]
		public PairwiseObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000D37")]
		protected override IDisposable SubscribeCore(IObserver<Pair<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	internal class RangeObservable : OperatorObservableBase<int>
	{
		[Token(Token = "0x20004AA")]
		private class Range : OperatorObserverBase<int, int>
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x21481FC", Offset = "0x21481FC", VA = "0x21481FC")]
			public Range(IObserver<int> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x21483F0", Offset = "0x21483F0", VA = "0x21483F0", Slot = "8")]
			public override void OnNext(int value)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x2148554", Offset = "0x2148554", VA = "0x2148554", Slot = "9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x2148680", Offset = "0x2148680", VA = "0x2148680", Slot = "10")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5B0", Offset = "0x12AB5B0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RangeObservable <>4__this;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IObserver<int> observer;

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x21481F4", Offset = "0x21481F4", VA = "0x21481F4")]
			public <>c__DisplayClass4_0()
			{
			}
		}

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5C0", Offset = "0x12AB5C0")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x2148264", Offset = "0x2148264", VA = "0x2148264")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x214826C", Offset = "0x214826C", VA = "0x214826C")]
			internal void <SubscribeCore>b__0(Action self)
			{
			}
		}

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int start;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int count;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x213E040", Offset = "0x213E040", VA = "0x213E040")]
		public RangeObservable(int start, int count, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x2147F44", Offset = "0x2147F44", VA = "0x2147F44", Slot = "6")]
		protected override IDisposable SubscribeCore(IObserver<int> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	internal class RefCountObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004AD")]
		private class RefCount : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200061D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC010", Offset = "0x12AC010")]
			private sealed class <>c__DisplayClass2_0
			{
				[Token(Token = "0x40014AF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IDisposable subcription;

				[Token(Token = "0x40014B0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RefCount <>4__this;

				[Token(Token = "0x60021F9")]
				public <>c__DisplayClass2_0()
				{
				}

				[Token(Token = "0x60021FA")]
				internal void <Run>b__0()
				{
				}
			}

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly RefCountObservable<T> parent;

			[Token(Token = "0x6001BE4")]
			public RefCount(RefCountObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BE5")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BE6")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BE7")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BE8")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IConnectableObservable<T> source;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int refCount;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IDisposable connection;

		[Token(Token = "0x6000D3A")]
		public RefCountObservable(IConnectableObservable<T> source)
		{
		}

		[Token(Token = "0x6000D3B")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EA")]
	internal class RepeatObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004AE")]
		private class Repeat : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001BE9")]
			public Repeat(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BEA")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BEB")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BEC")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5D0", Offset = "0x12AB5D0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RepeatObservable<T> <>4__this;

			[Token(Token = "0x6001BED")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001BEE")]
			internal void <SubscribeCore>b__0(Action self)
			{
			}
		}

		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5E0", Offset = "0x12AB5E0")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currentCount;

			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6001BEF")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6001BF0")]
			internal void <SubscribeCore>b__1(Action self)
			{
			}
		}

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T value;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int? repeatCount;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D3C")]
		public RepeatObservable(T value, int? repeatCount, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D3D")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	internal class RepeatSafeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004B1")]
		private class RepeatSafe : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly RepeatSafeObservable<T> parent;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<IObservable<T>> e;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable subscription;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action nextSelf;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isRunNext;

			[Token(Token = "0x6001BF1")]
			public RepeatSafe(RepeatSafeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BF2")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001BF3")]
			private void RecursiveRun(Action self)
			{
			}

			[Token(Token = "0x6001BF4")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BF5")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BF6")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001BF7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFA4", Offset = "0x12BDFA4")]
			private void <Run>b__8_0()
			{
			}
		}

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<IObservable<T>> sources;

		[Token(Token = "0x6000D3E")]
		public RepeatSafeObservable(IEnumerable<IObservable<T>> sources, bool isRequiredSubscribeOnCurrentThread)
		{
		}

		[Token(Token = "0x6000D3F")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EC")]
	internal class ReturnObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004B2")]
		private class Return : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001BF8")]
			public Return(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BF9")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001BFA")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001BFB")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB5F0", Offset = "0x12AB5F0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReturnObservable<T> <>4__this;

			[Token(Token = "0x6001BFC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001BFD")]
			internal void <SubscribeCore>b__0()
			{
			}
		}

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T value;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D40")]
		public ReturnObservable(T value, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D41")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001ED")]
	internal class ImmediateReturnObservable<T> : IObservable<T>, IOptimizedObservable<T>
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T value;

		[Token(Token = "0x6000D42")]
		public ImmediateReturnObservable(T value)
		{
		}

		[Token(Token = "0x6000D43")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		public IDisposable Subscribe(IObserver<T> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EE")]
	internal class ImmutableReturnUnitObservable : IObservable<Unit>, IOptimizedObservable<Unit>
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ImmutableReturnUnitObservable Instance;

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x2147D1C", Offset = "0x2147D1C", VA = "0x2147D1C")]
		private ImmutableReturnUnitObservable()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x2147D24", Offset = "0x2147D24", VA = "0x2147D24", Slot = "5")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x2147D2C", Offset = "0x2147D2C", VA = "0x2147D2C", Slot = "4")]
		public IDisposable Subscribe(IObserver<Unit> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EF")]
	internal class ImmutableReturnTrueObservable : IObservable<bool>, IOptimizedObservable<bool>
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ImmutableReturnTrueObservable Instance;

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x2147B64", Offset = "0x2147B64", VA = "0x2147B64")]
		private ImmutableReturnTrueObservable()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x2147B6C", Offset = "0x2147B6C", VA = "0x2147B6C", Slot = "5")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x2147B74", Offset = "0x2147B74", VA = "0x2147B74", Slot = "4")]
		public IDisposable Subscribe(IObserver<bool> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F0")]
	internal class ImmutableReturnFalseObservable : IObservable<bool>, IOptimizedObservable<bool>
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ImmutableReturnFalseObservable Instance;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x21479AC", Offset = "0x21479AC", VA = "0x21479AC")]
		private ImmutableReturnFalseObservable()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x21479B4", Offset = "0x21479B4", VA = "0x21479B4", Slot = "5")]
		public bool IsRequiredSubscribeOnCurrentThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x21479BC", Offset = "0x21479BC", VA = "0x21479BC", Slot = "4")]
		public IDisposable Subscribe(IObserver<bool> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F1")]
	internal class SampleObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004B4")]
		private class Sample : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SampleObservable<T> parent;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T latestValue;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isUpdated;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isCompleted;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x6001BFE")]
			public Sample(SampleObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001BFF")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C00")]
			private void OnNextTick()
			{
			}

			[Token(Token = "0x6001C01")]
			private void OnNextRecursive(Action<TimeSpan> self)
			{
			}

			[Token(Token = "0x6001C02")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C03")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C04")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan interval;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D51")]
		public SampleObservable(IObservable<T> source, TimeSpan interval, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D52")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F2")]
	internal class SampleObservable<T, T2> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004B5")]
		private class Sample : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200061E")]
			private class SampleTick : IObserver<T2>
			{
				[Token(Token = "0x40014B1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Sample parent;

				[Token(Token = "0x60021FB")]
				public SampleTick(Sample parent)
				{
				}

				[Token(Token = "0x60021FC")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x60021FD")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x60021FE")]
				public void OnNext(T2 _)
				{
				}
			}

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SampleObservable<T, T2> parent;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T latestValue;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isUpdated;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isCompleted;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x6001C05")]
			public Sample(SampleObservable<T, T2> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C06")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C07")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C08")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C09")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T2> intervalSource;

		[Token(Token = "0x6000D53")]
		public SampleObservable(IObservable<T> source, IObservable<T2> intervalSource)
		{
		}

		[Token(Token = "0x6000D54")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F3")]
	internal class ScanObservable<TSource> : OperatorObservableBase<TSource>
	{
		[Token(Token = "0x20004B6")]
		private class Scan : OperatorObserverBase<TSource, TSource>
		{
			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ScanObservable<TSource> parent;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource accumulation;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x6001C0A")]
			public Scan(ScanObservable<TSource> parent, IObserver<TSource> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C0B")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C0C")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C0D")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, TSource, TSource> accumulator;

		[Token(Token = "0x6000D55")]
		public ScanObservable(IObservable<TSource> source, Func<TSource, TSource, TSource> accumulator)
		{
		}

		[Token(Token = "0x6000D56")]
		protected override IDisposable SubscribeCore(IObserver<TSource> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F4")]
	internal class ScanObservable<TSource, TAccumulate> : OperatorObservableBase<TAccumulate>
	{
		[Token(Token = "0x20004B7")]
		private class Scan : OperatorObserverBase<TSource, TAccumulate>
		{
			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ScanObservable<TSource, TAccumulate> parent;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TAccumulate accumulation;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirst;

			[Token(Token = "0x6001C0E")]
			public Scan(ScanObservable<TSource, TAccumulate> parent, IObserver<TAccumulate> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C0F")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C10")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C11")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TAccumulate seed;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TAccumulate, TSource, TAccumulate> accumulator;

		[Token(Token = "0x6000D57")]
		public ScanObservable(IObservable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> accumulator)
		{
		}

		[Token(Token = "0x6000D58")]
		protected override IDisposable SubscribeCore(IObserver<TAccumulate> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F5")]
	internal interface ISelect<TR>
	{
		[Token(Token = "0x6000D59")]
		IObservable<TR> CombinePredicate(Func<TR, bool> predicate);
	}
	[Token(Token = "0x20001F6")]
	internal class SelectObservable<T, TR> : OperatorObservableBase<TR>, ISelect<TR>
	{
		[Token(Token = "0x20004B8")]
		private class Select : OperatorObserverBase<T, TR>
		{
			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectObservable<T, TR> parent;

			[Token(Token = "0x6001C12")]
			public Select(SelectObservable<T, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C13")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C14")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C15")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004B9")]
		private class Select_ : OperatorObserverBase<T, TR>
		{
			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectObservable<T, TR> parent;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C16")]
			public Select_(SelectObservable<T, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C17")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C18")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C19")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, TR> selector;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, int, TR> selectorWithIndex;

		[Token(Token = "0x6000D5A")]
		public SelectObservable(IObservable<T> source, Func<T, TR> selector)
		{
		}

		[Token(Token = "0x6000D5B")]
		public SelectObservable(IObservable<T> source, Func<T, int, TR> selector)
		{
		}

		[Token(Token = "0x6000D5C")]
		public IObservable<TR> CombinePredicate(Func<TR, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F7")]
	internal class SelectManyObservable<TSource, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004BA")]
		private class SelectManyOuterObserver : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x200061F")]
			private class SelectMany : OperatorObserverBase<TResult, TResult>
			{
				[Token(Token = "0x40014B2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SelectManyOuterObserver parent;

				[Token(Token = "0x40014B3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x60021FF")]
				public SelectMany(SelectManyOuterObserver parent, IDisposable cancel)
				{
				}

				[Token(Token = "0x6002200")]
				public override void OnNext(TResult value)
				{
				}

				[Token(Token = "0x6002201")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002202")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TResult> parent;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x6001C1A")]
			public SelectManyOuterObserver(SelectManyObservable<TSource, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C1B")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C1C")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C1D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C1E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004BB")]
		private class SelectManyObserverWithIndex : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x2000620")]
			private class SelectMany : OperatorObserverBase<TResult, TResult>
			{
				[Token(Token = "0x40014B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SelectManyObserverWithIndex parent;

				[Token(Token = "0x40014B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x6002203")]
				public SelectMany(SelectManyObserverWithIndex parent, IDisposable cancel)
				{
				}

				[Token(Token = "0x6002204")]
				public override void OnNext(TResult value)
				{
				}

				[Token(Token = "0x6002205")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002206")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TResult> parent;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x6001C1F")]
			public SelectManyObserverWithIndex(SelectManyObservable<TSource, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C20")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C21")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C22")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C23")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		private class SelectManyEnumerableObserver : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TResult> parent;

			[Token(Token = "0x6001C24")]
			public SelectManyEnumerableObserver(SelectManyObservable<TSource, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C25")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C26")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C27")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C28")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		private class SelectManyEnumerableObserverWithIndex : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TResult> parent;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C29")]
			public SelectManyEnumerableObserverWithIndex(SelectManyObservable<TSource, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C2A")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C2B")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C2C")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C2D")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, IObservable<TResult>> selector;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, int, IObservable<TResult>> selectorWithIndex;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, IEnumerable<TResult>> selectorEnumerable;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, int, IEnumerable<TResult>> selectorEnumerableWithIndex;

		[Token(Token = "0x6000D5E")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, IObservable<TResult>> selector)
		{
		}

		[Token(Token = "0x6000D5F")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, int, IObservable<TResult>> selector)
		{
		}

		[Token(Token = "0x6000D60")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, IEnumerable<TResult>> selector)
		{
		}

		[Token(Token = "0x6000D61")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, int, IEnumerable<TResult>> selector)
		{
		}

		[Token(Token = "0x6000D62")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F8")]
	internal class SelectManyObservable<TSource, TCollection, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004BE")]
		private class SelectManyOuterObserver : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x2000621")]
			private class SelectMany : OperatorObserverBase<TCollection, TResult>
			{
				[Token(Token = "0x40014B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SelectManyOuterObserver parent;

				[Token(Token = "0x40014B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly TSource sourceValue;

				[Token(Token = "0x40014B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x6002207")]
				public SelectMany(SelectManyOuterObserver parent, TSource value, IDisposable cancel)
				{
				}

				[Token(Token = "0x6002208")]
				public override void OnNext(TCollection value)
				{
				}

				[Token(Token = "0x6002209")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x600220A")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TCollection, TResult> parent;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x6001C2E")]
			public SelectManyOuterObserver(SelectManyObservable<TSource, TCollection, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C2F")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C30")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C31")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C32")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		private class SelectManyObserverWithIndex : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x2000622")]
			private class SelectManyObserver : OperatorObserverBase<TCollection, TResult>
			{
				[Token(Token = "0x40014B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SelectManyObserverWithIndex parent;

				[Token(Token = "0x40014BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly TSource sourceValue;

				[Token(Token = "0x40014BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int sourceIndex;

				[Token(Token = "0x40014BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable cancel;

				[Token(Token = "0x40014BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int index;

				[Token(Token = "0x600220B")]
				public SelectManyObserver(SelectManyObserverWithIndex parent, TSource value, int index, IDisposable cancel)
				{
				}

				[Token(Token = "0x600220C")]
				public override void OnNext(TCollection value)
				{
				}

				[Token(Token = "0x600220D")]
				public override void OnError(Exception error)
				{
				}

				[Token(Token = "0x600220E")]
				public override void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TCollection, TResult> parent;

			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CompositeDisposable collectionDisposable;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceDisposable;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C33")]
			public SelectManyObserverWithIndex(SelectManyObservable<TSource, TCollection, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C34")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C35")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C36")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C37")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004C0")]
		private class SelectManyEnumerableObserver : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TCollection, TResult> parent;

			[Token(Token = "0x6001C38")]
			public SelectManyEnumerableObserver(SelectManyObservable<TSource, TCollection, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C39")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C3A")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C3B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C3C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004C1")]
		private class SelectManyEnumerableObserverWithIndex : OperatorObserverBase<TSource, TResult>
		{
			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectManyObservable<TSource, TCollection, TResult> parent;

			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C3D")]
			public SelectManyEnumerableObserverWithIndex(SelectManyObservable<TSource, TCollection, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C3E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C3F")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001C40")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C41")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, IObservable<TCollection>> collectionSelector;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, int, IObservable<TCollection>> collectionSelectorWithIndex;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, IEnumerable<TCollection>> collectionSelectorEnumerable;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, int, IEnumerable<TCollection>> collectionSelectorEnumerableWithIndex;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, TCollection, TResult> resultSelector;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TSource, int, TCollection, int, TResult> resultSelectorWithIndex;

		[Token(Token = "0x6000D63")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, IObservable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
		{
		}

		[Token(Token = "0x6000D64")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, int, IObservable<TCollection>> collectionSelector, Func<TSource, int, TCollection, int, TResult> resultSelector)
		{
		}

		[Token(Token = "0x6000D65")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
		{
		}

		[Token(Token = "0x6000D66")]
		public SelectManyObservable(IObservable<TSource> source, Func<TSource, int, IEnumerable<TCollection>> collectionSelector, Func<TSource, int, TCollection, int, TResult> resultSelector)
		{
		}

		[Token(Token = "0x6000D67")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F9")]
	internal class SelectWhereObservable<T, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004C2")]
		private class SelectWhere : OperatorObserverBase<T, TR>
		{
			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SelectWhereObservable<T, TR> parent;

			[Token(Token = "0x6001C42")]
			public SelectWhere(SelectWhereObservable<T, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C43")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C44")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C45")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, TR> selector;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TR, bool> predicate;

		[Token(Token = "0x6000D68")]
		public SelectWhereObservable(IObservable<T> source, Func<T, TR> selector, Func<TR, bool> predicate)
		{
		}

		[Token(Token = "0x6000D69")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FA")]
	internal class SingleObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004C3")]
		private class Single : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SingleObservable<T> parent;

			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool seenValue;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T lastValue;

			[Token(Token = "0x6001C46")]
			public Single(SingleObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C47")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C48")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C49")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004C4")]
		private class Single_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SingleObservable<T> parent;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool seenValue;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T lastValue;

			[Token(Token = "0x6001C4A")]
			public Single_(SingleObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C4B")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C4C")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C4D")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool useDefault;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x6000D6A")]
		public SingleObservable(IObservable<T> source, bool useDefault)
		{
		}

		[Token(Token = "0x6000D6B")]
		public SingleObservable(IObservable<T> source, Func<T, bool> predicate, bool useDefault)
		{
		}

		[Token(Token = "0x6000D6C")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FB")]
	internal class SkipObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004C5")]
		private class Skip : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int remaining;

			[Token(Token = "0x6001C4E")]
			public Skip(SkipObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C4F")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C50")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C51")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004C6")]
		private class Skip_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SkipObservable<T> parent;

			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool open;

			[Token(Token = "0x6001C52")]
			public Skip_(SkipObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C53")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C54")]
			private void Tick()
			{
			}

			[Token(Token = "0x6001C55")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C56")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C57")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int count;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan duration;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IScheduler scheduler;

		[Token(Token = "0x6000D6D")]
		public SkipObservable(IObservable<T> source, int count)
		{
		}

		[Token(Token = "0x6000D6E")]
		public SkipObservable(IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D6F")]
		public IObservable<T> Combine(int count)
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		public IObservable<T> Combine(TimeSpan duration)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FC")]
	internal class SkipUntilObservable<T, TOther> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004C7")]
		private class SkipUntilOuterObserver : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000623")]
			private class SkipUntil : IObserver<T>
			{
				[Token(Token = "0x40014BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IObserver<T> observer;

				[Token(Token = "0x40014BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SkipUntilOuterObserver parent;

				[Token(Token = "0x40014C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable subscription;

				[Token(Token = "0x600220F")]
				public SkipUntil(SkipUntilOuterObserver parent, IDisposable subscription)
				{
				}

				[Token(Token = "0x6002210")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x6002211")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002212")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x2000624")]
			private class SkipUntilOther : IObserver<TOther>
			{
				[Token(Token = "0x40014C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SkipUntilOuterObserver parent;

				[Token(Token = "0x40014C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SkipUntil sourceObserver;

				[Token(Token = "0x40014C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable subscription;

				[Token(Token = "0x6002213")]
				public SkipUntilOther(SkipUntilOuterObserver parent, SkipUntil sourceObserver, IDisposable subscription)
				{
				}

				[Token(Token = "0x6002214")]
				public void OnNext(TOther value)
				{
				}

				[Token(Token = "0x6002215")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002216")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SkipUntilObservable<T, TOther> parent;

			[Token(Token = "0x6001C58")]
			public SkipUntilOuterObserver(SkipUntilObservable<T, TOther> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C59")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C5A")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C5B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C5C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TOther> other;

		[Token(Token = "0x6000D72")]
		public SkipUntilObservable(IObservable<T> source, IObservable<TOther> other)
		{
		}

		[Token(Token = "0x6000D73")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FD")]
	internal class SkipWhileObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004C8")]
		private class SkipWhile : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SkipWhileObservable<T> parent;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool endSkip;

			[Token(Token = "0x6001C5D")]
			public SkipWhile(SkipWhileObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C5E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C5F")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C60")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C61")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004C9")]
		private class SkipWhile_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SkipWhileObservable<T> parent;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool endSkip;

			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C62")]
			public SkipWhile_(SkipWhileObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C63")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C64")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C65")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C66")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, int, bool> predicateWithIndex;

		[Token(Token = "0x6000D74")]
		public SkipWhileObservable(IObservable<T> source, Func<T, bool> predicate)
		{
		}

		[Token(Token = "0x6000D75")]
		public SkipWhileObservable(IObservable<T> source, Func<T, int, bool> predicateWithIndex)
		{
		}

		[Token(Token = "0x6000D76")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FE")]
	internal class StartObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CA")]
		private class StartObserver : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly StartObservable<T> parent;

			[Token(Token = "0x6001C67")]
			public StartObserver(StartObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C68")]
			public void Run()
			{
			}

			[Token(Token = "0x6001C69")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C6A")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C6B")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action action;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> function;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan? startAfter;

		[Token(Token = "0x6000D77")]
		public StartObservable(Func<T> function, TimeSpan? startAfter, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D78")]
		public StartObservable(Action action, TimeSpan? startAfter, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D79")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FF")]
	internal class StartWithObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CB")]
		private class StartWith : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly StartWithObservable<T> parent;

			[Token(Token = "0x6001C6C")]
			public StartWith(StartWithObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C6D")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C6E")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C6F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C70")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T value;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> valueFactory;

		[Token(Token = "0x6000D7A")]
		public StartWithObservable(IObservable<T> source, T value)
		{
		}

		[Token(Token = "0x6000D7B")]
		public StartWithObservable(IObservable<T> source, Func<T> valueFactory)
		{
		}

		[Token(Token = "0x6000D7C")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000200")]
	internal class SubscribeOnObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB600", Offset = "0x12AB600")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SerialDisposable d;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SubscribeOnObservable<T> <>4__this;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x6001C71")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001C72")]
			internal void <SubscribeCore>b__0()
			{
			}
		}

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D7D")]
		public SubscribeOnObservable(IObservable<T> source, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D7E")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000201")]
	internal class SwitchObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CD")]
		private class SwitchObserver : OperatorObserverBase<IObservable<T>, T>
		{
			[Token(Token = "0x2000625")]
			private class Switch : IObserver<T>
			{
				[Token(Token = "0x40014C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SwitchObserver parent;

				[Token(Token = "0x40014C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ulong id;

				[Token(Token = "0x6002217")]
				public Switch(SwitchObserver observer, ulong id)
				{
				}

				[Token(Token = "0x6002218")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x6002219")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600221A")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SwitchObservable<T> parent;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SerialDisposable innerSubscription;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong latest;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasLatest;

			[Token(Token = "0x6001C73")]
			public SwitchObserver(SwitchObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C74")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C75")]
			public override void OnNext(IObservable<T> value)
			{
			}

			[Token(Token = "0x6001C76")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C77")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<IObservable<T>> sources;

		[Token(Token = "0x6000D7F")]
		public SwitchObservable(IObservable<IObservable<T>> sources)
		{
		}

		[Token(Token = "0x6000D80")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000202")]
	internal class SynchronizeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CE")]
		private class Synchronize : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SynchronizeObservable<T> parent;

			[Token(Token = "0x6001C78")]
			public Synchronize(SynchronizeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C79")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C7A")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C7B")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x6000D81")]
		public SynchronizeObservable(IObservable<T> source, object gate)
		{
		}

		[Token(Token = "0x6000D82")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000203")]
	internal class SynchronizedObserver<T> : IObserver<T>
	{
		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObserver<T> observer;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x6000D83")]
		public SynchronizedObserver(IObserver<T> observer, object gate)
		{
		}

		[Token(Token = "0x6000D84")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000D85")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000D86")]
		public void OnCompleted()
		{
		}
	}
	[Token(Token = "0x2000204")]
	internal class TakeObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004CF")]
		private class Take : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int rest;

			[Token(Token = "0x6001C7C")]
			public Take(TakeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C7D")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C7E")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C7F")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004D0")]
		private class Take_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeObservable<T> parent;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x6001C80")]
			public Take_(TakeObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C81")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C82")]
			private void Tick()
			{
			}

			[Token(Token = "0x6001C83")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C84")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C85")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int count;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan duration;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly IScheduler scheduler;

		[Token(Token = "0x6000D87")]
		public TakeObservable(IObservable<T> source, int count)
		{
		}

		[Token(Token = "0x6000D88")]
		public TakeObservable(IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D89")]
		public IObservable<T> Combine(int count)
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		public IObservable<T> Combine(TimeSpan duration)
		{
			return null;
		}

		[Token(Token = "0x6000D8B")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	internal class TakeLastObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D1")]
		private class TakeLast : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeLastObservable<T> parent;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T> q;

			[Token(Token = "0x6001C86")]
			public TakeLast(TakeLastObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C87")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C88")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C89")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C8A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004D2")]
		private class TakeLast_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private DateTimeOffset startTime;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeLastObservable<T> parent;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<TimeInterval<T>> q;

			[Token(Token = "0x6001C8B")]
			public TakeLast_(TakeLastObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C8C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C8D")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C8E")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C8F")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001C90")]
			private void Trim(TimeSpan now)
			{
			}
		}

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int count;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan duration;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D8C")]
		public TakeLastObservable(IObservable<T> source, int count)
		{
		}

		[Token(Token = "0x6000D8D")]
		public TakeLastObservable(IObservable<T> source, TimeSpan duration, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D8E")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	internal class TakeUntilObservable<T, TOther> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D3")]
		private class TakeUntil : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000626")]
			private class TakeUntilOther : IObserver<TOther>
			{
				[Token(Token = "0x40014C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly TakeUntil sourceObserver;

				[Token(Token = "0x40014C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable subscription;

				[Token(Token = "0x600221B")]
				public TakeUntilOther(TakeUntil sourceObserver, IDisposable subscription)
				{
				}

				[Token(Token = "0x600221C")]
				public void OnNext(TOther value)
				{
				}

				[Token(Token = "0x600221D")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600221E")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeUntilObservable<T, TOther> parent;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object gate;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool open;

			[Token(Token = "0x6001C91")]
			public TakeUntil(TakeUntilObservable<T, TOther> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C92")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C93")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C94")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C95")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TOther> other;

		[Token(Token = "0x6000D8F")]
		public TakeUntilObservable(IObservable<T> source, IObservable<TOther> other)
		{
		}

		[Token(Token = "0x6000D90")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000207")]
	internal class TakeWhileObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D4")]
		private class TakeWhile : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeWhileObservable<T> parent;

			[Token(Token = "0x6001C96")]
			public TakeWhile(TakeWhileObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C97")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C98")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C99")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C9A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004D5")]
		private class TakeWhile_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TakeWhileObservable<T> parent;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001C9B")]
			public TakeWhile_(TakeWhileObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001C9C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001C9D")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001C9E")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001C9F")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, int, bool> predicateWithIndex;

		[Token(Token = "0x6000D91")]
		public TakeWhileObservable(IObservable<T> source, Func<T, bool> predicate)
		{
		}

		[Token(Token = "0x6000D92")]
		public TakeWhileObservable(IObservable<T> source, Func<T, int, bool> predicateWithIndex)
		{
		}

		[Token(Token = "0x6000D93")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000208")]
	internal class ThrottleObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D6")]
		private class Throttle : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000627")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC020", Offset = "0x12AC020")]
			private sealed class <>c__DisplayClass9_0
			{
				[Token(Token = "0x40014C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Throttle <>4__this;

				[Token(Token = "0x40014C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ulong currentid;

				[Token(Token = "0x600221F")]
				public <>c__DisplayClass9_0()
				{
				}

				[Token(Token = "0x6002220")]
				internal void <OnNext>b__0()
				{
				}
			}

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThrottleObservable<T> parent;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T latestValue;

			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasValue;

			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable cancelable;

			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong id;

			[Token(Token = "0x6001CA0")]
			public Throttle(ThrottleObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CA1")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CA2")]
			private void OnNext(ulong currentid)
			{
			}

			[Token(Token = "0x6001CA3")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CA4")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CA5")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan dueTime;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D94")]
		public ThrottleObservable(IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D95")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	internal class ThrottleFirstObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D7")]
		private class ThrottleFirst : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThrottleFirstObservable<T> parent;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool open;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable cancelable;

			[Token(Token = "0x6001CA6")]
			public ThrottleFirst(ThrottleFirstObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CA7")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CA8")]
			private void OnNext()
			{
			}

			[Token(Token = "0x6001CA9")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CAA")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CAB")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan dueTime;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D96")]
		public ThrottleFirstObservable(IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D97")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020A")]
	internal class ThrowObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004D8")]
		private class Throw : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001CAC")]
			public Throw(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CAD")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CAE")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CAF")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB610", Offset = "0x12AB610")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IObserver<T> observer;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ThrowObservable<T> <>4__this;

			[Token(Token = "0x6001CB0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001CB1")]
			internal void <SubscribeCore>b__0()
			{
			}
		}

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Exception error;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D98")]
		public ThrowObservable(Exception error, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D99")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	internal class TimeIntervalObservable<T> : OperatorObservableBase<TimeInterval<T>>
	{
		[Token(Token = "0x20004DA")]
		private class TimeInterval : OperatorObserverBase<T, TimeInterval<T>>
		{
			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TimeIntervalObservable<T> parent;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private DateTimeOffset lastTime;

			[Token(Token = "0x6001CB2")]
			public TimeInterval(TimeIntervalObservable<T> parent, IObserver<TimeInterval<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CB3")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CB4")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CB5")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D9A")]
		public TimeIntervalObservable(IObservable<T> source, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D9B")]
		protected override IDisposable SubscribeCore(IObserver<TimeInterval<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	internal class TimeoutObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004DB")]
		private class Timeout : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC030", Offset = "0x12AC030")]
			private sealed class <>c__DisplayClass8_0
			{
				[Token(Token = "0x40014CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Timeout <>4__this;

				[Token(Token = "0x40014CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ulong timerId;

				[Token(Token = "0x6002221")]
				public <>c__DisplayClass8_0()
				{
				}

				[Token(Token = "0x6002222")]
				internal void <RunTimer>b__0()
				{
				}
			}

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TimeoutObservable<T> parent;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong objectId;

			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isTimeout;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable timerSubscription;

			[Token(Token = "0x6001CB6")]
			public Timeout(TimeoutObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CB7")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CB8")]
			private IDisposable RunTimer(ulong timerId)
			{
				return null;
			}

			[Token(Token = "0x6001CB9")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CBA")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CBB")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		private class Timeout_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TimeoutObservable<T> parent;

			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFinished;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable timerSubscription;

			[Token(Token = "0x6001CBC")]
			public Timeout_(TimeoutObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CBD")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CBE")]
			private void OnNext()
			{
			}

			[Token(Token = "0x6001CBF")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CC0")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CC1")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan? dueTime;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DateTimeOffset? dueTimeDT;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D9C")]
		public TimeoutObservable(IObservable<T> source, TimeSpan dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D9D")]
		public TimeoutObservable(IObservable<T> source, DateTimeOffset dueTime, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000D9E")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020D")]
	internal class TimerObservable : OperatorObservableBase<long>
	{
		[Token(Token = "0x20004DD")]
		private class Timer : OperatorObserverBase<long, long>
		{
			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private long index;

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x2B7D2E4", Offset = "0x2B7D2E4", VA = "0x2B7D2E4")]
			public Timer(IObserver<long> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x2B7CCDC", Offset = "0x2B7CCDC", VA = "0x2B7CCDC")]
			public void OnNext()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x2B7D34C", Offset = "0x2B7D34C", VA = "0x2B7D34C", Slot = "8")]
			public override void OnNext(long value)
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x2B7D350", Offset = "0x2B7D350", VA = "0x2B7D350", Slot = "9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x2B7D47C", Offset = "0x2B7D47C", VA = "0x2B7D47C", Slot = "10")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB620", Offset = "0x12AB620")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Timer timerObserver;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TimerObservable <>4__this;

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x2B7CC98", Offset = "0x2B7CC98", VA = "0x2B7CC98")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x2B7CCA0", Offset = "0x2B7CCA0", VA = "0x2B7CCA0")]
			internal void <SubscribeCore>b__0()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB630", Offset = "0x12AB630")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ISchedulerPeriodic periodicScheduler;

			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x2B7CE48", Offset = "0x2B7CE48", VA = "0x2B7CE48")]
			public <>c__DisplayClass6_1()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB640", Offset = "0x12AB640")]
		private sealed class <>c__DisplayClass6_2
		{
			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SerialDisposable disposable;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_1 CS$<>8__locals2;

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x2B7CE50", Offset = "0x2B7CE50", VA = "0x2B7CE50")]
			public <>c__DisplayClass6_2()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x2B7CE58", Offset = "0x2B7CE58", VA = "0x2B7CE58")]
			internal void <SubscribeCore>b__1()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB650", Offset = "0x12AB650")]
		private sealed class <>c__DisplayClass6_3
		{
			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TimeSpan timeP;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_1 CS$<>8__locals3;

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x2B7D258", Offset = "0x2B7D258", VA = "0x2B7D258")]
			public <>c__DisplayClass6_3()
			{
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x2B7D260", Offset = "0x2B7D260", VA = "0x2B7D260")]
			internal void <SubscribeCore>b__2(Action<TimeSpan> self)
			{
			}
		}

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly DateTimeOffset? dueTimeA;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly TimeSpan? dueTimeB;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly TimeSpan? period;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x213E888", Offset = "0x213E888", VA = "0x213E888")]
		public TimerObservable(DateTimeOffset dueTime, TimeSpan? period, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x213E688", Offset = "0x213E688", VA = "0x213E688")]
		public TimerObservable(TimeSpan dueTime, TimeSpan? period, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x2148790", Offset = "0x2148790", VA = "0x2148790", Slot = "6")]
		protected override IDisposable SubscribeCore(IObserver<long> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020E")]
	internal class TimestampObservable<T> : OperatorObservableBase<Timestamped<T>>
	{
		[Token(Token = "0x20004E2")]
		private class Timestamp : OperatorObserverBase<T, Timestamped<T>>
		{
			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TimestampObservable<T> parent;

			[Token(Token = "0x6001CCE")]
			public Timestamp(TimestampObservable<T> parent, IObserver<Timestamped<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CCF")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CD0")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CD1")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000DA2")]
		public TimestampObservable(IObservable<T> source, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000DA3")]
		protected override IDisposable SubscribeCore(IObserver<Timestamped<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	internal class ToArrayObservable<TSource> : OperatorObservableBase<TSource[]>
	{
		[Token(Token = "0x20004E3")]
		private class ToArray : OperatorObserverBase<TSource, TSource[]>
		{
			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<TSource> list;

			[Token(Token = "0x6001CD2")]
			public ToArray(IObserver<TSource[]> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CD3")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001CD4")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CD5")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x6000DA4")]
		public ToArrayObservable(IObservable<TSource> source)
		{
		}

		[Token(Token = "0x6000DA5")]
		protected override IDisposable SubscribeCore(IObserver<TSource[]> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000210")]
	internal class ToListObservable<TSource> : OperatorObservableBase<IList<TSource>>
	{
		[Token(Token = "0x20004E4")]
		private class ToList : OperatorObserverBase<TSource, IList<TSource>>
		{
			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<TSource> list;

			[Token(Token = "0x6001CD6")]
			public ToList(IObserver<IList<TSource>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CD7")]
			public override void OnNext(TSource value)
			{
			}

			[Token(Token = "0x6001CD8")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CD9")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TSource> source;

		[Token(Token = "0x6000DA6")]
		public ToListObservable(IObservable<TSource> source)
		{
		}

		[Token(Token = "0x6000DA7")]
		protected override IDisposable SubscribeCore(IObserver<IList<TSource>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	internal class ToObservableObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004E5")]
		private class ToObservable : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000629")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC040", Offset = "0x12AC040")]
			private sealed class <>c__DisplayClass2_0
			{
				[Token(Token = "0x40014CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SingleAssignmentDisposable flag;

				[Token(Token = "0x40014CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IEnumerator<T> e;

				[Token(Token = "0x40014CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public ToObservable <>4__this;

				[Token(Token = "0x6002223")]
				public <>c__DisplayClass2_0()
				{
				}

				[Token(Token = "0x6002224")]
				internal void <Run>b__0(Action self)
				{
				}
			}

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ToObservableObservable<T> parent;

			[Token(Token = "0x6001CDA")]
			public ToObservable(ToObservableObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CDB")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CDC")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CDD")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CDE")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<T> source;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IScheduler scheduler;

		[Token(Token = "0x6000DA8")]
		public ToObservableObservable(IEnumerable<T> source, IScheduler scheduler)
		{
		}

		[Token(Token = "0x6000DA9")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000212")]
	internal class Wait<T> : IObserver<T>
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan InfiniteTimeSpan;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly TimeSpan timeout;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ManualResetEvent semaphore;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool seenValue;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception ex;

		[Token(Token = "0x6000DAA")]
		public Wait(IObservable<T> source, TimeSpan timeout)
		{
		}

		[Token(Token = "0x6000DAB")]
		public T Run()
		{
			return (T)null;
		}

		[Token(Token = "0x6000DAC")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000DAD")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000DAE")]
		public void OnCompleted()
		{
		}
	}
	[Token(Token = "0x2000213")]
	internal class WhenAllObservable<T> : OperatorObservableBase<T[]>
	{
		[Token(Token = "0x20004E6")]
		private class WhenAll : OperatorObserverBase<T[], T[]>
		{
			[Token(Token = "0x200062A")]
			private class WhenAllCollectionObserver : IObserver<T>
			{
				[Token(Token = "0x40014CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly WhenAll parent;

				[Token(Token = "0x40014D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int index;

				[Token(Token = "0x40014D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private bool isCompleted;

				[Token(Token = "0x6002225")]
				public WhenAllCollectionObserver(WhenAll parent, int index)
				{
				}

				[Token(Token = "0x6002226")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x6002227")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002228")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IObservable<T>[] sources;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int completedCount;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int length;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] values;

			[Token(Token = "0x6001CDF")]
			public WhenAll(IObservable<T>[] sources, IObserver<T[]> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CE0")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CE1")]
			public override void OnNext(T[] value)
			{
			}

			[Token(Token = "0x6001CE2")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CE3")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004E7")]
		private class WhenAll_ : OperatorObserverBase<T[], T[]>
		{
			[Token(Token = "0x200062B")]
			private class WhenAllCollectionObserver : IObserver<T>
			{
				[Token(Token = "0x40014D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly WhenAll_ parent;

				[Token(Token = "0x40014D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int index;

				[Token(Token = "0x40014D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private bool isCompleted;

				[Token(Token = "0x6002229")]
				public WhenAllCollectionObserver(WhenAll_ parent, int index)
				{
				}

				[Token(Token = "0x600222A")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x600222B")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600222C")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IList<IObservable<T>> sources;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int completedCount;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int length;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] values;

			[Token(Token = "0x6001CE4")]
			public WhenAll_(IList<IObservable<T>> sources, IObserver<T[]> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CE5")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CE6")]
			public override void OnNext(T[] value)
			{
			}

			[Token(Token = "0x6001CE7")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CE8")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T>[] sources;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<IObservable<T>> sourcesEnumerable;

		[Token(Token = "0x6000DB0")]
		public WhenAllObservable(IObservable<T>[] sources)
		{
		}

		[Token(Token = "0x6000DB1")]
		public WhenAllObservable(IEnumerable<IObservable<T>> sources)
		{
		}

		[Token(Token = "0x6000DB2")]
		protected override IDisposable SubscribeCore(IObserver<T[]> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000214")]
	internal class WhenAllObservable : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x20004E8")]
		private class WhenAll : OperatorObserverBase<Unit, Unit>
		{
			[Token(Token = "0x200062C")]
			private class WhenAllCollectionObserver : IObserver<Unit>
			{
				[Token(Token = "0x40014D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private readonly WhenAll parent;

				[Token(Token = "0x40014D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool isCompleted;

				[Token(Token = "0x600222D")]
				[Address(RVA = "0x2B7DFB4", Offset = "0x2B7DFB4", VA = "0x2B7DFB4")]
				public WhenAllCollectionObserver(WhenAll parent)
				{
				}

				[Token(Token = "0x600222E")]
				[Address(RVA = "0x2B7E358", Offset = "0x2B7E358", VA = "0x2B7E358", Slot = "6")]
				public void OnNext(Unit value)
				{
				}

				[Token(Token = "0x600222F")]
				[Address(RVA = "0x2B7E35C", Offset = "0x2B7E35C", VA = "0x2B7E35C", Slot = "5")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002230")]
				[Address(RVA = "0x2B7E418", Offset = "0x2B7E418", VA = "0x2B7E418", Slot = "4")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly IObservable<Unit>[] sources;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly object gate;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int completedCount;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int length;

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x2B7D768", Offset = "0x2B7D768", VA = "0x2B7D768")]
			public WhenAll(IObservable<Unit>[] sources, IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x2B7D804", Offset = "0x2B7D804", VA = "0x2B7D804")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x2B7E050", Offset = "0x2B7E050", VA = "0x2B7E050", Slot = "8")]
			public override void OnNext(Unit value)
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x2B7E11C", Offset = "0x2B7E11C", VA = "0x2B7E11C", Slot = "9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x2B7E248", Offset = "0x2B7E248", VA = "0x2B7E248", Slot = "10")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004E9")]
		private class WhenAll_ : OperatorObserverBase<Unit, Unit>
		{
			[Token(Token = "0x200062D")]
			private class WhenAllCollectionObserver : IObserver<Unit>
			{
				[Token(Token = "0x40014D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private readonly WhenAll_ parent;

				[Token(Token = "0x40014D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool isCompleted;

				[Token(Token = "0x6002231")]
				[Address(RVA = "0x2B7E5B8", Offset = "0x2B7E5B8", VA = "0x2B7E5B8")]
				public WhenAllCollectionObserver(WhenAll_ parent)
				{
				}

				[Token(Token = "0x6002232")]
				[Address(RVA = "0x2B7E8EC", Offset = "0x2B7E8EC", VA = "0x2B7E8EC", Slot = "6")]
				public void OnNext(Unit value)
				{
				}

				[Token(Token = "0x6002233")]
				[Address(RVA = "0x2B7E8F0", Offset = "0x2B7E8F0", VA = "0x2B7E8F0", Slot = "5")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002234")]
				[Address(RVA = "0x2B7E9AC", Offset = "0x2B7E9AC", VA = "0x2B7E9AC", Slot = "4")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly IList<IObservable<Unit>> sources;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly object gate;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int completedCount;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int length;

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x2B7DB28", Offset = "0x2B7DB28", VA = "0x2B7DB28")]
			public WhenAll_(IList<IObservable<Unit>> sources, IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x2B7DBC4", Offset = "0x2B7DBC4", VA = "0x2B7DBC4")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x2B7E5E4", Offset = "0x2B7E5E4", VA = "0x2B7E5E4", Slot = "8")]
			public override void OnNext(Unit value)
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x2B7E6B0", Offset = "0x2B7E6B0", VA = "0x2B7E6B0", Slot = "9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x2B7E7DC", Offset = "0x2B7E7DC", VA = "0x2B7E7DC", Slot = "10")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IObservable<Unit>[] sources;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IEnumerable<IObservable<Unit>> sourcesEnumerable;

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x2B7D58C", Offset = "0x2B7D58C", VA = "0x2B7D58C")]
		public WhenAllObservable(IObservable<Unit>[] sources)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x2B7D5F4", Offset = "0x2B7D5F4", VA = "0x2B7D5F4")]
		public WhenAllObservable(IEnumerable<IObservable<Unit>> sources)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x2B7D65C", Offset = "0x2B7D65C", VA = "0x2B7D65C", Slot = "6")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	internal class WhereObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004EA")]
		private class Where : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly WhereObservable<T> parent;

			[Token(Token = "0x6001CF3")]
			public Where(WhereObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CF4")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CF5")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CF6")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		private class Where_ : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly WhereObservable<T> parent;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x6001CF7")]
			public Where_(WhereObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CF8")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CF9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001CFA")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB660", Offset = "0x12AB660")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WhereObservable<T> <>4__this;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, bool> combinePredicate;

			[Token(Token = "0x6001CFB")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001CFC")]
			internal bool <CombinePredicate>b__0(T x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, int, bool> predicateWithIndex;

		[Token(Token = "0x6000DB6")]
		public WhereObservable(IObservable<T> source, Func<T, bool> predicate)
		{
		}

		[Token(Token = "0x6000DB7")]
		public WhereObservable(IObservable<T> source, Func<T, int, bool> predicateWithIndex)
		{
		}

		[Token(Token = "0x6000DB8")]
		public IObservable<T> CombinePredicate(Func<T, bool> combinePredicate)
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		public IObservable<TR> CombineSelector<TR>(Func<T, TR> selector)
		{
			return null;
		}

		[Token(Token = "0x6000DBA")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	internal class WhereSelectObservable<T, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004ED")]
		private class WhereSelect : OperatorObserverBase<T, TR>
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly WhereSelectObservable<T, TR> parent;

			[Token(Token = "0x6001CFD")]
			public WhereSelect(WhereSelectObservable<T, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001CFE")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001CFF")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D00")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, bool> predicate;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T, TR> selector;

		[Token(Token = "0x6000DBB")]
		public WhereSelectObservable(IObservable<T> source, Func<T, bool> predicate, Func<T, TR> selector)
		{
		}

		[Token(Token = "0x6000DBC")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	internal class WithLatestFromObservable<TLeft, TRight, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004EE")]
		private class WithLatestFrom : OperatorObserverBase<TResult, TResult>
		{
			[Token(Token = "0x200062E")]
			private class LeftObserver : IObserver<TLeft>
			{
				[Token(Token = "0x40014D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly WithLatestFrom parent;

				[Token(Token = "0x6002235")]
				public LeftObserver(WithLatestFrom parent)
				{
				}

				[Token(Token = "0x6002236")]
				public void OnNext(TLeft value)
				{
				}

				[Token(Token = "0x6002237")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002238")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x200062F")]
			private class RightObserver : IObserver<TRight>
			{
				[Token(Token = "0x40014DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly WithLatestFrom parent;

				[Token(Token = "0x40014DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly IDisposable selfSubscription;

				[Token(Token = "0x6002239")]
				public RightObserver(WithLatestFrom parent, IDisposable subscription)
				{
				}

				[Token(Token = "0x600223A")]
				public void OnNext(TRight value)
				{
				}

				[Token(Token = "0x600223B")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600223C")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly WithLatestFromObservable<TLeft, TRight, TResult> parent;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasLatest;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TRight latestValue;

			[Token(Token = "0x6001D01")]
			public WithLatestFrom(WithLatestFromObservable<TLeft, TRight, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D02")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D03")]
			public override void OnNext(TResult value)
			{
			}

			[Token(Token = "0x6001D04")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D05")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TLeft> left;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TRight> right;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TLeft, TRight, TResult> selector;

		[Token(Token = "0x6000DBD")]
		public WithLatestFromObservable(IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
		}

		[Token(Token = "0x6000DBE")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000218")]
	public delegate TR ZipFunc<T1, T2, T3, TR>(T1 arg1, T2 arg2, T3 arg3);
	[Token(Token = "0x2000219")]
	public delegate TR ZipFunc<T1, T2, T3, T4, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4);
	[Token(Token = "0x200021A")]
	public delegate TR ZipFunc<T1, T2, T3, T4, T5, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
	[Token(Token = "0x200021B")]
	public delegate TR ZipFunc<T1, T2, T3, T4, T5, T6, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
	[Token(Token = "0x200021C")]
	public delegate TR ZipFunc<T1, T2, T3, T4, T5, T6, T7, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
	[Token(Token = "0x200021D")]
	internal class ZipObservable<TLeft, TRight, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004EF")]
		private class Zip : OperatorObserverBase<TResult, TResult>
		{
			[Token(Token = "0x2000630")]
			private class LeftZipObserver : IObserver<TLeft>
			{
				[Token(Token = "0x40014DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Zip parent;

				[Token(Token = "0x600223D")]
				public LeftZipObserver(Zip parent)
				{
				}

				[Token(Token = "0x600223E")]
				public void OnNext(TLeft value)
				{
				}

				[Token(Token = "0x600223F")]
				public void OnError(Exception ex)
				{
				}

				[Token(Token = "0x6002240")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x2000631")]
			private class RightZipObserver : IObserver<TRight>
			{
				[Token(Token = "0x40014DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Zip parent;

				[Token(Token = "0x6002241")]
				public RightZipObserver(Zip parent)
				{
				}

				[Token(Token = "0x6002242")]
				public void OnNext(TRight value)
				{
				}

				[Token(Token = "0x6002243")]
				public void OnError(Exception ex)
				{
				}

				[Token(Token = "0x6002244")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<TLeft, TRight, TResult> parent;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<TLeft> leftQ;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool leftCompleted;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<TRight> rightQ;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool rightCompleted;

			[Token(Token = "0x6001D06")]
			public Zip(ZipObservable<TLeft, TRight, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D07")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D08")]
			private void Dequeue()
			{
			}

			[Token(Token = "0x6001D09")]
			public override void OnNext(TResult value)
			{
			}

			[Token(Token = "0x6001D0A")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D0B")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFB4", Offset = "0x12BDFB4")]
			private void <Run>b__7_0()
			{
			}
		}

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TLeft> left;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TRight> right;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TLeft, TRight, TResult> selector;

		[Token(Token = "0x6000DD3")]
		public ZipObservable(IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
		}

		[Token(Token = "0x6000DD4")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200021E")]
	internal class ZipObservable<T> : OperatorObservableBase<IList<T>>
	{
		[Token(Token = "0x20004F0")]
		private class Zip : OperatorObserverBase<IList<T>, IList<T>>
		{
			[Token(Token = "0x2000632")]
			private class ZipObserver : IObserver<T>
			{
				[Token(Token = "0x40014DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly Zip parent;

				[Token(Token = "0x40014DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int index;

				[Token(Token = "0x6002245")]
				public ZipObserver(Zip parent, int index)
				{
				}

				[Token(Token = "0x6002246")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x6002247")]
				public void OnError(Exception ex)
				{
				}

				[Token(Token = "0x6002248")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T> parent;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<T>[] queues;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool[] isDone;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int length;

			[Token(Token = "0x6001D0D")]
			public Zip(ZipObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D0E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D0F")]
			private void Dequeue(int index)
			{
			}

			[Token(Token = "0x6001D10")]
			public override void OnNext(IList<T> value)
			{
			}

			[Token(Token = "0x6001D11")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D12")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFC4", Offset = "0x12BDFC4")]
			private void <Run>b__6_0()
			{
			}
		}

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T>[] sources;

		[Token(Token = "0x6000DD5")]
		public ZipObservable(IObservable<T>[] sources)
		{
		}

		[Token(Token = "0x6000DD6")]
		protected override IDisposable SubscribeCore(IObserver<IList<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200021F")]
	internal class ZipObservable<T1, T2, T3, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F1")]
		private class Zip : NthZipObserverBase<TR>
		{
			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T1, T2, T3, TR> parent;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T1> q1;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T2> q2;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T3> q3;

			[Token(Token = "0x6001D14")]
			public Zip(ZipObservable<T1, T2, T3, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D15")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D16")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D17")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D18")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D19")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D1A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFD4", Offset = "0x12BDFD4")]
			private void <Run>b__6_0()
			{
			}
		}

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipFunc<T1, T2, T3, TR> resultSelector;

		[Token(Token = "0x6000DD7")]
		public ZipObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, ZipFunc<T1, T2, T3, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000DD8")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000220")]
	internal class ZipObservable<T1, T2, T3, T4, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F2")]
		private class Zip : NthZipObserverBase<TR>
		{
			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T1, T2, T3, T4, TR> parent;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T1> q1;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T2> q2;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T3> q3;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T4> q4;

			[Token(Token = "0x6001D1B")]
			public Zip(ZipObservable<T1, T2, T3, T4, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D1C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D1D")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D1E")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D1F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D20")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFE4", Offset = "0x12BDFE4")]
			private void <Run>b__7_0()
			{
			}
		}

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipFunc<T1, T2, T3, T4, TR> resultSelector;

		[Token(Token = "0x6000DD9")]
		public ZipObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, ZipFunc<T1, T2, T3, T4, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000DDA")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000221")]
	internal class ZipObservable<T1, T2, T3, T4, T5, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F3")]
		private class Zip : NthZipObserverBase<TR>
		{
			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T1, T2, T3, T4, T5, TR> parent;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T1> q1;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T2> q2;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T3> q3;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T4> q4;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T5> q5;

			[Token(Token = "0x6001D22")]
			public Zip(ZipObservable<T1, T2, T3, T4, T5, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D23")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D24")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D25")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D26")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D27")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BDFF4", Offset = "0x12BDFF4")]
			private void <Run>b__8_0()
			{
			}
		}

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipFunc<T1, T2, T3, T4, T5, TR> resultSelector;

		[Token(Token = "0x6000DDB")]
		public ZipObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, ZipFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000DDC")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000222")]
	internal class ZipObservable<T1, T2, T3, T4, T5, T6, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F4")]
		private class Zip : NthZipObserverBase<TR>
		{
			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T1, T2, T3, T4, T5, T6, TR> parent;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T1> q1;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T2> q2;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T3> q3;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T4> q4;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T5> q5;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T6> q6;

			[Token(Token = "0x6001D29")]
			public Zip(ZipObservable<T1, T2, T3, T4, T5, T6, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D2A")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D2B")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D2C")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D2D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D2E")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D2F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE004", Offset = "0x12BE004")]
			private void <Run>b__9_0()
			{
			}
		}

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector;

		[Token(Token = "0x6000DDD")]
		public ZipObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, ZipFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000DDE")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000223")]
	internal class ZipObservable<T1, T2, T3, T4, T5, T6, T7, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F5")]
		private class Zip : NthZipObserverBase<TR>
		{
			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T1> q1;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T2> q2;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T3> q3;

			[Token(Token = "0x4000FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T4> q4;

			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T5> q5;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T6> q6;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T7> q7;

			[Token(Token = "0x6001D30")]
			public Zip(ZipObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D31")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D32")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D33")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D34")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D35")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE014", Offset = "0x12BE014")]
			private void <Run>b__10_0()
			{
			}
		}

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T7> source7;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector;

		[Token(Token = "0x6000DDF")]
		public ZipObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, ZipFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000DE0")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000224")]
	internal interface IZipObservable
	{
		[Token(Token = "0x6000DE1")]
		void Dequeue(int index);

		[Token(Token = "0x6000DE2")]
		void Fail(Exception error);

		[Token(Token = "0x6000DE3")]
		void Done(int index);
	}
	[Token(Token = "0x2000225")]
	internal abstract class NthZipObserverBase<T> : OperatorObserverBase<T, T>, IZipObservable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ICollection[] queues;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool[] isDone;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int length;

		[Token(Token = "0x6000DE4")]
		public NthZipObserverBase(IObserver<T> observer, IDisposable cancel)
		{
		}

		[Token(Token = "0x6000DE5")]
		protected void SetQueue(ICollection[] queues)
		{
		}

		[Token(Token = "0x6000DE6")]
		public abstract T GetResult();

		[Token(Token = "0x6000DE7")]
		public void Dequeue(int index)
		{
		}

		[Token(Token = "0x6000DE8")]
		public void Done(int index)
		{
		}

		[Token(Token = "0x6000DE9")]
		public void Fail(Exception error)
		{
		}
	}
	[Token(Token = "0x2000226")]
	internal class ZipObserver<T> : IObserver<T>
	{
		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IZipObservable parent;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int index;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<T> queue;

		[Token(Token = "0x6000DEA")]
		public ZipObserver(object gate, IZipObservable parent, int index, Queue<T> queue)
		{
		}

		[Token(Token = "0x6000DEB")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000DEC")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000DED")]
		public void OnCompleted()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public delegate TR ZipLatestFunc<T1, T2, T3, TR>(T1 arg1, T2 arg2, T3 arg3);
	[Token(Token = "0x2000228")]
	public delegate TR ZipLatestFunc<T1, T2, T3, T4, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4);
	[Token(Token = "0x2000229")]
	public delegate TR ZipLatestFunc<T1, T2, T3, T4, T5, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
	[Token(Token = "0x200022A")]
	public delegate TR ZipLatestFunc<T1, T2, T3, T4, T5, T6, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
	[Token(Token = "0x200022B")]
	public delegate TR ZipLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
	[Token(Token = "0x200022C")]
	internal class ZipLatestObservable<TLeft, TRight, TResult> : OperatorObservableBase<TResult>
	{
		[Token(Token = "0x20004F6")]
		private class ZipLatest : OperatorObserverBase<TResult, TResult>
		{
			[Token(Token = "0x2000633")]
			private class LeftObserver : IObserver<TLeft>
			{
				[Token(Token = "0x40014E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ZipLatest parent;

				[Token(Token = "0x6002249")]
				public LeftObserver(ZipLatest parent)
				{
				}

				[Token(Token = "0x600224A")]
				public void OnNext(TLeft value)
				{
				}

				[Token(Token = "0x600224B")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600224C")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x2000634")]
			private class RightObserver : IObserver<TRight>
			{
				[Token(Token = "0x40014E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ZipLatest parent;

				[Token(Token = "0x600224D")]
				public RightObserver(ZipLatest parent)
				{
				}

				[Token(Token = "0x600224E")]
				public void OnNext(TRight value)
				{
				}

				[Token(Token = "0x600224F")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002250")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<TLeft, TRight, TResult> parent;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TLeft leftValue;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool leftStarted;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool leftCompleted;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TRight rightValue;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool rightStarted;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool rightCompleted;

			[Token(Token = "0x6001D37")]
			public ZipLatest(ZipLatestObservable<TLeft, TRight, TResult> parent, IObserver<TResult> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D38")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D39")]
			public void Publish()
			{
			}

			[Token(Token = "0x6001D3A")]
			public override void OnNext(TResult value)
			{
			}

			[Token(Token = "0x6001D3B")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D3C")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TLeft> left;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<TRight> right;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<TLeft, TRight, TResult> selector;

		[Token(Token = "0x6000E02")]
		public ZipLatestObservable(IObservable<TLeft> left, IObservable<TRight> right, Func<TLeft, TRight, TResult> selector)
		{
		}

		[Token(Token = "0x6000E03")]
		protected override IDisposable SubscribeCore(IObserver<TResult> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200022D")]
	internal class ZipLatestObservable<T> : OperatorObservableBase<IList<T>>
	{
		[Token(Token = "0x20004F7")]
		private class ZipLatest : OperatorObserverBase<IList<T>, IList<T>>
		{
			[Token(Token = "0x2000635")]
			private class ZipLatestObserver : IObserver<T>
			{
				[Token(Token = "0x40014E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ZipLatest parent;

				[Token(Token = "0x40014E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly int index;

				[Token(Token = "0x6002251")]
				public ZipLatestObserver(ZipLatest parent, int index)
				{
				}

				[Token(Token = "0x6002252")]
				public void OnNext(T value)
				{
				}

				[Token(Token = "0x6002253")]
				public void OnError(Exception ex)
				{
				}

				[Token(Token = "0x6002254")]
				public void OnCompleted()
				{
				}
			}

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T> parent;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int length;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] values;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool[] isStarted;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool[] isCompleted;

			[Token(Token = "0x6001D3D")]
			public ZipLatest(ZipLatestObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D3E")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D3F")]
			private void Publish(int index)
			{
			}

			[Token(Token = "0x6001D40")]
			public override void OnNext(IList<T> value)
			{
			}

			[Token(Token = "0x6001D41")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D42")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T>[] sources;

		[Token(Token = "0x6000E04")]
		public ZipLatestObservable(IObservable<T>[] sources)
		{
		}

		[Token(Token = "0x6000E05")]
		protected override IDisposable SubscribeCore(IObserver<IList<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200022E")]
	internal class ZipLatestObservable<T1, T2, T3, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F8")]
		private class ZipLatest : NthZipLatestObserverBase<TR>
		{
			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T1, T2, T3, TR> parent;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T1> c1;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T2> c2;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T3> c3;

			[Token(Token = "0x6001D43")]
			public ZipLatest(int length, ZipLatestObservable<T1, T2, T3, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D44")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D45")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D46")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D47")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D48")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipLatestFunc<T1, T2, T3, TR> resultSelector;

		[Token(Token = "0x6000E06")]
		public ZipLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, ZipLatestFunc<T1, T2, T3, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000E07")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200022F")]
	internal class ZipLatestObservable<T1, T2, T3, T4, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004F9")]
		private class ZipLatest : NthZipLatestObserverBase<TR>
		{
			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T1, T2, T3, T4, TR> parent;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T1> c1;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T2> c2;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T3> c3;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T4> c4;

			[Token(Token = "0x6001D49")]
			public ZipLatest(int length, ZipLatestObservable<T1, T2, T3, T4, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D4A")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D4B")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D4C")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D4D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D4E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipLatestFunc<T1, T2, T3, T4, TR> resultSelector;

		[Token(Token = "0x6000E08")]
		public ZipLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, ZipLatestFunc<T1, T2, T3, T4, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000E09")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000230")]
	internal class ZipLatestObservable<T1, T2, T3, T4, T5, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004FA")]
		private class ZipLatest : NthZipLatestObserverBase<TR>
		{
			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T1, T2, T3, T4, T5, TR> parent;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T1> c1;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T2> c2;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T3> c3;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T4> c4;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T5> c5;

			[Token(Token = "0x6001D4F")]
			public ZipLatest(int length, ZipLatestObservable<T1, T2, T3, T4, T5, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D50")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D51")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D52")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D53")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D54")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector;

		[Token(Token = "0x6000E0A")]
		public ZipLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, ZipLatestFunc<T1, T2, T3, T4, T5, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000E0B")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	internal class ZipLatestObservable<T1, T2, T3, T4, T5, T6, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004FB")]
		private class ZipLatest : NthZipLatestObserverBase<TR>
		{
			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T1, T2, T3, T4, T5, T6, TR> parent;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T1> c1;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T2> c2;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T3> c3;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T4> c4;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T5> c5;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T6> c6;

			[Token(Token = "0x6001D55")]
			public ZipLatest(int length, ZipLatestObservable<T1, T2, T3, T4, T5, T6, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D56")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D57")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D58")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D59")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D5A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector;

		[Token(Token = "0x6000E0C")]
		public ZipLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, ZipLatestFunc<T1, T2, T3, T4, T5, T6, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000E0D")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000232")]
	internal class ZipLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> : OperatorObservableBase<TR>
	{
		[Token(Token = "0x20004FC")]
		private class ZipLatest : NthZipLatestObserverBase<TR>
		{
			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ZipLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T1> c1;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T2> c2;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T3> c3;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T4> c4;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T5> c5;

			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T6> c6;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ZipLatestObserver<T7> c7;

			[Token(Token = "0x6001D5B")]
			public ZipLatest(int length, ZipLatestObservable<T1, T2, T3, T4, T5, T6, T7, TR> parent, IObserver<TR> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D5C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D5D")]
			public override TR GetResult()
			{
				return (TR)null;
			}

			[Token(Token = "0x6001D5E")]
			public override void OnNext(TR value)
			{
			}

			[Token(Token = "0x6001D5F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D60")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T1> source1;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T2> source2;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T3> source3;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T4> source4;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T5> source5;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T6> source6;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IObservable<T7> source7;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ZipLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector;

		[Token(Token = "0x6000E0E")]
		public ZipLatestObservable(IObservable<T1> source1, IObservable<T2> source2, IObservable<T3> source3, IObservable<T4> source4, IObservable<T5> source5, IObservable<T6> source6, IObservable<T7> source7, ZipLatestFunc<T1, T2, T3, T4, T5, T6, T7, TR> resultSelector)
		{
		}

		[Token(Token = "0x6000E0F")]
		protected override IDisposable SubscribeCore(IObserver<TR> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000233")]
	internal interface IZipLatestObservable
	{
		[Token(Token = "0x6000E10")]
		void Publish(int index);

		[Token(Token = "0x6000E11")]
		void Fail(Exception error);

		[Token(Token = "0x6000E12")]
		void Done(int index);
	}
	[Token(Token = "0x2000234")]
	internal abstract class NthZipLatestObserverBase<T> : OperatorObserverBase<T, T>, IZipLatestObservable
	{
		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int length;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool[] isStarted;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool[] isCompleted;

		[Token(Token = "0x6000E13")]
		public NthZipLatestObserverBase(int length, IObserver<T> observer, IDisposable cancel)
		{
		}

		[Token(Token = "0x6000E14")]
		public abstract T GetResult();

		[Token(Token = "0x6000E15")]
		public void Publish(int index)
		{
		}

		[Token(Token = "0x6000E16")]
		public void Done(int index)
		{
		}

		[Token(Token = "0x6000E17")]
		public void Fail(Exception error)
		{
		}
	}
	[Token(Token = "0x2000235")]
	internal class ZipLatestObserver<T> : IObserver<T>
	{
		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object gate;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IZipLatestObservable parent;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int index;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T value;

		[Token(Token = "0x1700019A")]
		public T Value
		{
			[Token(Token = "0x6000E18")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000E19")]
		public ZipLatestObserver(object gate, IZipLatestObservable parent, int index)
		{
		}

		[Token(Token = "0x6000E1A")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000E1B")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000E1C")]
		public void OnCompleted()
		{
		}
	}
	[Token(Token = "0x2000236")]
	internal class BatchFrameObservable<T> : OperatorObservableBase<IList<T>>
	{
		[Token(Token = "0x20004FD")]
		private class BatchFrame : OperatorObserverBase<T, IList<T>>
		{
			[Token(Token = "0x2000636")]
			private class ReusableEnumerator : IEnumerator
			{
				[Token(Token = "0x40014E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly BatchFrame parent;

				[Token(Token = "0x40014E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int currentFrame;

				[Token(Token = "0x170003A9")]
				public object Current
				{
					[Token(Token = "0x6002256")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002255")]
				public ReusableEnumerator(BatchFrame parent)
				{
				}

				[Token(Token = "0x6002257")]
				public bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002258")]
				public void Reset()
				{
				}
			}

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BatchFrameObservable<T> parent;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly BooleanDisposable cancellationToken;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IEnumerator timer;

			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isRunning;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isCompleted;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> list;

			[Token(Token = "0x6001D61")]
			public BatchFrame(BatchFrameObservable<T> parent, IObserver<IList<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D62")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D63")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D64")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D65")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E1D")]
		public BatchFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E1E")]
		protected override IDisposable SubscribeCore(IObserver<IList<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000237")]
	internal class BatchFrameObservable : OperatorObservableBase<Unit>
	{
		[Token(Token = "0x20004FE")]
		private class BatchFrame : OperatorObserverBase<Unit, Unit>
		{
			[Token(Token = "0x2000637")]
			private class ReusableEnumerator : IEnumerator
			{
				[Token(Token = "0x40014E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private readonly BatchFrame parent;

				[Token(Token = "0x40014E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private int currentFrame;

				[Token(Token = "0x170003AA")]
				public object Current
				{
					[Token(Token = "0x600225A")]
					[Address(RVA = "0x21472FC", Offset = "0x21472FC", VA = "0x21472FC", Slot = "5")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002259")]
				[Address(RVA = "0x2146CF4", Offset = "0x2146CF4", VA = "0x2146CF4")]
				public ReusableEnumerator(BatchFrame parent)
				{
				}

				[Token(Token = "0x600225B")]
				[Address(RVA = "0x2147304", Offset = "0x2147304", VA = "0x2147304", Slot = "4")]
				public bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600225C")]
				[Address(RVA = "0x2147560", Offset = "0x2147560", VA = "0x2147560", Slot = "6")]
				public void Reset()
				{
				}
			}

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly BatchFrameObservable parent;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly object gate;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly BooleanDisposable cancellationToken;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly IEnumerator timer;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool isRunning;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool isCompleted;

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x2146B4C", Offset = "0x2146B4C", VA = "0x2146B4C")]
			public BatchFrame(BatchFrameObservable parent, IObserver<Unit> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x2146C2C", Offset = "0x2146C2C", VA = "0x2146C2C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x2146D20", Offset = "0x2146D20", VA = "0x2146D20", Slot = "8")]
			public override void OnNext(Unit value)
			{
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x2146F14", Offset = "0x2146F14", VA = "0x2146F14", Slot = "9")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x2147040", Offset = "0x2147040", VA = "0x2147040", Slot = "10")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IObservable<Unit> source;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int frameCount;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x214029C", Offset = "0x214029C", VA = "0x214029C")]
		public BatchFrameObservable(IObservable<Unit> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x2146ACC", Offset = "0x2146ACC", VA = "0x2146ACC", Slot = "6")]
		protected override IDisposable SubscribeCore(IObserver<Unit> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000238")]
	internal class DelayFrameObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x20004FF")]
		private class DelayFrame : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC050", Offset = "0x12AC050")]
			private sealed class <DrainQueue>d__14 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40014E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x40014E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x40014EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public DelayFrame <>4__this;

				[Token(Token = "0x40014EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int frameCount;

				[Token(Token = "0x40014EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Queue<T> q;

				[Token(Token = "0x170003AB")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002260")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003AC")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002262")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600225D")]
				[DebuggerHidden]
				public <DrainQueue>d__14(int <>1__state)
				{
				}

				[Token(Token = "0x600225E")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600225F")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002261")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DelayFrameObservable<T> parent;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly QueuePool pool;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int runningEnumeratorCount;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool readyDrainEnumerator;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool running;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable sourceSubscription;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Queue<T> currentQueueReference;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool calledCompleted;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasError;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Exception error;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private BooleanDisposable cancelationToken;

			[Token(Token = "0x6001D6B")]
			public DelayFrame(DelayFrameObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D6C")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D6D")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BE024", Offset = "0x12BE024")]
			private IEnumerator DrainQueue(Queue<T> q, int frameCount)
			{
				return null;
			}

			[Token(Token = "0x6001D6E")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D6F")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D70")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x2000500")]
		private class QueuePool
		{
			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<Queue<T>> pool;

			[Token(Token = "0x6001D71")]
			public Queue<T> Get()
			{
				return null;
			}

			[Token(Token = "0x6001D72")]
			public void Return(Queue<T> q)
			{
			}

			[Token(Token = "0x6001D73")]
			public QueuePool()
			{
			}
		}

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E21")]
		public DelayFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E22")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000239")]
	internal class DelayFrameSubscriptionObservable<T> : OperatorObservableBase<T>
	{
		[Serializable]
		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB670", Offset = "0x12AB670")]
		private sealed class <>c
		{
			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<long, IObserver<T>, MultipleAssignmentDisposable, IObservable<T>> <>9__4_0;

			[Token(Token = "0x6001D75")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D76")]
			internal void <SubscribeCore>b__4_0(long _, IObserver<T> o, MultipleAssignmentDisposable disp, IObservable<T> s)
			{
			}
		}

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E23")]
		public DelayFrameSubscriptionObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E24")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	internal class FrameIntervalObservable<T> : OperatorObservableBase<FrameInterval<T>>
	{
		[Token(Token = "0x2000502")]
		private class FrameInterval : OperatorObserverBase<T, FrameInterval<T>>
		{
			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int lastFrame;

			[Token(Token = "0x6001D77")]
			public FrameInterval(IObserver<FrameInterval<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D78")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D79")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D7A")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x6000E25")]
		public FrameIntervalObservable(IObservable<T> source)
		{
		}

		[Token(Token = "0x6000E26")]
		protected override IDisposable SubscribeCore(IObserver<FrameInterval<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023B")]
	internal class FrameTimeIntervalObservable<T> : OperatorObservableBase<TimeInterval<T>>
	{
		[Token(Token = "0x2000503")]
		private class FrameTimeInterval : OperatorObserverBase<T, TimeInterval<T>>
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly FrameTimeIntervalObservable<T> parent;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float lastTime;

			[Token(Token = "0x6001D7B")]
			public FrameTimeInterval(FrameTimeIntervalObservable<T> parent, IObserver<TimeInterval<T>> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D7C")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D7D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D7E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool ignoreTimeScale;

		[Token(Token = "0x6000E27")]
		public FrameTimeIntervalObservable(IObservable<T> source, bool ignoreTimeScale)
		{
		}

		[Token(Token = "0x6000E28")]
		protected override IDisposable SubscribeCore(IObserver<TimeInterval<T>> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023C")]
	internal class FromCoroutineObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000504")]
		private class FromCoroutine : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001D7F")]
			public FromCoroutine(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D80")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D81")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D82")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<IObserver<T>, CancellationToken, IEnumerator> coroutine;

		[Token(Token = "0x6000E29")]
		public FromCoroutineObservable(Func<IObserver<T>, CancellationToken, IEnumerator> coroutine)
		{
		}

		[Token(Token = "0x6000E2A")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023D")]
	internal class FromMicroCoroutineObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000505")]
		private class FromMicroCoroutine : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x6001D83")]
			public FromMicroCoroutine(IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D84")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D85")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D86")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<IObserver<T>, CancellationToken, IEnumerator> coroutine;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E2B")]
		public FromMicroCoroutineObservable(Func<IObserver<T>, CancellationToken, IEnumerator> coroutine, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E2C")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023E")]
	internal class RepeatUntilObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000506")]
		private class RepeatUntil : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x2000639")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC060", Offset = "0x12AC060")]
			private sealed class <SubscribeAfterEndOfFrame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40014ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x40014EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x40014EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public SingleAssignmentDisposable d;

				[Token(Token = "0x40014F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject lifeTimeChecker;

				[Token(Token = "0x40014F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IObservable<T> source;

				[Token(Token = "0x40014F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IObserver<T> observer;

				[Token(Token = "0x170003AD")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002266")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003AE")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002268")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002263")]
				[DebuggerHidden]
				public <SubscribeAfterEndOfFrame>d__13(int <>1__state)
				{
				}

				[Token(Token = "0x6002264")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002265")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002267")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly RepeatUntilObservable<T> parent;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<IObservable<T>> e;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable subscription;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable schedule;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action nextSelf;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isStopped;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isDisposed;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isFirstSubscribe;

			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable stopper;

			[Token(Token = "0x6001D87")]
			public RepeatUntil(RepeatUntilObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D88")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D89")]
			private void RecursiveRun(Action self)
			{
			}

			[Token(Token = "0x6001D8A")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BE088", Offset = "0x12BE088")]
			private static IEnumerator SubscribeAfterEndOfFrame(SingleAssignmentDisposable d, IObservable<T> source, IObserver<T> observer, GameObject lifeTimeChecker)
			{
				return null;
			}

			[Token(Token = "0x6001D8B")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D8C")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D8D")]
			public override void OnCompleted()
			{
			}

			[Token(Token = "0x6001D8E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE0EC", Offset = "0x12BE0EC")]
			private void <Run>b__11_0(Unit _)
			{
			}

			[Token(Token = "0x6001D8F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE0FC", Offset = "0x12BE0FC")]
			private void <Run>b__11_1()
			{
			}
		}

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerable<IObservable<T>> sources;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<Unit> trigger;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly GameObject lifeTimeChecker;

		[Token(Token = "0x6000E2D")]
		public RepeatUntilObservable(IEnumerable<IObservable<T>> sources, IObservable<Unit> trigger, GameObject lifeTimeChecker)
		{
		}

		[Token(Token = "0x6000E2E")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x200023F")]
	internal class SampleFrameObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000507")]
		private class SampleFrame : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200063A")]
			private class SampleFrameTick : IObserver<long>
			{
				[Token(Token = "0x40014F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly SampleFrame parent;

				[Token(Token = "0x6002269")]
				public SampleFrameTick(SampleFrame parent)
				{
				}

				[Token(Token = "0x600226A")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x600226B")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x600226C")]
				public void OnNext(long _)
				{
				}
			}

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly SampleFrameObservable<T> parent;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T latestValue;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isUpdated;

			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isCompleted;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x6001D90")]
			public SampleFrame(SampleFrameObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D91")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D92")]
			private void OnNextTick(long _)
			{
			}

			[Token(Token = "0x6001D93")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D94")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D95")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E2F")]
		public SampleFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E30")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000240")]
	internal class SubscribeOnMainThreadObservable<T> : OperatorObservableBase<T>
	{
		[Serializable]
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB680", Offset = "0x12AB680")]
		private sealed class <>c
		{
			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<long, IObserver<T>, SerialDisposable, IObservable<T>> <>9__3_0;

			[Token(Token = "0x6001D97")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D98")]
			internal void <SubscribeCore>b__3_0(long _, IObserver<T> o, SerialDisposable disp, IObservable<T> s)
			{
			}
		}

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<long> subscribeTrigger;

		[Token(Token = "0x6000E31")]
		public SubscribeOnMainThreadObservable(IObservable<T> source, IObservable<long> subscribeTrigger)
		{
		}

		[Token(Token = "0x6000E32")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000241")]
	internal class ThrottleFirstFrameObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x2000509")]
		private class ThrottleFirstFrame : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200063B")]
			private class ThrottleFirstFrameTick : IObserver<long>
			{
				[Token(Token = "0x40014F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ThrottleFirstFrame parent;

				[Token(Token = "0x600226D")]
				public ThrottleFirstFrameTick(ThrottleFirstFrame parent)
				{
				}

				[Token(Token = "0x600226E")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x600226F")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002270")]
				public void OnNext(long _)
				{
				}
			}

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThrottleFirstFrameObservable<T> parent;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool open;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable cancelable;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ThrottleFirstFrameTick tick;

			[Token(Token = "0x6001D99")]
			public ThrottleFirstFrame(ThrottleFirstFrameObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001D9A")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001D9B")]
			private void OnNext()
			{
			}

			[Token(Token = "0x6001D9C")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001D9D")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001D9E")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E33")]
		public ThrottleFirstFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E34")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000242")]
	internal class ThrottleFrameObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200050A")]
		private class ThrottleFrame : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200063C")]
			private class ThrottleFrameTick : IObserver<long>
			{
				[Token(Token = "0x40014F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ThrottleFrame parent;

				[Token(Token = "0x40014F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ulong currentid;

				[Token(Token = "0x6002271")]
				public ThrottleFrameTick(ThrottleFrame parent, ulong currentid)
				{
				}

				[Token(Token = "0x6002272")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x6002273")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002274")]
				public void OnNext(long _)
				{
				}
			}

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThrottleFrameObservable<T> parent;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T latestValue;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool hasValue;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable cancelable;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong id;

			[Token(Token = "0x6001D9F")]
			public ThrottleFrame(ThrottleFrameObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001DA0")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001DA1")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001DA2")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001DA3")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E35")]
		public ThrottleFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E36")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	internal class TimeoutFrameObservable<T> : OperatorObservableBase<T>
	{
		[Token(Token = "0x200050B")]
		private class TimeoutFrame : OperatorObserverBase<T, T>
		{
			[Token(Token = "0x200063D")]
			private class TimeoutFrameTick : IObserver<long>
			{
				[Token(Token = "0x40014F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly TimeoutFrame parent;

				[Token(Token = "0x40014F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ulong timerId;

				[Token(Token = "0x6002275")]
				public TimeoutFrameTick(TimeoutFrame parent, ulong timerId)
				{
				}

				[Token(Token = "0x6002276")]
				public void OnCompleted()
				{
				}

				[Token(Token = "0x6002277")]
				public void OnError(Exception error)
				{
				}

				[Token(Token = "0x6002278")]
				public void OnNext(long _)
				{
				}
			}

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TimeoutFrameObservable<T> parent;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object gate;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ulong objectId;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isTimeout;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SingleAssignmentDisposable sourceSubscription;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SerialDisposable timerSubscription;

			[Token(Token = "0x6001DA4")]
			public TimeoutFrame(TimeoutFrameObservable<T> parent, IObserver<T> observer, IDisposable cancel)
			{
			}

			[Token(Token = "0x6001DA5")]
			public IDisposable Run()
			{
				return null;
			}

			[Token(Token = "0x6001DA6")]
			private IDisposable RunTimer(ulong timerId)
			{
				return null;
			}

			[Token(Token = "0x6001DA7")]
			public override void OnNext(T value)
			{
			}

			[Token(Token = "0x6001DA8")]
			public override void OnError(Exception error)
			{
			}

			[Token(Token = "0x6001DA9")]
			public override void OnCompleted()
			{
			}
		}

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IObservable<T> source;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int frameCount;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly FrameCountType frameCountType;

		[Token(Token = "0x6000E37")]
		public TimeoutFrameObservable(IObservable<T> source, int frameCount, FrameCountType frameCountType)
		{
		}

		[Token(Token = "0x6000E38")]
		protected override IDisposable SubscribeCore(IObserver<T> observer, IDisposable cancel)
		{
			return null;
		}
	}
}
namespace UniRx.InternalUtil
{
	[Token(Token = "0x2000244")]
	internal sealed class AsyncLock : IDisposable
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<Action> queue;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isAcquired;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool hasFaulted;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x2138C5C", Offset = "0x2138C5C", VA = "0x2138C5C")]
		public void Wait(Action action)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x2139004", Offset = "0x2139004", VA = "0x2139004", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x21390D0", Offset = "0x21390D0", VA = "0x21390D0")]
		public AsyncLock()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class ImmutableList<T>
	{
		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ImmutableList<T> Empty;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x1700019B")]
		public T[] Data
		{
			[Token(Token = "0x6000E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3D")]
		private ImmutableList()
		{
		}

		[Token(Token = "0x6000E3E")]
		public ImmutableList(T[] data)
		{
		}

		[Token(Token = "0x6000E3F")]
		public ImmutableList<T> Add(T value)
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		public ImmutableList<T> Remove(T value)
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		public int IndexOf(T value)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000246")]
	public class ListObserver<T> : IObserver<T>
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ImmutableList<IObserver<T>> _observers;

		[Token(Token = "0x6000E43")]
		public ListObserver(ImmutableList<IObserver<T>> observers)
		{
		}

		[Token(Token = "0x6000E44")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000E45")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000E46")]
		public void OnNext(T value)
		{
		}

		[Token(Token = "0x6000E47")]
		internal IObserver<T> Add(IObserver<T> observer)
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		internal IObserver<T> Remove(IObserver<T> observer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000247")]
	public class EmptyObserver<T> : IObserver<T>
	{
		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly EmptyObserver<T> Instance;

		[Token(Token = "0x6000E49")]
		private EmptyObserver()
		{
		}

		[Token(Token = "0x6000E4A")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000E4B")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000E4C")]
		public void OnNext(T value)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class ThrowObserver<T> : IObserver<T>
	{
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ThrowObserver<T> Instance;

		[Token(Token = "0x6000E4E")]
		private ThrowObserver()
		{
		}

		[Token(Token = "0x6000E4F")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000E50")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000E51")]
		public void OnNext(T value)
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class DisposedObserver<T> : IObserver<T>
	{
		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DisposedObserver<T> Instance;

		[Token(Token = "0x6000E53")]
		private DisposedObserver()
		{
		}

		[Token(Token = "0x6000E54")]
		public void OnCompleted()
		{
		}

		[Token(Token = "0x6000E55")]
		public void OnError(Exception error)
		{
		}

		[Token(Token = "0x6000E56")]
		public void OnNext(T value)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class MicroCoroutine
	{
		[Token(Token = "0x40004B5")]
		private const int InitialSize = 16;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly object runningAndQueueLock;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object arrayLock;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<Exception> unhandledExceptionCallback;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int tail;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool running;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator[] coroutines;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<IEnumerator> waitQueue;

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x2139140", Offset = "0x2139140", VA = "0x2139140")]
		public MicroCoroutine(Action<Exception> unhandledExceptionCallback)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x2139214", Offset = "0x2139214", VA = "0x2139214")]
		public void AddCoroutine(IEnumerator enumerator)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x213946C", Offset = "0x213946C", VA = "0x213946C")]
		public void Run()
		{
		}
	}
	[Token(Token = "0x200024B")]
	internal class PriorityQueue<T> where T : IComparable<T>
	{
		[Token(Token = "0x200050C")]
		private struct IndexedItem : IComparable<IndexedItem>
		{
			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T Value;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long Id;

			[Token(Token = "0x6001DAA")]
			public int CompareTo(IndexedItem other)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long _count;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IndexedItem[] _items;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _size;

		[Token(Token = "0x1700019C")]
		public int Count
		{
			[Token(Token = "0x6000E61")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E5B")]
		public PriorityQueue()
		{
		}

		[Token(Token = "0x6000E5C")]
		public PriorityQueue(int capacity)
		{
		}

		[Token(Token = "0x6000E5D")]
		private bool IsHigherPriority(int left, int right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		private void Percolate(int index)
		{
		}

		[Token(Token = "0x6000E5F")]
		private void Heapify()
		{
		}

		[Token(Token = "0x6000E60")]
		private void Heapify(int index)
		{
		}

		[Token(Token = "0x6000E62")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x6000E63")]
		private void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000E64")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6000E65")]
		public void Enqueue(T item)
		{
		}

		[Token(Token = "0x6000E66")]
		public bool Remove(T item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024C")]
	internal class ScheduledItem : IComparable<ScheduledItem>
	{
		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly BooleanDisposable _disposable;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly TimeSpan _dueTime;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _action;

		[Token(Token = "0x1700019D")]
		public TimeSpan DueTime
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x2139D60", Offset = "0x2139D60", VA = "0x2139D60")]
			get
			{
				return default(TimeSpan);
			}
		}

		[Token(Token = "0x1700019E")]
		public IDisposable Cancellation
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x2139F48", Offset = "0x2139F48", VA = "0x2139F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsCanceled
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x2139F50", Offset = "0x2139F50", VA = "0x2139F50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x2139CE0", Offset = "0x2139CE0", VA = "0x2139CE0")]
		public ScheduledItem(Action action, TimeSpan dueTime)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x2139D68", Offset = "0x2139D68", VA = "0x2139D68")]
		public void Invoke()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x2139DA0", Offset = "0x2139DA0", VA = "0x2139DA0", Slot = "4")]
		public int CompareTo(ScheduledItem other)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x2139DE0", Offset = "0x2139DE0", VA = "0x2139DE0")]
		public static bool operator <(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x2139E2C", Offset = "0x2139E2C", VA = "0x2139E2C")]
		public static bool operator <=(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x2139E7C", Offset = "0x2139E7C", VA = "0x2139E7C")]
		public static bool operator >(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x2139ECC", Offset = "0x2139ECC", VA = "0x2139ECC")]
		public static bool operator >=(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x2139F1C", Offset = "0x2139F1C", VA = "0x2139F1C")]
		public static bool operator ==(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x2139F28", Offset = "0x2139F28", VA = "0x2139F28")]
		public static bool operator !=(ScheduledItem left, ScheduledItem right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x2139F34", Offset = "0x2139F34", VA = "0x2139F34", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x2139F40", Offset = "0x2139F40", VA = "0x2139F40", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200024D")]
	internal class SchedulerQueue
	{
		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PriorityQueue<ScheduledItem> _queue;

		[Token(Token = "0x170001A0")]
		public int Count
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x213A038", Offset = "0x213A038", VA = "0x213A038")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x2139F6C", Offset = "0x2139F6C", VA = "0x2139F6C")]
		public SchedulerQueue()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x2139F74", Offset = "0x2139F74", VA = "0x2139F74")]
		public SchedulerQueue(int capacity)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x213A088", Offset = "0x213A088", VA = "0x213A088")]
		public void Enqueue(ScheduledItem scheduledItem)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x213A0F0", Offset = "0x213A0F0", VA = "0x213A0F0")]
		public bool Remove(ScheduledItem scheduledItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x213A158", Offset = "0x213A158", VA = "0x213A158")]
		public ScheduledItem Dequeue()
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x213A1B0", Offset = "0x213A1B0", VA = "0x213A1B0")]
		public ScheduledItem Peek()
		{
			return null;
		}
	}
	[Token(Token = "0x200024E")]
	public class ThreadSafeQueueWorker
	{
		[Token(Token = "0x40004C4")]
		private const int MaxArrayLength = 2146435071;

		[Token(Token = "0x40004C5")]
		private const int InitialSize = 16;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object gate;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool dequing;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int actionListCount;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<object>[] actionList;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object[] actionStates;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int waitingListCount;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<object>[] waitingList;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object[] waitingStates;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x213A208", Offset = "0x213A208", VA = "0x213A208")]
		public void Enqueue(Action<object> action, object state)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x213A57C", Offset = "0x213A57C", VA = "0x213A57C")]
		public void ExecuteAll(Action<Exception> unhandledExceptionCallback)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x213A934", Offset = "0x213A934", VA = "0x213A934")]
		public ThreadSafeQueueWorker()
		{
		}
	}
}
namespace UniRx.Examples
{
	[Token(Token = "0x200024F")]
	public class Sample01_ObservableWWW : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB690", Offset = "0x12AB690")]
		private sealed class <>c
		{
			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__0_0;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Exception> <>9__0_1;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, IObservable<string>> <>9__0_3;

			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string, string, <>f__AnonymousType0<string, string>> <>9__0_4;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<<>f__AnonymousType0<string, string>> <>9__0_5;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<string[]> <>9__0_6;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<float> <>9__0_7;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action<WWWErrorException> <>9__0_2;

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x2132CB8", Offset = "0x2132CB8", VA = "0x2132CB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x2132CC0", Offset = "0x2132CC0", VA = "0x2132CC0")]
			internal void <Start>b__0_0(string x)
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x2132D4C", Offset = "0x2132D4C", VA = "0x2132D4C")]
			internal void <Start>b__0_1(Exception ex)
			{
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x2132DB4", Offset = "0x2132DB4", VA = "0x2132DB4")]
			internal IObservable<string> <Start>b__0_3(string google)
			{
				return null;
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0x2132E04", Offset = "0x2132E04", VA = "0x2132E04")]
			internal <>f__AnonymousType0<string, string> <Start>b__0_4(string google, string bing)
			{
				return null;
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x2132E80", Offset = "0x2132E80", VA = "0x2132E80")]
			internal void <Start>b__0_5(<>f__AnonymousType0<string, string> x)
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x2132F4C", Offset = "0x2132F4C", VA = "0x2132F4C")]
			internal void <Start>b__0_6(string[] xs)
			{
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x2133048", Offset = "0x2133048", VA = "0x2133048")]
			internal void <Start>b__0_7(float x)
			{
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x21330E4", Offset = "0x21330E4", VA = "0x21330E4")]
			internal void <Start>b__0_2(WWWErrorException ex)
			{
			}
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x213239C", Offset = "0x213239C", VA = "0x213239C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x2132C4C", Offset = "0x2132C4C", VA = "0x2132C4C")]
		public Sample01_ObservableWWW()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class Sample02_ObservableTriggers : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6A0", Offset = "0x12AB6A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Unit> <>9__0_0;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__0_1;

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x2133530", Offset = "0x2133530", VA = "0x2133530")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x2133538", Offset = "0x2133538", VA = "0x2133538")]
			internal void <Start>b__0_0(Unit x)
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x21335A4", Offset = "0x21335A4", VA = "0x21335A4")]
			internal void <Start>b__0_1()
			{
			}
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x2133298", Offset = "0x2133298", VA = "0x2133298")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x21334C4", Offset = "0x21334C4", VA = "0x21334C4")]
		public Sample02_ObservableTriggers()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class Sample04_ConvertFromUnityCallback : MonoBehaviour
	{
		[Token(Token = "0x200050F")]
		private class LogCallback
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Condition;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string StackTrace;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LogType LogType;

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x2133CE8", Offset = "0x2133CE8", VA = "0x2133CE8")]
			public LogCallback()
			{
			}
		}

		[Token(Token = "0x2000510")]
		private static class LogHelper
		{
			[Token(Token = "0x200063E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC070", Offset = "0x12AC070")]
			private sealed class <>c__DisplayClass0_0
			{
				[Token(Token = "0x40014F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<LogCallback> h;

				[Token(Token = "0x6002279")]
				[Address(RVA = "0x2133DF4", Offset = "0x2133DF4", VA = "0x2133DF4")]
				public <>c__DisplayClass0_0()
				{
				}

				[Token(Token = "0x600227A")]
				[Address(RVA = "0x2133E14", Offset = "0x2133E14", VA = "0x2133E14")]
				internal void <LogCallbackAsObservable>b__3(string condition, string stackTrace, LogType type)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200063F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC080", Offset = "0x12AC080")]
			private sealed class <>c
			{
				[Token(Token = "0x40014FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40014FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Action<LogCallback>, Application.LogCallback> <>9__0_0;

				[Token(Token = "0x40014FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Action<Application.LogCallback> <>9__0_1;

				[Token(Token = "0x40014FD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Action<Application.LogCallback> <>9__0_2;

				[Token(Token = "0x600227C")]
				[Address(RVA = "0x2133D54", Offset = "0x2133D54", VA = "0x2133D54")]
				public <>c()
				{
				}

				[Token(Token = "0x600227D")]
				[Address(RVA = "0x2133D5C", Offset = "0x2133D5C", VA = "0x2133D5C")]
				internal Application.LogCallback <LogCallbackAsObservable>b__0_0(Action<LogCallback> h)
				{
					return null;
				}

				[Token(Token = "0x600227E")]
				[Address(RVA = "0x2133DFC", Offset = "0x2133DFC", VA = "0x2133DFC")]
				internal void <LogCallbackAsObservable>b__0_1(Application.LogCallback h)
				{
				}

				[Token(Token = "0x600227F")]
				[Address(RVA = "0x2133E08", Offset = "0x2133E08", VA = "0x2133E08")]
				internal void <LogCallbackAsObservable>b__0_2(Application.LogCallback h)
				{
				}
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x2133948", Offset = "0x2133948", VA = "0x2133948")]
			public static IObservable<LogCallback> LogCallbackAsObservable()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6B0", Offset = "0x12AB6B0")]
		private sealed class <>c
		{
			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LogCallback, bool> <>9__2_0;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LogCallback> <>9__2_1;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<LogCallback, bool> <>9__2_2;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<LogCallback> <>9__2_3;

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x2133BD0", Offset = "0x2133BD0", VA = "0x2133BD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x2133BD8", Offset = "0x2133BD8", VA = "0x2133BD8")]
			internal bool <Awake>b__2_0(LogCallback x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x2133BF8", Offset = "0x2133BF8", VA = "0x2133BF8")]
			internal void <Awake>b__2_1(LogCallback x)
			{
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x2133C60", Offset = "0x2133C60", VA = "0x2133C60")]
			internal bool <Awake>b__2_2(LogCallback x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x2133C80", Offset = "0x2133C80", VA = "0x2133C80")]
			internal void <Awake>b__2_3(LogCallback x)
			{
			}
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x2133610", Offset = "0x2133610", VA = "0x2133610")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x2133B64", Offset = "0x2133B64", VA = "0x2133B64")]
		public Sample04_ConvertFromUnityCallback()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class Sample05_ConvertFromCoroutine
	{
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6C0", Offset = "0x12AB6C0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x2133F84", Offset = "0x2133F84", VA = "0x2133F84")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x2134044", Offset = "0x2134044", VA = "0x2134044")]
			internal IEnumerator <GetWWW>b__0(IObserver<string> observer, CancellationToken cancellationToken)
			{
				return null;
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6D0", Offset = "0x12AB6D0")]
		private sealed class <GetWWWCore>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IObserver<string> observer;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WWW <www>5__2;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC6")]
				[Address(RVA = "0x21342FC", Offset = "0x21342FC", VA = "0x21342FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC8")]
				[Address(RVA = "0x2134364", Offset = "0x2134364", VA = "0x2134364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x2134010", Offset = "0x2134010", VA = "0x2134010")]
			[DebuggerHidden]
			public <GetWWWCore>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x213404C", Offset = "0x213404C", VA = "0x213404C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x2134050", Offset = "0x2134050", VA = "0x2134050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x2134304", Offset = "0x2134304", VA = "0x2134304", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x2133EB8", Offset = "0x2133EB8", VA = "0x2133EB8")]
		public static IObservable<string> GetWWW(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x2133F8C", Offset = "0x2133F8C", VA = "0x2133F8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B909C", Offset = "0x12B909C")]
		private static IEnumerator GetWWWCore(string url, IObserver<string> observer, CancellationToken cancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x213403C", Offset = "0x213403C", VA = "0x213403C")]
		public Sample05_ConvertFromCoroutine()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class Sample06_ConvertToCoroutine : MonoBehaviour
	{
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6E0", Offset = "0x12AB6E0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x2134584", Offset = "0x2134584", VA = "0x2134584")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x213458C", Offset = "0x213458C", VA = "0x213458C")]
			internal void <ComplexCoroutineTest>b__0(int x)
			{
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x2134594", Offset = "0x2134594", VA = "0x2134594")]
			internal void <ComplexCoroutineTest>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB6F0", Offset = "0x12AB6F0")]
		private sealed class <ComplexCoroutineTest>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass1_0 <>8__1;

			[Token(Token = "0x17000302")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCF")]
				[Address(RVA = "0x2134944", Offset = "0x2134944", VA = "0x2134944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD1")]
				[Address(RVA = "0x21349AC", Offset = "0x21349AC", VA = "0x21349AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x21343F8", Offset = "0x21343F8", VA = "0x21343F8")]
			[DebuggerHidden]
			public <ComplexCoroutineTest>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x213459C", Offset = "0x213459C", VA = "0x213459C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x21345A0", Offset = "0x21345A0", VA = "0x21345A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x213494C", Offset = "0x213494C", VA = "0x213494C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB700", Offset = "0x12AB700")]
		private sealed class <>c
		{
			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Sample06_ConvertToCoroutine, Transform> <>9__2_0;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, bool> <>9__2_1;

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x213452C", Offset = "0x213452C", VA = "0x213452C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x2134534", Offset = "0x2134534", VA = "0x2134534")]
			internal Transform <TestNewCustomYieldInstruction>b__2_0(Sample06_ConvertToCoroutine x)
			{
				return null;
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x2134550", Offset = "0x2134550", VA = "0x2134550")]
			internal bool <TestNewCustomYieldInstruction>b__2_1(Transform x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB710", Offset = "0x12AB710")]
		private sealed class <TestNewCustomYieldInstruction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sample06_ConvertToCoroutine <>4__this;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ObservableYieldInstruction<string> <o>5__2;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD9")]
				[Address(RVA = "0x2134F18", Offset = "0x2134F18", VA = "0x2134F18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDB")]
				[Address(RVA = "0x2134F80", Offset = "0x2134F80", VA = "0x2134F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x2134494", Offset = "0x2134494", VA = "0x2134494")]
			[DebuggerHidden]
			public <TestNewCustomYieldInstruction>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x21349B4", Offset = "0x21349B4", VA = "0x21349B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x21349B8", Offset = "0x21349B8", VA = "0x21349B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x2134F20", Offset = "0x2134F20", VA = "0x2134F20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x213436C", Offset = "0x213436C", VA = "0x213436C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x2134398", Offset = "0x2134398", VA = "0x2134398")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B9100", Offset = "0x12B9100")]
		private IEnumerator ComplexCoroutineTest()
		{
			return null;
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x2134424", Offset = "0x2134424", VA = "0x2134424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B9164", Offset = "0x12B9164")]
		private IEnumerator TestNewCustomYieldInstruction()
		{
			return null;
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x21344C0", Offset = "0x21344C0", VA = "0x21344C0")]
		public Sample06_ConvertToCoroutine()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class Sample07_OrchestratIEnumerator : MonoBehaviour
	{
		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB720", Offset = "0x12AB720")]
		private sealed class <AsyncA>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDF")]
				[Address(RVA = "0x2135384", Offset = "0x2135384", VA = "0x2135384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE1")]
				[Address(RVA = "0x21353EC", Offset = "0x21353EC", VA = "0x21353EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x2134FE8", Offset = "0x2134FE8", VA = "0x2134FE8")]
			[DebuggerHidden]
			public <AsyncA>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x2135284", Offset = "0x2135284", VA = "0x2135284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x2135288", Offset = "0x2135288", VA = "0x2135288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x213538C", Offset = "0x213538C", VA = "0x213538C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB730", Offset = "0x12AB730")]
		private sealed class <AsyncB>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE5")]
				[Address(RVA = "0x21354F0", Offset = "0x21354F0", VA = "0x21354F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE7")]
				[Address(RVA = "0x2135558", Offset = "0x2135558", VA = "0x2135558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x2135074", Offset = "0x2135074", VA = "0x2135074")]
			[DebuggerHidden]
			public <AsyncB>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x21353F4", Offset = "0x21353F4", VA = "0x21353F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x21353F8", Offset = "0x21353F8", VA = "0x21353F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x21354F8", Offset = "0x21354F8", VA = "0x21354F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x2134F88", Offset = "0x2134F88", VA = "0x2134F88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B91C8", Offset = "0x12B91C8")]
		private IEnumerator AsyncA()
		{
			return null;
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x2135014", Offset = "0x2135014", VA = "0x2135014")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B922C", Offset = "0x12B922C")]
		private IEnumerator AsyncB()
		{
			return null;
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x21350A0", Offset = "0x21350A0", VA = "0x21350A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x213527C", Offset = "0x213527C", VA = "0x213527C")]
		public Sample07_OrchestratIEnumerator()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class Sample08_DetectDoubleClick : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB740", Offset = "0x12AB740")]
		private sealed class <>c
		{
			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<long, bool> <>9__0_0;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IList<long>, bool> <>9__0_1;

			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<IList<long>> <>9__0_2;

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x21359E4", Offset = "0x21359E4", VA = "0x21359E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x21359EC", Offset = "0x21359EC", VA = "0x21359EC")]
			internal bool <Start>b__0_0(long _)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x21359F8", Offset = "0x21359F8", VA = "0x21359F8")]
			internal bool <Start>b__0_1(IList<long> xs)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x2135AB0", Offset = "0x2135AB0", VA = "0x2135AB0")]
			internal void <Start>b__0_2(IList<long> xs)
			{
			}
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x2135560", Offset = "0x2135560", VA = "0x2135560")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x2135978", Offset = "0x2135978", VA = "0x2135978")]
		public Sample08_DetectDoubleClick()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class Sample09_EventHandling : MonoBehaviour
	{
		[Token(Token = "0x200051B")]
		public class MyEventArgs : EventArgs
		{
			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1A48", Offset = "0x12B1A48")]
			private int <MyProperty>k__BackingField;

			[Token(Token = "0x1700030A")]
			public int MyProperty
			{
				[Token(Token = "0x6001DED")]
				[Address(RVA = "0x21366C8", Offset = "0x21366C8", VA = "0x21366C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE29C", Offset = "0x12BE29C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001DEE")]
				[Address(RVA = "0x21366D0", Offset = "0x21366D0", VA = "0x21366D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE2AC", Offset = "0x12BE2AC")]
				set
				{
				}
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x21366D8", Offset = "0x21366D8", VA = "0x21366D8")]
			public MyEventArgs()
			{
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB750", Offset = "0x12AB750")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sample09_EventHandling <>4__this;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int capture;

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x21362D0", Offset = "0x21362D0", VA = "0x21362D0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x2136510", Offset = "0x2136510", VA = "0x2136510")]
			internal void <Start>b__1(EventHandler<MyEventArgs> h)
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x2136528", Offset = "0x2136528", VA = "0x2136528")]
			internal void <Start>b__2(EventHandler<MyEventArgs> h)
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x2136540", Offset = "0x2136540", VA = "0x2136540")]
			internal void <Start>b__4(EventHandler<MyEventArgs> h)
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x2136558", Offset = "0x2136558", VA = "0x2136558")]
			internal void <Start>b__5(EventHandler<MyEventArgs> h)
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x2136570", Offset = "0x2136570", VA = "0x2136570")]
			internal void <Start>b__6(Action<int> h)
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x2136588", Offset = "0x2136588", VA = "0x2136588")]
			internal void <Start>b__7(Action<int> h)
			{
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x21365A0", Offset = "0x21365A0", VA = "0x21365A0")]
			internal EventHandler<MyEventArgs> <Start>b__8(EventHandler<MyEventArgs> h)
			{
				return null;
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x2136630", Offset = "0x2136630", VA = "0x2136630")]
			internal void <Start>b__9(EventHandler<MyEventArgs> h)
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x2136648", Offset = "0x2136648", VA = "0x2136648")]
			internal void <Start>b__10(EventHandler<MyEventArgs> h)
			{
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB760", Offset = "0x12AB760")]
		private sealed class <>c__DisplayClass11_1
		{
			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<MyEventArgs> h;

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x2136508", Offset = "0x2136508", VA = "0x2136508")]
			public <>c__DisplayClass11_1()
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x2136660", Offset = "0x2136660", VA = "0x2136660")]
			internal void <Start>b__11(object sender, MyEventArgs e)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB770", Offset = "0x12AB770")]
		private sealed class <>c
		{
			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EventHandler<MyEventArgs>, EventHandler<MyEventArgs>> <>9__11_0;

			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Action<MyEventArgs>, EventHandler<MyEventArgs>> <>9__11_3;

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x21363E8", Offset = "0x21363E8", VA = "0x21363E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x21363F0", Offset = "0x21363F0", VA = "0x21363F0")]
			internal EventHandler<MyEventArgs> <Start>b__11_0(EventHandler<MyEventArgs> h)
			{
				return null;
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x2136468", Offset = "0x2136468", VA = "0x2136468")]
			internal EventHandler<MyEventArgs> <Start>b__11_3(Action<MyEventArgs> h)
			{
				return null;
			}
		}

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CompositeDisposable disposables;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Subject<int> onBarBar;

		[Token(Token = "0x170001A1")]
		public IObservable<int> OnBarBar
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x2135E64", Offset = "0x2135E64", VA = "0x2135E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000002")]
		public event EventHandler<MyEventArgs> FooBar
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x2135BD4", Offset = "0x2135BD4", VA = "0x2135BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9290", Offset = "0x12B9290")]
			add
			{
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x2135C78", Offset = "0x2135C78", VA = "0x2135C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B92A0", Offset = "0x12B92A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000003")]
		public event Action<int> FooFoo
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x2135D1C", Offset = "0x2135D1C", VA = "0x2135D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B92B0", Offset = "0x12B92B0")]
			add
			{
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x2135DC0", Offset = "0x2135DC0", VA = "0x2135DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B92C0", Offset = "0x12B92C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x2135E6C", Offset = "0x2135E6C", VA = "0x2135E6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x21362D8", Offset = "0x21362D8", VA = "0x21362D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x21362F4", Offset = "0x21362F4", VA = "0x21362F4")]
		public Sample09_EventHandling()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class Sample10_MainThreadDispatcher
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB780", Offset = "0x12AB780")]
		private sealed class <>c
		{
			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__0_0;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<long> <>9__0_1;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Unit> <>9__0_2;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Unit> <>9__0_3;

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x2136E5C", Offset = "0x2136E5C", VA = "0x2136E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x2136E64", Offset = "0x2136E64", VA = "0x2136E64")]
			internal void <Run>b__0_0(object _)
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x2136ED0", Offset = "0x2136ED0", VA = "0x2136ED0")]
			internal void <Run>b__0_1(long x)
			{
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x2136F64", Offset = "0x2136F64", VA = "0x2136F64")]
			internal Unit <Run>b__0_2()
			{
				return default(Unit);
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x2137008", Offset = "0x2137008", VA = "0x2137008")]
			internal void <Run>b__0_3(Unit x)
			{
			}
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB790", Offset = "0x12AB790")]
		private sealed class <TestAsync>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E09")]
				[Address(RVA = "0x2137284", Offset = "0x2137284", VA = "0x2137284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0B")]
				[Address(RVA = "0x21372EC", Offset = "0x21372EC", VA = "0x21372EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x2136DC4", Offset = "0x2136DC4", VA = "0x2136DC4")]
			[DebuggerHidden]
			public <TestAsync>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x213709C", Offset = "0x213709C", VA = "0x213709C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x21370A0", Offset = "0x21370A0", VA = "0x21370A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x213728C", Offset = "0x213728C", VA = "0x213728C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x2136740", Offset = "0x2136740", VA = "0x2136740")]
		public void Run()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x2136B54", Offset = "0x2136B54", VA = "0x2136B54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B92D0", Offset = "0x12B92D0")]
		private IEnumerator TestAsync()
		{
			return null;
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x2136DF0", Offset = "0x2136DF0", VA = "0x2136DF0")]
		public Sample10_MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class Sample11_Logger
	{
		[Serializable]
		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7A0", Offset = "0x12AB7A0")]
		private sealed class <>c
		{
			[Token(Token = "0x400109A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400109B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LogEntry, bool> <>9__1_0;

			[Token(Token = "0x400109C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LogEntry> <>9__1_1;

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x21376C8", Offset = "0x21376C8", VA = "0x21376C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x21376D0", Offset = "0x21376D0", VA = "0x21376D0")]
			internal bool <ApplicationInitialize>b__1_0(LogEntry x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x21376E0", Offset = "0x21376E0", VA = "0x21376E0")]
			internal void <ApplicationInitialize>b__1_1(LogEntry x)
			{
			}
		}

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly UniRx.Diagnostics.Logger logger;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x21372F4", Offset = "0x21372F4", VA = "0x21372F4")]
		public void ApplicationInitialize()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x21374E4", Offset = "0x21374E4", VA = "0x21374E4")]
		public void Run()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x21375E8", Offset = "0x21375E8", VA = "0x21375E8")]
		public Sample11_Logger()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Sample12_ReactiveProperty : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7B0", Offset = "0x12AB7B0")]
		private sealed class <>c
		{
			[Token(Token = "0x400109D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400109E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__7_1;

			[Token(Token = "0x400109F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<float, string> <>9__7_2;

			[Token(Token = "0x40010A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<bool, bool> <>9__7_3;

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x2137DC8", Offset = "0x2137DC8", VA = "0x2137DC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x2137DD0", Offset = "0x2137DD0", VA = "0x2137DD0")]
			internal bool <Start>b__7_1(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x2137DDC", Offset = "0x2137DDC", VA = "0x2137DDC")]
			internal string <Start>b__7_2(float x)
			{
				return null;
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x2137E70", Offset = "0x2137E70", VA = "0x2137E70")]
			internal bool <Start>b__7_3(bool isDead)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button MyButton;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle MyToggle;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField MyInput;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text MyText;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider MySlider;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntReactiveProperty IntRxProp;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Enemy enemy;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x21376E4", Offset = "0x21376E4", VA = "0x21376E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x2137B04", Offset = "0x2137B04", VA = "0x2137B04")]
		public Sample12_ReactiveProperty()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x2137BF8", Offset = "0x2137BF8", VA = "0x2137BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9334", Offset = "0x12B9334")]
		private void <Start>b__7_0(Unit _)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x2137D1C", Offset = "0x2137D1C", VA = "0x2137D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9344", Offset = "0x12B9344")]
		private void <Start>b__7_4(bool _)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class Enemy
	{
		[Serializable]
		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7C0", Offset = "0x12AB7C0")]
		private sealed class <>c
		{
			[Token(Token = "0x40010A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<long, bool> <>9__8_0;

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x2132388", Offset = "0x2132388", VA = "0x2132388")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x2132390", Offset = "0x2132390", VA = "0x2132390")]
			internal bool <.ctor>b__8_0(long x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC8C8", Offset = "0x12AC8C8")]
		private IReactiveProperty<long> <CurrentHp>k__BackingField;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AC8D8", Offset = "0x12AC8D8")]
		private IReactiveProperty<bool> <IsDead>k__BackingField;

		[Token(Token = "0x170001A2")]
		public IReactiveProperty<long> CurrentHp
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x213219C", Offset = "0x213219C", VA = "0x213219C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9354", Offset = "0x12B9354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x21321A4", Offset = "0x21321A4", VA = "0x21321A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9364", Offset = "0x12B9364")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public IReactiveProperty<bool> IsDead
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x21321AC", Offset = "0x21321AC", VA = "0x21321AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9374", Offset = "0x12B9374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x21321B4", Offset = "0x21321B4", VA = "0x21321B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9384", Offset = "0x12B9384")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x21321BC", Offset = "0x21321BC", VA = "0x21321BC")]
		public Enemy(int initialHp)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class Sample13_ToDoApp : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7D0", Offset = "0x12AB7D0")]
		private sealed class <>c
		{
			[Token(Token = "0x40010A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__7_1;

			[Token(Token = "0x40010A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, bool> <>9__7_2;

			[Token(Token = "0x40010A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<CollectionRemoveEvent<GameObject>> <>9__7_6;

			[Token(Token = "0x40010A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GameObject, bool> <>9__7_8;

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x21388A0", Offset = "0x21388A0", VA = "0x21388A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x21388A8", Offset = "0x21388A8", VA = "0x21388A8")]
			internal bool <Start>b__7_1(string _)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x21388B4", Offset = "0x21388B4", VA = "0x21388B4")]
			internal bool <Start>b__7_2(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x2138908", Offset = "0x2138908", VA = "0x2138908")]
			internal void <Start>b__7_6(CollectionRemoveEvent<GameObject> x)
			{
			}

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x2138970", Offset = "0x2138970", VA = "0x2138970")]
			internal bool <Start>b__7_8(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Title;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField ToDoInput;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button AddButton;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button ClearButton;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TodoList;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject SampleItemPrefab;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveCollection<GameObject> toDos;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x2137E78", Offset = "0x2137E78", VA = "0x2137E78")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x21383B8", Offset = "0x21383B8", VA = "0x21383B8")]
		public Sample13_ToDoApp()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x2138428", Offset = "0x2138428", VA = "0x2138428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9394", Offset = "0x12B9394")]
		private string <Start>b__7_0(Unit _)
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x2138444", Offset = "0x2138444", VA = "0x2138444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B93A4", Offset = "0x12B93A4")]
		private void <Start>b__7_3(string x)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x213859C", Offset = "0x213859C", VA = "0x213859C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B93B4", Offset = "0x12B93B4")]
		private void <Start>b__7_4(int x)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x2138640", Offset = "0x2138640", VA = "0x2138640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B93C4", Offset = "0x12B93C4")]
		private void <Start>b__7_5(CollectionAddEvent<GameObject> x)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x21386CC", Offset = "0x21386CC", VA = "0x21386CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B93D4", Offset = "0x12B93D4")]
		private void <Start>b__7_7(Unit _)
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200025C")]
	public enum JSONNodeType
	{
		[Token(Token = "0x40004E4")]
		Array = 1,
		[Token(Token = "0x40004E5")]
		Object = 2,
		[Token(Token = "0x40004E6")]
		String = 3,
		[Token(Token = "0x40004E7")]
		Number = 4,
		[Token(Token = "0x40004E8")]
		NullValue = 5,
		[Token(Token = "0x40004E9")]
		Boolean = 6,
		[Token(Token = "0x40004EA")]
		None = 7,
		[Token(Token = "0x40004EB")]
		Custom = 255
	}
	[Token(Token = "0x200025D")]
	public enum JSONTextMode
	{
		[Token(Token = "0x40004ED")]
		Compact,
		[Token(Token = "0x40004EE")]
		Indent
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9BC4", Offset = "0x12A9BC4")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000525")]
		public struct Enumerator
		{
			[Token(Token = "0x2000640")]
			private enum Type
			{
				[Token(Token = "0x40014FF")]
				None,
				[Token(Token = "0x4001500")]
				Array,
				[Token(Token = "0x4001501")]
				Object
			}

			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x40010AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x1700030D")]
			public bool IsValid
			{
				[Token(Token = "0x6001E1E")]
				[Address(RVA = "0x140CD6C", Offset = "0x140CD6C", VA = "0x140CD6C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700030E")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6001E21")]
				[Address(RVA = "0x140CDF4", Offset = "0x140CDF4", VA = "0x140CDF4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x140CD7C", Offset = "0x140CD7C", VA = "0x140CD7C")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x140CDB8", Offset = "0x140CDB8", VA = "0x140CDB8")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x140CDFC", Offset = "0x140CDFC", VA = "0x140CDFC")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000526")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x40010AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700030F")]
			public JSONNode Current
			{
				[Token(Token = "0x6001E26")]
				[Address(RVA = "0x140CFCC", Offset = "0x140CFCC", VA = "0x140CFCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x140CF34", Offset = "0x140CF34", VA = "0x140CF34")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x140CF7C", Offset = "0x140CF7C", VA = "0x140CF7C")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x140CFB0", Offset = "0x140CFB0", VA = "0x140CFB0")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x140CFD4", Offset = "0x140CFD4", VA = "0x140CFD4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x140CFDC", Offset = "0x140CFDC", VA = "0x140CFDC")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x2000527")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000310")]
			public string Current
			{
				[Token(Token = "0x6001E2C")]
				[Address(RVA = "0x140CED8", Offset = "0x140CED8", VA = "0x140CED8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x140CE40", Offset = "0x140CE40", VA = "0x140CE40")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x140CE88", Offset = "0x140CE88", VA = "0x140CE88")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x140CEBC", Offset = "0x140CEBC", VA = "0x140CEBC")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x140CEE0", Offset = "0x140CEE0", VA = "0x140CEE0")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x140CEE8", Offset = "0x140CEE8", VA = "0x140CEE8")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x2000528")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000311")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6001E30")]
				[Address(RVA = "0x2751AF0", Offset = "0x2751AF0", VA = "0x2751AF0", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E31")]
				[Address(RVA = "0x2751AF8", Offset = "0x2751AF8", VA = "0x2751AF8", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x274FCF8", Offset = "0x274FCF8", VA = "0x274FCF8")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x2751B64", Offset = "0x2751B64", VA = "0x2751B64", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x2751B6C", Offset = "0x2751B6C", VA = "0x2751B6C", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x2751B8C", Offset = "0x2751B8C", VA = "0x2751B8C", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x2751BF0", Offset = "0x2751BF0", VA = "0x2751BF0", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x2751C9C", Offset = "0x2751C9C", VA = "0x2751C9C", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7E0", Offset = "0x12AB7E0")]
		private sealed class <get_Children>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000313")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0x2751018", Offset = "0x2751018", VA = "0x2751018", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3C")]
				[Address(RVA = "0x2751080", Offset = "0x2751080", VA = "0x2751080", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x274FA64", Offset = "0x274FA64", VA = "0x274FA64")]
			[DebuggerHidden]
			public <get_Children>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x2750FFC", Offset = "0x2750FFC", VA = "0x2750FFC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x2751000", Offset = "0x2751000", VA = "0x2751000", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x2751020", Offset = "0x2751020", VA = "0x2751020", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x2751088", Offset = "0x2751088", VA = "0x2751088", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x2751120", Offset = "0x2751120", VA = "0x2751120", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB7F0", Offset = "0x12AB7F0")]
		private sealed class <get_DeepChildren>d__43 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000315")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0x2751754", Offset = "0x2751754", VA = "0x2751754", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0x27517BC", Offset = "0x27517BC", VA = "0x27517BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x274FB1C", Offset = "0x274FB1C", VA = "0x274FB1C")]
			[DebuggerHidden]
			public <get_DeepChildren>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x2751124", Offset = "0x2751124", VA = "0x2751124", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x2751334", Offset = "0x2751334", VA = "0x2751334", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x2751274", Offset = "0x2751274", VA = "0x2751274")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x27511B4", Offset = "0x27511B4", VA = "0x27511B4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x275175C", Offset = "0x275175C", VA = "0x275175C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x27517C4", Offset = "0x27517C4", VA = "0x27517C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x2751870", Offset = "0x2751870", VA = "0x2751870", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool longAsString;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool allowLineComments;

		[Token(Token = "0x40004F2")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170001A4")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6000EB2")]
			get;
		}

		[Token(Token = "0x170001A5")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0x274F8C4", Offset = "0x274F8C4", VA = "0x274F8C4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x274F8CC", Offset = "0x274F8CC", VA = "0x274F8CC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x274F8D0", Offset = "0x274F8D0", VA = "0x274F8D0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x274F8D8", Offset = "0x274F8D8", VA = "0x274F8D8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public virtual string Value
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x274F8DC", Offset = "0x274F8DC", VA = "0x274F8DC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x274F924", Offset = "0x274F924", VA = "0x274F924", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public virtual int Count
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x274F928", Offset = "0x274F928", VA = "0x274F928", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A9")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x274F930", Offset = "0x274F930", VA = "0x274F930", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public virtual bool IsString
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x274F938", Offset = "0x274F938", VA = "0x274F938", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x274F940", Offset = "0x274F940", VA = "0x274F940", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x274F948", Offset = "0x274F948", VA = "0x274F948", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x274F950", Offset = "0x274F950", VA = "0x274F950", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AE")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x274F958", Offset = "0x274F958", VA = "0x274F958", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AF")]
		public virtual bool Inline
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x274F960", Offset = "0x274F960", VA = "0x274F960", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x274F968", Offset = "0x274F968", VA = "0x274F968", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x274F9F4", Offset = "0x274F9F4", VA = "0x274F9F4", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B93E4", Offset = "0x12B93E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x274FA9C", Offset = "0x274FA9C", VA = "0x274FA9C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B9448", Offset = "0x12B9448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x274FC98", Offset = "0x274FC98", VA = "0x274FC98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x274FDBC", Offset = "0x274FDBC", VA = "0x274FDBC")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170001B4")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x274FE04", Offset = "0x274FE04", VA = "0x274FE04")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170001B5")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x274FE4C", Offset = "0x274FE4C", VA = "0x274FE4C", Slot = "31")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x274FF28", Offset = "0x274FF28", VA = "0x274FF28", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x274FFC0", Offset = "0x274FFC0", VA = "0x274FFC0", Slot = "33")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x274FFE4", Offset = "0x274FFE4", VA = "0x274FFE4", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x274FFFC", Offset = "0x274FFFC", VA = "0x274FFFC", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x2750020", Offset = "0x2750020", VA = "0x2750020", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x2750034", Offset = "0x2750034", VA = "0x2750034", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x27500FC", Offset = "0x27500FC", VA = "0x27500FC", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public virtual long AsLong
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x2750178", Offset = "0x2750178", VA = "0x2750178", Slot = "39")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0x27501B8", Offset = "0x27501B8", VA = "0x27501B8", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x27501F8", Offset = "0x27501F8", VA = "0x27501F8", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x2750278", Offset = "0x2750278", VA = "0x2750278", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x2750A1C", Offset = "0x2750A1C", VA = "0x2750A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x274F96C", Offset = "0x274F96C", VA = "0x274F96C", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x274F970", Offset = "0x274F970", VA = "0x274F970", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x274F9DC", Offset = "0x274F9DC", VA = "0x274F9DC", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x274F9E4", Offset = "0x274F9E4", VA = "0x274F9E4", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x274F9EC", Offset = "0x274F9EC", VA = "0x274F9EC", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x274FB54", Offset = "0x274FB54", VA = "0x274FB54", Slot = "26")]
		public virtual bool HasKey(string aKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x274FB5C", Offset = "0x274FB5C", VA = "0x274FB5C", Slot = "27")]
		public virtual JSONNode GetValueOrDefault(string aKey, JSONNode aDefault)
		{
			return null;
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x274FB64", Offset = "0x274FB64", VA = "0x274FB64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x274FBF8", Offset = "0x274FBF8", VA = "0x274FBF8", Slot = "28")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000ECE")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x27502F8", Offset = "0x27502F8", VA = "0x27502F8")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x2750358", Offset = "0x2750358", VA = "0x2750358")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x27503EC", Offset = "0x27503EC", VA = "0x27503EC")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x2750454", Offset = "0x2750454", VA = "0x2750454")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x27504EC", Offset = "0x27504EC", VA = "0x27504EC")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x2750554", Offset = "0x2750554", VA = "0x2750554")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x27505EC", Offset = "0x27505EC", VA = "0x27505EC")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x275064C", Offset = "0x275064C", VA = "0x275064C")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x27506E4", Offset = "0x27506E4", VA = "0x27506E4")]
		public static implicit operator JSONNode(long n)
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x27507B4", Offset = "0x27507B4", VA = "0x27507B4")]
		public static implicit operator long(JSONNode d)
		{
			return default(long);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x275084C", Offset = "0x275084C", VA = "0x275084C")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x27508AC", Offset = "0x27508AC", VA = "0x27508AC")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2750944", Offset = "0x2750944", VA = "0x2750944")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x274DE10", Offset = "0x274DE10", VA = "0x274DE10")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x2750988", Offset = "0x2750988", VA = "0x2750988")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2750A08", Offset = "0x2750A08", VA = "0x2750A08", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x2750A14", Offset = "0x2750A14", VA = "0x2750A14", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x2750AEC", Offset = "0x2750AEC", VA = "0x2750AEC")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x2750D8C", Offset = "0x2750D8C", VA = "0x2750D8C")]
		private static JSONNode ParseElement(string token, bool quoted)
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x274D3A4", Offset = "0x274D3A4", VA = "0x274D3A4")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x274E64C", Offset = "0x274E64C", VA = "0x274E64C")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9BFC", Offset = "0x12A9BFC")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB800", Offset = "0x12AB800")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000317")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0x274E81C", Offset = "0x274E81C", VA = "0x274E81C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0x274E884", Offset = "0x274E884", VA = "0x274E884", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x274E40C", Offset = "0x274E40C", VA = "0x274E40C")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x274E654", Offset = "0x274E654", VA = "0x274E654", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x274E6C8", Offset = "0x274E6C8", VA = "0x274E6C8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x274E670", Offset = "0x274E670", VA = "0x274E670")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x274E824", Offset = "0x274E824", VA = "0x274E824", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x274E88C", Offset = "0x274E88C", VA = "0x274E88C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x274E938", Offset = "0x274E938", VA = "0x274E938", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170001BD")]
		public override bool Inline
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x274DB14", Offset = "0x274DB14", VA = "0x274DB14", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x274DB1C", Offset = "0x274DB1C", VA = "0x274DB1C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x274DB28", Offset = "0x274DB28", VA = "0x274DB28", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001BF")]
		public override bool IsArray
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x274DB30", Offset = "0x274DB30", VA = "0x274DB30", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C0")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x274DBF4", Offset = "0x274DBF4", VA = "0x274DBF4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x274DD14", Offset = "0x274DD14", VA = "0x274DD14", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x274E040", Offset = "0x274E040", VA = "0x274E040", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x274E0A0", Offset = "0x274E0A0", VA = "0x274E0A0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public override int Count
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x274E160", Offset = "0x274E160", VA = "0x274E160", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C3")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x274E38C", Offset = "0x274E38C", VA = "0x274E38C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B94AC", Offset = "0x12B94AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x274DB38", Offset = "0x274DB38", VA = "0x274DB38", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x274E1B0", Offset = "0x274E1B0", VA = "0x274E1B0", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x274E270", Offset = "0x274E270", VA = "0x274E270", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x274E31C", Offset = "0x274E31C", VA = "0x274E31C", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x274E444", Offset = "0x274E444", VA = "0x274E444", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x274E5BC", Offset = "0x274E5BC", VA = "0x274E5BC")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9C34", Offset = "0x12A9C34")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB810", Offset = "0x12AB810")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x2752E30", Offset = "0x2752E30", VA = "0x2752E30")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x27532B0", Offset = "0x27532B0", VA = "0x27532B0")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB820", Offset = "0x12AB820")]
		private sealed class <get_Children>d__25 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000319")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0x27534F8", Offset = "0x27534F8", VA = "0x27534F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0x2753560", Offset = "0x2753560", VA = "0x2753560", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x2752FAC", Offset = "0x2752FAC", VA = "0x2752FAC")]
			[DebuggerHidden]
			public <get_Children>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x2753328", Offset = "0x2753328", VA = "0x2753328", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x275339C", Offset = "0x275339C", VA = "0x275339C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x2753344", Offset = "0x2753344", VA = "0x2753344")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x2753500", Offset = "0x2753500", VA = "0x2753500", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x2753568", Offset = "0x2753568", VA = "0x2753568", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x2753614", Offset = "0x2753614", VA = "0x2753614", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170001C4")]
		public override bool Inline
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x2752530", Offset = "0x2752530", VA = "0x2752530", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x2752538", Offset = "0x2752538", VA = "0x2752538", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x2752544", Offset = "0x2752544", VA = "0x2752544", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001C6")]
		public override bool IsObject
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x275254C", Offset = "0x275254C", VA = "0x275254C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x27525EC", Offset = "0x27525EC", VA = "0x27525EC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x27526A8", Offset = "0x27526A8", VA = "0x27526A8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x27527BC", Offset = "0x27527BC", VA = "0x27527BC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x2752854", Offset = "0x2752854", VA = "0x2752854", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public override int Count
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x2752970", Offset = "0x2752970", VA = "0x2752970", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x2752F2C", Offset = "0x2752F2C", VA = "0x2752F2C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12B9510", Offset = "0x12B9510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2752554", Offset = "0x2752554", VA = "0x2752554", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x27529C8", Offset = "0x27529C8", VA = "0x27529C8", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x2752B40", Offset = "0x2752B40", VA = "0x2752B40", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x2752BFC", Offset = "0x2752BFC", VA = "0x2752BFC", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x2752CB8", Offset = "0x2752CB8", VA = "0x2752CB8", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x2752E38", Offset = "0x2752E38", VA = "0x2752E38", Slot = "26")]
		public override bool HasKey(string aKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x2752EA0", Offset = "0x2752EA0", VA = "0x2752EA0", Slot = "27")]
		public override JSONNode GetValueOrDefault(string aKey, JSONNode aDefault)
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x2752FE4", Offset = "0x2752FE4", VA = "0x2752FE4", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x274EED8", Offset = "0x274EED8", VA = "0x274EED8")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170001CB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x2753618", Offset = "0x2753618", VA = "0x2753618", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001CC")]
		public override bool IsString
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x2753620", Offset = "0x2753620", VA = "0x2753620", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public override string Value
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x2753648", Offset = "0x2753648", VA = "0x2753648", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x2753650", Offset = "0x2753650", VA = "0x2753650", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x2753628", Offset = "0x2753628", VA = "0x2753628", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x274F518", Offset = "0x274F518", VA = "0x274F518")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2753658", Offset = "0x2753658", VA = "0x2753658", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x2753710", Offset = "0x2753710", VA = "0x2753710", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2753824", Offset = "0x2753824", VA = "0x2753824", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000262")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170001CE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0x275206C", Offset = "0x275206C", VA = "0x275206C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001CF")]
		public override bool IsNumber
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x2752074", Offset = "0x2752074", VA = "0x2752074", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D0")]
		public override string Value
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x275209C", Offset = "0x275209C", VA = "0x275209C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x2752114", Offset = "0x2752114", VA = "0x2752114", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public override double AsDouble
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x27521D8", Offset = "0x27521D8", VA = "0x27521D8", Slot = "31")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x27521E0", Offset = "0x27521E0", VA = "0x27521E0", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public override long AsLong
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x27521E8", Offset = "0x27521E8", VA = "0x27521E8", Slot = "39")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x27521F4", Offset = "0x27521F4", VA = "0x27521F4", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x275207C", Offset = "0x275207C", VA = "0x275207C", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x274F160", Offset = "0x274F160", VA = "0x274F160")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2752200", Offset = "0x2752200", VA = "0x2752200")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x2752288", Offset = "0x2752288", VA = "0x2752288", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x27522C8", Offset = "0x27522C8", VA = "0x27522C8")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x27523F8", Offset = "0x27523F8", VA = "0x27523F8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2752524", Offset = "0x2752524", VA = "0x2752524", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000263")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170001D3")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x274E93C", Offset = "0x274E93C", VA = "0x274E93C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001D4")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x274E944", Offset = "0x274E944", VA = "0x274E944", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D5")]
		public override string Value
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x274E96C", Offset = "0x274E96C", VA = "0x274E96C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x274E978", Offset = "0x274E978", VA = "0x274E978", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x274EA04", Offset = "0x274EA04", VA = "0x274EA04", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x274EA0C", Offset = "0x274EA0C", VA = "0x274EA0C", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x274E94C", Offset = "0x274E94C", VA = "0x274E94C", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x274EA18", Offset = "0x274EA18", VA = "0x274EA18")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x274EA98", Offset = "0x274EA98", VA = "0x274EA98")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x274EB20", Offset = "0x274EB20", VA = "0x274EB20", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x274EB9C", Offset = "0x274EB9C", VA = "0x274EB9C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x274EC24", Offset = "0x274EC24", VA = "0x274EC24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000264")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x170001D7")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x2751E74", Offset = "0x2751E74", VA = "0x2751E74", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001D8")]
		public override bool IsNull
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x2751E7C", Offset = "0x2751E7C", VA = "0x2751E7C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public override string Value
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x2751EA4", Offset = "0x2751EA4", VA = "0x2751EA4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x2751EEC", Offset = "0x2751EEC", VA = "0x2751EEC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x2751EF0", Offset = "0x2751EF0", VA = "0x2751EF0", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0x2751EF8", Offset = "0x2751EF8", VA = "0x2751EF8", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x274DFA0", Offset = "0x274DFA0", VA = "0x274DFA0")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x2751E0C", Offset = "0x2751E0C", VA = "0x2751E0C")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2751E84", Offset = "0x2751E84", VA = "0x2751E84", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2751EFC", Offset = "0x2751EFC", VA = "0x2751EFC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x2751F98", Offset = "0x2751F98", VA = "0x2751F98", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2751FA0", Offset = "0x2751FA0", VA = "0x2751FA0", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x12A9C6C", Offset = "0x12A9C6C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170001DB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x274EC30", Offset = "0x274EC30", VA = "0x274EC30", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170001DC")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x274ECD8", Offset = "0x274ECD8", VA = "0x274ECD8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x274ED38", Offset = "0x274ED38", VA = "0x274ED38", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x274EDCC", Offset = "0x274EDCC", VA = "0x274EDCC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x274EE3C", Offset = "0x274EE3C", VA = "0x274EE3C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public override int AsInt
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x274F0E8", Offset = "0x274F0E8", VA = "0x274F0E8", Slot = "33")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x274F1DC", Offset = "0x274F1DC", VA = "0x274F1DC", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public override float AsFloat
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x274F258", Offset = "0x274F258", VA = "0x274F258", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x274F2D0", Offset = "0x274F2D0", VA = "0x274F2D0", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public override double AsDouble
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x274F34C", Offset = "0x274F34C", VA = "0x274F34C", Slot = "31")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x274F3C4", Offset = "0x274F3C4", VA = "0x274F3C4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public override long AsLong
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x274F440", Offset = "0x274F440", VA = "0x274F440", Slot = "39")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x274F594", Offset = "0x274F594", VA = "0x274F594", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public override bool AsBool
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x274F69C", Offset = "0x274F69C", VA = "0x274F69C", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x274F714", Offset = "0x274F714", VA = "0x274F714", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x274F790", Offset = "0x274F790", VA = "0x274F790", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x274F7FC", Offset = "0x274F7FC", VA = "0x274F7FC", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x274EC38", Offset = "0x274EC38", VA = "0x274EC38", Slot = "30")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x274DC98", Offset = "0x274DC98", VA = "0x274DC98")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x274EC58", Offset = "0x274EC58", VA = "0x274EC58")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000F4D")]
		private T Set<T>(T aVal) where T : JSONNode
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x274EF68", Offset = "0x274EF68", VA = "0x274EF68", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x274EFFC", Offset = "0x274EFFC", VA = "0x274EFFC", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x274F098", Offset = "0x274F098", VA = "0x274F098")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x274F0B0", Offset = "0x274F0B0", VA = "0x274F0B0")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x274F0C8", Offset = "0x274F0C8", VA = "0x274F0C8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x274F0E0", Offset = "0x274F0E0", VA = "0x274F0E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x274F868", Offset = "0x274F868", VA = "0x274F868", Slot = "29")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public static class JSON
	{
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x274D340", Offset = "0x274D340", VA = "0x274D340")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9CA4", Offset = "0x12A9CA4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9CA4", Offset = "0x12A9CA4")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052E")]
		public enum Mode
		{
			[Token(Token = "0x40010C4")]
			AnimationClips,
			[Token(Token = "0x40010C5")]
			AnimationStates,
			[Token(Token = "0x40010C6")]
			PlayableDirector,
			[Token(Token = "0x40010C7")]
			Realtime
		}

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AC8F8", Offset = "0x12AC8F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AC8F8", Offset = "0x12AC8F8")]
		public int frameRate;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AC950", Offset = "0x12AC950")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AC950", Offset = "0x12AC950")]
		public float keyReductionError;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AC9A8", Offset = "0x12AC9A8")]
		public Mode mode;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AC9E0", Offset = "0x12AC9E0")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACA18", Offset = "0x12ACA18")]
		public string[] animationStates;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACA50", Offset = "0x12ACA50")]
		public bool loop;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACA88", Offset = "0x12ACA88")]
		public string saveToFolder;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACAC0", Offset = "0x12ACAC0")]
		public string appendName;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACAF8", Offset = "0x12ACAF8")]
		public string saveName;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACB30", Offset = "0x12ACB30")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACB40", Offset = "0x12ACB40")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACB70", Offset = "0x12ACB70")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x170001E5")]
		public bool isBaking
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x243CC08", Offset = "0x243CC08", VA = "0x243CC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9654", Offset = "0x12B9654")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x243CC10", Offset = "0x243CC10", VA = "0x243CC10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9664", Offset = "0x12B9664")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public float bakingProgress
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x243CC1C", Offset = "0x243CC1C", VA = "0x243CC1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9674", Offset = "0x12B9674")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x243CC24", Offset = "0x243CC24", VA = "0x243CC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9684", Offset = "0x12B9684")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		protected float clipLength
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x243CC2C", Offset = "0x243CC2C", VA = "0x243CC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9694", Offset = "0x12B9694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x243CC34", Offset = "0x243CC34", VA = "0x243CC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96A4", Offset = "0x12B96A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x243CAD8", Offset = "0x243CAD8", VA = "0x243CAD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9574", Offset = "0x12B9574")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x243CB24", Offset = "0x243CB24", VA = "0x243CB24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B95AC", Offset = "0x12B95AC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x243CB70", Offset = "0x243CB70", VA = "0x243CB70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B95E4", Offset = "0x12B95E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x243CBBC", Offset = "0x243CBBC", VA = "0x243CBBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B961C", Offset = "0x12B961C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000F6E")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x6000F6F")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x6000F70")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x6000F71")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x6000F72")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x243CC3C", Offset = "0x243CC3C", VA = "0x243CC3C")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x243CC40", Offset = "0x243CC40", VA = "0x243CC40")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x243CC44", Offset = "0x243CC44", VA = "0x243CC44")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x243CC48", Offset = "0x243CC48", VA = "0x243CC48")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACB80", Offset = "0x12ACB80")]
		public bool markAsLegacy;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACBB8", Offset = "0x12ACBB8")]
		public Transform root;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACBF0", Offset = "0x12ACBF0")]
		public Transform rootNode;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACC28", Offset = "0x12ACC28")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACC60", Offset = "0x12ACC60")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x27450C0", Offset = "0x27450C0", VA = "0x27450C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x274548C", Offset = "0x274548C", VA = "0x274548C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x2745494", Offset = "0x2745494", VA = "0x2745494", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x27455A4", Offset = "0x27455A4", VA = "0x27455A4", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2745620", Offset = "0x2745620", VA = "0x2745620", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x274569C", Offset = "0x274569C", VA = "0x274569C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x27452DC", Offset = "0x27452DC", VA = "0x27452DC")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x27453B4", Offset = "0x27453B4", VA = "0x27453B4")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x2745718", Offset = "0x2745718", VA = "0x2745718")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class TQ
	{
		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x274A730", Offset = "0x274A730", VA = "0x274A730")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x243BAC0", Offset = "0x243BAC0", VA = "0x243BAC0")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x243BCD4", Offset = "0x243BCD4", VA = "0x243BCD4")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x243BCB4", Offset = "0x243BCB4", VA = "0x243BCB4")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x243C354", Offset = "0x243C354", VA = "0x243C354")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x243DEBC", Offset = "0x243DEBC", VA = "0x243DEBC")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x243F390", Offset = "0x243F390", VA = "0x243F390")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x243D8D0", Offset = "0x243D8D0", VA = "0x243D8D0")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x243DF04", Offset = "0x243DF04", VA = "0x243DF04")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x243D408", Offset = "0x243D408", VA = "0x243D408")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x243CD08", Offset = "0x243CD08", VA = "0x243CD08")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x243CF54", Offset = "0x243CF54", VA = "0x243CF54")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x243CE28", Offset = "0x243CE28", VA = "0x243CE28")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x243D08C", Offset = "0x243D08C", VA = "0x243D08C")]
		public void SetIKKeyframes(float time, Avatar avatar, Transform root, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x243D664", Offset = "0x243D664", VA = "0x243D664")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x243D760", Offset = "0x243D760", VA = "0x243D760")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x243D85C", Offset = "0x243D85C", VA = "0x243D85C")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x243D7D4", Offset = "0x243D7D4", VA = "0x243D7D4")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x243DB1C", Offset = "0x243DB1C", VA = "0x243DB1C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x243DBD0", Offset = "0x243DBD0", VA = "0x243DBD0")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x243DF08", Offset = "0x243DF08", VA = "0x243DF08")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x243DF78", Offset = "0x243DF78", VA = "0x243DF78")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x243E660", Offset = "0x243E660", VA = "0x243E660")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x243E714", Offset = "0x243E714", VA = "0x243E714")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x243E600", Offset = "0x243E600", VA = "0x243E600")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x243E7F8", Offset = "0x243E7F8", VA = "0x243E7F8")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x243E840", Offset = "0x243E840", VA = "0x243E840")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public class BakerTransform
	{
		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x243E848", Offset = "0x243E848", VA = "0x243E848")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x243E9DC", Offset = "0x243E9DC", VA = "0x243E9DC")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x243E9F0", Offset = "0x243E9F0", VA = "0x243E9F0")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x243EC80", Offset = "0x243EC80", VA = "0x243EC80")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x243E8E4", Offset = "0x243E8E4", VA = "0x243E8E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x243EECC", Offset = "0x243EECC", VA = "0x243EECC")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x243EF40", Offset = "0x243EF40", VA = "0x243EF40")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x243F18C", Offset = "0x243F18C", VA = "0x243F18C")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACC98", Offset = "0x12ACC98")]
		public bool bakeHandIK;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACCD0", Offset = "0x12ACCD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACCD0", Offset = "0x12ACCD0")]
		public float IKKeyReductionError;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACD28", Offset = "0x12ACD28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACD28", Offset = "0x12ACD28")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x2746650", Offset = "0x2746650", VA = "0x2746650")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x2746A7C", Offset = "0x2746A7C", VA = "0x2746A7C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x2746A98", Offset = "0x2746A98", VA = "0x2746A98", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x2746BB8", Offset = "0x2746BB8", VA = "0x2746BB8", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x2746C94", Offset = "0x2746C94", VA = "0x2746C94", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x2746E64", Offset = "0x2746E64", VA = "0x2746E64", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x27471FC", Offset = "0x27471FC", VA = "0x27471FC")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x27472D8", Offset = "0x27472D8", VA = "0x27472D8")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052F")]
		public enum UpdateMode
		{
			[Token(Token = "0x40010C9")]
			Update,
			[Token(Token = "0x40010CA")]
			FixedUpdate,
			[Token(Token = "0x40010CB")]
			LateUpdate,
			[Token(Token = "0x40010CC")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12ACD7C", Offset = "0x12ACD7C")]
		public bool smoothFollow;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12ACDB4", Offset = "0x12ACDB4")]
		public float rotationSensitivity;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12ACDEC", Offset = "0x12ACDEC")]
		public float distance;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12ACE24", Offset = "0x12ACE24")]
		public LayerMask blockingLayers;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float blockingOriginOffset;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACE5C", Offset = "0x12ACE5C")]
		public float blockedOffset;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACE74", Offset = "0x12ACE74")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACE84", Offset = "0x12ACE84")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ACE94", Offset = "0x12ACE94")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 position;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion rotation;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x170001E8")]
		public float x
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x2726F8C", Offset = "0x2726F8C", VA = "0x2726F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96B4", Offset = "0x12B96B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x2726F94", Offset = "0x2726F94", VA = "0x2726F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96C4", Offset = "0x12B96C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public float y
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x2726F9C", Offset = "0x2726F9C", VA = "0x2726F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96D4", Offset = "0x12B96D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x2726FA4", Offset = "0x2726FA4", VA = "0x2726FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96E4", Offset = "0x12B96E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float distanceTarget
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x2726FAC", Offset = "0x2726FAC", VA = "0x2726FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B96F4", Offset = "0x12B96F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x2726FB4", Offset = "0x2726FB4", VA = "0x2726FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9704", Offset = "0x12B9704")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		private float zoomAdd
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x2727AE4", Offset = "0x2727AE4", VA = "0x2727AE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x2726FBC", Offset = "0x2726FBC", VA = "0x2726FBC")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x2726FF8", Offset = "0x2726FF8", VA = "0x2726FF8")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x2727000", Offset = "0x2727000", VA = "0x2727000", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x272711C", Offset = "0x272711C", VA = "0x272711C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x2727178", Offset = "0x2727178", VA = "0x2727178", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x27271E0", Offset = "0x27271E0", VA = "0x27271E0", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x2727244", Offset = "0x2727244", VA = "0x2727244")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x2727150", Offset = "0x2727150", VA = "0x2727150")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x27273C4", Offset = "0x27273C4", VA = "0x27273C4")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x2727A34", Offset = "0x2727A34", VA = "0x2727A34")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x2727B58", Offset = "0x2727B58", VA = "0x2727B58")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x2727C70", Offset = "0x2727C70", VA = "0x2727C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x2727CA8", Offset = "0x2727CA8", VA = "0x2727CA8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x2727E60", Offset = "0x2727E60", VA = "0x2727E60")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x2727F10", Offset = "0x2727F10", VA = "0x2727F10")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000272")]
	public enum Axis
	{
		[Token(Token = "0x4000574")]
		X,
		[Token(Token = "0x4000575")]
		Y,
		[Token(Token = "0x4000576")]
		Z
	}
	[Token(Token = "0x2000273")]
	public class AxisTools
	{
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x243C35C", Offset = "0x243C35C", VA = "0x243C35C")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x243C414", Offset = "0x243C414", VA = "0x243C414")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x243C4C0", Offset = "0x243C4C0", VA = "0x243C4C0")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x243C6A4", Offset = "0x243C6A4", VA = "0x243C6A4")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x243C5DC", Offset = "0x243C5DC", VA = "0x243C5DC")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x243C7C0", Offset = "0x243C7C0", VA = "0x243C7C0")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x243C808", Offset = "0x243C808", VA = "0x243C808")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x243CAD0", Offset = "0x243CAD0", VA = "0x243CAD0")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000274")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000530")]
		public class LimbOrientation
		{
			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x243FA38", Offset = "0x243FA38", VA = "0x243FA38")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x170001EC")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x243F7C4", Offset = "0x243F7C4", VA = "0x243F7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x243FAB0", Offset = "0x243FAB0", VA = "0x243FAB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x243F778", Offset = "0x243F778", VA = "0x243F778")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000275")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000531")]
		public enum BoneType
		{
			[Token(Token = "0x40010D1")]
			Unassigned,
			[Token(Token = "0x40010D2")]
			Spine,
			[Token(Token = "0x40010D3")]
			Head,
			[Token(Token = "0x40010D4")]
			Arm,
			[Token(Token = "0x40010D5")]
			Leg,
			[Token(Token = "0x40010D6")]
			Tail,
			[Token(Token = "0x40010D7")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000532")]
		public enum BoneSide
		{
			[Token(Token = "0x40010D9")]
			Center,
			[Token(Token = "0x40010DA")]
			Left,
			[Token(Token = "0x40010DB")]
			Right
		}

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x243FD24", Offset = "0x243FD24", VA = "0x243FD24")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x2440024", Offset = "0x2440024", VA = "0x2440024")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x2440274", Offset = "0x2440274", VA = "0x2440274")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x24402F8", Offset = "0x24402F8", VA = "0x24402F8")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x24403A4", Offset = "0x24403A4", VA = "0x24403A4")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x243FED4", Offset = "0x243FED4", VA = "0x243FED4")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x24401D4", Offset = "0x24401D4", VA = "0x24401D4")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x2440BE4", Offset = "0x2440BE4", VA = "0x2440BE4")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x24409FC", Offset = "0x24409FC", VA = "0x24409FC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x2440AF0", Offset = "0x2440AF0", VA = "0x2440AF0")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x24405C4", Offset = "0x24405C4", VA = "0x24405C4")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x2440678", Offset = "0x2440678", VA = "0x2440678")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x244072C", Offset = "0x244072C", VA = "0x244072C")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x24407E0", Offset = "0x24407E0", VA = "0x24407E0")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x2440894", Offset = "0x2440894", VA = "0x2440894")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x2440948", Offset = "0x2440948", VA = "0x2440948")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x2440DF8", Offset = "0x2440DF8", VA = "0x2440DF8")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x24404D8", Offset = "0x24404D8", VA = "0x24404D8")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x2440D68", Offset = "0x2440D68", VA = "0x2440D68")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x2440E68", Offset = "0x2440E68", VA = "0x2440E68")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x2440F40", Offset = "0x2440F40", VA = "0x2440F40")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x2440CEC", Offset = "0x2440CEC", VA = "0x2440CEC")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x2440C74", Offset = "0x2440C74", VA = "0x2440C74")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000276")]
	public class BipedReferences
	{
		[Token(Token = "0x2000533")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x1700031B")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6001E5F")]
				[Address(RVA = "0x2726F84", Offset = "0x2726F84", VA = "0x2726F84")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x140CBF8", Offset = "0x140CBF8", VA = "0x140CBF8")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x170001EE")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x2442AB4", Offset = "0x2442AB4", VA = "0x2442AB4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EF")]
		public bool isEmpty
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x2442EA0", Offset = "0x2442EA0", VA = "0x2442EA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x2442EB0", Offset = "0x2442EB0", VA = "0x2442EB0", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x24432DC", Offset = "0x24432DC", VA = "0x24432DC", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x2443714", Offset = "0x2443714", VA = "0x2443714")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x2443D24", Offset = "0x2443D24", VA = "0x2443D24")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x2443960", Offset = "0x2443960", VA = "0x2443960")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x24444D4", Offset = "0x24444D4", VA = "0x24444D4")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x24445C8", Offset = "0x24445C8", VA = "0x24445C8")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2444B20", Offset = "0x2444B20", VA = "0x2444B20")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2444924", Offset = "0x2444924", VA = "0x2444924")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x244479C", Offset = "0x244479C", VA = "0x244479C")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2444668", Offset = "0x2444668", VA = "0x2444668")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2444A28", Offset = "0x2444A28", VA = "0x2444A28")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x2444C1C", Offset = "0x2444C1C", VA = "0x2444C1C")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x24456BC", Offset = "0x24456BC", VA = "0x24456BC")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x24451A0", Offset = "0x24451A0", VA = "0x24451A0")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x24459B0", Offset = "0x24459B0", VA = "0x24459B0")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x24454E0", Offset = "0x24454E0", VA = "0x24454E0")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x24459B8", Offset = "0x24459B8", VA = "0x24459B8")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x24459C0", Offset = "0x24459C0", VA = "0x24459C0")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x2445B80", Offset = "0x2445B80", VA = "0x2445B80")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x2445D98", Offset = "0x2445D98", VA = "0x2445D98")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x24438F0", Offset = "0x24438F0", VA = "0x24438F0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x2727F2C", Offset = "0x2727F2C", VA = "0x2727F2C")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2727F34", Offset = "0x2727F34", VA = "0x2727F34")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x2728074", Offset = "0x2728074", VA = "0x2728074")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class Hierarchy
	{
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2745780", Offset = "0x2745780", VA = "0x2745780")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x2745980", Offset = "0x2745980", VA = "0x2745980")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2745818", Offset = "0x2745818", VA = "0x2745818")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2745AA4", Offset = "0x2745AA4", VA = "0x2745AA4")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2745BC8", Offset = "0x2745BC8", VA = "0x2745BC8")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x2745E70", Offset = "0x2745E70", VA = "0x2745E70")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x2745F8C", Offset = "0x2745F8C", VA = "0x2745F8C")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2746114", Offset = "0x2746114", VA = "0x2746114")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x27464A8", Offset = "0x27464A8", VA = "0x27464A8")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2746294", Offset = "0x2746294", VA = "0x2746294")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2746648", Offset = "0x2746648", VA = "0x2746648")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x274738C", Offset = "0x274738C", VA = "0x274738C")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x27473FC", Offset = "0x27473FC", VA = "0x27473FC")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public enum InterpolationMode
	{
		[Token(Token = "0x40005A4")]
		None,
		[Token(Token = "0x40005A5")]
		InOutCubic,
		[Token(Token = "0x40005A6")]
		InOutQuintic,
		[Token(Token = "0x40005A7")]
		InOutSine,
		[Token(Token = "0x40005A8")]
		InQuintic,
		[Token(Token = "0x40005A9")]
		InQuartic,
		[Token(Token = "0x40005AA")]
		InCubic,
		[Token(Token = "0x40005AB")]
		InQuadratic,
		[Token(Token = "0x40005AC")]
		InElastic,
		[Token(Token = "0x40005AD")]
		InElasticSmall,
		[Token(Token = "0x40005AE")]
		InElasticBig,
		[Token(Token = "0x40005AF")]
		InSine,
		[Token(Token = "0x40005B0")]
		InBack,
		[Token(Token = "0x40005B1")]
		OutQuintic,
		[Token(Token = "0x40005B2")]
		OutQuartic,
		[Token(Token = "0x40005B3")]
		OutCubic,
		[Token(Token = "0x40005B4")]
		OutInCubic,
		[Token(Token = "0x40005B5")]
		OutInQuartic,
		[Token(Token = "0x40005B6")]
		OutElastic,
		[Token(Token = "0x40005B7")]
		OutElasticSmall,
		[Token(Token = "0x40005B8")]
		OutElasticBig,
		[Token(Token = "0x40005B9")]
		OutSine,
		[Token(Token = "0x40005BA")]
		OutBack,
		[Token(Token = "0x40005BB")]
		OutBackCubic,
		[Token(Token = "0x40005BC")]
		OutBackQuartic,
		[Token(Token = "0x40005BD")]
		BackInCubic,
		[Token(Token = "0x40005BE")]
		BackInQuartic
	}
	[Token(Token = "0x200027C")]
	public class Interp
	{
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x274746C", Offset = "0x274746C", VA = "0x274746C")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x2747ED4", Offset = "0x2747ED4", VA = "0x2747ED4")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x2747FDC", Offset = "0x2747FDC", VA = "0x2747FDC")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x27477D8", Offset = "0x27477D8", VA = "0x27477D8")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x27477E4", Offset = "0x27477E4", VA = "0x27477E4")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2747808", Offset = "0x2747808", VA = "0x2747808")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x2747844", Offset = "0x2747844", VA = "0x2747844")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x274785C", Offset = "0x274785C", VA = "0x274785C")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x2747870", Offset = "0x2747870", VA = "0x2747870")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x2747884", Offset = "0x2747884", VA = "0x2747884")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x2747894", Offset = "0x2747894", VA = "0x2747894")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x27478DC", Offset = "0x27478DC", VA = "0x27478DC")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x2747914", Offset = "0x2747914", VA = "0x2747914")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x274793C", Offset = "0x274793C", VA = "0x274793C")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x27480D8", Offset = "0x27480D8", VA = "0x27480D8")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x2747970", Offset = "0x2747970", VA = "0x2747970")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x2747998", Offset = "0x2747998", VA = "0x2747998")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x27479C8", Offset = "0x27479C8", VA = "0x27479C8")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x27479FC", Offset = "0x27479FC", VA = "0x27479FC")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x2747A40", Offset = "0x2747A40", VA = "0x2747A40")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x2747AA4", Offset = "0x2747AA4", VA = "0x2747AA4")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x2747B08", Offset = "0x2747B08", VA = "0x2747B08")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x2747B5C", Offset = "0x2747B5C", VA = "0x2747B5C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x2747BB0", Offset = "0x2747BB0", VA = "0x2747BB0")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x2747C48", Offset = "0x2747C48", VA = "0x2747C48")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x2747CDC", Offset = "0x2747CDC", VA = "0x2747CDC")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x274810C", Offset = "0x274810C", VA = "0x274810C")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x2747D80", Offset = "0x2747D80", VA = "0x2747D80")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x2747E64", Offset = "0x2747E64", VA = "0x2747E64")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x2747E94", Offset = "0x2747E94", VA = "0x2747E94")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x27481F4", Offset = "0x27481F4", VA = "0x27481F4")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x27481FC", Offset = "0x27481FC", VA = "0x27481FC")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x274826C", Offset = "0x274826C", VA = "0x274826C")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x600102F")]
		[Address(RVA = "0x27482DC", Offset = "0x27482DC", VA = "0x27482DC")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x2748334", Offset = "0x2748334", VA = "0x2748334")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x2748400", Offset = "0x2748400", VA = "0x2748400")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x274834C", Offset = "0x274834C", VA = "0x274834C")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x2748418", Offset = "0x2748418", VA = "0x2748418")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x27484BC", Offset = "0x27484BC", VA = "0x27484BC")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x27484E8", Offset = "0x27484E8", VA = "0x27484E8")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x2748538", Offset = "0x2748538", VA = "0x2748538")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x27485A4", Offset = "0x27485A4", VA = "0x27485A4")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x2748698", Offset = "0x2748698", VA = "0x2748698")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x2748770", Offset = "0x2748770", VA = "0x2748770")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x27487D0", Offset = "0x27487D0", VA = "0x27487D0")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public static class QuaTools
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x2748800", Offset = "0x2748800", VA = "0x2748800")]
		public static float GetYaw(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x2748904", Offset = "0x2748904", VA = "0x2748904")]
		public static float GetPitch(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x2748A04", Offset = "0x2748A04", VA = "0x2748A04")]
		public static float GetBank(Quaternion space, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x2748C00", Offset = "0x2748C00", VA = "0x2748C00")]
		public static float GetYaw(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x2748D74", Offset = "0x2748D74", VA = "0x2748D74")]
		public static float GetPitch(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x2748EE0", Offset = "0x2748EE0", VA = "0x2748EE0")]
		public static float GetBank(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x274913C", Offset = "0x274913C", VA = "0x274913C")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x2749288", Offset = "0x2749288", VA = "0x2749288")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x27493D4", Offset = "0x27493D4", VA = "0x27493D4")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x27494E8", Offset = "0x27494E8", VA = "0x27494E8")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x27495FC", Offset = "0x27495FC", VA = "0x27495FC")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x2749788", Offset = "0x2749788", VA = "0x2749788")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x2749858", Offset = "0x2749858", VA = "0x2749858")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x27499AC", Offset = "0x27499AC", VA = "0x27499AC")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x2749C30", Offset = "0x2749C30", VA = "0x2749C30")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x2749E44", Offset = "0x2749E44", VA = "0x2749E44")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x274176C", Offset = "0x274176C", VA = "0x274176C")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x2749FC4", Offset = "0x2749FC4", VA = "0x2749FC4")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x274A0D4", Offset = "0x274A0D4", VA = "0x274A0D4")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000280")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x170001F0")]
		public static T instance
		{
			[Token(Token = "0x600104E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104F")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001050")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACEB4", Offset = "0x12ACEB4")]
		public bool fixTransforms;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x170001F1")]
		private bool animatePhysics
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x274A268", Offset = "0x274A268", VA = "0x274A268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		private bool isAnimated
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x274A564", Offset = "0x274A564", VA = "0x274A564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x274A130", Offset = "0x274A130", VA = "0x274A130")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x274A1C8", Offset = "0x274A1C8", VA = "0x274A1C8", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x274A1CC", Offset = "0x274A1CC", VA = "0x274A1CC", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x274A1D0", Offset = "0x274A1D0", VA = "0x274A1D0", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x274A1D4", Offset = "0x274A1D4", VA = "0x274A1D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x274A264", Offset = "0x274A264", VA = "0x274A264")]
		private void Start()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x274A20C", Offset = "0x274A20C", VA = "0x274A20C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x274A518", Offset = "0x274A518", VA = "0x274A518")]
		private void Update()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x274A358", Offset = "0x274A358", VA = "0x274A358")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x274A620", Offset = "0x274A620", VA = "0x274A620")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x274A67C", Offset = "0x274A67C", VA = "0x274A67C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x274A6D8", Offset = "0x274A6D8", VA = "0x274A6D8")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x274A720", Offset = "0x274A720", VA = "0x274A720")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x274A7A0", Offset = "0x274A7A0", VA = "0x274A7A0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x274A858", Offset = "0x274A858", VA = "0x274A858")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x274A910", Offset = "0x274A910", VA = "0x274A910")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x274A9C8", Offset = "0x274A9C8", VA = "0x274A9C8")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class V2Tools
	{
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x274A9D0", Offset = "0x274A9D0", VA = "0x274A9D0")]
		public static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x274AA00", Offset = "0x274AA00", VA = "0x274AA00")]
		public static float DeltaAngle(Vector2 dir1, Vector2 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x274AAAC", Offset = "0x274AAAC", VA = "0x274AAAC")]
		public static float DeltaAngleXZ(Vector3 dir1, Vector3 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x274AB58", Offset = "0x274AB58", VA = "0x274AB58")]
		public static bool LineCircleIntersect(Vector2 p1, Vector2 p2, Vector2 c, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x274AD28", Offset = "0x274AD28", VA = "0x274AD28")]
		public static bool RayCircleIntersect(Vector2 p1, Vector2 dir, Vector2 c, float r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000284")]
	public static class V3Tools
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x274AE90", Offset = "0x274AE90", VA = "0x274AE90")]
		public static float GetYaw(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x274AF14", Offset = "0x274AF14", VA = "0x274AF14")]
		public static float GetPitch(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x274AFB4", Offset = "0x274AFB4", VA = "0x274AFB4")]
		public static float GetBank(Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x274B0F8", Offset = "0x274B0F8", VA = "0x274B0F8")]
		public static float GetYaw(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x274B218", Offset = "0x274B218", VA = "0x274B218")]
		public static float GetPitch(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x274B330", Offset = "0x274B330", VA = "0x274B330")]
		public static float GetBank(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x274B4F4", Offset = "0x274B4F4", VA = "0x274B4F4")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x274B5EC", Offset = "0x274B5EC", VA = "0x274B5EC")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x274B6E4", Offset = "0x274B6E4", VA = "0x274B6E4")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x274B7DC", Offset = "0x274B7DC", VA = "0x274B7DC")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x274B8DC", Offset = "0x274B8DC", VA = "0x274B8DC")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x274BB00", Offset = "0x274BB00", VA = "0x274BB00")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x274BD3C", Offset = "0x274BD3C", VA = "0x274BD3C")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x274BF8C", Offset = "0x274BF8C", VA = "0x274BF8C")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x274C18C", Offset = "0x274C18C", VA = "0x274C18C")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x274C368", Offset = "0x274C368", VA = "0x274C368")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x274C49C", Offset = "0x274C49C", VA = "0x274C49C")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x274C5F4", Offset = "0x274C5F4", VA = "0x274C5F4")]
		public static Vector3 InverseTransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x274C780", Offset = "0x274C780", VA = "0x274C780")]
		public static Vector3 TransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x274C740", Offset = "0x274C740", VA = "0x274C740")]
		public static Vector3 Div(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000285")]
	public static class Warning
	{
		[Token(Token = "0x2000534")]
		public delegate void Logger(string message);

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x274C8BC", Offset = "0x274C8BC", VA = "0x274C8BC")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x274CCE8", Offset = "0x274CCE8", VA = "0x274CCE8")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9D14", Offset = "0x12A9D14")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9D14", Offset = "0x12A9D14")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x2AB05FC", Offset = "0x2AB05FC", VA = "0x2AB05FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9784", Offset = "0x12B9784")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x2AB0648", Offset = "0x2AB0648", VA = "0x2AB0648")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B97BC", Offset = "0x12B97BC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x2AB0694", Offset = "0x2AB0694", VA = "0x2AB0694")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B97F4", Offset = "0x12B97F4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x2AB06E0", Offset = "0x2AB06E0", VA = "0x2AB06E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B982C", Offset = "0x12B982C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x2AB072C", Offset = "0x2AB072C", VA = "0x2AB072C")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x2AB07C8", Offset = "0x2AB07C8", VA = "0x2AB07C8")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x2AB07E8", Offset = "0x2AB07E8", VA = "0x2AB07E8")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x2AB0818", Offset = "0x2AB0818", VA = "0x2AB0818")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x2AB0848", Offset = "0x2AB0848", VA = "0x2AB0848")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x2AB0888", Offset = "0x2AB0888", VA = "0x2AB0888")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x2AB08CC", Offset = "0x2AB08CC", VA = "0x2AB08CC")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x2AB08F0", Offset = "0x2AB08F0", VA = "0x2AB08F0")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x2AB0914", Offset = "0x2AB0914", VA = "0x2AB0914")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x2AB093C", Offset = "0x2AB093C", VA = "0x2AB093C")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x2AB0968", Offset = "0x2AB0968", VA = "0x2AB0968")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x2AB0994", Offset = "0x2AB0994", VA = "0x2AB0994")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x2AB074C", Offset = "0x2AB074C", VA = "0x2AB074C")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x2AB09BC", Offset = "0x2AB09BC", VA = "0x2AB09BC")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x2AB09C8", Offset = "0x2AB09C8", VA = "0x2AB09C8")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x2AB09D4", Offset = "0x2AB09D4", VA = "0x2AB09D4")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x2AB0CBC", Offset = "0x2AB0CBC", VA = "0x2AB0CBC", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x2AB0D64", Offset = "0x2AB0D64", VA = "0x2AB0D64", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x2AB10AC", Offset = "0x2AB10AC", VA = "0x2AB10AC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x2AB1594", Offset = "0x2AB1594", VA = "0x2AB1594")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x2AB15C8", Offset = "0x2AB15C8", VA = "0x2AB15C8")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000287")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x170001F3")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x2AB0B74", Offset = "0x2AB0B74", VA = "0x2AB0B74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x2AB1794", Offset = "0x2AB1794", VA = "0x2AB1794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x2AB0F34", Offset = "0x2AB0F34", VA = "0x2AB0F34")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x2AB164C", Offset = "0x2AB164C", VA = "0x2AB164C")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000288")]
	public abstract class Constraint
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x170001F5")]
		public bool isValid
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x2AB226C", Offset = "0x2AB226C", VA = "0x2AB226C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600109E")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2AB22DC", Offset = "0x2AB22DC", VA = "0x2AB22DC")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000289")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x2AB22E4", Offset = "0x2AB22E4", VA = "0x2AB22E4", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x2AB23F0", Offset = "0x2AB23F0", VA = "0x2AB23F0")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x2AB23F8", Offset = "0x2AB23F8", VA = "0x2AB23F8")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028A")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x170001F6")]
		private bool positionChanged
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x2AB25C0", Offset = "0x2AB25C0", VA = "0x2AB25C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x2AB2424", Offset = "0x2AB2424", VA = "0x2AB2424", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x2AB267C", Offset = "0x2AB267C", VA = "0x2AB267C")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x2AB2684", Offset = "0x2AB2684", VA = "0x2AB2684")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028B")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x2AB26B0", Offset = "0x2AB26B0", VA = "0x2AB26B0", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x2AB27D8", Offset = "0x2AB27D8", VA = "0x2AB27D8")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x2AB27E0", Offset = "0x2AB27E0", VA = "0x2AB27E0")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028C")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x170001F7")]
		private bool rotationChanged
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x2AB29AC", Offset = "0x2AB29AC", VA = "0x2AB29AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x2AB280C", Offset = "0x2AB280C", VA = "0x2AB280C", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x2AB2A7C", Offset = "0x2AB2A7C", VA = "0x2AB2A7C")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x2AB2A84", Offset = "0x2AB2A84", VA = "0x2AB2A84")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public class Constraints
	{
		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACEEC", Offset = "0x12ACEEC")]
		public float positionWeight;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACF04", Offset = "0x12ACF04")]
		public float rotationWeight;

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x2AB2AB0", Offset = "0x2AB2AB0", VA = "0x2AB2AB0")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x2AB1058", Offset = "0x2AB1058", VA = "0x2AB1058")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x2AB1234", Offset = "0x2AB1234", VA = "0x2AB1234")]
		public void Update()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x2AB1960", Offset = "0x2AB1960", VA = "0x2AB1960")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028E")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x2000535")]
		public enum DOF
		{
			[Token(Token = "0x40010DF")]
			One,
			[Token(Token = "0x40010E0")]
			Three
		}

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACF1C", Offset = "0x12ACF1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACF1C", Offset = "0x12ACF1C")]
		public float weight;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACF70", Offset = "0x12ACF70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ACF70", Offset = "0x12ACF70")]
		public float rotationWeight;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACFC4", Offset = "0x12ACFC4")]
		public DOF rotationDOF;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ACFFC", Offset = "0x12ACFFC")]
		public bool fixBone1Twist;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD034", Offset = "0x12AD034")]
		public Transform bone1;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD06C", Offset = "0x12AD06C")]
		public Transform bone2;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD0A4", Offset = "0x12AD0A4")]
		public Transform bone3;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD0DC", Offset = "0x12AD0DC")]
		public Transform tip;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD114", Offset = "0x12AD114")]
		public Transform target;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AD14C", Offset = "0x12AD14C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 defaultBendNormal;

		[Token(Token = "0x170001F8")]
		public bool initiated
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x2ABA908", Offset = "0x2ABA908", VA = "0x2ABA908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9864", Offset = "0x12B9864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x2ABA910", Offset = "0x2ABA910", VA = "0x2ABA910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9874", Offset = "0x12B9874")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x2ABA91C", Offset = "0x2ABA91C", VA = "0x2ABA91C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x2ABA93C", Offset = "0x2ABA93C", VA = "0x2ABA93C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x2ABA95C", Offset = "0x2ABA95C", VA = "0x2ABA95C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x2ABA97C", Offset = "0x2ABA97C", VA = "0x2ABA97C")]
			set
			{
			}
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x2ABA99C", Offset = "0x2ABA99C", VA = "0x2ABA99C")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x2ABAA9C", Offset = "0x2ABAA9C", VA = "0x2ABAA9C")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x2ABB130", Offset = "0x2ABB130", VA = "0x2ABB130")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x2ABB20C", Offset = "0x2ABB20C", VA = "0x2ABB20C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x2ABB2D4", Offset = "0x2ABB2D4", VA = "0x2ABB2D4")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x2ABB8F0", Offset = "0x2ABB8F0", VA = "0x2ABB8F0")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD15C", Offset = "0x12AD15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD15C", Offset = "0x12AD15C")]
		public float weight;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AD1B0", Offset = "0x12AD1B0")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170001FB")]
		public bool initiated
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x2ABB900", Offset = "0x2ABB900", VA = "0x2ABB900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9884", Offset = "0x12B9884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x2ABB908", Offset = "0x2ABB908", VA = "0x2ABB908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9894", Offset = "0x12B9894")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x2ABB914", Offset = "0x2ABB914", VA = "0x2ABB914")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x2ABB99C", Offset = "0x2ABB99C", VA = "0x2ABB99C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B98A4", Offset = "0x12B98A4")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x2ABBCC0", Offset = "0x2ABBCC0", VA = "0x2ABBCC0")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x2ABBE30", Offset = "0x2ABBE30", VA = "0x2ABBE30")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x2ABBBB8", Offset = "0x2ABBBB8", VA = "0x2ABBBB8")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x2ABBF98", Offset = "0x2ABBF98", VA = "0x2ABBF98", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x2ABC058", Offset = "0x2ABC058", VA = "0x2ABC058")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x2ABC0D0", Offset = "0x2ABC0D0", VA = "0x2ABC0D0")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x2ABC144", Offset = "0x2ABC144", VA = "0x2ABC144")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x2ABC1AC", Offset = "0x2ABC1AC", VA = "0x2ABC1AC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x2ABC1B0", Offset = "0x2ABC1B0", VA = "0x2ABC1B0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x2ABC1C4", Offset = "0x2ABC1C4", VA = "0x2ABC1C4")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000536")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD1C0", Offset = "0x12AD1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD1C0", Offset = "0x12AD1C0")]
		public float weight;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD214", Offset = "0x12AD214")]
		public Grounding solver;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AD24C", Offset = "0x12AD24C")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170001FC")]
		public bool initiated
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x2ABD1F8", Offset = "0x2ABD1F8", VA = "0x2ABD1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B98DC", Offset = "0x12B98DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x2ABD200", Offset = "0x2ABD200", VA = "0x2ABD200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B98EC", Offset = "0x12B98EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x60010CC")]
		public abstract void ResetPosition();

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x2ABD20C", Offset = "0x2ABD20C", VA = "0x2ABD20C")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x2ABD4E0", Offset = "0x2ABD4E0", VA = "0x2ABD4E0")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x2ABD350", Offset = "0x2ABD350", VA = "0x2ABD350")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x2ABD514", Offset = "0x2ABD514", VA = "0x2ABD514")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D3")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60010D4")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x2ABD71C", Offset = "0x2ABD71C", VA = "0x2ABD71C")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9D74", Offset = "0x12A9D74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9D74", Offset = "0x12A9D74")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD25C", Offset = "0x12AD25C")]
		public BipedIK ik;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD294", Offset = "0x12AD294")]
		public float spineBend;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD2CC", Offset = "0x12AD2CC")]
		public float spineSpeed;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x2ABDA84", Offset = "0x2ABDA84", VA = "0x2ABDA84", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B98FC", Offset = "0x12B98FC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x2ABDAD0", Offset = "0x2ABDAD0", VA = "0x2ABDAD0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9934", Offset = "0x12B9934")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x2ABDB1C", Offset = "0x2ABDB1C", VA = "0x2ABDB1C", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x2ABDC28", Offset = "0x2ABDC28", VA = "0x2ABDC28")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x2ABDCD8", Offset = "0x2ABDCD8", VA = "0x2ABDCD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x2ABDD8C", Offset = "0x2ABDD8C", VA = "0x2ABDD8C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x2ABE2A8", Offset = "0x2ABE2A8", VA = "0x2ABE2A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x2ABE2FC", Offset = "0x2ABE2FC", VA = "0x2ABE2FC")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x2ABEB18", Offset = "0x2ABEB18", VA = "0x2ABEB18")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x2ABEC78", Offset = "0x2ABEC78", VA = "0x2ABEC78")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x2ABEE08", Offset = "0x2ABEE08", VA = "0x2ABEE08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x2ABEF78", Offset = "0x2ABEF78", VA = "0x2ABEF78")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9DD4", Offset = "0x12A9DD4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9DD4", Offset = "0x12A9DD4")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x2000537")]
		public class SpineEffector
		{
			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1A58", Offset = "0x12B1A58")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1A90", Offset = "0x12B1A90")]
			public float horizontalWeight;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1AC8", Offset = "0x12B1AC8")]
			public float verticalWeight;

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x2ABFDE0", Offset = "0x2ABFDE0", VA = "0x2ABFDE0")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x2ABFDF0", Offset = "0x2ABFDF0", VA = "0x2ABFDF0")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD304", Offset = "0x12AD304")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD33C", Offset = "0x12AD33C")]
		public float spineBend;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD374", Offset = "0x12AD374")]
		public float spineSpeed;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x2ABEFF8", Offset = "0x2ABEFF8", VA = "0x2ABEFF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B996C", Offset = "0x12B996C")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x2ABF044", Offset = "0x2ABF044", VA = "0x2ABF044", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B99A4", Offset = "0x12B99A4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2ABF090", Offset = "0x2ABF090", VA = "0x2ABF090", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B99DC", Offset = "0x12B99DC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x2ABF0DC", Offset = "0x2ABF0DC", VA = "0x2ABF0DC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x2ABF15C", Offset = "0x2ABF15C", VA = "0x2ABF15C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x2ABF1F4", Offset = "0x2ABF1F4", VA = "0x2ABF1F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x2ABF4B0", Offset = "0x2ABF4B0", VA = "0x2ABF4B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x2ABF4BC", Offset = "0x2ABF4BC", VA = "0x2ABF4BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x2ABF2B0", Offset = "0x2ABF2B0", VA = "0x2ABF2B0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x2ABF4C8", Offset = "0x2ABF4C8", VA = "0x2ABF4C8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x2ABF968", Offset = "0x2ABF968", VA = "0x2ABF968")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x2ABFB28", Offset = "0x2ABFB28", VA = "0x2ABFB28")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x2ABFC60", Offset = "0x2ABFC60", VA = "0x2ABFC60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x2ABFD60", Offset = "0x2ABFD60", VA = "0x2ABFD60")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9E34", Offset = "0x12A9E34")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9E34", Offset = "0x12A9E34")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD3AC", Offset = "0x12AD3AC")]
		public Transform pelvis;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD3E4", Offset = "0x12AD3E4")]
		public Transform characterRoot;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD41C", Offset = "0x12AD41C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD41C", Offset = "0x12AD41C")]
		public float rootRotationWeight;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD470", Offset = "0x12AD470")]
		public float rootRotationSpeed;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD4A8", Offset = "0x12AD4A8")]
		public float maxRootRotationAngle;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x2ABFE38", Offset = "0x2ABFE38", VA = "0x2ABFE38", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9A14", Offset = "0x12B9A14")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x2ABFE84", Offset = "0x2ABFE84", VA = "0x2ABFE84", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9A4C", Offset = "0x12B9A4C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x2ABFED0", Offset = "0x2ABFED0", VA = "0x2ABFED0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x2ABFEE8", Offset = "0x2ABFEE8", VA = "0x2ABFEE8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x2AC00D8", Offset = "0x2AC00D8", VA = "0x2AC00D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x2AC01D8", Offset = "0x2AC01D8", VA = "0x2AC01D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x2AC0920", Offset = "0x2AC0920", VA = "0x2AC0920")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x2AC0D04", Offset = "0x2AC0D04", VA = "0x2AC0D04")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x2AC0F74", Offset = "0x2AC0F74", VA = "0x2AC0F74")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x2AC1294", Offset = "0x2AC1294", VA = "0x2AC1294")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x2AC1430", Offset = "0x2AC1430", VA = "0x2AC1430")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x2AC15F8", Offset = "0x2AC15F8", VA = "0x2AC15F8")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9E94", Offset = "0x12A9E94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9E94", Offset = "0x12A9E94")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x2000538")]
		public struct Foot
		{
			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x141DEA4", Offset = "0x141DEA4", VA = "0x141DEA4")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD4E0", Offset = "0x12AD4E0")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD518", Offset = "0x12AD518")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD518", Offset = "0x12AD518")]
		public float rootRotationWeight;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD56C", Offset = "0x12AD56C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD56C", Offset = "0x12AD56C")]
		public float minRootRotation;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD5C4", Offset = "0x12AD5C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD5C4", Offset = "0x12AD5C4")]
		public float maxRootRotation;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD61C", Offset = "0x12AD61C")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD654", Offset = "0x12AD654")]
		public float maxLegOffset;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD68C", Offset = "0x12AD68C")]
		public float maxForeLegOffset;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD6C4", Offset = "0x12AD6C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD6C4", Offset = "0x12AD6C4")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD718", Offset = "0x12AD718")]
		public Transform characterRoot;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD750", Offset = "0x12AD750")]
		public Transform pelvis;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD788", Offset = "0x12AD788")]
		public Transform lastSpineBone;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD7C0", Offset = "0x12AD7C0")]
		public Transform head;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x2AC1678", Offset = "0x2AC1678", VA = "0x2AC1678", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9A84", Offset = "0x12B9A84")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x2AC16C4", Offset = "0x2AC16C4", VA = "0x2AC16C4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9ABC", Offset = "0x12B9ABC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x2AC1710", Offset = "0x2AC1710", VA = "0x2AC1710", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x2AC1744", Offset = "0x2AC1744", VA = "0x2AC1744")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x2AC1874", Offset = "0x2AC1874", VA = "0x2AC1874")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x2AC1A34", Offset = "0x2AC1A34", VA = "0x2AC1A34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x2AC1A9C", Offset = "0x2AC1A9C", VA = "0x2AC1A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x2AC1B54", Offset = "0x2AC1B54", VA = "0x2AC1B54")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x2AC1E54", Offset = "0x2AC1E54", VA = "0x2AC1E54")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x2AC21B4", Offset = "0x2AC21B4", VA = "0x2AC21B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x2AC2300", Offset = "0x2AC2300", VA = "0x2AC2300")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x2AC27A4", Offset = "0x2AC27A4", VA = "0x2AC27A4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x2AC2F94", Offset = "0x2AC2F94", VA = "0x2AC2F94")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x2AC3254", Offset = "0x2AC3254", VA = "0x2AC3254")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x2AC33B4", Offset = "0x2AC33B4", VA = "0x2AC33B4")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x2AC3690", Offset = "0x2AC3690", VA = "0x2AC3690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x2AC36C8", Offset = "0x2AC36C8", VA = "0x2AC36C8")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x2AC3888", Offset = "0x2AC3888", VA = "0x2AC3888")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9EF4", Offset = "0x12A9EF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9EF4", Offset = "0x12A9EF4")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD808", Offset = "0x12AD808")]
		public VRIK ik;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x2AC39A0", Offset = "0x2AC39A0", VA = "0x2AC39A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9AF4", Offset = "0x12B9AF4")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x2AC39EC", Offset = "0x2AC39EC", VA = "0x2AC39EC", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9B2C", Offset = "0x12B9B2C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x2AC3A38", Offset = "0x2AC3A38", VA = "0x2AC3A38", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9B64", Offset = "0x12B9B64")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x2AC3A84", Offset = "0x2AC3A84", VA = "0x2AC3A84", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x2AC3A9C", Offset = "0x2AC3A9C", VA = "0x2AC3A9C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x2AC3B34", Offset = "0x2AC3B34", VA = "0x2AC3B34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x2AC3BE8", Offset = "0x2AC3BE8", VA = "0x2AC3BE8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x2AC3DE8", Offset = "0x2AC3DE8", VA = "0x2AC3DE8")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x2AC407C", Offset = "0x2AC407C", VA = "0x2AC407C")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x2AC4184", Offset = "0x2AC4184", VA = "0x2AC4184")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x2AC4384", Offset = "0x2AC4384", VA = "0x2AC4384")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x2AC44BC", Offset = "0x2AC44BC", VA = "0x2AC44BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x2AC461C", Offset = "0x2AC461C", VA = "0x2AC461C")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		public enum Quality
		{
			[Token(Token = "0x40010E9")]
			Fastest,
			[Token(Token = "0x40010EA")]
			Simple,
			[Token(Token = "0x40010EB")]
			Best
		}

		[Token(Token = "0x200053A")]
		public class Leg
		{
			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B00", Offset = "0x12B1B00")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B10", Offset = "0x12B1B10")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B20", Offset = "0x12B1B20")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B30", Offset = "0x12B1B30")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B40", Offset = "0x12B1B40")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B50", Offset = "0x12B1B50")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B60", Offset = "0x12B1B60")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B70", Offset = "0x12B1B70")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B80", Offset = "0x12B1B80")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x1700031C")]
			public bool isGrounded
			{
				[Token(Token = "0x6001E6B")]
				[Address(RVA = "0x2D11F40", Offset = "0x2D11F40", VA = "0x2D11F40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE4CC", Offset = "0x12BE4CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E6C")]
				[Address(RVA = "0x2D11F48", Offset = "0x2D11F48", VA = "0x2D11F48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE4DC", Offset = "0x12BE4DC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700031D")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6001E6D")]
				[Address(RVA = "0x2D11F54", Offset = "0x2D11F54", VA = "0x2D11F54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE4EC", Offset = "0x12BE4EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001E6E")]
				[Address(RVA = "0x2D11F60", Offset = "0x2D11F60", VA = "0x2D11F60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE4FC", Offset = "0x12BE4FC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700031E")]
			public bool initiated
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0x2D11F6C", Offset = "0x2D11F6C", VA = "0x2D11F6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE50C", Offset = "0x12BE50C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E70")]
				[Address(RVA = "0x2D11F74", Offset = "0x2D11F74", VA = "0x2D11F74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE51C", Offset = "0x12BE51C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700031F")]
			public float heightFromGround
			{
				[Token(Token = "0x6001E71")]
				[Address(RVA = "0x2D11F80", Offset = "0x2D11F80", VA = "0x2D11F80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE52C", Offset = "0x12BE52C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E72")]
				[Address(RVA = "0x2D11F88", Offset = "0x2D11F88", VA = "0x2D11F88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE53C", Offset = "0x12BE53C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000320")]
			public Vector3 velocity
			{
				[Token(Token = "0x6001E73")]
				[Address(RVA = "0x2D11F90", Offset = "0x2D11F90", VA = "0x2D11F90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE54C", Offset = "0x12BE54C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001E74")]
				[Address(RVA = "0x2D11F9C", Offset = "0x2D11F9C", VA = "0x2D11F9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE55C", Offset = "0x12BE55C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000321")]
			public Transform transform
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0x2D11FA8", Offset = "0x2D11FA8", VA = "0x2D11FA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE56C", Offset = "0x12BE56C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E76")]
				[Address(RVA = "0x2D11FB0", Offset = "0x2D11FB0", VA = "0x2D11FB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE57C", Offset = "0x12BE57C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000322")]
			public float IKOffset
			{
				[Token(Token = "0x6001E77")]
				[Address(RVA = "0x2D11FB8", Offset = "0x2D11FB8", VA = "0x2D11FB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE58C", Offset = "0x12BE58C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E78")]
				[Address(RVA = "0x2D11FC0", Offset = "0x2D11FC0", VA = "0x2D11FC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE59C", Offset = "0x12BE59C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000323")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6001E79")]
				[Address(RVA = "0x2D11FC8", Offset = "0x2D11FC8", VA = "0x2D11FC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5AC", Offset = "0x12BE5AC")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6001E7A")]
				[Address(RVA = "0x2D11FE0", Offset = "0x2D11FE0", VA = "0x2D11FE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5BC", Offset = "0x12BE5BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000324")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x6001E7B")]
				[Address(RVA = "0x2D12000", Offset = "0x2D12000", VA = "0x2D12000")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5CC", Offset = "0x12BE5CC")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6001E7C")]
				[Address(RVA = "0x2D12018", Offset = "0x2D12018", VA = "0x2D12018")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5DC", Offset = "0x12BE5DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000325")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x6001E7D")]
				[Address(RVA = "0x2D12038", Offset = "0x2D12038", VA = "0x2D12038")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x17000326")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6001E83")]
				[Address(RVA = "0x2D13A40", Offset = "0x2D13A40", VA = "0x2D13A40")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000327")]
			private float rootYOffset
			{
				[Token(Token = "0x6001E8C")]
				[Address(RVA = "0x2D13D1C", Offset = "0x2D13D1C", VA = "0x2D13D1C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x2D12080", Offset = "0x2D12080", VA = "0x2D12080")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x2D12094", Offset = "0x2D12094", VA = "0x2D12094")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x2D12178", Offset = "0x2D12178", VA = "0x2D12178")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x2D121C4", Offset = "0x2D121C4", VA = "0x2D121C4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x2D12278", Offset = "0x2D12278", VA = "0x2D12278")]
			public void Process()
			{
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x2D134B0", Offset = "0x2D134B0", VA = "0x2D134B0")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x2D12D20", Offset = "0x2D12D20", VA = "0x2D12D20")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x2D13BC0", Offset = "0x2D13BC0", VA = "0x2D13BC0")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x2D1315C", Offset = "0x2D1315C", VA = "0x2D1315C")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x2D13264", Offset = "0x2D13264", VA = "0x2D13264")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x2D13CBC", Offset = "0x2D13CBC", VA = "0x2D13CBC")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x2D13ACC", Offset = "0x2D13ACC", VA = "0x2D13ACC")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x2D13E48", Offset = "0x2D13E48", VA = "0x2D13E48")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x2D13F38", Offset = "0x2D13F38", VA = "0x2D13F38")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x200053B")]
		public class Pelvis
		{
			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1B90", Offset = "0x12B1B90")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1BA0", Offset = "0x12B1BA0")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000328")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6001E8E")]
				[Address(RVA = "0x2D13FE0", Offset = "0x2D13FE0", VA = "0x2D13FE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5EC", Offset = "0x12BE5EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001E8F")]
				[Address(RVA = "0x2D13FEC", Offset = "0x2D13FEC", VA = "0x2D13FEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE5FC", Offset = "0x12BE5FC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000329")]
			public float heightOffset
			{
				[Token(Token = "0x6001E90")]
				[Address(RVA = "0x2D13FF8", Offset = "0x2D13FF8", VA = "0x2D13FF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE60C", Offset = "0x12BE60C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0x2D14000", Offset = "0x2D14000", VA = "0x2D14000")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE61C", Offset = "0x12BE61C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x2D14008", Offset = "0x2D14008", VA = "0x2D14008")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x2D14078", Offset = "0x2D14078", VA = "0x2D14078")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x2D14018", Offset = "0x2D14018", VA = "0x2D14018")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x2D14128", Offset = "0x2D14128", VA = "0x2D14128")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x2D14374", Offset = "0x2D14374", VA = "0x2D14374")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD840", Offset = "0x12AD840")]
		public LayerMask layers;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD878", Offset = "0x12AD878")]
		public float maxStep;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD8B0", Offset = "0x12AD8B0")]
		public float heightOffset;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD8E8", Offset = "0x12AD8E8")]
		public float footSpeed;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD920", Offset = "0x12AD920")]
		public float footRadius;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD958", Offset = "0x12AD958")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD9A4", Offset = "0x12AD9A4")]
		public float prediction;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AD9DC", Offset = "0x12AD9DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AD9DC", Offset = "0x12AD9DC")]
		public float footRotationWeight;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADA30", Offset = "0x12ADA30")]
		public float footRotationSpeed;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADA68", Offset = "0x12ADA68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADA68", Offset = "0x12ADA68")]
		public float maxFootRotationAngle;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADAC0", Offset = "0x12ADAC0")]
		public bool rotateSolver;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADAF8", Offset = "0x12ADAF8")]
		public float pelvisSpeed;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADB30", Offset = "0x12ADB30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADB30", Offset = "0x12ADB30")]
		public float pelvisDamper;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADB84", Offset = "0x12ADB84")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADBBC", Offset = "0x12ADBBC")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADBF4", Offset = "0x12ADBF4")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADC2C", Offset = "0x12ADC2C")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADC64", Offset = "0x12ADC64")]
		public Quality quality;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ADC9C", Offset = "0x12ADC9C")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ADCAC", Offset = "0x12ADCAC")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ADCBC", Offset = "0x12ADCBC")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ADCCC", Offset = "0x12ADCCC")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ADCDC", Offset = "0x12ADCDC")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x170001FD")]
		public Leg[] legs
		{
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x2AC4678", Offset = "0x2AC4678", VA = "0x2AC4678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9B9C", Offset = "0x12B9B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x2AC4680", Offset = "0x2AC4680", VA = "0x2AC4680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BAC", Offset = "0x12B9BAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Pelvis pelvis
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x2AC4688", Offset = "0x2AC4688", VA = "0x2AC4688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BBC", Offset = "0x12B9BBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x2AC4690", Offset = "0x2AC4690", VA = "0x2AC4690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BCC", Offset = "0x12B9BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool isGrounded
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x2AC4698", Offset = "0x2AC4698", VA = "0x2AC4698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BDC", Offset = "0x12B9BDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x2AC46A0", Offset = "0x2AC46A0", VA = "0x2AC46A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BEC", Offset = "0x12B9BEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public Transform root
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x2AC46AC", Offset = "0x2AC46AC", VA = "0x2AC46AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9BFC", Offset = "0x12B9BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x2AC46B4", Offset = "0x2AC46B4", VA = "0x2AC46B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9C0C", Offset = "0x12B9C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x2AC46BC", Offset = "0x2AC46BC", VA = "0x2AC46BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9C1C", Offset = "0x12B9C1C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x2AC46D4", Offset = "0x2AC46D4", VA = "0x2AC46D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B9C2C", Offset = "0x12B9C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public bool rootGrounded
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x2AC46F4", Offset = "0x2AC46F4", VA = "0x2AC46F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public Vector3 up
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x2ABEBEC", Offset = "0x2ABEBEC", VA = "0x2ABEBEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000204")]
		private bool useRootRotation
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x2AC4C1C", Offset = "0x2AC4C1C", VA = "0x2AC4C1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x2AC4748", Offset = "0x2AC4748", VA = "0x2AC4748")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x2AC4B28", Offset = "0x2AC4B28", VA = "0x2AC4B28")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x2ABE040", Offset = "0x2ABE040", VA = "0x2ABE040")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x2ABE868", Offset = "0x2ABE868", VA = "0x2ABE868")]
		public void Update()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x2AC0708", Offset = "0x2AC0708", VA = "0x2AC0708")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x2ABDB9C", Offset = "0x2ABDB9C", VA = "0x2ABDB9C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x2AC4C04", Offset = "0x2AC4C04", VA = "0x2AC4C04")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x2AC4CEC", Offset = "0x2AC4CEC", VA = "0x2AC4CEC")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x2AC4E54", Offset = "0x2AC4E54", VA = "0x2AC4E54")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x2AC4F58", Offset = "0x2AC4F58", VA = "0x2AC4F58")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x2ABD7DC", Offset = "0x2ABD7DC", VA = "0x2ABD7DC")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9F54", Offset = "0x12A9F54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9F54", Offset = "0x12A9F54")]
	public class AimIK : IK
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x2AAF828", Offset = "0x2AAF828", VA = "0x2AAF828", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9C3C", Offset = "0x12B9C3C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x2AAF874", Offset = "0x2AAF874", VA = "0x2AAF874", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9C74", Offset = "0x12B9C74")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x2AAF8C0", Offset = "0x2AAF8C0", VA = "0x2AAF8C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9CAC", Offset = "0x12B9CAC")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x2AAF90C", Offset = "0x2AAF90C", VA = "0x2AAF90C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9CE4", Offset = "0x12B9CE4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x2AAF958", Offset = "0x2AAF958", VA = "0x2AAF958")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9D1C", Offset = "0x12B9D1C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x2AAF9A4", Offset = "0x2AAF9A4", VA = "0x2AAF9A4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x2AAF9AC", Offset = "0x2AAF9AC", VA = "0x2AAF9AC")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12A9FB4", Offset = "0x12A9FB4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12A9FB4", Offset = "0x12A9FB4")]
	public class ArmIK : IK
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x2AB045C", Offset = "0x2AB045C", VA = "0x2AB045C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9D54", Offset = "0x12B9D54")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x2AB04A8", Offset = "0x2AB04A8", VA = "0x2AB04A8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9D8C", Offset = "0x12B9D8C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x2AB04F4", Offset = "0x2AB04F4", VA = "0x2AB04F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9DC4", Offset = "0x12B9DC4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x2AB0540", Offset = "0x2AB0540", VA = "0x2AB0540")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9DFC", Offset = "0x12B9DFC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x2AB058C", Offset = "0x2AB058C", VA = "0x2AB058C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x2AB0594", Offset = "0x2AB0594", VA = "0x2AB0594")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA014", Offset = "0x12AA014")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA014", Offset = "0x12AA014")]
	public class CCDIK : IK
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x2AB20CC", Offset = "0x2AB20CC", VA = "0x2AB20CC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9E34", Offset = "0x12B9E34")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x2AB2118", Offset = "0x2AB2118", VA = "0x2AB2118", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9E6C", Offset = "0x12B9E6C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x2AB2164", Offset = "0x2AB2164", VA = "0x2AB2164")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9EA4", Offset = "0x12B9EA4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x2AB21B0", Offset = "0x2AB21B0", VA = "0x2AB21B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9EDC", Offset = "0x12B9EDC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x2AB21FC", Offset = "0x2AB21FC", VA = "0x2AB21FC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x2AB2204", Offset = "0x2AB2204", VA = "0x2AB2204")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA074", Offset = "0x12AA074")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA074", Offset = "0x12AA074")]
	public class FABRIK : IK
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x2AB37AC", Offset = "0x2AB37AC", VA = "0x2AB37AC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9F14", Offset = "0x12B9F14")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x2AB37F8", Offset = "0x2AB37F8", VA = "0x2AB37F8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9F4C", Offset = "0x12B9F4C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x2AB3844", Offset = "0x2AB3844", VA = "0x2AB3844")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9F84", Offset = "0x12B9F84")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x2AB3890", Offset = "0x2AB3890", VA = "0x2AB3890")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9FBC", Offset = "0x12B9FBC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x2AB38DC", Offset = "0x2AB38DC", VA = "0x2AB38DC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x2AB38E4", Offset = "0x2AB38E4", VA = "0x2AB38E4")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA0D4", Offset = "0x12AA0D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA0D4", Offset = "0x12AA0D4")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x2AB3F64", Offset = "0x2AB3F64", VA = "0x2AB3F64", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12B9FF4", Offset = "0x12B9FF4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x2AB3FB0", Offset = "0x2AB3FB0", VA = "0x2AB3FB0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA02C", Offset = "0x12BA02C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x2AB3FFC", Offset = "0x2AB3FFC", VA = "0x2AB3FFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA064", Offset = "0x12BA064")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x2AB4048", Offset = "0x2AB4048", VA = "0x2AB4048")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA09C", Offset = "0x12BA09C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x2AB4094", Offset = "0x2AB4094", VA = "0x2AB4094", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x2AB409C", Offset = "0x2AB409C", VA = "0x2AB409C")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA134", Offset = "0x12AA134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA134", Offset = "0x12AA134")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x2ABC22C", Offset = "0x2ABC22C", VA = "0x2ABC22C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA0D4", Offset = "0x12BA0D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x2ABC278", Offset = "0x2ABC278", VA = "0x2ABC278", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA10C", Offset = "0x12BA10C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x2ABC2C4", Offset = "0x2ABC2C4", VA = "0x2ABC2C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA144", Offset = "0x12BA144")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x2ABC310", Offset = "0x2ABC310", VA = "0x2ABC310")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA17C", Offset = "0x12BA17C")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x2ABC35C", Offset = "0x2ABC35C", VA = "0x2ABC35C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA1B4", Offset = "0x12BA1B4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x2ABC3A8", Offset = "0x2ABC3A8", VA = "0x2ABC3A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA1EC", Offset = "0x12BA1EC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x2ABC3F4", Offset = "0x2ABC3F4", VA = "0x2ABC3F4")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x2ABC418", Offset = "0x2ABC418", VA = "0x2ABC418", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x2ABC420", Offset = "0x2ABC420", VA = "0x2ABC420")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x2ABC5DC", Offset = "0x2ABC5DC", VA = "0x2ABC5DC")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x2ABC930", Offset = "0x2ABC930", VA = "0x2ABC930")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA224", Offset = "0x12BA224")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x2ABC950", Offset = "0x2ABC950", VA = "0x2ABC950")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA25C", Offset = "0x12BA25C")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x2ABCA2C", Offset = "0x2ABCA2C", VA = "0x2ABCA2C")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x600115F")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x2D16F40", Offset = "0x2D16F40", VA = "0x2D16F40", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x2D1702C", Offset = "0x2D1702C", VA = "0x2D1702C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x2D171F0", Offset = "0x2D171F0", VA = "0x2D171F0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6001163")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6001164")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x2D17250", Offset = "0x2D17250", VA = "0x2D17250")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADCEC", Offset = "0x12ADCEC")]
		public IK[] IKComponents;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADD24", Offset = "0x12ADD24")]
		public Animator animator;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000205")]
		private bool animatePhysics
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x2D1A1E4", Offset = "0x2D1A1E4", VA = "0x2D1A1E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x2D1A280", Offset = "0x2D1A280", VA = "0x2D1A280")]
		private void Start()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x2D1A2F0", Offset = "0x2D1A2F0", VA = "0x2D1A2F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x2D1A3AC", Offset = "0x2D1A3AC", VA = "0x2D1A3AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x2D1A3E8", Offset = "0x2D1A3E8", VA = "0x2D1A3E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x2D1A324", Offset = "0x2D1A324", VA = "0x2D1A324")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x2D1A474", Offset = "0x2D1A474", VA = "0x2D1A474")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA194", Offset = "0x12AA194")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA194", Offset = "0x12AA194")]
	public class LegIK : IK
	{
		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x2AD0E5C", Offset = "0x2AD0E5C", VA = "0x2AD0E5C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA294", Offset = "0x12BA294")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x2AD0EA8", Offset = "0x2AD0EA8", VA = "0x2AD0EA8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA2CC", Offset = "0x12BA2CC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x2AD0EF4", Offset = "0x2AD0EF4", VA = "0x2AD0EF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA304", Offset = "0x12BA304")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x2AD0F40", Offset = "0x2AD0F40", VA = "0x2AD0F40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA33C", Offset = "0x12BA33C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x2AD0F8C", Offset = "0x2AD0F8C", VA = "0x2AD0F8C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x2AD0F94", Offset = "0x2AD0F94", VA = "0x2AD0F94")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA1F4", Offset = "0x12AA1F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA1F4", Offset = "0x12AA1F4")]
	public class LimbIK : IK
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x2AD0FFC", Offset = "0x2AD0FFC", VA = "0x2AD0FFC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA374", Offset = "0x12BA374")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x2AD1048", Offset = "0x2AD1048", VA = "0x2AD1048", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA3AC", Offset = "0x12BA3AC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x2AD1094", Offset = "0x2AD1094", VA = "0x2AD1094")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA3E4", Offset = "0x12BA3E4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x2AD10E0", Offset = "0x2AD10E0", VA = "0x2AD10E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA41C", Offset = "0x12BA41C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x2AD112C", Offset = "0x2AD112C", VA = "0x2AD112C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x2AD1134", Offset = "0x2AD1134", VA = "0x2AD1134")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA254", Offset = "0x12AA254")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA254", Offset = "0x12AA254")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x2AD2004", Offset = "0x2AD2004", VA = "0x2AD2004", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA454", Offset = "0x12BA454")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x2AD2050", Offset = "0x2AD2050", VA = "0x2AD2050", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA48C", Offset = "0x12BA48C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x2AD209C", Offset = "0x2AD209C", VA = "0x2AD209C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA4C4", Offset = "0x12BA4C4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x2AD20E8", Offset = "0x2AD20E8", VA = "0x2AD20E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA4FC", Offset = "0x12BA4FC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x2AD2134", Offset = "0x2AD2134", VA = "0x2AD2134", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x2AD213C", Offset = "0x2AD213C", VA = "0x2AD213C")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA2B4", Offset = "0x12AA2B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA2B4", Offset = "0x12AA2B4")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x2ADA784", Offset = "0x2ADA784", VA = "0x2ADA784", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA534", Offset = "0x12BA534")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x2ADA7D0", Offset = "0x2ADA7D0", VA = "0x2ADA7D0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA56C", Offset = "0x12BA56C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x2ADA81C", Offset = "0x2ADA81C", VA = "0x2ADA81C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA5A4", Offset = "0x12BA5A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x2ADA868", Offset = "0x2ADA868", VA = "0x2ADA868")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA5DC", Offset = "0x12BA5DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x2ADA8B4", Offset = "0x2ADA8B4", VA = "0x2ADA8B4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x2ADA8BC", Offset = "0x2ADA8BC", VA = "0x2ADA8BC")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA314", Offset = "0x12AA314")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x200053C")]
		public class References
		{
			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4001109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x400110A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x400110B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1BB0", Offset = "0x12B1BB0")]
			public Transform chest;

			[Token(Token = "0x400110C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1BE8", Offset = "0x12B1BE8")]
			public Transform neck;

			[Token(Token = "0x400110D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x400110E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1C20", Offset = "0x12B1C20")]
			public Transform leftShoulder;

			[Token(Token = "0x400110F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4001110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4001111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1C58", Offset = "0x12B1C58")]
			public Transform rightShoulder;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1C90", Offset = "0x12B1C90")]
			public Transform leftThigh;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1CC8", Offset = "0x12B1CC8")]
			public Transform leftCalf;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1D00", Offset = "0x12B1D00")]
			public Transform leftFoot;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1D38", Offset = "0x12B1D38")]
			public Transform leftToes;

			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1D70", Offset = "0x12B1D70")]
			public Transform rightThigh;

			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1DA8", Offset = "0x12B1DA8")]
			public Transform rightCalf;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1DE0", Offset = "0x12B1DE0")]
			public Transform rightFoot;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1E18", Offset = "0x12B1E18")]
			public Transform rightToes;

			[Token(Token = "0x1700032A")]
			public bool isFilled
			{
				[Token(Token = "0x6001E98")]
				[Address(RVA = "0x2ADC220", Offset = "0x2ADC220", VA = "0x2ADC220")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700032B")]
			public bool isEmpty
			{
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0x2ADBDA4", Offset = "0x2ADBDA4", VA = "0x2ADBDA4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x2ADC8A4", Offset = "0x2ADC8A4", VA = "0x2ADC8A4")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x2ADB990", Offset = "0x2ADB990", VA = "0x2ADB990")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x2ADC89C", Offset = "0x2ADC89C", VA = "0x2ADC89C")]
			public References()
			{
			}
		}

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x12ADD5C", Offset = "0x12ADD5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADD5C", Offset = "0x12ADD5C")]
		public References references;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADDD8", Offset = "0x12ADDD8")]
		public IKSolverVR solver;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x2ADB884", Offset = "0x2ADB884", VA = "0x2ADB884", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA614", Offset = "0x12BA614")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x2ADB8D0", Offset = "0x2ADB8D0", VA = "0x2ADB8D0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA64C", Offset = "0x12BA64C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x2ADB91C", Offset = "0x2ADB91C", VA = "0x2ADB91C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA684", Offset = "0x12BA684")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x2ADB968", Offset = "0x2ADB968", VA = "0x2ADB968")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA6BC", Offset = "0x12BA6BC")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x2ADBD00", Offset = "0x2ADBD00", VA = "0x2ADBD00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA6F4", Offset = "0x12BA6F4")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x2ADBD28", Offset = "0x2ADBD28", VA = "0x2ADBD28", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x2ADBD30", Offset = "0x2ADBD30", VA = "0x2ADBD30", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x2ADC69C", Offset = "0x2ADC69C", VA = "0x2ADC69C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x2ADC814", Offset = "0x2ADC814", VA = "0x2ADC814")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A4")]
	public class FABRIKChain
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADE10", Offset = "0x12ADE10")]
		public float pull;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADE28", Offset = "0x12ADE28")]
		public float pin;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x2AB394C", Offset = "0x2AB394C", VA = "0x2AB394C")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x2AB3A14", Offset = "0x2AB3A14", VA = "0x2AB3A14")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x2AB3A34", Offset = "0x2AB3A34", VA = "0x2AB3A34")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x2AB3E04", Offset = "0x2AB3E04", VA = "0x2AB3E04")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x2AB3B08", Offset = "0x2AB3B08", VA = "0x2AB3B08")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x2AB3EFC", Offset = "0x2AB3EFC", VA = "0x2AB3EFC")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x2AB4104", Offset = "0x2AB4104", VA = "0x2AB4104")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x2AB466C", Offset = "0x2AB466C", VA = "0x2AB466C")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x2AB482C", Offset = "0x2AB482C", VA = "0x2AB482C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x2AB4924", Offset = "0x2AB4924", VA = "0x2AB4924")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053D")]
		public class BendBone
		{
			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1E50", Offset = "0x12B1E50")]
			public Transform transform;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1E88", Offset = "0x12B1E88")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B1E88", Offset = "0x12B1E88")]
			public float weight;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x2AB7954", Offset = "0x2AB7954", VA = "0x2AB7954")]
			public BendBone()
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x2AB79D4", Offset = "0x2AB79D4", VA = "0x2AB79D4")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x2AB50E4", Offset = "0x2AB50E4", VA = "0x2AB50E4")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x2AB54E8", Offset = "0x2AB54E8", VA = "0x2AB54E8")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADE40", Offset = "0x12ADE40")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12ADE78", Offset = "0x12ADE78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADE78", Offset = "0x12ADE78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADE78", Offset = "0x12ADE78")]
		public float positionWeight;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADEF0", Offset = "0x12ADEF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADEF0", Offset = "0x12ADEF0")]
		public float bodyWeight;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADF44", Offset = "0x12ADF44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADF44", Offset = "0x12ADF44")]
		public float thighWeight;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADF98", Offset = "0x12ADF98")]
		public bool handsPullBody;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12ADFD0", Offset = "0x12ADFD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12ADFD0", Offset = "0x12ADFD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12ADFD0", Offset = "0x12ADFD0")]
		public float rotationWeight;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE048", Offset = "0x12AE048")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE048", Offset = "0x12AE048")]
		public float bodyClampWeight;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE09C", Offset = "0x12AE09C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE09C", Offset = "0x12AE09C")]
		public float headClampWeight;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE0F0", Offset = "0x12AE0F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE0F0", Offset = "0x12AE0F0")]
		public float bendWeight;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE144", Offset = "0x12AE144")]
		public BendBone[] bendBones;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12AE17C", Offset = "0x12AE17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE17C", Offset = "0x12AE17C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE17C", Offset = "0x12AE17C")]
		public float CCDWeight;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE1F4", Offset = "0x12AE1F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE1F4", Offset = "0x12AE1F4")]
		public float roll;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE248", Offset = "0x12AE248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE248", Offset = "0x12AE248")]
		public float damper;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE2A0", Offset = "0x12AE2A0")]
		public Transform[] CCDBones;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12AE2D8", Offset = "0x12AE2D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE2D8", Offset = "0x12AE2D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE2D8", Offset = "0x12AE2D8")]
		public float postStretchWeight;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE350", Offset = "0x12AE350")]
		public float maxStretch;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE388", Offset = "0x12AE388")]
		public float stretchDamper;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE3C0", Offset = "0x12AE3C0")]
		public bool fixHead;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE3F8", Offset = "0x12AE3F8")]
		public Transform[] stretchBones;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12AE430", Offset = "0x12AE430")]
		public Vector3 chestDirection;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE468", Offset = "0x12AE468")]
		public float chestDirectionWeight;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x2AB492C", Offset = "0x2AB492C", VA = "0x2AB492C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x2AB4C5C", Offset = "0x2AB4C5C", VA = "0x2AB4C5C")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x2AB511C", Offset = "0x2AB511C", VA = "0x2AB511C")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x2AB5510", Offset = "0x2AB5510", VA = "0x2AB5510")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x2AB5E88", Offset = "0x2AB5E88", VA = "0x2AB5E88")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x2AB61D4", Offset = "0x2AB61D4", VA = "0x2AB61D4")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x2AB6570", Offset = "0x2AB6570", VA = "0x2AB6570")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x2AB6FDC", Offset = "0x2AB6FDC", VA = "0x2AB6FDC")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x2AB5BB4", Offset = "0x2AB5BB4", VA = "0x2AB5BB4")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x2AB71EC", Offset = "0x2AB71EC", VA = "0x2AB71EC")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x2AB6E98", Offset = "0x2AB6E98", VA = "0x2AB6E98")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x2AB6CFC", Offset = "0x2AB6CFC", VA = "0x2AB6CFC")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x2AB7558", Offset = "0x2AB7558", VA = "0x2AB7558")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x2AB77D8", Offset = "0x2AB77D8", VA = "0x2AB77D8")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x200053E")]
		public class ChildConstraint
		{
			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1EFC", Offset = "0x12B1EFC")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1F0C", Offset = "0x12B1F0C")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4001129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x400112A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x1700032C")]
			public float nominalDistance
			{
				[Token(Token = "0x6001EA0")]
				[Address(RVA = "0x2ABA898", Offset = "0x2ABA898", VA = "0x2ABA898")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE62C", Offset = "0x12BE62C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EA1")]
				[Address(RVA = "0x2ABA8A0", Offset = "0x2ABA8A0", VA = "0x2ABA8A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE63C", Offset = "0x12BE63C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700032D")]
			public bool isRigid
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0x2ABA8A8", Offset = "0x2ABA8A8", VA = "0x2ABA8A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE64C", Offset = "0x12BE64C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001EA3")]
				[Address(RVA = "0x2ABA8B0", Offset = "0x2ABA8B0", VA = "0x2ABA8B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE65C", Offset = "0x12BE65C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x2ABA8BC", Offset = "0x2ABA8BC", VA = "0x2ABA8BC")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x2AB861C", Offset = "0x2AB861C", VA = "0x2AB861C")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x2AB8B5C", Offset = "0x2AB8B5C", VA = "0x2AB8B5C")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x2ABA594", Offset = "0x2ABA594", VA = "0x2ABA594")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200053F")]
		public enum Smoothing
		{
			[Token(Token = "0x400112C")]
			None,
			[Token(Token = "0x400112D")]
			Exponential,
			[Token(Token = "0x400112E")]
			Cubic
		}

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE480", Offset = "0x12AE480")]
		public float pin;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE498", Offset = "0x12AE498")]
		public float pull;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE4B0", Offset = "0x12AE4B0")]
		public float push;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE4C8", Offset = "0x12AE4C8")]
		public float pushParent;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE4E0", Offset = "0x12AE4E0")]
		public float reach;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x40006BB")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x2AB7A78", Offset = "0x2AB7A78", VA = "0x2AB7A78")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x2AB7B44", Offset = "0x2AB7B44", VA = "0x2AB7B44")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x2AB7C50", Offset = "0x2AB7C50", VA = "0x2AB7C50")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x2AB7D74", Offset = "0x2AB7D74", VA = "0x2AB7D74")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x2AB7E50", Offset = "0x2AB7E50", VA = "0x2AB7E50")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x2AB7F54", Offset = "0x2AB7F54", VA = "0x2AB7F54")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x2AB8674", Offset = "0x2AB8674", VA = "0x2AB8674")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x2AB80E4", Offset = "0x2AB80E4", VA = "0x2AB80E4")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x2AB8D60", Offset = "0x2AB8D60", VA = "0x2AB8D60")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x2AB9104", Offset = "0x2AB9104", VA = "0x2AB9104")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x2AB94E8", Offset = "0x2AB94E8", VA = "0x2AB94E8")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x2AB9A6C", Offset = "0x2AB9A6C", VA = "0x2AB9A6C")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x2ABA03C", Offset = "0x2ABA03C", VA = "0x2ABA03C")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x2ABA2D4", Offset = "0x2ABA2D4", VA = "0x2ABA2D4")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x2AB9F34", Offset = "0x2AB9F34", VA = "0x2AB9F34")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x2AB9854", Offset = "0x2AB9854", VA = "0x2AB9854")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x2AB9EBC", Offset = "0x2AB9EBC", VA = "0x2AB9EBC")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x2ABA3BC", Offset = "0x2ABA3BC", VA = "0x2ABA3BC")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x2AB9DDC", Offset = "0x2AB9DDC", VA = "0x2AB9DDC")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x2ABA1BC", Offset = "0x2ABA1BC", VA = "0x2ABA1BC")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public class IKConstraintBend
	{
		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE4F8", Offset = "0x12AE4F8")]
		public float weight;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AE510", Offset = "0x12AE510")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x17000206")]
		public bool initiated
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x2D17420", Offset = "0x2D17420", VA = "0x2D17420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA72C", Offset = "0x12BA72C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x2D17428", Offset = "0x2D17428", VA = "0x2D17428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA73C", Offset = "0x12BA73C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x2D17258", Offset = "0x2D17258", VA = "0x2D17258")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x2D17434", Offset = "0x2D17434", VA = "0x2D17434")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x2D174B8", Offset = "0x2D174B8", VA = "0x2D174B8")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x2D17564", Offset = "0x2D17564", VA = "0x2D17564")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x2D17570", Offset = "0x2D17570", VA = "0x2D17570")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x2D17AC4", Offset = "0x2D17AC4", VA = "0x2D17AC4")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x2D17CFC", Offset = "0x2D17CFC", VA = "0x2D17CFC")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x2D18198", Offset = "0x2D18198", VA = "0x2D18198")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x2D17894", Offset = "0x2D17894", VA = "0x2D17894")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x2D179AC", Offset = "0x2D179AC", VA = "0x2D179AC")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class IKEffector
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE520", Offset = "0x12AE520")]
		public float positionWeight;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE538", Offset = "0x12AE538")]
		public float rotationWeight;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AE550", Offset = "0x12AE550")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE560", Offset = "0x12AE560")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x17000207")]
		public bool isEndEffector
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x2D18848", Offset = "0x2D18848", VA = "0x2D18848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA74C", Offset = "0x12BA74C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x2D18850", Offset = "0x2D18850", VA = "0x2D18850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA75C", Offset = "0x12BA75C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x2D187E0", Offset = "0x2D187E0", VA = "0x2D187E0")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x2D1885C", Offset = "0x2D1885C", VA = "0x2D1885C")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x2D18930", Offset = "0x2D18930", VA = "0x2D18930")]
		public IKEffector()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x2D18A6C", Offset = "0x2D18A6C", VA = "0x2D18A6C")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x2D18BC4", Offset = "0x2D18BC4", VA = "0x2D18BC4")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x2D18EB4", Offset = "0x2D18EB4", VA = "0x2D18EB4")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x2D19140", Offset = "0x2D19140", VA = "0x2D19140")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x2D19278", Offset = "0x2D19278", VA = "0x2D19278")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x2D19324", Offset = "0x2D19324", VA = "0x2D19324")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x2D19964", Offset = "0x2D19964", VA = "0x2D19964")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x2D199D4", Offset = "0x2D199D4", VA = "0x2D199D4")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x2D19BE0", Offset = "0x2D19BE0", VA = "0x2D19BE0")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x2D19F14", Offset = "0x2D19F14", VA = "0x2D19F14")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000540")]
		public class BoneMap
		{
			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700032E")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6001EA9")]
				[Address(RVA = "0x2D1A6E4", Offset = "0x2D1A6E4", VA = "0x2D1A6E4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700032F")]
			public bool isNodeBone
			{
				[Token(Token = "0x6001EAC")]
				[Address(RVA = "0x2D1A850", Offset = "0x2D1A850", VA = "0x2D1A850")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000330")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6001EC0")]
				[Address(RVA = "0x2D1AE28", Offset = "0x2D1AE28", VA = "0x2D1AE28")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x2D1A6BC", Offset = "0x2D1A6BC", VA = "0x2D1A6BC")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x2D1A7B0", Offset = "0x2D1A7B0", VA = "0x2D1A7B0")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x2D1A800", Offset = "0x2D1A800", VA = "0x2D1A800")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x2D1A860", Offset = "0x2D1A860", VA = "0x2D1A860")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x2D1A948", Offset = "0x2D1A948", VA = "0x2D1A948")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x2D1A950", Offset = "0x2D1A950", VA = "0x2D1A950")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x2D1AAE0", Offset = "0x2D1AAE0", VA = "0x2D1AAE0")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x2D1ABEC", Offset = "0x2D1ABEC", VA = "0x2D1ABEC")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x2D1AC78", Offset = "0x2D1AC78", VA = "0x2D1AC78")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x2D1B04C", Offset = "0x2D1B04C", VA = "0x2D1B04C")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x2D1B084", Offset = "0x2D1B084", VA = "0x2D1B084")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x2D1B0BC", Offset = "0x2D1B0BC", VA = "0x2D1B0BC")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x2D1B0E4", Offset = "0x2D1B0E4", VA = "0x2D1B0E4")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x2D1B20C", Offset = "0x2D1B20C", VA = "0x2D1B20C")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x2D1B544", Offset = "0x2D1B544", VA = "0x2D1B544")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x2D1B574", Offset = "0x2D1B574", VA = "0x2D1B574")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x2D1B70C", Offset = "0x2D1B70C", VA = "0x2D1B70C")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x2D1B77C", Offset = "0x2D1B77C", VA = "0x2D1B77C")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x2D1B9C0", Offset = "0x2D1B9C0", VA = "0x2D1B9C0")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x2D1BBE8", Offset = "0x2D1BBE8", VA = "0x2D1BBE8")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x2D1BD00", Offset = "0x2D1BD00", VA = "0x2D1BD00")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x2D1B34C", Offset = "0x2D1B34C", VA = "0x2D1B34C")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x2D1BE90", Offset = "0x2D1BE90", VA = "0x2D1BE90")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x2D1A47C", Offset = "0x2D1A47C", VA = "0x2D1A47C", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x2D1A484", Offset = "0x2D1A484", VA = "0x2D1A484", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x2D1A488", Offset = "0x2D1A488", VA = "0x2D1A488")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x2D1A5AC", Offset = "0x2D1A5AC", VA = "0x2D1A5AC")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x2D1A6B4", Offset = "0x2D1A6B4", VA = "0x2D1A6B4")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE578", Offset = "0x12AE578")]
		public float maintainRotationWeight;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x2D1BEAC", Offset = "0x2D1BEAC", VA = "0x2D1BEAC", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x2D1BF4C", Offset = "0x2D1BF4C", VA = "0x2D1BF4C")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x2D1BFD0", Offset = "0x2D1BFD0", VA = "0x2D1BFD0")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x2D1C068", Offset = "0x2D1C068", VA = "0x2D1C068")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x2D1C080", Offset = "0x2D1C080", VA = "0x2D1C080")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x2D1C09C", Offset = "0x2D1C09C", VA = "0x2D1C09C", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x2D1C138", Offset = "0x2D1C138", VA = "0x2D1C138")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x2D1C150", Offset = "0x2D1C150", VA = "0x2D1C150")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000541")]
		public enum BoneMapType
		{
			[Token(Token = "0x4001146")]
			Parent,
			[Token(Token = "0x4001147")]
			Bone1,
			[Token(Token = "0x4001148")]
			Bone2,
			[Token(Token = "0x4001149")]
			Bone3
		}

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE590", Offset = "0x12AE590")]
		public float maintainRotationWeight;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE5A8", Offset = "0x12AE5A8")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x2D1C174", Offset = "0x2D1C174", VA = "0x2D1C174", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x2D1C1F8", Offset = "0x2D1C1F8", VA = "0x2D1C1F8")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x2D1C2CC", Offset = "0x2D1C2CC", VA = "0x2D1C2CC")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x2D1C620", Offset = "0x2D1C620", VA = "0x2D1C620")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x2D1C728", Offset = "0x2D1C728", VA = "0x2D1C728")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x2D1C85C", Offset = "0x2D1C85C", VA = "0x2D1C85C")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x2D1C868", Offset = "0x2D1C868", VA = "0x2D1C868")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x2D1C910", Offset = "0x2D1C910", VA = "0x2D1C910")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x2D1C9C8", Offset = "0x2D1C9C8", VA = "0x2D1C9C8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x2D1CC38", Offset = "0x2D1CC38", VA = "0x2D1CC38")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x2D1CCF0", Offset = "0x2D1CCF0", VA = "0x2D1CCF0")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE5C0", Offset = "0x12AE5C0")]
		public int iterations;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE5D8", Offset = "0x12AE5D8")]
		public float twistWeight;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x2D1CE58", Offset = "0x2D1CE58", VA = "0x2D1CE58", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x2D1D148", Offset = "0x2D1D148", VA = "0x2D1D148")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x2D1D264", Offset = "0x2D1D264", VA = "0x2D1D264")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x2D1D3BC", Offset = "0x2D1D3BC", VA = "0x2D1D3BC")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x2D1D3CC", Offset = "0x2D1D3CC", VA = "0x2D1D3CC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x2D1D434", Offset = "0x2D1D434", VA = "0x2D1D434")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x2D1D4B4", Offset = "0x2D1D4B4", VA = "0x2D1D4B4", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x2D1DB08", Offset = "0x2D1DB08", VA = "0x2D1DB08")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x2D1DB40", Offset = "0x2D1DB40", VA = "0x2D1DB40")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x2D1DE20", Offset = "0x2D1DE20", VA = "0x2D1DE20")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x2D1E1CC", Offset = "0x2D1E1CC", VA = "0x2D1E1CC")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x2D1E2B8", Offset = "0x2D1E2B8", VA = "0x2D1E2B8")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x2D1E380", Offset = "0x2D1E380", VA = "0x2D1E380")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000542")]
		public class Point
		{
			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B1F1C", Offset = "0x12B1F1C")]
			public float weight;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x2D1FEA0", Offset = "0x2D1FEA0", VA = "0x2D1FEA0")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x2D1FEF0", Offset = "0x2D1FEF0", VA = "0x2D1FEF0")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x2D20078", Offset = "0x2D20078", VA = "0x2D20078")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x2D200B0", Offset = "0x2D200B0", VA = "0x2D200B0")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x2D200E8", Offset = "0x2D200E8", VA = "0x2D200E8")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x2D20138", Offset = "0x2D20138", VA = "0x2D20138")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x2D1F974", Offset = "0x2D1F974", VA = "0x2D1F974")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000543")]
		public class Bone : Point
		{
			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x17000331")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6001EC9")]
				[Address(RVA = "0x2D1EF44", Offset = "0x2D1EF44", VA = "0x2D1EF44")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001ECA")]
				[Address(RVA = "0x2D1F038", Offset = "0x2D1F038", VA = "0x2D1F038")]
				set
				{
				}
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x2D1F0C0", Offset = "0x2D1F0C0", VA = "0x2D1F0C0")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x2D1F380", Offset = "0x2D1F380", VA = "0x2D1F380")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x2D1F660", Offset = "0x2D1F660", VA = "0x2D1F660")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x2D1F8C8", Offset = "0x2D1F8C8", VA = "0x2D1F8C8")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x2D1F8F0", Offset = "0x2D1F8F0", VA = "0x2D1F8F0")]
			public Bone()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x2D1F9F4", Offset = "0x2D1F9F4", VA = "0x2D1F9F4")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x2D1FA8C", Offset = "0x2D1FA8C", VA = "0x2D1FA8C")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000544")]
		public class Node : Point
		{
			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x2D1FE3C", Offset = "0x2D1FE3C", VA = "0x2D1FE3C")]
			public Node()
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x2D1FE40", Offset = "0x2D1FE40", VA = "0x2D1FE40")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x2D1FE68", Offset = "0x2D1FE68", VA = "0x2D1FE68")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x2000545")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000546")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool executedInEditor;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE610", Offset = "0x12AE610")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE610", Offset = "0x12AE610")]
		public float IKPositionWeight;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AE664", Offset = "0x12AE664")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x17000208")]
		public bool initiated
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x2D1E994", Offset = "0x2D1E994", VA = "0x2D1E994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA76C", Offset = "0x12BA76C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x2D1E99C", Offset = "0x2D1E99C", VA = "0x2D1E99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA77C", Offset = "0x12BA77C")]
			private set
			{
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x2D1E660", Offset = "0x2D1E660", VA = "0x2D1E660")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x2D1709C", Offset = "0x2D1709C", VA = "0x2D1709C")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x2D16FC4", Offset = "0x2D16FC4", VA = "0x2D16FC4")]
		public void Update()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x2D1E8E8", Offset = "0x2D1E8E8", VA = "0x2D1E8E8", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x2D1E8F4", Offset = "0x2D1E8F4", VA = "0x2D1E8F4")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x2D1E900", Offset = "0x2D1E900", VA = "0x2D1E900")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x2D1E908", Offset = "0x2D1E908", VA = "0x2D1E908")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x2D1E98C", Offset = "0x2D1E98C", VA = "0x2D1E98C")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6001206")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6001207")]
		public abstract void FixTransforms();

		[Token(Token = "0x6001208")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6001209")]
		protected abstract void OnInitiate();

		[Token(Token = "0x600120A")]
		protected abstract void OnUpdate();

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x2D1E9A8", Offset = "0x2D1E9A8", VA = "0x2D1E9A8")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x2D1E9C0", Offset = "0x2D1E9C0", VA = "0x2D1E9C0")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x2D1EAFC", Offset = "0x2D1EAFC", VA = "0x2D1EAFC")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x2D1EBA8", Offset = "0x2D1EBA8", VA = "0x2D1EBA8")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x2D1EF2C", Offset = "0x2D1EF2C", VA = "0x2D1EF2C")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE6AC", Offset = "0x12AE6AC")]
		public float poleWeight;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE6C4", Offset = "0x12AE6C4")]
		public float clampWeight;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE6DC", Offset = "0x12AE6DC")]
		public int clampSmoothing;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000209")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x2D202D0", Offset = "0x2D202D0", VA = "0x2D202D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020A")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x2D2039C", Offset = "0x2D2039C", VA = "0x2D2039C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020B")]
		protected override int minBones
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x2D2110C", Offset = "0x2D2110C", VA = "0x2D2110C", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020C")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x2D216B0", Offset = "0x2D216B0", VA = "0x2D216B0", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x2D201D0", Offset = "0x2D201D0", VA = "0x2D201D0")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x2D20468", Offset = "0x2D20468", VA = "0x2D20468", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x2D206E8", Offset = "0x2D206E8", VA = "0x2D206E8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x2D21058", Offset = "0x2D21058", VA = "0x2D21058")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x2D20C80", Offset = "0x2D20C80", VA = "0x2D20C80")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x2D21114", Offset = "0x2D21114", VA = "0x2D21114")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x2D21724", Offset = "0x2D21724", VA = "0x2D21724")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE6F4", Offset = "0x12AE6F4")]
		public float IKRotationWeight;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x2D217BC", Offset = "0x2D217BC", VA = "0x2D217BC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x2D21B30", Offset = "0x2D21B30", VA = "0x2D21B30")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x2D21B9C", Offset = "0x2D21B9C", VA = "0x2D21B9C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x2D21CF8", Offset = "0x2D21CF8", VA = "0x2D21CF8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x2D21E90", Offset = "0x2D21E90", VA = "0x2D21E90", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x2D21EDC", Offset = "0x2D21EDC", VA = "0x2D21EDC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x2D21F3C", Offset = "0x2D21F3C", VA = "0x2D21F3C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x2D222AC", Offset = "0x2D222AC", VA = "0x2D222AC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x2D222D8", Offset = "0x2D222D8", VA = "0x2D222D8")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x2D21FA0", Offset = "0x2D21FA0", VA = "0x2D21FA0")]
		private void Read()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x2D22348", Offset = "0x2D22348", VA = "0x2D22348")]
		private void Write()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x2D224D4", Offset = "0x2D224D4", VA = "0x2D224D4")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x2D22624", Offset = "0x2D22624", VA = "0x2D22624")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x2D226D4", Offset = "0x2D226D4", VA = "0x2D226D4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x2D22758", Offset = "0x2D22758", VA = "0x2D22758", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x2D22A54", Offset = "0x2D22A54", VA = "0x2D22A54")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x2D231A8", Offset = "0x2D231A8", VA = "0x2D231A8")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x1700020D")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x2D243D8", Offset = "0x2D243D8", VA = "0x2D243D8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x2D231B0", Offset = "0x2D231B0", VA = "0x2D231B0")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x2D238F8", Offset = "0x2D238F8", VA = "0x2D238F8")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x2D23A30", Offset = "0x2D23A30", VA = "0x2D23A30", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x2D23AC8", Offset = "0x2D23AC8", VA = "0x2D23AC8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x2D24070", Offset = "0x2D24070", VA = "0x2D24070", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x2D243E0", Offset = "0x2D243E0", VA = "0x2D243E0")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x2D23284", Offset = "0x2D23284", VA = "0x2D23284")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x2D239DC", Offset = "0x2D239DC", VA = "0x2D239DC")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x2D2437C", Offset = "0x2D2437C", VA = "0x2D2437C")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x2D23720", Offset = "0x2D23720", VA = "0x2D23720")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x2D24C20", Offset = "0x2D24C20", VA = "0x2D24C20")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x2D24D30", Offset = "0x2D24D30", VA = "0x2D24D30")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x2D24E5C", Offset = "0x2D24E5C", VA = "0x2D24E5C")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x2D24F74", Offset = "0x2D24F74", VA = "0x2D24F74")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x2D23DD8", Offset = "0x2D23DD8", VA = "0x2D23DD8")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x2D23F24", Offset = "0x2D23F24", VA = "0x2D23F24")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x2D25160", Offset = "0x2D25160", VA = "0x2D25160")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x2D24698", Offset = "0x2D24698", VA = "0x2D24698")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x2D239CC", Offset = "0x2D239CC", VA = "0x2D239CC")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x2D258C8", Offset = "0x2D258C8", VA = "0x2D258C8")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x2D25334", Offset = "0x2D25334", VA = "0x2D25334")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x2D244F8", Offset = "0x2D244F8", VA = "0x2D244F8")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x2D245D4", Offset = "0x2D245D4", VA = "0x2D245D4")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x2D25994", Offset = "0x2D25994", VA = "0x2D25994")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B3")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE70C", Offset = "0x12AE70C")]
		public float rootPin;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x2D25A0C", Offset = "0x2D25A0C", VA = "0x2D25A0C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x2D262D8", Offset = "0x2D262D8", VA = "0x2D262D8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x2D26370", Offset = "0x2D26370", VA = "0x2D26370", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x2D26410", Offset = "0x2D26410", VA = "0x2D26410", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x2D26510", Offset = "0x2D26510", VA = "0x2D26510")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x2D265AC", Offset = "0x2D265AC", VA = "0x2D265AC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x2D26B14", Offset = "0x2D26B14", VA = "0x2D26B14", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x2D26D14", Offset = "0x2D26D14", VA = "0x2D26D14", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x2D26BC4", Offset = "0x2D26BC4", VA = "0x2D26BC4")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x2D267E0", Offset = "0x2D267E0", VA = "0x2D267E0")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x2D26DAC", Offset = "0x2D26DAC", VA = "0x2D26DAC")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE724", Offset = "0x12AE724")]
		public int iterations;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x2D26E24", Offset = "0x2D26E24", VA = "0x2D26E24")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x2D26F18", Offset = "0x2D26F18", VA = "0x2D26F18")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x2D26F74", Offset = "0x2D26F74", VA = "0x2D26F74")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x2D18784", Offset = "0x2D18784", VA = "0x2D18784")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x2D17814", Offset = "0x2D17814", VA = "0x2D17814")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x2D270A8", Offset = "0x2D270A8", VA = "0x2D270A8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x2D27250", Offset = "0x2D27250", VA = "0x2D27250", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x2D273C4", Offset = "0x2D273C4", VA = "0x2D273C4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x2D275C4", Offset = "0x2D275C4", VA = "0x2D275C4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x2D27694", Offset = "0x2D27694", VA = "0x2D27694", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x2D27770", Offset = "0x2D27770", VA = "0x2D27770", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x2D278E0", Offset = "0x2D278E0", VA = "0x2D278E0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x2D27A98", Offset = "0x2D27A98", VA = "0x2D27A98", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x2D27CD4", Offset = "0x2D27CD4", VA = "0x2D27CD4", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x2D27F94", Offset = "0x2D27F94", VA = "0x2D27F94", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x2D27FD8", Offset = "0x2D27FD8", VA = "0x2D27FD8", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x2D280BC", Offset = "0x2D280BC", VA = "0x2D280BC")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B5")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x4000746")]
		Body,
		[Token(Token = "0x4000747")]
		LeftShoulder,
		[Token(Token = "0x4000748")]
		RightShoulder,
		[Token(Token = "0x4000749")]
		LeftThigh,
		[Token(Token = "0x400074A")]
		RightThigh,
		[Token(Token = "0x400074B")]
		LeftHand,
		[Token(Token = "0x400074C")]
		RightHand,
		[Token(Token = "0x400074D")]
		LeftFoot,
		[Token(Token = "0x400074E")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x20002B6")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000750")]
		LeftArm,
		[Token(Token = "0x4000751")]
		RightArm,
		[Token(Token = "0x4000752")]
		LeftLeg,
		[Token(Token = "0x4000753")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x20002B7")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE73C", Offset = "0x12AE73C")]
		public float spineStiffness;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE754", Offset = "0x12AE754")]
		public float pullBodyVertical;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE76C", Offset = "0x12AE76C")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AE784", Offset = "0x12AE784")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x1700020E")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x2D2819C", Offset = "0x2D2819C", VA = "0x2D2819C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x2D281A4", Offset = "0x2D281A4", VA = "0x2D281A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x2D281AC", Offset = "0x2D281AC", VA = "0x2D281AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x2D281B4", Offset = "0x2D281B4", VA = "0x2D281B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x2D281BC", Offset = "0x2D281BC", VA = "0x2D281BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x2D281C4", Offset = "0x2D281C4", VA = "0x2D281C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x2D281CC", Offset = "0x2D281CC", VA = "0x2D281CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x2D281D4", Offset = "0x2D281D4", VA = "0x2D281D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x2D281DC", Offset = "0x2D281DC", VA = "0x2D281DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0x2D281E4", Offset = "0x2D281E4", VA = "0x2D281E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x2D2821C", Offset = "0x2D2821C", VA = "0x2D2821C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x2D28254", Offset = "0x2D28254", VA = "0x2D28254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x2D2828C", Offset = "0x2D2828C", VA = "0x2D2828C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x2D282C4", Offset = "0x2D282C4", VA = "0x2D282C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x2D282F8", Offset = "0x2D282F8", VA = "0x2D282F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x2D28330", Offset = "0x2D28330", VA = "0x2D28330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x2D28368", Offset = "0x2D28368", VA = "0x2D28368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x2D283A0", Offset = "0x2D283A0", VA = "0x2D283A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x2D2A2F0", Offset = "0x2D2A2F0", VA = "0x2D2A2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA78C", Offset = "0x12BA78C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x2D2A2FC", Offset = "0x2D2A2FC", VA = "0x2D2A2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA79C", Offset = "0x12BA79C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x2D283D4", Offset = "0x2D283D4", VA = "0x2D283D4")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x2D284E0", Offset = "0x2D284E0", VA = "0x2D284E0")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x2D28428", Offset = "0x2D28428", VA = "0x2D28428")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x2D285BC", Offset = "0x2D285BC", VA = "0x2D285BC")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x2D15BF4", Offset = "0x2D15BF4", VA = "0x2D15BF4")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x2D2868C", Offset = "0x2D2868C", VA = "0x2D2868C")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x2D28744", Offset = "0x2D28744", VA = "0x2D28744")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x2D287F8", Offset = "0x2D287F8", VA = "0x2D287F8")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x2D288AC", Offset = "0x2D288AC", VA = "0x2D288AC")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x2D288B4", Offset = "0x2D288B4", VA = "0x2D288B4")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x2D288E8", Offset = "0x2D288E8", VA = "0x2D288E8")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x2D289B0", Offset = "0x2D289B0", VA = "0x2D289B0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x2D28B40", Offset = "0x2D28B40", VA = "0x2D28B40")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x2D29C14", Offset = "0x2D29C14", VA = "0x2D29C14")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x2D2A0A8", Offset = "0x2D2A0A8", VA = "0x2D2A0A8")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x2D2A108", Offset = "0x2D2A108", VA = "0x2D2A108")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x2D29F28", Offset = "0x2D29F28", VA = "0x2D29F28")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2D29FE8", Offset = "0x2D29FE8", VA = "0x2D29FE8")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x2D2A308", Offset = "0x2D2A308", VA = "0x2D2A308")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x2D2A3E4", Offset = "0x2D2A3E4", VA = "0x2D2A3E4", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x2D2A528", Offset = "0x2D2A528", VA = "0x2D2A528")]
		private void PullBody()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x2D2A6B8", Offset = "0x2D2A6B8", VA = "0x2D2A6B8")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x2D2A8B8", Offset = "0x2D2A8B8", VA = "0x2D2A8B8")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x2D2AAB8", Offset = "0x2D2AAB8", VA = "0x2D2AAB8", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x2D2ADE8", Offset = "0x2D2ADE8", VA = "0x2D2ADE8", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x2D2AEE8", Offset = "0x2D2AEE8", VA = "0x2D2AEE8")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000221")]
		protected virtual int minBones
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x318CA78", Offset = "0x318CA78", VA = "0x318CA78", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000222")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x318CA80", Offset = "0x318CA80", VA = "0x318CA80", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000223")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x318CA88", Offset = "0x318CA88", VA = "0x318CA88", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x318D018", Offset = "0x318D018", VA = "0x318D018", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000225")]
		protected float positionOffset
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x318D14C", Offset = "0x318D14C", VA = "0x318D14C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x318C234", Offset = "0x318C234", VA = "0x318C234")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x318C3C8", Offset = "0x318C3C8", VA = "0x318C3C8")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x318C504", Offset = "0x318C504", VA = "0x318C504", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x318C570", Offset = "0x318C570", VA = "0x318C570", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x318C5F0", Offset = "0x318C5F0", VA = "0x318C5F0", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x318C97C", Offset = "0x318C97C", VA = "0x318C97C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x318C984", Offset = "0x318C984", VA = "0x318C984", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x318CA90", Offset = "0x318CA90", VA = "0x318CA90", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x318CA94", Offset = "0x318CA94", VA = "0x318CA94", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x318CA98", Offset = "0x318CA98", VA = "0x318CA98")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x318D210", Offset = "0x318D210", VA = "0x318D210")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x318D5B4", Offset = "0x318D5B4", VA = "0x318D5B4")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x318D868", Offset = "0x318D868", VA = "0x318D868")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE794", Offset = "0x12AE794")]
		public float IKRotationWeight;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x318D8D8", Offset = "0x318D8D8", VA = "0x318D8D8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x318DC4C", Offset = "0x318DC4C", VA = "0x318DC4C")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x318DCBC", Offset = "0x318DCBC", VA = "0x318DCBC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x318DE18", Offset = "0x318DE18", VA = "0x318DE18", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x318DFB0", Offset = "0x318DFB0", VA = "0x318DFB0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x318E00C", Offset = "0x318E00C", VA = "0x318E00C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x318E07C", Offset = "0x318E07C", VA = "0x318E07C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x318E3E8", Offset = "0x318E3E8", VA = "0x318E3E8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x318E414", Offset = "0x318E414", VA = "0x318E414")]
		private void Solve()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x318E0E0", Offset = "0x318E0E0", VA = "0x318E0E0")]
		private void Read()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x318E51C", Offset = "0x318E51C", VA = "0x318E51C")]
		private void Write()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x318E9B4", Offset = "0x318E9B4", VA = "0x318E9B4")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		public enum BendModifier
		{
			[Token(Token = "0x400115A")]
			Animation,
			[Token(Token = "0x400115B")]
			Target,
			[Token(Token = "0x400115C")]
			Parent,
			[Token(Token = "0x400115D")]
			Arm,
			[Token(Token = "0x400115E")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x2000548")]
		public struct AxisDirection
		{
			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x14355E4", Offset = "0x14355E4", VA = "0x14355E4")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE7AC", Offset = "0x12AE7AC")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE7C4", Offset = "0x12AE7C4")]
		public float bendModifierWeight;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x17000226")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x3190300", Offset = "0x3190300", VA = "0x3190300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x318EBFC", Offset = "0x318EBFC", VA = "0x318EBFC")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x318EC4C", Offset = "0x318EC4C", VA = "0x318EC4C")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x318ED60", Offset = "0x318ED60", VA = "0x318ED60", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x318F3D0", Offset = "0x318F3D0", VA = "0x318F3D0", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x318FFAC", Offset = "0x318FFAC", VA = "0x318FFAC", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x31900F4", Offset = "0x31900F4", VA = "0x31900F4")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x3190278", Offset = "0x3190278", VA = "0x3190278")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x318F0DC", Offset = "0x318F0DC", VA = "0x318F0DC")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x318F4FC", Offset = "0x318F4FC", VA = "0x318F4FC")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000549")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x17000332")]
			public Vector3 forward
			{
				[Token(Token = "0x6001EE2")]
				[Address(RVA = "0x31923CC", Offset = "0x31923CC", VA = "0x31923CC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x3192B18", Offset = "0x3192B18", VA = "0x3192B18")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x3191568", Offset = "0x3191568", VA = "0x3191568")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x31918A4", Offset = "0x31918A4", VA = "0x31918A4")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x31927D0", Offset = "0x31927D0", VA = "0x31927D0")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE7DC", Offset = "0x12AE7DC")]
		public float bodyWeight;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE7F4", Offset = "0x12AE7F4")]
		public float headWeight;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE80C", Offset = "0x12AE80C")]
		public float eyesWeight;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE824", Offset = "0x12AE824")]
		public float clampWeight;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE83C", Offset = "0x12AE83C")]
		public float clampWeightHead;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE854", Offset = "0x12AE854")]
		public float clampWeightEyes;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE86C", Offset = "0x12AE86C")]
		public int clampSmoothing;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isDirty;

		[Token(Token = "0x17000227")]
		protected bool spineIsValid
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x3190CCC", Offset = "0x3190CCC", VA = "0x3190CCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000228")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x3190EA4", Offset = "0x3190EA4", VA = "0x3190EA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000229")]
		protected bool headIsValid
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x3190DB0", Offset = "0x3190DB0", VA = "0x3190DB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022A")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x3190EC8", Offset = "0x3190EC8", VA = "0x3190EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x3190DC0", Offset = "0x3190DC0", VA = "0x3190DC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022C")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x3190F44", Offset = "0x3190F44", VA = "0x3190F44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x319037C", Offset = "0x319037C", VA = "0x319037C")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x3190400", Offset = "0x3190400", VA = "0x3190400")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x31904AC", Offset = "0x31904AC", VA = "0x31904AC")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x3190574", Offset = "0x3190574", VA = "0x3190574")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x3190660", Offset = "0x3190660", VA = "0x3190660")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x319076C", Offset = "0x319076C", VA = "0x319076C")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x31908B4", Offset = "0x31908B4", VA = "0x31908B4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x31909E4", Offset = "0x31909E4", VA = "0x31909E4")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x31909F0", Offset = "0x31909F0", VA = "0x31909F0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x3190B38", Offset = "0x3190B38", VA = "0x3190B38", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x3190F68", Offset = "0x3190F68", VA = "0x3190F68", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x31911A0", Offset = "0x31911A0", VA = "0x31911A0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x3191340", Offset = "0x3191340", VA = "0x3191340")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x3191594", Offset = "0x3191594", VA = "0x3191594", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x31919E0", Offset = "0x31919E0", VA = "0x31919E0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x3191AE4", Offset = "0x3191AE4", VA = "0x3191AE4")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x3191D10", Offset = "0x3191D10", VA = "0x3191D10")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x3191F6C", Offset = "0x3191F6C", VA = "0x3191F6C")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x3192498", Offset = "0x3192498", VA = "0x3192498")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x31913F0", Offset = "0x31913F0", VA = "0x31913F0")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x3192938", Offset = "0x3192938", VA = "0x3192938")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200054A")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x31940F0", Offset = "0x31940F0", VA = "0x31940F0")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x3194CA8", Offset = "0x3194CA8", VA = "0x3194CA8")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x318EC94", Offset = "0x318EC94", VA = "0x318EC94")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x3194D70", Offset = "0x3194D70", VA = "0x3194D70")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE884", Offset = "0x12AE884")]
		public float IKRotationWeight;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x3192B20", Offset = "0x3192B20", VA = "0x3192B20")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x3192D10", Offset = "0x3192D10", VA = "0x3192D10")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x3192EC4", Offset = "0x3192EC4", VA = "0x3192EC4")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x3192ED0", Offset = "0x3192ED0", VA = "0x3192ED0")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x3192F54", Offset = "0x3192F54", VA = "0x3192F54")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x3192F60", Offset = "0x3192F60", VA = "0x3192F60")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x3192F68", Offset = "0x3192F68", VA = "0x3192F68", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x319306C", Offset = "0x319306C", VA = "0x319306C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x319318C", Offset = "0x319318C", VA = "0x319318C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x31931D8", Offset = "0x31931D8", VA = "0x31931D8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x3193238", Offset = "0x3193238", VA = "0x3193238", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x3193614", Offset = "0x3193614", VA = "0x3193614")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x319366C", Offset = "0x319366C", VA = "0x319366C")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x3193C14", Offset = "0x3193C14", VA = "0x3193C14")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x3193E2C", Offset = "0x3193E2C", VA = "0x3193E2C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x3193FE8", Offset = "0x3193FE8", VA = "0x3193FE8")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x3193F64", Offset = "0x3193F64", VA = "0x3193F64")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x3194290", Offset = "0x3194290", VA = "0x3194290", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x3194D64", Offset = "0x3194D64", VA = "0x3194D64", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x3194D68", Offset = "0x3194D68", VA = "0x3194D68", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x3194D6C", Offset = "0x3194D6C", VA = "0x3194D6C", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x319499C", Offset = "0x319499C", VA = "0x319499C")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x3190168", Offset = "0x3190168", VA = "0x3190168")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BD")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x200054B")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000641")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4001503")]
				YawPitch,
				[Token(Token = "0x4001504")]
				FromTo
			}

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1F34", Offset = "0x12B1F34")]
			public Transform target;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1F6C", Offset = "0x12B1F6C")]
			public Transform bendGoal;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1FA4", Offset = "0x12B1FA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B1FA4", Offset = "0x12B1FA4")]
			public float positionWeight;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1FF8", Offset = "0x12B1FF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B1FF8", Offset = "0x12B1FF8")]
			public float rotationWeight;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B204C", Offset = "0x12B204C")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2084", Offset = "0x12B2084")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2084", Offset = "0x12B2084")]
			public float shoulderRotationWeight;

			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B20D8", Offset = "0x12B20D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B20D8", Offset = "0x12B20D8")]
			public float shoulderTwistWeight;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B212C", Offset = "0x12B212C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B212C", Offset = "0x12B212C")]
			public float bendGoalWeight;

			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2180", Offset = "0x12B2180")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2180", Offset = "0x12B2180")]
			public float swivelOffset;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B21DC", Offset = "0x12B21DC")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2214", Offset = "0x12B2214")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B224C", Offset = "0x12B224C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B224C", Offset = "0x12B224C")]
			public float armLengthMlp;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B22A4", Offset = "0x12B22A4")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B231C", Offset = "0x12B231C")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B232C", Offset = "0x12B232C")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4001180")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4001181")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x17000333")]
			public Vector3 position
			{
				[Token(Token = "0x6001EE7")]
				[Address(RVA = "0x319D56C", Offset = "0x319D56C", VA = "0x319D56C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE66C", Offset = "0x12BE66C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001EE8")]
				[Address(RVA = "0x319D578", Offset = "0x319D578", VA = "0x319D578")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE67C", Offset = "0x12BE67C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000334")]
			public Quaternion rotation
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0x319D584", Offset = "0x319D584", VA = "0x319D584")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE68C", Offset = "0x12BE68C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001EEA")]
				[Address(RVA = "0x319D590", Offset = "0x319D590", VA = "0x319D590")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE69C", Offset = "0x12BE69C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000335")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6001EEB")]
				[Address(RVA = "0x319D59C", Offset = "0x319D59C", VA = "0x319D59C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6001EEC")]
				[Address(RVA = "0x319D5D0", Offset = "0x319D5D0", VA = "0x319D5D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0x319D610", Offset = "0x319D610", VA = "0x319D610")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private VirtualBone hand
			{
				[Token(Token = "0x6001EEE")]
				[Address(RVA = "0x319D65C", Offset = "0x319D65C", VA = "0x319D65C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x319D6A8", Offset = "0x319D6A8", VA = "0x319D6A8", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x319E028", Offset = "0x319E028", VA = "0x319E028", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x319E21C", Offset = "0x319E21C", VA = "0x319E21C", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x319E2C8", Offset = "0x319E2C8", VA = "0x319E2C8")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x319B47C", Offset = "0x319B47C", VA = "0x319B47C")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x319EF14", Offset = "0x319EF14", VA = "0x319EF14", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x319EF84", Offset = "0x319EF84", VA = "0x319EF84", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x319E6E0", Offset = "0x319E6E0", VA = "0x319E6E0")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x319E7B8", Offset = "0x319E7B8", VA = "0x319E7B8")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0x319F1A4", Offset = "0x319F1A4", VA = "0x319F1A4")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x319D354", Offset = "0x319D354", VA = "0x319D354")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B233C", Offset = "0x12B233C")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B234C", Offset = "0x12B234C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x17000339")]
			public float sqrMag
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0x319F364", Offset = "0x319F364", VA = "0x319F364")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6AC", Offset = "0x12BE6AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F00")]
				[Address(RVA = "0x319F36C", Offset = "0x319F36C", VA = "0x319F36C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6BC", Offset = "0x12BE6BC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700033A")]
			public float mag
			{
				[Token(Token = "0x6001F01")]
				[Address(RVA = "0x319F374", Offset = "0x319F374", VA = "0x319F374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6CC", Offset = "0x12BE6CC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F02")]
				[Address(RVA = "0x319F37C", Offset = "0x319F37C", VA = "0x319F37C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6DC", Offset = "0x12BE6DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001EFA")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6001EFB")]
			public abstract void PreSolve();

			[Token(Token = "0x6001EFC")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6001EFD")]
			public abstract void ApplyOffsets(float scale);

			[Token(Token = "0x6001EFE")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x319F384", Offset = "0x319F384", VA = "0x319F384")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x318E8E0", Offset = "0x318E8E0", VA = "0x318E8E0")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x319F38C", Offset = "0x319F38C", VA = "0x319F38C")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x319F4F8", Offset = "0x319F4F8", VA = "0x319F4F8")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x319F5A4", Offset = "0x319F5A4", VA = "0x319F5A4")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x319B238", Offset = "0x319B238", VA = "0x319B238")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x319ED70", Offset = "0x319ED70", VA = "0x319ED70")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x319F5F8", Offset = "0x319F5F8", VA = "0x319F5F8")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x319F73C", Offset = "0x319F73C", VA = "0x319F73C")]
			public void Visualize()
			{
			}

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x319F2CC", Offset = "0x319F2CC", VA = "0x319F2CC")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054D")]
		public class Footstep
		{
			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool relaxFlag;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B236C", Offset = "0x12B236C")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x1700033B")]
			public bool isStepping
			{
				[Token(Token = "0x6001F0D")]
				[Address(RVA = "0x319F764", Offset = "0x319F764", VA = "0x319F764")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700033C")]
			public float stepProgress
			{
				[Token(Token = "0x6001F0E")]
				[Address(RVA = "0x319F778", Offset = "0x319F778", VA = "0x319F778")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6EC", Offset = "0x12BE6EC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F0F")]
				[Address(RVA = "0x319F780", Offset = "0x319F780", VA = "0x319F780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE6FC", Offset = "0x12BE6FC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x319F788", Offset = "0x319F788", VA = "0x319F788")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x319F918", Offset = "0x319F918", VA = "0x319F918")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x319F960", Offset = "0x319F960", VA = "0x319F960")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x319FB30", Offset = "0x319FB30", VA = "0x319FB30")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x319FD08", Offset = "0x319FD08", VA = "0x319FD08")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x319FEF4", Offset = "0x319FEF4", VA = "0x319FEF4")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054E")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B237C", Offset = "0x12B237C")]
			public Transform target;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B23B4", Offset = "0x12B23B4")]
			public Transform bendGoal;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B23EC", Offset = "0x12B23EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B23EC", Offset = "0x12B23EC")]
			public float positionWeight;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2440", Offset = "0x12B2440")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2440", Offset = "0x12B2440")]
			public float rotationWeight;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2494", Offset = "0x12B2494")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2494", Offset = "0x12B2494")]
			public float bendGoalWeight;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B24E8", Offset = "0x12B24E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B24E8", Offset = "0x12B24E8")]
			public float swivelOffset;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2544", Offset = "0x12B2544")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2544", Offset = "0x12B2544")]
			public float bendToTargetWeight;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2598", Offset = "0x12B2598")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2598", Offset = "0x12B2598")]
			public float legLengthMlp;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B25F0", Offset = "0x12B25F0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B2698", Offset = "0x12B2698")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B26A8", Offset = "0x12B26A8")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B26B8", Offset = "0x12B26B8")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B26C8", Offset = "0x12B26C8")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x1700033D")]
			public Vector3 position
			{
				[Token(Token = "0x6001F16")]
				[Address(RVA = "0x31A0110", Offset = "0x31A0110", VA = "0x31A0110")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE70C", Offset = "0x12BE70C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F17")]
				[Address(RVA = "0x31A011C", Offset = "0x31A011C", VA = "0x31A011C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE71C", Offset = "0x12BE71C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700033E")]
			public Quaternion rotation
			{
				[Token(Token = "0x6001F18")]
				[Address(RVA = "0x31A0128", Offset = "0x31A0128", VA = "0x31A0128")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE72C", Offset = "0x12BE72C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F19")]
				[Address(RVA = "0x31A0134", Offset = "0x31A0134", VA = "0x31A0134")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE73C", Offset = "0x12BE73C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700033F")]
			public bool hasToes
			{
				[Token(Token = "0x6001F1A")]
				[Address(RVA = "0x31A0140", Offset = "0x31A0140", VA = "0x31A0140")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE74C", Offset = "0x12BE74C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001F1B")]
				[Address(RVA = "0x31A0148", Offset = "0x31A0148", VA = "0x31A0148")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE75C", Offset = "0x12BE75C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000340")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6001F1C")]
				[Address(RVA = "0x31A0154", Offset = "0x31A0154", VA = "0x31A0154")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000341")]
			private VirtualBone calf
			{
				[Token(Token = "0x6001F1D")]
				[Address(RVA = "0x31A0188", Offset = "0x31A0188", VA = "0x31A0188")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private VirtualBone foot
			{
				[Token(Token = "0x6001F1E")]
				[Address(RVA = "0x31A01C0", Offset = "0x31A01C0", VA = "0x31A01C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			private VirtualBone toes
			{
				[Token(Token = "0x6001F1F")]
				[Address(RVA = "0x31A01F8", Offset = "0x31A01F8", VA = "0x31A01F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6001F20")]
				[Address(RVA = "0x319B08C", Offset = "0x319B08C", VA = "0x319B08C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6001F21")]
				[Address(RVA = "0x31A0230", Offset = "0x31A0230", VA = "0x31A0230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE76C", Offset = "0x12BE76C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F22")]
				[Address(RVA = "0x31A023C", Offset = "0x31A023C", VA = "0x31A023C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE77C", Offset = "0x12BE77C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x31A0248", Offset = "0x31A0248", VA = "0x31A0248", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x31A088C", Offset = "0x31A088C", VA = "0x31A088C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x31A118C", Offset = "0x31A118C", VA = "0x31A118C", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x31A1088", Offset = "0x31A1088", VA = "0x31A1088")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x31A0E50", Offset = "0x31A0E50", VA = "0x31A0E50")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x318E6A8", Offset = "0x318E6A8", VA = "0x318E6A8")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x31A1C70", Offset = "0x31A1C70", VA = "0x31A1C70")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x31A1744", Offset = "0x31A1744", VA = "0x31A1744")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x31A20D8", Offset = "0x31A20D8", VA = "0x31A20D8", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x31A22F4", Offset = "0x31A22F4", VA = "0x31A22F4", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x318EB08", Offset = "0x318EB08", VA = "0x318EB08")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200054F")]
		public class Locomotion
		{
			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B26D8", Offset = "0x12B26D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B26D8", Offset = "0x12B26D8")]
			public float weight;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B272C", Offset = "0x12B272C")]
			public float footDistance;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2764", Offset = "0x12B2764")]
			public float stepThreshold;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B279C", Offset = "0x12B279C")]
			public float angleThreshold;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B27D4", Offset = "0x12B27D4")]
			public float comAngleMlp;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B280C", Offset = "0x12B280C")]
			public float maxVelocity;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2844", Offset = "0x12B2844")]
			public float velocityFactor;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B287C", Offset = "0x12B287C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B287C", Offset = "0x12B287C")]
			public float maxLegStretch;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B28D4", Offset = "0x12B28D4")]
			public float rootSpeed;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B290C", Offset = "0x12B290C")]
			public float stepSpeed;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2944", Offset = "0x12B2944")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B297C", Offset = "0x12B297C")]
			public float maxBodyYOffset;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B29B4", Offset = "0x12B29B4")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B29EC", Offset = "0x12B29EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B29EC", Offset = "0x12B29EC")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2A44", Offset = "0x12B2A44")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2A7C", Offset = "0x12B2A7C")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2AB4", Offset = "0x12B2AB4")]
			public Vector3 offset;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2B2C", Offset = "0x12B2B2C")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2B64", Offset = "0x12B2B64")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B2B9C", Offset = "0x12B2B9C")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Footstep[] footsteps;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 comVelocity;

			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int leftFootIndex;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int rightFootIndex;

			[Token(Token = "0x17000346")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6001F2E")]
				[Address(RVA = "0x31A23A4", Offset = "0x31A23A4", VA = "0x31A23A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE78C", Offset = "0x12BE78C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001F2F")]
				[Address(RVA = "0x31A23B0", Offset = "0x31A23B0", VA = "0x31A23B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE79C", Offset = "0x12BE79C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000347")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6001F36")]
				[Address(RVA = "0x31A2854", Offset = "0x31A2854", VA = "0x31A2854")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000348")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x6001F37")]
				[Address(RVA = "0x31A2894", Offset = "0x31A2894", VA = "0x31A2894")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000349")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x6001F38")]
				[Address(RVA = "0x31A28D8", Offset = "0x31A28D8", VA = "0x31A28D8")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700034A")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x6001F39")]
				[Address(RVA = "0x31A2918", Offset = "0x31A2918", VA = "0x31A2918")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x31991C8", Offset = "0x31991C8", VA = "0x31991C8")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes, float scale)
			{
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x31969AC", Offset = "0x31969AC", VA = "0x31969AC")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x31A23BC", Offset = "0x31A23BC", VA = "0x31A23BC")]
			public void Relax()
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x3195DD0", Offset = "0x3195DD0", VA = "0x3195DD0")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x3195C20", Offset = "0x3195C20", VA = "0x3195C20")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x3199AF8", Offset = "0x3199AF8", VA = "0x3199AF8")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset, float scale)
			{
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x31A2460", Offset = "0x31A2460", VA = "0x31A2460")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x31A2604", Offset = "0x31A2604", VA = "0x31A2604")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x31A2688", Offset = "0x31A2688", VA = "0x31A2688")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x319D47C", Offset = "0x319D47C", VA = "0x319D47C")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000550")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2BAC", Offset = "0x12B2BAC")]
			public Transform headTarget;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2BE4", Offset = "0x12B2BE4")]
			public Transform pelvisTarget;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2C1C", Offset = "0x12B2C1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2C1C", Offset = "0x12B2C1C")]
			public float positionWeight;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2C70", Offset = "0x12B2C70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2C70", Offset = "0x12B2C70")]
			public float rotationWeight;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2CC4", Offset = "0x12B2CC4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2CC4", Offset = "0x12B2CC4")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2D18", Offset = "0x12B2D18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2D18", Offset = "0x12B2D18")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2D6C", Offset = "0x12B2D6C")]
			public Transform chestGoal;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2DA4", Offset = "0x12B2DA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2DA4", Offset = "0x12B2DA4")]
			public float chestGoalWeight;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2DF8", Offset = "0x12B2DF8")]
			public float minHeadHeight;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2E30", Offset = "0x12B2E30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2E30", Offset = "0x12B2E30")]
			public float bodyPosStiffness;

			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2E84", Offset = "0x12B2E84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2E84", Offset = "0x12B2E84")]
			public float bodyRotStiffness;

			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2ED8", Offset = "0x12B2ED8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x12B2ED8", Offset = "0x12B2ED8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2ED8", Offset = "0x12B2ED8")]
			public float neckStiffness;

			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2F50", Offset = "0x12B2F50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2F50", Offset = "0x12B2F50")]
			public float rotateChestByHands;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2FA4", Offset = "0x12B2FA4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2FA4", Offset = "0x12B2FA4")]
			public float chestClampWeight;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B2FF8", Offset = "0x12B2FF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B2FF8", Offset = "0x12B2FF8")]
			public float headClampWeight;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B304C", Offset = "0x12B304C")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3084", Offset = "0x12B3084")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B3084", Offset = "0x12B3084")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B30D8", Offset = "0x12B30D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B30D8", Offset = "0x12B30D8")]
			public float maxRootAngle;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3130", Offset = "0x12B3130")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B3130", Offset = "0x12B3130")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40011E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40011E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B326C", Offset = "0x12B326C")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B327C", Offset = "0x12B327C")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x1700034B")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0x3196C20", Offset = "0x3196C20", VA = "0x3196C20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x6001F3F")]
				[Address(RVA = "0x31A295C", Offset = "0x31A295C", VA = "0x31A295C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034D")]
			public VirtualBone chest
			{
				[Token(Token = "0x6001F40")]
				[Address(RVA = "0x319B428", Offset = "0x319B428", VA = "0x319B428")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private VirtualBone neck
			{
				[Token(Token = "0x6001F41")]
				[Address(RVA = "0x31A299C", Offset = "0x31A299C", VA = "0x31A299C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034F")]
			public VirtualBone head
			{
				[Token(Token = "0x6001F42")]
				[Address(RVA = "0x31A2420", Offset = "0x31A2420", VA = "0x31A2420")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x6001F43")]
				[Address(RVA = "0x31A29DC", Offset = "0x31A29DC", VA = "0x31A29DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE7AC", Offset = "0x12BE7AC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F44")]
				[Address(RVA = "0x31A29F0", Offset = "0x31A29F0", VA = "0x31A29F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE7BC", Offset = "0x12BE7BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000351")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x6001F45")]
				[Address(RVA = "0x31A2A04", Offset = "0x31A2A04", VA = "0x31A2A04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE7CC", Offset = "0x12BE7CC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001F46")]
				[Address(RVA = "0x31A2A18", Offset = "0x31A2A18", VA = "0x31A2A18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE7DC", Offset = "0x12BE7DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x31A2A2C", Offset = "0x31A2A2C", VA = "0x31A2A2C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x31A34AC", Offset = "0x31A34AC", VA = "0x31A34AC", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x31A36BC", Offset = "0x31A36BC", VA = "0x31A36BC", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x31A3D44", Offset = "0x31A3D44", VA = "0x31A3D44")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x31994CC", Offset = "0x31994CC", VA = "0x31994CC")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms, float scale)
			{
			}

			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x31A4764", Offset = "0x31A4764", VA = "0x31A4764")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x31A4E30", Offset = "0x31A4E30", VA = "0x31A4E30")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x31A5144", Offset = "0x31A5144", VA = "0x31A5144", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x31A5320", Offset = "0x31A5320", VA = "0x31A5320", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x31A3F74", Offset = "0x31A3F74", VA = "0x31A3F74")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x319B0CC", Offset = "0x319B0CC", VA = "0x319B0CC")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x31A4304", Offset = "0x31A4304", VA = "0x31A4304")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation, float scale)
			{
			}

			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x31A541C", Offset = "0x31A541C", VA = "0x31A541C")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x31A4BE0", Offset = "0x31A4BE0", VA = "0x31A4BE0")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x31A4928", Offset = "0x31A4928", VA = "0x31A4928")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x319D1A0", Offset = "0x319D1A0", VA = "0x319D1A0")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000551")]
		public enum PositionOffset
		{
			[Token(Token = "0x4001209")]
			Pelvis,
			[Token(Token = "0x400120A")]
			Chest,
			[Token(Token = "0x400120B")]
			Head,
			[Token(Token = "0x400120C")]
			LeftHand,
			[Token(Token = "0x400120D")]
			RightHand,
			[Token(Token = "0x400120E")]
			LeftFoot,
			[Token(Token = "0x400120F")]
			RightFoot,
			[Token(Token = "0x4001210")]
			LeftHeel,
			[Token(Token = "0x4001211")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x2000552")]
		public enum RotationOffset
		{
			[Token(Token = "0x4001213")]
			Pelvis,
			[Token(Token = "0x4001214")]
			Chest,
			[Token(Token = "0x4001215")]
			Head
		}

		[Serializable]
		[Token(Token = "0x2000553")]
		public class VirtualBone
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x2AC5048", Offset = "0x2AC5048", VA = "0x2AC5048")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x2AC50C4", Offset = "0x2AC50C4", VA = "0x2AC50C4")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x2AC50E4", Offset = "0x2AC50E4", VA = "0x2AC50E4")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x2AC5374", Offset = "0x2AC5374", VA = "0x2AC5374")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x2AC5660", Offset = "0x2AC5660", VA = "0x2AC5660")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x2AC5848", Offset = "0x2AC5848", VA = "0x2AC5848")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x2AC5A80", Offset = "0x2AC5A80", VA = "0x2AC5A80")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x2AC5CB4", Offset = "0x2AC5CB4", VA = "0x2AC5CB4")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x2AC5D6C", Offset = "0x2AC5D6C", VA = "0x2AC5D6C")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x2AC6318", Offset = "0x2AC6318", VA = "0x2AC6318")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x2AC6530", Offset = "0x2AC6530", VA = "0x2AC6530")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x2AC6990", Offset = "0x2AC6990", VA = "0x2AC6990")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x2AC6A98", Offset = "0x2AC6A98", VA = "0x2AC6A98")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE89C", Offset = "0x12AE89C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AE89C", Offset = "0x12AE89C")]
		public int LOD;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE8F0", Offset = "0x12AE8F0")]
		public float scale;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE928", Offset = "0x12AE928")]
		public bool plantFeet;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AE960", Offset = "0x12AE960")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE970", Offset = "0x12AE970")]
		public Spine spine;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE9A8", Offset = "0x12AE9A8")]
		public Arm leftArm;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AE9E0", Offset = "0x12AE9E0")]
		public Arm rightArm;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEA18", Offset = "0x12AEA18")]
		public Leg leftLeg;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEA50", Offset = "0x12AEA50")]
		public Leg rightLeg;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEA88", Offset = "0x12AEA88")]
		public Locomotion locomotion;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x1700022D")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x319CFE0", Offset = "0x319CFE0", VA = "0x319CFE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7AC", Offset = "0x12BA7AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x319CFE8", Offset = "0x319CFE8", VA = "0x319CFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7BC", Offset = "0x12BA7BC")]
			private set
			{
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x3194D78", Offset = "0x3194D78", VA = "0x3194D78")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x31951B4", Offset = "0x31951B4", VA = "0x31951B4")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x319505C", Offset = "0x319505C", VA = "0x319505C")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x3195588", Offset = "0x3195588", VA = "0x3195588")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x3195864", Offset = "0x3195864", VA = "0x3195864")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x3195908", Offset = "0x3195908", VA = "0x3195908")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x3195A9C", Offset = "0x3195A9C", VA = "0x3195A9C")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x31961A8", Offset = "0x31961A8", VA = "0x31961A8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x3196C60", Offset = "0x3196C60", VA = "0x3196C60", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x3196DD4", Offset = "0x3196DD4", VA = "0x3196DD4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x3196FDC", Offset = "0x3196FDC", VA = "0x3196FDC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x3197050", Offset = "0x3197050", VA = "0x3197050", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x31970C4", Offset = "0x31970C4", VA = "0x31970C4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x31972D8", Offset = "0x31972D8", VA = "0x31972D8")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x3195464", Offset = "0x3195464", VA = "0x3195464")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x3196318", Offset = "0x3196318", VA = "0x3196318")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x31975B8", Offset = "0x31975B8", VA = "0x31975B8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x3197600", Offset = "0x3197600", VA = "0x3197600", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x3198D50", Offset = "0x3198D50", VA = "0x3198D50")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x3196480", Offset = "0x3196480", VA = "0x3196480")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x3197AC0", Offset = "0x3197AC0", VA = "0x3197AC0")]
		private void Solve()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x319913C", Offset = "0x319913C", VA = "0x319913C")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x3199184", Offset = "0x3199184", VA = "0x3199184")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x3198C00", Offset = "0x3198C00", VA = "0x3198C00")]
		private void Write()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x319C9F8", Offset = "0x319C9F8", VA = "0x319C9F8")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x319CFF0", Offset = "0x319CFF0", VA = "0x319CFF0")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEAC0", Offset = "0x12AEAC0")]
		public TwistSolver[] twistSolvers;

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x2ADA924", Offset = "0x2ADA924", VA = "0x2ADA924")]
		public void Start()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x2ADB018", Offset = "0x2ADB018", VA = "0x2ADB018")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x2ADB59C", Offset = "0x2ADB59C", VA = "0x2ADB59C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x2ADB664", Offset = "0x2ADB664", VA = "0x2ADB664")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x2ADB768", Offset = "0x2ADB768", VA = "0x2ADB768")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class TwistSolver
	{
		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEAF8", Offset = "0x12AEAF8")]
		public Transform transform;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEB30", Offset = "0x12AEB30")]
		public Transform parent;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEB68", Offset = "0x12AEB68")]
		public Transform[] children;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEBA0", Offset = "0x12AEBA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AEBA0", Offset = "0x12AEBA0")]
		public float weight;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEBF4", Offset = "0x12AEBF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AEBF4", Offset = "0x12AEBF4")]
		public float parentChildCrossfade;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEC48", Offset = "0x12AEC48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AEC48", Offset = "0x12AEC48")]
		public float twistAngleOffset;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 twistAxis;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 axis;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion[] childRotations;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool inititated;

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x2ADB7C8", Offset = "0x2ADB7C8", VA = "0x2ADB7C8")]
		public TwistSolver()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x2ADAAD4", Offset = "0x2ADAAD4", VA = "0x2ADAAD4")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x2ADB0E0", Offset = "0x2ADB0E0", VA = "0x2ADB0E0")]
		public void Relax()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C0")]
	public class InteractionEffector
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AECA4", Offset = "0x12AECA4")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AECB4", Offset = "0x12AECB4")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AECC4", Offset = "0x12AECC4")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x1700022E")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x2AC73BC", Offset = "0x2AC73BC", VA = "0x2AC73BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7CC", Offset = "0x12BA7CC")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x2AC73C4", Offset = "0x2AC73C4", VA = "0x2AC73C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7DC", Offset = "0x12BA7DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool isPaused
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0x2AC73CC", Offset = "0x2AC73CC", VA = "0x2AC73CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7EC", Offset = "0x12BA7EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x2AC73D4", Offset = "0x2AC73D4", VA = "0x2AC73D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA7FC", Offset = "0x12BA7FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x2AC73E0", Offset = "0x2AC73E0", VA = "0x2AC73E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA80C", Offset = "0x12BA80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x2AC73E8", Offset = "0x2AC73E8", VA = "0x2AC73E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA81C", Offset = "0x12BA81C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public bool inInteraction
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x2AC73F0", Offset = "0x2AC73F0", VA = "0x2AC73F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000232")]
		public float progress
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x2ACA02C", Offset = "0x2ACA02C", VA = "0x2ACA02C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x2AC7460", Offset = "0x2AC7460", VA = "0x2AC7460")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x2AC74E4", Offset = "0x2AC74E4", VA = "0x2AC74E4")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x2AC7580", Offset = "0x2AC7580", VA = "0x2AC7580")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x2AC76F8", Offset = "0x2AC76F8", VA = "0x2AC76F8")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x2AC7BA8", Offset = "0x2AC7BA8", VA = "0x2AC7BA8")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x2AC7F68", Offset = "0x2AC7F68", VA = "0x2AC7F68")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x2AC7FBC", Offset = "0x2AC7FBC", VA = "0x2AC7FBC")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x2AC8C6C", Offset = "0x2AC8C6C", VA = "0x2AC8C6C")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x2AC97D4", Offset = "0x2AC97D4", VA = "0x2AC97D4")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x2AC99FC", Offset = "0x2AC99FC", VA = "0x2AC99FC")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x2AC9ED8", Offset = "0x2AC9ED8", VA = "0x2AC9ED8")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x2ACA514", Offset = "0x2ACA514", VA = "0x2ACA514")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class InteractionLookAt
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AECD4", Offset = "0x12AECD4")]
		public LookAtIK ik;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AED0C", Offset = "0x12AED0C")]
		public float lerpSpeed;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AED44", Offset = "0x12AED44")]
		public float weightSpeed;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x2ACA7FC", Offset = "0x2ACA7FC", VA = "0x2ACA7FC")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x2ACA974", Offset = "0x2ACA974", VA = "0x2ACA974")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x2ACAA1C", Offset = "0x2ACAA1C", VA = "0x2ACAA1C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x2ACAC60", Offset = "0x2ACAC60", VA = "0x2ACAC60")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x2ACAD58", Offset = "0x2ACAD58", VA = "0x2ACAD58")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x2ACAE24", Offset = "0x2ACAE24", VA = "0x2ACAE24")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA34C", Offset = "0x12AA34C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA34C", Offset = "0x12AA34C")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000554")]
		public class InteractionEvent
		{
			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B328C", Offset = "0x12B328C")]
			public float time;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B32C4", Offset = "0x12B32C4")]
			public bool pause;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B32FC", Offset = "0x12B32FC")]
			public bool pickUp;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3334", Offset = "0x12B3334")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B336C", Offset = "0x12B336C")]
			public Message[] messages;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B33A4", Offset = "0x12B33A4")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x2ACA068", Offset = "0x2ACA068", VA = "0x2ACA068")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x2ACC120", Offset = "0x2ACC120", VA = "0x2ACC120")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000555")]
		public class Message
		{
			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B33DC", Offset = "0x12B33DC")]
			public string function;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3414", Offset = "0x12B3414")]
			public GameObject recipient;

			[Token(Token = "0x4001225")]
			private const string empty = "";

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x2ACC030", Offset = "0x2ACC030", VA = "0x2ACC030")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x2ACC128", Offset = "0x2ACC128", VA = "0x2ACC128")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000556")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B344C", Offset = "0x12B344C")]
			public Animator animator;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3484", Offset = "0x12B3484")]
			public Animation animation;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B34BC", Offset = "0x12B34BC")]
			public string animationState;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B34F4", Offset = "0x12B34F4")]
			public float crossfadeTime;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B352C", Offset = "0x12B352C")]
			public int layer;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3564", Offset = "0x12B3564")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400122C")]
			private const string empty = "";

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x2ACBD90", Offset = "0x2ACBD90", VA = "0x2ACBD90")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x2ACBE84", Offset = "0x2ACBE84", VA = "0x2ACBE84")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x2ACBF3C", Offset = "0x2ACBF3C", VA = "0x2ACBF3C")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x2ACC01C", Offset = "0x2ACC01C", VA = "0x2ACC01C")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000557")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000642")]
			public enum Type
			{
				[Token(Token = "0x4001506")]
				PositionWeight,
				[Token(Token = "0x4001507")]
				RotationWeight,
				[Token(Token = "0x4001508")]
				PositionOffsetX,
				[Token(Token = "0x4001509")]
				PositionOffsetY,
				[Token(Token = "0x400150A")]
				PositionOffsetZ,
				[Token(Token = "0x400150B")]
				Pull,
				[Token(Token = "0x400150C")]
				Reach,
				[Token(Token = "0x400150D")]
				RotateBoneWeight,
				[Token(Token = "0x400150E")]
				Push,
				[Token(Token = "0x400150F")]
				PushParent,
				[Token(Token = "0x4001510")]
				PoserWeight,
				[Token(Token = "0x4001511")]
				BendGoalWeight
			}

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B359C", Offset = "0x12B359C")]
			public Type type;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B35D4", Offset = "0x12B35D4")]
			public AnimationCurve curve;

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x2ACB5A8", Offset = "0x2ACB5A8", VA = "0x2ACB5A8")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x2ACC140", Offset = "0x2ACC140", VA = "0x2ACC140")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000558")]
		public class Multiplier
		{
			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B360C", Offset = "0x12B360C")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3644", Offset = "0x12B3644")]
			public float multiplier;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B367C", Offset = "0x12B367C")]
			public WeightCurve.Type result;

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x2ACBC88", Offset = "0x2ACBC88", VA = "0x2ACBC88")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x2ACC130", Offset = "0x2ACC130", VA = "0x2ACC130")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AED8C", Offset = "0x12AED8C")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEDC4", Offset = "0x12AEDC4")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEDFC", Offset = "0x12AEDFC")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AEE34", Offset = "0x12AEE34")]
		private float <length>k__BackingField;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AEE44", Offset = "0x12AEE44")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000233")]
		public float length
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x2ACB098", Offset = "0x2ACB098", VA = "0x2ACB098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA9EC", Offset = "0x12BA9EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x2ACB0A0", Offset = "0x2ACB0A0", VA = "0x2ACB0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BA9FC", Offset = "0x12BA9FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x2ACB0A8", Offset = "0x2ACB0A8", VA = "0x2ACB0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAA0C", Offset = "0x12BAA0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x2ACB0B0", Offset = "0x2ACB0B0", VA = "0x2ACB0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAA1C", Offset = "0x12BAA1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x2ACB2CC", Offset = "0x2ACB2CC", VA = "0x2ACB2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public Transform targetsRoot
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x2ACA3E8", Offset = "0x2ACA3E8", VA = "0x2ACA3E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x2ACAE38", Offset = "0x2ACAE38", VA = "0x2ACAE38")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA82C", Offset = "0x12BA82C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x2ACAE84", Offset = "0x2ACAE84", VA = "0x2ACAE84")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA864", Offset = "0x12BA864")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x2ACAED0", Offset = "0x2ACAED0", VA = "0x2ACAED0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA89C", Offset = "0x12BA89C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x2ACAF1C", Offset = "0x2ACAF1C", VA = "0x2ACAF1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA8D4", Offset = "0x12BA8D4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x2ACAF68", Offset = "0x2ACAF68", VA = "0x2ACAF68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA90C", Offset = "0x12BA90C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x2ACAFB4", Offset = "0x2ACAFB4", VA = "0x2ACAFB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA944", Offset = "0x12BA944")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x2ACB000", Offset = "0x2ACB000", VA = "0x2ACB000")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA97C", Offset = "0x12BA97C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x2ACB04C", Offset = "0x2ACB04C", VA = "0x2ACB04C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BA9B4", Offset = "0x12BA9B4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x2ACB0B8", Offset = "0x2ACB0B8", VA = "0x2ACB0B8")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x2ACB35C", Offset = "0x2ACB35C", VA = "0x2ACB35C")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x2AC8520", Offset = "0x2AC8520", VA = "0x2AC8520")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x2ACB4C0", Offset = "0x2ACB4C0", VA = "0x2ACB4C0")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x2AC83DC", Offset = "0x2AC83DC", VA = "0x2AC83DC")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x2AC8518", Offset = "0x2AC8518", VA = "0x2AC8518")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x2AC93B8", Offset = "0x2AC93B8", VA = "0x2AC93B8")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x2AC9CB0", Offset = "0x2AC9CB0", VA = "0x2AC9CB0")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x2ACBCC4", Offset = "0x2ACBCC4", VA = "0x2ACBCC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x2ACB5C4", Offset = "0x2ACB5C4", VA = "0x2ACB5C4")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x2ACB4C8", Offset = "0x2ACB4C8", VA = "0x2ACB4C8")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x2ACBC20", Offset = "0x2ACBC20", VA = "0x2ACBC20")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x2ACBCC8", Offset = "0x2ACBCC8", VA = "0x2ACBCC8")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x2ACBD30", Offset = "0x2ACBD30", VA = "0x2ACBD30")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA3AC", Offset = "0x12AA3AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA3AC", Offset = "0x12AA3AC")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x200055A")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEE54", Offset = "0x12AEE54")]
		public string targetTag;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEE8C", Offset = "0x12AEE8C")]
		public float fadeInTime;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEEC4", Offset = "0x12AEEC4")]
		public float speed;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEEFC", Offset = "0x12AEEFC")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AEF34", Offset = "0x12AEF34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEF34", Offset = "0x12AEF34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x12AEF34", Offset = "0x12AEF34")]
		public Collider characterCollider;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AEFB8", Offset = "0x12AEFB8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x12AEFB8", Offset = "0x12AEFB8")]
		public Transform FPSCamera;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF018", Offset = "0x12AF018")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF050", Offset = "0x12AF050")]
		public float camRaycastDistance;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AF088", Offset = "0x12AF088")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x12AF098", Offset = "0x12AF098")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF098", Offset = "0x12AF098")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF0F8", Offset = "0x12AF0F8")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AF130", Offset = "0x12AF130")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000237")]
		public bool inInteraction
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x2ACC3A8", Offset = "0x2ACC3A8", VA = "0x2ACC3A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000238")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x2ACDFC0", Offset = "0x2ACDFC0", VA = "0x2ACDFC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x2ACDFC8", Offset = "0x2ACDFC8", VA = "0x2ACDFC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x2ACDFD0", Offset = "0x2ACDFD0", VA = "0x2ACDFD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BABEC", Offset = "0x12BABEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x2ACDFD8", Offset = "0x2ACDFD8", VA = "0x2ACDFD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BABFC", Offset = "0x12BABFC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public bool initiated
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x2ACDFE0", Offset = "0x2ACDFE0", VA = "0x2ACDFE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAC0C", Offset = "0x12BAC0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x2ACDFE8", Offset = "0x2ACDFE8", VA = "0x2ACDFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAC1C", Offset = "0x12BAC1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x2ACC148", Offset = "0x2ACC148", VA = "0x2ACC148")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAA2C", Offset = "0x12BAA2C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x2ACC194", Offset = "0x2ACC194", VA = "0x2ACC194")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAA64", Offset = "0x12BAA64")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x2ACC1E0", Offset = "0x2ACC1E0", VA = "0x2ACC1E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAA9C", Offset = "0x12BAA9C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x2ACC22C", Offset = "0x2ACC22C", VA = "0x2ACC22C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAAD4", Offset = "0x12BAAD4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x2ACC278", Offset = "0x2ACC278", VA = "0x2ACC278")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAB0C", Offset = "0x12BAB0C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x2ACC2C4", Offset = "0x2ACC2C4", VA = "0x2ACC2C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAB44", Offset = "0x12BAB44")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x2ACC310", Offset = "0x2ACC310", VA = "0x2ACC310")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAB7C", Offset = "0x12BAB7C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x2ACC35C", Offset = "0x2ACC35C", VA = "0x2ACC35C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BABB4", Offset = "0x12BABB4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x2ACC538", Offset = "0x2ACC538", VA = "0x2ACC538")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x2ACC604", Offset = "0x2ACC604", VA = "0x2ACC604")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x2ACC6D0", Offset = "0x2ACC6D0", VA = "0x2ACC6D0")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x2ACC77C", Offset = "0x2ACC77C", VA = "0x2ACC77C")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x2ACC874", Offset = "0x2ACC874", VA = "0x2ACC874")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x2ACC990", Offset = "0x2ACC990", VA = "0x2ACC990")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x2ACCA20", Offset = "0x2ACCA20", VA = "0x2ACCA20")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2ACCAB0", Offset = "0x2ACCAB0", VA = "0x2ACCAB0")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x2ACCB40", Offset = "0x2ACCB40", VA = "0x2ACCB40")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x2ACCBB4", Offset = "0x2ACCBB4", VA = "0x2ACCBB4")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x2ACCC28", Offset = "0x2ACCC28", VA = "0x2ACCC28")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x2ACCC90", Offset = "0x2ACCC90", VA = "0x2ACCC90")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x2ACCD1C", Offset = "0x2ACCD1C", VA = "0x2ACCD1C")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x2ACCDD0", Offset = "0x2ACCDD0", VA = "0x2ACCDD0")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x2ACCEB4", Offset = "0x2ACCEB4", VA = "0x2ACCEB4")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x2ACD158", Offset = "0x2ACD158", VA = "0x2ACD158")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x2ACD330", Offset = "0x2ACD330", VA = "0x2ACD330")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x2ACD5A4", Offset = "0x2ACD5A4", VA = "0x2ACD5A4")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x2ACD898", Offset = "0x2ACD898", VA = "0x2ACD898")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x2ACD8DC", Offset = "0x2ACD8DC", VA = "0x2ACD8DC")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x2ACD954", Offset = "0x2ACD954", VA = "0x2ACD954")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x2ACDA74", Offset = "0x2ACDA74", VA = "0x2ACDA74")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x2ACDBEC", Offset = "0x2ACDBEC", VA = "0x2ACDBEC")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x2ACDE94", Offset = "0x2ACDE94", VA = "0x2ACDE94")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x2ACD6A4", Offset = "0x2ACD6A4", VA = "0x2ACD6A4")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x2ACDFF4", Offset = "0x2ACDFF4", VA = "0x2ACDFF4")]
		public void Start()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x2ACE6A8", Offset = "0x2ACE6A8", VA = "0x2ACE6A8")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x2ACE6C8", Offset = "0x2ACE6C8", VA = "0x2ACE6C8")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x2ACE6E4", Offset = "0x2ACE6E4", VA = "0x2ACE6E4")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x2ACE700", Offset = "0x2ACE700", VA = "0x2ACE700")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x2ACE760", Offset = "0x2ACE760", VA = "0x2ACE760")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x2ACE87C", Offset = "0x2ACE87C", VA = "0x2ACE87C")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2ACE978", Offset = "0x2ACE978", VA = "0x2ACE978")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x2ACECD8", Offset = "0x2ACECD8", VA = "0x2ACECD8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x2ACEDC4", Offset = "0x2ACEDC4", VA = "0x2ACEDC4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x2ACEFDC", Offset = "0x2ACEFDC", VA = "0x2ACEFDC")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x2ACE420", Offset = "0x2ACE420", VA = "0x2ACE420")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x2ACF11C", Offset = "0x2ACF11C", VA = "0x2ACF11C")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x2ACF248", Offset = "0x2ACF248", VA = "0x2ACF248")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x2ACF2E0", Offset = "0x2ACF2E0", VA = "0x2ACF2E0")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x2ACF3B8", Offset = "0x2ACF3B8", VA = "0x2ACF3B8")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x2ACF3D0", Offset = "0x2ACF3D0", VA = "0x2ACF3D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x2ACC454", Offset = "0x2ACC454", VA = "0x2ACC454")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x2ACD054", Offset = "0x2ACD054", VA = "0x2ACD054")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x2ACF6C0", Offset = "0x2ACF6C0", VA = "0x2ACF6C0")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA40C", Offset = "0x12AA40C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA40C", Offset = "0x12AA40C")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055B")]
		public enum RotationMode
		{
			[Token(Token = "0x4001233")]
			TwoDOF,
			[Token(Token = "0x4001234")]
			ThreeDOF
		}

		[Serializable]
		[Token(Token = "0x200055C")]
		public class Multiplier
		{
			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B36B4", Offset = "0x12B36B4")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B36EC", Offset = "0x12B36EC")]
			public float multiplier;

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x2ACFE64", Offset = "0x2ACFE64", VA = "0x2ACFE64")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF140", Offset = "0x12AF140")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF178", Offset = "0x12AF178")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF1B0", Offset = "0x12AF1B0")]
		public float interactionSpeedMlp;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF1E8", Offset = "0x12AF1E8")]
		public Transform pivot;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF220", Offset = "0x12AF220")]
		public RotationMode rotationMode;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF258", Offset = "0x12AF258")]
		public Vector3 twistAxis;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF290", Offset = "0x12AF290")]
		public float twistWeight;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF2C8", Offset = "0x12AF2C8")]
		public float swingWeight;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF300", Offset = "0x12AF300")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF300", Offset = "0x12AF300")]
		public float threeDOFWeight;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF354", Offset = "0x12AF354")]
		public bool rotateOnce;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastPivot;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x2ACFB74", Offset = "0x2ACFB74", VA = "0x2ACFB74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAC2C", Offset = "0x12BAC2C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x2ACFBC0", Offset = "0x2ACFBC0", VA = "0x2ACFBC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAC64", Offset = "0x12BAC64")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x2ACFC0C", Offset = "0x2ACFC0C", VA = "0x2ACFC0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAC9C", Offset = "0x12BAC9C")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x2ACFC58", Offset = "0x2ACFC58", VA = "0x2ACFC58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BACD4", Offset = "0x12BACD4")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x2ACFCA4", Offset = "0x2ACFCA4", VA = "0x2ACFCA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAD0C", Offset = "0x12BAD0C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x2ACFCF0", Offset = "0x2ACFCF0", VA = "0x2ACFCF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAD44", Offset = "0x12BAD44")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x2ACFD3C", Offset = "0x2ACFD3C", VA = "0x2ACFD3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAD7C", Offset = "0x12BAD7C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x2ACFD88", Offset = "0x2ACFD88", VA = "0x2ACFD88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BADB4", Offset = "0x12BADB4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x2ACB538", Offset = "0x2ACB538", VA = "0x2ACB538")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x2ACA478", Offset = "0x2ACA478", VA = "0x2ACA478")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x2AC85D4", Offset = "0x2AC85D4", VA = "0x2AC85D4")]
		public void RotateTo(Transform bone)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x2ACFDD4", Offset = "0x2ACFDD4", VA = "0x2ACFDD4")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA46C", Offset = "0x12AA46C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA46C", Offset = "0x12AA46C")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public class CharacterPosition
		{
			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3724", Offset = "0x12B3724")]
			public bool use;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B375C", Offset = "0x12B375C")]
			public Vector2 offset;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3794", Offset = "0x12B3794")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B3794", Offset = "0x12B3794")]
			public float angleOffset;

			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B37F0", Offset = "0x12B37F0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B37F0", Offset = "0x12B37F0")]
			public float maxAngle;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3848", Offset = "0x12B3848")]
			public float radius;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3880", Offset = "0x12B3880")]
			public bool orbit;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B38B8", Offset = "0x12B38B8")]
			public bool fixYAxis;

			[Token(Token = "0x17000352")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6001F79")]
				[Address(RVA = "0x2AD0680", Offset = "0x2AD0680", VA = "0x2AD0680")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000353")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6001F7A")]
				[Address(RVA = "0x2AD06BC", Offset = "0x2AD06BC", VA = "0x2AD06BC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x2AD07B4", Offset = "0x2AD07B4", VA = "0x2AD07B4")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x2AD0E30", Offset = "0x2AD0E30", VA = "0x2AD0E30")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200055E")]
		public class CameraPosition
		{
			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B38F0", Offset = "0x12B38F0")]
			public Collider lookAtTarget;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3928", Offset = "0x12B3928")]
			public Vector3 direction;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3960", Offset = "0x12B3960")]
			public float maxDistance;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3998", Offset = "0x12B3998")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B3998", Offset = "0x12B3998")]
			public float maxAngle;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B39F0", Offset = "0x12B39F0")]
			public bool fixYAxis;

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x2AD016C", Offset = "0x2AD016C", VA = "0x2AD016C")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x2AD0314", Offset = "0x2AD0314", VA = "0x2AD0314")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x2AD05F4", Offset = "0x2AD05F4", VA = "0x2AD05F4")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200055F")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x2000643")]
			public class Interaction
			{
				[Token(Token = "0x4001512")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4BC8", Offset = "0x12B4BC8")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4001513")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4C00", Offset = "0x12B4C00")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6002280")]
				[Address(RVA = "0x2AD0E54", Offset = "0x2AD0E54", VA = "0x2AD0E54")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public bool show;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3A48", Offset = "0x12B3A48")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3A80", Offset = "0x12B3A80")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3AB8", Offset = "0x12B3AB8")]
			public Interaction[] interactions;

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x2ACFFE8", Offset = "0x2ACFFE8", VA = "0x2ACFFE8")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x2AD0E44", Offset = "0x2AD0E44", VA = "0x2AD0E44")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF38C", Offset = "0x12AF38C")]
		public Range[] ranges;

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x2ACFE6C", Offset = "0x2ACFE6C", VA = "0x2ACFE6C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BADEC", Offset = "0x12BADEC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x2ACFEB8", Offset = "0x2ACFEB8", VA = "0x2ACFEB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAE24", Offset = "0x12BAE24")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x2ACFF04", Offset = "0x2ACFF04", VA = "0x2ACFF04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAE5C", Offset = "0x12BAE5C")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x2ACFF50", Offset = "0x2ACFF50", VA = "0x2ACFF50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAE94", Offset = "0x12BAE94")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x2ACFF9C", Offset = "0x2ACFF9C", VA = "0x2ACFF9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAECC", Offset = "0x12BAECC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x2ACEB1C", Offset = "0x2ACEB1C", VA = "0x2ACEB1C")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x2AD010C", Offset = "0x2AD010C", VA = "0x2AD010C")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x2000560")]
		public class Map
		{
			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x2ABCD9C", Offset = "0x2ABCD9C", VA = "0x2ABCD9C")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x2ABD1A0", Offset = "0x2ABD1A0", VA = "0x2ABD1A0")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x2ABD154", Offset = "0x2ABD154", VA = "0x2ABD154")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x2ABCF4C", Offset = "0x2ABCF4C", VA = "0x2ABCF4C")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x2ABCAB4", Offset = "0x2ABCAB4", VA = "0x2ABCAB4", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAF04", Offset = "0x12BAF04")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x2ABCE40", Offset = "0x2ABCE40", VA = "0x2ABCE40", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x2ABCE44", Offset = "0x2ABCE44", VA = "0x2ABCE44", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x2ABD0EC", Offset = "0x2ABD0EC", VA = "0x2ABD0EC", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x2ABCDD8", Offset = "0x2ABCDD8", VA = "0x2ABCDD8")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x2ABCCFC", Offset = "0x2ABCCFC", VA = "0x2ABCCFC")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x2ABD1F0", Offset = "0x2ABD1F0", VA = "0x2ABD1F0")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x2D1437C", Offset = "0x2D1437C", VA = "0x2D1437C", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x2D14430", Offset = "0x2D14430", VA = "0x2D14430", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2D145E8", Offset = "0x2D145E8", VA = "0x2D145E8", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x2D146E4", Offset = "0x2D146E4", VA = "0x2D146E4", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2D1448C", Offset = "0x2D1448C", VA = "0x2D1448C")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x2D14A94", Offset = "0x2D14A94", VA = "0x2D14A94")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF3C4", Offset = "0x12AF3C4")]
		public float weight;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF3DC", Offset = "0x12AF3DC")]
		public float localRotationWeight;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF3F4", Offset = "0x12AF3F4")]
		public float localPositionWeight;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x600139F")]
		public abstract void AutoMapping();

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2AD3A18", Offset = "0x2AD3A18", VA = "0x2AD3A18")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x60013A1")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x60013A2")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x60013A3")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x2AD3A24", Offset = "0x2AD3A24", VA = "0x2AD3A24", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x2AD3A78", Offset = "0x2AD3A78", VA = "0x2AD3A78", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x2AD3AB4", Offset = "0x2AD3AB4", VA = "0x2AD3AB4", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x2AD3ACC", Offset = "0x2AD3ACC", VA = "0x2AD3ACC")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x2000561")]
		public class Rigidbone
		{
			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x2AD4050", Offset = "0x2AD4050", VA = "0x2AD4050")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x2AD4C5C", Offset = "0x2AD4C5C", VA = "0x2AD4C5C")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x2AD4A40", Offset = "0x2AD4A40", VA = "0x2AD4A40")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x2000562")]
		public class Child
		{
			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x2AD41AC", Offset = "0x2AD41AC", VA = "0x2AD41AC")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x2AD4DF8", Offset = "0x2AD4DF8", VA = "0x2AD4DF8")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x2AD4DA8", Offset = "0x2AD4DA8", VA = "0x2AD4DA8")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB830", Offset = "0x12AB830")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x17000354")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F8F")]
				[Address(RVA = "0x2AD53D8", Offset = "0x2AD53D8", VA = "0x2AD53D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000355")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F91")]
				[Address(RVA = "0x2AD5440", Offset = "0x2AD5440", VA = "0x2AD5440", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x2AD420C", Offset = "0x2AD420C", VA = "0x2AD420C")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x2AD5190", Offset = "0x2AD5190", VA = "0x2AD5190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x2AD5194", Offset = "0x2AD5194", VA = "0x2AD5194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x2AD53E0", Offset = "0x2AD53E0", VA = "0x2AD53E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF40C", Offset = "0x12AF40C")]
		public IK ik;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF444", Offset = "0x12AF444")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF47C", Offset = "0x12AF47C")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF4B4", Offset = "0x12AF4B4")]
		public float applyVelocity;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF4EC", Offset = "0x12AF4EC")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x1700023B")]
		private bool isRagdoll
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x2AD3B14", Offset = "0x2AD3B14", VA = "0x2AD3B14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		private bool ikUsed
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x2AD45F8", Offset = "0x2AD45F8", VA = "0x2AD45F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x2AD3ADC", Offset = "0x2AD3ADC", VA = "0x2AD3ADC")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x2AD3B8C", Offset = "0x2AD3B8C", VA = "0x2AD3B8C")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x2AD3CBC", Offset = "0x2AD3CBC", VA = "0x2AD3CBC")]
		public void Start()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x2AD3C4C", Offset = "0x2AD3C4C", VA = "0x2AD3C4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BAF3C", Offset = "0x12BAF3C")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x2AD4238", Offset = "0x2AD4238", VA = "0x2AD4238")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x2AD4484", Offset = "0x2AD4484", VA = "0x2AD4484")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x2AD453C", Offset = "0x2AD453C", VA = "0x2AD453C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x2AD477C", Offset = "0x2AD477C", VA = "0x2AD477C")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x2AD45BC", Offset = "0x2AD45BC", VA = "0x2AD45BC")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x2AD4738", Offset = "0x2AD4738", VA = "0x2AD4738")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x2AD4818", Offset = "0x2AD4818", VA = "0x2AD4818")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x2AD47B0", Offset = "0x2AD47B0", VA = "0x2AD47B0")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x2AD3BE4", Offset = "0x2AD3BE4", VA = "0x2AD3BE4")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x2AD44C4", Offset = "0x2AD44C4", VA = "0x2AD44C4")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2AD4FC0", Offset = "0x2AD4FC0", VA = "0x2AD4FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x2AD50C4", Offset = "0x2AD50C4", VA = "0x2AD50C4")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AF534", Offset = "0x12AF534")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x1700023D")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x2AD6CCC", Offset = "0x2AD6CCC", VA = "0x2AD6CCC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700023E")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x2AD6D08", Offset = "0x2AD6D08", VA = "0x2AD6D08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700023F")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x2AD6DD8", Offset = "0x2AD6DD8", VA = "0x2AD6DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAFA0", Offset = "0x12BAFA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x2AD6DE0", Offset = "0x2AD6DE0", VA = "0x2AD6DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BAFB0", Offset = "0x12BAFB0")]
			private set
			{
			}
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x2AD6930", Offset = "0x2AD6930", VA = "0x2AD6930")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x2AD6978", Offset = "0x2AD6978", VA = "0x2AD6978")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x2AD6990", Offset = "0x2AD6990", VA = "0x2AD6990")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x2AD6C24", Offset = "0x2AD6C24", VA = "0x2AD6C24")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x2AD6C94", Offset = "0x2AD6C94", VA = "0x2AD6C94")]
		public void Disable()
		{
		}

		[Token(Token = "0x60013C3")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x2AD6B34", Offset = "0x2AD6B34", VA = "0x2AD6B34")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x2AD6DEC", Offset = "0x2AD6DEC", VA = "0x2AD6DEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x2AD6DF0", Offset = "0x2AD6DF0", VA = "0x2AD6DF0")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x2AD6E24", Offset = "0x2AD6E24", VA = "0x2AD6E24")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x2AD6F08", Offset = "0x2AD6F08", VA = "0x2AD6F08")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x2AD7184", Offset = "0x2AD7184", VA = "0x2AD7184")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x2AD7240", Offset = "0x2AD7240", VA = "0x2AD7240")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA4CC", Offset = "0x12AA4CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA4CC", Offset = "0x12AA4CC")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF544", Offset = "0x12AF544")]
		public float limit;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF560", Offset = "0x12AF560")]
		public float twistLimit;

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x2AD72B8", Offset = "0x2AD72B8", VA = "0x2AD72B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAFC0", Offset = "0x12BAFC0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2AD7304", Offset = "0x2AD7304", VA = "0x2AD7304")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BAFF8", Offset = "0x12BAFF8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x2AD7350", Offset = "0x2AD7350", VA = "0x2AD7350")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB030", Offset = "0x12BB030")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x2AD739C", Offset = "0x2AD739C", VA = "0x2AD739C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB068", Offset = "0x12BB068")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x2AD73E8", Offset = "0x2AD73E8", VA = "0x2AD73E8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x2AD74A0", Offset = "0x2AD74A0", VA = "0x2AD74A0")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x2AD76E8", Offset = "0x2AD76E8", VA = "0x2AD76E8")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA52C", Offset = "0x12AA52C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA52C", Offset = "0x12AA52C")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastAngle;

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x2AD76F8", Offset = "0x2AD76F8", VA = "0x2AD76F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB0A0", Offset = "0x12BB0A0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x2AD7744", Offset = "0x2AD7744", VA = "0x2AD7744")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB0D8", Offset = "0x12BB0D8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x2AD7790", Offset = "0x2AD7790", VA = "0x2AD7790")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB110", Offset = "0x12BB110")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2AD77DC", Offset = "0x2AD77DC", VA = "0x2AD77DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB148", Offset = "0x12BB148")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x2AD7828", Offset = "0x2AD7828", VA = "0x2AD7828", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x2AD782C", Offset = "0x2AD782C", VA = "0x2AD782C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x2AD7AD8", Offset = "0x2AD7AD8", VA = "0x2AD7AD8")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA58C", Offset = "0x12AA58C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA58C", Offset = "0x12AA58C")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x2000564")]
		public class ReachCone
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x17000356")]
			public Vector3 o
			{
				[Token(Token = "0x6001F92")]
				[Address(RVA = "0x2AD9A10", Offset = "0x2AD9A10", VA = "0x2AD9A10")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000357")]
			public Vector3 a
			{
				[Token(Token = "0x6001F93")]
				[Address(RVA = "0x2AD9A48", Offset = "0x2AD9A48", VA = "0x2AD9A48")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000358")]
			public Vector3 b
			{
				[Token(Token = "0x6001F94")]
				[Address(RVA = "0x2AD9A84", Offset = "0x2AD9A84", VA = "0x2AD9A84")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000359")]
			public Vector3 c
			{
				[Token(Token = "0x6001F95")]
				[Address(RVA = "0x2AD9AC0", Offset = "0x2AD9AC0", VA = "0x2AD9AC0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700035A")]
			public bool isValid
			{
				[Token(Token = "0x6001F97")]
				[Address(RVA = "0x2AD8B74", Offset = "0x2AD8B74", VA = "0x2AD8B74")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x2AD91C0", Offset = "0x2AD91C0", VA = "0x2AD91C0")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x2AD9320", Offset = "0x2AD9320", VA = "0x2AD9320")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000565")]
		public class LimitPoint
		{
			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x2AD8B84", Offset = "0x2AD8B84", VA = "0x2AD8B84")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF58C", Offset = "0x12AF58C")]
		public float twistLimit;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF5A8", Offset = "0x12AF5A8")]
		public int smoothIterations;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x2AD7AF0", Offset = "0x2AD7AF0", VA = "0x2AD7AF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB180", Offset = "0x12BB180")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x2AD7B3C", Offset = "0x2AD7B3C", VA = "0x2AD7B3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB1B8", Offset = "0x12BB1B8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x2AD7B88", Offset = "0x2AD7B88", VA = "0x2AD7B88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB1F0", Offset = "0x12BB1F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x2AD7BD4", Offset = "0x2AD7BD4", VA = "0x2AD7BD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB228", Offset = "0x12BB228")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x2AD7C20", Offset = "0x2AD7C20", VA = "0x2AD7C20")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x2AD8108", Offset = "0x2AD8108", VA = "0x2AD8108", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x2AD8200", Offset = "0x2AD8200", VA = "0x2AD8200")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x2AD87C0", Offset = "0x2AD87C0", VA = "0x2AD87C0")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x2AD7CC0", Offset = "0x2AD7CC0", VA = "0x2AD7CC0")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x2AD8C08", Offset = "0x2AD8C08", VA = "0x2AD8C08")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x2AD94E0", Offset = "0x2AD94E0", VA = "0x2AD94E0")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x2AD9524", Offset = "0x2AD9524", VA = "0x2AD9524")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x2AD966C", Offset = "0x2AD966C", VA = "0x2AD966C")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x2AD8484", Offset = "0x2AD8484", VA = "0x2AD8484")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x2AD97FC", Offset = "0x2AD97FC", VA = "0x2AD97FC")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x2AD99AC", Offset = "0x2AD99AC", VA = "0x2AD99AC")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x12AA5EC", Offset = "0x12AA5EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x12AA5EC", Offset = "0x12AA5EC")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF5F0", Offset = "0x12AF5F0")]
		public float twistLimit;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x2AD9AFC", Offset = "0x2AD9AFC", VA = "0x2AD9AFC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB260", Offset = "0x12BB260")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x2AD9B48", Offset = "0x2AD9B48", VA = "0x2AD9B48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB298", Offset = "0x12BB298")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x2AD9B94", Offset = "0x2AD9B94", VA = "0x2AD9B94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB2D0", Offset = "0x12BB2D0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x2AD9BE0", Offset = "0x2AD9BE0", VA = "0x2AD9BE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x12BB308", Offset = "0x12BB308")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x2AD9C2C", Offset = "0x2AD9C2C", VA = "0x2AD9C2C")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x2AD9C48", Offset = "0x2AD9C48", VA = "0x2AD9C48", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x2AD9D00", Offset = "0x2AD9D00", VA = "0x2AD9D00")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x2ADA02C", Offset = "0x2ADA02C", VA = "0x2ADA02C")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB840", Offset = "0x12AB840")]
		private sealed class <TurnToTarget>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F9D")]
				[Address(RVA = "0x2AAF7B8", Offset = "0x2AAF7B8", VA = "0x2AAF7B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F9F")]
				[Address(RVA = "0x2AAF820", Offset = "0x2AAF820", VA = "0x2AAF820", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x2AAF594", Offset = "0x2AAF594", VA = "0x2AAF594")]
			[DebuggerHidden]
			public <TurnToTarget>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x2AAF694", Offset = "0x2AAF694", VA = "0x2AAF694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x2AAF698", Offset = "0x2AAF698", VA = "0x2AAF698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x2AAF7C0", Offset = "0x2AAF7C0", VA = "0x2AAF7C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF61C", Offset = "0x12AF61C")]
		public AimIK ik;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF654", Offset = "0x12AF654")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF654", Offset = "0x12AF654")]
		public float weight;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AF6A8", Offset = "0x12AF6A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF6A8", Offset = "0x12AF6A8")]
		public Transform target;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF708", Offset = "0x12AF708")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF740", Offset = "0x12AF740")]
		public float weightSmoothTime;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AF778", Offset = "0x12AF778")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF778", Offset = "0x12AF778")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF7D8", Offset = "0x12AF7D8")]
		public float maxRadiansDelta;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF810", Offset = "0x12AF810")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF848", Offset = "0x12AF848")]
		public float slerpSpeed;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF880", Offset = "0x12AF880")]
		public float smoothDampTime;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF8B8", Offset = "0x12AF8B8")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF8F0", Offset = "0x12AF8F0")]
		public float minDistance;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF928", Offset = "0x12AF928")]
		public Vector3 offset;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AF960", Offset = "0x12AF960")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF960", Offset = "0x12AF960")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AF960", Offset = "0x12AF960")]
		public float maxRootAngle;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AF9DC", Offset = "0x12AF9DC")]
		public bool turnToTarget;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFA14", Offset = "0x12AFA14")]
		public float turnToTargetTime;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AFA4C", Offset = "0x12AFA4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFA4C", Offset = "0x12AFA4C")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFAAC", Offset = "0x12AFAAC")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTarget;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float switchWeight;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float switchWeightV;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float weightV;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 lastPosition;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 dir;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool turningToTarget;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float turnToTargetMlp;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float turnToTargetMlpV;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float yawV;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float pitchV;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float dirMagV;

		[Token(Token = "0x17000240")]
		private Vector3 pivot
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x2AAE524", Offset = "0x2AAE524", VA = "0x2AAE524")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x2AAE428", Offset = "0x2AAE428", VA = "0x2AAE428")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x2AAE670", Offset = "0x2AAE670", VA = "0x2AAE670")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2AAF018", Offset = "0x2AAF018", VA = "0x2AAF018")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x2AAF1B4", Offset = "0x2AAF1B4", VA = "0x2AAF1B4")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x2AAF524", Offset = "0x2AAF524", VA = "0x2AAF524")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB340", Offset = "0x12BB340")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x2AAF5C0", Offset = "0x2AAF5C0", VA = "0x2AAF5C0")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000567")]
		public class Pose
		{
			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x2AAFAF0", Offset = "0x2AAFAF0", VA = "0x2AAFAF0")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x2AAFE5C", Offset = "0x2AAFE5C", VA = "0x2AAFE5C")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x2AAFE64", Offset = "0x2AAFE64", VA = "0x2AAFE64")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x2AAFA14", Offset = "0x2AAFA14", VA = "0x2AAFA14")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x2AAFD88", Offset = "0x2AAFD88", VA = "0x2AAFD88")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x2AAFDF4", Offset = "0x2AAFDF4", VA = "0x2AAFDF4")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000568")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000644")]
			public class EffectorLink
			{
				[Token(Token = "0x4001514")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4C38", Offset = "0x12B4C38")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4001515")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4C70", Offset = "0x12B4C70")]
				public float weight;

				[Token(Token = "0x6002281")]
				[Address(RVA = "0x2AB0454", Offset = "0x2AB0454", VA = "0x2AB0454")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3AF0", Offset = "0x12B3AF0")]
			public Transform transform;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3B28", Offset = "0x12B3B28")]
			public Transform relativeTo;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3B60", Offset = "0x12B3B60")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3B98", Offset = "0x12B3B98")]
			public float verticalWeight;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3BD0", Offset = "0x12B3BD0")]
			public float horizontalWeight;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3C08", Offset = "0x12B3C08")]
			public float speed;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x2AAFFC0", Offset = "0x2AAFFC0", VA = "0x2AAFFC0")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x2AB042C", Offset = "0x2AB042C", VA = "0x2AB042C")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x2AB043C", Offset = "0x2AB043C", VA = "0x2AB043C")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFAE4", Offset = "0x12AFAE4")]
		public Body[] bodies;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x2AAFE80", Offset = "0x2AAFE80", VA = "0x2AAFE80", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x2AB0424", Offset = "0x2AB0424", VA = "0x2AB0424")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFB1C", Offset = "0x12AFB1C")]
		public float tiltSpeed;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFB54", Offset = "0x12AFB54")]
		public float tiltSensitivity;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFB8C", Offset = "0x12AFB8C")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFBC4", Offset = "0x12AFBC4")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x2AB1968", Offset = "0x2AB1968", VA = "0x2AB1968", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x2AB19B0", Offset = "0x2AB19B0", VA = "0x2AB19B0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x2AB1BE0", Offset = "0x2AB1BE0", VA = "0x2AB1BE0")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class CCDBendGoal : MonoBehaviour
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CCDIK ik;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AFBFC", Offset = "0x12AFBFC")]
		public float weight;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x2AB1BF4", Offset = "0x2AB1BF4", VA = "0x2AB1BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x2AB1CB4", Offset = "0x2AB1CB4", VA = "0x2AB1CB4")]
		private void BeforeIK()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x2AB1FC4", Offset = "0x2AB1FC4", VA = "0x2AB1FC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x2AB20BC", Offset = "0x2AB20BC", VA = "0x2AB20BC")]
		public CCDBendGoal()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFC14", Offset = "0x12AFC14")]
		public Animator animator;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFC4C", Offset = "0x12AFC4C")]
		public EditorIKPose defaultPose;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] bones;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AFC94", Offset = "0x12AFC94")]
		private IK <ik>k__BackingField;

		[Token(Token = "0x17000241")]
		public IK ik
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x2AB2B20", Offset = "0x2AB2B20", VA = "0x2AB2B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB3A4", Offset = "0x12BB3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x2AB2B28", Offset = "0x2AB2B28", VA = "0x2AB2B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB3B4", Offset = "0x12BB3B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x2AB2B30", Offset = "0x2AB2B30", VA = "0x2AB2B30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x2AB2CA0", Offset = "0x2AB2CA0", VA = "0x2AB2CA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x2AB2F28", Offset = "0x2AB2F28", VA = "0x2AB2F28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x2AB3068", Offset = "0x2AB3068", VA = "0x2AB3068")]
		public void StoreDefaultPose()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x2AB3230", Offset = "0x2AB3230", VA = "0x2AB3230")]
		public bool Initiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x2AB3440", Offset = "0x2AB3440", VA = "0x2AB3440")]
		public void Update()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x2AB36D4", Offset = "0x2AB36D4", VA = "0x2AB36D4")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x12AA65C", Offset = "0x12AA65C")]
	public class EditorIKPose : ScriptableObject
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] localPositions;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] localRotations;

		[Token(Token = "0x17000242")]
		public bool poseStored
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x2AB2D9C", Offset = "0x2AB2D9C", VA = "0x2AB2D9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x2AB30E4", Offset = "0x2AB30E4", VA = "0x2AB30E4")]
		public void Store(Transform[] T)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x2AB2DC0", Offset = "0x2AB2DC0", VA = "0x2AB2DC0")]
		public bool Restore(Transform[] T)
		{
			return default(bool);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x2AB3734", Offset = "0x2AB3734", VA = "0x2AB3734")]
		public EditorIKPose()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		public abstract class HitPoint
		{
			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3C40", Offset = "0x12B3C40")]
			public string name;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3C78", Offset = "0x12B3C78")]
			public Collider collider;

			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3CB0", Offset = "0x12B3CB0")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3CFC", Offset = "0x12B3CFC")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3D0C", Offset = "0x12B3D0C")]
			private float <timer>k__BackingField;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3D1C", Offset = "0x12B3D1C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3D2C", Offset = "0x12B3D2C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700035D")]
			public bool inProgress
			{
				[Token(Token = "0x6001FA6")]
				[Address(RVA = "0x2D14B58", Offset = "0x2D14B58", VA = "0x2D14B58")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700035E")]
			protected float crossFader
			{
				[Token(Token = "0x6001FA7")]
				[Address(RVA = "0x2D15100", Offset = "0x2D15100", VA = "0x2D15100")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE88C", Offset = "0x12BE88C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FA8")]
				[Address(RVA = "0x2D15108", Offset = "0x2D15108", VA = "0x2D15108")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE89C", Offset = "0x12BE89C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700035F")]
			protected float timer
			{
				[Token(Token = "0x6001FA9")]
				[Address(RVA = "0x2D15110", Offset = "0x2D15110", VA = "0x2D15110")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8AC", Offset = "0x12BE8AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FAA")]
				[Address(RVA = "0x2D15118", Offset = "0x2D15118", VA = "0x2D15118")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8BC", Offset = "0x12BE8BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000360")]
			protected Vector3 force
			{
				[Token(Token = "0x6001FAB")]
				[Address(RVA = "0x2D15120", Offset = "0x2D15120", VA = "0x2D15120")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8CC", Offset = "0x12BE8CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FAC")]
				[Address(RVA = "0x2D1512C", Offset = "0x2D1512C", VA = "0x2D1512C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8DC", Offset = "0x12BE8DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000361")]
			protected Vector3 point
			{
				[Token(Token = "0x6001FAD")]
				[Address(RVA = "0x2D15138", Offset = "0x2D15138", VA = "0x2D15138")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8EC", Offset = "0x12BE8EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FAE")]
				[Address(RVA = "0x2D15144", Offset = "0x2D15144", VA = "0x2D15144")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE8FC", Offset = "0x12BE8FC")]
				private set
				{
				}
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x2D14FCC", Offset = "0x2D14FCC", VA = "0x2D14FCC")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x2D14C40", Offset = "0x2D14C40", VA = "0x2D14C40")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FB1")]
			protected abstract float GetLength();

			[Token(Token = "0x6001FB2")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001FB3")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x2D15150", Offset = "0x2D15150", VA = "0x2D15150")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056A")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000645")]
			public class EffectorLink
			{
				[Token(Token = "0x4001516")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4CA8", Offset = "0x12B4CA8")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4001517")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4CE0", Offset = "0x12B4CE0")]
				public float weight;

				[Token(Token = "0x4001518")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4001519")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002282")]
				[Address(RVA = "0x2D15ABC", Offset = "0x2D15ABC", VA = "0x2D15ABC")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002283")]
				[Address(RVA = "0x2D158B0", Offset = "0x2D158B0", VA = "0x2D158B0")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002284")]
				[Address(RVA = "0x2D15D34", Offset = "0x2D15D34", VA = "0x2D15D34")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3D3C", Offset = "0x12B3D3C")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3D74", Offset = "0x12B3D74")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3DAC", Offset = "0x12B3DAC")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x2D156CC", Offset = "0x2D156CC", VA = "0x2D156CC", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x2D15844", Offset = "0x2D15844", VA = "0x2D15844", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x2D158C4", Offset = "0x2D158C4", VA = "0x2D158C4", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x2D15BE0", Offset = "0x2D15BE0", VA = "0x2D15BE0")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056B")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000646")]
			public class BoneLink
			{
				[Token(Token = "0x400151A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4D18", Offset = "0x12B4D18")]
				public Transform bone;

				[Token(Token = "0x400151B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4D50", Offset = "0x12B4D50")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B4D50", Offset = "0x12B4D50")]
				public float weight;

				[Token(Token = "0x400151C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x400151D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6002285")]
				[Address(RVA = "0x2D154D4", Offset = "0x2D154D4", VA = "0x2D154D4")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002286")]
				[Address(RVA = "0x2D1526C", Offset = "0x2D1526C", VA = "0x2D1526C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002287")]
				[Address(RVA = "0x2D15644", Offset = "0x2D15644", VA = "0x2D15644")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3DE4", Offset = "0x12B3DE4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3E1C", Offset = "0x12B3E1C")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x2D15164", Offset = "0x2D15164", VA = "0x2D15164", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x2D15208", Offset = "0x2D15208", VA = "0x2D15208", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x2D15278", Offset = "0x2D15278", VA = "0x2D15278", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x2D15630", Offset = "0x2D15630", VA = "0x2D15630")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFCA4", Offset = "0x12AFCA4")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFCDC", Offset = "0x12AFCDC")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x17000243")]
		public bool inProgress
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x2D14A9C", Offset = "0x2D14A9C", VA = "0x2D14A9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x2D14B6C", Offset = "0x2D14B6C", VA = "0x2D14B6C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x2D14D8C", Offset = "0x2D14D8C", VA = "0x2D14D8C")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x2D150F8", Offset = "0x2D150F8", VA = "0x2D150F8")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x200056C")]
		public abstract class Offset
		{
			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3E54", Offset = "0x12B3E54")]
			public string name;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3E8C", Offset = "0x12B3E8C")]
			public Collider collider;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3EC4", Offset = "0x12B3EC4")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3F10", Offset = "0x12B3F10")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3F20", Offset = "0x12B3F20")]
			private float <timer>k__BackingField;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3F30", Offset = "0x12B3F30")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B3F40", Offset = "0x12B3F40")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000362")]
			protected float crossFader
			{
				[Token(Token = "0x6001FBD")]
				[Address(RVA = "0x2D162EC", Offset = "0x2D162EC", VA = "0x2D162EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE90C", Offset = "0x12BE90C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FBE")]
				[Address(RVA = "0x2D162F4", Offset = "0x2D162F4", VA = "0x2D162F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE91C", Offset = "0x12BE91C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000363")]
			protected float timer
			{
				[Token(Token = "0x6001FBF")]
				[Address(RVA = "0x2D162FC", Offset = "0x2D162FC", VA = "0x2D162FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE92C", Offset = "0x12BE92C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001FC0")]
				[Address(RVA = "0x2D16304", Offset = "0x2D16304", VA = "0x2D16304")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE93C", Offset = "0x12BE93C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000364")]
			protected Vector3 force
			{
				[Token(Token = "0x6001FC1")]
				[Address(RVA = "0x2D1630C", Offset = "0x2D1630C", VA = "0x2D1630C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE94C", Offset = "0x12BE94C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FC2")]
				[Address(RVA = "0x2D16318", Offset = "0x2D16318", VA = "0x2D16318")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE95C", Offset = "0x12BE95C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000365")]
			protected Vector3 point
			{
				[Token(Token = "0x6001FC3")]
				[Address(RVA = "0x2D16324", Offset = "0x2D16324", VA = "0x2D16324")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE96C", Offset = "0x12BE96C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001FC4")]
				[Address(RVA = "0x2D16330", Offset = "0x2D16330", VA = "0x2D16330")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BE97C", Offset = "0x12BE97C")]
				private set
				{
				}
			}

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x2D161A4", Offset = "0x2D161A4", VA = "0x2D161A4")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x2D15E08", Offset = "0x2D15E08", VA = "0x2D15E08")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FC7")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6001FC8")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001FC9")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x2D1633C", Offset = "0x2D1633C", VA = "0x2D1633C")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056D")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000647")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x400151E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4DA4", Offset = "0x12B4DA4")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x400151F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4DDC", Offset = "0x12B4DDC")]
				public float weight;

				[Token(Token = "0x4001520")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4001521")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002288")]
				[Address(RVA = "0x2D167F8", Offset = "0x2D167F8", VA = "0x2D167F8")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002289")]
				[Address(RVA = "0x2D165B4", Offset = "0x2D165B4", VA = "0x2D165B4")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600228A")]
				[Address(RVA = "0x2D16914", Offset = "0x2D16914", VA = "0x2D16914")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3F50", Offset = "0x12B3F50")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3F88", Offset = "0x12B3F88")]
			public int upDirCurveIndex;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3FC0", Offset = "0x12B3FC0")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x2D16350", Offset = "0x2D16350", VA = "0x2D16350", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x2D16548", Offset = "0x2D16548", VA = "0x2D16548", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x2D165C8", Offset = "0x2D165C8", VA = "0x2D165C8", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x2D168F8", Offset = "0x2D168F8", VA = "0x2D168F8")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056E")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000648")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4001522")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4E14", Offset = "0x12B4E14")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4001523")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4E4C", Offset = "0x12B4E4C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B4E4C", Offset = "0x12B4E4C")]
				public float weight;

				[Token(Token = "0x4001524")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4001525")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x600228B")]
				[Address(RVA = "0x2D16D7C", Offset = "0x2D16D7C", VA = "0x2D16D7C")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x600228C")]
				[Address(RVA = "0x2D16A64", Offset = "0x2D16A64", VA = "0x2D16A64")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600228D")]
				[Address(RVA = "0x2D16EB8", Offset = "0x2D16EB8", VA = "0x2D16EB8")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B3FF8", Offset = "0x12B3FF8")]
			public int curveIndex;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4030", Offset = "0x12B4030")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x2D1691C", Offset = "0x2D1691C", VA = "0x2D1691C", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x2D16A00", Offset = "0x2D16A00", VA = "0x2D16A00", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x2D16A70", Offset = "0x2D16A70", VA = "0x2D16A70", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x2D16EA4", Offset = "0x2D16EA4", VA = "0x2D16EA4")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFD14", Offset = "0x12AFD14")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFD4C", Offset = "0x12AFD4C")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x2D15D3C", Offset = "0x2D15D3C", VA = "0x2D15D3C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x2D15F5C", Offset = "0x2D15F5C", VA = "0x2D15F5C")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x2D162E4", Offset = "0x2D162E4", VA = "0x2D162E4")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200056F")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000649")]
			public class EffectorLink
			{
				[Token(Token = "0x4001526")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4EA0", Offset = "0x12B4EA0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4001527")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4ED8", Offset = "0x12B4ED8")]
				public float weight;

				[Token(Token = "0x600228E")]
				[Address(RVA = "0x2AC73B4", Offset = "0x2AC73B4", VA = "0x2AC73B4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4068", Offset = "0x12B4068")]
			public Transform transform;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B40A0", Offset = "0x12B40A0")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B40D8", Offset = "0x12B40D8")]
			public float speed;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4110", Offset = "0x12B4110")]
			public float acceleration;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4148", Offset = "0x12B4148")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B4148", Offset = "0x12B4148")]
			public float matchVelocity;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B419C", Offset = "0x12B419C")]
			public float gravity;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x2AC6D84", Offset = "0x2AC6D84", VA = "0x2AC6D84")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x2AC6F44", Offset = "0x2AC6F44", VA = "0x2AC6F44")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x2AC7398", Offset = "0x2AC7398", VA = "0x2AC7398")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFD84", Offset = "0x12AFD84")]
		public Body[] bodies;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFDBC", Offset = "0x12AFDBC")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x2AC6D0C", Offset = "0x2AC6D0C", VA = "0x2AC6D0C")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x2AC6E60", Offset = "0x2AC6E60", VA = "0x2AC6E60", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x2AC7378", Offset = "0x2AC7378", VA = "0x2AC7378")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AFDF4", Offset = "0x12AFDF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFDF4", Offset = "0x12AFDF4")]
		public Transform target;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12AFE54", Offset = "0x12AFE54")]
		public float weight;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFE6C", Offset = "0x12AFE6C")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFEA4", Offset = "0x12AFEA4")]
		public float weightSmoothTime;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12AFEDC", Offset = "0x12AFEDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFEDC", Offset = "0x12AFEDC")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFF3C", Offset = "0x12AFF3C")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFF74", Offset = "0x12AFF74")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFFAC", Offset = "0x12AFFAC")]
		public float slerpSpeed;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12AFFE4", Offset = "0x12AFFE4")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B001C", Offset = "0x12B001C")]
		public float minDistance;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B0054", Offset = "0x12B0054")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0054", Offset = "0x12B0054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0054", Offset = "0x12B0054")]
		public float maxRootAngle;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000244")]
		private Vector3 pivot
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x2AD1284", Offset = "0x2AD1284", VA = "0x2AD1284")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x2AD119C", Offset = "0x2AD119C", VA = "0x2AD119C")]
		private void Start()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x2AD13D0", Offset = "0x2AD13D0", VA = "0x2AD13D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x2AD1A98", Offset = "0x2AD1A98", VA = "0x2AD1A98")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x2AD1C34", Offset = "0x2AD1C34", VA = "0x2AD1C34")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x2AD1F50", Offset = "0x2AD1F50", VA = "0x2AD1F50")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000570")]
		public class OffsetLimits
		{
			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B41D4", Offset = "0x12B41D4")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B420C", Offset = "0x12B420C")]
			public float spring;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4244", Offset = "0x12B4244")]
			public bool x;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B427C", Offset = "0x12B427C")]
			public bool y;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B42B4", Offset = "0x12B42B4")]
			public bool z;

			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B42EC", Offset = "0x12B42EC")]
			public float minX;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4324", Offset = "0x12B4324")]
			public float maxX;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B435C", Offset = "0x12B435C")]
			public float minY;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4394", Offset = "0x12B4394")]
			public float maxY;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B43CC", Offset = "0x12B43CC")]
			public float minZ;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4404", Offset = "0x12B4404")]
			public float maxZ;

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x2AD2378", Offset = "0x2AD2378", VA = "0x2AD2378")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x2AD2880", Offset = "0x2AD2880", VA = "0x2AD2880")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x2AD28B0", Offset = "0x2AD28B0", VA = "0x2AD28B0")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x2AD2988", Offset = "0x2AD2988", VA = "0x2AD2988")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB850", Offset = "0x12AB850")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000366")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDD")]
				[Address(RVA = "0x2AD2810", Offset = "0x2AD2810", VA = "0x2AD2810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000367")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDF")]
				[Address(RVA = "0x2AD2878", Offset = "0x2AD2878", VA = "0x2AD2878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x2AD2240", Offset = "0x2AD2240", VA = "0x2AD2240")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x2AD26D0", Offset = "0x2AD26D0", VA = "0x2AD26D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x2AD26D4", Offset = "0x2AD26D4", VA = "0x2AD26D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x2AD2818", Offset = "0x2AD2818", VA = "0x2AD2818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B00D0", Offset = "0x12B00D0")]
		public float weight;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0108", Offset = "0x12B0108")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000245")]
		protected float deltaTime
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x2AC6F18", Offset = "0x2AC6F18", VA = "0x2AC6F18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001422")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x2AD21A4", Offset = "0x2AD21A4", VA = "0x2AD21A4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x2AD21D0", Offset = "0x2AD21D0", VA = "0x2AD21D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB3C4", Offset = "0x12BB3C4")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x2AD226C", Offset = "0x2AD226C", VA = "0x2AD226C")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x2AC72BC", Offset = "0x2AC72BC", VA = "0x2AC72BC")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x2AD25D8", Offset = "0x2AD25D8", VA = "0x2AD25D8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x2AC7388", Offset = "0x2AC7388", VA = "0x2AC7388")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB860", Offset = "0x12AB860")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x17000368")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE3")]
				[Address(RVA = "0x2AD2DD8", Offset = "0x2AD2DD8", VA = "0x2AD2DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000369")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE5")]
				[Address(RVA = "0x2AD2E40", Offset = "0x2AD2E40", VA = "0x2AD2E40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x2AD2A58", Offset = "0x2AD2A58", VA = "0x2AD2A58")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x2AD2C98", Offset = "0x2AD2C98", VA = "0x2AD2C98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0x2AD2C9C", Offset = "0x2AD2C9C", VA = "0x2AD2C9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x2AD2DE0", Offset = "0x2AD2DE0", VA = "0x2AD2DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0140", Offset = "0x12B0140")]
		public float weight;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0178", Offset = "0x12B0178")]
		public VRIK ik;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x17000246")]
		protected float deltaTime
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x2AD2990", Offset = "0x2AD2990", VA = "0x2AD2990")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600142A")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x2AD29BC", Offset = "0x2AD29BC", VA = "0x2AD29BC", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x2AD29E8", Offset = "0x2AD29E8", VA = "0x2AD29E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB428", Offset = "0x12BB428")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x2AD2A84", Offset = "0x2AD2A84", VA = "0x2AD2A84")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x2AD2B90", Offset = "0x2AD2B90", VA = "0x2AD2B90", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x2AD2C88", Offset = "0x2AD2C88", VA = "0x2AD2C88")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000573")]
		public class EffectorLink
		{
			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x2AD2F08", Offset = "0x2AD2F08", VA = "0x2AD2F08")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x2AD3358", Offset = "0x2AD3358", VA = "0x2AD3358")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x2AD2E48", Offset = "0x2AD2E48", VA = "0x2AD2E48")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x2AD3240", Offset = "0x2AD3240", VA = "0x2AD3240")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x2AD32F8", Offset = "0x2AD32F8", VA = "0x2AD32F8")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000574")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x200064A")]
			public class EffectorLink
			{
				[Token(Token = "0x4001528")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4F10", Offset = "0x12B4F10")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4001529")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4F48", Offset = "0x12B4F48")]
				public float weight;

				[Token(Token = "0x600228F")]
				[Address(RVA = "0x2AD3A10", Offset = "0x2AD3A10", VA = "0x2AD3A10")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B443C", Offset = "0x12B443C")]
			public Transform[] raycastFrom;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4474", Offset = "0x12B4474")]
			public Transform raycastTo;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B44AC", Offset = "0x12B44AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B44AC", Offset = "0x12B44AC")]
			public float raycastRadius;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4500", Offset = "0x12B4500")]
			public EffectorLink[] effectors;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4538", Offset = "0x12B4538")]
			public float smoothTimeIn;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4570", Offset = "0x12B4570")]
			public float smoothTimeOut;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B45A8", Offset = "0x12B45A8")]
			public LayerMask layers;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x2AD33E4", Offset = "0x2AD33E4", VA = "0x2AD33E4")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x2AD35F0", Offset = "0x2AD35F0", VA = "0x2AD35F0")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x2AD3788", Offset = "0x2AD3788", VA = "0x2AD3788")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x2AD39FC", Offset = "0x2AD39FC", VA = "0x2AD39FC")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B01B0", Offset = "0x12B01B0")]
		public Avoider[] avoiders;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x2AD3360", Offset = "0x2AD3360", VA = "0x2AD3360", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x2AD35E0", Offset = "0x2AD35E0", VA = "0x2AD35E0")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000575")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x200064B")]
			public class EffectorLink
			{
				[Token(Token = "0x400152A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4F80", Offset = "0x12B4F80")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400152B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4FB8", Offset = "0x12B4FB8")]
				public float weight;

				[Token(Token = "0x6002290")]
				[Address(RVA = "0x2AD6928", Offset = "0x2AD6928", VA = "0x2AD6928")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B45E0", Offset = "0x12B45E0")]
			public Vector3 offset;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4618", Offset = "0x12B4618")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B4618", Offset = "0x12B4618")]
			public float additivity;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B466C", Offset = "0x12B466C")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B46A4", Offset = "0x12B46A4")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x2AD5670", Offset = "0x2AD5670", VA = "0x2AD5670")]
			public void Start()
			{
			}

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x2AD6200", Offset = "0x2AD6200", VA = "0x2AD6200")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x2AD6914", Offset = "0x2AD6914", VA = "0x2AD6914")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000576")]
		public enum Handedness
		{
			[Token(Token = "0x40012C6")]
			Right,
			[Token(Token = "0x40012C7")]
			Left
		}

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B01E8", Offset = "0x12B01E8")]
		public AimIK aimIK;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0220", Offset = "0x12B0220")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0258", Offset = "0x12B0258")]
		public Handedness handedness;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0290", Offset = "0x12B0290")]
		public bool twoHanded;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B02C8", Offset = "0x12B02C8")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0300", Offset = "0x12B0300")]
		public float magnitudeRandom;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0338", Offset = "0x12B0338")]
		public Vector3 rotationRandom;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0370", Offset = "0x12B0370")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B03A8", Offset = "0x12B03A8")]
		public float blendTime;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x12B03E0", Offset = "0x12B03E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B03E0", Offset = "0x12B03E0")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x17000247")]
		public bool isFinished
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x2AD5448", Offset = "0x2AD5448", VA = "0x2AD5448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x2AD64B4", Offset = "0x2AD64B4", VA = "0x2AD64B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x2AD64F4", Offset = "0x2AD64F4", VA = "0x2AD64F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private Transform primaryHand
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x2AD6474", Offset = "0x2AD6474", VA = "0x2AD6474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private Transform secondaryHand
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x2AD6494", Offset = "0x2AD6494", VA = "0x2AD6494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x2AD5478", Offset = "0x2AD5478", VA = "0x2AD5478")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x2AD54A4", Offset = "0x2AD54A4", VA = "0x2AD54A4")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x2AD5720", Offset = "0x2AD5720", VA = "0x2AD5720", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x2AD6534", Offset = "0x2AD6534", VA = "0x2AD6534")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x2AD668C", Offset = "0x2AD668C", VA = "0x2AD668C")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x2AD66C8", Offset = "0x2AD66C8", VA = "0x2AD66C8", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x2AD6860", Offset = "0x2AD6860", VA = "0x2AD6860")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0440", Offset = "0x12B0440")]
		public float weight;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0478", Offset = "0x12B0478")]
		public float offset;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x2ADA038", Offset = "0x2ADA038", VA = "0x2ADA038")]
		private void Start()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x2ADA10C", Offset = "0x2ADA10C", VA = "0x2ADA10C")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x2ADA1F8", Offset = "0x2ADA1F8", VA = "0x2ADA1F8")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x2ADA640", Offset = "0x2ADA640", VA = "0x2ADA640")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x2ADA678", Offset = "0x2ADA678", VA = "0x2ADA678")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x2ADA770", Offset = "0x2ADA770", VA = "0x2ADA770")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000577")]
		public class Settings
		{
			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B46DC", Offset = "0x12B46DC")]
			public float scaleMlp;

			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4714", Offset = "0x12B4714")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B474C", Offset = "0x12B474C")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4784", Offset = "0x12B4784")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B47BC", Offset = "0x12B47BC")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B47F4", Offset = "0x12B47F4")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B482C", Offset = "0x12B482C")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x12B4864", Offset = "0x12B4864")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4864", Offset = "0x12B4864")]
			public Vector3 headOffset;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B48B4", Offset = "0x12B48B4")]
			public Vector3 handOffset;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B48EC", Offset = "0x12B48EC")]
			public float footForwardOffset;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4924", Offset = "0x12B4924")]
			public float footInwardOffset;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B495C", Offset = "0x12B495C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B495C", Offset = "0x12B495C")]
			public float footHeadingOffset;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B49B8", Offset = "0x12B49B8")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B49D0", Offset = "0x12B49D0")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x2744728", Offset = "0x2744728", VA = "0x2744728")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000578")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x200064C")]
			public class Target
			{
				[Token(Token = "0x400152C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x400152D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x400152E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6002291")]
				[Address(RVA = "0x27422C0", Offset = "0x27422C0", VA = "0x27422C0")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6002292")]
				[Address(RVA = "0x2742E1C", Offset = "0x2742E1C", VA = "0x2742E1C")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x2741764", Offset = "0x2741764", VA = "0x2741764")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x27402C4", Offset = "0x27402C4", VA = "0x27402C4")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, Settings settings)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x27402DC", Offset = "0x27402DC", VA = "0x27402DC")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, float scaleMlp)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x2740474", Offset = "0x2740474", VA = "0x2740474")]
		private static void CalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x2740328", Offset = "0x2740328", VA = "0x2740328")]
		private static void CalibrateScale(VRIK ik, float scaleMlp = 1f)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x274048C", Offset = "0x274048C", VA = "0x274048C")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x27418DC", Offset = "0x27418DC", VA = "0x27418DC")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x2742384", Offset = "0x2742384", VA = "0x2742384")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x2742E7C", Offset = "0x2742E7C", VA = "0x2742E7C")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x2743238", Offset = "0x2743238", VA = "0x2743238")]
		public static CalibrationData Calibrate(VRIK ik, Transform centerEyeAnchor, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 centerEyePositionOffset, Vector3 centerEyeRotationOffset, Vector3 handPositionOffset, Vector3 handRotationOffset, float scaleMlp = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x2743438", Offset = "0x2743438", VA = "0x2743438")]
		public static void CalibrateHead(VRIK ik, Transform centerEyeAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x2743B34", Offset = "0x2743B34", VA = "0x2743B34")]
		public static void CalibrateBody(VRIK ik, Transform pelvisTracker, Vector3 trackerPositionOffset, Vector3 trackerRotationOffset)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x2743900", Offset = "0x2743900", VA = "0x2743900")]
		public static void CalibrateHands(VRIK ik, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x2743E04", Offset = "0x2743E04", VA = "0x2743E04")]
		private static void CalibrateHand(Transform hand, Transform forearm, Transform target, Transform anchor, Vector3 positionOffset, Vector3 rotationOffset, bool isLeft)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x2744100", Offset = "0x2744100", VA = "0x2744100")]
		public static Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x27442D8", Offset = "0x27442D8", VA = "0x27442D8")]
		public static Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002E1")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x2744800", Offset = "0x2744800", VA = "0x2744800")]
		private void Start()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x2744858", Offset = "0x2744858", VA = "0x2744858")]
		private void Update()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x274488C", Offset = "0x274488C", VA = "0x274488C")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x2744A14", Offset = "0x2744A14", VA = "0x2744A14")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B04B0", Offset = "0x12B04B0")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x1700024C")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x2744A2C", Offset = "0x2744A2C", VA = "0x2744A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB48C", Offset = "0x12BB48C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x2744A38", Offset = "0x2744A38", VA = "0x2744A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB49C", Offset = "0x12BB49C")]
			private set
			{
			}
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x2744A44", Offset = "0x2744A44", VA = "0x2744A44")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x274209C", Offset = "0x274209C", VA = "0x274209C")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x27430C8", Offset = "0x27430C8", VA = "0x27430C8")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x2744B1C", Offset = "0x2744B1C", VA = "0x2744B1C")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x2744FC0", Offset = "0x2744FC0", VA = "0x2744FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x27450B8", Offset = "0x27450B8", VA = "0x27450B8")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20002E3")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000579")]
		public class Offset
		{
			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x2730A70", Offset = "0x2730A70", VA = "0x2730A70")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x2730CFC", Offset = "0x2730CFC", VA = "0x2730CFC")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x27309A0", Offset = "0x27309A0", VA = "0x27309A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x27309F8", Offset = "0x27309F8", VA = "0x27309F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x2730C18", Offset = "0x2730C18", VA = "0x2730C18")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x2730CF4", Offset = "0x2730CF4", VA = "0x2730CF4")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x27280A8", Offset = "0x27280A8", VA = "0x27280A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x272812C", Offset = "0x272812C", VA = "0x272812C")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B04C0", Offset = "0x12B04C0")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x2728134", Offset = "0x2728134", VA = "0x2728134")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x272823C", Offset = "0x272823C", VA = "0x272823C")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x273B558", Offset = "0x273B558", VA = "0x273B558")]
		private void Start()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x273B59C", Offset = "0x273B59C", VA = "0x273B59C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x273B7FC", Offset = "0x273B7FC", VA = "0x273B7FC")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B04F8", Offset = "0x12B04F8")]
		public AimPoser aimPoser;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0530", Offset = "0x12B0530")]
		public AimIK aim;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0568", Offset = "0x12B0568")]
		public LookAtIK lookAt;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B05A0", Offset = "0x12B05A0")]
		public Animator animator;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B05D8", Offset = "0x12B05D8")]
		public float crossfadeTime;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0610", Offset = "0x12B0610")]
		public float minAimDistance;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x273B804", Offset = "0x273B804", VA = "0x273B804")]
		private void Start()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x273B848", Offset = "0x273B848", VA = "0x273B848")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x273B99C", Offset = "0x273B99C", VA = "0x273B99C")]
		private void Pose()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x273BBA0", Offset = "0x273BBA0", VA = "0x273BBA0")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x273BD98", Offset = "0x273BD98", VA = "0x273BD98")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x273BE70", Offset = "0x273BE70", VA = "0x273BE70")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x273CBFC", Offset = "0x273CBFC", VA = "0x273CBFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x273CE60", Offset = "0x273CE60", VA = "0x273CE60")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x273D0B0", Offset = "0x273D0B0", VA = "0x273D0B0")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12B0648", Offset = "0x12B0648")]
		public Animator animator;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12B0680", Offset = "0x12B0680")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B06B8", Offset = "0x12B06B8")]
		public float lookAtWeight;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B06D0", Offset = "0x12B06D0")]
		public float lookAtBodyWeight;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B06E8", Offset = "0x12B06E8")]
		public float lookAtHeadWeight;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0700", Offset = "0x12B0700")]
		public float lookAtEyesWeight;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0718", Offset = "0x12B0718")]
		public float lookAtClampWeight;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0730", Offset = "0x12B0730")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0748", Offset = "0x12B0748")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12B0760", Offset = "0x12B0760")]
		public Transform footTargetBiped;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0798", Offset = "0x12B0798")]
		public float footPositionWeight;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B07B0", Offset = "0x12B07B0")]
		public float footRotationWeight;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x12B07C8", Offset = "0x12B07C8")]
		public Transform handTargetBiped;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0800", Offset = "0x12B0800")]
		public float handPositionWeight;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0818", Offset = "0x12B0818")]
		public float handRotationWeight;

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x2729DB4", Offset = "0x2729DB4", VA = "0x2729DB4")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x272A260", Offset = "0x272A260", VA = "0x272A260")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B0830", Offset = "0x12B0830")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 lastPosition;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sine;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RaycastHit rootHit;

		[Token(Token = "0x1700024D")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x2734868", Offset = "0x2734868", VA = "0x2734868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB4AC", Offset = "0x12BB4AC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x2734874", Offset = "0x2734874", VA = "0x2734874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB4BC", Offset = "0x12BB4BC")]
			private set
			{
			}
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x2734880", Offset = "0x2734880", VA = "0x2734880")]
		private void Start()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x27348BC", Offset = "0x27348BC", VA = "0x27348BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x2735374", Offset = "0x2735374", VA = "0x2735374")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x273505C", Offset = "0x273505C", VA = "0x273505C")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x273551C", Offset = "0x273551C", VA = "0x273551C")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x1700024E")]
		public Vector3 inputVector
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x2735548", Offset = "0x2735548", VA = "0x2735548")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x27355E8", Offset = "0x27355E8", VA = "0x27355E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x2735880", Offset = "0x2735880", VA = "0x2735880")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB870", Offset = "0x12AB870")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x1700036A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF6")]
				[Address(RVA = "0x2736C40", Offset = "0x2736C40", VA = "0x2736C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF8")]
				[Address(RVA = "0x2736CA8", Offset = "0x2736CA8", VA = "0x2736CA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x2736838", Offset = "0x2736838", VA = "0x2736838")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x273690C", Offset = "0x273690C", VA = "0x273690C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x2736910", Offset = "0x2736910", VA = "0x2736910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x2736C48", Offset = "0x2736C48", VA = "0x2736C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x1700024F")]
		public bool isStepping
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x2735894", Offset = "0x2735894", VA = "0x2735894")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public Vector3 position
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x27354E8", Offset = "0x27354E8", VA = "0x27354E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x27358A8", Offset = "0x27358A8", VA = "0x27358A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x27358F8", Offset = "0x27358F8", VA = "0x27358F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x2735B44", Offset = "0x2735B44", VA = "0x2735B44")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x2735D60", Offset = "0x2735D60", VA = "0x2735D60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x273600C", Offset = "0x273600C", VA = "0x273600C")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x27363A4", Offset = "0x27363A4", VA = "0x27363A4")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x2736600", Offset = "0x2736600", VA = "0x2736600")]
		private void Update()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x2735F60", Offset = "0x2735F60", VA = "0x2735F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB4CC", Offset = "0x12BB4CC")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x2736864", Offset = "0x2736864", VA = "0x2736864")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x2736CB0", Offset = "0x2736CB0", VA = "0x2736CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x2736D5C", Offset = "0x2736D5C", VA = "0x2736D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2736FF0", Offset = "0x2736FF0", VA = "0x2736FF0")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200057B")]
		public struct Warp
		{
			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B49F8", Offset = "0x12B49F8")]
			public int animationLayer;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4A30", Offset = "0x12B4A30")]
			public string animationState;

			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4A68", Offset = "0x12B4A68")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4AA0", Offset = "0x12B4AA0")]
			public Transform warpFrom;

			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4AD8", Offset = "0x12B4AD8")]
			public Transform warpTo;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4B10", Offset = "0x12B4B10")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x200057C")]
		public enum EffectorMode
		{
			[Token(Token = "0x40012F2")]
			PositionOffset,
			[Token(Token = "0x40012F3")]
			Position
		}

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0840", Offset = "0x12B0840")]
		public Animator animator;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0878", Offset = "0x12B0878")]
		public EffectorMode effectorMode;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x12B08B0", Offset = "0x12B08B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B08B0", Offset = "0x12B08B0")]
		public Warp[] warps;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x27282B4", Offset = "0x27282B4", VA = "0x27282B4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x27282E0", Offset = "0x27282E0", VA = "0x27282E0")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x27284E8", Offset = "0x27284E8", VA = "0x27284E8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x272889C", Offset = "0x272889C", VA = "0x272889C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x272893C", Offset = "0x272893C", VA = "0x272893C")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x2728944", Offset = "0x2728944", VA = "0x2728944", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x272899C", Offset = "0x272899C", VA = "0x272899C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x2728BD4", Offset = "0x2728BD4", VA = "0x2728BD4", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x2728E38", Offset = "0x2728E38", VA = "0x2728E38")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0900", Offset = "0x12B0900")]
		public float headLookWeight;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x2728E4C", Offset = "0x2728E4C", VA = "0x2728E4C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x2728FB8", Offset = "0x2728FB8", VA = "0x2728FB8", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x2729034", Offset = "0x2729034", VA = "0x2729034")]
		private void Read()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x272918C", Offset = "0x272918C", VA = "0x272918C")]
		private void AimIK()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x27291D4", Offset = "0x27291D4", VA = "0x27291D4")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x27297CC", Offset = "0x27297CC", VA = "0x27297CC")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x2729590", Offset = "0x2729590", VA = "0x2729590")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x2729B24", Offset = "0x2729B24", VA = "0x2729B24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x2729C1C", Offset = "0x2729C1C", VA = "0x2729C1C")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x272B21C", Offset = "0x272B21C", VA = "0x272B21C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x272B27C", Offset = "0x272B27C", VA = "0x272B27C", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x272B540", Offset = "0x272B540", VA = "0x272B540")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x272B6F8", Offset = "0x272B6F8", VA = "0x272B6F8")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x17000251")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x272C52C", Offset = "0x272C52C", VA = "0x272C52C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000252")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x272C5CC", Offset = "0x272C5CC", VA = "0x272C5CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x272C278", Offset = "0x272C278", VA = "0x272C278")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x272C2E8", Offset = "0x272C2E8", VA = "0x272C2E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x272C66C", Offset = "0x272C66C", VA = "0x272C66C")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0918", Offset = "0x12B0918")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x272F028", Offset = "0x272F028", VA = "0x272F028", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x272F60C", Offset = "0x272F60C", VA = "0x272F60C")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x272F614", Offset = "0x272F614", VA = "0x272F614")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x272F6B4", Offset = "0x272F6B4", VA = "0x272F6B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x272FB30", Offset = "0x272FB30", VA = "0x272FB30")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x272FBDC", Offset = "0x272FBDC", VA = "0x272FBDC")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		public class Limb
		{
			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x272FDB0", Offset = "0x272FDB0", VA = "0x272FDB0")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x272FEE4", Offset = "0x272FEE4", VA = "0x272FEE4")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x272FC64", Offset = "0x272FC64", VA = "0x272FC64")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x272FE34", Offset = "0x272FE34", VA = "0x272FE34")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x272FED0", Offset = "0x272FED0", VA = "0x272FED0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x272FED4", Offset = "0x272FED4", VA = "0x272FED4")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x272FEF4", Offset = "0x272FEF4", VA = "0x272FEF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x272FF60", Offset = "0x272FF60", VA = "0x272FF60")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x2730038", Offset = "0x2730038", VA = "0x2730038")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0930", Offset = "0x12B0930")]
		public Transform target;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0968", Offset = "0x12B0968")]
		public Transform pin;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B09A0", Offset = "0x12B09A0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B09D8", Offset = "0x12B09D8")]
		public AimIK aim;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0A10", Offset = "0x12B0A10")]
		public float weight;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0A48", Offset = "0x12B0A48")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0A80", Offset = "0x12B0A80")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x2730040", Offset = "0x2730040", VA = "0x2730040")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x2730098", Offset = "0x2730098", VA = "0x2730098")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x2730234", Offset = "0x2730234", VA = "0x2730234")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x273023C", Offset = "0x273023C", VA = "0x273023C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x27302FC", Offset = "0x27302FC", VA = "0x27302FC")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x273038C", Offset = "0x273038C", VA = "0x273038C")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x27308A0", Offset = "0x27308A0", VA = "0x27308A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x2730998", Offset = "0x2730998", VA = "0x2730998")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0AB8", Offset = "0x12B0AB8")]
		public float aimWeight;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0AD0", Offset = "0x12B0AD0")]
		public float sightWeight;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0AE8", Offset = "0x12B0AE8")]
		public float maxAngle;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AimIK headAim;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CameraControllerFPS cam;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Recoil recoil;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0B04", Offset = "0x12B0B04")]
		public float cameraRecoilWeight;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool updateFrame;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x2730D04", Offset = "0x2730D04", VA = "0x2730D04")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x2730EB4", Offset = "0x2730EB4", VA = "0x2730EB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x2730EC0", Offset = "0x2730EC0", VA = "0x2730EC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x2731200", Offset = "0x2731200", VA = "0x2731200")]
		private void Aiming()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x2731578", Offset = "0x2731578", VA = "0x2731578")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x2730F84", Offset = "0x2730F84", VA = "0x2730F84")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x2731F98", Offset = "0x2731F98", VA = "0x2731F98")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0B1C", Offset = "0x12B0B1C")]
		public float walkSpeed;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x2731FB8", Offset = "0x2731FB8", VA = "0x2731FB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x2732028", Offset = "0x2732028", VA = "0x2732028")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x273214C", Offset = "0x273214C", VA = "0x273214C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x27321FC", Offset = "0x27321FC", VA = "0x27321FC")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x2732590", Offset = "0x2732590", VA = "0x2732590")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x2732750", Offset = "0x2732750", VA = "0x2732750")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x2732914", Offset = "0x2732914", VA = "0x2732914")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x2732CB8", Offset = "0x2732CB8", VA = "0x2732CB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x2732E64", Offset = "0x2732E64", VA = "0x2732E64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x2733220", Offset = "0x2733220", VA = "0x2733220")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x2733230", Offset = "0x2733230", VA = "0x2733230")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x2733364", Offset = "0x2733364", VA = "0x2733364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x27334B4", Offset = "0x27334B4", VA = "0x27334B4")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x27334BC", Offset = "0x27334BC", VA = "0x27334BC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x2733B8C", Offset = "0x2733B8C", VA = "0x2733B8C")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0B34", Offset = "0x12B0B34")]
		public InteractionObject interactionObject;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0B6C", Offset = "0x12B0B6C")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x2733B94", Offset = "0x2733B94", VA = "0x2733B94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x2733BEC", Offset = "0x2733BEC", VA = "0x2733BEC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x2733EF8", Offset = "0x2733EF8", VA = "0x2733EF8")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057E")]
		public class Partner
		{
			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x1700036C")]
			private Transform neck
			{
				[Token(Token = "0x6001FFD")]
				[Address(RVA = "0x27347FC", Offset = "0x27347FC", VA = "0x27347FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x2733F34", Offset = "0x2733F34", VA = "0x2733F34")]
			public void Initiate()
			{
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x2733FB4", Offset = "0x2733FB4", VA = "0x2733FB4")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x2734620", Offset = "0x2734620", VA = "0x2734620")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x2734854", Offset = "0x2734854", VA = "0x2734854")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x2733F00", Offset = "0x2733F00", VA = "0x2733F00")]
		private void Start()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x2733F54", Offset = "0x2733F54", VA = "0x2733F54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x2734610", Offset = "0x2734610", VA = "0x2734610")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200057F")]
		public enum Mode
		{
			[Token(Token = "0x4001303")]
			Position,
			[Token(Token = "0x4001304")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x2000580")]
		public class Absorber
		{
			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4B48", Offset = "0x12B4B48")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B4B80", Offset = "0x12B4B80")]
			public float weight;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6002000")]
			[Address(RVA = "0x2737158", Offset = "0x2737158", VA = "0x2737158")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6002001")]
			[Address(RVA = "0x2737338", Offset = "0x2737338", VA = "0x2737338")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6002002")]
			[Address(RVA = "0x2737374", Offset = "0x2737374", VA = "0x2737374")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0x2737524", Offset = "0x2737524", VA = "0x2737524")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6002004")]
			[Address(RVA = "0x2737748", Offset = "0x2737748", VA = "0x2737748")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0BA4", Offset = "0x12B0BA4")]
		public Mode mode;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0BDC", Offset = "0x12B0BDC")]
		public Absorber[] absorbers;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0C14", Offset = "0x12B0C14")]
		public AnimationCurve falloff;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0C4C", Offset = "0x12B0C4C")]
		public float falloffSpeed;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x2736FF8", Offset = "0x2736FF8", VA = "0x2736FF8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x27370CC", Offset = "0x27370CC", VA = "0x27370CC")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x273722C", Offset = "0x273722C", VA = "0x273722C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x273749C", Offset = "0x273749C", VA = "0x273749C")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x2737634", Offset = "0x2737634", VA = "0x2737634", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x2737738", Offset = "0x2737738", VA = "0x2737738")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x27377C8", Offset = "0x27377C8", VA = "0x27377C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x2737840", Offset = "0x2737840", VA = "0x2737840")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x27378F4", Offset = "0x27378F4", VA = "0x27378F4")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x2737A54", Offset = "0x2737A54", VA = "0x2737A54")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class EffectorLink
		{
			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6002005")]
			[Address(RVA = "0x27387B0", Offset = "0x27387B0", VA = "0x27387B0")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x273847C", Offset = "0x273847C", VA = "0x273847C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x273857C", Offset = "0x273857C", VA = "0x273857C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x27387A8", Offset = "0x27387A8", VA = "0x27387A8")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0C84", Offset = "0x12B0C84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0C84", Offset = "0x12B0C84")]
		public float weight;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0CD8", Offset = "0x12B0CD8")]
		public float hangingDistanceMlp;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0D10", Offset = "0x12B0D10")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0D5C", Offset = "0x12B0D5C")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x27387C0", Offset = "0x27387C0", VA = "0x27387C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x2738AFC", Offset = "0x2738AFC", VA = "0x2738AFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x273924C", Offset = "0x273924C", VA = "0x273924C")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x17000253")]
		private bool holding
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x27397BC", Offset = "0x27397BC", VA = "0x27397BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		private bool holdingLeft
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x27398AC", Offset = "0x27398AC", VA = "0x27398AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		private bool holdingRight
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x27397F4", Offset = "0x27397F4", VA = "0x27397F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x27392D0", Offset = "0x27392D0", VA = "0x27392D0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014ED")]
		protected abstract void RotatePivot();

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x2739964", Offset = "0x2739964", VA = "0x2739964")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x2739ACC", Offset = "0x2739ACC", VA = "0x2739ACC")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x2739C48", Offset = "0x2739C48", VA = "0x2739C48")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x2739D28", Offset = "0x2739D28", VA = "0x2739D28")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x2739E60", Offset = "0x2739E60", VA = "0x2739E60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x273A07C", Offset = "0x273A07C", VA = "0x273A07C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x273A21C", Offset = "0x273A21C", VA = "0x273A21C")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x273A230", Offset = "0x273A230", VA = "0x273A230", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x273A424", Offset = "0x273A424", VA = "0x273A424")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x273A438", Offset = "0x273A438", VA = "0x273A438", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x273A5E4", Offset = "0x273A5E4", VA = "0x273A5E4")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x273AD60", Offset = "0x273AD60", VA = "0x273AD60")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x273AE38", Offset = "0x273AE38", VA = "0x273AE38")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x273AFE0", Offset = "0x273AFE0", VA = "0x273AFE0")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x273AFE8", Offset = "0x273AFE8", VA = "0x273AFE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x273B040", Offset = "0x273B040", VA = "0x273B040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x273B09C", Offset = "0x273B09C", VA = "0x273B09C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x273B174", Offset = "0x273B174", VA = "0x273B174")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB880", Offset = "0x12AB880")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002009")]
				[Address(RVA = "0x273B4E8", Offset = "0x273B4E8", VA = "0x273B4E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600200B")]
				[Address(RVA = "0x273B550", Offset = "0x273B550", VA = "0x273B550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002006")]
			[Address(RVA = "0x273B304", Offset = "0x273B304", VA = "0x273B304")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002007")]
			[Address(RVA = "0x273B340", Offset = "0x273B340", VA = "0x273B340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002008")]
			[Address(RVA = "0x273B344", Offset = "0x273B344", VA = "0x273B344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600200A")]
			[Address(RVA = "0x273B4F0", Offset = "0x273B4F0", VA = "0x273B4F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x273B184", Offset = "0x273B184", VA = "0x273B184")]
		private void Start()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x273B23C", Offset = "0x273B23C", VA = "0x273B23C")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x273B284", Offset = "0x273B284", VA = "0x273B284")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB530", Offset = "0x12BB530")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x273B330", Offset = "0x273B330", VA = "0x273B330")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB890", Offset = "0x12AB890")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600200F")]
				[Address(RVA = "0x273CB8C", Offset = "0x273CB8C", VA = "0x273CB8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002011")]
				[Address(RVA = "0x273CBF4", Offset = "0x273CBF4", VA = "0x273CBF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0x273CA34", Offset = "0x273CA34", VA = "0x273CA34")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0x273CA68", Offset = "0x273CA68", VA = "0x273CA68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0x273CA6C", Offset = "0x273CA6C", VA = "0x273CA6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x273CB94", Offset = "0x273CB94", VA = "0x273CB94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x273C914", Offset = "0x273C914", VA = "0x273C914")]
		private void Start()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x273C9C4", Offset = "0x273C9C4", VA = "0x273C9C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB594", Offset = "0x12BB594")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x273CA60", Offset = "0x273CA60", VA = "0x273CA60")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000584")]
		public class EffectorLink
		{
			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float distanceMlp;

			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public LayerMask touchLayers;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float lerpSpeed;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float minSwitchTime;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float releaseDistance;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool sliding;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float raycastDistance;

			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool inTouch;

			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private RaycastHit hit;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Vector3 targetPosition;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private Quaternion targetRotation;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private bool initiated;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float nextSwitchTime;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private float speedF;

			[Token(Token = "0x6002012")]
			[Address(RVA = "0x273D19C", Offset = "0x273D19C", VA = "0x273D19C")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0x273DE24", Offset = "0x273DE24", VA = "0x273DE24")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6002014")]
			[Address(RVA = "0x273D4DC", Offset = "0x273D4DC", VA = "0x273D4DC")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002015")]
			[Address(RVA = "0x273DF10", Offset = "0x273DF10", VA = "0x273DF10")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002016")]
			[Address(RVA = "0x273E0AC", Offset = "0x273E0AC", VA = "0x273E0AC")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x273E148", Offset = "0x273E148", VA = "0x273E148")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x273E1E0", Offset = "0x273E1E0", VA = "0x273E1E0")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x6002019")]
			[Address(RVA = "0x273DCBC", Offset = "0x273DCBC", VA = "0x273DCBC")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x273E278", Offset = "0x273E278", VA = "0x273E278")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x273D124", Offset = "0x273D124", VA = "0x273D124")]
		private void Start()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x273D470", Offset = "0x273D470", VA = "0x273D470")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x273DBF4", Offset = "0x273DBF4", VA = "0x273DBF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x273DE1C", Offset = "0x273DE1C", VA = "0x273DE1C")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0DA8", Offset = "0x12B0DA8")]
		public Transform to;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0DE0", Offset = "0x12B0DE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0DE0", Offset = "0x12B0DE0")]
		public float transferMotion;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x273E2B4", Offset = "0x273E2B4", VA = "0x273E2B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x273E2F0", Offset = "0x273E2F0", VA = "0x273E2F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x273E448", Offset = "0x273E448", VA = "0x273E448")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0E34", Offset = "0x12B0E34")]
		public Transform leftHandTarget;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x273E608", Offset = "0x273E608", VA = "0x273E608")]
		private void Start()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x273E7C0", Offset = "0x273E7C0", VA = "0x273E7C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x273EA5C", Offset = "0x273EA5C", VA = "0x273EA5C")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x273EB28", Offset = "0x273EB28", VA = "0x273EB28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x273EC20", Offset = "0x273EC20", VA = "0x273EC20")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x273EF38", Offset = "0x273EF38", VA = "0x273EF38", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x273F050", Offset = "0x273F050", VA = "0x273F050")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x273F2A8", Offset = "0x273F2A8", VA = "0x273F2A8")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x273220C", Offset = "0x273220C", VA = "0x273220C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x2732508", Offset = "0x2732508", VA = "0x2732508")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x2732588", Offset = "0x2732588", VA = "0x2732588")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8A0", Offset = "0x12AB8A0")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600201E")]
				[Address(RVA = "0x273ACF0", Offset = "0x273ACF0", VA = "0x273ACF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002020")]
				[Address(RVA = "0x273AD58", Offset = "0x273AD58", VA = "0x273AD58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0x273A9AC", Offset = "0x273A9AC", VA = "0x273A9AC")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0x273ABB8", Offset = "0x273ABB8", VA = "0x273ABB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x273ABBC", Offset = "0x273ABBC", VA = "0x273ABBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x273ACF8", Offset = "0x273ACF8", VA = "0x273ACF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x273A5F8", Offset = "0x273A5F8", VA = "0x273A5F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x273A784", Offset = "0x273A784", VA = "0x273A784")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x273A714", Offset = "0x273A714", VA = "0x273A714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB5F8", Offset = "0x12BB5F8")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x273A9D8", Offset = "0x273A9D8", VA = "0x273A9D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x273AABC", Offset = "0x273AABC", VA = "0x273AABC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x273AB9C", Offset = "0x273AB9C", VA = "0x273AB9C")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B0E6C", Offset = "0x12B0E6C")]
		public float weight;

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x2729C7C", Offset = "0x2729C7C", VA = "0x2729C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x2729CE8", Offset = "0x2729CE8", VA = "0x2729CE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x2729DA4", Offset = "0x2729DA4", VA = "0x2729DA4")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000586")]
		public class Part
		{
			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x6002021")]
			[Address(RVA = "0x273E4D4", Offset = "0x273E4D4", VA = "0x273E4D4")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x6002022")]
			[Address(RVA = "0x273E600", Offset = "0x273E600", VA = "0x273E600")]
			public Part()
			{
			}
		}

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x273E45C", Offset = "0x273E45C", VA = "0x273E45C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x273E5F8", Offset = "0x273E5F8", VA = "0x273E5F8")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x2732924", Offset = "0x2732924", VA = "0x2732924")]
		private void Update()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x2732AE4", Offset = "0x2732AE4", VA = "0x2732AE4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x2732CA8", Offset = "0x2732CA8", VA = "0x2732CA8")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class VRIKCalibrationBasic : MonoBehaviour
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0E84", Offset = "0x12B0E84")]
		public VRIK ik;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B0EBC", Offset = "0x12B0EBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0EBC", Offset = "0x12B0EBC")]
		public Transform centerEyeAnchor;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0F1C", Offset = "0x12B0F1C")]
		public Vector3 headAnchorPositionOffset;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0F54", Offset = "0x12B0F54")]
		public Vector3 headAnchorRotationOffset;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B0F8C", Offset = "0x12B0F8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0F8C", Offset = "0x12B0F8C")]
		public Transform leftHandAnchor;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B0FEC", Offset = "0x12B0FEC")]
		public Transform rightHandAnchor;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1024", Offset = "0x12B1024")]
		public Vector3 handAnchorPositionOffset;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B105C", Offset = "0x12B105C")]
		public Vector3 handAnchorRotationOffset;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1094", Offset = "0x12B1094")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1094", Offset = "0x12B1094")]
		public float scaleMlp;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B10F4", Offset = "0x12B10F4")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x2AAD7A8", Offset = "0x2AAD7A8", VA = "0x2AAD7A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x2AAD938", Offset = "0x2AAD938", VA = "0x2AAD938")]
		public VRIKCalibrationBasic()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B112C", Offset = "0x12B112C")]
		public VRIK ik;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1164", Offset = "0x12B1164")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B119C", Offset = "0x12B119C")]
		public Transform headTracker;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B11D4", Offset = "0x12B11D4")]
		public Transform bodyTracker;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B120C", Offset = "0x12B120C")]
		public Transform leftHandTracker;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1244", Offset = "0x12B1244")]
		public Transform rightHandTracker;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B127C", Offset = "0x12B127C")]
		public Transform leftFootTracker;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B12B4", Offset = "0x12B12B4")]
		public Transform rightFootTracker;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B12EC", Offset = "0x12B12EC")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x2AAD9A8", Offset = "0x2AAD9A8", VA = "0x2AAD9A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x2AADB08", Offset = "0x2AADB08", VA = "0x2AADB08")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x2AADB70", Offset = "0x2AADB70", VA = "0x2AADB70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x2AADBCC", Offset = "0x2AADBCC", VA = "0x2AADBCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x2AADDE0", Offset = "0x2AADDE0", VA = "0x2AADDE0")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x2AADE58", Offset = "0x2AADE58", VA = "0x2AADE58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x2AAE3A8", Offset = "0x2AAE3A8", VA = "0x2AAE3A8")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000256")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x272A2A4", Offset = "0x272A2A4", VA = "0x272A2A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x272A280", Offset = "0x272A280", VA = "0x272A280", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x272A2AC", Offset = "0x272A2AC", VA = "0x272A2AC")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x272A370", Offset = "0x272A370", VA = "0x272A370", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x272A4E8", Offset = "0x272A4E8", VA = "0x272A4E8", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x272A79C", Offset = "0x272A79C", VA = "0x272A79C", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x272A4F8", Offset = "0x272A4F8", VA = "0x272A4F8")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x272A7AC", Offset = "0x272A7AC", VA = "0x272A7AC")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x272A7C4", Offset = "0x272A7C4", VA = "0x272A7C4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x272A824", Offset = "0x272A824", VA = "0x272A824", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x272A950", Offset = "0x272A950", VA = "0x272A950")]
		private void Update()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x272AACC", Offset = "0x272AACC", VA = "0x272AACC")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x12B1354", Offset = "0x12B1354")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x4000A2A")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4000A2B")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jumpLeg;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastJump;

		[Token(Token = "0x17000257")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x272AB84", Offset = "0x272AB84", VA = "0x272AB84", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x272AAE4", Offset = "0x272AAE4", VA = "0x272AAE4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x272AB68", Offset = "0x272AB68", VA = "0x272AB68", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x272AC74", Offset = "0x272AC74", VA = "0x272AC74", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x272B044", Offset = "0x272B044", VA = "0x272B044")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x272B1F8", Offset = "0x272B1F8", VA = "0x272B1F8")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1398", Offset = "0x12B1398")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1398", Offset = "0x12B1398")]
		public Transform gravityTarget;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B13F8", Offset = "0x12B13F8")]
		public float gravityMultiplier;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4000A39")]
		protected const float half = 0.5f;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6001545")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x272B71C", Offset = "0x272B71C", VA = "0x272B71C")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x272B8A0", Offset = "0x272B8A0", VA = "0x272B8A0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x272BA38", Offset = "0x272BA38", VA = "0x272BA38", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x272BCB0", Offset = "0x272BCB0", VA = "0x272BCB0")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x272BD74", Offset = "0x272BD74", VA = "0x272BD74")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x272BF5C", Offset = "0x272BF5C", VA = "0x272BF5C")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x272C10C", Offset = "0x272C10C", VA = "0x272C10C")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x272C130", Offset = "0x272C130", VA = "0x272C130")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x272C154", Offset = "0x272C154", VA = "0x272C154")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x272C258", Offset = "0x272C258", VA = "0x272C258")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000587")]
		public enum MoveMode
		{
			[Token(Token = "0x400132F")]
			Directional,
			[Token(Token = "0x4001330")]
			Strafe
		}

		[Token(Token = "0x2000588")]
		public struct AnimState
		{
			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8B0", Offset = "0x12AB8B0")]
		private sealed class <JumpSmooth>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002026")]
				[Address(RVA = "0x272EFB8", Offset = "0x272EFB8", VA = "0x272EFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002028")]
				[Address(RVA = "0x272F020", Offset = "0x272F020", VA = "0x272F020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002023")]
			[Address(RVA = "0x272ED18", Offset = "0x272ED18", VA = "0x272ED18")]
			[DebuggerHidden]
			public <JumpSmooth>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0x272EE78", Offset = "0x272EE78", VA = "0x272EE78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002025")]
			[Address(RVA = "0x272EE7C", Offset = "0x272EE7C", VA = "0x272EE7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0x272EFC0", Offset = "0x272EFC0", VA = "0x272EFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1430", Offset = "0x12B1430")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1468", Offset = "0x12B1468")]
		public MoveMode moveMode;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B14A0", Offset = "0x12B14A0")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B14D8", Offset = "0x12B14D8")]
		public bool smoothJump;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1510", Offset = "0x12B1510")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x12B1548", Offset = "0x12B1548")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1580", Offset = "0x12B1580")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool fixedFrame;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float wallRunEndTime;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 gravity;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float velocityY;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool doubleJumped;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		private bool jumpReleased;

		[Token(Token = "0x17000258")]
		public bool onGround
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x272C674", Offset = "0x272C674", VA = "0x272C674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB65C", Offset = "0x12BB65C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x272C67C", Offset = "0x272C67C", VA = "0x272C67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB66C", Offset = "0x12BB66C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x272C688", Offset = "0x272C688", VA = "0x272C688", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x272C80C", Offset = "0x272C80C", VA = "0x272C80C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x272C89C", Offset = "0x272C89C", VA = "0x272C89C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x272C9EC", Offset = "0x272C9EC", VA = "0x272C9EC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x272D968", Offset = "0x272D968", VA = "0x272D968", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x272DD00", Offset = "0x272DD00", VA = "0x272DD00", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x272CFFC", Offset = "0x272CFFC", VA = "0x272CFFC")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x272DDE0", Offset = "0x272DDE0", VA = "0x272DDE0")]
		private void WallRun()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x272E3D0", Offset = "0x272E3D0", VA = "0x272E3D0")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x272DA44", Offset = "0x272DA44", VA = "0x272DA44")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x272E470", Offset = "0x272E470", VA = "0x272E470", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x272E8E0", Offset = "0x272E8E0", VA = "0x272E8E0")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x272EA6C", Offset = "0x272EA6C", VA = "0x272EA6C", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x272EC84", Offset = "0x272EC84", VA = "0x272EC84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BB67C", Offset = "0x12BB67C")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x272D548", Offset = "0x272D548", VA = "0x272D548")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x272ED44", Offset = "0x272ED44", VA = "0x272ED44")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058A")]
		public enum RotationMode
		{
			[Token(Token = "0x400133F")]
			Smooth,
			[Token(Token = "0x4001340")]
			Linear
		}

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1590", Offset = "0x12B1590")]
		public CameraController cameraController;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B15C8", Offset = "0x12B15C8")]
		public float accelerationTime;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1600", Offset = "0x12B1600")]
		public float turnTime;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1638", Offset = "0x12B1638")]
		public bool walkByDefault;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1670", Offset = "0x12B1670")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B16A8", Offset = "0x12B16A8")]
		public float moveSpeed;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B16E0", Offset = "0x12B16E0")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000259")]
		public bool isGrounded
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x273BE84", Offset = "0x273BE84", VA = "0x273BE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB6E0", Offset = "0x12BB6E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x273BE8C", Offset = "0x273BE8C", VA = "0x273BE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB6F0", Offset = "0x12BB6F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x273BE98", Offset = "0x273BE98", VA = "0x273BE98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x273BF20", Offset = "0x273BF20", VA = "0x273BF20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x273C61C", Offset = "0x273C61C", VA = "0x273C61C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x273BF74", Offset = "0x273BF74", VA = "0x273BF74")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x273C374", Offset = "0x273C374", VA = "0x273C374")]
		private void Move()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x273C65C", Offset = "0x273C65C", VA = "0x273C65C")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x273C754", Offset = "0x273C754", VA = "0x273C754")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x273C7F4", Offset = "0x273C7F4", VA = "0x273C7F4")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x273EC28", Offset = "0x273EC28", VA = "0x273EC28", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x273EC6C", Offset = "0x273EC6C", VA = "0x273EC6C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x273EF00", Offset = "0x273EF00", VA = "0x273EF00")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x273EF24", Offset = "0x273EF24", VA = "0x273EF24")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x200058B")]
		public struct State
		{
			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x2AAD3FC", Offset = "0x2AAD3FC", VA = "0x2AAD3FC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x2AAD434", Offset = "0x2AAD434", VA = "0x2AAD434", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x2AAD798", Offset = "0x2AAD798", VA = "0x2AAD798")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x2729C38", Offset = "0x2729C38", VA = "0x2729C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x2729C74", Offset = "0x2729C74", VA = "0x2729C74")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x273C81C", Offset = "0x273C81C", VA = "0x273C81C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x273C850", Offset = "0x273C850", VA = "0x273C850")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x273C900", Offset = "0x273C900", VA = "0x273C900")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000323")]
	public class Navigator
	{
		[Token(Token = "0x200058C")]
		public enum State
		{
			[Token(Token = "0x4001347")]
			Idle,
			[Token(Token = "0x4001348")]
			Seeking,
			[Token(Token = "0x4001349")]
			OnPath
		}

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B16F0", Offset = "0x12B16F0")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1728", Offset = "0x12B1728")]
		public float cornerRadius;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1760", Offset = "0x12B1760")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B1798", Offset = "0x12B1798")]
		public float maxSampleDistance;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x12B17D0", Offset = "0x12B17D0")]
		public float nextPathInterval;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1808", Offset = "0x12B1808")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1818", Offset = "0x12B1818")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x1700025A")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x2737A68", Offset = "0x2737A68", VA = "0x2737A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB700", Offset = "0x12BB700")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x2737A74", Offset = "0x2737A74", VA = "0x2737A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB710", Offset = "0x12BB710")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public State state
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x2737A80", Offset = "0x2737A80", VA = "0x2737A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB720", Offset = "0x12BB720")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x2737A88", Offset = "0x2737A88", VA = "0x2737A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BB730", Offset = "0x12BB730")]
			private set
			{
			}
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x2737A90", Offset = "0x2737A90", VA = "0x2737A90")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x2737B64", Offset = "0x2737B64", VA = "0x2737B64")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x27380A8", Offset = "0x27380A8", VA = "0x27380A8")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x2738118", Offset = "0x2738118", VA = "0x2738118")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x2737F70", Offset = "0x2737F70", VA = "0x2737F70")]
		private void Stop()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x2737FE4", Offset = "0x2737FE4", VA = "0x2737FE4")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x2738260", Offset = "0x2738260", VA = "0x2738260")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x2738410", Offset = "0x2738410", VA = "0x2738410")]
		public Navigator()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000324")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8C0", Offset = "0x12AB8C0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x24310A0", Offset = "0x24310A0", VA = "0x24310A0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x2431860", Offset = "0x2431860", VA = "0x2431860")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0x243187C", Offset = "0x243187C", VA = "0x243187C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8D0", Offset = "0x12AB8D0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600202C")]
			[Address(RVA = "0x24311E4", Offset = "0x24311E4", VA = "0x24311E4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0x2431898", Offset = "0x2431898", VA = "0x2431898")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600202E")]
			[Address(RVA = "0x24318B4", Offset = "0x24318B4", VA = "0x24318B4")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8E0", Offset = "0x12AB8E0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x600202F")]
			[Address(RVA = "0x243132C", Offset = "0x243132C", VA = "0x243132C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0x24318D0", Offset = "0x24318D0", VA = "0x24318D0")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0x2431910", Offset = "0x2431910", VA = "0x2431910")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x2430F3C", Offset = "0x2430F3C", VA = "0x2430F3C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x24310A8", Offset = "0x24310A8", VA = "0x24310A8")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x24311EC", Offset = "0x24311EC", VA = "0x24311EC")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x2431334", Offset = "0x2431334", VA = "0x2431334")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x24313AC", Offset = "0x24313AC", VA = "0x24313AC")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x2431424", Offset = "0x2431424", VA = "0x2431424")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x243148C", Offset = "0x243148C", VA = "0x243148C")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x2431514", Offset = "0x2431514", VA = "0x2431514")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x243157C", Offset = "0x243157C", VA = "0x243157C")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x24315E4", Offset = "0x24315E4", VA = "0x24315E4")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x243164C", Offset = "0x243164C", VA = "0x243164C")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x24316B4", Offset = "0x24316B4", VA = "0x24316B4")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x2431724", Offset = "0x2431724", VA = "0x2431724")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x2431790", Offset = "0x2431790", VA = "0x2431790")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x24317F8", Offset = "0x24317F8", VA = "0x24317F8")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000325")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB8F0", Offset = "0x12AB8F0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002032")]
			[Address(RVA = "0x2431AA4", Offset = "0x2431AA4", VA = "0x2431AA4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0x2432E40", Offset = "0x2432E40", VA = "0x2432E40")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB900", Offset = "0x12AB900")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002034")]
			[Address(RVA = "0x2431C34", Offset = "0x2431C34", VA = "0x2431C34")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002035")]
			[Address(RVA = "0x2432F7C", Offset = "0x2432F7C", VA = "0x2432F7C")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB910", Offset = "0x12AB910")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x2431DC4", Offset = "0x2431DC4", VA = "0x2431DC4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0x2432F98", Offset = "0x2432F98", VA = "0x2432F98")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB920", Offset = "0x12AB920")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x2431F54", Offset = "0x2431F54", VA = "0x2431F54")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0x2432FB4", Offset = "0x2432FB4", VA = "0x2432FB4")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB930", Offset = "0x12AB930")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600203A")]
			[Address(RVA = "0x24320C8", Offset = "0x24320C8", VA = "0x24320C8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600203B")]
			[Address(RVA = "0x2432FD0", Offset = "0x2432FD0", VA = "0x2432FD0")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB940", Offset = "0x12AB940")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600203C")]
			[Address(RVA = "0x24322B4", Offset = "0x24322B4", VA = "0x24322B4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600203D")]
			[Address(RVA = "0x2432FEC", Offset = "0x2432FEC", VA = "0x2432FEC")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB950", Offset = "0x12AB950")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x600203E")]
			[Address(RVA = "0x2432730", Offset = "0x2432730", VA = "0x2432730")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x2433008", Offset = "0x2433008", VA = "0x2433008")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x2433024", Offset = "0x2433024", VA = "0x2433024")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6002041")]
			[Address(RVA = "0x2433058", Offset = "0x2433058", VA = "0x2433058")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002042")]
			[Address(RVA = "0x2433074", Offset = "0x2433074", VA = "0x2433074")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002043")]
			[Address(RVA = "0x2433090", Offset = "0x2433090", VA = "0x2433090")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB960", Offset = "0x12AB960")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x2432924", Offset = "0x2432924", VA = "0x2432924")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002045")]
			[Address(RVA = "0x2433150", Offset = "0x2433150", VA = "0x2433150")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB970", Offset = "0x12AB970")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002046")]
			[Address(RVA = "0x2432B2C", Offset = "0x2432B2C", VA = "0x2432B2C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x243316C", Offset = "0x243316C", VA = "0x243316C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x2433188", Offset = "0x2433188", VA = "0x2433188")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB980", Offset = "0x12AB980")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x2432CAC", Offset = "0x2432CAC", VA = "0x2432CAC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x243328C", Offset = "0x243328C", VA = "0x243328C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB990", Offset = "0x12AB990")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x600204B")]
			[Address(RVA = "0x2432E38", Offset = "0x2432E38", VA = "0x2432E38")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x2432E5C", Offset = "0x2432E5C", VA = "0x2432E5C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0x2432E78", Offset = "0x2432E78", VA = "0x2432E78")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x2431934", Offset = "0x2431934", VA = "0x2431934")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x2431AAC", Offset = "0x2431AAC", VA = "0x2431AAC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x2431C3C", Offset = "0x2431C3C", VA = "0x2431C3C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x2431DCC", Offset = "0x2431DCC", VA = "0x2431DCC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x2431F5C", Offset = "0x2431F5C", VA = "0x2431F5C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x24320D0", Offset = "0x24320D0", VA = "0x24320D0")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x24322BC", Offset = "0x24322BC", VA = "0x24322BC")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x2432738", Offset = "0x2432738", VA = "0x2432738")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x243292C", Offset = "0x243292C", VA = "0x243292C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x2432B34", Offset = "0x2432B34", VA = "0x2432B34")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x2432CB4", Offset = "0x2432CB4", VA = "0x2432CB4")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000326")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9A0", Offset = "0x12AB9A0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x600204E")]
			[Address(RVA = "0x2433410", Offset = "0x2433410", VA = "0x2433410")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600204F")]
			[Address(RVA = "0x2433BD8", Offset = "0x2433BD8", VA = "0x2433BD8")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9B0", Offset = "0x12AB9B0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002050")]
			[Address(RVA = "0x243358C", Offset = "0x243358C", VA = "0x243358C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002051")]
			[Address(RVA = "0x2433BF4", Offset = "0x2433BF4", VA = "0x2433BF4")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9C0", Offset = "0x12AB9C0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002052")]
			[Address(RVA = "0x2433708", Offset = "0x2433708", VA = "0x2433708")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002053")]
			[Address(RVA = "0x2433C10", Offset = "0x2433C10", VA = "0x2433C10")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9D0", Offset = "0x12AB9D0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002054")]
			[Address(RVA = "0x2433850", Offset = "0x2433850", VA = "0x2433850")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002055")]
			[Address(RVA = "0x2433C2C", Offset = "0x2433C2C", VA = "0x2433C2C")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9E0", Offset = "0x12AB9E0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x6002056")]
			[Address(RVA = "0x2433BD0", Offset = "0x2433BD0", VA = "0x2433BD0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002057")]
			[Address(RVA = "0x2433C48", Offset = "0x2433C48", VA = "0x2433C48")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0x2433C64", Offset = "0x2433C64", VA = "0x2433C64")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6002059")]
			[Address(RVA = "0x2433C80", Offset = "0x2433C80", VA = "0x2433C80")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x600205A")]
			[Address(RVA = "0x2433CB4", Offset = "0x2433CB4", VA = "0x2433CB4")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600205B")]
			[Address(RVA = "0x2433CD0", Offset = "0x2433CD0", VA = "0x2433CD0")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x2433CEC", Offset = "0x2433CEC", VA = "0x2433CEC")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x24332A8", Offset = "0x24332A8", VA = "0x24332A8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x2433418", Offset = "0x2433418", VA = "0x2433418")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x2433594", Offset = "0x2433594", VA = "0x2433594")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x2433710", Offset = "0x2433710", VA = "0x2433710")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x2433858", Offset = "0x2433858", VA = "0x2433858")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000327")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12AB9F0", Offset = "0x12AB9F0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x600205D")]
			[Address(RVA = "0x2433F78", Offset = "0x2433F78", VA = "0x2433F78")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x2434488", Offset = "0x2434488", VA = "0x2434488")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600205F")]
			[Address(RVA = "0x24344A4", Offset = "0x24344A4", VA = "0x24344A4")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA00", Offset = "0x12ABA00")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x24340BC", Offset = "0x24340BC", VA = "0x24340BC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002061")]
			[Address(RVA = "0x24344C0", Offset = "0x24344C0", VA = "0x24344C0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x24344DC", Offset = "0x24344DC", VA = "0x24344DC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA10", Offset = "0x12ABA10")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x2434480", Offset = "0x2434480", VA = "0x2434480")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x24344F8", Offset = "0x24344F8", VA = "0x24344F8")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x2434504", Offset = "0x2434504", VA = "0x2434504")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x2433E14", Offset = "0x2433E14", VA = "0x2433E14")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x2433F80", Offset = "0x2433F80", VA = "0x2433F80")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x24340C4", Offset = "0x24340C4", VA = "0x24340C4")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x243429C", Offset = "0x243429C", VA = "0x243429C")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000328")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20005A3")]
		public static class Utils
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x24393EC", Offset = "0x24393EC", VA = "0x24393EC")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA20", Offset = "0x12ABA20")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x24346EC", Offset = "0x24346EC", VA = "0x24346EC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x24382A8", Offset = "0x24382A8", VA = "0x24382A8")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0x24382C4", Offset = "0x24382C4", VA = "0x24382C4")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA30", Offset = "0x12ABA30")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600206A")]
			[Address(RVA = "0x2434858", Offset = "0x2434858", VA = "0x2434858")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600206B")]
			[Address(RVA = "0x2438518", Offset = "0x2438518", VA = "0x2438518")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x243853C", Offset = "0x243853C", VA = "0x243853C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA40", Offset = "0x12ABA40")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x243499C", Offset = "0x243499C", VA = "0x243499C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x2438BA4", Offset = "0x2438BA4", VA = "0x2438BA4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x2438BC8", Offset = "0x2438BC8", VA = "0x2438BC8")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA50", Offset = "0x12ABA50")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x2434B08", Offset = "0x2434B08", VA = "0x2434B08")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0x2439090", Offset = "0x2439090", VA = "0x2439090")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x24390B4", Offset = "0x24390B4", VA = "0x24390B4")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA60", Offset = "0x12ABA60")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x2434C4C", Offset = "0x2434C4C", VA = "0x2434C4C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0x24390D8", Offset = "0x24390D8", VA = "0x24390D8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x24390FC", Offset = "0x24390FC", VA = "0x24390FC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA70", Offset = "0x12ABA70")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x2434DB4", Offset = "0x2434DB4", VA = "0x2434DB4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002077")]
			[Address(RVA = "0x2439120", Offset = "0x2439120", VA = "0x2439120")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0x243913C", Offset = "0x243913C", VA = "0x243913C")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA80", Offset = "0x12ABA80")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002079")]
			[Address(RVA = "0x24350F8", Offset = "0x24350F8", VA = "0x24350F8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0x2439158", Offset = "0x2439158", VA = "0x2439158")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0x24391D8", Offset = "0x24391D8", VA = "0x24391D8")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABA90", Offset = "0x12ABA90")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600207C")]
			[Address(RVA = "0x243525C", Offset = "0x243525C", VA = "0x243525C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x2439234", Offset = "0x2439234", VA = "0x2439234")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0x24392B4", Offset = "0x24392B4", VA = "0x24392B4")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAA0", Offset = "0x12ABAA0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x24353C0", Offset = "0x24353C0", VA = "0x24353C0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0x2439310", Offset = "0x2439310", VA = "0x2439310")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x2439390", Offset = "0x2439390", VA = "0x2439390")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAB0", Offset = "0x12ABAB0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002082")]
			[Address(RVA = "0x243552C", Offset = "0x243552C", VA = "0x243552C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x24382E0", Offset = "0x24382E0", VA = "0x24382E0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002084")]
			[Address(RVA = "0x2438300", Offset = "0x2438300", VA = "0x2438300")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAC0", Offset = "0x12ABAC0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x2435670", Offset = "0x2435670", VA = "0x2435670")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x243831C", Offset = "0x243831C", VA = "0x243831C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x243833C", Offset = "0x243833C", VA = "0x243833C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAD0", Offset = "0x12ABAD0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x24357C4", Offset = "0x24357C4", VA = "0x24357C4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x2438358", Offset = "0x2438358", VA = "0x2438358")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0x2438374", Offset = "0x2438374", VA = "0x2438374")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAE0", Offset = "0x12ABAE0")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x2435928", Offset = "0x2435928", VA = "0x2435928")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0x2438390", Offset = "0x2438390", VA = "0x2438390")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600208D")]
			[Address(RVA = "0x24383AC", Offset = "0x24383AC", VA = "0x24383AC")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABAF0", Offset = "0x12ABAF0")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600208E")]
			[Address(RVA = "0x2435AA0", Offset = "0x2435AA0", VA = "0x2435AA0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x24383C8", Offset = "0x24383C8", VA = "0x24383C8")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002090")]
			[Address(RVA = "0x24383E4", Offset = "0x24383E4", VA = "0x24383E4")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB00", Offset = "0x12ABB00")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002091")]
			[Address(RVA = "0x2435C18", Offset = "0x2435C18", VA = "0x2435C18")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002092")]
			[Address(RVA = "0x2438400", Offset = "0x2438400", VA = "0x2438400")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002093")]
			[Address(RVA = "0x243841C", Offset = "0x243841C", VA = "0x243841C")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB10", Offset = "0x12ABB10")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002094")]
			[Address(RVA = "0x2435D84", Offset = "0x2435D84", VA = "0x2435D84")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x2438438", Offset = "0x2438438", VA = "0x2438438")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0x2438454", Offset = "0x2438454", VA = "0x2438454")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB20", Offset = "0x12ABB20")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x2435F08", Offset = "0x2435F08", VA = "0x2435F08")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x2438470", Offset = "0x2438470", VA = "0x2438470")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002099")]
			[Address(RVA = "0x243848C", Offset = "0x243848C", VA = "0x243848C")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB30", Offset = "0x12ABB30")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600209A")]
			[Address(RVA = "0x243608C", Offset = "0x243608C", VA = "0x243608C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600209B")]
			[Address(RVA = "0x24384A8", Offset = "0x24384A8", VA = "0x24384A8")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0x24384C4", Offset = "0x24384C4", VA = "0x24384C4")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB40", Offset = "0x12ABB40")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600209D")]
			[Address(RVA = "0x2436210", Offset = "0x2436210", VA = "0x2436210")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x24384E0", Offset = "0x24384E0", VA = "0x24384E0")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0x24384FC", Offset = "0x24384FC", VA = "0x24384FC")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB50", Offset = "0x12ABB50")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x2436374", Offset = "0x2436374", VA = "0x2436374")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x2438560", Offset = "0x2438560", VA = "0x2438560")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x243857C", Offset = "0x243857C", VA = "0x243857C")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB60", Offset = "0x12ABB60")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x24364D8", Offset = "0x24364D8", VA = "0x24364D8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x2438598", Offset = "0x2438598", VA = "0x2438598")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x24385B4", Offset = "0x24385B4", VA = "0x24385B4")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB70", Offset = "0x12ABB70")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x243662C", Offset = "0x243662C", VA = "0x243662C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x24385D0", Offset = "0x24385D0", VA = "0x24385D0")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x24385EC", Offset = "0x24385EC", VA = "0x24385EC")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB80", Offset = "0x12ABB80")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x2436798", Offset = "0x2436798", VA = "0x2436798")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x2438608", Offset = "0x2438608", VA = "0x2438608")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x2438624", Offset = "0x2438624", VA = "0x2438624")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABB90", Offset = "0x12ABB90")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x2436904", Offset = "0x2436904", VA = "0x2436904")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x2438640", Offset = "0x2438640", VA = "0x2438640")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x243865C", Offset = "0x243865C", VA = "0x243865C")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBA0", Offset = "0x12ABBA0")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x2436A68", Offset = "0x2436A68", VA = "0x2436A68")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x2438678", Offset = "0x2438678", VA = "0x2438678")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x2438694", Offset = "0x2438694", VA = "0x2438694")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBB0", Offset = "0x12ABBB0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x2436C20", Offset = "0x2436C20", VA = "0x2436C20")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x24386B0", Offset = "0x24386B0", VA = "0x24386B0")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x2438740", Offset = "0x2438740", VA = "0x2438740")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBC0", Offset = "0x12ABBC0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x2436DA8", Offset = "0x2436DA8", VA = "0x2436DA8")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x24387E4", Offset = "0x24387E4", VA = "0x24387E4")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x2438874", Offset = "0x2438874", VA = "0x2438874")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBD0", Offset = "0x12ABBD0")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x2436F7C", Offset = "0x2436F7C", VA = "0x2436F7C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x2438918", Offset = "0x2438918", VA = "0x2438918")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x24389A8", Offset = "0x24389A8", VA = "0x24389A8")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBE0", Offset = "0x12ABBE0")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x2437300", Offset = "0x2437300", VA = "0x2437300")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x2438A4C", Offset = "0x2438A4C", VA = "0x2438A4C")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x2438A68", Offset = "0x2438A68", VA = "0x2438A68")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x2438A84", Offset = "0x2438A84", VA = "0x2438A84")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x2438AB8", Offset = "0x2438AB8", VA = "0x2438AB8")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x2438AD4", Offset = "0x2438AD4", VA = "0x2438AD4")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x2438AF0", Offset = "0x2438AF0", VA = "0x2438AF0")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABBF0", Offset = "0x12ABBF0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x2437458", Offset = "0x2437458", VA = "0x2437458")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x2438BEC", Offset = "0x2438BEC", VA = "0x2438BEC")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x2438C5C", Offset = "0x2438C5C", VA = "0x2438C5C")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC00", Offset = "0x12ABC00")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x24375A0", Offset = "0x24375A0", VA = "0x24375A0")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x2438CA8", Offset = "0x2438CA8", VA = "0x2438CA8")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x2438CC4", Offset = "0x2438CC4", VA = "0x2438CC4")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC10", Offset = "0x12ABC10")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x24376E8", Offset = "0x24376E8", VA = "0x24376E8")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x2438CE0", Offset = "0x2438CE0", VA = "0x2438CE0")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x2438CFC", Offset = "0x2438CFC", VA = "0x2438CFC")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC20", Offset = "0x12ABC20")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x243783C", Offset = "0x243783C", VA = "0x243783C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x2438D18", Offset = "0x2438D18", VA = "0x2438D18")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x2438D3C", Offset = "0x2438D3C", VA = "0x2438D3C")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC30", Offset = "0x12ABC30")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x24379A8", Offset = "0x24379A8", VA = "0x24379A8")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x2438D60", Offset = "0x2438D60", VA = "0x2438D60")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x2438D84", Offset = "0x2438D84", VA = "0x2438D84")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC40", Offset = "0x12ABC40")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x2437AEC", Offset = "0x2437AEC", VA = "0x2437AEC")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x2438DA8", Offset = "0x2438DA8", VA = "0x2438DA8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x2438DCC", Offset = "0x2438DCC", VA = "0x2438DCC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC50", Offset = "0x12ABC50")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x2437CC4", Offset = "0x2437CC4", VA = "0x2437CC4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x2438DF0", Offset = "0x2438DF0", VA = "0x2438DF0")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x2438E14", Offset = "0x2438E14", VA = "0x2438E14")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC60", Offset = "0x12ABC60")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x2437EB8", Offset = "0x2437EB8", VA = "0x2437EB8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x2438E38", Offset = "0x2438E38", VA = "0x2438E38")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x2438E44", Offset = "0x2438E44", VA = "0x2438E44")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC70", Offset = "0x12ABC70")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x60020DA")]
			[Address(RVA = "0x24380AC", Offset = "0x24380AC", VA = "0x24380AC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x2438F00", Offset = "0x2438F00", VA = "0x2438F00")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x2438F0C", Offset = "0x2438F0C", VA = "0x2438F0C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC80", Offset = "0x12ABC80")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x24382A0", Offset = "0x24382A0", VA = "0x24382A0")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x2438FC8", Offset = "0x2438FC8", VA = "0x2438FC8")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60020DF")]
			[Address(RVA = "0x2438FD4", Offset = "0x2438FD4", VA = "0x2438FD4")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x24345B0", Offset = "0x24345B0", VA = "0x24345B0")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x24346F4", Offset = "0x24346F4", VA = "0x24346F4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x2434860", Offset = "0x2434860", VA = "0x2434860")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x24349A4", Offset = "0x24349A4", VA = "0x24349A4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x2434B10", Offset = "0x2434B10", VA = "0x2434B10")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x2434C54", Offset = "0x2434C54", VA = "0x2434C54")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x2434DBC", Offset = "0x2434DBC", VA = "0x2434DBC")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x2434F9C", Offset = "0x2434F9C", VA = "0x2434F9C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x2435100", Offset = "0x2435100", VA = "0x2435100")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x2435264", Offset = "0x2435264", VA = "0x2435264")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x24353C8", Offset = "0x24353C8", VA = "0x24353C8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x2435534", Offset = "0x2435534", VA = "0x2435534")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x2435678", Offset = "0x2435678", VA = "0x2435678")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x24357CC", Offset = "0x24357CC", VA = "0x24357CC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x2435930", Offset = "0x2435930", VA = "0x2435930")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x2435AA8", Offset = "0x2435AA8", VA = "0x2435AA8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x2435C20", Offset = "0x2435C20", VA = "0x2435C20")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x2435D8C", Offset = "0x2435D8C", VA = "0x2435D8C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x2435F10", Offset = "0x2435F10", VA = "0x2435F10")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x2436094", Offset = "0x2436094", VA = "0x2436094")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x2436218", Offset = "0x2436218", VA = "0x2436218")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x243637C", Offset = "0x243637C", VA = "0x243637C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x24364E0", Offset = "0x24364E0", VA = "0x24364E0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x2436634", Offset = "0x2436634", VA = "0x2436634")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x24367A0", Offset = "0x24367A0", VA = "0x24367A0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x243690C", Offset = "0x243690C", VA = "0x243690C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x2436A70", Offset = "0x2436A70", VA = "0x2436A70")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x2436C28", Offset = "0x2436C28", VA = "0x2436C28")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x2436DB0", Offset = "0x2436DB0", VA = "0x2436DB0")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x2436F84", Offset = "0x2436F84", VA = "0x2436F84")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x2437308", Offset = "0x2437308", VA = "0x2437308")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x2437460", Offset = "0x2437460", VA = "0x2437460")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x24375A8", Offset = "0x24375A8", VA = "0x24375A8")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x24376F0", Offset = "0x24376F0", VA = "0x24376F0")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x2437844", Offset = "0x2437844", VA = "0x2437844")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x24379B0", Offset = "0x24379B0", VA = "0x24379B0")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x2437AF4", Offset = "0x2437AF4", VA = "0x2437AF4")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x2437CCC", Offset = "0x2437CCC", VA = "0x2437CCC")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x2437EC0", Offset = "0x2437EC0", VA = "0x2437EC0")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x24380B4", Offset = "0x24380B4", VA = "0x24380B4")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABC90", Offset = "0x12ABC90")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x243A0F4", Offset = "0x243A0F4", VA = "0x243A0F4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x243A2C4", Offset = "0x243A2C4", VA = "0x243A2C4")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x243A2E8", Offset = "0x243A2E8", VA = "0x243A2E8")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCA0", Offset = "0x12ABCA0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x243A2BC", Offset = "0x243A2BC", VA = "0x243A2BC")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x243A30C", Offset = "0x243A30C", VA = "0x243A30C")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x243A330", Offset = "0x243A330", VA = "0x243A330")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x2439698", Offset = "0x2439698", VA = "0x2439698")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x2439874", Offset = "0x2439874", VA = "0x2439874")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x2439A64", Offset = "0x2439A64", VA = "0x2439A64")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x2439B2C", Offset = "0x2439B2C", VA = "0x2439B2C")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x2439BF4", Offset = "0x2439BF4", VA = "0x2439BF4")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x2439CBC", Offset = "0x2439CBC", VA = "0x2439CBC")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x2439D94", Offset = "0x2439D94", VA = "0x2439D94")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x2439E6C", Offset = "0x2439E6C", VA = "0x2439E6C")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x2439F34", Offset = "0x2439F34", VA = "0x2439F34")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x243A0FC", Offset = "0x243A0FC", VA = "0x243A0FC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200032A")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x20005CD")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000375")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020E6")]
				[Address(RVA = "0x2430C7C", Offset = "0x2430C7C", VA = "0x2430C7C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x2430CB0", Offset = "0x2430CB0", VA = "0x2430CB0")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005CE")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000376")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020E8")]
				[Address(RVA = "0x2430E4C", Offset = "0x2430E4C", VA = "0x2430E4C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x2430EB0", Offset = "0x2430EB0", VA = "0x2430EB0")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005CF")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000377")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020EA")]
				[Address(RVA = "0x2430D64", Offset = "0x2430D64", VA = "0x2430D64", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x2430D80", Offset = "0x2430D80", VA = "0x2430D80")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x20005D0")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x17000378")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020EC")]
				[Address(RVA = "0x2430CDC", Offset = "0x2430CDC", VA = "0x2430CDC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x2430D28", Offset = "0x2430D28", VA = "0x2430D28")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x20005D1")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x17000379")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020EE")]
				[Address(RVA = "0x2430DAC", Offset = "0x2430DAC", VA = "0x2430DAC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x2430E10", Offset = "0x2430E10", VA = "0x2430E10")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x20005D2")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700037A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0x2430EDC", Offset = "0x2430EDC", VA = "0x2430EDC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x2430F10", Offset = "0x2430F10", VA = "0x2430F10")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200032B")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x20005D3")]
		public static class Physics
		{
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x243A498", Offset = "0x243A498", VA = "0x243A498")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x243A5A0", Offset = "0x243A5A0", VA = "0x243A5A0")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x243A630", Offset = "0x243A630", VA = "0x243A630")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x243A6C0", Offset = "0x243A6C0", VA = "0x243A6C0")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x243A354", Offset = "0x243A354", VA = "0x243A354")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x243A3F8", Offset = "0x243A3F8", VA = "0x243A3F8")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace UnityAsyncAwaitUtil
{
	[Token(Token = "0x200032C")]
	public class AsyncCoroutineRunner : MonoBehaviour
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AsyncCoroutineRunner _instance;

		[Token(Token = "0x1700025C")]
		public static AsyncCoroutineRunner Instance
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x18BFFD8", Offset = "0x18BFFD8", VA = "0x18BFFD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x18C00B8", Offset = "0x18C00B8", VA = "0x18C00B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x18C0154", Offset = "0x18C0154", VA = "0x18C0154")]
		public AsyncCoroutineRunner()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public static class SyncContextUtil
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1828", Offset = "0x12B1828")]
		private static int <UnityThreadId>k__BackingField;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12B1838", Offset = "0x12B1838")]
		private static SynchronizationContext <UnitySynchronizationContext>k__BackingField;

		[Token(Token = "0x1700025D")]
		public static int UnityThreadId
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x18C58BC", Offset = "0x18C58BC", VA = "0x18C58BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BBCC4", Offset = "0x12BBCC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x18C590C", Offset = "0x18C590C", VA = "0x18C590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BBCD4", Offset = "0x12BBCD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public static SynchronizationContext UnitySynchronizationContext
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x18C5960", Offset = "0x18C5960", VA = "0x18C5960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BBCE4", Offset = "0x12BBCE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x18C59B0", Offset = "0x18C59B0", VA = "0x18C59B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12BBCF4", Offset = "0x12BBCF4")]
			private set
			{
			}
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x18C580C", Offset = "0x18C580C", VA = "0x18C580C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x12BBCB0", Offset = "0x12BBCB0")]
		private static void Install()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class AsyncUtilTests : MonoBehaviour
	{
		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCB0", Offset = "0x12ABCB0")]
		private sealed class <RunAsyncFromCoroutineTest>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F9")]
				[Address(RVA = "0x18C2C70", Offset = "0x18C2C70", VA = "0x18C2C70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020FB")]
				[Address(RVA = "0x18C2CD8", Offset = "0x18C2CD8", VA = "0x18C2CD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x18C1260", Offset = "0x18C1260", VA = "0x18C1260")]
			[DebuggerHidden]
			public <RunAsyncFromCoroutineTest>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x18C2B00", Offset = "0x18C2B00", VA = "0x18C2B00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x18C2B04", Offset = "0x18C2B04", VA = "0x18C2B04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x18C2C78", Offset = "0x18C2C78", VA = "0x18C2C78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCC0", Offset = "0x12ABCC0")]
		private struct <RunMultipleThreadsTestAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__2;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private object <>u__3;

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x13DB0DC", Offset = "0x13DB0DC", VA = "0x13DB0DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x13DB0E4", Offset = "0x13DB0E4", VA = "0x13DB0E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCD0", Offset = "0x12ABCD0")]
		private struct <RunMultipleThreadsTestAsyncWait>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x13DB0F0", Offset = "0x13DB0F0", VA = "0x13DB0F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x13DB0F8", Offset = "0x13DB0F8", VA = "0x13DB0F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCE0", Offset = "0x12ABCE0")]
		private struct <RunAsyncFromCoroutineTest2>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x6002100")]
			[Address(RVA = "0x13DB03C", Offset = "0x13DB03C", VA = "0x13DB03C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0x13DB044", Offset = "0x13DB044", VA = "0x13DB044", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABCF0", Offset = "0x12ABCF0")]
		private struct <RunWwwAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x6002102")]
			[Address(RVA = "0x13DB154", Offset = "0x13DB154", VA = "0x13DB154", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002103")]
			[Address(RVA = "0x13DB15C", Offset = "0x13DB15C", VA = "0x13DB15C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD00", Offset = "0x12ABD00")]
		private struct <RunOpenNotepadTestAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x13DB104", Offset = "0x13DB104", VA = "0x13DB104", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0x13DB10C", Offset = "0x13DB10C", VA = "0x13DB10C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD10", Offset = "0x12ABD10")]
		private struct <RunUnhandledExceptionTestAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002106")]
			[Address(RVA = "0x13DB140", Offset = "0x13DB140", VA = "0x13DB140", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x13DB148", Offset = "0x13DB148", VA = "0x13DB148", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD20", Offset = "0x12ABD20")]
		private struct <RunTryCatchExceptionTestAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x13DB12C", Offset = "0x13DB12C", VA = "0x13DB12C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002109")]
			[Address(RVA = "0x13DB134", Offset = "0x13DB134", VA = "0x13DB134", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD30", Offset = "0x12ABD30")]
		private struct <NestedRunAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x600210A")]
			[Address(RVA = "0x13DB028", Offset = "0x13DB028", VA = "0x13DB028", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600210B")]
			[Address(RVA = "0x13DB030", Offset = "0x13DB030", VA = "0x13DB030", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD40", Offset = "0x12ABD40")]
		private struct <WaitThenThrowException>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x600210C")]
			[Address(RVA = "0x13DB168", Offset = "0x13DB168", VA = "0x13DB168", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600210D")]
			[Address(RVA = "0x13DB170", Offset = "0x13DB170", VA = "0x13DB170", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD50", Offset = "0x12ABD50")]
		private struct <RunAsyncOperationAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600210E")]
			[Address(RVA = "0x13DB050", Offset = "0x13DB050", VA = "0x13DB050", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600210F")]
			[Address(RVA = "0x13DB058", Offset = "0x13DB058", VA = "0x13DB058", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD60", Offset = "0x12ABD60")]
		private struct <InstantiateAssetBundleAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string abUrl;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string assetName;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AssetBundle <assetBundle>5__2;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<byte[]> <>u__1;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private object <>u__2;

			[Token(Token = "0x6002110")]
			[Address(RVA = "0x13DB014", Offset = "0x13DB014", VA = "0x13DB014", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002111")]
			[Address(RVA = "0x13DB01C", Offset = "0x13DB01C", VA = "0x13DB01C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD70", Offset = "0x12ABD70")]
		private struct <DownloadRawDataAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<byte[]> <>t__builder;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6002112")]
			[Address(RVA = "0x13DAFF4", Offset = "0x13DAFF4", VA = "0x13DAFF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002113")]
			[Address(RVA = "0x13DAFFC", Offset = "0x13DAFFC", VA = "0x13DAFFC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD80", Offset = "0x12ABD80")]
		private struct <RunIEnumeratorTryCatchExceptionAsync>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x6002114")]
			[Address(RVA = "0x13DB0A0", Offset = "0x13DB0A0", VA = "0x13DB0A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0x13DB0A8", Offset = "0x13DB0A8", VA = "0x13DB0A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABD90", Offset = "0x12ABD90")]
		private struct <RunIEnumeratorUnhandledExceptionAsync>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x6002116")]
			[Address(RVA = "0x13DB0B4", Offset = "0x13DB0B4", VA = "0x13DB0B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0x13DB0BC", Offset = "0x13DB0BC", VA = "0x13DB0BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDA0", Offset = "0x12ABDA0")]
		private sealed class <WaitThenThrow>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211B")]
				[Address(RVA = "0x18C5418", Offset = "0x18C5418", VA = "0x18C5418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211D")]
				[Address(RVA = "0x18C5480", Offset = "0x18C5480", VA = "0x18C5480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002118")]
			[Address(RVA = "0x18C1A34", Offset = "0x18C1A34", VA = "0x18C1A34")]
			[DebuggerHidden]
			public <WaitThenThrow>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0x18C53B4", Offset = "0x18C53B4", VA = "0x18C53B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211A")]
			[Address(RVA = "0x18C53B8", Offset = "0x18C53B8", VA = "0x18C53B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211C")]
			[Address(RVA = "0x18C5420", Offset = "0x18C5420", VA = "0x18C5420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDB0", Offset = "0x12ABDB0")]
		private sealed class <WaitThenThrowNested>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002121")]
				[Address(RVA = "0x18C579C", Offset = "0x18C579C", VA = "0x18C579C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002123")]
				[Address(RVA = "0x18C5804", Offset = "0x18C5804", VA = "0x18C5804", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600211E")]
			[Address(RVA = "0x18C1AC0", Offset = "0x18C1AC0", VA = "0x18C1AC0")]
			[DebuggerHidden]
			public <WaitThenThrowNested>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x18C5694", Offset = "0x18C5694", VA = "0x18C5694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x18C5698", Offset = "0x18C5698", VA = "0x18C5698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x18C57A4", Offset = "0x18C57A4", VA = "0x18C57A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDC0", Offset = "0x12ABDC0")]
		private struct <RunIEnumeratorStringTestAsync>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x6002124")]
			[Address(RVA = "0x13DB078", Offset = "0x13DB078", VA = "0x13DB078", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002125")]
			[Address(RVA = "0x13DB080", Offset = "0x13DB080", VA = "0x13DB080", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDD0", Offset = "0x12ABDD0")]
		private struct <RunIEnumeratorUntypedStringTestAsync>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x6002126")]
			[Address(RVA = "0x13DB0C8", Offset = "0x13DB0C8", VA = "0x13DB0C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002127")]
			[Address(RVA = "0x13DB0D0", Offset = "0x13DB0D0", VA = "0x13DB0D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDE0", Offset = "0x12ABDE0")]
		private struct <RunIEnumeratorTestAsync>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>u__1;

			[Token(Token = "0x6002128")]
			[Address(RVA = "0x13DB08C", Offset = "0x13DB08C", VA = "0x13DB08C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002129")]
			[Address(RVA = "0x13DB094", Offset = "0x13DB094", VA = "0x13DB094", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABDF0", Offset = "0x12ABDF0")]
		private sealed class <WaitForString>d__27 : IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <startTime>5__2;

			[Token(Token = "0x17000381")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x600212D")]
				[Address(RVA = "0x18C5228", Offset = "0x18C5228", VA = "0x18C5228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600212F")]
				[Address(RVA = "0x18C5290", Offset = "0x18C5290", VA = "0x18C5290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600212A")]
			[Address(RVA = "0x18C1B4C", Offset = "0x18C1B4C", VA = "0x18C1B4C")]
			[DebuggerHidden]
			public <WaitForString>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600212B")]
			[Address(RVA = "0x18C5150", Offset = "0x18C5150", VA = "0x18C5150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600212C")]
			[Address(RVA = "0x18C5154", Offset = "0x18C5154", VA = "0x18C5154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0x18C5230", Offset = "0x18C5230", VA = "0x18C5230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE00", Offset = "0x12ABE00")]
		private sealed class <WaitForStringUntyped>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002133")]
				[Address(RVA = "0x18C5344", Offset = "0x18C5344", VA = "0x18C5344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002135")]
				[Address(RVA = "0x18C53AC", Offset = "0x18C53AC", VA = "0x18C53AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002130")]
			[Address(RVA = "0x18C1BE8", Offset = "0x18C1BE8", VA = "0x18C1BE8")]
			[DebuggerHidden]
			public <WaitForStringUntyped>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002131")]
			[Address(RVA = "0x18C5298", Offset = "0x18C5298", VA = "0x18C5298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002132")]
			[Address(RVA = "0x18C529C", Offset = "0x18C529C", VA = "0x18C529C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002134")]
			[Address(RVA = "0x18C534C", Offset = "0x18C534C", VA = "0x18C534C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE10", Offset = "0x12ABE10")]
		private sealed class <WaitABit>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002139")]
				[Address(RVA = "0x18C50E0", Offset = "0x18C50E0", VA = "0x18C50E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600213B")]
				[Address(RVA = "0x18C5148", Offset = "0x18C5148", VA = "0x18C5148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x18C1C74", Offset = "0x18C1C74", VA = "0x18C1C74")]
			[DebuggerHidden]
			public <WaitABit>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x18C5048", Offset = "0x18C5048", VA = "0x18C5048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x18C504C", Offset = "0x18C504C", VA = "0x18C504C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x18C50E8", Offset = "0x18C50E8", VA = "0x18C50E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE20", Offset = "0x12ABE20")]
		private struct <RunReturnValueTestAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsyncUtilTests <>4__this;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x600213C")]
			[Address(RVA = "0x13DB118", Offset = "0x13DB118", VA = "0x13DB118", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x13DB120", Offset = "0x13DB120", VA = "0x13DB120", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE30", Offset = "0x12ABE30")]
		private struct <GetValueExampleAsync>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x600213E")]
			[Address(RVA = "0x13DB004", Offset = "0x13DB004", VA = "0x13DB004", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600213F")]
			[Address(RVA = "0x13DB00C", Offset = "0x13DB00C", VA = "0x13DB00C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE40", Offset = "0x12ABE40")]
		private struct <RunAwaitSecondsTestAsync>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private object <>u__1;

			[Token(Token = "0x6002140")]
			[Address(RVA = "0x13DB064", Offset = "0x13DB064", VA = "0x13DB064", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002141")]
			[Address(RVA = "0x13DB06C", Offset = "0x13DB06C", VA = "0x13DB06C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000AA2")]
		private const string AssetBundleSampleUrl = "http://www.stevevermeulen.com/wp-content/uploads/2017/09/teapot.unity3d";

		[Token(Token = "0x4000AA3")]
		private const string AssetBundleSampleAssetName = "Teapot";

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TestButtonHandler.Settings _buttonSettings;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TestButtonHandler _buttonHandler;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x18C015C", Offset = "0x18C015C", VA = "0x18C015C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x18C01F8", Offset = "0x18C01F8", VA = "0x18C01F8")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x18C10FC", Offset = "0x18C10FC", VA = "0x18C10FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BBD04", Offset = "0x12BBD04")]
		private IEnumerator RunAsyncFromCoroutineTest()
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x18C116C", Offset = "0x18C116C", VA = "0x18C116C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBD68", Offset = "0x12BBD68")]
		private Task RunMultipleThreadsTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x18C128C", Offset = "0x18C128C", VA = "0x18C128C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBDCC", Offset = "0x12BBDCC")]
		private Task RunMultipleThreadsTestAsyncWait()
		{
			return null;
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x18C137C", Offset = "0x18C137C", VA = "0x18C137C")]
		private void PrintCurrentThreadContext([Optional] string prefix)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x18C14C4", Offset = "0x18C14C4", VA = "0x18C14C4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBE30", Offset = "0x12BBE30")]
		private Task RunAsyncFromCoroutineTest2()
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x18C100C", Offset = "0x18C100C", VA = "0x18C100C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBE94", Offset = "0x12BBE94")]
		private Task RunWwwAsync()
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x18C0F1C", Offset = "0x18C0F1C", VA = "0x18C0F1C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBEF8", Offset = "0x12BBEF8")]
		private Task RunOpenNotepadTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x18C088C", Offset = "0x18C088C", VA = "0x18C088C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBF5C", Offset = "0x12BBF5C")]
		private Task RunUnhandledExceptionTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x18C079C", Offset = "0x18C079C", VA = "0x18C079C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BBFC0", Offset = "0x12BBFC0")]
		private Task RunTryCatchExceptionTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x18C15B4", Offset = "0x18C15B4", VA = "0x18C15B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC024", Offset = "0x12BC024")]
		private Task NestedRunAsync()
		{
			return null;
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x18C16A4", Offset = "0x18C16A4", VA = "0x18C16A4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC088", Offset = "0x12BC088")]
		private Task WaitThenThrowException()
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x18C0E2C", Offset = "0x18C0E2C", VA = "0x18C0E2C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC0EC", Offset = "0x12BC0EC")]
		private Task RunAsyncOperationAsync()
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x18C1794", Offset = "0x18C1794", VA = "0x18C1794")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC150", Offset = "0x12BC150")]
		private Task InstantiateAssetBundleAsync(string abUrl, string assetName)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x18C18A4", Offset = "0x18C18A4", VA = "0x18C18A4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC1B4", Offset = "0x12BC1B4")]
		private Task<byte[]> DownloadRawDataAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x18C0D3C", Offset = "0x18C0D3C", VA = "0x18C0D3C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC218", Offset = "0x12BC218")]
		private Task RunIEnumeratorTryCatchExceptionAsync()
		{
			return null;
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x18C0C4C", Offset = "0x18C0C4C", VA = "0x18C0C4C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC27C", Offset = "0x12BC27C")]
		private Task RunIEnumeratorUnhandledExceptionAsync()
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x18C19C4", Offset = "0x18C19C4", VA = "0x18C19C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC2E0", Offset = "0x12BC2E0")]
		private IEnumerator WaitThenThrow()
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x18C1A60", Offset = "0x18C1A60", VA = "0x18C1A60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC344", Offset = "0x12BC344")]
		private IEnumerator WaitThenThrowNested()
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x18C0B5C", Offset = "0x18C0B5C", VA = "0x18C0B5C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC3A8", Offset = "0x12BC3A8")]
		private Task RunIEnumeratorStringTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x18C0A6C", Offset = "0x18C0A6C", VA = "0x18C0A6C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC40C", Offset = "0x12BC40C")]
		private Task RunIEnumeratorUntypedStringTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x18C097C", Offset = "0x18C097C", VA = "0x18C097C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC470", Offset = "0x12BC470")]
		private Task RunIEnumeratorTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x18C1AEC", Offset = "0x18C1AEC", VA = "0x18C1AEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC4D4", Offset = "0x12BC4D4")]
		private IEnumerator<string> WaitForString()
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x18C1B78", Offset = "0x18C1B78", VA = "0x18C1B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC538", Offset = "0x12BC538")]
		private IEnumerator WaitForStringUntyped()
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x18C1C14", Offset = "0x18C1C14", VA = "0x18C1C14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x12BC59C", Offset = "0x12BC59C")]
		private IEnumerator WaitABit()
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x18C06AC", Offset = "0x18C06AC", VA = "0x18C06AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC600", Offset = "0x12BC600")]
		private Task RunReturnValueTestAsync()
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x18C1CA0", Offset = "0x18C1CA0", VA = "0x18C1CA0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC664", Offset = "0x12BC664")]
		private Task<string> GetValueExampleAsync()
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x18C05BC", Offset = "0x18C05BC", VA = "0x18C05BC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC6C8", Offset = "0x12BC6C8")]
		private Task RunAwaitSecondsTestAsync()
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x18C1DA0", Offset = "0x18C1DA0", VA = "0x18C1DA0")]
		public AsyncUtilTests()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class TestButtonHandler
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		public class Settings
		{
			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int NumPerColumn;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float VerticalMargin;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float VerticalSpacing;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float HorizontalSpacing;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float HorizontalMargin;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float ButtonWidth;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float ButtonHeight;

			[Token(Token = "0x6002142")]
			[Address(RVA = "0x18C5A04", Offset = "0x18C5A04", VA = "0x18C5A04")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Settings _settings;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _buttonVCount;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _buttonHCount;

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x18C01CC", Offset = "0x18C01CC", VA = "0x18C01CC")]
		public TestButtonHandler(Settings settings)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x18C04B4", Offset = "0x18C04B4", VA = "0x18C04B4")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x18C04BC", Offset = "0x18C04BC", VA = "0x18C04BC")]
		public bool Display(string text)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000330")]
	public class UniRxTests : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x12ABE50", Offset = "0x12ABE50")]
		private struct <RunUniRxTestAsync>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UniRxTests <>4__this;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6002143")]
			[Address(RVA = "0x13DB17C", Offset = "0x13DB17C", VA = "0x13DB17C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002144")]
			[Address(RVA = "0x13DB184", Offset = "0x13DB184", VA = "0x13DB184", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Subject<string> _signal;

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x18C5A2C", Offset = "0x18C5A2C", VA = "0x18C5A2C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x18C5B80", Offset = "0x18C5B80", VA = "0x18C5B80")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x12BC72C", Offset = "0x12BC72C")]
		private Task RunUniRxTestAsync()
		{
			return null;
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x18C5C70", Offset = "0x18C5C70", VA = "0x18C5C70")]
		public UniRxTests()
		{
		}
	}
}
