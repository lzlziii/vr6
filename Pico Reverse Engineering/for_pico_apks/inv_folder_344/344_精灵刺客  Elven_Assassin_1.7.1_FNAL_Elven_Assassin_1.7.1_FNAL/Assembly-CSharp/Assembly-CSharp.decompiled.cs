using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using MagicalFX;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityStandardAssets.ImageEffects;
using WenklyStudio;
using WenklyStudio.Curves;
using WenklyStudio.ElvenAssassin;
using WenklyStudio.Movement;
using WenklyStudio.Payload;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000002")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 2f)]
	[Header("Trees Settings")]
	public float AOIntensity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 2f)]
	public float TranslucencyIntensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TranslucencyDistance;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(20f)]
	public bool EnableTintColor;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TintToggle;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0.001f, 10f)]
	public float TintNoiseTile;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0.001f, 10f)]
	public float TintNoiseContrast;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x84EB74", Offset = "0x84EB74", VA = "0x84EB74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x84EBEC", Offset = "0x84EBEC", VA = "0x84EBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x84ED40", Offset = "0x84ED40", VA = "0x84ED40")]
	public AGGlobalSettings()
	{
	}
}
[Token(Token = "0x2000003")]
[RequireComponent(typeof(MeshRenderer))]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AGGlobalSnow : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Wind")]
	public bool EnableGlobalWind;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float WindGrassAmplitude;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float WindGrassSpeed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 3f)]
	public float WindGrassScale;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float WindGrassStiffness;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Tint Color")]
	public bool EnableTintColor;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float TintToggle;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.001f, 10f)]
	public float TintNoiseTile;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.001f, 10f)]
	public float TintNoiseContrast;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	[Header("Global Snow for Props")]
	public float SnowPropsIntensity;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float SnowPropsOffset;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SnowPropsContrast;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Global Snow Height")]
	public float SnowMinimumHeight;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 30f)]
	public float SnowFadeHeight;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x84ED64", Offset = "0x84ED64", VA = "0x84ED64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x84EDDC", Offset = "0x84EDDC", VA = "0x84EDDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x84F090", Offset = "0x84F090", VA = "0x84F090")]
	public AGGlobalSnow()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnowGrass : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Snow for Grass")]
	[Range(0f, 1f)]
	public float SnowGrassIntensity;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowGrassOffset;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowGrassContrast;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x84F0CC", Offset = "0x84F0CC", VA = "0x84F0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x84F144", Offset = "0x84F144", VA = "0x84F144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x84F1E0", Offset = "0x84F1E0", VA = "0x84F1E0")]
	public AGGlobalSnowGrass()
	{
	}
}
[Token(Token = "0x2000005")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class AGGlobalSnowHeight : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Snow Height")]
	public float SnowMinimumHeight;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 30f)]
	public float SnowFadeHeight;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x84F1F8", Offset = "0x84F1F8", VA = "0x84F1F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x84F270", Offset = "0x84F270", VA = "0x84F270")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x84F2E8", Offset = "0x84F2E8", VA = "0x84F2E8")]
	public AGGlobalSnowHeight()
	{
	}
}
[Token(Token = "0x2000006")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class AGGlobalSnowProps : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Snow for Props")]
	[Range(0f, 1f)]
	public float SnowPropsIntensity;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowPropsOffset;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowPropsContrast;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x84F2FC", Offset = "0x84F2FC", VA = "0x84F2FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x84F374", Offset = "0x84F374", VA = "0x84F374")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x84F410", Offset = "0x84F410", VA = "0x84F410")]
	public AGGlobalSnowProps()
	{
	}
}
[Token(Token = "0x2000007")]
[RequireComponent(typeof(MeshRenderer))]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AGGlobalSnowTree : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Header("Global Snow for Trees")]
	public float SnowTreeIntensity;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowTreeOffset;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowTreeContrast;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float SnowTreeArrowDirection;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x84F428", Offset = "0x84F428", VA = "0x84F428")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x84F4A0", Offset = "0x84F4A0", VA = "0x84F4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x84F568", Offset = "0x84F568", VA = "0x84F568")]
	public AGGlobalSnowTree()
	{
	}
}
[Token(Token = "0x2000008")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class AGGlobalWind : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableGlobalWind;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float WindTreeAmplitude;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float WindTreeSpeed;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 3f)]
	public float WindTreeScale;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float WindTreeStiffness;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	[Space(20f)]
	public float WindGrassAmplitude;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 10f)]
	public float WindGrassSpeed;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 3f)]
	public float WindGrassScale;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float WindGrassStiffness;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x84F578", Offset = "0x84F578", VA = "0x84F578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x84F5F0", Offset = "0x84F5F0", VA = "0x84F5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x84F7E0", Offset = "0x84F7E0", VA = "0x84F7E0")]
	public AGGlobalWind()
	{
	}
}
[Token(Token = "0x2000009")]
public class RemoveComponentName : MonoBehaviour
{
	[Token(Token = "0x6000016")]
	[Address(RVA = "0x84F804", Offset = "0x84F804", VA = "0x84F804")]
	public void RemoveComponents()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x84F974", Offset = "0x84F974", VA = "0x84F974")]
	public RemoveComponentName()
	{
	}
}
[Token(Token = "0x200000A")]
public class Achivements : MonoBehaviourPun
{
	[Token(Token = "0x200000B")]
	private enum FiredArrowsAchivementValues
	{
		[Token(Token = "0x4000036")]
		Tier1 = 100,
		[Token(Token = "0x4000037")]
		Tier2 = 1000,
		[Token(Token = "0x4000038")]
		Tier3 = 5000,
		[Token(Token = "0x4000039")]
		Tier4 = 20000,
		[Token(Token = "0x400003A")]
		Tier5 = 50000
	}

	[Token(Token = "0x200000C")]
	private enum OrcsKilledAchivementValues
	{
		[Token(Token = "0x400003C")]
		Tier1 = 50,
		[Token(Token = "0x400003D")]
		Tier2 = 500,
		[Token(Token = "0x400003E")]
		Tier3 = 2500,
		[Token(Token = "0x400003F")]
		Tier4 = 10000,
		[Token(Token = "0x4000040")]
		Tier5 = 25000,
		[Token(Token = "0x4000041")]
		Tier6 = 50000
	}

	[Token(Token = "0x200000D")]
	private enum HeadShotsAchivementValues
	{
		[Token(Token = "0x4000043")]
		Tier1 = 50,
		[Token(Token = "0x4000044")]
		Tier2 = 500,
		[Token(Token = "0x4000045")]
		Tier3 = 2500,
		[Token(Token = "0x4000046")]
		Tier4 = 10000,
		[Token(Token = "0x4000047")]
		Tier5 = 25000,
		[Token(Token = "0x4000048")]
		Tier6 = 50000
	}

	[Token(Token = "0x200000E")]
	private enum WindowShotsAchivementValues
	{
		[Token(Token = "0x400004A")]
		Tier1 = 50,
		[Token(Token = "0x400004B")]
		Tier2 = 100,
		[Token(Token = "0x400004C")]
		Tier3 = 1000,
		[Token(Token = "0x400004D")]
		Tier4 = 20000
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ClearStats;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ClearAchivements;

	[Token(Token = "0x4000031")]
	private const string FiredArrowsKey = "FiredArrows";

	[Token(Token = "0x4000032")]
	private const string OrcKilledKey = "KilledOrcs";

	[Token(Token = "0x4000033")]
	private const string HeadShotsKey = "HeadShots";

	[Token(Token = "0x4000034")]
	private const string WindowShotsKey = "WindowShots";

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x84F97C", Offset = "0x84F97C", VA = "0x84F97C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x84FBF4", Offset = "0x84FBF4", VA = "0x84FBF4")]
	private void OnEnemyGotKilled(Player killer, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x84FD54", Offset = "0x84FD54", VA = "0x84FD54")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x84FD58", Offset = "0x84FD58", VA = "0x84FD58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x850050", Offset = "0x850050", VA = "0x850050")]
	public void RegisterFiredArrow()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x8503E8", Offset = "0x8503E8", VA = "0x8503E8")]
	[PunRPC]
	public void RpcRegisterKilledOrc()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x850780", Offset = "0x850780", VA = "0x850780")]
	public void RegisterHeadShot()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x850B18", Offset = "0x850B18", VA = "0x850B18")]
	public void RegisterWindowShot()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x850EB0", Offset = "0x850EB0", VA = "0x850EB0")]
	private int GetStat(string statName)
	{
		return default(int);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x84FFD4", Offset = "0x84FFD4", VA = "0x84FFD4")]
	public void StoreAllStats()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x850EB8", Offset = "0x850EB8", VA = "0x850EB8")]
	public Achivements()
	{
	}
}
[Token(Token = "0x200000F")]
public static class Game
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Achivements achivementController;

	[Token(Token = "0x17000001")]
	public static Achivements AchivementController
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x850EC0", Offset = "0x850EC0", VA = "0x850EC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x850F94", Offset = "0x850F94", VA = "0x850F94")]
		private set
		{
		}
	}
}
[Token(Token = "0x2000010")]
public class AdjustRotaterPinner : MonoBehaviour
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0x850FEC", Offset = "0x850FEC", VA = "0x850FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x850FF0", Offset = "0x850FF0", VA = "0x850FF0")]
	public AdjustRotaterPinner()
	{
	}
}
[Token(Token = "0x2000011")]
[AddComponentMenu("Camera-Control/Smooth Mouse Orbit - Unluck Software")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x850FF8", Offset = "0x850FF8", VA = "0x850FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x8514F4", Offset = "0x8514F4", VA = "0x8514F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x850FFC", Offset = "0x850FFC", VA = "0x850FFC")]
	public void Init()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x8514F8", Offset = "0x8514F8", VA = "0x8514F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x8519D0", Offset = "0x8519D0", VA = "0x8519D0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x851A0C", Offset = "0x851A0C", VA = "0x851A0C")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000012")]
public class UnluckFlagGUI : MonoBehaviour
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] bgrs;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light[] lights;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextButton;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prevButton;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bgrButton;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lightButton;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject texturePreview;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeObj;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int counter;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bCounter;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lCounter;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh txt;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh debug;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x851A48", Offset = "0x851A48", VA = "0x851A48")]
	public void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x852150", Offset = "0x852150", VA = "0x852150")]
	public void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x852334", Offset = "0x852334", VA = "0x852334")]
	public void ButtonUp()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x8525F8", Offset = "0x8525F8", VA = "0x8525F8")]
	public void LightChange()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8525A4", Offset = "0x8525A4", VA = "0x8525A4")]
	public void NextBgr()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x852538", Offset = "0x852538", VA = "0x852538")]
	public void Next()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x852570", Offset = "0x852570", VA = "0x852570")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x851E24", Offset = "0x851E24", VA = "0x851E24")]
	public void Swap()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x852690", Offset = "0x852690", VA = "0x852690")]
	public UnluckFlagGUI()
	{
	}
}
[Token(Token = "0x2000013")]
public class UnluckFPS : MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh _textMesh;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x852698", Offset = "0x852698", VA = "0x852698")]
	public void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x852708", Offset = "0x852708", VA = "0x852708")]
	public void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x852818", Offset = "0x852818", VA = "0x852818")]
	public UnluckFPS()
	{
	}
}
[Token(Token = "0x2000014")]
public class UnluckAnimatedMesh : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] meshCache;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform meshCached;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshContainerFBX;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playSpeed;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playSpeedRandom;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomSpeedLoop;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentSpeed;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float currentFrame;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int meshCacheCount;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Renderer rendererComponent;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float updateInterval;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool randomRotateX;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool randomRotateY;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool randomRotateZ;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool randomStartFrame;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomRotateLoop;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool loop;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool pingPong;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool playOnAwake;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 randomStartDelay;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startDelay;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startDelayCounter;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float updateSeed;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool pingPongToggle;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform transformCache;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float delta;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x852828", Offset = "0x852828", VA = "0x852828")]
	public void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x852A58", Offset = "0x852A58", VA = "0x852A58")]
	public void Play()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x852B64", Offset = "0x852B64", VA = "0x852B64")]
	public void RandomRotate()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x852A00", Offset = "0x852A00", VA = "0x852A00")]
	public void GetRequiredComponents()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x852B24", Offset = "0x852B24", VA = "0x852B24")]
	public void RandomizePlaySpeed()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x852D10", Offset = "0x852D10", VA = "0x852D10")]
	public void FillCacheArray()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x852954", Offset = "0x852954", VA = "0x852954")]
	public void CheckIfMeshHasChanged()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x852F40", Offset = "0x852F40", VA = "0x852F40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x853074", Offset = "0x853074", VA = "0x853074")]
	public bool PingPongFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x8530E4", Offset = "0x8530E4", VA = "0x8530E4")]
	public bool NextFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x85315C", Offset = "0x85315C", VA = "0x85315C")]
	public void RandomizePropertiesAfterLoop()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x852FB8", Offset = "0x852FB8", VA = "0x852FB8")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x853190", Offset = "0x853190", VA = "0x853190")]
	public UnluckAnimatedMesh()
	{
	}
}
[Token(Token = "0x2000015")]
public class ArrowResetController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x6000046")]
	[Address(RVA = "0x8531C0", Offset = "0x8531C0", VA = "0x8531C0")]
	public void DestroyYourself()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x853258", Offset = "0x853258", VA = "0x853258", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x853280", Offset = "0x853280", VA = "0x853280")]
	public ArrowResetController()
	{
	}
}
[Token(Token = "0x2000016")]
public class ArrowSpellTrailEnabler : MonoBehaviour, IResetable
{
	[Token(Token = "0x2000017")]
	[CompilerGenerated]
	private sealed class <SetTrailLogic>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArrowSpellTrailEnabler <>4__this;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject trail;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x17000002")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000055")]
			[Address(RVA = "0x853710", Offset = "0x853710", VA = "0x853710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000003")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000057")]
			[Address(RVA = "0x853758", Offset = "0x853758", VA = "0x853758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x853550", Offset = "0x853550", VA = "0x853550")]
		[DebuggerHidden]
		public <SetTrailLogic>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x853624", Offset = "0x853624", VA = "0x853624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x853628", Offset = "0x853628", VA = "0x853628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x853718", Offset = "0x853718", VA = "0x853718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject iceTrail;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fireTrail;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject otherTrail;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArrowFlyController ArrowFlyController;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject activeTrail;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delay;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x853288", Offset = "0x853288", VA = "0x853288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x853360", Offset = "0x853360", VA = "0x853360")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x853438", Offset = "0x853438", VA = "0x853438")]
	public void EnableIceTrailLogic()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x853500", Offset = "0x853500", VA = "0x853500")]
	public void EnableFireTrailLogic()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x853528", Offset = "0x853528", VA = "0x853528")]
	public void EnableOtherTrailLogic()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x853460", Offset = "0x853460", VA = "0x853460")]
	[IteratorStateMachine(typeof(<SetTrailLogic>d__11))]
	private IEnumerator SetTrailLogic(float delay, GameObject trail)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x853578", Offset = "0x853578", VA = "0x853578")]
	private void StopTrail()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x85360C", Offset = "0x85360C", VA = "0x85360C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x853610", Offset = "0x853610", VA = "0x853610")]
	public ArrowSpellTrailEnabler()
	{
	}
}
[Token(Token = "0x2000018")]
public class ArrowVisibilityEnabler : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer arrowRenderer;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrailRendererEnabler trailRendererEnabler;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x853760", Offset = "0x853760", VA = "0x853760")]
	public void EnableArrowVisiblity(bool isEnabled)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x8537A4", Offset = "0x8537A4", VA = "0x8537A4")]
	public void EnableArrowTrail(bool isEnabled)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8537C4", Offset = "0x8537C4", VA = "0x8537C4")]
	public ArrowVisibilityEnabler()
	{
	}
}
[Token(Token = "0x2000019")]
public class Sound_Manager : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0.9f, 1.1f)]
	public float randomPitch;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource[] sources;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip whoosh;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip flesh;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject axe;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject playerCamera;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool play1;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x8537CC", Offset = "0x8537CC", VA = "0x8537CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x853824", Offset = "0x853824", VA = "0x853824")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x853CD8", Offset = "0x853CD8", VA = "0x853CD8")]
	public Sound_Manager()
	{
	}
}
[Token(Token = "0x200001A")]
public class AxeBeingUsedController : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isAxeBeingUsed;

	[Token(Token = "0x17000004")]
	public bool IsAxeBeingUsed
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x853CF4", Offset = "0x853CF4", VA = "0x853CF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x853CFC", Offset = "0x853CFC", VA = "0x853CFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x853D08", Offset = "0x853D08", VA = "0x853D08")]
	public AxeBeingUsedController()
	{
	}
}
[Token(Token = "0x200001B")]
public class AxeFreeze : MonoBehaviour
{
	[Token(Token = "0x40000AA")]
	private const float iceBreakVolume = 0.15f;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int indexOfIceBreakSound;

	[Token(Token = "0x40000AC")]
	private const float minPitch = 1f;

	[Token(Token = "0x40000AD")]
	private const float maxPitch = 1.1f;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isFreezing;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer axeRenderer;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material freezeMaterial;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeToRemoveParticles;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ExplodeObject explodeObject;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject explosionParticle;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<AudioClip> iceBreakSounds;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x853D10", Offset = "0x853D10", VA = "0x853D10")]
	public void Freeze(Transform parentObject)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x853F08", Offset = "0x853F08", VA = "0x853F08")]
	public void PlayIceBreakSound()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x854040", Offset = "0x854040", VA = "0x854040")]
	public AxeFreeze()
	{
	}
}
[Token(Token = "0x200001C")]
public class AxeHandle : MonoBehaviour
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AxeController axeController;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x854058", Offset = "0x854058", VA = "0x854058")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x8540BC", Offset = "0x8540BC", VA = "0x8540BC")]
	public AxeHandle()
	{
	}
}
[Token(Token = "0x200001D")]
public class AxeSnapper : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider realCollider;

	[Token(Token = "0x40000B9")]
	private const float minAxeRotationY = 145f;

	[Token(Token = "0x40000BA")]
	private const float maxAxeRotationY = 160f;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x8540C4", Offset = "0x8540C4", VA = "0x8540C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x8542EC", Offset = "0x8542EC", VA = "0x8542EC")]
	public AxeSnapper()
	{
	}
}
[Token(Token = "0x200001E")]
public class BalistaHandsController : MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leftHandBalista;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHandBalista;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform positionLeftHand;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x8542F4", Offset = "0x8542F4", VA = "0x8542F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x85433C", Offset = "0x85433C", VA = "0x85433C")]
	public void SetHands(bool Activate)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x854380", Offset = "0x854380", VA = "0x854380")]
	public BalistaHandsController()
	{
	}
}
[Token(Token = "0x200001F")]
public class BallistaAnimator : MonoBehaviour
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation anim;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIdle;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isLoading;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isShot;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource ballistaAudio;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] ballistaLoadingClips;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ballistaShotClips;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x854388", Offset = "0x854388", VA = "0x854388")]
	private void Update()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x85438C", Offset = "0x85438C", VA = "0x85438C")]
	private void State()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x85451C", Offset = "0x85451C", VA = "0x85451C")]
	public BallistaAnimator()
	{
	}
}
[Token(Token = "0x2000020")]
public class BalistaAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40000C5")]
	private const float ShootAnimatorSpeed = 3f;

	[Token(Token = "0x40000C6")]
	private const float ReloadAdnimatorSpeed = 1f;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int shoot;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int load;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float animatorSpeed;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isShoot;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool isLoading;

	[Token(Token = "0x17000005")]
	public bool IsShoot
	{
		[Token(Token = "0x600006E")]
		[Address(RVA = "0x854524", Offset = "0x854524", VA = "0x854524")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x85452C", Offset = "0x85452C", VA = "0x85452C")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public bool IsLoading
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0x854558", Offset = "0x854558", VA = "0x854558")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000071")]
		[Address(RVA = "0x854560", Offset = "0x854560", VA = "0x854560")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float AnimatorSpeed
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0x85458C", Offset = "0x85458C", VA = "0x85458C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000073")]
		[Address(RVA = "0x854594", Offset = "0x854594", VA = "0x854594")]
		set
		{
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x8545B8", Offset = "0x8545B8", VA = "0x8545B8")]
	public void PlayShootAnimation()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x8545E4", Offset = "0x8545E4", VA = "0x8545E4")]
	public void PlayReloadAnimation()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x854610", Offset = "0x854610", VA = "0x854610", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x8547B0", Offset = "0x8547B0", VA = "0x8547B0")]
	public BalistaAnimatorController()
	{
	}
}
[Token(Token = "0x2000021")]
public class BalistaBoltEffectsController : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject dustPrefab;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x85483C", Offset = "0x85483C", VA = "0x85483C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x8548FC", Offset = "0x8548FC", VA = "0x8548FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x854998", Offset = "0x854998", VA = "0x854998")]
	private void OnCollision(Collision collision)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x8548DC", Offset = "0x8548DC", VA = "0x8548DC")]
	private void SetTrailIsActive(bool isActive)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x854B1C", Offset = "0x854B1C", VA = "0x854B1C")]
	public BalistaBoltEffectsController()
	{
	}
}
[Token(Token = "0x2000022")]
public class BalistaBoltRemover : MonoBehaviourPun
{
	[Token(Token = "0x2000023")]
	[CompilerGenerated]
	private sealed class <RevertToPoolCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BalistaBoltRemover <>4__this;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0x854D48", Offset = "0x854D48", VA = "0x854D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x854D90", Offset = "0x854D90", VA = "0x854D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x854BB8", Offset = "0x854BB8", VA = "0x854BB8")]
		[DebuggerHidden]
		public <RevertToPoolCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x854C88", Offset = "0x854C88", VA = "0x854C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x854C8C", Offset = "0x854C8C", VA = "0x854C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x854D50", Offset = "0x854D50", VA = "0x854D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float timeToRemove;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x854B24", Offset = "0x854B24", VA = "0x854B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x854B44", Offset = "0x854B44", VA = "0x854B44")]
	[IteratorStateMachine(typeof(<RevertToPoolCoroutine>d__2))]
	private IEnumerator RevertToPoolCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x854BE0", Offset = "0x854BE0", VA = "0x854BE0")]
	private void RevertToPool()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x854C78", Offset = "0x854C78", VA = "0x854C78")]
	public BalistaBoltRemover()
	{
	}
}
[Token(Token = "0x2000024")]
public class BalistaBoltVisibilityController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer boltRenderer;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isVisible;

	[Token(Token = "0x1700000A")]
	public bool IsVisible
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x854D98", Offset = "0x854D98", VA = "0x854D98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000088")]
		[Address(RVA = "0x854DA0", Offset = "0x854DA0", VA = "0x854DA0")]
		set
		{
		}
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x854DC8", Offset = "0x854DC8", VA = "0x854DC8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x854E90", Offset = "0x854E90", VA = "0x854E90")]
	public BalistaBoltVisibilityController()
	{
	}
}
[Token(Token = "0x2000025")]
public class BalistaHandsPositionReference : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer leftHandMesh;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer rightHandMesh;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandsController handsControllerRightHanded;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HandsController handsControllerLeftHanded;

	[Token(Token = "0x1700000B")]
	public Transform LeftHand
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x854EA0", Offset = "0x854EA0", VA = "0x854EA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public Transform RightHand
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0x854EA8", Offset = "0x854EA8", VA = "0x854EA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public MeshRenderer LeftHandMesh
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x854EB0", Offset = "0x854EB0", VA = "0x854EB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public MeshRenderer RightHandMesh
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x854EB8", Offset = "0x854EB8", VA = "0x854EB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public HandsController HandsController
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x854EC0", Offset = "0x854EC0", VA = "0x854EC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x854F60", Offset = "0x854F60", VA = "0x854F60")]
	public BalistaHandsPositionReference()
	{
	}
}
[Token(Token = "0x2000026")]
public class BalistaShootController : MonoBehaviourPun
{
	[Token(Token = "0x40000DC")]
	private const float VelocityMultiplier = 200f;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject balistaBolt;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform boltAttachPoint;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x854F68", Offset = "0x854F68", VA = "0x854F68")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8553CC", Offset = "0x8553CC", VA = "0x8553CC")]
	[PunRPC]
	private void ReleaseBolt(int ArrowPhotonViewID, Vector3 Position, Vector3 Rotation, Vector3 loacalscale, Vector3 arrowVelocity)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x855500", Offset = "0x855500", VA = "0x855500")]
	public BalistaShootController()
	{
	}
}
[Token(Token = "0x2000027")]
public class BalistaSoundController : MonoBehaviourPun
{
	[Token(Token = "0x2000028")]
	private enum BalistaSoundType
	{
		[Token(Token = "0x40000E4")]
		Shoot,
		[Token(Token = "0x40000E5")]
		Reload
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClip> shootSounds;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip reloadSound;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource shotAudioSource;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource reloadAudioSource;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x855508", Offset = "0x855508", VA = "0x855508")]
	public void PlayShootSound()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x855634", Offset = "0x855634", VA = "0x855634")]
	public void PlayReloadSound()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x855744", Offset = "0x855744", VA = "0x855744")]
	[PunRPC]
	private void PlayBalistaSound(BalistaSoundType type)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x8557FC", Offset = "0x8557FC", VA = "0x8557FC")]
	public BalistaSoundController()
	{
	}
}
[Token(Token = "0x2000029")]
public class OwnershipChanger : MonoBehaviourPun
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0x855804", Offset = "0x855804", VA = "0x855804")]
	public void SetOwnership()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x855884", Offset = "0x855884", VA = "0x855884")]
	public OwnershipChanger()
	{
	}
}
[Token(Token = "0x200002A")]
public class BeforeEnrollmentTournamentController : MonoBehaviourPun, ILobbyCallbacks
{
	[Token(Token = "0x200002B")]
	[CompilerGenerated]
	private sealed class <GetRejoinInformation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BE")]
			[Address(RVA = "0x857894", Offset = "0x857894", VA = "0x857894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0x8578DC", Offset = "0x8578DC", VA = "0x8578DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x8560E4", Offset = "0x8560E4", VA = "0x8560E4")]
		[DebuggerHidden]
		public <GetRejoinInformation>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x857764", Offset = "0x857764", VA = "0x857764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x857768", Offset = "0x857768", VA = "0x857768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x85789C", Offset = "0x85789C", VA = "0x85789C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002C")]
	[CompilerGenerated]
	private sealed class <PlanningRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C4")]
			[Address(RVA = "0x857A30", Offset = "0x857A30", VA = "0x857A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C6")]
			[Address(RVA = "0x857A78", Offset = "0x857A78", VA = "0x857A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x85640C", Offset = "0x85640C", VA = "0x85640C")]
		[DebuggerHidden]
		public <PlanningRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x8578E4", Offset = "0x8578E4", VA = "0x8578E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x8578E8", Offset = "0x8578E8", VA = "0x8578E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x857A38", Offset = "0x857A38", VA = "0x857A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200002E")]
	[CompilerGenerated]
	private sealed class <JoinTournament>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0x858070", Offset = "0x858070", VA = "0x858070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x8580B8", Offset = "0x8580B8", VA = "0x8580B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x8573C0", Offset = "0x8573C0", VA = "0x8573C0")]
		[DebuggerHidden]
		public <JoinTournament>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x857C78", Offset = "0x857C78", VA = "0x857C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x857C7C", Offset = "0x857C7C", VA = "0x857C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x858078", Offset = "0x858078", VA = "0x858078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E6")]
	private const float secondsDelayOfPlanningRoutine = 30f;

	[Token(Token = "0x40000E7")]
	private const float secondsBetweenRejoinCall = 5f;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool shouldJoinTournamentAfterDisconnection;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ProjectSettings projectSettings;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Map tournamentMap;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text tournamentStateComponent;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text tournamentTime;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject joinButton;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentDatesGatherer;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject enrollmentWindow;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject disclaimerWindow;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject rejoinWindow;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RejoinDBController rejoinDB;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool isUsingCurrentRegion;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Arcade Realted")]
	[SerializeField]
	private RandomPlayerNameCore randomPlayerName;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private VivePortNameSetter nameSetter;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isAnyNextTournamentPlanned;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private CloudRegionCode regionCode;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool canRejoin;

	[Token(Token = "0x17000010")]
	private WaitForSeconds waitBetweenRejoinCall
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x85588C", Offset = "0x85588C", VA = "0x85588C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public CloudRegionCode RegionCode
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x8558EC", Offset = "0x8558EC", VA = "0x8558EC")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x8558F4", Offset = "0x8558F4", VA = "0x8558F4")]
		set
		{
		}
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x8558FC", Offset = "0x8558FC", VA = "0x8558FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x855F84", Offset = "0x855F84", VA = "0x855F84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x855F10", Offset = "0x855F10", VA = "0x855F10")]
	[IteratorStateMachine(typeof(<GetRejoinInformation>d__26))]
	private IEnumerator GetRejoinInformation()
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x85610C", Offset = "0x85610C", VA = "0x85610C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x856380", Offset = "0x856380", VA = "0x856380")]
	public static string GetNameOfRegion(CloudRegionCode value)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x855AF0", Offset = "0x855AF0", VA = "0x855AF0")]
	private static CloudRegionCode GetCurrentRegionCode()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x855E9C", Offset = "0x855E9C", VA = "0x855E9C")]
	[IteratorStateMachine(typeof(<PlanningRoutine>d__30))]
	private IEnumerator PlanningRoutine()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x856434", Offset = "0x856434", VA = "0x856434")]
	public void AcquireNextTournamentDateFromPlan()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x856798", Offset = "0x856798", VA = "0x856798")]
	private void OnTournamentInformation(bool _canRejoin)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x856694", Offset = "0x856694", VA = "0x856694")]
	private List<DateTime> GetNextTournamentDates(List<DateTime> tournamentDates)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x8564F0", Offset = "0x8564F0", VA = "0x8564F0")]
	private List<DateTime> GetTournamentDatesAvailableForCurrentRegion()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x856110", Offset = "0x856110", VA = "0x856110")]
	private void UpdateWindowContentBasedOnCurrentTime()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x856BB0", Offset = "0x856BB0", VA = "0x856BB0")]
	private void OpenEnrollmentWindow()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x856FF4", Offset = "0x856FF4", VA = "0x856FF4")]
	private void OpenRejoinWindow()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x856BE8", Offset = "0x856BE8", VA = "0x856BE8")]
	private static string GetTextForTimeLeftForEnrollment()
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8567A4", Offset = "0x8567A4", VA = "0x8567A4")]
	private static string GetTextForTimeLeftToNextTournament()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x857040", Offset = "0x857040", VA = "0x857040")]
	public void ReactOnJoinButtonPressed()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x8570F0", Offset = "0x8570F0", VA = "0x8570F0")]
	private void CheckArcadeNickNameBeforeChoosing()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8572A8", Offset = "0x8572A8", VA = "0x8572A8")]
	private void TryJoinTournamentAfterPopUp()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x85726C", Offset = "0x85726C", VA = "0x85726C")]
	private void TryToConnectToRoom()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x85734C", Offset = "0x85734C", VA = "0x85734C")]
	[IteratorStateMachine(typeof(<JoinTournament>d__44))]
	private IEnumerator JoinTournament()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x8573E8", Offset = "0x8573E8", VA = "0x8573E8")]
	private void TryToUpdateRegion()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x8574AC", Offset = "0x8574AC", VA = "0x8574AC", Slot = "4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x857604", Offset = "0x857604", VA = "0x857604", Slot = "5")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x857608", Offset = "0x857608", VA = "0x857608", Slot = "6")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x85760C", Offset = "0x85760C", VA = "0x85760C", Slot = "7")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x857610", Offset = "0x857610", VA = "0x857610")]
	public BeforeEnrollmentTournamentController()
	{
	}
}
[Token(Token = "0x200002F")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x8580C0", Offset = "0x8580C0", VA = "0x8580C0")]
	public void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x8580C4", Offset = "0x8580C4", VA = "0x8580C4")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x85811C", Offset = "0x85811C", VA = "0x85811C")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x2000030")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x858124", Offset = "0x858124", VA = "0x858124")]
	public void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x858230", Offset = "0x858230", VA = "0x858230")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x858264", Offset = "0x858264", VA = "0x858264")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x858330", Offset = "0x858330", VA = "0x858330")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x8583FC", Offset = "0x8583FC", VA = "0x8583FC")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000031")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x858418", Offset = "0x858418", VA = "0x858418")]
	public void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x858B50", Offset = "0x858B50", VA = "0x858B50")]
	public void Update()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x859260", Offset = "0x859260", VA = "0x859260")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x859294", Offset = "0x859294", VA = "0x859294")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x8584FC", Offset = "0x8584FC", VA = "0x8584FC")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x8587F8", Offset = "0x8587F8", VA = "0x8587F8")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x858AFC", Offset = "0x858AFC", VA = "0x858AFC")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x8586FC", Offset = "0x8586FC", VA = "0x8586FC")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x858BAC", Offset = "0x858BAC", VA = "0x858BAC")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x858C04", Offset = "0x858C04", VA = "0x858C04")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x858D14", Offset = "0x858D14", VA = "0x858D14")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x859584", Offset = "0x859584", VA = "0x859584")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x859008", Offset = "0x859008", VA = "0x859008")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x858654", Offset = "0x858654", VA = "0x858654")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x859B00", Offset = "0x859B00", VA = "0x859B00")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x859340", Offset = "0x859340", VA = "0x859340")]
	public void Flap()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x858738", Offset = "0x858738", VA = "0x858738")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x859BC0", Offset = "0x859BC0", VA = "0x859BC0")]
	public void Soar()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x859C50", Offset = "0x859C50", VA = "0x859C50")]
	public void Dive()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x859FEC", Offset = "0x859FEC", VA = "0x859FEC")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x85A330", Offset = "0x85A330", VA = "0x85A330")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000032")]
[RequireComponent(typeof(AudioSource))]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x85A354", Offset = "0x85A354", VA = "0x85A354")]
	public void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x85A46C", Offset = "0x85A46C", VA = "0x85A46C")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x85A670", Offset = "0x85A670", VA = "0x85A670")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x85A76C", Offset = "0x85A76C", VA = "0x85A76C")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000033")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x85A790", Offset = "0x85A790", VA = "0x85A790")]
	public void Start()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x85A888", Offset = "0x85A888", VA = "0x85A888")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x85AB3C", Offset = "0x85AB3C", VA = "0x85AB3C")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x85AB8C", Offset = "0x85AB8C", VA = "0x85AB8C")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x85AC94", Offset = "0x85AC94", VA = "0x85AC94")]
	public void Update()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x85A9DC", Offset = "0x85A9DC", VA = "0x85A9DC")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x85ACF8", Offset = "0x85ACF8", VA = "0x85ACF8")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x85AD88", Offset = "0x85AD88", VA = "0x85AD88")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x859414", Offset = "0x859414", VA = "0x859414")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x85AF70", Offset = "0x85AF70", VA = "0x85AF70")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x85B07C", Offset = "0x85B07C", VA = "0x85B07C")]
	public FlockController()
	{
	}
}
[Token(Token = "0x2000034")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x85B1E0", Offset = "0x85B1E0", VA = "0x85B1E0")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x85B2B0", Offset = "0x85B2B0", VA = "0x85B2B0")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x85B364", Offset = "0x85B364", VA = "0x85B364")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x85B4A8", Offset = "0x85B4A8", VA = "0x85B4A8")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x85B530", Offset = "0x85B530", VA = "0x85B530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x85B5A4", Offset = "0x85B5A4", VA = "0x85B5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x85B5F0", Offset = "0x85B5F0", VA = "0x85B5F0")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x2000035")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x85B608", Offset = "0x85B608", VA = "0x85B608")]
	public void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x85B700", Offset = "0x85B700", VA = "0x85B700")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x85B71C", Offset = "0x85B71C", VA = "0x85B71C")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x2000036")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x85B72C", Offset = "0x85B72C", VA = "0x85B72C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x85BCA4", Offset = "0x85BCA4", VA = "0x85BCA4")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x2000037")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000038")]
	[CompilerGenerated]
	private sealed class <GetFlockChild>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000117")]
			[Address(RVA = "0x85D7C0", Offset = "0x85D7C0", VA = "0x85D7C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0x85D808", Offset = "0x85D808", VA = "0x85D808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x85CA78", Offset = "0x85CA78", VA = "0x85CA78")]
		[DebuggerHidden]
		public <GetFlockChild>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x85D08C", Offset = "0x85D08C", VA = "0x85D08C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x85D090", Offset = "0x85D090", VA = "0x85D090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x85D7C8", Offset = "0x85D7C8", VA = "0x85D7C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x85BCB4", Offset = "0x85BCB4", VA = "0x85BCB4")]
	public void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x85BE78", Offset = "0x85BE78", VA = "0x85BE78")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x85C268", Offset = "0x85C268", VA = "0x85C268")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x85CA0C", Offset = "0x85CA0C", VA = "0x85CA0C")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x85C848", Offset = "0x85C848", VA = "0x85C848")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x85BDF0", Offset = "0x85BDF0", VA = "0x85BDF0")]
	[IteratorStateMachine(typeof(<GetFlockChild>d__12))]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x85CAA0", Offset = "0x85CAA0", VA = "0x85CAA0")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x85CDF0", Offset = "0x85CDF0", VA = "0x85CDF0")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x85D084", Offset = "0x85D084", VA = "0x85D084")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x2000039")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x200003A")]
	[CompilerGenerated]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000124")]
			[Address(RVA = "0x85DE48", Offset = "0x85DE48", VA = "0x85DE48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000126")]
			[Address(RVA = "0x85DE90", Offset = "0x85DE90", VA = "0x85DE90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0x85DC24", Offset = "0x85DC24", VA = "0x85DC24")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x85DCC4", Offset = "0x85DCC4", VA = "0x85DCC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x85DCC8", Offset = "0x85DCC8", VA = "0x85DCC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x85DE50", Offset = "0x85DE50", VA = "0x85DE50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003B")]
	[CompilerGenerated]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012A")]
			[Address(RVA = "0x85E01C", Offset = "0x85E01C", VA = "0x85E01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012C")]
			[Address(RVA = "0x85E064", Offset = "0x85E064", VA = "0x85E064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x85DC4C", Offset = "0x85DC4C", VA = "0x85DC4C")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x85DE98", Offset = "0x85DE98", VA = "0x85DE98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x85DE9C", Offset = "0x85DE9C", VA = "0x85DE9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x85E024", Offset = "0x85E024", VA = "0x85E024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x85D810", Offset = "0x85D810", VA = "0x85D810")]
	public void Start()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x85B49C", Offset = "0x85B49C", VA = "0x85B49C")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x85DADC", Offset = "0x85DADC", VA = "0x85DADC")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x85BB00", Offset = "0x85BB00", VA = "0x85BB00")]
	public void LandAll()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x85DA58", Offset = "0x85DA58", VA = "0x85DA58")]
	[IteratorStateMachine(typeof(<InstantLandOnStart>d__22))]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x85BC20", Offset = "0x85BC20", VA = "0x85BC20")]
	[IteratorStateMachine(typeof(<InstantLand>d__23))]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x85DC74", Offset = "0x85DC74", VA = "0x85DC74")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x200003C")]
public class DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentNomber;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentInstance;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x85E06C", Offset = "0x85E06C", VA = "0x85E06C")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x85E1E0", Offset = "0x85E1E0", VA = "0x85E1E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x85E3DC", Offset = "0x85E3DC", VA = "0x85E3DC")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x85E590", Offset = "0x85E590", VA = "0x85E590")]
	public DemoGUI()
	{
	}
}
[Token(Token = "0x200003D")]
public class DemoReactivator : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x85E604", Offset = "0x85E604", VA = "0x85E604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x85E658", Offset = "0x85E658", VA = "0x85E658")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x85E720", Offset = "0x85E720", VA = "0x85E720")]
	public DemoReactivator()
	{
	}
}
[Token(Token = "0x200003E")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private sealed class <UpdateCorutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000141")]
			[Address(RVA = "0x85EE94", Offset = "0x85EE94", VA = "0x85EE94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000143")]
			[Address(RVA = "0x85EEDC", Offset = "0x85EEDC", VA = "0x85EEDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0x85EBAC", Offset = "0x85EBAC", VA = "0x85EBAC")]
		[DebuggerHidden]
		public <UpdateCorutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x85ED98", Offset = "0x85ED98", VA = "0x85ED98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x85ED9C", Offset = "0x85ED9C", VA = "0x85ED9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x85EE9C", Offset = "0x85EE9C", VA = "0x85EE9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInizialised;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int index;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int allCount;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float deltaFps;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isVisible;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isCorutineStarted;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer currentRenderer;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x85E730", Offset = "0x85E730", VA = "0x85E730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x85E7A4", Offset = "0x85E7A4", VA = "0x85E7A4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x85E9FC", Offset = "0x85E9FC", VA = "0x85E9FC")]
	private void Play()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x85EB00", Offset = "0x85EB00", VA = "0x85EB00")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x85EB20", Offset = "0x85EB20", VA = "0x85EB20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x85EB50", Offset = "0x85EB50", VA = "0x85EB50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x85EA8C", Offset = "0x85EA8C", VA = "0x85EA8C")]
	[IteratorStateMachine(typeof(<UpdateCorutine>d__21))]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x85EBD4", Offset = "0x85EBD4", VA = "0x85EBD4")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x85ECD8", Offset = "0x85ECD8", VA = "0x85ECD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x85ED78", Offset = "0x85ED78", VA = "0x85ED78")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x2000040")]
public class BloomController : MonoBehaviour
{
	[Token(Token = "0x2000041")]
	public enum RenderingOptions
	{
		[Token(Token = "0x40001B0")]
		StandardForward,
		[Token(Token = "0x40001B1")]
		DefferedHDRBloom
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RenderingOptions renderingOption;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera cameraToChange;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x85EEE4", Offset = "0x85EEE4", VA = "0x85EEE4")]
	public BloomController()
	{
	}
}
[Token(Token = "0x2000042")]
public class BowControllerContainer : MonoBehaviour
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BowController bowController;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x85EEEC", Offset = "0x85EEEC", VA = "0x85EEEC")]
	public BowControllerContainer()
	{
	}
}
[Token(Token = "0x2000043")]
public class BowModelInfo : MonoBehaviour
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> BowParts;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> BowAdditionalElements;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Bow;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject BowHandle;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer BowMesh;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer BowSkinnedMesh;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material BowMaterial;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> BowMenuParts;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> BowMenuAdditionalElements;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject BowMenu;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject BowMenuHandle;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer BowMenuMesh;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer BowMenuSkinnedMesh;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x85EEF4", Offset = "0x85EEF4", VA = "0x85EEF4")]
	internal void ShowModel()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x85F520", Offset = "0x85F520", VA = "0x85F520")]
	internal void HideModel()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x85F8F8", Offset = "0x85F8F8", VA = "0x85F8F8")]
	public BowModelInfo()
	{
	}
}
[Token(Token = "0x2000044")]
public class ShopItem : MonoBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemType equipmentItemType;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isStandard;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bowTransform;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bowTransformInSet;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BowModelInfo bowModelInfo;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HelmetModelInfo helmetModelInfo;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int cost;

	[Token(Token = "0x17000020")]
	public bool IsBought
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x85FA64", Offset = "0x85FA64", VA = "0x85FA64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000021")]
	public bool IsUsed
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x85FB10", Offset = "0x85FB10", VA = "0x85FB10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x85F900", Offset = "0x85F900", VA = "0x85F900")]
	public void ShowItemModel()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x85FA04", Offset = "0x85FA04", VA = "0x85FA04")]
	public void HideItemModel()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x85FB70", Offset = "0x85FB70", VA = "0x85FB70")]
	public ShopItem()
	{
	}
}
[Token(Token = "0x2000045")]
public class CanvasChacheController : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectWithText;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Text> texts;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x85FB78", Offset = "0x85FB78", VA = "0x85FB78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x85FE34", Offset = "0x85FE34", VA = "0x85FE34")]
	public CanvasChacheController()
	{
	}
}
[Token(Token = "0x2000046")]
public class CatapultEnemyHitController : MonoBehaviourPun
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float damage;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<EnemyGetHitController> hitEnemiesAlready;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x85FEBC", Offset = "0x85FEBC", VA = "0x85FEBC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8600C8", Offset = "0x8600C8", VA = "0x8600C8")]
	public CatapultEnemyHitController()
	{
	}
}
[Token(Token = "0x2000047")]
public class CatapultRockRemover : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x2000048")]
	[CompilerGenerated]
	private sealed class <DestroySelfOvertime>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultRockRemover <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0x861A14", Offset = "0x861A14", VA = "0x861A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x861A5C", Offset = "0x861A5C", VA = "0x861A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x8618B8", Offset = "0x8618B8", VA = "0x8618B8")]
		[DebuggerHidden]
		public <DestroySelfOvertime>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x8618E0", Offset = "0x8618E0", VA = "0x8618E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x8618E4", Offset = "0x8618E4", VA = "0x8618E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x861A1C", Offset = "0x861A1C", VA = "0x861A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CD")]
	private const float startShrinkValue = 0f;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rockGameObject;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeForStartFading;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeForFadeStep;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ParticleSystem> particleSystems;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<float> emissionValues;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float shrinkStep;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 defaultScale;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool shouldShrinkDown;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float shrinkValue;

	[Token(Token = "0x17000022")]
	private WaitForSeconds waitForStartFading
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x860158", Offset = "0x860158", VA = "0x860158")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	private WaitForSeconds waitForDestroy
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x8601C8", Offset = "0x8601C8", VA = "0x8601C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x860238", Offset = "0x860238", VA = "0x860238")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8604B0", Offset = "0x8604B0", VA = "0x8604B0")]
	public void DestroyRockDelayed()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x86065C", Offset = "0x86065C", VA = "0x86065C")]
	[IteratorStateMachine(typeof(<DestroySelfOvertime>d__17))]
	public IEnumerator DestroySelfOvertime()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8604DC", Offset = "0x8604DC", VA = "0x8604DC")]
	public void ChangeEmmissionByMultiplier(float emmissionMultiplier)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x860248", Offset = "0x860248", VA = "0x860248")]
	private void ShrinkDown()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x8606D0", Offset = "0x8606D0", VA = "0x8606D0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x860890", Offset = "0x860890", VA = "0x860890")]
	public CatapultRockRemover()
	{
	}
}
[Token(Token = "0x2000049")]
public class CollisionInfoController : MonoBehaviour
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collision collision;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x861A64", Offset = "0x861A64", VA = "0x861A64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x861B1C", Offset = "0x861B1C", VA = "0x861B1C")]
	public void StoreCollisionData(Collision collider)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x861B24", Offset = "0x861B24", VA = "0x861B24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x861B28", Offset = "0x861B28", VA = "0x861B28")]
	public void ResetCollisionInfoController()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x861BF0", Offset = "0x861BF0", VA = "0x861BF0")]
	public CollisionInfoController()
	{
	}
}
[Token(Token = "0x200004A")]
public static class ColorByEnumReader
{
	[Token(Token = "0x200004B")]
	public enum ColorEnum
	{
		[Token(Token = "0x40001DD")]
		red,
		[Token(Token = "0x40001DE")]
		green,
		[Token(Token = "0x40001DF")]
		blue,
		[Token(Token = "0x40001E0")]
		yellow,
		[Token(Token = "0x40001E1")]
		cyan,
		[Token(Token = "0x40001E2")]
		gray,
		[Token(Token = "0x40001E3")]
		black,
		[Token(Token = "0x40001E4")]
		white,
		[Token(Token = "0x40001E5")]
		orange,
		[Token(Token = "0x40001E6")]
		purple
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x861BF8", Offset = "0x861BF8", VA = "0x861BF8")]
	public static Color ReadColor(ColorEnum colorEnum)
	{
		return default(Color);
	}
}
[Token(Token = "0x200004C")]
public class DeathMatchTournamentScoreboadAdjuster : MonoBehaviour
{
	[Token(Token = "0x40001E7")]
	private const float alphaCoefficient = 0.3f;

	[Token(Token = "0x40001E8")]
	private const float darkerColorCoefficient = 0.6f;

	[Token(Token = "0x40001E9")]
	private const int defaultWinningPlayersCount = 2;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Image> underlineImages;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x861C3C", Offset = "0x861C3C", VA = "0x861C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x861C64", Offset = "0x861C64", VA = "0x861C64")]
	public void AdjustScoreboard()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x861CD8", Offset = "0x861CD8", VA = "0x861CD8")]
	private void AdjustScoreboardEntries(int winningPlayers)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x861E40", Offset = "0x861E40", VA = "0x861E40")]
	[ContextMenu("TestAdjuster")]
	public void TestAdjuster()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x861F00", Offset = "0x861F00", VA = "0x861F00")]
	public DeathMatchTournamentScoreboadAdjuster()
	{
	}
}
[Token(Token = "0x200004E")]
public class DebugIDController : MonoBehaviour
{
	[Token(Token = "0x600016F")]
	[Address(RVA = "0x861F9C", Offset = "0x861F9C", VA = "0x861F9C")]
	[ContextMenu("Debug")]
	public void DebugID()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x8620A0", Offset = "0x8620A0", VA = "0x8620A0")]
	public DebugIDController()
	{
	}
}
[Token(Token = "0x200004F")]
public class DebugShapeDrawer : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	public enum ShapeToBeDrawn
	{
		[Token(Token = "0x40001F1")]
		cube,
		[Token(Token = "0x40001F2")]
		sphere,
		[Token(Token = "0x40001F3")]
		mesh,
		[Token(Token = "0x40001F4")]
		wireCube,
		[Token(Token = "0x40001F5")]
		wireSphere,
		[Token(Token = "0x40001F6")]
		wireMesh
	}

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Color shapeDebuggerColor;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ShapeToBeDrawn shapeToBeDrawn;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float objectToDrawScaleMultiplier;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x8620A8", Offset = "0x8620A8", VA = "0x8620A8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x8624AC", Offset = "0x8624AC", VA = "0x8624AC")]
	public DebugShapeDrawer()
	{
	}
}
[Token(Token = "0x2000051")]
public class Destroyer : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x8624BC", Offset = "0x8624BC", VA = "0x8624BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x862538", Offset = "0x862538", VA = "0x862538")]
	public Destroyer()
	{
	}
}
[Token(Token = "0x2000052")]
public class DevelopmentController : MonoBehaviour
{
	[Token(Token = "0x6000175")]
	[Address(RVA = "0x862540", Offset = "0x862540", VA = "0x862540")]
	public DevelopmentController()
	{
	}
}
[Token(Token = "0x2000053")]
public class DisplayGameVersionInSettings : MonoBehaviour
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x862548", Offset = "0x862548", VA = "0x862548")]
	private void Start()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x862610", Offset = "0x862610", VA = "0x862610")]
	public DisplayGameVersionInSettings()
	{
	}
}
[Token(Token = "0x2000054")]
public class DistortionParticleController : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer particleSystemRenderer;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentDuration;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color initialColor;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialValue;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x862618", Offset = "0x862618", VA = "0x862618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x86270C", Offset = "0x86270C", VA = "0x86270C")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x862790", Offset = "0x862790", VA = "0x862790")]
	private void SetMaterialProperties()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x862868", Offset = "0x862868", VA = "0x862868")]
	public DistortionParticleController()
	{
	}
}
[Token(Token = "0x2000055")]
public class DragonSpeedChanger : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dragonSpeed;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x86287C", Offset = "0x86287C", VA = "0x86287C")]
	public DragonSpeedChanger()
	{
	}
}
[Token(Token = "0x2000056")]
public class DropdownDebug : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Dropdown dropdown;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isShown;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x86288C", Offset = "0x86288C", VA = "0x86288C")]
	public void ToggleDropdown()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x8628D8", Offset = "0x8628D8", VA = "0x8628D8")]
	public DropdownDebug()
	{
	}
}
[Token(Token = "0x2000057")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x8628E0", Offset = "0x8628E0", VA = "0x8628E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x8629E0", Offset = "0x8629E0", VA = "0x8629E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x862AA0", Offset = "0x862AA0", VA = "0x862AA0")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x2000058")]
public class BowSoundController : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	private const int volumeMultiplier = 3;

	[Token(Token = "0x4000209")]
	private const float minPitch = 0.5f;

	[Token(Token = "0x400020A")]
	private const float maxPitch = 1f;

	[Token(Token = "0x400020B")]
	private const int stretchSpeedToPitchMultiplier = 3;

	[Token(Token = "0x400020C")]
	private const float minStrechSpeedForSlowStretchSound = 0.05f;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BowController bowController;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource BowStretchAudioSource;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip StretchSoundSlow;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip StretchSoundSlower;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float stretchSpeed;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isStretching;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float bowStretch;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float bowPreviousStretch;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x862AB4", Offset = "0x862AB4", VA = "0x862AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x862BB8", Offset = "0x862BB8", VA = "0x862BB8")]
	public BowSoundController()
	{
	}
}
[Token(Token = "0x2000059")]
public class EquipmentChanger : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000215")]
	private const EquipmentItemKey defaultBowKey = EquipmentItemKey.Bow_WoodenBow_Default;

	[Token(Token = "0x4000216")]
	private const EquipmentItemKey defaultHelmetKey = EquipmentItemKey.Helmet_Barbuta_default;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BowModelInfo> BowModelsInfo;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HelmetModelInfo> HelmetModelsInfo;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ItemsWithBonuses itemBonusesList;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerController playerController;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BowModelInfo _currentBowModelInfo;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HelmetModelInfo currentHelmetModelInfo;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string equipedHelmetName;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string equipedBowName;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isHelmetInitialized;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnHelmetInitialized;

	[Token(Token = "0x17000026")]
	private string EquipedHelmetName
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x862BC0", Offset = "0x862BC0", VA = "0x862BC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x862BC8", Offset = "0x862BC8", VA = "0x862BC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	private string EquipedBowName
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x862DE0", Offset = "0x862DE0", VA = "0x862DE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x862DE8", Offset = "0x862DE8", VA = "0x862DE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x862F04", Offset = "0x862F04", VA = "0x862F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x862F5C", Offset = "0x862F5C", VA = "0x862F5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x862FB4", Offset = "0x862FB4", VA = "0x862FB4")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x863054", Offset = "0x863054", VA = "0x863054")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x862FFC", Offset = "0x862FFC", VA = "0x862FFC")]
	public void InitEquip()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x863134", Offset = "0x863134", VA = "0x863134")]
	private void SetEquipedItemNames()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x863474", Offset = "0x863474", VA = "0x863474")]
	private void SetEquippedItemsBonuses()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x8630C4", Offset = "0x8630C4", VA = "0x8630C4")]
	private bool IsInGameEquipmentChanger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x863574", Offset = "0x863574", VA = "0x863574")]
	private BowModelInfo GetBowModel(string bowName)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x863664", Offset = "0x863664", VA = "0x863664")]
	private HelmetModelInfo GetHelmetModel(string helmetName)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x863754", Offset = "0x863754", VA = "0x863754")]
	public GameObject GetCurrentHelmet()
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x863770", Offset = "0x863770", VA = "0x863770")]
	public EquipmentItemKey GetCurrentBowItemKey()
	{
		return default(EquipmentItemKey);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x862E54", Offset = "0x862E54", VA = "0x862E54")]
	public void ChangeBow(string bowName)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x862C54", Offset = "0x862C54", VA = "0x862C54")]
	public void ChangeHelmet(string helmetName)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x8637D4", Offset = "0x8637D4", VA = "0x8637D4")]
	public bool IsEquipmentInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x863810", Offset = "0x863810", VA = "0x863810", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x863924", Offset = "0x863924", VA = "0x863924")]
	public EquipmentChanger()
	{
	}
}
[Token(Token = "0x200005C")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x200005D")]
	[CompilerGenerated]
	private sealed class <Explode>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuickStart <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A4")]
			[Address(RVA = "0x863CD8", Offset = "0x863CD8", VA = "0x863CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A6")]
			[Address(RVA = "0x863D20", Offset = "0x863D20", VA = "0x863D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x863B14", Offset = "0x863B14", VA = "0x863B14")]
		[DebuggerHidden]
		public <Explode>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x863B44", Offset = "0x863B44", VA = "0x863B44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x863B48", Offset = "0x863B48", VA = "0x863B48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x863CE0", Offset = "0x863CE0", VA = "0x863CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject g1;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject g2;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x863A34", Offset = "0x863A34", VA = "0x863A34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x863A38", Offset = "0x863A38", VA = "0x863A38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x863AA0", Offset = "0x863AA0", VA = "0x863AA0")]
	[IteratorStateMachine(typeof(<Explode>d__4))]
	private IEnumerator Explode()
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x863B3C", Offset = "0x863B3C", VA = "0x863B3C")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x200005E")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x863D28", Offset = "0x863D28", VA = "0x863D28")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x863D5C", Offset = "0x863D5C", VA = "0x863D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x863E2C", Offset = "0x863E2C", VA = "0x863E2C")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x200005F")]
public class ExplosionForcer : MonoBehaviour
{
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x863E34", Offset = "0x863E34", VA = "0x863E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x863EA0", Offset = "0x863EA0", VA = "0x863EA0")]
	public ExplosionForcer()
	{
	}
}
[Token(Token = "0x2000060")]
public class FFRControler : MonoBehaviour
{
	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x863EA8", Offset = "0x863EA8", VA = "0x863EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x863EAC", Offset = "0x863EAC", VA = "0x863EAC")]
	public FFRControler()
	{
	}
}
[Token(Token = "0x2000061")]
public class FireLightScript : MonoBehaviour
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minIntensity;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxIntensity;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light fireLight;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float random;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x863EB4", Offset = "0x863EB4", VA = "0x863EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x863F74", Offset = "0x863F74", VA = "0x863F74")]
	public FireLightScript()
	{
	}
}
[Token(Token = "0x2000062")]
public class FireArrowAttachPoint : MonoBehaviour
{
	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x863F88", Offset = "0x863F88", VA = "0x863F88")]
	public FireArrowAttachPoint()
	{
	}
}
[Token(Token = "0x2000063")]
public class FootstepsSoundBasedOnAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] audioClips;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minPitch;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxPitch;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x863F90", Offset = "0x863F90", VA = "0x863F90")]
	public void PlayFootstepsSound()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x863FA4", Offset = "0x863FA4", VA = "0x863FA4")]
	public void SetReferences(AudioSource _audioSource)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x863FAC", Offset = "0x863FAC", VA = "0x863FAC")]
	public FootstepsSoundBasedOnAnimationController()
	{
	}
}
[Token(Token = "0x2000064")]
public class ForceDirectionExploderController : MonoBehaviour
{
	[Token(Token = "0x14000001")]
	public event Action OnCollisionAction
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x863FC0", Offset = "0x863FC0", VA = "0x863FC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x86405C", Offset = "0x86405C", VA = "0x86405C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x8640F8", Offset = "0x8640F8", VA = "0x8640F8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x8641BC", Offset = "0x8641BC", VA = "0x8641BC")]
	public ForceDirectionExploderController()
	{
	}
}
[Token(Token = "0x2000065")]
public class FV_BranchRotation : MonoBehaviour
{
	[Token(Token = "0x2000066")]
	[CompilerGenerated]
	private sealed class <WindGen>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C6")]
			[Address(RVA = "0x864CD8", Offset = "0x864CD8", VA = "0x864CD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C8")]
			[Address(RVA = "0x864D20", Offset = "0x864D20", VA = "0x864D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x8645B8", Offset = "0x8645B8", VA = "0x8645B8")]
		[DebuggerHidden]
		public <WindGen>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x864C0C", Offset = "0x864C0C", VA = "0x864C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x864C10", Offset = "0x864C10", VA = "0x864C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x864CE0", Offset = "0x864CE0", VA = "0x864CE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000067")]
	[CompilerGenerated]
	private sealed class <BlowX>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001CC")]
			[Address(RVA = "0x864E10", Offset = "0x864E10", VA = "0x864E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001CE")]
			[Address(RVA = "0x864E58", Offset = "0x864E58", VA = "0x864E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x864654", Offset = "0x864654", VA = "0x864654")]
		[DebuggerHidden]
		public <BlowX>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x864D28", Offset = "0x864D28", VA = "0x864D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x864D2C", Offset = "0x864D2C", VA = "0x864D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x864E18", Offset = "0x864E18", VA = "0x864E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000068")]
	[CompilerGenerated]
	private sealed class <BlowY>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x864F48", Offset = "0x864F48", VA = "0x864F48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0x864F90", Offset = "0x864F90", VA = "0x864F90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x8646F0", Offset = "0x8646F0", VA = "0x8646F0")]
		[DebuggerHidden]
		public <BlowY>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x864E60", Offset = "0x864E60", VA = "0x864E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x864E64", Offset = "0x864E64", VA = "0x864E64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x864F50", Offset = "0x864F50", VA = "0x864F50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000069")]
	[CompilerGenerated]
	private sealed class <BlowZ>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D8")]
			[Address(RVA = "0x865080", Offset = "0x865080", VA = "0x865080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DA")]
			[Address(RVA = "0x8650C8", Offset = "0x8650C8", VA = "0x8650C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x86478C", Offset = "0x86478C", VA = "0x86478C")]
		[DebuggerHidden]
		public <BlowZ>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x864F98", Offset = "0x864F98", VA = "0x864F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x864F9C", Offset = "0x864F9C", VA = "0x864F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x865088", Offset = "0x865088", VA = "0x865088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006A")]
	[CompilerGenerated]
	private sealed class <PeriodicRandomUpdate>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x865208", Offset = "0x865208", VA = "0x865208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x865250", Offset = "0x865250", VA = "0x865250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x8647B4", Offset = "0x8647B4", VA = "0x8647B4")]
		[DebuggerHidden]
		public <PeriodicRandomUpdate>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x8650D0", Offset = "0x8650D0", VA = "0x8650D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x8650D4", Offset = "0x8650D4", VA = "0x8650D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x865210", Offset = "0x865210", VA = "0x865210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(10f)]
	[Tooltip("Distance from Main Camera to this branch, at which point branch movement will cease")]
	[Header("General Branch Controls")]
	public float stopSwayDistance;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Determines how profound branch movements will be during runtime")]
	public float WindStrength;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 2f)]
	[Tooltip("Used to control overall amount of wind applied to the branch: 0 = no wind at all. ")]
	public float WindDampening;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(10f)]
	[Header("Initial Branch Runtime Offset")]
	[Space(10f)]
	[Range(0f, 5f)]
	[Tooltip("At runtime, how much do you want to offset your original branch rotations? Can help to minimize identical trees.")]
	public float Offset_Amount;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum amount of time to wait before updating randomness")]
	[Space(10f)]
	[Header("Periodic Randomness Update")]
	[Range(0f, 3f)]
	[Space(10f)]
	public float Random_Range_Amount;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Minimum amount of time to wait before updating randomness")]
	public float RandomUpdate_Min;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Minimum amount of time to wait before updating randomness")]
	public float RandomUpdate_Max;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.1f)]
	[Header("Specific Wind Parameters")]
	[Space(10f)]
	public float X_Angle;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-1f, 1f)]
	public float X_Period;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 0.1f)]
	public float Y_Angle;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(-1f, 1f)]
	public float Y_Period;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 0.1f)]
	public float Z_Angle;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(-1f, 1f)]
	public float Z_Period;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float levelWindFrequency;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float Angle_Multipler;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float Period_Multipler;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float GlobalWindX;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float GlobalWindY;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float GlobalWindZ;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _Time;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int RandomSeeder;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float RandomRanger;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float rand1;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rand2;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float WindRandomness;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float Xphase;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float Yphase;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float Zphase;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float xSpeedStart;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float ySpeedStart;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float zSpeedStart;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float originalX;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float originalY;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float originalZ;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 originalBranchRotation;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x8641C4", Offset = "0x8641C4", VA = "0x8641C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x864544", Offset = "0x864544", VA = "0x864544")]
	[IteratorStateMachine(typeof(<WindGen>d__36))]
	private IEnumerator WindGen()
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x8645E0", Offset = "0x8645E0", VA = "0x8645E0")]
	[IteratorStateMachine(typeof(<BlowX>d__37))]
	private IEnumerator BlowX()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x86467C", Offset = "0x86467C", VA = "0x86467C")]
	[IteratorStateMachine(typeof(<BlowY>d__38))]
	private IEnumerator BlowY()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x864718", Offset = "0x864718", VA = "0x864718")]
	[IteratorStateMachine(typeof(<BlowZ>d__39))]
	private IEnumerator BlowZ()
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x86444C", Offset = "0x86444C", VA = "0x86444C")]
	[IteratorStateMachine(typeof(<PeriodicRandomUpdate>d__40))]
	private IEnumerator PeriodicRandomUpdate()
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x8644C0", Offset = "0x8644C0", VA = "0x8644C0")]
	private void InitialRandomOffset()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x8647DC", Offset = "0x8647DC", VA = "0x8647DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x864AD4", Offset = "0x864AD4", VA = "0x864AD4")]
	private void PullBranchesBack()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x864A60", Offset = "0x864A60", VA = "0x864A60")]
	private void AnimateBranches()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x864BC0", Offset = "0x864BC0", VA = "0x864BC0")]
	public FV_BranchRotation()
	{
	}
}
[Token(Token = "0x200006B")]
public class FV_Wind : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("0 = No Shaking, 1 = Normal Shaking, 3 = Normal Shaking X 3")]
	[Range(0f, 3f)]
	[Space(10f)]
	[Header("Global Wind Parameters")]
	public float Wind_Intensity;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(1f, 3f)]
	[Tooltip("How much sway do you need in the branches? 1 = Normal, 3 = 3 times Normal")]
	[Space(10f)]
	public float Angle_Multipler;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(10f)]
	[Tooltip("How fast do the branches sway? 0.01 = Way too Fast, 1 = Normal")]
	[Range(0.01f, 1f)]
	public float Shake_Distance;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x865258", Offset = "0x865258", VA = "0x865258")]
	public FV_Wind()
	{
	}
}
[Token(Token = "0x200006C")]
public class FortuneReseter : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oculusFortuneResetBall;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x865278", Offset = "0x865278", VA = "0x865278")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x865354", Offset = "0x865354", VA = "0x865354")]
	public void ResetFortune()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x865358", Offset = "0x865358", VA = "0x865358")]
	public FortuneReseter()
	{
	}
}
[Token(Token = "0x200006D")]
public class FreezeColliderController : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x865360", Offset = "0x865360", VA = "0x865360")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x865394", Offset = "0x865394", VA = "0x865394")]
	public FreezeColliderController()
	{
	}
}
[Token(Token = "0x200006E")]
public class GiantTrollRock : MonoBehaviour
{
	[Token(Token = "0x200006F")]
	[CompilerGenerated]
	private sealed class <AnimateRockRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <rockRotationAxis>5__2;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <flyPathPosition>5__3;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0x8659D8", Offset = "0x8659D8", VA = "0x8659D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F3")]
			[Address(RVA = "0x865A20", Offset = "0x865A20", VA = "0x865A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x865558", Offset = "0x865558", VA = "0x865558")]
		[DebuggerHidden]
		public <AnimateRockRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x865760", Offset = "0x865760", VA = "0x865760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x865764", Offset = "0x865764", VA = "0x865764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x8659E0", Offset = "0x8659E0", VA = "0x8659E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000070")]
	[CompilerGenerated]
	private sealed class <ExplodeRockRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0x865D78", Offset = "0x865D78", VA = "0x865D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F9")]
			[Address(RVA = "0x865DC0", Offset = "0x865DC0", VA = "0x865DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x8655F4", Offset = "0x8655F4", VA = "0x8655F4")]
		[DebuggerHidden]
		public <ExplodeRockRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x865A28", Offset = "0x865A28", VA = "0x865A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x865A2C", Offset = "0x865A2C", VA = "0x865A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x865D80", Offset = "0x865D80", VA = "0x865D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000071")]
	[CompilerGenerated]
	private sealed class <DisappearFragmentsRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IReadOnlyCollection<Rigidbody> fragments;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <fragmentSize>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0x86619C", Offset = "0x86619C", VA = "0x86619C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FF")]
			[Address(RVA = "0x8661E4", Offset = "0x8661E4", VA = "0x8661E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x8656AC", Offset = "0x8656AC", VA = "0x8656AC")]
		[DebuggerHidden]
		public <DisappearFragmentsRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x865DC8", Offset = "0x865DC8", VA = "0x865DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x865DCC", Offset = "0x865DCC", VA = "0x865DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x8661A4", Offset = "0x8661A4", VA = "0x8661A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("General References")]
	private float rockSpeed;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rockSpin;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float explosionForce;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float disappearingRate;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fragmentsDisappearDelay;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrollRockSoundController trollRockSoundController;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem smokeParticleSystem;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("PC Quality References")]
	private List<Rigidbody> rockFragments;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Header("Mobile Quality References Settings")]
	private ParticleSystem explosionParticleSystem;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject MobileRock;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 throwPosition;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 arcTopPosition;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds rockFragmentsDisappearDelay;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x86539C", Offset = "0x86539C", VA = "0x86539C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x865414", Offset = "0x865414", VA = "0x865414")]
	public void Initialize(Quaternion rotation, Vector3 _throwPosition, Vector3 _targetPosition, Vector3 _arcTopPosition)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x8654E4", Offset = "0x8654E4", VA = "0x8654E4")]
	[IteratorStateMachine(typeof(<AnimateRockRoutine>d__16))]
	public IEnumerator AnimateRockRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x865580", Offset = "0x865580", VA = "0x865580")]
	[IteratorStateMachine(typeof(<ExplodeRockRoutine>d__17))]
	public IEnumerator ExplodeRockRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x86561C", Offset = "0x86561C", VA = "0x86561C")]
	[IteratorStateMachine(typeof(<DisappearFragmentsRoutine>d__18))]
	private IEnumerator DisappearFragmentsRoutine(IReadOnlyCollection<Rigidbody> fragments)
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x8656D4", Offset = "0x8656D4", VA = "0x8656D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x865740", Offset = "0x865740", VA = "0x865740")]
	public GiantTrollRock()
	{
	}
}
[Token(Token = "0x2000072")]
public class GlassPieceStayer : MonoBehaviour
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GlassPiecesToStaySet[] glassPiecesSets;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplodeObject explodeObject;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int randomNumber;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool done;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x8661EC", Offset = "0x8661EC", VA = "0x8661EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x8661F0", Offset = "0x8661F0", VA = "0x8661F0")]
	private void KeepFrozenPiecesSet()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x866348", Offset = "0x866348", VA = "0x866348")]
	public GlassPieceStayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000074")]
public class GlassPiecesToStaySet
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer[] piecesSet;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x866478", Offset = "0x866478", VA = "0x866478")]
	public GlassPiecesToStaySet()
	{
	}
}
[Token(Token = "0x2000075")]
public class HeadCollider : MonoBehaviourPun
{
	[Token(Token = "0x6000207")]
	[Address(RVA = "0x866480", Offset = "0x866480", VA = "0x866480")]
	public HeadCollider()
	{
	}
}
[Token(Token = "0x2000076")]
public class HelmetModelInfo : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x8637B0", Offset = "0x8637B0", VA = "0x8637B0")]
	internal void ShowModel()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x86378C", Offset = "0x86378C", VA = "0x86378C")]
	internal void HideModel()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x866488", Offset = "0x866488", VA = "0x866488")]
	public HelmetModelInfo()
	{
	}
}
[Token(Token = "0x2000077")]
public class IceExplosionParticlesController : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem orcExplosionParticleSystemFog;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem orcExplosionParticleSystemFragments;

	[Token(Token = "0x4000291")]
	private const float minRandomOffset = -1f;

	[Token(Token = "0x4000292")]
	private const float maxRandomOffset = 1f;

	[Token(Token = "0x4000293")]
	private const float heightFragmentsMultiplier = 2f;

	[Token(Token = "0x4000294")]
	private const float arrowFogDirectionMultiplier = 2f;

	[Token(Token = "0x4000295")]
	private const float fragmentsMultiplier = 5f;

	[Token(Token = "0x4000296")]
	private const int sizeComparisonCoefficient = 4;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x866490", Offset = "0x866490", VA = "0x866490")]
	public void AdjustFogParticles(Vector3 hitDirection)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x8666B4", Offset = "0x8666B4", VA = "0x8666B4")]
	public void AdjustFragmentParticles(Vector3 hitDirection)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x866648", Offset = "0x866648", VA = "0x866648")]
	private static bool DifferenceBetweenAxesIsSmallEnough(Vector3 hitDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x866664", Offset = "0x866664", VA = "0x866664")]
	private static void RandomizeOneAxis(Vector3 hitDirection, ref ParticleSystem.MinMaxCurve minMaxCurveX, ref ParticleSystem.MinMaxCurve minMaxCurveZ)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x8668D4", Offset = "0x8668D4", VA = "0x8668D4")]
	public void SetReferences(ParticleSystem _orcExplosionParticleSystemFog, ParticleSystem _orcExplosionParticleSystemFragments)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x866904", Offset = "0x866904", VA = "0x866904")]
	public IceExplosionParticlesController()
	{
	}
}
[Token(Token = "0x2000078")]
public class IceShieldCollision : MonoBehaviour
{
	[Token(Token = "0x6000211")]
	[Address(RVA = "0x86690C", Offset = "0x86690C", VA = "0x86690C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x866A18", Offset = "0x866A18", VA = "0x866A18")]
	public IceShieldCollision()
	{
	}
}
[Token(Token = "0x2000079")]
public class IceShieldShards : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem shards;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform center;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x866A20", Offset = "0x866A20", VA = "0x866A20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x866AE4", Offset = "0x866AE4", VA = "0x866AE4")]
	public IceShieldShards()
	{
	}
}
[Token(Token = "0x200007A")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x6000215")]
	[Address(RVA = "0x866AEC", Offset = "0x866AEC", VA = "0x866AEC")]
	public void OnPreRender()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x866B30", Offset = "0x866B30", VA = "0x866B30")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x866B74", Offset = "0x866B74", VA = "0x866B74")]
	public Test()
	{
	}
}
[Token(Token = "0x200007B")]
public class WFXDemoGUI : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	public struct HSBColor
	{
		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x867D10", Offset = "0x867D10", VA = "0x867D10")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light Sun;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] Weapons;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture HUETexture;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentNomber;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentInstance;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float oldIntensity;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldAmbientColor;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float dpiScale;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isDay;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float colorHUE;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentWeaponNomber;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentWeaponInstance;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x866B7C", Offset = "0x866B7C", VA = "0x866B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x867068", Offset = "0x867068", VA = "0x867068")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x866D08", Offset = "0x866D08", VA = "0x866D08")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x867B2C", Offset = "0x867B2C", VA = "0x867B2C")]
	private Color Hue(float H)
	{
		return default(Color);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x867C20", Offset = "0x867C20", VA = "0x867C20")]
	public HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x867D1C", Offset = "0x867D1C", VA = "0x867D1C")]
	public Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x867ED8", Offset = "0x867ED8", VA = "0x867ED8")]
	private Material SetMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x8676C4", Offset = "0x8676C4", VA = "0x8676C4")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x867F88", Offset = "0x867F88", VA = "0x867F88")]
	public WFXDemoGUI()
	{
	}
}
[Token(Token = "0x200007D")]
public class WFX_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x867FFC", Offset = "0x867FFC", VA = "0x867FFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x86807C", Offset = "0x86807C", VA = "0x86807C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x8680F0", Offset = "0x8680F0", VA = "0x8680F0")]
	public WFX_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200007E")]
public class WFX_FPS : MonoBehaviour
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x8680F8", Offset = "0x8680F8", VA = "0x8680F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x868148", Offset = "0x868148", VA = "0x868148")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x868240", Offset = "0x868240", VA = "0x868240")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x868294", Offset = "0x868294", VA = "0x868294")]
	public WFX_FPS()
	{
	}
}
[Token(Token = "0x200007F")]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x868308", Offset = "0x868308", VA = "0x868308")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x867B04", Offset = "0x867B04", VA = "0x867B04")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x868328", Offset = "0x868328", VA = "0x868328")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x868528", Offset = "0x868528", VA = "0x868528")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x8686DC", Offset = "0x8686DC", VA = "0x8686DC")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, WFX_MeshMaterialEffect meshMatEff, bool isFirst)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x868888", Offset = "0x868888", VA = "0x868888")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000080")]
internal class WFXSpriteSheetAnimation : MonoBehaviour
{
	[Token(Token = "0x2000081")]
	[CompilerGenerated]
	private sealed class <UpdateCorutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFXSpriteSheetAnimation <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600023D")]
			[Address(RVA = "0x869278", Offset = "0x869278", VA = "0x869278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600023F")]
			[Address(RVA = "0x8692C0", Offset = "0x8692C0", VA = "0x8692C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x868C58", Offset = "0x868C58", VA = "0x868C58")]
		[DebuggerHidden]
		public <UpdateCorutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x869120", Offset = "0x869120", VA = "0x869120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0x869124", Offset = "0x869124", VA = "0x869124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0x869280", Offset = "0x869280", VA = "0x869280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AnimationFPS;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartFrameOffset;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float StartDelay;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ShaderProperties;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInizialised;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int index;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int allCount;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationLifeTime;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isVisible;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isCorutineStarted;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WFX_MeshMaterialEffect wfxMeshMaterialEffect;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentInterpolatedTime;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float animationStartTime;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool animationStoped;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x868890", Offset = "0x868890", VA = "0x868890")]
	private void Start()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x868904", Offset = "0x868904", VA = "0x868904")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x868AA8", Offset = "0x868AA8", VA = "0x868AA8")]
	private void Play()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x868BAC", Offset = "0x868BAC", VA = "0x868BAC")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x868BCC", Offset = "0x868BCC", VA = "0x868BCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x868BFC", Offset = "0x868BFC", VA = "0x868BFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x868B38", Offset = "0x868B38", VA = "0x868B38")]
	[IteratorStateMachine(typeof(<UpdateCorutine>d__27))]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x868C80", Offset = "0x868C80", VA = "0x868C80")]
	private void UpdateFrame()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x868DD4", Offset = "0x868DD4", VA = "0x868DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x868F68", Offset = "0x868F68", VA = "0x868F68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x869008", Offset = "0x869008", VA = "0x869008")]
	public WFXSpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x2000082")]
public class WFX_LightCurves : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x8692C8", Offset = "0x8692C8", VA = "0x8692C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x86934C", Offset = "0x86934C", VA = "0x86934C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x869398", Offset = "0x869398", VA = "0x869398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x869424", Offset = "0x869424", VA = "0x869424")]
	public WFX_LightCurves()
	{
	}
}
[Token(Token = "0x2000083")]
public class WFX_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x86946C", Offset = "0x86946C", VA = "0x86946C")]
	public WFX_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000084")]
public class WFX_MobileDistortion : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	[CompilerGenerated]
	private sealed class <RepeatCameraMove>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_MobileDistortion <>4__this;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000251")]
			[Address(RVA = "0x86A030", Offset = "0x86A030", VA = "0x86A030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000253")]
			[Address(RVA = "0x86A078", Offset = "0x86A078", VA = "0x86A078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x869D1C", Offset = "0x869D1C", VA = "0x869D1C")]
		[DebuggerHidden]
		public <RepeatCameraMove>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x869FCC", Offset = "0x869FCC", VA = "0x869FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x869FD0", Offset = "0x869FD0", VA = "0x869FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x86A038", Offset = "0x86A038", VA = "0x86A038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000086")]
	[CompilerGenerated]
	private sealed class <RepeatCameraStatic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_MobileDistortion <>4__this;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0x86A0E4", Offset = "0x86A0E4", VA = "0x86A0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x86A12C", Offset = "0x86A12C", VA = "0x86A12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x869D44", Offset = "0x869D44", VA = "0x869D44")]
		[DebuggerHidden]
		public <RepeatCameraStatic>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x86A080", Offset = "0x86A080", VA = "0x86A080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x86A084", Offset = "0x86A084", VA = "0x86A084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x86A0EC", Offset = "0x86A0EC", VA = "0x86A0EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TextureScale;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureFormat RenderTextureFormat;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FilterMode FilterMode;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CullingMask;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderingPath RenderingPath;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int FPSWhenMoveCamera;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FPSWhenStaticCamera;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UseRealTime;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture renderTexture;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cameraInstance;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject goCamera;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 oldPosition;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion oldRotation;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform instanceCameraTransform;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canUpdateCamera;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isStaticUpdate;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds fpsMove;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForSeconds fpsStatic;

	[Token(Token = "0x40002E6")]
	private const int DropedFrames = 50;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCountWhenCameraIsStatic;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x869474", Offset = "0x869474", VA = "0x869474")]
	private void Start()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x869B60", Offset = "0x869B60", VA = "0x869B60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x869A78", Offset = "0x869A78", VA = "0x869A78")]
	[IteratorStateMachine(typeof(<RepeatCameraMove>d__22))]
	private IEnumerator RepeatCameraMove()
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x869AEC", Offset = "0x869AEC", VA = "0x869AEC")]
	[IteratorStateMachine(typeof(<RepeatCameraStatic>d__23))]
	private IEnumerator RepeatCameraStatic()
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x869D6C", Offset = "0x869D6C", VA = "0x869D6C")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x869DF4", Offset = "0x869DF4", VA = "0x869DF4")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x869598", Offset = "0x869598", VA = "0x869598")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x869E7C", Offset = "0x869E7C", VA = "0x869E7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x869F80", Offset = "0x869F80", VA = "0x869F80")]
	public WFX_MobileDistortion()
	{
	}
}
[Token(Token = "0x2000087")]
[ExecuteInEditMode]
public class WFX_Turbulence : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x4000305")]
		Position,
		[Token(Token = "0x4000306")]
		Velocity,
		[Token(Token = "0x4000307")]
		RelativePositionHalf,
		[Token(Token = "0x4000308")]
		RelativePosition
	}

	[Token(Token = "0x2000089")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x400030A")]
		UltraRealTime,
		[Token(Token = "0x400030B")]
		High,
		[Token(Token = "0x400030C")]
		Low
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TurbulenceByTime;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Frequency;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 Amplitude;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 GlobalForce;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastStopTime;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 currentOffset;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float deltaTime;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem particleSys;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float time;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int currentSplit;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float fpsTime;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int FPS;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int splitUpdate;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool skipFrame;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x86A134", Offset = "0x86A134", VA = "0x86A134")]
	private void Start()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x86A288", Offset = "0x86A288", VA = "0x86A288")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x86A218", Offset = "0x86A218", VA = "0x86A218")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x86A3D4", Offset = "0x86A3D4", VA = "0x86A3D4")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x86A980", Offset = "0x86A980", VA = "0x86A980")]
	public WFX_Turbulence()
	{
	}
}
[Token(Token = "0x200008A")]
public class LastFramePositionContainer : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 lastPosition;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool hasCreatedOnEnterEffect;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool hasCreaterOnExitEffect;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x86A9E8", Offset = "0x86A9E8", VA = "0x86A9E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x86AA18", Offset = "0x86AA18", VA = "0x86AA18")]
	public LastFramePositionContainer()
	{
	}
}
[Token(Token = "0x200008B")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x86AA20", Offset = "0x86AA20", VA = "0x86AA20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x86AADC", Offset = "0x86AADC", VA = "0x86AADC")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x200008C")]
public class LobbyContentSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oldLobby;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject newLobby;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController newServerListController;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ServerListController oldServerListController;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject smallTournamentCanvas;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject smallTournamentCanvasHolder;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject smallTournamentCanvasHolderMobile;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x86AB78", Offset = "0x86AB78", VA = "0x86AB78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x86ACFC", Offset = "0x86ACFC", VA = "0x86ACFC")]
	public LobbyContentSwitcher()
	{
	}
}
[Token(Token = "0x200008D")]
public static class LuxWaterUtils
{
	[Token(Token = "0x200008E")]
	public struct GersterWavesDescription
	{
		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 intensity;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 steepness;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 amp;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 freq;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector4 speed;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 dirAB;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector4 dirCD;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector4 secondaryWaveParams;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x86AD04", Offset = "0x86AD04", VA = "0x86AD04")]
	public static void GetGersterWavesDescription(ref GersterWavesDescription Description, Material WaterMaterial)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x86AEB4", Offset = "0x86AEB4", VA = "0x86AEB4")]
	public static Vector3 InternalGetGestnerDisplacement(Vector2 xzVtx, Vector4 intensity, Vector4 steepness, Vector4 amp, Vector4 freq, Vector4 speed, Vector4 dirAB, Vector4 dirCD, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x86B1AC", Offset = "0x86B1AC", VA = "0x86B1AC")]
	public static Vector3 GetGestnerDisplacement(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x86B378", Offset = "0x86B378", VA = "0x86B378")]
	public static Vector3 GetGestnerDisplacementSingle(Vector3 WorldPosition, GersterWavesDescription Description, float TimeOffset)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200008F")]
public class MainMenuTournamentResultsResetter : MonoBehaviour
{
	[Token(Token = "0x6000269")]
	[Address(RVA = "0x86B5D4", Offset = "0x86B5D4", VA = "0x86B5D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x86B5DC", Offset = "0x86B5DC", VA = "0x86B5DC")]
	public MainMenuTournamentResultsResetter()
	{
	}
}
[Token(Token = "0x2000090")]
public class MaterialsManager : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Material> defaultMaterials;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numberOfMeshes;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isDefaultMaterialAssigned;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> meshes;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material atlasMaterial;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x86B5E4", Offset = "0x86B5E4", VA = "0x86B5E4")]
	public void AssignDefaultMaterials()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x86B770", Offset = "0x86B770", VA = "0x86B770")]
	public void SetDefaultMaterial()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x86B834", Offset = "0x86B834", VA = "0x86B834")]
	public void SetAtlasMaterial()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x86B8BC", Offset = "0x86B8BC", VA = "0x86B8BC")]
	public MaterialsManager()
	{
	}
}
[Token(Token = "0x2000091")]
public class MaterialsManagerController : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MaterialsManager> materialsManagerItems;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x86B8C4", Offset = "0x86B8C4", VA = "0x86B8C4")]
	public void TestDefaultMaterials()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x86BA0C", Offset = "0x86BA0C", VA = "0x86BA0C")]
	public void TestAtlasMaterials()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x86BB54", Offset = "0x86BB54", VA = "0x86BB54")]
	public MaterialsManagerController()
	{
	}
}
[Token(Token = "0x2000092")]
public class ItemAnimator : MonoBehaviour
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIdle;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isLoading;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isShot;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isMoving;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource catapultAudio;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] catapultLoadingClips;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] catapultShotClips;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x86BB5C", Offset = "0x86BB5C", VA = "0x86BB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x86BBC4", Offset = "0x86BBC4", VA = "0x86BBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x86BBC8", Offset = "0x86BBC8", VA = "0x86BBC8")]
	private void State()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x86BF3C", Offset = "0x86BF3C", VA = "0x86BF3C")]
	public ItemAnimator()
	{
	}
}
[Token(Token = "0x2000093")]
public class MinimalSDKGameObjectDisabler : MonoBehaviour
{
	[Token(Token = "0x6000276")]
	[Address(RVA = "0x86BF44", Offset = "0x86BF44", VA = "0x86BF44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x86BF48", Offset = "0x86BF48", VA = "0x86BF48")]
	public MinimalSDKGameObjectDisabler()
	{
	}
}
[Token(Token = "0x2000094")]
public class MobileSkyboxController : MonoBehaviour
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject skybox;

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x86BF50", Offset = "0x86BF50", VA = "0x86BF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x86BFD4", Offset = "0x86BFD4", VA = "0x86BFD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x86C054", Offset = "0x86C054", VA = "0x86C054")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x86C0D4", Offset = "0x86C0D4", VA = "0x86C0D4")]
	private void MoveSkybox(Vector3 position)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x86C190", Offset = "0x86C190", VA = "0x86C190")]
	public MobileSkyboxController()
	{
	}
}
[Token(Token = "0x2000095")]
[ExecuteInEditMode]
public class rRotate_V1_Trees : MonoBehaviour
{
	[Token(Token = "0x600027D")]
	[Address(RVA = "0x86C198", Offset = "0x86C198", VA = "0x86C198")]
	private void _Transform()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x86C254", Offset = "0x86C254", VA = "0x86C254")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x86C258", Offset = "0x86C258", VA = "0x86C258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x86C25C", Offset = "0x86C25C", VA = "0x86C25C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x86C260", Offset = "0x86C260", VA = "0x86C260")]
	public rRotate_V1_Trees()
	{
	}
}
[Token(Token = "0x2000096")]
public class DAX_MainCamera_V1Trees : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Bushes;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text OutText;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int curIndex;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject curPrefab;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 c_OrbitVector;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float CameraRotationSpeed;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float cRotationMoment;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x86C268", Offset = "0x86C268", VA = "0x86C268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x86C3D4", Offset = "0x86C3D4", VA = "0x86C3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x86C4C4", Offset = "0x86C4C4", VA = "0x86C4C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x86C594", Offset = "0x86C594", VA = "0x86C594")]
	public void Next()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x86C5C8", Offset = "0x86C5C8", VA = "0x86C5C8")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x86C2C0", Offset = "0x86C2C0", VA = "0x86C2C0")]
	public void showPrefab(int index)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x86C5FC", Offset = "0x86C5FC", VA = "0x86C5FC")]
	public DAX_MainCamera_V1Trees()
	{
	}
}
[Token(Token = "0x2000097")]
[ExecuteInEditMode]
public class rRotate_V2_Trees : MonoBehaviour
{
	[Token(Token = "0x6000289")]
	[Address(RVA = "0x86C60C", Offset = "0x86C60C", VA = "0x86C60C")]
	private void _Transform()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x86C6C8", Offset = "0x86C6C8", VA = "0x86C6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x86C6CC", Offset = "0x86C6CC", VA = "0x86C6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x86C6D0", Offset = "0x86C6D0", VA = "0x86C6D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x86C6D4", Offset = "0x86C6D4", VA = "0x86C6D4")]
	public rRotate_V2_Trees()
	{
	}
}
[Token(Token = "0x2000098")]
public class MovingDirectionArrowController : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	public delegate void ReachedEnd(MovingDirectionArrowController mdac);

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierArrowFollower routeFollower;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject arrowModel;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x14000002")]
	public static event ReachedEnd OnEndReached
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x86C6DC", Offset = "0x86C6DC", VA = "0x86C6DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x86C794", Offset = "0x86C794", VA = "0x86C794")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x86C84C", Offset = "0x86C84C", VA = "0x86C84C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x86C8D8", Offset = "0x86C8D8", VA = "0x86C8D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x86C964", Offset = "0x86C964", VA = "0x86C964")]
	private void ReportReachedEnd()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x86C9E4", Offset = "0x86C9E4", VA = "0x86C9E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x86C9E8", Offset = "0x86C9E8", VA = "0x86C9E8")]
	public void FollowRoute()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x86CA20", Offset = "0x86CA20", VA = "0x86CA20")]
	public void Appear(bool shouldActivate)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x86CABC", Offset = "0x86CABC", VA = "0x86CABC")]
	public void Disappear(bool shouldDeactivate)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x86CB78", Offset = "0x86CB78", VA = "0x86CB78")]
	private void HideSelf()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x86CB98", Offset = "0x86CB98", VA = "0x86CB98")]
	private void DeactivateSelf()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x86CBBC", Offset = "0x86CBBC", VA = "0x86CBBC")]
	public MovingDirectionArrowController()
	{
	}
}
[Token(Token = "0x200009A")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Wind Speed in Kilometers per hour")]
	[Header("General Parameters")]
	public float WindSpeed;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Wind Turbulence in percentage of wind Speed")]
	[Range(0f, 2f)]
	public float Turbulence;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Texture used for wind turbulence")]
	[Header("Noise Parameters")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for bending trees")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for leaf shivering")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Gust Parameters")]
	[Tooltip("Texture used for wind gusts")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Size of one world tiling patch of the Gust Texture, for leaf shivering")]
	public float GustWorldSize;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Wind Gust Speed in Kilometers per hour")]
	public float GustSpeed;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Wind Gust Influence on trees")]
	public float GustScale;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x86CD1C", Offset = "0x86CD1C", VA = "0x86CD1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x86CEE0", Offset = "0x86CEE0", VA = "0x86CEE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x86CEE4", Offset = "0x86CEE4", VA = "0x86CEE4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x86CD20", Offset = "0x86CD20", VA = "0x86CD20")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x86CEE8", Offset = "0x86CEE8", VA = "0x86CEE8")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x86CFEC", Offset = "0x86CFEC", VA = "0x86CFEC")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x200009B")]
[RequireComponent(typeof(MeshFilter))]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> points;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distSmooth;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float uvScale;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmoothStart;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int currentSplatMap;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maximumTriangleSize;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float traingleDensity;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float height;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool lockHeight;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float yOffset;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float trianglesGenerated;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh currentMesh;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x86D020", Offset = "0x86D020", VA = "0x86D020")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x86D0F8", Offset = "0x86D0F8", VA = "0x86D0F8")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x86D344", Offset = "0x86D344", VA = "0x86D344")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x86D3C4", Offset = "0x86D3C4", VA = "0x86D3C4")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x86D440", Offset = "0x86D440", VA = "0x86D440")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x86D4AC", Offset = "0x86D4AC", VA = "0x86D4AC")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x86D648", Offset = "0x86D648", VA = "0x86D648")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x86E808", Offset = "0x86E808", VA = "0x86E808")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x86E5A8", Offset = "0x86E5A8", VA = "0x86E5A8")]
	private void DisplayCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x86E99C", Offset = "0x86E99C", VA = "0x86E99C")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x86EA18", Offset = "0x86EA18", VA = "0x86EA18")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x86EB20", Offset = "0x86EB20", VA = "0x86EB20")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x200009C")]
[CreateAssetMenu(fileName = "LakePolygonProfile", menuName = "LakePolygonProfile", order = 1)]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distSmooth;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float uvScale;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distSmoothStart;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentSplatMap;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maximumTriangleSize;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float traingleDensity;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int biomeType;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x86EDF4", Offset = "0x86EDF4", VA = "0x86EDF4")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x200009D")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x86F04C", Offset = "0x86F04C", VA = "0x86F04C")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x200009E")]
[RequireComponent(typeof(MeshFilter))]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool generateOnStart;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float minVal;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float maxVal;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float width;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int vertsInShape;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float traingleDensity;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float uvScale;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material oldMaterial;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool showVertexColors;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool showFlowMap;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool overrideFlowMap;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	public bool drawOnMesh;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	public bool uvScaleOverride;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	public bool debug;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color drawColor;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool drawOnMultiple;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float flowSpeed;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float flowDirection;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float opacity;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float drawSize;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float length;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float fulllength;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float minMaxWidth;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float uvWidth;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float uvBeginning;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public bool receiveShadows;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool generateMeshParts;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int meshPartsCount;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float simulatedRiverLength;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float simulationMinStepSize;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public int detailTerrain;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int detailTerrainForward;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float distSmooth;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float distSmoothStart;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int currentSplatMap;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x86F0BC", Offset = "0x86F0BC", VA = "0x86F0BC")]
	public void Start()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x86FF4C", Offset = "0x86FF4C", VA = "0x86FF4C")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x8700E0", Offset = "0x8700E0", VA = "0x8700E0")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x870490", Offset = "0x870490", VA = "0x870490")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x8708E8", Offset = "0x8708E8", VA = "0x8708E8")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x8708F0", Offset = "0x8708F0", VA = "0x8708F0")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x8709A4", Offset = "0x8709A4", VA = "0x8709A4")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x870A98", Offset = "0x870A98", VA = "0x870A98")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x870B04", Offset = "0x870B04", VA = "0x870B04")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x870DE4", Offset = "0x870DE4", VA = "0x870DE4")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x86F0CC", Offset = "0x86F0CC", VA = "0x86F0CC")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x8710C8", Offset = "0x8710C8", VA = "0x8710C8")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x87190C", Offset = "0x87190C", VA = "0x87190C")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x871BE4", Offset = "0x871BE4", VA = "0x871BE4")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x87503C", Offset = "0x87503C", VA = "0x87503C")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x87460C", Offset = "0x87460C", VA = "0x87460C")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x87434C", Offset = "0x87434C", VA = "0x87434C")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x8743C8", Offset = "0x8743C8", VA = "0x8743C8")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x8744D0", Offset = "0x8744D0", VA = "0x8744D0")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x8745C0", Offset = "0x8745C0", VA = "0x8745C0")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x871EB8", Offset = "0x871EB8", VA = "0x871EB8")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x875364", Offset = "0x875364", VA = "0x875364")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x8752EC", Offset = "0x8752EC", VA = "0x8752EC")]
	private float FlowCalculate(float u, float normalY)
	{
		return default(float);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x8763C8", Offset = "0x8763C8", VA = "0x8763C8")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x200009F")]
[CreateAssetMenu(fileName = "SplineProfile", menuName = "SplineProfile", order = 1)]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float distSmooth;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float distSmoothStart;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool receiveShadows;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int biomeType;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x93B400", Offset = "0x93B400", VA = "0x93B400")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x20000A0")]
public class OnJoinCanvasDisabler : MonoBehaviour
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject miniCanvasObjectToDisable;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x93B954", Offset = "0x93B954", VA = "0x93B954")]
	public void DisableCanvas()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x93B974", Offset = "0x93B974", VA = "0x93B974")]
	public OnJoinCanvasDisabler()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OrcIceBoltHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x93B97C", Offset = "0x93B97C", VA = "0x93B97C", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x93B9A8", Offset = "0x93B9A8", VA = "0x93B9A8", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x93BAB4", Offset = "0x93BAB4", VA = "0x93BAB4")]
	[PunRPC]
	private void RPCGetHitIceResistantIceCloud()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x93BAF4", Offset = "0x93BAF4", VA = "0x93BAF4")]
	public OrcIceBoltHitController()
	{
	}
}
[Token(Token = "0x20000A2")]
public class OrcNamer : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nameObject;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x93BAFC", Offset = "0x93BAFC", VA = "0x93BAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x93BB74", Offset = "0x93BB74", VA = "0x93BB74")]
	public OrcNamer()
	{
	}
}
[Token(Token = "0x20000A3")]
public class OrcOnBoatTracker : MonoBehaviour, IResetable
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OrcsLeftCounter orcCounter;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x93BB7C", Offset = "0x93BB7C", VA = "0x93BB7C")]
	public void IncreaseCounterOnDied(OrcsLeftCounter _orcCounter)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x93BC7C", Offset = "0x93BC7C", VA = "0x93BC7C")]
	public void UnsubscribeIncreasingCounter()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x93BD64", Offset = "0x93BD64", VA = "0x93BD64")]
	private void IncrementOrcsLeftCounter(HealthStateController _healthStateController)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x93BED0", Offset = "0x93BED0", VA = "0x93BED0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x93BFDC", Offset = "0x93BFDC", VA = "0x93BFDC")]
	public OrcOnBoatTracker()
	{
	}
}
[Token(Token = "0x20000A4")]
public class OrcsLeftCounter : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int howManyOrcsShouldLeave;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int orcCount;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OrcOnBoatTracker> countedOrcs;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action AllOrcsLeft;

	[Token(Token = "0x17000040")]
	public int OrcCount
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x93BFE4", Offset = "0x93BFE4", VA = "0x93BFE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x93BFEC", Offset = "0x93BFEC", VA = "0x93BFEC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x93C018", Offset = "0x93C018", VA = "0x93C018")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x93BD8C", Offset = "0x93BD8C", VA = "0x93BD8C")]
	public void IncrementOrcCount(OrcOnBoatTracker orcOnBoatTracker)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x93BF4C", Offset = "0x93BF4C", VA = "0x93BF4C")]
	public void RemoveOrcOnBoatTracker(OrcOnBoatTracker orcOnBoatTracker)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x93C0C4", Offset = "0x93C0C4", VA = "0x93C0C4")]
	public void SetHowManyOrcsShouldLeave(int howManyOrcsShouldLeave)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x93C0CC", Offset = "0x93C0CC", VA = "0x93C0CC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x93C190", Offset = "0x93C190", VA = "0x93C190", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x93C27C", Offset = "0x93C27C", VA = "0x93C27C")]
	public OrcsLeftCounter()
	{
	}
}
[Token(Token = "0x20000A5")]
[ExecuteInEditMode]
public class StonePortal_AxisRotateByTime : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotateAxis;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x93C304", Offset = "0x93C304", VA = "0x93C304")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x93C308", Offset = "0x93C308", VA = "0x93C308")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x93C364", Offset = "0x93C364", VA = "0x93C364")]
	public StonePortal_AxisRotateByTime()
	{
	}
}
[Token(Token = "0x20000A6")]
public class StonePortal_RandomMoves : MonoBehaviour
{
	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeMultipler;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RangeMultipler;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 StartPosition;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 RndArg1;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 RndArg2;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 RndArg3;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x93C380", Offset = "0x93C380", VA = "0x93C380")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x93C450", Offset = "0x93C450", VA = "0x93C450")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x93C584", Offset = "0x93C584", VA = "0x93C584")]
	public StonePortal_RandomMoves()
	{
	}
}
[Token(Token = "0x20000A7")]
[ExecuteInEditMode]
public class StonePortal_Turbulence : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Frequency;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 Amplitude;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 GlobalForce;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastStopTime;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 currentOffset;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float deltaTime;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem particleSys;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x93C59C", Offset = "0x93C59C", VA = "0x93C59C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x93C670", Offset = "0x93C670", VA = "0x93C670")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x93C8E4", Offset = "0x93C8E4", VA = "0x93C8E4")]
	public StonePortal_Turbulence()
	{
	}
}
[Token(Token = "0x20000A8")]
public class OwnerChanger : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x93C90C", Offset = "0x93C90C", VA = "0x93C90C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x93C9D0", Offset = "0x93C9D0", VA = "0x93C9D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x93CA28", Offset = "0x93CA28", VA = "0x93CA28", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x93CA2C", Offset = "0x93CA2C", VA = "0x93CA2C", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x93CAD4", Offset = "0x93CAD4", VA = "0x93CAD4", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x93CAD8", Offset = "0x93CAD8", VA = "0x93CAD8", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x93CADC", Offset = "0x93CADC", VA = "0x93CADC", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x93CAE0", Offset = "0x93CAE0", VA = "0x93CAE0")]
	public OwnerChanger()
	{
	}
}
[Token(Token = "0x20000A9")]
[RequireComponent(typeof(LineRenderer))]
public class ParabolaDrawer : MonoBehaviour
{
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform start;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform end;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float height;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int steps;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x93CAE8", Offset = "0x93CAE8", VA = "0x93CAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x93CCEC", Offset = "0x93CCEC", VA = "0x93CCEC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x93CB5C", Offset = "0x93CB5C", VA = "0x93CB5C")]
	public void DrawParabola(Vector3 start, Vector3 end, float height, int steps)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x93CD60", Offset = "0x93CD60", VA = "0x93CD60")]
	private Vector3 GetPointQuadraticBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x93CDD4", Offset = "0x93CDD4", VA = "0x93CDD4")]
	public ParabolaDrawer()
	{
	}
}
[Token(Token = "0x20000AA")]
public class PayloadOrcSpawnTimeDelayCalculator : EnemySpawnDelayCalculator
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float currentDelayBetweenSpawns;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float spawnDelayStep;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x93CDE8", Offset = "0x93CDE8", VA = "0x93CDE8", Slot = "4")]
	public override float CalculateSpawnDelayStep()
	{
		return default(float);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x93CDF8", Offset = "0x93CDF8", VA = "0x93CDF8", Slot = "5")]
	public override void InitializeSpawnDelayStep(int numberOfOrcsInWave, float minDelay, float MaxDelay)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x93CE0C", Offset = "0x93CE0C", VA = "0x93CE0C")]
	public PayloadOrcSpawnTimeDelayCalculator()
	{
	}
}
[Token(Token = "0x20000AB")]
public class PayloadWaveBreakTimeCalculator : WaveBreakTimeCalculator
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToNextWave;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x93CE14", Offset = "0x93CE14", VA = "0x93CE14", Slot = "4")]
	public override float CalculateWaveBreakTime(int waveNumber)
	{
		return default(float);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x93CE1C", Offset = "0x93CE1C", VA = "0x93CE1C")]
	public PayloadWaveBreakTimeCalculator()
	{
	}
}
[Token(Token = "0x20000AC")]
public class PayloadWavesSpawningConditions : WavesSpawningConditions
{
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PayloadStageController payloadStageController;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x93CE2C", Offset = "0x93CE2C", VA = "0x93CE2C", Slot = "5")]
	public override bool CheckIfShouldStillSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x93CE34", Offset = "0x93CE34", VA = "0x93CE34", Slot = "4")]
	public override bool CheckIfWaveSurvived(List<EnemyInfo> activeEnemies, bool isSpawningDone, bool waitingForNextWave, bool isWaveInitialized)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x93CF0C", Offset = "0x93CF0C", VA = "0x93CF0C")]
	public PayloadWavesSpawningConditions()
	{
	}
}
[Token(Token = "0x20000AD")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x93CF14", Offset = "0x93CF14", VA = "0x93CF14")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20000AE")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x93CFF4", Offset = "0x93CFF4", VA = "0x93CFF4")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x93D078", Offset = "0x93D078", VA = "0x93D078", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x93D394", Offset = "0x93D394", VA = "0x93D394")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20000AF")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x93D39C", Offset = "0x93D39C", VA = "0x93D39C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x93D4CC", Offset = "0x93D4CC", VA = "0x93D4CC")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000041")]
	public string UserName
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x93D4D4", Offset = "0x93D4D4", VA = "0x93D4D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x93D4DC", Offset = "0x93D4DC", VA = "0x93D4DC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x93D4E4", Offset = "0x93D4E4", VA = "0x93D4E4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x93D7A8", Offset = "0x93D7A8", VA = "0x93D7A8")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x93D93C", Offset = "0x93D93C", VA = "0x93D93C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x93D954", Offset = "0x93D954", VA = "0x93D954")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x93D96C", Offset = "0x93D96C", VA = "0x93D96C")]
	public void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x93DA3C", Offset = "0x93DA3C", VA = "0x93DA3C")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x93E538", Offset = "0x93E538", VA = "0x93E538")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x93DAD0", Offset = "0x93DAD0", VA = "0x93DAD0")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x93E5E8", Offset = "0x93E5E8", VA = "0x93E5E8")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x93E68C", Offset = "0x93E68C", VA = "0x93E68C", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x93E734", Offset = "0x93E734", VA = "0x93E734", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x93EA70", Offset = "0x93EA70", VA = "0x93EA70", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x93EA90", Offset = "0x93EA90", VA = "0x93EA90", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x93EB24", Offset = "0x93EB24", VA = "0x93EB24", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x93ECB8", Offset = "0x93ECB8", VA = "0x93ECB8")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x93E918", Offset = "0x93E918", VA = "0x93E918")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x93EE98", Offset = "0x93EE98", VA = "0x93EE98", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x93F2DC", Offset = "0x93F2DC", VA = "0x93F2DC", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x93F31C", Offset = "0x93F31C", VA = "0x93F31C", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x93F430", Offset = "0x93F430", VA = "0x93F430", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x93F770", Offset = "0x93F770", VA = "0x93F770", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x93F88C", Offset = "0x93F88C", VA = "0x93F88C", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x93F9A8", Offset = "0x93F9A8", VA = "0x93F9A8")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x93D0F0", Offset = "0x93D0F0", VA = "0x93D0F0")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x93FA94", Offset = "0x93FA94", VA = "0x93FA94")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x93FAD8", Offset = "0x93FAD8", VA = "0x93FAD8")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20000B1")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000042")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x93FC5C", Offset = "0x93FC5C", VA = "0x93FC5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x93EE74", Offset = "0x93EE74", VA = "0x93EE74")]
		set
		{
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x93FC80", Offset = "0x93FC80", VA = "0x93FC80")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x93F5F0", Offset = "0x93F5F0", VA = "0x93F5F0")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x93FCE4", Offset = "0x93FCE4", VA = "0x93FCE4")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20000B2")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000327")]
	[Address(RVA = "0x93FCEC", Offset = "0x93FCEC", VA = "0x93FCEC", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x93FD0C", Offset = "0x93FD0C", VA = "0x93FD0C")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20000B3")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x93FD14", Offset = "0x93FD14", VA = "0x93FD14")]
	public void Start()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x93FDE0", Offset = "0x93FDE0", VA = "0x93FDE0")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x93FE1C", Offset = "0x93FE1C", VA = "0x93FE1C")]
	public void StartChat()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x93FF00", Offset = "0x93FF00", VA = "0x93FF00")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20000B4")]
[RequireComponent(typeof(Renderer))]
[RequireComponent(typeof(PhotonView))]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x93FF08", Offset = "0x93FF08", VA = "0x93FF08")]
	private void Start()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x940064", Offset = "0x940064", VA = "0x940064")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x94010C", Offset = "0x94010C", VA = "0x94010C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20000B5")]
[RequireComponent(typeof(PhotonView))]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x940114", Offset = "0x940114", VA = "0x940114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x9401D8", Offset = "0x9401D8", VA = "0x9401D8")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20000B6")]
[RequireComponent(typeof(PhotonVoiceView))]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x9401E0", Offset = "0x9401E0", VA = "0x9401E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x940238", Offset = "0x940238", VA = "0x940238")]
	private void Update()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x940290", Offset = "0x940290", VA = "0x940290")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x940338", Offset = "0x940338", VA = "0x940338")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20000B7")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(Collider))]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x17000043")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x940340", Offset = "0x940340", VA = "0x940340")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x9403C4", Offset = "0x9403C4", VA = "0x9403C4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x940488", Offset = "0x940488", VA = "0x940488")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x94076C", Offset = "0x94076C", VA = "0x94076C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x9409C8", Offset = "0x9409C8", VA = "0x9409C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x940C64", Offset = "0x940C64", VA = "0x940C64")]
	private void Update()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x941290", Offset = "0x941290", VA = "0x941290")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B8")]
public class MouseLookHelper
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x941348", Offset = "0x941348", VA = "0x941348")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x941398", Offset = "0x941398", VA = "0x941398")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x9416D8", Offset = "0x9416D8", VA = "0x9416D8")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x94173C", Offset = "0x94173C", VA = "0x94173C")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x941768", Offset = "0x941768", VA = "0x941768", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x941864", Offset = "0x941864", VA = "0x941864", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x941960", Offset = "0x941960", VA = "0x941960")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PhotonRPCRefreshEditorHelper
{
	[Token(Token = "0x6000344")]
	[Address(RVA = "0x941968", Offset = "0x941968", VA = "0x941968")]
	public static void RefreshRPCs()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x941CE4", Offset = "0x941CE4", VA = "0x941CE4")]
	public static Type[] GetAllSubTypesInScripts(Type aBaseClass)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x941EF4", Offset = "0x941EF4", VA = "0x941EF4")]
	public PhotonRPCRefreshEditorHelper()
	{
	}
}
[Token(Token = "0x20000BB")]
public class PicoSettingsLogger : MonoBehaviour
{
	[Token(Token = "0x6000347")]
	[Address(RVA = "0x941EFC", Offset = "0x941EFC", VA = "0x941EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x9421A8", Offset = "0x9421A8", VA = "0x9421A8")]
	public PicoSettingsLogger()
	{
	}
}
[Token(Token = "0x20000BC")]
public class PlatformModelSelector : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject righthandedPlatform;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lefthandedPlatform;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject htcVivePlatform;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x9421B0", Offset = "0x9421B0", VA = "0x9421B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x942304", Offset = "0x942304", VA = "0x942304")]
	public PlatformModelSelector()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PlatformRotaterToCart : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierPoint closestPoint;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x94230C", Offset = "0x94230C", VA = "0x94230C")]
	public void SetRotationOfTeleport()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x942540", Offset = "0x942540", VA = "0x942540")]
	public void SetRotationOfTeleport(List<BezierPoint> allBezierPoints)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x942484", Offset = "0x942484", VA = "0x942484")]
	public void SetRotationOfTeleportFinal(Vector3 pointPos)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x942558", Offset = "0x942558", VA = "0x942558")]
	private Vector3 FindClosestCartPoint(List<BezierPoint> allBezierPoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x942324", Offset = "0x942324", VA = "0x942324")]
	private Vector3 FindClosestCartPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x942B24", Offset = "0x942B24", VA = "0x942B24")]
	public PlatformRotaterToCart()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PlayerJoiningScreenController : MonoBehaviourPun
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool shouldBeTurned;

	[Token(Token = "0x17000044")]
	public bool ShouldBeTurned
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x942B2C", Offset = "0x942B2C", VA = "0x942B2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x942B34", Offset = "0x942B34", VA = "0x942B34")]
		set
		{
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x942B98", Offset = "0x942B98", VA = "0x942B98")]
	public void TurnHandsOn()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x942BA0", Offset = "0x942BA0", VA = "0x942BA0")]
	public PlayerJoiningScreenController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ProjectileDistortionCollision : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	private const float timeToRemoveDistortionEffect = 5f;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject distortionEffect;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isInnerCollider;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask OuterColliderLayerMask;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x942BA8", Offset = "0x942BA8", VA = "0x942BA8")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x942C64", Offset = "0x942C64", VA = "0x942C64")]
	private void ReactOnArrowEnterCollider(Collider collision)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x942C74", Offset = "0x942C74", VA = "0x942C74")]
	private void TryToCreateOnEnterEffect(Collider collision)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x942EE4", Offset = "0x942EE4", VA = "0x942EE4")]
	private void CreateDistortionEffect(Collider collision)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x943068", Offset = "0x943068", VA = "0x943068")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x94311C", Offset = "0x94311C", VA = "0x94311C")]
	private void ReactOnArrowExitCollider(Collider collision)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x943194", Offset = "0x943194", VA = "0x943194")]
	private void TryToCreateOnExitEffect(Collider collision, LastFramePositionContainer lastFramePositionContainer)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x9431C0", Offset = "0x9431C0", VA = "0x9431C0")]
	public ProjectileDistortionCollision()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ProjectileGiantTrollSoundController : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClip> hitAudioClips;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float flyingSoundVolume;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float hitSoundVolume;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x9431C8", Offset = "0x9431C8", VA = "0x9431C8")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x943210", Offset = "0x943210", VA = "0x943210")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x9432C8", Offset = "0x9432C8", VA = "0x9432C8")]
	public ProjectileGiantTrollSoundController()
	{
	}
}
[Token(Token = "0x20000C1")]
public class RagdollEnabler : MonoBehaviour
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wyvernAlive;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wyvernDead;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x9432DC", Offset = "0x9432DC", VA = "0x9432DC")]
	public void EnableRagdollObjects()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x943314", Offset = "0x943314", VA = "0x943314")]
	public void ResetWyvernObjects()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x94342C", Offset = "0x94342C", VA = "0x94342C")]
	public RagdollEnabler()
	{
	}
}
[Token(Token = "0x20000C2")]
public class RagdollStateController : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float inertiaForce;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody inertiaRigidbody;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RigidbodyInfo> defaultRigidbodiesInfo;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TransformInfo> defaultTransformsInfo;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> allRigidbodies;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> allTransforms;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x943434", Offset = "0x943434", VA = "0x943434")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x943A94", Offset = "0x943A94", VA = "0x943A94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x9434E8", Offset = "0x9434E8", VA = "0x9434E8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x943728", Offset = "0x943728", VA = "0x943728")]
	private void GetDefaultValues()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x943A98", Offset = "0x943A98", VA = "0x943A98")]
	private void SetDefaultValues()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x943D10", Offset = "0x943D10", VA = "0x943D10")]
	public RagdollStateController()
	{
	}
}
[Token(Token = "0x20000C4")]
public class RainController : MonoBehaviour
{
	[Token(Token = "0x600036C")]
	[Address(RVA = "0x943F8C", Offset = "0x943F8C", VA = "0x943F8C")]
	public void InitializeWithPlayer(bool isLocalPlayer)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x944050", Offset = "0x944050", VA = "0x944050")]
	public RainController()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RandomPlayerName : RandomPlayerNameCore
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string[] adjectives;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] nouns;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x944058", Offset = "0x944058", VA = "0x944058")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x944064", Offset = "0x944064", VA = "0x944064", Slot = "4")]
	protected override void SetLocalizedStrings()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x944790", Offset = "0x944790", VA = "0x944790", Slot = "5")]
	public override string GetRandomPlayerNickText()
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x94485C", Offset = "0x94485C", VA = "0x94485C")]
	public RandomPlayerName()
	{
	}
}
[Token(Token = "0x20000C6")]
public class RejoinDBController : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	private const string urlQualifiedPlayersProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x4000447")]
	private const string urlQualifiedPlayersDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x4000448")]
	private const string urlQualifiedPlayersStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x4000449")]
	private const string urlCurrentTournamentProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/findtour?region={0}";

	[Token(Token = "0x400044A")]
	private const string urlCurrentTournamentDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/findtour?region={0}";

	[Token(Token = "0x400044B")]
	private const string urlCurrentTournamentStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/findtour?region={0}";

	[Token(Token = "0x400044C")]
	private const string urlSaveQualifiedPlayersProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x400044D")]
	private const string urlSaveQualifiedPlayersDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x400044E")]
	private const string urlSaveQualifiedPlayersStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x400044F")]
	private const string firstHeaderKey = "Content-Type";

	[Token(Token = "0x4000450")]
	private const string firstHeaderValue = "application/json";

	[Token(Token = "0x4000451")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x4000452")]
	private const string xApiKeyProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x4000453")]
	private const string xApiKeyStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x4000454")]
	private const string xApiKeyDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string storedRegion;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string localPlayerID;

	[Token(Token = "0x14000003")]
	public event Action<bool> OnTournamentRejoinInformation
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x944864", Offset = "0x944864", VA = "0x944864")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x944914", Offset = "0x944914", VA = "0x944914")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x9449C4", Offset = "0x9449C4", VA = "0x9449C4")]
	private string GetUrlSaveQualifiedPlayers(string region, string dt, string players)
	{
		return null;
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x944B74", Offset = "0x944B74", VA = "0x944B74")]
	private string GetUrlQualifiedPlayers(string region, string dt)
	{
		return null;
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x944D1C", Offset = "0x944D1C", VA = "0x944D1C")]
	private string GetUrlCurrentTournament(string region)
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x944EBC", Offset = "0x944EBC", VA = "0x944EBC")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x945040", Offset = "0x945040", VA = "0x945040")]
	public void CanRejoin(string region, string playerID)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x945080", Offset = "0x945080", VA = "0x945080")]
	private void RequestCurrentTournament(string region)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x94512C", Offset = "0x94512C", VA = "0x94512C")]
	private void RequestQualifiedPlayers(string region, string dt)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x9451E0", Offset = "0x9451E0", VA = "0x9451E0")]
	public void RequestSaveQualifiedPlayers(string region, string dt, string players)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x945378", Offset = "0x945378", VA = "0x945378")]
	private void OnHttpResponseReceivedSaveQualifiedPlayers(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x945440", Offset = "0x945440", VA = "0x945440")]
	private void OnHttpResponseReceivedCurrentTournament(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x9455DC", Offset = "0x9455DC", VA = "0x9455DC")]
	private void OnHttpResponseReceivedQualifiedPlayers(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x945758", Offset = "0x945758", VA = "0x945758")]
	public RejoinDBController()
	{
	}
}
[Token(Token = "0x20000C7")]
public class OculusLiveStart : MonoBehaviour
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x945760", Offset = "0x945760", VA = "0x945760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x945764", Offset = "0x945764", VA = "0x945764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x945768", Offset = "0x945768", VA = "0x945768")]
	public OculusLiveStart()
	{
	}
}
[Token(Token = "0x20000C8")]
public class RotateGameObject : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 rotationVector;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x945770", Offset = "0x945770", VA = "0x945770")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x9457C8", Offset = "0x9457C8", VA = "0x9457C8")]
	public RotateGameObject()
	{
	}
}
[Token(Token = "0x20000C9")]
public class RpgElementsWindowController : FirstWindowController
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0x9457E0", Offset = "0x9457E0", VA = "0x9457E0", Slot = "6")]
	public override bool CheckIfWindowShouldBeQueued()
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x9458AC", Offset = "0x9458AC", VA = "0x9458AC")]
	public RpgElementsWindowController()
	{
	}
}
[Token(Token = "0x20000CA")]
public class SalvaPlayerMicrophoneController : MonoBehaviourPun
{
	[Token(Token = "0x400045A")]
	private const float partOfOldVolumeValue = 0.95f;

	[Token(Token = "0x400045B")]
	private const float partOfNewVolumeValue = 0.05f;

	[Token(Token = "0x400045C")]
	private const float delayBetweenCalls = 0.5f;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Recorder recorder;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float howManyTimesShouldBeLouder;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float avgVolume;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<SalvaPlayerMicrophoneController> OnAudioLevelHigherThenAvg;

	[Token(Token = "0x17000045")]
	private WaitForSeconds waitBetweenCalls
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x9458B4", Offset = "0x9458B4", VA = "0x9458B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x945914", Offset = "0x945914", VA = "0x945914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x945AAC", Offset = "0x945AAC", VA = "0x945AAC")]
	public SalvaPlayerMicrophoneController()
	{
	}
}
[Token(Token = "0x20000CB")]
public class savemesh : MonoBehaviour
{
	[Token(Token = "0x600038A")]
	[Address(RVA = "0x945ABC", Offset = "0x945ABC", VA = "0x945ABC")]
	public savemesh()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ScalerOverTime : MonoBehaviour
{
	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private sealed class <ScaleSphereUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScalerOverTime <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000394")]
			[Address(RVA = "0x945E18", Offset = "0x945E18", VA = "0x945E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000396")]
			[Address(RVA = "0x945E60", Offset = "0x945E60", VA = "0x945E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x945C80", Offset = "0x945C80", VA = "0x945C80")]
		[DebuggerHidden]
		public <ScaleSphereUp>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x945CD8", Offset = "0x945CD8", VA = "0x945CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x945CDC", Offset = "0x945CDC", VA = "0x945CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x945E20", Offset = "0x945E20", VA = "0x945E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000CE")]
	[CompilerGenerated]
	private sealed class <ScaleSphereDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScalerOverTime <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600039A")]
			[Address(RVA = "0x945FC0", Offset = "0x945FC0", VA = "0x945FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600039C")]
			[Address(RVA = "0x946008", Offset = "0x946008", VA = "0x946008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x945CA8", Offset = "0x945CA8", VA = "0x945CA8")]
		[DebuggerHidden]
		public <ScaleSphereDown>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x945E68", Offset = "0x945E68", VA = "0x945E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x945E6C", Offset = "0x945E6C", VA = "0x945E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x945FC8", Offset = "0x945FC8", VA = "0x945FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000461")]
	private const float maxScale = 15f;

	[Token(Token = "0x4000462")]
	private const float minScale = 0.1f;

	[Token(Token = "0x4000463")]
	private const float shieldScaleDuration = 20f;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 maxLocalScale;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 minLocalScale;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentDuration;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x945AC4", Offset = "0x945AC4", VA = "0x945AC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x945B58", Offset = "0x945B58", VA = "0x945B58")]
	public void StartScaleUpRoutine()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x945BEC", Offset = "0x945BEC", VA = "0x945BEC")]
	public void StartScaleDownRoutine()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x945B78", Offset = "0x945B78", VA = "0x945B78")]
	[IteratorStateMachine(typeof(<ScaleSphereUp>d__9))]
	private IEnumerator ScaleSphereUp()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x945C0C", Offset = "0x945C0C", VA = "0x945C0C")]
	[IteratorStateMachine(typeof(<ScaleSphereDown>d__10))]
	public IEnumerator ScaleSphereDown()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x945CD0", Offset = "0x945CD0", VA = "0x945CD0")]
	public ScalerOverTime()
	{
	}
}
[Token(Token = "0x20000CF")]
public class AccelerateBlackHole : MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FX_Rotation[] Quads;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 scaleRange;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleTime;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float destroyTime;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bStartScale;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startScaleTime;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startTime;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x946010", Offset = "0x946010", VA = "0x946010")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x946154", Offset = "0x946154", VA = "0x946154")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x946030", Offset = "0x946030", VA = "0x946030")]
	private void ScaleAnim()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x9462A0", Offset = "0x9462A0", VA = "0x9462A0")]
	public AccelerateBlackHole()
	{
	}
}
[Token(Token = "0x20000D0")]
public static class AchivementsPrefs
{
	[Token(Token = "0x4000475")]
	private const string FiredArrowsKey = "FiredArrows";

	[Token(Token = "0x4000476")]
	private const string OrcKilledKey = "KilledOrcs";

	[Token(Token = "0x4000477")]
	private const string HeadShotsKey = "HeadShots";

	[Token(Token = "0x4000478")]
	private const string WindowShotsKey = "WindowShots";

	[Token(Token = "0x1700004A")]
	public static int FiredArrows
	{
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x9462C8", Offset = "0x9462C8", VA = "0x9462C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x94630C", Offset = "0x94630C", VA = "0x94630C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static int OrcKilled
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x946358", Offset = "0x946358", VA = "0x946358")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x94639C", Offset = "0x94639C", VA = "0x94639C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public static int HeadShots
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x9463E8", Offset = "0x9463E8", VA = "0x9463E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x94642C", Offset = "0x94642C", VA = "0x94642C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public static int WindowShots
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x946478", Offset = "0x946478", VA = "0x946478")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x9464BC", Offset = "0x9464BC", VA = "0x9464BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public static int PlayerExperience
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x946508", Offset = "0x946508", VA = "0x946508")]
		get
		{
			return default(int);
		}
	}
}
[Token(Token = "0x20000D1")]
public static class AnalyticsController
{
	[Token(Token = "0x4000479")]
	private const string chosenSpellsInfoEventKey = "ChosenSpellsInfo";

	[Token(Token = "0x400047A")]
	private const string joinedGameInfoEventKey = "JoinedGameInfo";

	[Token(Token = "0x400047B")]
	private const string joinedGameInfoByMapEventKey = "JoinedGameInfoByMap";

	[Token(Token = "0x400047C")]
	private const string setLocalServerCodeEventKey = "SetLocalServerCode";

	[Token(Token = "0x400047D")]
	private const string oneSessionStatsEventKey = "OneSessionStats";

	[Token(Token = "0x400047E")]
	private const string connectionFailInfoEventKey = "ConnectionFailInfo";

	[Token(Token = "0x400047F")]
	private const string lastLocalServerCodeChangeEventKey = "LastLocalServerCodeChange";

	[Token(Token = "0x4000480")]
	private const string totalNumberOfWavesPlayedEventKey = "TotalNumberOfPlayedWaves";

	[Token(Token = "0x4000481")]
	private const string arcadeSettingsInfoEventKey = "ArcadeSettingsInfo";

	[Token(Token = "0x4000482")]
	private const string gameOverStatsPersonalEventKey = "GameOverStatsPersonal";

	[Token(Token = "0x4000483")]
	private const string gameOverStatsArcadeEventKey = "GameOverStatsArcade";

	[Token(Token = "0x4000484")]
	private const string lowFpsEventKey = "LowFps";

	[Token(Token = "0x4000485")]
	private const string bigNetworkEventKey = "BigNetworkTraffic";

	[Token(Token = "0x4000486")]
	private const string joinTournamentDuringMatchConfirmationEventKey = "JoinTournamentDuringMatchConfirmation";

	[Token(Token = "0x4000487")]
	private const string platformInfoEventKey = "PlatformInfo";

	[Token(Token = "0x4000488")]
	private const string playedWavesDuringOneMapEventParameterKey = "WavesPlayedByMap";

	[Token(Token = "0x4000489")]
	private const string isUsingArcadeModeEventParameterKey = "IsArcadeModeEnabled";

	[Token(Token = "0x400048A")]
	private const string isUsingOldLeaderboardsEventParameterKey = "IsUsingOldLeaderboards";

	[Token(Token = "0x400048B")]
	private const string isUsingLocalServerEventParameterKey = "IsUsingLocalSettings";

	[Token(Token = "0x400048C")]
	private const string currentLanguageEventParameterKey = "CurrentLanguage";

	[Token(Token = "0x400048D")]
	private const string isUsingDefaultRegionEventParameterKey = "IsUsingDefaultRegion";

	[Token(Token = "0x400048E")]
	private const string defaultRegionCodeEventParameterKey = "DefaultRegionCode";

	[Token(Token = "0x400048F")]
	private const string modeEventParameterKey = "Mode";

	[Token(Token = "0x4000490")]
	private const string mapNameEventParameterKey = "Map";

	[Token(Token = "0x4000491")]
	private const string waveEventParameterKey = "Wave";

	[Token(Token = "0x4000492")]
	private const string trafficIncomingEventParameterKey = "Traffic incoming B/s";

	[Token(Token = "0x4000493")]
	private const string trafficOutgoingEventParameterKey = "Traffic outgoing B/s";

	[Token(Token = "0x4000494")]
	private const string fpsEventParameterKey = "AverageFps";

	[Token(Token = "0x4000495")]
	private const string joinTournamentDuringMatchIsConfirmedParameterKey = "IsConfirmed";

	[Token(Token = "0x4000496")]
	private const string gameVersionParameterKey = "GameVersion";

	[Token(Token = "0x4000497")]
	private const string chosenPlatformarameterKey = "ChosenPlatform";

	[Token(Token = "0x4000498")]
	private const int localServerCodeChangeDelay = 7;

	[Token(Token = "0x4000499")]
	private const string timePlayedSuffix = "TimePlayed";

	[Token(Token = "0x400049A")]
	private const string levelReachedSuffix = "LevelReached";

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int openingSpellRangeValue;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int closingSpellRangeValue;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<int> spellsRequirmentRange;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x94650C", Offset = "0x94650C", VA = "0x94650C")]
	public static void SendArcadeSettingsInfo()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x946ABC", Offset = "0x946ABC", VA = "0x946ABC")]
	public static void SendChosenSpell(AbilityType spellType)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x9471D0", Offset = "0x9471D0", VA = "0x9471D0")]
	public static void SendGameOverStats(MapNames mapName)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x947500", Offset = "0x947500", VA = "0x947500")]
	public static void SendJoinedGameInfo(MapNames mapName)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x947724", Offset = "0x947724", VA = "0x947724")]
	public static void SendOneSessionStats(int numbOfWaves)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x947824", Offset = "0x947824", VA = "0x947824")]
	public static void SendPlayedWavesDuringOneMap(int numberOfWavesPlayed, MapNames mapName)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x947950", Offset = "0x947950", VA = "0x947950")]
	public static void SendOnConnectionFailInfo(int disconnectCause)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x947BAC", Offset = "0x947BAC", VA = "0x947BAC")]
	public static void SendLocalServerCode()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x947D24", Offset = "0x947D24", VA = "0x947D24")]
	public static void SendGameVersion(string gameVersion)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x947DF4", Offset = "0x947DF4", VA = "0x947DF4")]
	public static void SendPlatformTarget(string platformTarget)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x947EC4", Offset = "0x947EC4", VA = "0x947EC4")]
	public static void SendLowFpsEvent(MapNames mapName, int waveIndex, float averageFps)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x948084", Offset = "0x948084", VA = "0x948084")]
	public static void SendBigTrafficEvent(MapNames mapName, int waveIndex, float bytesIncomingPerSecond, float bytesOutgoingPerSecond)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x948280", Offset = "0x948280", VA = "0x948280")]
	public static void SendJoinTournamentDuringMatchConfirmationEvent(bool isConfirmed)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x947484", Offset = "0x947484", VA = "0x947484")]
	private static string GetEventParameterKey(MapNames mapName, string eventSuffix)
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x946C00", Offset = "0x946C00", VA = "0x946C00")]
	private static void InitializeSpellsRange()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x946FC0", Offset = "0x946FC0", VA = "0x946FC0")]
	private static string GetSpellLevelRangeEventKey()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x948364", Offset = "0x948364", VA = "0x948364")]
	private static bool IsPlayerLevelInSpellsRange(int firstSpellLevel, int secondSpellLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x946A08", Offset = "0x946A08", VA = "0x946A08")]
	private static bool WasAnalyticsSendToday()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x946AAC", Offset = "0x946AAC", VA = "0x946AAC")]
	private static void SendEvent(string name, [Optional] Dictionary<string, object> parameters)
	{
	}
}
[Token(Token = "0x20000D2")]
public class AnalyticsSendGameOverStatsCaller : MonoBehaviour
{
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x9483A8", Offset = "0x9483A8", VA = "0x9483A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9484A0", Offset = "0x9484A0", VA = "0x9484A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x948598", Offset = "0x948598", VA = "0x948598")]
	private void SendJoinedGameInfoCallback()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x9485AC", Offset = "0x9485AC", VA = "0x9485AC")]
	public AnalyticsSendGameOverStatsCaller()
	{
	}
}
[Token(Token = "0x20000D3")]
public class AnalyticsSendJoinedGameInfoCaller : MonoBehaviour
{
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x9485B4", Offset = "0x9485B4", VA = "0x9485B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x9486D0", Offset = "0x9486D0", VA = "0x9486D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9487EC", Offset = "0x9487EC", VA = "0x9487EC")]
	private void SendJoinedGameInfoCallback(string sceneName)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x948874", Offset = "0x948874", VA = "0x948874")]
	public AnalyticsSendJoinedGameInfoCaller()
	{
	}
}
[Token(Token = "0x20000D4")]
public class BasicAnalyticsDataSender : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectSettings projectSettings;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool wasPlatformInfoSend;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x94887C", Offset = "0x94887C", VA = "0x94887C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x948980", Offset = "0x948980", VA = "0x948980")]
	private void TrySendArcadeData()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x948B28", Offset = "0x948B28", VA = "0x948B28")]
	private bool WasArcadeSettingsSendToday()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x948BCC", Offset = "0x948BCC", VA = "0x948BCC")]
	private bool WasLocalServerCodeSendToday()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x948C70", Offset = "0x948C70", VA = "0x948C70")]
	public BasicAnalyticsDataSender()
	{
	}
}
[Token(Token = "0x20000D5")]
public class NetworkPerformanceAnalyticsController : MonoBehaviour
{
	[Token(Token = "0x40004A0")]
	private const int maxPermissibleTrafficBytes = 18000;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WavesController wavesController;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int waveStartBytesIncoming;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int waveStartBytesOutgoing;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float waveStartTime;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x948C78", Offset = "0x948C78", VA = "0x948C78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x948E8C", Offset = "0x948E8C", VA = "0x948E8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x949058", Offset = "0x949058", VA = "0x949058")]
	private void StartCountingTrafficForWave()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x949110", Offset = "0x949110", VA = "0x949110")]
	private void FinishCountingTrafficForWave(int waveNumber)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x949468", Offset = "0x949468", VA = "0x949468")]
	public NetworkPerformanceAnalyticsController()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OneSessionStats : MonoBehaviourPun
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OneSessionStats instance;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Maps maps;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int onJoinedRoomWaveIndex;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int totalNumberOfWaves;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int wavesPlayedOnSingleMap;

	[Token(Token = "0x1700004F")]
	public static OneSessionStats Instance
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x949470", Offset = "0x949470", VA = "0x949470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x949568", Offset = "0x949568", VA = "0x949568")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x949698", Offset = "0x949698", VA = "0x949698")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x94973C", Offset = "0x94973C", VA = "0x94973C")]
	private void OnActiveSceneChanged(Scene current, Scene next)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x9498F8", Offset = "0x9498F8", VA = "0x9498F8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x949878", Offset = "0x949878", VA = "0x949878")]
	private bool IsGameScene(MapNames mapName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x949914", Offset = "0x949914", VA = "0x949914")]
	public OneSessionStats()
	{
	}
}
[Token(Token = "0x20000D7")]
public class PerformanceAnalyticsController : MonoBehaviour
{
	[Token(Token = "0x40004AA")]
	private const int minPermissibleFps = 50;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WavesController wavesController;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float waveStartTime;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int waveStartFramesCount;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x94991C", Offset = "0x94991C", VA = "0x94991C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x949AE8", Offset = "0x949AE8", VA = "0x949AE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x949CB4", Offset = "0x949CB4", VA = "0x949CB4")]
	private void StartCountingFPSForWave()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x949CE8", Offset = "0x949CE8", VA = "0x949CE8")]
	private void FinishCountingFPSForWave(int waveNumber)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x949E40", Offset = "0x949E40", VA = "0x949E40")]
	public PerformanceAnalyticsController()
	{
	}
}
[Token(Token = "0x20000D8")]
public class ArcadeGameSwitcher : ArcadeGameSwitcherCore
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool wasArcadeItemsChoosenInThisSession;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle arcadeModeToggle;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SettingMenuArcadePinner settingMenuArcadePinner;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> teleportsOtherThanStarting;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EquipmentChangesManager equipmentChangesManager;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> arcadeBuildButtons;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<GameObject> nonArcadeBuildButtons;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<GameObject> arcadeModeButtonContents;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<GameObject> nonArcadeModeButtonContents;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> ObjectsDisabledInArrcade;

	[Token(Token = "0x17000050")]
	public override Toggle ArcadeModeToggle
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x949E48", Offset = "0x949E48", VA = "0x949E48", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x949E50", Offset = "0x949E50", VA = "0x949E50", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action OnArcadeModeToggle
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x949E58", Offset = "0x949E58", VA = "0x949E58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x949F14", Offset = "0x949F14", VA = "0x949F14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action OnReloadPlayerProgression
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x949FD0", Offset = "0x949FD0", VA = "0x949FD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x94A08C", Offset = "0x94A08C", VA = "0x94A08C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x94A148", Offset = "0x94A148", VA = "0x94A148", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x94A59C", Offset = "0x94A59C", VA = "0x94A59C")]
	private void AdjustMenuBasedOnArcadeModeSetting()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x94A340", Offset = "0x94A340", VA = "0x94A340")]
	private void AdjustMenuBasedOnBuildType()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x94A8FC", Offset = "0x94A8FC", VA = "0x94A8FC", Slot = "6")]
	public override void ToggleArcadeMode()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x94A264", Offset = "0x94A264", VA = "0x94A264")]
	public void RandomizePlayerProgression()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x94A27C", Offset = "0x94A27C", VA = "0x94A27C")]
	public void ReloadStoredPlayerProgression()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x94B248", Offset = "0x94B248", VA = "0x94B248")]
	private void GivePlayerAppropriateLevel()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x94B6E0", Offset = "0x94B6E0", VA = "0x94B6E0")]
	private void DisableTeleportsOtherThanStarting()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x94B7E8", Offset = "0x94B7E8", VA = "0x94B7E8")]
	private void EnableTeleportsOtherThanStarting()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x94AA2C", Offset = "0x94AA2C", VA = "0x94AA2C")]
	private void EquipPlayerInRandomEquipment()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x94A274", Offset = "0x94A274", VA = "0x94A274")]
	private void RefreshEquipmentOnPlayer()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x94B1D0", Offset = "0x94B1D0", VA = "0x94B1D0")]
	private void InitNonArcadeEquipment()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x94BAE0", Offset = "0x94BAE0", VA = "0x94BAE0")]
	private void ChangeEquipment(EquipmentChangesManager equipmentChangesManager)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x94B8F0", Offset = "0x94B8F0", VA = "0x94B8F0")]
	private void EquipPlayerInRandomHelmet()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x94B9E8", Offset = "0x94B9E8", VA = "0x94B9E8")]
	private void EquipPlayerInRandomBow()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x94AC80", Offset = "0x94AC80", VA = "0x94AC80")]
	private void GivePlayerRandomSpells()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x94BB64", Offset = "0x94BB64", VA = "0x94BB64", Slot = "8")]
	public override void SetReferences(List<GameObject> _ObjectsDisabledInArrcade)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x94BB6C", Offset = "0x94BB6C", VA = "0x94BB6C")]
	public ArcadeGameSwitcher()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ArrowEnemyHitController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x40004C3")]
	private const float headshotDamage = 125f;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bossDamageMultiplier;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float orcDamageMultiplier;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hitEnemyAlready;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isMagic;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool hasShotThroughWindow;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float basicArrowDamage;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AttachProjectileToEnemyController projectileToEnemyAttachControler;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody projectileRigidbody;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider arrowCollider;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 arrowShotPosition;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IAbility ability;

	[Token(Token = "0x17000051")]
	public IAbility Ability
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x94C0EC", Offset = "0x94C0EC", VA = "0x94C0EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x94C0F4", Offset = "0x94C0F4", VA = "0x94C0F4")]
		set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<HealthStateController, EnemyGetHitController, Collision, ArrowEnemyHitController> OnArrowHitEnemy
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x94BF8C", Offset = "0x94BF8C", VA = "0x94BF8C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x94C03C", Offset = "0x94C03C", VA = "0x94C03C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x94C1D0", Offset = "0x94C1D0", VA = "0x94C1D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x94C308", Offset = "0x94C308", VA = "0x94C308")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x94C440", Offset = "0x94C440", VA = "0x94C440")]
	public void OnArrowCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x94CA48", Offset = "0x94CA48", VA = "0x94CA48")]
	private void CacheArrowShotPosition()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x94CA78", Offset = "0x94CA78", VA = "0x94CA78", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x94CAA4", Offset = "0x94CAA4", VA = "0x94CAA4")]
	public ArrowEnemyHitController()
	{
	}
}
[Token(Token = "0x20000DB")]
public class ArrowFlyController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Vector3 farFarAway;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 zAxisWhenFired;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnStopFlying;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnArrowFired;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Rigidbody arrowRigidbody;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform arrowTransform;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BoxCollider boxCollider;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ArrowResetController arrowResetController;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ArrowTeleportController arrowTeleportController;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TrailRendererEnabler trailRendererEnabler;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ArrowAudioController audioController;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform endOFBolthead;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool shouldTeleport;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[SerializeField]
	private bool haveTrailRenderer;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<TagType> tagsToStopArrow;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isFired;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 initialPosition;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion initialRotation;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CollisionDetectionMode defaultCollisionDetectionMode;

	[Token(Token = "0x17000052")]
	private Transform DefaultParent
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x94CAB4", Offset = "0x94CAB4", VA = "0x94CAB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public Transform ArrowTransform
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x94CAD4", Offset = "0x94CAD4", VA = "0x94CAD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public bool IsFlying
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x94CADC", Offset = "0x94CADC", VA = "0x94CADC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x94CAE4", Offset = "0x94CAE4", VA = "0x94CAE4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Collision LastCollision
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x94CAF0", Offset = "0x94CAF0", VA = "0x94CAF0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x94CAF8", Offset = "0x94CAF8", VA = "0x94CAF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool IsFired
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x94CB00", Offset = "0x94CB00", VA = "0x94CB00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x94CB08", Offset = "0x94CB08", VA = "0x94CB08")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public Vector3 FlyDirection
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x94CB5C", Offset = "0x94CB5C", VA = "0x94CB5C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x94CC40", Offset = "0x94CC40", VA = "0x94CC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x94CCC4", Offset = "0x94CCC4", VA = "0x94CCC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x94CDB8", Offset = "0x94CDB8", VA = "0x94CDB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x94CEAC", Offset = "0x94CEAC", VA = "0x94CEAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x94CFD4", Offset = "0x94CFD4", VA = "0x94CFD4")]
	public void StopArrowOnCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x94D0F4", Offset = "0x94D0F4", VA = "0x94D0F4")]
	private void AddArrowToCollisionMainPrefabPoolElement(Collision collision)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x94D18C", Offset = "0x94D18C", VA = "0x94D18C")]
	public void StopArrow(Collision collision)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x94D388", Offset = "0x94D388", VA = "0x94D388")]
	private void StopArrowOnTrigger(Collider collider)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x94D45C", Offset = "0x94D45C", VA = "0x94D45C")]
	public void StopArrow()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x94D320", Offset = "0x94D320", VA = "0x94D320")]
	private void DisableArrowMovement()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x94D510", Offset = "0x94D510", VA = "0x94D510")]
	public void ShootArrow(Vector3 velocity)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x94D5F4", Offset = "0x94D5F4", VA = "0x94D5F4")]
	private void TryToSetAdditionalArrowFunctions()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x94D65C", Offset = "0x94D65C", VA = "0x94D65C")]
	public void RevertToInitialPositionAndRotation()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x94D6A8", Offset = "0x94D6A8", VA = "0x94D6A8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x94D758", Offset = "0x94D758", VA = "0x94D758")]
	public ArrowFlyController()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ArrowHitBloodController : MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectileElementsHolder projectileElementsHolder;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ArrowEnemyHitController arrowEnemyHitController;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject bloodSplashPrefab;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x94D8E4", Offset = "0x94D8E4", VA = "0x94D8E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x94D9DC", Offset = "0x94D9DC", VA = "0x94D9DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x94DAD4", Offset = "0x94DAD4", VA = "0x94DAD4")]
	private void OnArrowHitEnemy(HealthStateController enemyHealthStateController, EnemyGetHitController enemyGetHitController, Collision collision, ArrowEnemyHitController arrowEnemyHitController)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x94DB48", Offset = "0x94DB48", VA = "0x94DB48")]
	private void ShowBloodEffect()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x94DC88", Offset = "0x94DC88", VA = "0x94DC88")]
	public ArrowHitBloodController()
	{
	}
}
[Token(Token = "0x20000DE")]
public class ArrowHitOnLateUpdateAttacher : ArrowHitCustomBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool attachOnLateUpdate;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x94DC90", Offset = "0x94DC90", VA = "0x94DC90", Slot = "4")]
	public override void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x94DCA0", Offset = "0x94DCA0", VA = "0x94DCA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x94DDA8", Offset = "0x94DDA8", VA = "0x94DDA8")]
	public ArrowHitOnLateUpdateAttacher()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ArrowHitOwnHead : ArrowHitCustomBehaviour
{
	[Token(Token = "0x600042A")]
	[Address(RVA = "0x94DDB8", Offset = "0x94DDB8", VA = "0x94DDB8", Slot = "4")]
	public override void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x94DE54", Offset = "0x94DE54", VA = "0x94DE54")]
	public ArrowHitOwnHead()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ArrowMeshSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mesh pcMesh;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mesh mobileMesh;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshFilter meshFilter;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x94DE5C", Offset = "0x94DE5C", VA = "0x94DE5C", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x94DF34", Offset = "0x94DF34", VA = "0x94DF34")]
	public ArrowMeshSetter()
	{
	}
}
[Token(Token = "0x20000E1")]
public class ArrowTeleportController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsTeleporting;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x94DF3C", Offset = "0x94DF3C", VA = "0x94DF3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x94DFC8", Offset = "0x94DFC8", VA = "0x94DFC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x94E054", Offset = "0x94E054", VA = "0x94E054")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x94E168", Offset = "0x94E168", VA = "0x94E168")]
	private void OnArrowCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x94E170", Offset = "0x94E170", VA = "0x94E170", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x94E178", Offset = "0x94E178", VA = "0x94E178")]
	public ArrowTeleportController()
	{
	}
}
[Token(Token = "0x20000E2")]
public class AttachProjectileToEnemyController : MonoBehaviour
{
	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BodyAttacher bodyAttacher;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x94C944", Offset = "0x94C944", VA = "0x94C944")]
	public void TryAttachArrowToBody(Collision collision)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x94E180", Offset = "0x94E180", VA = "0x94E180")]
	public void DetachProjectileFromParent()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x94E1A4", Offset = "0x94E1A4", VA = "0x94E1A4")]
	public AttachProjectileToEnemyController()
	{
	}
}
[Token(Token = "0x20000E3")]
public class FireArrowReal : MonoBehaviour
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fire;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x94E1AC", Offset = "0x94E1AC", VA = "0x94E1AC")]
	public void SetOnFire()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x94E1C8", Offset = "0x94E1C8", VA = "0x94E1C8")]
	public FireArrowReal()
	{
	}
}
[Token(Token = "0x20000E4")]
public class FireCauldronForArrow : MonoBehaviour
{
	[Token(Token = "0x6000439")]
	[Address(RVA = "0x94E1D0", Offset = "0x94E1D0", VA = "0x94E1D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x94E27C", Offset = "0x94E27C", VA = "0x94E27C")]
	public FireCauldronForArrow()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OnArrowHitForceApplyer : MonoBehaviour
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fromArrowForceMultiplyer;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody rigidbodyToApplyForceTo;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x94E284", Offset = "0x94E284", VA = "0x94E284")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x94E3D0", Offset = "0x94E3D0", VA = "0x94E3D0")]
	public OnArrowHitForceApplyer()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ProjectileElementsHolder : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform projectileHeadTransform;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerPhotonViewId;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x94E3D8", Offset = "0x94E3D8", VA = "0x94E3D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x94E44C", Offset = "0x94E44C", VA = "0x94E44C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x94E4A4", Offset = "0x94E4A4", VA = "0x94E4A4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x94E560", Offset = "0x94E560", VA = "0x94E560")]
	public ProjectileElementsHolder()
	{
	}
}
[Token(Token = "0x20000E7")]
public class TrailInitializer : MonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrailRendererEnabler _trailRendererEnabler;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x94E568", Offset = "0x94E568", VA = "0x94E568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x94E584", Offset = "0x94E584", VA = "0x94E584")]
	public TrailInitializer()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ArrowHitCustomBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000443")]
	[Address(RVA = "0x94E58C", Offset = "0x94E58C", VA = "0x94E58C", Slot = "4")]
	public virtual void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x94DDB0", Offset = "0x94DDB0", VA = "0x94DDB0")]
	public ArrowHitCustomBehaviour()
	{
	}
}
[Token(Token = "0x20000E9")]
public class ArrowAudioController : MonoBehaviour, IResetable
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ArrowFlyController arrowFlyController;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource shootAudioSource;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SoundStructure[] arrowHitSounds;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SoundStructure arrowShotSound;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasAlreadyPlayed;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasHitWater;

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x94E590", Offset = "0x94E590", VA = "0x94E590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x94E684", Offset = "0x94E684", VA = "0x94E684")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x94E778", Offset = "0x94E778", VA = "0x94E778")]
	public void PlayArrowSoundOnCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x94E7D4", Offset = "0x94E7D4", VA = "0x94E7D4")]
	private void PlaySoundByTag(string tag, bool shouldNotPlayMoreSounds)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x94E88C", Offset = "0x94E88C", VA = "0x94E88C")]
	public void PlayArrowSoundOnTrigger(Collider collider)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x94D5D0", Offset = "0x94D5D0", VA = "0x94D5D0")]
	public void PlayArrowShot()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x94E8DC", Offset = "0x94E8DC", VA = "0x94E8DC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x94E8E4", Offset = "0x94E8E4", VA = "0x94E8E4")]
	public ArrowAudioController()
	{
	}
}
[Token(Token = "0x20000EA")]
public class OnGamePauseSoundPauser : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource pausableSound;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x94E8EC", Offset = "0x94E8EC", VA = "0x94E8EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x94EAAC", Offset = "0x94EAAC", VA = "0x94EAAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x94EC3C", Offset = "0x94EC3C", VA = "0x94EC3C")]
	private void PauseSound()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x94EC58", Offset = "0x94EC58", VA = "0x94EC58")]
	private void UnPauseSound()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x94EC74", Offset = "0x94EC74", VA = "0x94EC74")]
	public OnGamePauseSoundPauser()
	{
	}
}
[Token(Token = "0x20000EB")]
public class SoundVolumeInitializer : MonoBehaviour
{
	[Token(Token = "0x4000505")]
	private const string MasterVolume = "MasterVolume";

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isInitialize;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer audioMixer;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-80f, 20f)]
	[SerializeField]
	private float defaultVolume;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(-80f, 20f)]
	[SerializeField]
	private float picoVolume;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x94EC7C", Offset = "0x94EC7C", VA = "0x94EC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x94ED88", Offset = "0x94ED88", VA = "0x94ED88")]
	public SoundVolumeInitializer()
	{
	}
}
[Token(Token = "0x20000EC")]
public class BellRinger : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource bellSound;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float soundObjectTime;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CollisionEvents bellCollisionEvents;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider colliderThatMakesRing;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeLastSoundPlayed;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minDelayBetweenBlSoundPlay;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasLastArrowMine;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x94ED90", Offset = "0x94ED90", VA = "0x94ED90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x94EE1C", Offset = "0x94EE1C", VA = "0x94EE1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x94EEA8", Offset = "0x94EEA8", VA = "0x94EEA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x94F04C", Offset = "0x94F04C", VA = "0x94F04C")]
	private void SetWasMyArrowOnLastCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x94F124", Offset = "0x94F124", VA = "0x94F124")]
	public BellRinger()
	{
	}
}
[Token(Token = "0x20000ED")]
public class BezierArrowFollower : MonoBehaviour
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BezierRoutePart actualRoutePart;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform arrowTransform;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float actualT;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFromCurveStart;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int indexToStartSearching;

	[Token(Token = "0x14000007")]
	public event Action OnRouteFinished
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x94F13C", Offset = "0x94F13C", VA = "0x94F13C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x94F1D8", Offset = "0x94F1D8", VA = "0x94F1D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x94F274", Offset = "0x94F274", VA = "0x94F274")]
	public void SetPositionAndRotation(float distance)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x94F484", Offset = "0x94F484", VA = "0x94F484")]
	public void MoveToStartingPosition()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x94F488", Offset = "0x94F488", VA = "0x94F488")]
	public void UpdatePositonByDistance(float distance)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x94F6B0", Offset = "0x94F6B0", VA = "0x94F6B0")]
	public BezierArrowFollower()
	{
	}
}
[Token(Token = "0x20000EE")]
public class BezierCubicCurve : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPoint;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform midpoint1;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform midpoint2;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform endPoint;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int numberOfPoints;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float directionPrecision;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int numberOfGizmosPoints;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color constraintsColor;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Color curveColor;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Color directionCurve;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float directionCurveLength;

	[Token(Token = "0x17000058")]
	public int NumberOfPoints
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x94F6B8", Offset = "0x94F6B8", VA = "0x94F6B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public Color CurveGizmosColor
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x94F6C0", Offset = "0x94F6C0", VA = "0x94F6C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x94F6CC", Offset = "0x94F6CC", VA = "0x94F6CC")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x94F814", Offset = "0x94F814", VA = "0x94F814")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x94F924", Offset = "0x94F924", VA = "0x94F924")]
	public float GetTFromDistance(float startingT, float distanceToPast, bool isConsideringY)
	{
		return default(float);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x94FA30", Offset = "0x94FA30", VA = "0x94FA30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x94FCD8", Offset = "0x94FCD8", VA = "0x94FCD8")]
	public BezierCubicCurve()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BezierCurvePoint : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform constraint;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color gizmoColor;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float constraintWeight;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x94FCE0", Offset = "0x94FCE0", VA = "0x94FCE0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x94FD1C", Offset = "0x94FD1C", VA = "0x94FD1C")]
	public BezierCurvePoint()
	{
	}
}
[Token(Token = "0x20000F0")]
public class BezierFollower : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int actualRoutePartIndex;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody cartRigidbody;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float actualT;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distanceFromActualCurveStart;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distanceFromStart;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int indexToStartSearching;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int indexInRouteArray;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] selectedRoutePartsPhotonViewIds;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierRoutePart[] selectedRoute;

	[Token(Token = "0x1700005A")]
	public BezierRoutePart ActualRoutePart
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x94FE68", Offset = "0x94FE68", VA = "0x94FE68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public BezierRoutePart NextRoutePart
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x94FE9C", Offset = "0x94FE9C", VA = "0x94FE9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public bool IsNextRoute
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0x94FED4", Offset = "0x94FED4", VA = "0x94FED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public float DistanceFromStart
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0x94FF00", Offset = "0x94FF00", VA = "0x94FF00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000008")]
	public event Action OnRouteFinished
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x94FD30", Offset = "0x94FD30", VA = "0x94FD30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x94FDCC", Offset = "0x94FDCC", VA = "0x94FDCC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x94FF08", Offset = "0x94FF08", VA = "0x94FF08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x94FF60", Offset = "0x94FF60", VA = "0x94FF60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x94FFB8", Offset = "0x94FFB8", VA = "0x94FFB8")]
	public void SetPositionAndRotation(float distance)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x9503B8", Offset = "0x9503B8", VA = "0x9503B8")]
	public void MoveToStartingPosition()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x9503BC", Offset = "0x9503BC", VA = "0x9503BC")]
	public void UpdatePositonByDistance(float distance)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x950478", Offset = "0x950478", VA = "0x950478")]
	private void GetRouteFromPhotonViewIds()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9505B0", Offset = "0x9505B0", VA = "0x9505B0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9507E4", Offset = "0x9507E4", VA = "0x9507E4")]
	public BezierFollower()
	{
	}
}
[Token(Token = "0x20000F1")]
public class BezierPoint
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distanceFromCurveStart;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 position;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x9507EC", Offset = "0x9507EC", VA = "0x9507EC")]
	public BezierPoint(float distanceFromCurveStart, Vector3 position, Vector3 direction)
	{
	}
}
[Token(Token = "0x20000F2")]
public class BezierRoutePart : MonoBehaviourPun
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierCubicCurve curve;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<BezierRoutePart> nextRouteParts;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isActive;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color activeRouteColor;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color nonActiveRouteColor;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public int numberOfPoints;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BezierPoint[] pointsInCurveArray;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BezierPoint[] pointsInCurveArray2D;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float routeLength;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float routeLength2D;

	[Token(Token = "0x1700005E")]
	public List<BezierRoutePart> NextRoutePartsActive
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x94F5A8", Offset = "0x94F5A8", VA = "0x94F5A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x950850", Offset = "0x950850", VA = "0x950850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x9427B8", Offset = "0x9427B8", VA = "0x9427B8")]
	public void SetPointsInArray()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x94F2D8", Offset = "0x94F2D8", VA = "0x94F2D8")]
	public BezierPoint GetPoint(float distanceFromCurveStart, ref int indexToStartSearching)
	{
		return null;
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x95020C", Offset = "0x95020C", VA = "0x95020C")]
	public BezierPoint GetPoint2D(float distanceFromCurveStart, ref int indexToStartSearching)
	{
		return null;
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x950854", Offset = "0x950854", VA = "0x950854")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x95086C", Offset = "0x95086C", VA = "0x95086C")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x950884", Offset = "0x950884", VA = "0x950884")]
	public float GetTFromDistance(float startingT, float distanceToPast, bool isConsideringY)
	{
		return default(float);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x9508A0", Offset = "0x9508A0", VA = "0x9508A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x9508F4", Offset = "0x9508F4", VA = "0x9508F4")]
	public BezierRoutePart()
	{
	}
}
[Token(Token = "0x20000F4")]
public class BezierSmoothConnector : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierCurvePoint thisCurvePoint;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierCurvePoint curvePointToConectTo;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x95098C", Offset = "0x95098C", VA = "0x95098C")]
	public void ConnectPointsSmoothly()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x950998", Offset = "0x950998", VA = "0x950998")]
	public static void ConnectPointsSmoothly(BezierCurvePoint firstCurvePoint, BezierCurvePoint secondCurvePoint)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x950B48", Offset = "0x950B48", VA = "0x950B48")]
	public BezierSmoothConnector()
	{
	}
}
[Token(Token = "0x20000F5")]
public class BezierSpline : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BezierCubicCurve bezierPrefab;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BezierCubicCurve> bezierCurves;

	[Token(Token = "0x1700005F")]
	public List<BezierCubicCurve> BezierCurves
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x950B50", Offset = "0x950B50", VA = "0x950B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x950B58", Offset = "0x950B58", VA = "0x950B58")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x20000F6")]
public class BoatSoundManager : MonoBehaviour
{
	[Token(Token = "0x20000F7")]
	[CompilerGenerated]
	private sealed class <TurnOffSoundSmoothly>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoatSoundManager <>4__this;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVolume>5__2;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentTime>5__3;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000494")]
			[Address(RVA = "0x950E14", Offset = "0x950E14", VA = "0x950E14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0x950E5C", Offset = "0x950E5C", VA = "0x950E5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x950CD8", Offset = "0x950CD8", VA = "0x950CD8")]
		[DebuggerHidden]
		public <TurnOffSoundSmoothly>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x950D18", Offset = "0x950D18", VA = "0x950D18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x950D1C", Offset = "0x950D1C", VA = "0x950D1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x950E1C", Offset = "0x950E1C", VA = "0x950E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Audio Clips")]
	[SerializeField]
	private AudioClip sailingSound;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip burningSound;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip extinguishingSound;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip destroySound;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Header("Audio Sources")]
	private AudioSource sailingAudioSource;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource burningAudioSource;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource extinguishingAudioSource;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource destroyAudioSource;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool shouldTurnOffSoundsSmoothly;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float turningOffTime;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x950B60", Offset = "0x950B60", VA = "0x950B60")]
	private void Start()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x950BAC", Offset = "0x950BAC", VA = "0x950BAC")]
	public void ToggleSailingSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x950C18", Offset = "0x950C18", VA = "0x950C18")]
	public void ToggleBurningSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x950C28", Offset = "0x950C28", VA = "0x950C28")]
	public void ToggleExtinguishingSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x950C38", Offset = "0x950C38", VA = "0x950C38")]
	public void ToggleDestroySound(bool shouldPlay)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x950BBC", Offset = "0x950BBC", VA = "0x950BBC")]
	private void ToogleAudioSource(AudioSource audio, bool shouldPlay)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x950C48", Offset = "0x950C48", VA = "0x950C48")]
	[IteratorStateMachine(typeof(<TurnOffSoundSmoothly>d__16))]
	private IEnumerator TurnOffSoundSmoothly(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x950D00", Offset = "0x950D00", VA = "0x950D00")]
	public BoatSoundManager()
	{
	}
}
[Token(Token = "0x20000F8")]
public class BowToPlatformAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	private const float bowScaleMobile = 0.04034954f;

	[Token(Token = "0x4000554")]
	private const float bowScalePC = 0.04747f;

	[Token(Token = "0x4000555")]
	private const float bowHandScalePC = 2.244f;

	[Token(Token = "0x4000556")]
	private const float bowHandScaleMobile = 2.58f;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform bowHandModel;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform bowParentTransform;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer bowMeshRenderer;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material bowMaterialMobile;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material bowMaterialPC;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x950E64", Offset = "0x950E64", VA = "0x950E64")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x950F08", Offset = "0x950F08", VA = "0x950F08")]
	private void SetReferences(Material bowMaterial, float bowScale, float bowHandScale)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x951018", Offset = "0x951018", VA = "0x951018")]
	public BowToPlatformAdjuster()
	{
	}
}
[Token(Token = "0x20000F9")]
public class CameraAnimationsController : MonoBehaviour
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cameras;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] camerasShotView;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentCamera;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numberOfCameras;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private KeyCode[] keyCodes;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x951020", Offset = "0x951020", VA = "0x951020")]
	private void Start()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x95111C", Offset = "0x95111C", VA = "0x95111C")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x951044", Offset = "0x951044", VA = "0x951044")]
	private void ChangeCamera(int cameraNumber)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9512F4", Offset = "0x9512F4", VA = "0x9512F4")]
	private void ShowShotView(int cameraNumber)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x951360", Offset = "0x951360", VA = "0x951360")]
	private void SetCameraActive()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x9513A0", Offset = "0x9513A0", VA = "0x9513A0")]
	private void SetShodViewCameraActive()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x9513E0", Offset = "0x9513E0", VA = "0x9513E0")]
	public CameraAnimationsController()
	{
	}
}
[Token(Token = "0x20000FA")]
public class CameraEnabler : MonoBehaviourPun
{
	[Token(Token = "0x20000FB")]
	[CompilerGenerated]
	private sealed class <EnableCameraInDeathMatchCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEnabler <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0x9519AC", Offset = "0x9519AC", VA = "0x9519AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x9519F4", Offset = "0x9519F4", VA = "0x9519F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x9517E0", Offset = "0x9517E0", VA = "0x9517E0")]
		[DebuggerHidden]
		public <EnableCameraInDeathMatchCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x95187C", Offset = "0x95187C", VA = "0x95187C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x951880", Offset = "0x951880", VA = "0x951880", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x9519B4", Offset = "0x9519B4", VA = "0x9519B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isDeathMatch;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TeleportPlatformHolder teleportPlatformHolder;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x951470", Offset = "0x951470", VA = "0x951470")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x951598", Offset = "0x951598", VA = "0x951598")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x951694", Offset = "0x951694", VA = "0x951694")]
	private void EnableCamera()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x9516D0", Offset = "0x9516D0", VA = "0x9516D0")]
	private void EnableCameraInDeathMatch()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x95176C", Offset = "0x95176C", VA = "0x95176C")]
	[IteratorStateMachine(typeof(<EnableCameraInDeathMatchCoroutine>d__6))]
	private IEnumerator EnableCameraInDeathMatchCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x951808", Offset = "0x951808", VA = "0x951808")]
	public CameraEnabler()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FC")]
public class CannonReferences
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("GrapeShootParticles")]
	public GameObject[] GrapeShootParticles;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x9519FC", Offset = "0x9519FC", VA = "0x9519FC")]
	public CannonReferences()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CannonReferenceSetter : MonoBehaviour
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("CannonController")]
	[SerializeField]
	private CannonController cannonController;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Mobile References")]
	private CannonReferences cannonReferencesMobile;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("PC References")]
	[SerializeField]
	private CannonReferences CannonReferencesPC;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x951A04", Offset = "0x951A04", VA = "0x951A04")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x951A08", Offset = "0x951A08", VA = "0x951A08")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x951A90", Offset = "0x951A90", VA = "0x951A90")]
	private void SetReferences(CannonReferences cannonReferences)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x951AB4", Offset = "0x951AB4", VA = "0x951AB4")]
	public CannonReferenceSetter()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CannonShotController : MonoBehaviour
{
	[Token(Token = "0x400056B")]
	private const float cannonBaseDamage = 25f;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damageMultiplyer;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lifetimeOfExplosion;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentTimeOfExplosion;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x951ABC", Offset = "0x951ABC", VA = "0x951ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x951B1C", Offset = "0x951B1C", VA = "0x951B1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x951C2C", Offset = "0x951C2C", VA = "0x951C2C")]
	public void Explode(int clientThatShotID)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x951D70", Offset = "0x951D70", VA = "0x951D70")]
	public CannonShotController()
	{
	}
}
[Token(Token = "0x20000FF")]
public class CatapultController : MonoBehaviourPun, IPunObservable, IWithIcon
{
	[Token(Token = "0x2000100")]
	[CompilerGenerated]
	private sealed class <AttachStartingRock>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004CB")]
			[Address(RVA = "0x952FD4", Offset = "0x952FD4", VA = "0x952FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004CD")]
			[Address(RVA = "0x95301C", Offset = "0x95301C", VA = "0x95301C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x952538", Offset = "0x952538", VA = "0x952538")]
		[DebuggerHidden]
		public <AttachStartingRock>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x952E74", Offset = "0x952E74", VA = "0x952E74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x952E78", Offset = "0x952E78", VA = "0x952E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x952FDC", Offset = "0x952FDC", VA = "0x952FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000101")]
	[CompilerGenerated]
	private sealed class <ShootCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x95317C", Offset = "0x95317C", VA = "0x95317C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x9531C4", Offset = "0x9531C4", VA = "0x9531C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x95294C", Offset = "0x95294C", VA = "0x95294C")]
		[DebuggerHidden]
		public <ShootCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x953024", Offset = "0x953024", VA = "0x953024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x953028", Offset = "0x953028", VA = "0x953028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x953184", Offset = "0x953184", VA = "0x953184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000102")]
	[CompilerGenerated]
	private sealed class <LoadRockCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x9554E0", Offset = "0x9554E0", VA = "0x9554E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x955528", Offset = "0x955528", VA = "0x955528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x955354", Offset = "0x955354", VA = "0x955354")]
		[DebuggerHidden]
		public <LoadRockCoroutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x95537C", Offset = "0x95537C", VA = "0x95537C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x955380", Offset = "0x955380", VA = "0x955380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x9554E8", Offset = "0x9554E8", VA = "0x9554E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject rockInCatapult;

	[Token(Token = "0x4000572")]
	private const float timeFromRockStartingToFlyToLoadingNewOne = 1f;

	[Token(Token = "0x4000573")]
	private const float timeFromStartingLoadAnimationToAttachingRock = 3f;

	[Token(Token = "0x4000574")]
	private const float delayToGetEverythingFromNetwork = 1f;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PickableInteracter pickableInteracter;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform rockAttachPoint;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform shotDirection;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float forceMutliplier;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject rockPrefab;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int rockID;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool isLoadedWithCatapultRock;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource catapultShotAudio;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource catapultReloadAudio;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip[] catapultLoadingClips;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip[] catapultShotClips;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float timeFromShotAnimationStartToCatapultRockFlyStart;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform rockPositionWhenStartingToFlyFromCatapult;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool hasClientRequestedShot;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Vector3 angularVelocityOfRockWhenStartsToFly;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x951D80", Offset = "0x951D80", VA = "0x951D80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x951E94", Offset = "0x951E94", VA = "0x951E94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x951EEC", Offset = "0x951EEC", VA = "0x951EEC")]
	[PunRPC]
	public void RpcRequestShot(int requestingPlayerID)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x952058", Offset = "0x952058", VA = "0x952058")]
	[PunRPC]
	private void RpcShoot()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x9520EC", Offset = "0x9520EC", VA = "0x9520EC")]
	[PunRPC]
	public void InstantiateRockOnNetwork()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x9522E4", Offset = "0x9522E4", VA = "0x9522E4")]
	[PunRPC]
	private void RpcAttachRock(int rockPhotonViewID)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x951E20", Offset = "0x951E20", VA = "0x951E20")]
	[IteratorStateMachine(typeof(<AttachStartingRock>d__26))]
	private IEnumerator AttachStartingRock()
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x952560", Offset = "0x952560", VA = "0x952560")]
	private void ChangeCatapultAnimationStateToLoaded()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x9525BC", Offset = "0x9525BC", VA = "0x9525BC")]
	private void ThrowRock()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x952078", Offset = "0x952078", VA = "0x952078")]
	[IteratorStateMachine(typeof(<ShootCoroutine>d__29))]
	private IEnumerator ShootCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x9528E0", Offset = "0x9528E0", VA = "0x9528E0")]
	private void ResetRockRigidbody(Rigidbody rbRockInCatapult, Rigidbody rbRockPrefab)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x952974", Offset = "0x952974", VA = "0x952974")]
	private void LoadRock()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x9529F8", Offset = "0x9529F8", VA = "0x9529F8")]
	[IteratorStateMachine(typeof(<LoadRockCoroutine>d__32))]
	private IEnumerator LoadRockCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x952A6C", Offset = "0x952A6C", VA = "0x952A6C")]
	private void AttachRock()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x952D30", Offset = "0x952D30", VA = "0x952D30", Slot = "5")]
	public bool ShouldDisplayIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x952D38", Offset = "0x952D38", VA = "0x952D38", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x952E60", Offset = "0x952E60", VA = "0x952E60")]
	public CatapultController()
	{
	}
}
[Token(Token = "0x2000103")]
public class CatapultRockController : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x400058D")]
	private const float yOffsetValue = 10000f;

	[Token(Token = "0x400058E")]
	private const float velocityWhenHitMultiplier = 1.3f;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CatapultRockSoundController catapultRockSoundController;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CatapultRockRemover catapultRockRemover;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem hitParticle;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rockRigidbody;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask layersToColide;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasHit;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasBeenThrown;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool firstHasBeenThrownReceived;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CollisionDetectionMode defaultDetectionMode;

	[Token(Token = "0x1700006A")]
	public bool HasBeenThrown
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x955530", Offset = "0x955530", VA = "0x955530")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x955538", Offset = "0x955538", VA = "0x955538")]
		set
		{
		}
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x9555AC", Offset = "0x9555AC", VA = "0x9555AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x9555D4", Offset = "0x9555D4", VA = "0x9555D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x95562C", Offset = "0x95562C", VA = "0x95562C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x955684", Offset = "0x955684", VA = "0x955684")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x955804", Offset = "0x955804", VA = "0x955804")]
	public void SetKinemetic(bool isKinematic)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x955864", Offset = "0x955864", VA = "0x955864", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x9559EC", Offset = "0x9559EC", VA = "0x9559EC", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x955A54", Offset = "0x955A54", VA = "0x955A54")]
	public CatapultRockController()
	{
	}
}
[Token(Token = "0x2000104")]
public class CatapultRockSoundController : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float flyingVolume;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float hitVolume;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AudioClip> hitAudioClips;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x955564", Offset = "0x955564", VA = "0x955564")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x95574C", Offset = "0x95574C", VA = "0x95574C")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x955A5C", Offset = "0x955A5C", VA = "0x955A5C")]
	public CatapultRockSoundController()
	{
	}
}
[Token(Token = "0x2000105")]
public class ChangeCamera : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] cameras;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x955A70", Offset = "0x955A70", VA = "0x955A70")]
	public void ChangeCameraOnClick()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x955B00", Offset = "0x955B00", VA = "0x955B00")]
	public ChangeCamera()
	{
	}
}
[Token(Token = "0x2000106")]
public class ControllerManager : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x955B08", Offset = "0x955B08", VA = "0x955B08")]
	public ControllerManager()
	{
	}
}
[Token(Token = "0x2000107")]
public class DeathMatchController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DeathMatchController instance;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController gameTimeController;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameStateDM state;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hasCountingEnded;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnGameStarted;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnGameFinished;

	[Token(Token = "0x1700006B")]
	public static DeathMatchController Instance
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x955B10", Offset = "0x955B10", VA = "0x955B10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public GameStateDM State
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x955C50", Offset = "0x955C50", VA = "0x955C50")]
		get
		{
			return default(GameStateDM);
		}
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x955C58", Offset = "0x955C58", VA = "0x955C58")]
		set
		{
		}
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9560C0", Offset = "0x9560C0", VA = "0x9560C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x956190", Offset = "0x956190", VA = "0x956190")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x956350", Offset = "0x956350", VA = "0x956350")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x956510", Offset = "0x956510", VA = "0x956510")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x9565EC", Offset = "0x9565EC", VA = "0x9565EC")]
	public void StartMatchCountdown()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x956750", Offset = "0x956750", VA = "0x956750")]
	private void SetMenuState(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x956758", Offset = "0x956758", VA = "0x956758")]
	private void SetMenuState()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9567E0", Offset = "0x9567E0", VA = "0x9567E0")]
	private void SetPlayingState()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9567F0", Offset = "0x9567F0", VA = "0x9567F0")]
	private void SetOverState()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x956760", Offset = "0x956760", VA = "0x956760")]
	private void SetGameState(GameStateDM _state)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x955DA4", Offset = "0x955DA4", VA = "0x955DA4")]
	private void ManageMenuState()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x955E3C", Offset = "0x955E3C", VA = "0x955E3C")]
	private void InitializeMenuState()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x955E60", Offset = "0x955E60", VA = "0x955E60")]
	private void ManagePlayingState()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x955ECC", Offset = "0x955ECC", VA = "0x955ECC")]
	private void InitializePlayingState()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x955F84", Offset = "0x955F84", VA = "0x955F84")]
	private void ManageOverState()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x95601C", Offset = "0x95601C", VA = "0x95601C")]
	private void InitializeGameOverState()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9568D8", Offset = "0x9568D8", VA = "0x9568D8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x956A04", Offset = "0x956A04", VA = "0x956A04", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x956A84", Offset = "0x956A84", VA = "0x956A84", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x956A88", Offset = "0x956A88", VA = "0x956A88", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x956A8C", Offset = "0x956A8C", VA = "0x956A8C", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x956A90", Offset = "0x956A90", VA = "0x956A90", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x955C40", Offset = "0x955C40", VA = "0x955C40")]
	public DeathMatchController()
	{
	}
}
[Token(Token = "0x2000108")]
public class DeathMatchGameTimeController : GameTimeController, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x2000109")]
	[CompilerGenerated]
	private sealed class <SetMatchLengthAfterSynchronization>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeathMatchGameTimeController <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000533")]
			[Address(RVA = "0x958754", Offset = "0x958754", VA = "0x958754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x95879C", Offset = "0x95879C", VA = "0x95879C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x957DE4", Offset = "0x957DE4", VA = "0x957DE4")]
		[DebuggerHidden]
		public <SetMatchLengthAfterSynchronization>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x958640", Offset = "0x958640", VA = "0x958640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x958644", Offset = "0x958644", VA = "0x958644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x95875C", Offset = "0x95875C", VA = "0x95875C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A7")]
	private const float timeLeftFromResultsFinishToRestartGame = 1f;

	[Token(Token = "0x40005A8")]
	private const float minPluralValue = 2f;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(10f)]
	[Header("GameTime in minutes:")]
	public int fullGameTime;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(10f)]
	[Header("TimeToRestart in seconds:")]
	public int fullTimeToRestart;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DeathmatchStartCountdownController deathmatchStartCountdownController;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(20f)]
	public Text scoreboardTimeText;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CountdownStartGameUI;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text valueOfTimeToStartGameText;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text timeToStartAndRestartTheGameText;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject deathMatchMenuController;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Timer timerFromGameStartButtonClick;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Timer timerInGame;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Timer timerRestartGame;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimerSound timerSound;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToStartGame;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeToEndGame;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeToRestartGame;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPlaying;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool isOver;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool resultsAfterGameFinished;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool isTimerSynchronized;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnCountdownStart;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action OnOverTimeToStartGame;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action OnGameOver;

	[Token(Token = "0x1700006D")]
	public float TimeToStartGame
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x956DA4", Offset = "0x956DA4", VA = "0x956DA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x956DAC", Offset = "0x956DAC", VA = "0x956DAC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public float TimeToEndGame
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x956DB4", Offset = "0x956DB4", VA = "0x956DB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x956DBC", Offset = "0x956DBC", VA = "0x956DBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public int FullGameTime
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x956ECC", Offset = "0x956ECC", VA = "0x956ECC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x956ED4", Offset = "0x956ED4", VA = "0x956ED4")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public float TimeToRestartGame
	{
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x956FB0", Offset = "0x956FB0", VA = "0x956FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x956FB8", Offset = "0x956FB8", VA = "0x956FB8")]
		set
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action OnResultsAfterGameFinished
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x956A94", Offset = "0x956A94", VA = "0x956A94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x956B4C", Offset = "0x956B4C", VA = "0x956B4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<float> OnTimeToEndGameChange
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x956C04", Offset = "0x956C04", VA = "0x956C04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x956CD4", Offset = "0x956CD4", VA = "0x956CD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x95706C", Offset = "0x95706C", VA = "0x95706C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9570AC", Offset = "0x9570AC", VA = "0x9570AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x957588", Offset = "0x957588", VA = "0x957588")]
	private void Start()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x95760C", Offset = "0x95760C", VA = "0x95760C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x957AE8", Offset = "0x957AE8", VA = "0x957AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9567F8", Offset = "0x9567F8", VA = "0x9567F8")]
	public void MatchLengthCountdown()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x957D70", Offset = "0x957D70", VA = "0x957D70")]
	[IteratorStateMachine(typeof(<SetMatchLengthAfterSynchronization>d__48))]
	private IEnumerator SetMatchLengthAfterSynchronization()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x956818", Offset = "0x956818", VA = "0x956818")]
	public void StartGameRestartCountdown()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x956FCC", Offset = "0x956FCC", VA = "0x956FCC")]
	private void UpdateCountdownDescription()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x957E0C", Offset = "0x957E0C", VA = "0x957E0C")]
	private void UpdateCountDownDescriptionWithTime()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x957F00", Offset = "0x957F00", VA = "0x957F00")]
	public void Vanish()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x957F90", Offset = "0x957F90", VA = "0x957F90")]
	public void PlayLoopSound()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x957FC8", Offset = "0x957FC8", VA = "0x957FC8")]
	public void PlayEndSound()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x957FE4", Offset = "0x957FE4", VA = "0x957FE4")]
	public void PlayTeleportSound()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x956604", Offset = "0x956604", VA = "0x956604")]
	public void StartCountingTimeToStart()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x958000", Offset = "0x958000", VA = "0x958000")]
	public void StartCountingTimeGame()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x958034", Offset = "0x958034", VA = "0x958034")]
	public void SynchronizeTimeToGameStart(float time)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x958050", Offset = "0x958050", VA = "0x958050")]
	public float GetPreciseTimeToGameStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x95806C", Offset = "0x95806C", VA = "0x95806C")]
	private void SetStateToMinutesLeft()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9580E8", Offset = "0x9580E8", VA = "0x9580E8")]
	private void UpdateTimeToStartTheGameText()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9581A4", Offset = "0x9581A4", VA = "0x9581A4")]
	private void UpdateTimeToStart()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x957D24", Offset = "0x957D24", VA = "0x957D24")]
	private void UpdateTimeToRestart()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x957C54", Offset = "0x957C54", VA = "0x957C54")]
	private void UpdateDeathMatchTime()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x9581D0", Offset = "0x9581D0", VA = "0x9581D0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9584B8", Offset = "0x9584B8", VA = "0x9584B8")]
	[PunRPC]
	private void RpcSynchronizeStarGame()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x958568", Offset = "0x958568", VA = "0x958568", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x958604", Offset = "0x958604", VA = "0x958604", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x958608", Offset = "0x958608", VA = "0x958608", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x95860C", Offset = "0x95860C", VA = "0x95860C", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x958610", Offset = "0x958610", VA = "0x958610", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x958614", Offset = "0x958614", VA = "0x958614")]
	public DeathMatchGameTimeController()
	{
	}
}
[Token(Token = "0x200010A")]
public class DeathMatchPauseMenu : MonoBehaviourPun
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject continueButton;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject pauseWindow;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject WaitingForTheHostText;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Timer timer;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] windowsInPauseMenu;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x9587A4", Offset = "0x9587A4", VA = "0x9587A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x958C64", Offset = "0x958C64", VA = "0x958C64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x958D8C", Offset = "0x958D8C", VA = "0x958D8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x958C7C", Offset = "0x958C7C", VA = "0x958C7C")]
	public void InitializePauseWindow()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x958D6C", Offset = "0x958D6C", VA = "0x958D6C")]
	private void OpenPauseWindow()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x959240", Offset = "0x959240", VA = "0x959240")]
	private void ClosePauseWindow()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x9592A4", Offset = "0x9592A4", VA = "0x9592A4")]
	private void EnableContinueButton()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x9592C4", Offset = "0x9592C4", VA = "0x9592C4")]
	private void DisableContinueButton()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x959220", Offset = "0x959220", VA = "0x959220")]
	private void DisableHostText()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x9592E4", Offset = "0x9592E4", VA = "0x9592E4")]
	public DeathMatchPauseMenu()
	{
	}
}
[Token(Token = "0x200010B")]
public class DeathMatchPauseWindowLocalizer : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Hits;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Deaths;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x9592EC", Offset = "0x9592EC", VA = "0x9592EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x959374", Offset = "0x959374", VA = "0x959374")]
	public DeathMatchPauseWindowLocalizer()
	{
	}
}
[Token(Token = "0x200010C")]
public class DeathmatchStartCountdownController : MonoBehaviour
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float countdownTimeForTournament;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float countdownTimeForNormalDeathMatch;

	[Token(Token = "0x17000073")]
	public float CountdownTime
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x95937C", Offset = "0x95937C", VA = "0x95937C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9593A8", Offset = "0x9593A8", VA = "0x9593A8")]
	public DeathmatchStartCountdownController()
	{
	}
}
[Token(Token = "0x200010D")]
public enum GameStateDM
{
	[Token(Token = "0x40005CF")]
	Menu,
	[Token(Token = "0x40005D0")]
	Playing,
	[Token(Token = "0x40005D1")]
	Over
}
[Token(Token = "0x200010E")]
public class MapVotingControllerDeathmatchCaller : MonoBehaviour
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MapVotingController mapVotingController;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x9593B0", Offset = "0x9593B0", VA = "0x9593B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x959408", Offset = "0x959408", VA = "0x959408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x9594A0", Offset = "0x9594A0", VA = "0x9594A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x959538", Offset = "0x959538", VA = "0x959538")]
	public MapVotingControllerDeathmatchCaller()
	{
	}
}
[Token(Token = "0x200010F")]
public class MasterChangerDeathMatch : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x2000111")]
	[CompilerGenerated]
	private sealed class <SetNewMasterDelayed>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MasterChangerDeathMatch <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600055A")]
			[Address(RVA = "0x959A84", Offset = "0x959A84", VA = "0x959A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055C")]
			[Address(RVA = "0x959ACC", Offset = "0x959ACC", VA = "0x959ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x9596B0", Offset = "0x9596B0", VA = "0x9596B0")]
		[DebuggerHidden]
		public <SetNewMasterDelayed>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x959924", Offset = "0x959924", VA = "0x959924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x959928", Offset = "0x959928", VA = "0x959928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x959A8C", Offset = "0x959A8C", VA = "0x959A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D3")]
	private const GameType gameType = GameType.Deathmatch;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnMenuMasterChanged;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x959540", Offset = "0x959540", VA = "0x959540")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x959598", Offset = "0x959598", VA = "0x959598")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x9595F0", Offset = "0x9595F0", VA = "0x9595F0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x95963C", Offset = "0x95963C", VA = "0x95963C")]
	[IteratorStateMachine(typeof(<SetNewMasterDelayed>d__5))]
	private IEnumerator SetNewMasterDelayed()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x959630", Offset = "0x959630", VA = "0x959630")]
	private bool GameUnpaused(bool pauseStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9596D8", Offset = "0x9596D8", VA = "0x9596D8")]
	private void SetNewMaster()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x959798", Offset = "0x959798", VA = "0x959798", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x95979C", Offset = "0x95979C", VA = "0x95979C", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9597A0", Offset = "0x9597A0", VA = "0x9597A0", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x9597A4", Offset = "0x9597A4", VA = "0x9597A4", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x9597A8", Offset = "0x9597A8", VA = "0x9597A8", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x959848", Offset = "0x959848", VA = "0x959848")]
	public MasterChangerDeathMatch()
	{
	}
}
[Token(Token = "0x2000112")]
public class PlayerDeathControllerDmMobile : PlayerDeathController, IInRoomCallbacks
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <ShowDelayedTextDeathPlayerTimeToRespawn>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerDmMobile <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x95A538", Offset = "0x95A538", VA = "0x95A538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000577")]
			[Address(RVA = "0x95A580", Offset = "0x95A580", VA = "0x95A580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x95A170", Offset = "0x95A170", VA = "0x95A170")]
		[DebuggerHidden]
		public <ShowDelayedTextDeathPlayerTimeToRespawn>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x95A390", Offset = "0x95A390", VA = "0x95A390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x95A394", Offset = "0x95A394", VA = "0x95A394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x95A540", Offset = "0x95A540", VA = "0x95A540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <DieSoundRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerDmMobile <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057B")]
			[Address(RVA = "0x95A618", Offset = "0x95A618", VA = "0x95A618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600057D")]
			[Address(RVA = "0x95A660", Offset = "0x95A660", VA = "0x95A660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x95A1C8", Offset = "0x95A1C8", VA = "0x95A1C8")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x95A588", Offset = "0x95A588", VA = "0x95A588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x95A58C", Offset = "0x95A58C", VA = "0x95A58C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x95A620", Offset = "0x95A620", VA = "0x95A620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DA")]
	private const float timeUntilRespawn = 5f;

	[Token(Token = "0x40005DB")]
	private const float respawnTimerTextDistanceFromPlayer = 2f;

	[Token(Token = "0x40005DC")]
	private const float timeUntilCounterToRespawnShouldBeVisible = 2f;

	[Token(Token = "0x40005DD")]
	private const float animationOffset = 0.5f;

	[Token(Token = "0x40005DE")]
	private const int distanceFromPlayer = 0;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip deathSound;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource deathAudioSource;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerMaterialsColorSetterMobile playerMaterialColorSetter;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDead;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool deathEffectTimeFinished;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTimeToRespawn;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FloatTextCanvas canvasWithTimeToRespawn;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds textDelay;

	[Token(Token = "0x17000076")]
	public override bool IsDead
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x959AD4", Offset = "0x959AD4", VA = "0x959AD4", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x959ADC", Offset = "0x959ADC", VA = "0x959ADC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x959B90", Offset = "0x959B90", VA = "0x959B90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x959BE8", Offset = "0x959BE8", VA = "0x959BE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x959C40", Offset = "0x959C40", VA = "0x959C40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x959C8C", Offset = "0x959C8C", VA = "0x959C8C")]
	private void ProcessDeathEffect()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x959F78", Offset = "0x959F78", VA = "0x959F78", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x95A0FC", Offset = "0x95A0FC", VA = "0x95A0FC")]
	[IteratorStateMachine(typeof(<ShowDelayedTextDeathPlayerTimeToRespawn>d__22))]
	private IEnumerator ShowDelayedTextDeathPlayerTimeToRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x95A0D0", Offset = "0x95A0D0", VA = "0x95A0D0")]
	public void EnableDeathEffects()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x959B64", Offset = "0x959B64", VA = "0x959B64")]
	public void DisableDeathEffects()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x95A198", Offset = "0x95A198", VA = "0x95A198", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x95A1BC", Offset = "0x95A1BC", VA = "0x95A1BC", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x95A05C", Offset = "0x95A05C", VA = "0x95A05C")]
	[IteratorStateMachine(typeof(<DieSoundRoutine>d__27))]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x959B40", Offset = "0x959B40", VA = "0x959B40")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x95A1F0", Offset = "0x95A1F0", VA = "0x95A1F0", Slot = "13")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x95A2A4", Offset = "0x95A2A4", VA = "0x95A2A4")]
	private bool IsWaitingForRespawn()
	{
		return default(bool);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x95A2D8", Offset = "0x95A2D8", VA = "0x95A2D8", Slot = "9")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x95A2DC", Offset = "0x95A2DC", VA = "0x95A2DC", Slot = "10")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x95A2E0", Offset = "0x95A2E0", VA = "0x95A2E0", Slot = "11")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x95A2E4", Offset = "0x95A2E4", VA = "0x95A2E4", Slot = "12")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x95A2E8", Offset = "0x95A2E8", VA = "0x95A2E8")]
	public PlayerDeathControllerDmMobile()
	{
	}
}
[Token(Token = "0x2000115")]
public class DeathAnimAdjuster : MonoBehaviour
{
	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private sealed class <RotateAngleByTime>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeathAnimAdjuster <>4__this;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion endRotationAngle;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float time;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <fromAngle>5__2;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <toAngle>5__3;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <t>5__4;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058D")]
			[Address(RVA = "0x95B09C", Offset = "0x95B09C", VA = "0x95B09C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x95B0E4", Offset = "0x95B0E4", VA = "0x95B0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x95ADA4", Offset = "0x95ADA4", VA = "0x95ADA4")]
		[DebuggerHidden]
		public <RotateAngleByTime>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x95AF9C", Offset = "0x95AF9C", VA = "0x95AF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x95AFA0", Offset = "0x95AFA0", VA = "0x95AFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x95B0A4", Offset = "0x95B0A4", VA = "0x95B0A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EE")]
	private const string deadAnimationStateName = "Dead";

	[Token(Token = "0x40005EF")]
	private const float rotationSpeed = 70f;

	[Token(Token = "0x40005F0")]
	private const float rotateTime = 0.2f;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnDeathAnimationAdjustingFinished;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator orcAnimator;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform transformToRotate;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider groundHitCollider;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minimumAnimationTimeToStartRotating;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform pelvis;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool isFallingBack;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimatorStateInfo currentAnimatorStateInfo;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion savedRotation;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 eulerAnglesToRotate;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentRotatedAngle;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool stopAdjusting;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool gotSlope;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x95A668", Offset = "0x95A668", VA = "0x95A668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x95A6AC", Offset = "0x95A6AC", VA = "0x95A6AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x95A6F4", Offset = "0x95A6F4", VA = "0x95A6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x95A8E0", Offset = "0x95A8E0", VA = "0x95A8E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x95ACF8", Offset = "0x95ACF8", VA = "0x95ACF8")]
	[IteratorStateMachine(typeof(<RotateAngleByTime>d__22))]
	private IEnumerator RotateAngleByTime(Quaternion endRotationAngle, float time)
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x95A7DC", Offset = "0x95A7DC", VA = "0x95A7DC")]
	private void AdjustBodyToGround()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x95A764", Offset = "0x95A764", VA = "0x95A764")]
	public bool ShouldRotateToGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x95AA98", Offset = "0x95AA98", VA = "0x95AA98")]
	private bool IsGroundHit(string colliderTag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x95ADCC", Offset = "0x95ADCC", VA = "0x95ADCC")]
	private static bool IsItStoppingDeathTag(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x95AAA0", Offset = "0x95AAA0", VA = "0x95AAA0")]
	private float GetGroundSlope()
	{
		return default(float);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x95AE60", Offset = "0x95AE60", VA = "0x95AE60")]
	private RaycastHit GetRaycastAtGround(Transform startingPoint)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x95AF88", Offset = "0x95AF88", VA = "0x95AF88")]
	public DeathAnimAdjuster()
	{
	}
}
[Token(Token = "0x2000117")]
public class DebugOrcTrailController : MonoBehaviour
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RouteController routeController;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool colorPicked;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x95B0EC", Offset = "0x95B0EC", VA = "0x95B0EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x95B1B8", Offset = "0x95B1B8", VA = "0x95B1B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x95B1E4", Offset = "0x95B1E4", VA = "0x95B1E4")]
	public DebugOrcTrailController()
	{
	}
}
[Token(Token = "0x2000118")]
public class debugtext : MonoBehaviourPun, IMatchmakingCallbacks
{
	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text1;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text2;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x95B1EC", Offset = "0x95B1EC", VA = "0x95B1EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x95B244", Offset = "0x95B244", VA = "0x95B244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x95B29C", Offset = "0x95B29C", VA = "0x95B29C", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x95B33C", Offset = "0x95B33C", VA = "0x95B33C", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x95B37C", Offset = "0x95B37C", VA = "0x95B37C", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x95B3BC", Offset = "0x95B3BC", VA = "0x95B3BC", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x95B3FC", Offset = "0x95B3FC", VA = "0x95B3FC", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x95B43C", Offset = "0x95B43C", VA = "0x95B43C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x95B47C", Offset = "0x95B47C", VA = "0x95B47C", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x95B4BC", Offset = "0x95B4BC", VA = "0x95B4BC")]
	public debugtext()
	{
	}
}
[Token(Token = "0x2000119")]
public class DestructibleLanternController : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	private const float minPitch = 0.8f;

	[Token(Token = "0x400060E")]
	private const float maxPitch = 1.4f;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light lightToBreak;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource brokenGlassSound;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource metalHitSound;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool broken;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x95B4C4", Offset = "0x95B4C4", VA = "0x95B4C4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x95B554", Offset = "0x95B554", VA = "0x95B554")]
	private void Break()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x95B594", Offset = "0x95B594", VA = "0x95B594")]
	public DestructibleLanternController()
	{
	}
}
[Token(Token = "0x200011A")]
public class DisableObjOnButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011B")]
	public class ObjToButtons
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode key;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x95B948", Offset = "0x95B948", VA = "0x95B948")]
		public ObjToButtons()
		{
		}
	}

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool DisableOnChange;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode ResetAll;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ObjToButtons> objToDisable;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x95B59C", Offset = "0x95B59C", VA = "0x95B59C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x95B938", Offset = "0x95B938", VA = "0x95B938")]
	public DisableObjOnButton()
	{
	}
}
[Token(Token = "0x200011C")]
public class DragonSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoutePoint dragonDeathPoint;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int DragonDeathPointIndex;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x95B950", Offset = "0x95B950", VA = "0x95B950")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x95BA28", Offset = "0x95BA28", VA = "0x95BA28")]
	public DragonSpawnPoint()
	{
	}
}
[Token(Token = "0x200011D")]
public class DummyArrowInteraction : MonoBehaviour
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody forceReceiver;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x95BA9C", Offset = "0x95BA9C", VA = "0x95BA9C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x95BC78", Offset = "0x95BC78", VA = "0x95BC78")]
	public DummyArrowInteraction()
	{
	}
}
[Token(Token = "0x200011E")]
public class ArrowWaterSplashController : MonoBehaviour
{
	[Token(Token = "0x400061B")]
	private const float rayMaxDistance = 100f;

	[Token(Token = "0x400061C")]
	private const float rayOriginOffset = 10f;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider waterCollider;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x95BC80", Offset = "0x95BC80", VA = "0x95BC80")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x95BEF4", Offset = "0x95BEF4", VA = "0x95BEF4")]
	public ArrowWaterSplashController()
	{
	}
}
[Token(Token = "0x200011F")]
public class BlankWalkingAnimationEventsReceiver : MonoBehaviour
{
	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x95BEFC", Offset = "0x95BEFC", VA = "0x95BEFC")]
	public void OnAnimationRightFootWaterSplash()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x95BF00", Offset = "0x95BF00", VA = "0x95BF00")]
	public void OnAnimationLeftFootWaterSplash()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x95BF04", Offset = "0x95BF04", VA = "0x95BF04")]
	public BlankWalkingAnimationEventsReceiver()
	{
	}
}
[Token(Token = "0x2000120")]
public class FallIntoWaterSplashController : MonoBehaviour, IResetable
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject smallWaterSplashPrefab;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider collider;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool isDependentOnRigidbodyVelocity;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minRigidbodyVelocity;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isSplashAlreadyCreated;

	[Token(Token = "0x1700007D")]
	private bool HasEnoughVelocity
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x95BF0C", Offset = "0x95BF0C", VA = "0x95BF0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x95BF50", Offset = "0x95BF50", VA = "0x95BF50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x95C038", Offset = "0x95C038", VA = "0x95C038")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x95C120", Offset = "0x95C120", VA = "0x95C120")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x95C36C", Offset = "0x95C36C", VA = "0x95C36C")]
	private void EnableCollider(HealthStateController obj)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x95C38C", Offset = "0x95C38C", VA = "0x95C38C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x95C3B4", Offset = "0x95C3B4", VA = "0x95C3B4")]
	public FallIntoWaterSplashController()
	{
	}
}
[Token(Token = "0x2000121")]
public class IsInWaterDetector : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInWater;

	[Token(Token = "0x1700007E")]
	public bool IsInWater
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x95C3BC", Offset = "0x95C3BC", VA = "0x95C3BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x95C3C4", Offset = "0x95C3C4", VA = "0x95C3C4")]
	private void OnTriggerEnter(Collider trigger)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x95C420", Offset = "0x95C420", VA = "0x95C420")]
	private void OnTriggerExit(Collider trigger)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x95C478", Offset = "0x95C478", VA = "0x95C478", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x95C480", Offset = "0x95C480", VA = "0x95C480")]
	public IsInWaterDetector()
	{
	}
}
[Token(Token = "0x2000122")]
public class OnAnimationWaterSplashController : MonoBehaviour
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IsInWaterDetector leftFootIsInWaterDetector;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IsInWaterDetector rightFootIsInWaterDetector;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x95C488", Offset = "0x95C488", VA = "0x95C488")]
	public void OnAnimationRightFootWaterSplash()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x95C5D4", Offset = "0x95C5D4", VA = "0x95C5D4")]
	public void OnAnimationLeftFootWaterSplash()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x95C720", Offset = "0x95C720", VA = "0x95C720")]
	public OnAnimationWaterSplashController()
	{
	}
}
[Token(Token = "0x2000123")]
public class WaterInfo : MonoBehaviour
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaterSize WaterSize;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x95C728", Offset = "0x95C728", VA = "0x95C728")]
	public WaterInfo()
	{
	}
}
[Token(Token = "0x2000124")]
public enum WaterSize
{
	[Token(Token = "0x400062D")]
	Small,
	[Token(Token = "0x400062E")]
	Big
}
[Token(Token = "0x2000125")]
public class WyvernFallEffect : MonoBehaviour
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider triggerCollider;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Water splash particles")]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject smallWaterSplashPrefab;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Dust particles")]
	[SerializeField]
	private List<ParticleSystem> dustParticlesList;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool hasCollided;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x95C730", Offset = "0x95C730", VA = "0x95C730")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x95C818", Offset = "0x95C818", VA = "0x95C818")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x95C918", Offset = "0x95C918", VA = "0x95C918")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x95CBC8", Offset = "0x95CBC8", VA = "0x95CBC8")]
	private void PlayDustEffect()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x95CA00", Offset = "0x95CA00", VA = "0x95CA00")]
	private void PlaySplashEffect(WaterSize waterSize)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x95CC54", Offset = "0x95CC54", VA = "0x95CC54")]
	private void EnableCollider(HealthStateController obj)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x95CC74", Offset = "0x95CC74", VA = "0x95CC74")]
	public WyvernFallEffect()
	{
	}
}
[Token(Token = "0x2000126")]
public class AnimEventAttackWraper : MonoBehaviour
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x95CC7C", Offset = "0x95CC7C", VA = "0x95CC7C")]
	public void DealDamage()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x95CCA0", Offset = "0x95CCA0", VA = "0x95CCA0")]
	private void DealHalfDamage()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x95CCC4", Offset = "0x95CCC4", VA = "0x95CCC4")]
	public AnimEventAttackWraper()
	{
	}
}
[Token(Token = "0x2000127")]
public class ArrowAttachmentPoint : MonoBehaviour
{
	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> attachmentPoints;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x95CCCC", Offset = "0x95CCCC", VA = "0x95CCCC")]
	public Transform CalculateClosestAttachmentPoint(Vector3 arrowPos)
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x95CDD8", Offset = "0x95CDD8", VA = "0x95CDD8")]
	public ArrowAttachmentPoint()
	{
	}
}
[Token(Token = "0x2000128")]
public class AttackController : AttackControllerCore, IResetable, IPunObservable
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _damage;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[RequireInterface(typeof(IAttackPlayer))]
	private UnityEngine.Object attackPlayerObject;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDuringAttack;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetID;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IAttackTarget target;

	[Token(Token = "0x1700007F")]
	protected override float damage
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x95CDE0", Offset = "0x95CDE0", VA = "0x95CDE0", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x95CDE8", Offset = "0x95CDE8", VA = "0x95CDE8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public bool IsDuringAttack
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x95CDF0", Offset = "0x95CDF0", VA = "0x95CDF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x95CDF8", Offset = "0x95CDF8", VA = "0x95CDF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	protected override IAttackTarget Target
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x95CED8", Offset = "0x95CED8", VA = "0x95CED8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x95CEE0", Offset = "0x95CEE0", VA = "0x95CEE0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public int TargetID
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x95D108", Offset = "0x95D108", VA = "0x95D108")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x95CFE8", Offset = "0x95CFE8", VA = "0x95CFE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	private IAttackPlayer AttackPlayer
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x95D110", Offset = "0x95D110", VA = "0x95D110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x95D158", Offset = "0x95D158", VA = "0x95D158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x95D1E0", Offset = "0x95D1E0", VA = "0x95D1E0", Slot = "8")]
	public override void Hit(float damageMultiplier = 1f)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x95D368", Offset = "0x95D368", VA = "0x95D368", Slot = "9")]
	public override bool HasTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x95CE30", Offset = "0x95CE30", VA = "0x95CE30")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x95D388", Offset = "0x95D388", VA = "0x95D388", Slot = "10")]
	public override void SetTarget(IAttackTarget newTarget)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x95D394", Offset = "0x95D394", VA = "0x95D394")]
	public void FinishAttack()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x95D558", Offset = "0x95D558", VA = "0x95D558", Slot = "11")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x95D56C", Offset = "0x95D56C", VA = "0x95D56C", Slot = "12")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x95D6B8", Offset = "0x95D6B8", VA = "0x95D6B8")]
	public AttackController()
	{
	}
}
[Token(Token = "0x2000129")]
public class BoatAnimatorController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isSinkingId;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int isDockedId;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isIdleId;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator boatAnimator;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAnimatorStopped;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isDocked;

	[Token(Token = "0x17000084")]
	public bool IsAnimatorStopped
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x95D6C8", Offset = "0x95D6C8", VA = "0x95D6C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x95D6D0", Offset = "0x95D6D0", VA = "0x95D6D0")]
		set
		{
		}
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x95D74C", Offset = "0x95D74C", VA = "0x95D74C")]
	public void PlayIdle()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x95D770", Offset = "0x95D770", VA = "0x95D770")]
	public void PlayDocked()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x95D794", Offset = "0x95D794", VA = "0x95D794")]
	public void PlaySinking()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x95D70C", Offset = "0x95D70C", VA = "0x95D70C")]
	public void StopAllAnimations()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x95D72C", Offset = "0x95D72C", VA = "0x95D72C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x95D7B8", Offset = "0x95D7B8", VA = "0x95D7B8", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x95D880", Offset = "0x95D880", VA = "0x95D880")]
	public BoatAnimatorController()
	{
	}
}
[Token(Token = "0x200012A")]
public class BoatBridgeAnimatorController : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnBridgeOpen;

	[Token(Token = "0x4000645")]
	private const string openingBridgeTriggerName = "OpenBridge";

	[Token(Token = "0x4000646")]
	private const string closingBridgeTriggerName = "CloseBridge";

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator boatBridgeAnimator;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldBridgeOpened;

	[Token(Token = "0x17000085")]
	public bool ShouldBridgeBeOpened
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x95D928", Offset = "0x95D928", VA = "0x95D928")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x95D930", Offset = "0x95D930", VA = "0x95D930")]
		set
		{
		}
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x95D95C", Offset = "0x95D95C", VA = "0x95D95C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x95D94C", Offset = "0x95D94C", VA = "0x95D94C")]
	private void UpdateBridgeState()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x95DA08", Offset = "0x95DA08", VA = "0x95DA08")]
	public void OnBridgeClosed()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x95DA0C", Offset = "0x95DA0C", VA = "0x95DA0C")]
	public void OnBridgeOpened()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x95D960", Offset = "0x95D960", VA = "0x95D960")]
	public void OpenBoatBridge()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x95D9B4", Offset = "0x95D9B4", VA = "0x95D9B4")]
	public void CloseBoatBridge()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x95DA28", Offset = "0x95DA28", VA = "0x95DA28")]
	public void StopAllAnimations()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x95DA48", Offset = "0x95DA48", VA = "0x95DA48", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x95DB24", Offset = "0x95DB24", VA = "0x95DB24", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x95DB64", Offset = "0x95DB64", VA = "0x95DB64")]
	public BoatBridgeAnimatorController()
	{
	}
}
[Token(Token = "0x200012B")]
public class BoatController : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x200012C")]
	[CompilerGenerated]
	private sealed class <PlaySinkingVisualAndSoundEffects>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoatController <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x95FBA8", Offset = "0x95FBA8", VA = "0x95FBA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0x95FBF0", Offset = "0x95FBF0", VA = "0x95FBF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x95EC8C", Offset = "0x95EC8C", VA = "0x95EC8C")]
		[DebuggerHidden]
		public <PlaySinkingVisualAndSoundEffects>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x95FA98", Offset = "0x95FA98", VA = "0x95FA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x95FA9C", Offset = "0x95FA9C", VA = "0x95FA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x95FBB0", Offset = "0x95FBB0", VA = "0x95FBB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private sealed class <FindHarborCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoatController <>4__this;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x95FD48", Offset = "0x95FD48", VA = "0x95FD48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x95FD90", Offset = "0x95FD90", VA = "0x95FD90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x95ECB4", Offset = "0x95ECB4", VA = "0x95ECB4")]
		[DebuggerHidden]
		public <FindHarborCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x95FBF8", Offset = "0x95FBF8", VA = "0x95FBF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x95FBFC", Offset = "0x95FBFC", VA = "0x95FBFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x95FD50", Offset = "0x95FD50", VA = "0x95FD50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatType boatType;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeOnFireBeforeSink;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeToStartExtinguishingFire;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeToSpeedUp;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BoatAnimatorController animatorController;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EnemyMovementController movementController;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem particle;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] boatRoutePointsTransform;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BoatEnemySpawner boatEnemySpawner;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private BoatBridgeAnimatorController boatBridgeAnimatorController;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private OrcCaptainOnBoatController orcCaptainOnBoatController;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private BoatSoundManager boatSoundManager;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject disappearCollidersGameObject;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform[] boatDefaultRoutePointsParent;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isOnFire;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isDocked;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool connectedToRoute;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int harborRoutePointIndex;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int numberOfOrcsInBoat;

	[Token(Token = "0x17000086")]
	public Harbor Harbor
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x95DB6C", Offset = "0x95DB6C", VA = "0x95DB6C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x95DB74", Offset = "0x95DB74", VA = "0x95DB74")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public BoatType BoatType
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x95DB7C", Offset = "0x95DB7C", VA = "0x95DB7C")]
		get
		{
			return default(BoatType);
		}
	}

	[Token(Token = "0x17000088")]
	public bool IsOnFire
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x95DB84", Offset = "0x95DB84", VA = "0x95DB84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x95DB8C", Offset = "0x95DB8C", VA = "0x95DB8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public bool IsDocked
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x95DE18", Offset = "0x95DE18", VA = "0x95DE18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x95DE20", Offset = "0x95DE20", VA = "0x95DE20")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	private int HarborRoutePointIndex
	{
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x95E024", Offset = "0x95E024", VA = "0x95E024")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x95E02C", Offset = "0x95E02C", VA = "0x95E02C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	private WaitForSeconds timeToWaitOnFireBeforeSink
	{
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x95E35C", Offset = "0x95E35C", VA = "0x95E35C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	private WaitForSeconds timeToWaitToStartExtinguishingFire
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x95E3CC", Offset = "0x95E3CC", VA = "0x95E3CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x95E43C", Offset = "0x95E43C", VA = "0x95E43C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x95E7CC", Offset = "0x95E7CC", VA = "0x95E7CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x95E4C4", Offset = "0x95E4C4", VA = "0x95E4C4")]
	private void SubscribeEvents()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x95E82C", Offset = "0x95E82C", VA = "0x95E82C")]
	private void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x95EC30", Offset = "0x95EC30", VA = "0x95EC30")]
	private void EnableDisappearColliders(HealthStateController obj)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x95EC50", Offset = "0x95EC50", VA = "0x95EC50")]
	private void OpenBridge()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x95EC58", Offset = "0x95EC58", VA = "0x95EC58")]
	private void SetOpenBridge(bool state)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x95DD08", Offset = "0x95DD08", VA = "0x95DD08")]
	[IteratorStateMachine(typeof(<PlaySinkingVisualAndSoundEffects>d__49))]
	private IEnumerator PlaySinkingVisualAndSoundEffects()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x95E758", Offset = "0x95E758", VA = "0x95E758")]
	[IteratorStateMachine(typeof(<FindHarborCoroutine>d__50))]
	private IEnumerator FindHarborCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x95ECDC", Offset = "0x95ECDC", VA = "0x95ECDC")]
	private void FindHarbor()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x95E120", Offset = "0x95E120", VA = "0x95E120")]
	private void ConnectSpawnerToHarbor()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x95EF9C", Offset = "0x95EF9C", VA = "0x95EF9C")]
	private void OnReachedNextRoutePoint()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x95F27C", Offset = "0x95F27C", VA = "0x95F27C")]
	[PunRPC]
	private void RPCRetreat()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x95F43C", Offset = "0x95F43C", VA = "0x95F43C")]
	public void TryRetreat()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x95DC08", Offset = "0x95DC08", VA = "0x95DC08")]
	private void DisposeBoatRoutePoints()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x95F2AC", Offset = "0x95F2AC", VA = "0x95F2AC")]
	private void OccupyBoatsCollisionPoints(bool isOccupying)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x95DDA4", Offset = "0x95DDA4", VA = "0x95DDA4")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x95DE5C", Offset = "0x95DE5C", VA = "0x95DE5C")]
	private void UpdateSnapToHarbor()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x95DFE8", Offset = "0x95DFE8", VA = "0x95DFE8")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x95F7E8", Offset = "0x95F7E8", VA = "0x95F7E8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x95F87C", Offset = "0x95F87C", VA = "0x95F87C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x95FA1C", Offset = "0x95FA1C", VA = "0x95FA1C")]
	public BoatController()
	{
	}
}
[Token(Token = "0x200012E")]
public class BoatEnemySpawner : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[RequireInterface(typeof(IEnemySpawner))]
	[SerializeField]
	private UnityEngine.Object _enemySpawner;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BoatBridgeAnimatorController boatBridgeAnimatorController;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcCaptainOnBoatController orcCaptainOnBoatController;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSpawningEnemies;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnStartedSpawningEnemies;

	[Token(Token = "0x17000091")]
	private IEnemySpawner enemySpawner
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x95FD98", Offset = "0x95FD98", VA = "0x95FD98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public bool IsSpawningEnemies
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x95FDE0", Offset = "0x95FDE0", VA = "0x95FDE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x95F0D4", Offset = "0x95F0D4", VA = "0x95F0D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x95FDE8", Offset = "0x95FDE8", VA = "0x95FDE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x9600E4", Offset = "0x9600E4", VA = "0x9600E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x95EEE8", Offset = "0x95EEE8", VA = "0x95EEE8")]
	public void SetSpawnAreaChooser(ISpawnAreaChooser spawnAreaChooser)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x960334", Offset = "0x960334", VA = "0x960334")]
	private void SetBoatRelatedComponents(GameObject spawnedEnemy)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x9603DC", Offset = "0x9603DC", VA = "0x9603DC")]
	private void StopSpawningEnemies()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x960040", Offset = "0x960040", VA = "0x960040")]
	private void SpawnOrcCaptain()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x960588", Offset = "0x960588", VA = "0x960588")]
	private void ReleaseEnemies()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x960790", Offset = "0x960790", VA = "0x960790", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x960798", Offset = "0x960798", VA = "0x960798", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x960860", Offset = "0x960860", VA = "0x960860")]
	public BoatEnemySpawner()
	{
	}
}
[Token(Token = "0x200012F")]
public class BoatHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatInitializer boatInitializer;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float fireDamageMulitlier;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float iceDamageMulitlier;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float normalDamageMulitlier;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x960868", Offset = "0x960868", VA = "0x960868", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x960AFC", Offset = "0x960AFC", VA = "0x960AFC", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x960B20", Offset = "0x960B20", VA = "0x960B20")]
	[PunRPC]
	private void RPCGetHit(float damage, int hitterActorNumber)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x960AA4", Offset = "0x960AA4", VA = "0x960AA4")]
	private bool IsFireHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x960AC0", Offset = "0x960AC0", VA = "0x960AC0")]
	private bool IsIceHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x960AF0", Offset = "0x960AF0", VA = "0x960AF0")]
	private bool IsNormalHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x960C68", Offset = "0x960C68", VA = "0x960C68")]
	public BoatHitController()
	{
	}
}
[Token(Token = "0x2000130")]
public class BoatHullTriggerController : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticlesFader particlesFader;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x960C70", Offset = "0x960C70", VA = "0x960C70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x960CF8", Offset = "0x960CF8", VA = "0x960CF8")]
	public BoatHullTriggerController()
	{
	}
}
[Token(Token = "0x2000131")]
public class BoatInitializer : MonoBehaviour
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float baseBoatHealth;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float unitHealth;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float healthScalingFactorPerPlayer;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[RequireInterface(typeof(IEnemySpawner))]
	private UnityEngine.Object _enemySpawner;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x17000093")]
	private int OrcCaptainsAmount
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x960D00", Offset = "0x960D00", VA = "0x960D00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	private IEnemySpawner enemiesFromBoatSpawner
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x960D48", Offset = "0x960D48", VA = "0x960D48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000095")]
	public float UnitHealth
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x960D90", Offset = "0x960D90", VA = "0x960D90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000096")]
	private float BoatHealth
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x960D98", Offset = "0x960D98", VA = "0x960D98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x960EB8", Offset = "0x960EB8", VA = "0x960EB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x961038", Offset = "0x961038", VA = "0x961038")]
	public BoatInitializer()
	{
	}
}
[Token(Token = "0x2000132")]
public class BoatKilledController : MonoBehaviourPun, IEnemyGetKilled
{
	[Token(Token = "0x400067D")]
	private const float boatStoppingTime = 10f;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatEnemySpawner boatEnemySpawner;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x961048", Offset = "0x961048", VA = "0x961048", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x961050", Offset = "0x961050", VA = "0x961050", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x9610EC", Offset = "0x9610EC", VA = "0x9610EC")]
	public BoatKilledController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000133")]
public class BoatReferences
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("BodyDissapearController")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x9610F4", Offset = "0x9610F4", VA = "0x9610F4")]
	public BoatReferences()
	{
	}
}
[Token(Token = "0x2000134")]
public class BoatReferencesSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Components")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Mobile References")]
	private BoatReferences boatReferencesMobile;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("PC References")]
	[SerializeField]
	private BoatReferences boatReferencesPC;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x9610FC", Offset = "0x9610FC", VA = "0x9610FC", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x9611C0", Offset = "0x9611C0", VA = "0x9611C0")]
	private void SetReferences(BoatReferences boatReferences)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x9611E8", Offset = "0x9611E8", VA = "0x9611E8")]
	public BoatReferencesSetter()
	{
	}
}
[Token(Token = "0x2000135")]
public class BoatReturnTimer : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxTimer;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x9611F0", Offset = "0x9611F0", VA = "0x9611F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x961244", Offset = "0x961244", VA = "0x961244", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x96124C", Offset = "0x96124C", VA = "0x96124C")]
	public BoatReturnTimer()
	{
	}
}
[Token(Token = "0x2000136")]
public class BoatRippleEffectEnabler : MonoBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnJoinPositionSynchronizer onJoinPositionSynchronizer;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem rippleEffect;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x96125C", Offset = "0x96125C", VA = "0x96125C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x961384", Offset = "0x961384", VA = "0x961384")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x961368", Offset = "0x961368", VA = "0x961368")]
	private void EnableRippleEffect()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x96145C", Offset = "0x96145C", VA = "0x96145C")]
	public BoatRippleEffectEnabler()
	{
	}
}
[Token(Token = "0x2000137")]
public class BoatRouteFinder : MonoBehaviour, IRouteFinder
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x961464", Offset = "0x961464", VA = "0x961464", Slot = "4")]
	public List<RoutePoint> GetNextRoutePoints(RoutePoint currentRoutePoint)
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x961648", Offset = "0x961648", VA = "0x961648")]
	public BoatRouteFinder()
	{
	}
}
[Token(Token = "0x2000138")]
public class BoatsCollisionPoint : MonoBehaviour
{
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isFree;

	[Token(Token = "0x17000097")]
	public bool IsFree
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0x961650", Offset = "0x961650", VA = "0x961650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600064D")]
		[Address(RVA = "0x95F754", Offset = "0x95F754", VA = "0x95F754")]
		set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action OnPointReleased
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0x95EAC0", Offset = "0x95EAC0", VA = "0x95EAC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600064B")]
		[Address(RVA = "0x95EB78", Offset = "0x95EB78", VA = "0x95EB78")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x961658", Offset = "0x961658", VA = "0x961658")]
	public BoatsCollisionPoint()
	{
	}
}
[Token(Token = "0x2000139")]
public class BoatsCollisionPointTrigger : MonoBehaviour
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0x961668", Offset = "0x961668", VA = "0x961668")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x961714", Offset = "0x961714", VA = "0x961714")]
	public BoatsCollisionPointTrigger()
	{
	}
}
[Token(Token = "0x200013A")]
public enum BoatType
{
	[Token(Token = "0x400068F")]
	BoatWooden,
	[Token(Token = "0x4000690")]
	BoatMetal,
	[Token(Token = "0x4000691")]
	BoatBoneSmall,
	[Token(Token = "0x4000692")]
	BoatBoneBig
}
[Token(Token = "0x200013B")]
public class Harbor : MonoBehaviour
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatType boatType;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RoutePoint firstRetreatRoutePoint;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RoutePoint[] boatRoutePoints;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<BoatsCollisionPoint> boatsCollisionPoints;

	[Token(Token = "0x17000098")]
	public RoutePoint FirstRetreatRoutePoint
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x96171C", Offset = "0x96171C", VA = "0x96171C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public RoutePoint[] BoatRoutePoints
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0x961724", Offset = "0x961724", VA = "0x961724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public List<BoatsCollisionPoint> BoatsCollisionPoints
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x96172C", Offset = "0x96172C", VA = "0x96172C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	public BoatType BoatType
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0x961734", Offset = "0x961734", VA = "0x961734")]
		get
		{
			return default(BoatType);
		}
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x95F624", Offset = "0x95F624", VA = "0x95F624")]
	public bool AllCollisionPointsAreFree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x96173C", Offset = "0x96173C", VA = "0x96173C")]
	public Harbor()
	{
	}
}
[Token(Token = "0x200013D")]
public class BezierMovementProcessor : MonoBehaviourPun, IMovementProcessor, ISynchronizable
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float t;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastT;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoutePoint currentRoutePoint;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 nextPosition;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9617D4", Offset = "0x9617D4", VA = "0x9617D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9617FC", Offset = "0x9617FC", VA = "0x9617FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x961894", Offset = "0x961894", VA = "0x961894", Slot = "5")]
	public Vector3 CalculatePosition(Transform currentTransform, Vector3 target, float distanceToMove, float maxDistance, RoutePoint currentStartingRoutePoint, BezierRoutePartInfo bezierRoutePartInfo, Spline spline, ref float currentDistanceOnSpline)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x961B14", Offset = "0x961B14", VA = "0x961B14", Slot = "4")]
	public Quaternion CalculateRotation(Transform currentTransform, Vector3 target, float rotationSpeed, Spline spline, float currentDistanceOnSpline)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x961D18", Offset = "0x961D18", VA = "0x961D18")]
	[PunRPC]
	public void RPCSynchronizeMovement(float _tFactor, int currentRoutePointIndex)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x961DC0", Offset = "0x961DC0", VA = "0x961DC0", Slot = "6")]
	public void Synchronize(Player player)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x961F8C", Offset = "0x961F8C", VA = "0x961F8C")]
	public BezierMovementProcessor()
	{
	}
}
[Token(Token = "0x200013E")]
public class BoatMovement : MonoBehaviourPun, IMovementProcessor, ISynchronizable
{
	[Token(Token = "0x400069E")]
	private const float minDistanceToTravel = 0.01f;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float t;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoutePoint currentRoutePoint;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 nextPosition;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x961F94", Offset = "0x961F94", VA = "0x961F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x961FBC", Offset = "0x961FBC", VA = "0x961FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x962054", Offset = "0x962054", VA = "0x962054", Slot = "5")]
	public Vector3 CalculatePosition(Transform currentTransform, Vector3 target, float distanceToMove, float maxDistance, RoutePoint currentStartingRoutePoint, BezierRoutePartInfo bezierRoutePartInfo, Spline spline, ref float currentDistanceOnSpline)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x96230C", Offset = "0x96230C", VA = "0x96230C", Slot = "4")]
	public Quaternion CalculateRotation(Transform currentTransform, Vector3 target, float rotationSpeed, Spline spline, float currentDistanceOnSpline)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x9624B0", Offset = "0x9624B0", VA = "0x9624B0")]
	[PunRPC]
	public void RPCBoatMovementSynchronize(float _tFactor, int currentRoutePointIndex)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x962558", Offset = "0x962558", VA = "0x962558", Slot = "6")]
	public void Synchronize(Player player)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x962724", Offset = "0x962724", VA = "0x962724")]
	public BoatMovement()
	{
	}
}
[Token(Token = "0x200013F")]
public class OrcCaptainOnBoatController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcCaptainPrefab;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform captainPositionOnBoat;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnJoinPositionSynchronizer onJoinPositionSynchronizer;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HealthStateController orcCaptainHealthStateController;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OrcCaptainController orcCaptainController;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject orcCaptain;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isCaptainOnBoat;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int orcCaptainViewId;

	[Token(Token = "0x1700009C")]
	public bool IsCaptainOnBoat
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x96272C", Offset = "0x96272C", VA = "0x96272C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x960664", Offset = "0x960664", VA = "0x960664")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	private int OrcCaptainViewID
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x962790", Offset = "0x962790", VA = "0x962790")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x962770", Offset = "0x962770", VA = "0x962770")]
		set
		{
		}
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x9603E4", Offset = "0x9603E4", VA = "0x9603E4")]
	public GameObject SpawnCaptain()
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x95DD7C", Offset = "0x95DD7C", VA = "0x95DD7C")]
	public void KillOrcCaptain()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x962798", Offset = "0x962798", VA = "0x962798")]
	private void SynchronizeCaptain()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x962A2C", Offset = "0x962A2C", VA = "0x962A2C")]
	private GameObject GetOrcCaptain(int photonViewId)
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x962A50", Offset = "0x962A50", VA = "0x962A50", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x962AD8", Offset = "0x962AD8", VA = "0x962AD8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x962C2C", Offset = "0x962C2C", VA = "0x962C2C")]
	public OrcCaptainOnBoatController()
	{
	}
}
[Token(Token = "0x2000140")]
public class BodyAttacher : MonoBehaviour, IResetable
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform bone;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetWithArrowPosition;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float attachingSpeed;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float step;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x962C3C", Offset = "0x962C3C", VA = "0x962C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x962EE8", Offset = "0x962EE8", VA = "0x962EE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x962C54", Offset = "0x962C54", VA = "0x962C54")]
	private void ProcessAttaching()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x962D58", Offset = "0x962D58", VA = "0x962D58")]
	private void TryToEndAttaching()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x962EF0", Offset = "0x962EF0", VA = "0x962EF0")]
	private void SetInitialState()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x962EF8", Offset = "0x962EF8", VA = "0x962EF8")]
	public void StartAttachingArrowToBone(Transform target)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x962F1C", Offset = "0x962F1C", VA = "0x962F1C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x962F44", Offset = "0x962F44", VA = "0x962F44")]
	public BodyAttacher()
	{
	}
}
[Token(Token = "0x2000141")]
public class CartAssailant : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OnRouteFinishedEnemyDestroyer onRouteFinishedEnemyDestroyer;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyTimeoutController timeoutController;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CartAttackTrigger cartAttackTrigger;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isCartAssaliantInTrigger;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isAttacking;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnFinishedAssault;

	[Token(Token = "0x1700009E")]
	public bool IsAttacking
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x962F54", Offset = "0x962F54", VA = "0x962F54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x962F5C", Offset = "0x962F5C", VA = "0x962F5C")]
		set
		{
		}
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x963058", Offset = "0x963058", VA = "0x963058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x96324C", Offset = "0x96324C", VA = "0x96324C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x963344", Offset = "0x963344", VA = "0x963344")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x963530", Offset = "0x963530", VA = "0x963530")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x963624", Offset = "0x963624", VA = "0x963624")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x9631FC", Offset = "0x9631FC", VA = "0x9631FC")]
	private void FinishAssault()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x963460", Offset = "0x963460", VA = "0x963460")]
	private void PrepareForAttackingCart()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x963710", Offset = "0x963710", VA = "0x963710")]
	public void AttackCart()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x963800", Offset = "0x963800", VA = "0x963800", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x963828", Offset = "0x963828", VA = "0x963828", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x963948", Offset = "0x963948", VA = "0x963948")]
	public CartAssailant()
	{
	}
}
[Token(Token = "0x2000142")]
public class DragonAnimatorController : MonoBehaviour, IResetable
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool deadAnimPlayed;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x963950", Offset = "0x963950", VA = "0x963950")]
	public void StartDeathAnimation()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x9639C0", Offset = "0x9639C0", VA = "0x9639C0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x9639C8", Offset = "0x9639C8", VA = "0x9639C8")]
	public DragonAnimatorController()
	{
	}
}
[Token(Token = "0x2000143")]
public class DragonAttackCollider : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float attackDuration;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DragonAttackTargetInfo> attackTargetsInfo;

	[Token(Token = "0x1700009F")]
	public WaitForSeconds WaitAfterAttack
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x9639D0", Offset = "0x9639D0", VA = "0x9639D0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x9639D8", Offset = "0x9639D8", VA = "0x9639D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x9639E0", Offset = "0x9639E0", VA = "0x9639E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x963B58", Offset = "0x963B58", VA = "0x963B58")]
	public DragonAttackCollider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000144")]
public class DragonAttackTargetInfo
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float damageDelay;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TeleportCollider> teleportColliders;

	[Token(Token = "0x170000A0")]
	public WaitForSeconds waitForDamage
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x963B68", Offset = "0x963B68", VA = "0x963B68")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x963B70", Offset = "0x963B70", VA = "0x963B70")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x963AE0", Offset = "0x963AE0", VA = "0x963AE0")]
	public void InitializeWait()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x963B78", Offset = "0x963B78", VA = "0x963B78")]
	public DragonAttackTargetInfo()
	{
	}
}
[Token(Token = "0x2000145")]
public class DragonAudio : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource attackSource;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] attackClips;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource deathSource;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource fieryBreath;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip[] fieryBreathClips;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource runSource;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] runclip;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource roarSource;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] roarClips;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x963B80", Offset = "0x963B80", VA = "0x963B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x963C20", Offset = "0x963C20", VA = "0x963C20")]
	public void PlayDragonAttackSound()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x963C44", Offset = "0x963C44", VA = "0x963C44")]
	public void PlayDragonDeathSound()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x963B88", Offset = "0x963B88", VA = "0x963B88")]
	public void SetMovementSound(bool value)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x963C50", Offset = "0x963C50", VA = "0x963C50")]
	public void StopAttackSound()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x963C90", Offset = "0x963C90", VA = "0x963C90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x963D38", Offset = "0x963D38", VA = "0x963D38")]
	public DragonAudio()
	{
	}
}
[Token(Token = "0x2000146")]
public class DragonCastleAttackCollider : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GateController attackedCastleController;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x963D40", Offset = "0x963D40", VA = "0x963D40")]
	public DragonCastleAttackCollider()
	{
	}
}
[Token(Token = "0x2000147")]
public class DragonHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x963D48", Offset = "0x963D48", VA = "0x963D48", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x963D50", Offset = "0x963D50", VA = "0x963D50", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x963F60", Offset = "0x963F60", VA = "0x963F60")]
	[PunRPC]
	public void RPCGetHitDragon(float damage, int clientID)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x9640DC", Offset = "0x9640DC", VA = "0x9640DC")]
	public DragonHitController()
	{
	}
}
[Token(Token = "0x2000148")]
public class RoarTag : MonoBehaviour
{
	[Token(Token = "0x600069F")]
	[Address(RVA = "0x9640E4", Offset = "0x9640E4", VA = "0x9640E4")]
	public RoarTag()
	{
	}
}
[Token(Token = "0x2000149")]
public class EnemyProjectileDestroyer : MonoBehaviour, IResetable
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentLifeTime;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x9640EC", Offset = "0x9640EC", VA = "0x9640EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x9641AC", Offset = "0x9641AC", VA = "0x9641AC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x9641B4", Offset = "0x9641B4", VA = "0x9641B4")]
	public EnemyProjectileDestroyer()
	{
	}
}
[Token(Token = "0x200014A")]
public class FlyingEnemyHitGroundSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hitGroundAudioSource;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playedHitGroundSound;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x9641C4", Offset = "0x9641C4", VA = "0x9641C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x964200", Offset = "0x964200", VA = "0x964200")]
	private bool IsTriggeredHitCollider(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x96429C", Offset = "0x96429C", VA = "0x96429C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x9642A4", Offset = "0x9642A4", VA = "0x9642A4")]
	public FlyingEnemyHitGroundSoundController()
	{
	}
}
[Token(Token = "0x200014B")]
public class FrozenEnemyBreakController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[RequireInterface(typeof(IFrozenEnemyBreakable))]
	private UnityEngine.Object objectEnemyBreakable;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IFrozenEnemyBreakable frozenEnemyBreakable;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 breakHitDirection;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isBroken;

	[Token(Token = "0x170000A1")]
	public bool IsBroken
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x9642AC", Offset = "0x9642AC", VA = "0x9642AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x9642B4", Offset = "0x9642B4", VA = "0x9642B4")]
		private set
		{
		}
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x9643AC", Offset = "0x9643AC", VA = "0x9643AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x964414", Offset = "0x964414", VA = "0x964414")]
	public void Break(Vector3 breakHitDirection)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x9642E8", Offset = "0x9642E8", VA = "0x9642E8")]
	private void Break()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x964444", Offset = "0x964444", VA = "0x964444", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x96444C", Offset = "0x96444C", VA = "0x96444C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9645B8", Offset = "0x9645B8", VA = "0x9645B8")]
	public FrozenEnemyBreakController()
	{
	}
}
[Token(Token = "0x200014C")]
public class FrozenEnemyBreakOnCollisionController : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ForceDirectionExploderController frontCollider;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ForceDirectionExploderController backCollider;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x9645C0", Offset = "0x9645C0", VA = "0x9645C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x9646A0", Offset = "0x9646A0", VA = "0x9646A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x964780", Offset = "0x964780", VA = "0x964780")]
	public void OnFrontCollision()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x9647E8", Offset = "0x9647E8", VA = "0x9647E8")]
	public void OnBackCollision()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x964844", Offset = "0x964844", VA = "0x964844")]
	public void SetReferences(ForceDirectionExploderController _frontCollider, ForceDirectionExploderController _backCollider)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x964874", Offset = "0x964874", VA = "0x964874")]
	public FrozenEnemyBreakOnCollisionController()
	{
	}
}
[Token(Token = "0x200014D")]
public class IceMaterialAnimator : MonoBehaviour, IResetable
{
	[Token(Token = "0x40006DB")]
	private const string shaderIcePropertyName = "_IceAmount";

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<(Renderer, Material)> iceRendererData;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float creatingIceDuration;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isAnimating;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float creatingIceActualTime;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x96487C", Offset = "0x96487C", VA = "0x96487C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x9648E4", Offset = "0x9648E4", VA = "0x9648E4")]
	public void AnimateIce(List<(Renderer, Material)> iceRendererData)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x9649B0", Offset = "0x9649B0", VA = "0x9649B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x964AD0", Offset = "0x964AD0", VA = "0x964AD0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x964ADC", Offset = "0x964ADC", VA = "0x964ADC")]
	public IceMaterialAnimator()
	{
	}
}
[Token(Token = "0x200014E")]
public interface IFreezable
{
	[Token(Token = "0x60006BA")]
	void Freeze();
}
[Token(Token = "0x200014F")]
public interface IFrozenEnemyBreakable
{
	[Token(Token = "0x60006BB")]
	void Break(Vector3 breakHitDirection);
}
[Token(Token = "0x2000150")]
public class ArrowHitInfo : HitInfoAbstract
{
	[Token(Token = "0x170000A2")]
	public Vector3 HitDirection
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x964AEC", Offset = "0x964AEC", VA = "0x964AEC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x964AF8", Offset = "0x964AF8", VA = "0x964AF8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public override KillType KillType
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x964B04", Offset = "0x964B04", VA = "0x964B04", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(KillType);
		}
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x964B0C", Offset = "0x964B0C", VA = "0x964B0C", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public override Player Hitter
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x964B14", Offset = "0x964B14", VA = "0x964B14", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x964B1C", Offset = "0x964B1C", VA = "0x964B1C", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public override AbilityType AbilityType
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x964B24", Offset = "0x964B24", VA = "0x964B24", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return default(AbilityType);
		}
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x964B2C", Offset = "0x964B2C", VA = "0x964B2C", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public override float Damage
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x964B34", Offset = "0x964B34", VA = "0x964B34", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x964B3C", Offset = "0x964B3C", VA = "0x964B3C", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public override bool IsHeadShot
	{
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x964B44", Offset = "0x964B44", VA = "0x964B44", Slot = "12")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x964B4C", Offset = "0x964B4C", VA = "0x964B4C", Slot = "13")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public override bool IsWindowShot
	{
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x964B58", Offset = "0x964B58", VA = "0x964B58", Slot = "14")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x964B60", Offset = "0x964B60", VA = "0x964B60", Slot = "15")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public override bool IsCriticalHit
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x964B6C", Offset = "0x964B6C", VA = "0x964B6C", Slot = "16")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x964B74", Offset = "0x964B74", VA = "0x964B74", Slot = "17")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public override float Distance
	{
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x964B80", Offset = "0x964B80", VA = "0x964B80", Slot = "18")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x964B88", Offset = "0x964B88", VA = "0x964B88", Slot = "19")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x964B90", Offset = "0x964B90", VA = "0x964B90")]
	public ArrowHitInfo()
	{
	}
}
[Token(Token = "0x2000151")]
public class EnemyFreezeOnHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KillType[] hitNames;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x964B98", Offset = "0x964B98", VA = "0x964B98", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x964C20", Offset = "0x964C20", VA = "0x964C20", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x964D9C", Offset = "0x964D9C", VA = "0x964D9C")]
	[PunRPC]
	private void RPCGetHitFreeze(int hitterActorNumber)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x964EB0", Offset = "0x964EB0", VA = "0x964EB0")]
	public EnemyFreezeOnHitController()
	{
	}
}
[Token(Token = "0x2000152")]
public class EnemyFreezeKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x964EB8", Offset = "0x964EB8", VA = "0x964EB8", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x964ED8", Offset = "0x964ED8", VA = "0x964ED8", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x964EF8", Offset = "0x964EF8", VA = "0x964EF8")]
	public EnemyFreezeKilledController()
	{
	}
}
[Token(Token = "0x2000153")]
public class FreezingArrowKillInfo : KillInfo
{
	[Token(Token = "0x170000AB")]
	public float Damage
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x964F00", Offset = "0x964F00", VA = "0x964F00")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x964F08", Offset = "0x964F08", VA = "0x964F08")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public Vector3 HitDirection
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x964F10", Offset = "0x964F10", VA = "0x964F10")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x964F1C", Offset = "0x964F1C", VA = "0x964F1C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x964F28", Offset = "0x964F28", VA = "0x964F28")]
	public FreezingArrowKillInfo()
	{
	}
}
[Token(Token = "0x2000154")]
public class TrollRockSoundController : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip explosionAudioClip;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x964F30", Offset = "0x964F30", VA = "0x964F30")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x964F64", Offset = "0x964F64", VA = "0x964F64")]
	public void PlayExplosionSound()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x964F98", Offset = "0x964F98", VA = "0x964F98")]
	public TrollRockSoundController()
	{
	}
}
[Token(Token = "0x2000155")]
public interface IAttackPlayer
{
	[Token(Token = "0x60006DE")]
	void PlayAttack();
}
[Token(Token = "0x2000156")]
public interface IBodyDisappearingCheckable
{
	[Token(Token = "0x60006DF")]
	bool IsBodyDisappearingFinished();
}
[Token(Token = "0x2000157")]
public class KamikazeAttackPlayer : MonoBehaviour, IAttackPlayer
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExplosiveBarrelController explosiveBarrelController;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x964FA0", Offset = "0x964FA0", VA = "0x964FA0", Slot = "4")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x96501C", Offset = "0x96501C", VA = "0x96501C")]
	public void SetReferences(ExplosiveBarrelController explosiveBarrelController)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x965024", Offset = "0x965024", VA = "0x965024")]
	public KamikazeAttackPlayer()
	{
	}
}
[Token(Token = "0x2000158")]
public class AnimationsPicker : MonoBehaviour
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[SerializeField]
	private float chanceToPlayProvokeAnim;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OrcCaptainController orcCaptainController;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x96502C", Offset = "0x96502C", VA = "0x96502C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x965084", Offset = "0x965084", VA = "0x965084")]
	public void DrawCaptainAnim()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x9652E0", Offset = "0x9652E0", VA = "0x9652E0")]
	public void DrawAttackAnim()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x965308", Offset = "0x965308", VA = "0x965308")]
	public void OnCelebrationFinishedAnimationEvent()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x965320", Offset = "0x965320", VA = "0x965320")]
	public AnimationsPicker()
	{
	}
}
[Token(Token = "0x2000159")]
public class EnemyBowAdjuster : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform handWithArrowReference;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion initialHandWithArrowRotation;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAdjustingBow;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool areInitialValuesSet;

	[Token(Token = "0x170000AD")]
	public bool IsAdjustingBow
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x965330", Offset = "0x965330", VA = "0x965330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x965338", Offset = "0x965338", VA = "0x965338")]
		set
		{
		}
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x9653A8", Offset = "0x9653A8", VA = "0x9653A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x9653DC", Offset = "0x9653DC", VA = "0x9653DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x965370", Offset = "0x965370", VA = "0x965370")]
	private void SetInitialRotation()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x965534", Offset = "0x965534", VA = "0x965534", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x965538", Offset = "0x965538", VA = "0x965538", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x96560C", Offset = "0x96560C", VA = "0x96560C")]
	public EnemyBowAdjuster()
	{
	}
}
[Token(Token = "0x200015A")]
public class OrcArcherController : MonoBehaviour, IInRoomCallbacks
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerColliderDetector playerColliderDetector;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandler;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyArrowShootController enemyArrowShootController;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x965614", Offset = "0x965614", VA = "0x965614")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x965910", Offset = "0x965910", VA = "0x965910")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x965C0C", Offset = "0x965C0C", VA = "0x965C0C")]
	private void TryStartShooting(PlayerController playerController)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x965C28", Offset = "0x965C28", VA = "0x965C28")]
	private void StartTrackingPathAgain()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x965D1C", Offset = "0x965D1C", VA = "0x965D1C")]
	private void EndShooting(HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x965D20", Offset = "0x965D20", VA = "0x965D20")]
	private void EndShooting()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x965DA4", Offset = "0x965DA4", VA = "0x965DA4")]
	private void StartMove()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x965E88", Offset = "0x965E88", VA = "0x965E88")]
	private void TryToEnableOrcMovement()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x965EC8", Offset = "0x965EC8", VA = "0x965EC8")]
	public void SetReferences(EnemyArrowShootController _enemyArrowShootController, OnArrowShootAnimationEventHandler _onArrowShootAnimationEventHandler)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x965EF8", Offset = "0x965EF8", VA = "0x965EF8", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x965F9C", Offset = "0x965F9C", VA = "0x965F9C", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x965FA0", Offset = "0x965FA0", VA = "0x965FA0", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x965FA4", Offset = "0x965FA4", VA = "0x965FA4", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x965FA8", Offset = "0x965FA8", VA = "0x965FA8", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x965FAC", Offset = "0x965FAC", VA = "0x965FAC")]
	public OrcArcherController()
	{
	}
}
[Token(Token = "0x200015B")]
public class WeaponIk : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform aimTransform;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform bone;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler arrowShootAnimationEventHandler;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootController;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float animationBlend;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool shouldAimAtTarget;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x965FB4", Offset = "0x965FB4", VA = "0x965FB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x9661CC", Offset = "0x9661CC", VA = "0x9661CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x9663E4", Offset = "0x9663E4", VA = "0x9663E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x96653C", Offset = "0x96653C", VA = "0x96653C")]
	private void AitmAtTarget(Transform bone, Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x966434", Offset = "0x966434", VA = "0x966434")]
	private Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x966664", Offset = "0x966664", VA = "0x966664")]
	private void ApplyAimAtTaget()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x966670", Offset = "0x966670", VA = "0x966670")]
	private void RemoveAimAtTaget(Player player)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x9666D0", Offset = "0x9666D0", VA = "0x9666D0")]
	private void RemoveAimAtTaget()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x9666D8", Offset = "0x9666D8", VA = "0x9666D8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x966740", Offset = "0x966740", VA = "0x966740")]
	public WeaponIk()
	{
	}
}
[Token(Token = "0x200015C")]
public class BodyFreezeEffect : MonoBehaviour, IResetable
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BodyVisualEffectRendererData> renderersData;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadingDuration;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	[SerializeField]
	private float maxEffectAmount;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fadingOutMultiplier;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFadingInMaterial;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isFadingOutMaterial;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool isRevertingMaterial;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadingActualTime;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float shaderValueToSet;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderPropertyName;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x966748", Offset = "0x966748", VA = "0x966748")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x9668BC", Offset = "0x9668BC", VA = "0x9668BC")]
	public void EnableVisualEffect()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x966C7C", Offset = "0x966C7C", VA = "0x966C7C")]
	public void DisableVisualEffect()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x9667CC", Offset = "0x9667CC", VA = "0x9667CC")]
	private void IncreaseVisualEffect()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x966808", Offset = "0x966808", VA = "0x966808")]
	private void DecreaseVisualEffect()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x966DE0", Offset = "0x966DE0", VA = "0x966DE0")]
	private void FadeVisualsDown()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x966CB0", Offset = "0x966CB0", VA = "0x966CB0")]
	private void SetShaderValueForAllRenderersData()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x966E24", Offset = "0x966E24", VA = "0x966E24")]
	private void SetShaderValueForAllRenderers(BodyVisualEffectRendererData rendererData)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x966F5C", Offset = "0x966F5C", VA = "0x966F5C")]
	private void SetShaderValueForAllMaterials(Renderer renderer)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x966A38", Offset = "0x966A38", VA = "0x966A38")]
	private void SetMaterialsForAllRenderers(List<Renderer> renderers, List<Material> materials)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x966FD8", Offset = "0x966FD8", VA = "0x966FD8")]
	private void SetMaterials(Renderer renderer, List<Material> materials)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x967204", Offset = "0x967204", VA = "0x967204")]
	private void RevertMaterials()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x966890", Offset = "0x966890", VA = "0x966890")]
	private void SetInitialState()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x967354", Offset = "0x967354", VA = "0x967354", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x967380", Offset = "0x967380", VA = "0x967380")]
	public BodyFreezeEffect()
	{
	}
}
[Token(Token = "0x200015D")]
public interface IFrozenArrowHittable
{
	[Token(Token = "0x6000718")]
	void GetHitByFrozenArrow(float damage, int clientID, Vector3 direction);
}
[Token(Token = "0x200015E")]
public class OnArrowShootAnimationEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnArrowShoot;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnShootingFinished;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnArrowAttachToString;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnDrawArrow;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x9673F0", Offset = "0x9673F0", VA = "0x9673F0")]
	public void DrawArrow()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x96740C", Offset = "0x96740C", VA = "0x96740C")]
	public void AimToTarget()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x967428", Offset = "0x967428", VA = "0x967428")]
	public void ShootArrow()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x967444", Offset = "0x967444", VA = "0x967444")]
	public void FinishShooting()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x967460", Offset = "0x967460", VA = "0x967460")]
	public OnArrowShootAnimationEventHandler()
	{
	}
}
[Token(Token = "0x200015F")]
public class OrcAnimatorController : MonoBehaviourPun, IResetable, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x2000160")]
	[CompilerGenerated]
	private sealed class <GetHitAnimationRoutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrcAnimatorController <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x968A88", Offset = "0x968A88", VA = "0x968A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x968AD0", Offset = "0x968AD0", VA = "0x968AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x967D18", Offset = "0x967D18", VA = "0x967D18")]
		[DebuggerHidden]
		public <GetHitAnimationRoutine>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x968950", Offset = "0x968950", VA = "0x968950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x968954", Offset = "0x968954", VA = "0x968954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x968A90", Offset = "0x968A90", VA = "0x968A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071C")]
	private const float minCelebratingSpeed = 0.8f;

	[Token(Token = "0x400071D")]
	private const float maxCelebratingSpeed = 1.2f;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int hit;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int attack1;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int attack2;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int attack3;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int running;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int walking;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int throwing;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int gettingWeapon;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int dead;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int dieOnBack;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int notHit;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int idling;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly int givingOrder;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int taunt;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int chestHitting;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int shootArrow;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int celebratingSpeedAnimatorHash;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int[] celebratingAnimatorHashes;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float timeOfReturningFromHitAnimation;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float defaultTimeOfReturningFromHitAnimation;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private OrcThrowingAxeController orcThrowingAxeController;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject swordInHand;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject swordOnBack;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isShooting;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool defaultIsHit;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool defaultIsRunning;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool defaultIsWalking;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool defaultIsThrowing;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool defaultIsGettingWeapon;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool defaultIsDead;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	private bool defaultShouldDieOnBack;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool defaultIsChangingAnimationLocked;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool deafultDeathAnimAdjusterEnabled;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool isSyncingFromPhoton;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool isAnimatorActiveForParameterSync;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool isChangingAnimationLocked;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnDeathAnimationPlayed;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isHit;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isRunning;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isWalking;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool isThrowing;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool isGettingWeapon;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool isDead;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	private bool shouldDieOnBack;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
	private bool isIdleing;

	[Token(Token = "0x170000AE")]
	private int[] provokeAnims
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x967468", Offset = "0x967468", VA = "0x967468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AF")]
	private int[] attackAnims
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x9674F0", Offset = "0x9674F0", VA = "0x9674F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B0")]
	public bool IsHit
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x967578", Offset = "0x967578", VA = "0x967578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x967580", Offset = "0x967580", VA = "0x967580")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public bool IsRunning
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x967618", Offset = "0x967618", VA = "0x967618")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x967620", Offset = "0x967620", VA = "0x967620")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public bool IsWalking
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x9676A4", Offset = "0x9676A4", VA = "0x9676A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x9676AC", Offset = "0x9676AC", VA = "0x9676AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool IsThrowing
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x967730", Offset = "0x967730", VA = "0x967730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x967738", Offset = "0x967738", VA = "0x967738")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool IsGettingWeapon
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x9677BC", Offset = "0x9677BC", VA = "0x9677BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x9677C4", Offset = "0x9677C4", VA = "0x9677C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public bool IsDead
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x967848", Offset = "0x967848", VA = "0x967848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x967850", Offset = "0x967850", VA = "0x967850")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public bool ShouldDieOnBack
	{
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x967908", Offset = "0x967908", VA = "0x967908")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x967910", Offset = "0x967910", VA = "0x967910")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public bool IsIdleing
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x967994", Offset = "0x967994", VA = "0x967994")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x96799C", Offset = "0x96799C", VA = "0x96799C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	private float CelebratingSpeed
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x967A20", Offset = "0x967A20", VA = "0x967A20")]
		set
		{
		}
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x967A44", Offset = "0x967A44", VA = "0x967A44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x967AC0", Offset = "0x967AC0", VA = "0x967AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x967AEC", Offset = "0x967AEC", VA = "0x967AEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x967B44", Offset = "0x967B44", VA = "0x967B44")]
	public float GetTimeOfNotHitAnimation()
	{
		return default(float);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x967B4C", Offset = "0x967B4C", VA = "0x967B4C")]
	public void PlayerShootArrowAnimation()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x967C34", Offset = "0x967C34", VA = "0x967C34")]
	[PunRPC]
	private void RPCShootArrow()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x967C58", Offset = "0x967C58", VA = "0x967C58")]
	public void PlayGetHitAnimation()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x967CA4", Offset = "0x967CA4", VA = "0x967CA4")]
	[IteratorStateMachine(typeof(<GetHitAnimationRoutine>d__87))]
	private IEnumerator GetHitAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x967D40", Offset = "0x967D40", VA = "0x967D40")]
	public void PlayNotHitAnimation()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x967D78", Offset = "0x967D78", VA = "0x967D78")]
	public void PlayThrowingAxeAnimation()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x967DB4", Offset = "0x967DB4", VA = "0x967DB4")]
	public void PlayGettingWeaponAnimation()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x965DE4", Offset = "0x965DE4", VA = "0x965DE4")]
	public void PlayRunAnimation()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x965E3C", Offset = "0x965E3C", VA = "0x965E3C")]
	public void PlayWalkAnimation()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x967DE4", Offset = "0x967DE4", VA = "0x967DE4")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x967E5C", Offset = "0x967E5C", VA = "0x967E5C")]
	public void PlayIdleOnBoatAnimation()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x967EC0", Offset = "0x967EC0", VA = "0x967EC0")]
	public float GetCurrentAnimationLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x967F1C", Offset = "0x967F1C", VA = "0x967F1C")]
	public void SetDyingOnBackAnimation(bool shouldDieOnBack)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x965138", Offset = "0x965138", VA = "0x965138")]
	public void PickCaptainAnim(float chanceToPlayProvokeAnim)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x967F30", Offset = "0x967F30", VA = "0x967F30")]
	public void DrawAttackAnim()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x95D3C4", Offset = "0x95D3C4", VA = "0x95D3C4")]
	public void PlayRandomCelebrateAnimation()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x967FD4", Offset = "0x967FD4", VA = "0x967FD4")]
	public void ClearDeathAnimationState()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x967FF0", Offset = "0x967FF0", VA = "0x967FF0")]
	public void SetReferences(Animator _animator, DeathAnimAdjuster _deathAnimAdjuster, GameObject swordInHand, GameObject swordOnBack)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x968050", Offset = "0x968050", VA = "0x968050")]
	[PunRPC]
	private void SetTriggerRPC(int id)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x96806C", Offset = "0x96806C", VA = "0x96806C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x968100", Offset = "0x968100", VA = "0x968100", Slot = "10")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x968178", Offset = "0x968178", VA = "0x968178", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x968540", Offset = "0x968540", VA = "0x968540", Slot = "6")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x968544", Offset = "0x968544", VA = "0x968544", Slot = "7")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x968548", Offset = "0x968548", VA = "0x968548", Slot = "8")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x96854C", Offset = "0x96854C", VA = "0x96854C", Slot = "9")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x968550", Offset = "0x968550", VA = "0x968550")]
	public OrcAnimatorController()
	{
	}
}
[Token(Token = "0x2000161")]
public class OrcArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcSoundController orcSoundController;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x968AD8", Offset = "0x968AD8", VA = "0x968AD8", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x968B04", Offset = "0x968B04", VA = "0x968B04", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x968D94", Offset = "0x968D94", VA = "0x968D94")]
	[PunRPC]
	private void RPCGetHitArrow(float damage, Player hitter, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x968FD8", Offset = "0x968FD8", VA = "0x968FD8")]
	public OrcArrowHitController()
	{
	}
}
[Token(Token = "0x2000162")]
public class OrcArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x968FE0", Offset = "0x968FE0", VA = "0x968FE0", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x969000", Offset = "0x969000", VA = "0x969000", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x9690BC", Offset = "0x9690BC", VA = "0x9690BC")]
	public OrcArrowKilledController()
	{
	}
}
[Token(Token = "0x2000163")]
public class OrcAxeAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcThrowingAxeController orcThrowingAxeController;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x9690C4", Offset = "0x9690C4", VA = "0x9690C4")]
	private void StartAxeFly()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x9690E0", Offset = "0x9690E0", VA = "0x9690E0")]
	private void ActivateSwordFromBackAfterThrowingAxe()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x9690FC", Offset = "0x9690FC", VA = "0x9690FC")]
	public OrcAxeAnimationEvents()
	{
	}
}
[Token(Token = "0x2000164")]
public class OrcAxemanBodyDisappearingChecker : MonoBehaviour, IBodyDisappearingCheckable
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AxeBeingUsedController axeBeingUsedController;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x969104", Offset = "0x969104", VA = "0x969104", Slot = "4")]
	public bool IsBodyDisappearingFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x969178", Offset = "0x969178", VA = "0x969178")]
	private bool IsAxeFree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x9691FC", Offset = "0x9691FC", VA = "0x9691FC")]
	public OrcAxemanBodyDisappearingChecker()
	{
	}
}
[Token(Token = "0x2000165")]
public class OrcBodyPartCollidersDisabler : MonoBehaviour
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Collider> bodyPartColliders;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numberOfArrowsInTrigger;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool collidersEnabled;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ArrowFlyController arrowToGetRidOf;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x969204", Offset = "0x969204", VA = "0x969204")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x969314", Offset = "0x969314", VA = "0x969314")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x969420", Offset = "0x969420", VA = "0x969420")]
	private void GetRidFromTrigger()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x969438", Offset = "0x969438", VA = "0x969438")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x96959C", Offset = "0x96959C", VA = "0x96959C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x9696FC", Offset = "0x9696FC", VA = "0x9696FC")]
	public OrcBodyPartCollidersDisabler()
	{
	}
}
[Token(Token = "0x2000167")]
public class OrcBowAnimatorController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int shoot;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int charge;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isShooting;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isCharging;

	[Token(Token = "0x170000BB")]
	private bool IsShooting
	{
		[Token(Token = "0x600076D")]
		[Address(RVA = "0x9697B4", Offset = "0x9697B4", VA = "0x9697B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x9697BC", Offset = "0x9697BC", VA = "0x9697BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	private bool IsCharging
	{
		[Token(Token = "0x600076F")]
		[Address(RVA = "0x9697FC", Offset = "0x9697FC", VA = "0x9697FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000770")]
		[Address(RVA = "0x969804", Offset = "0x969804", VA = "0x969804")]
		set
		{
		}
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x969844", Offset = "0x969844", VA = "0x969844")]
	public void PlayChargeAnimation()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x969864", Offset = "0x969864", VA = "0x969864")]
	public void PlayShootAnimation()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x969884", Offset = "0x969884", VA = "0x969884", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x9698A4", Offset = "0x9698A4", VA = "0x9698A4", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x9699C8", Offset = "0x9699C8", VA = "0x9699C8")]
	public OrcBowAnimatorController()
	{
	}
}
[Token(Token = "0x2000168")]
public class OrcCaptainController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyMovementController movementController;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController orcAnimator;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x969A4C", Offset = "0x969A4C", VA = "0x969A4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x962954", Offset = "0x962954", VA = "0x962954")]
	public void KillOrcCaptain()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x962734", Offset = "0x962734", VA = "0x962734")]
	public void LeaveBoat(RoutePoint routePoint)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x969AD0", Offset = "0x969AD0", VA = "0x969AD0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x969ADC", Offset = "0x969ADC", VA = "0x969ADC")]
	public OrcCaptainController()
	{
	}
}
[Token(Token = "0x2000169")]
public class OrcCatapultRockHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x969AE4", Offset = "0x969AE4", VA = "0x969AE4", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x969B10", Offset = "0x969B10", VA = "0x969B10", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x969C8C", Offset = "0x969C8C", VA = "0x969C8C")]
	[PunRPC]
	private void RPCGetHitCatapult(int hitterActorNumber)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x969E18", Offset = "0x969E18", VA = "0x969E18")]
	public OrcCatapultRockHitController()
	{
	}
}
[Token(Token = "0x200016A")]
public class OrcCatapultRockKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x969E20", Offset = "0x969E20", VA = "0x969E20", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x969E40", Offset = "0x969E40", VA = "0x969E40", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x969EFC", Offset = "0x969EFC", VA = "0x969EFC")]
	public OrcCatapultRockKilledController()
	{
	}
}
[Token(Token = "0x200016B")]
public class OrcCelebrateSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 100f)]
	[SerializeField]
	private int CelebrateSoundFrequency;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcCelebrateSoundPrefab;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x969F04", Offset = "0x969F04", VA = "0x969F04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x969F08", Offset = "0x969F08", VA = "0x969F08")]
	private void OnCelebrateGruntAnimationEvent()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x96A054", Offset = "0x96A054", VA = "0x96A054")]
	public OrcCelebrateSoundPlayer()
	{
	}
}
[Token(Token = "0x200016C")]
public class OrcFreezingArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcArrowHitController arrowHitController;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x96A064", Offset = "0x96A064", VA = "0x96A064", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x96A090", Offset = "0x96A090", VA = "0x96A090", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x96A4E4", Offset = "0x96A4E4", VA = "0x96A4E4")]
	[PunRPC]
	public void RPCGetHitOrcFreezingArrow(float damage, Vector3 hitDirection, int hitterActorNumber)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x96A648", Offset = "0x96A648", VA = "0x96A648")]
	public OrcFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x200016D")]
public class OrcFreezingArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x96A650", Offset = "0x96A650", VA = "0x96A650", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x96A670", Offset = "0x96A670", VA = "0x96A670", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x96A74C", Offset = "0x96A74C", VA = "0x96A74C")]
	public OrcFreezingArrowKilledController()
	{
	}
}
[Token(Token = "0x200016E")]
public class OrcOnBoatGetKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x96A754", Offset = "0x96A754", VA = "0x96A754", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x96A7F0", Offset = "0x96A7F0", VA = "0x96A7F0", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x96A810", Offset = "0x96A810", VA = "0x96A810")]
	public OrcOnBoatGetKilledController()
	{
	}
}
[Token(Token = "0x200016F")]
public class OrcSimpleHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcArrowHitController orcArrowHitController;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x96A818", Offset = "0x96A818", VA = "0x96A818", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x96A844", Offset = "0x96A844", VA = "0x96A844", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x96A9C4", Offset = "0x96A9C4", VA = "0x96A9C4")]
	public OrcSimpleHitController()
	{
	}
}
[Token(Token = "0x2000170")]
public class OrcSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000783")]
	private const float freezeDeathVolume = 0.3f;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numberDeathClip;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numberFrozenDeathClip;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hit;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource death;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource frozenDeath;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource freeze;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] frozenDeathClips;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource roar;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] roarClips;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource RunSound;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource WalkSound;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float minPitch;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float maxPitch;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float maxPitchRoar;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float defaultDeathVolume;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool hasDefaultDeathVolumeBeenSaved;

	[Token(Token = "0x170000BD")]
	public AudioClip[] DeathAudioClips
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x96ABB0", Offset = "0x96ABB0", VA = "0x96ABB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x96A9CC", Offset = "0x96A9CC", VA = "0x96A9CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x96AA00", Offset = "0x96AA00", VA = "0x96AA00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x96AAD8", Offset = "0x96AAD8", VA = "0x96AAD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x96A9D0", Offset = "0x96A9D0", VA = "0x96A9D0")]
	private void SaveDefaultDeathVolume()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x96ABB8", Offset = "0x96ABB8", VA = "0x96ABB8")]
	public void SetRunSoundMaxDistance(float maxDistance)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x96ABD4", Offset = "0x96ABD4", VA = "0x96ABD4")]
	public void PlayRoarSound()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x968F4C", Offset = "0x968F4C", VA = "0x968F4C")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x96AC20", Offset = "0x96AC20", VA = "0x96AC20")]
	public void SetActiveWalkSound(bool shouldBeActive)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x96AC40", Offset = "0x96AC40", VA = "0x96AC40")]
	public void PlayOrcDeathSound()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x96AD58", Offset = "0x96AD58", VA = "0x96AD58")]
	public void PlayOrcFrozenDeathSound()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x96AE8C", Offset = "0x96AE8C", VA = "0x96AE8C")]
	public void PlayOrcFreezeSound()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x96AF18", Offset = "0x96AF18", VA = "0x96AF18", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x96AF4C", Offset = "0x96AF4C", VA = "0x96AF4C")]
	public OrcSoundController()
	{
	}
}
[Token(Token = "0x2000171")]
public class SlowingController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x2000172")]
	[CompilerGenerated]
	private sealed class <UnslowCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlowingController <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0x96B60C", Offset = "0x96B60C", VA = "0x96B60C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0x96B654", Offset = "0x96B654", VA = "0x96B654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x96B518", Offset = "0x96B518", VA = "0x96B518")]
		[DebuggerHidden]
		public <UnslowCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x96B540", Offset = "0x96B540", VA = "0x96B540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x96B544", Offset = "0x96B544", VA = "0x96B544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x96B614", Offset = "0x96B614", VA = "0x96B614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BodyFreezeEffect slowingEffect;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float slowFactor;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSlowed;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timedSlowDuration;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startingAnimatorSpeed;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float defaultTimedSlowDuration;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float defaultStartingAnimatorSpeed;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float defaultT;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool defaultIsSlowed;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool timeSlowed;

	[Token(Token = "0x170000BE")]
	public bool IsSlowed
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x96AF6C", Offset = "0x96AF6C", VA = "0x96AF6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x96AF74", Offset = "0x96AF74", VA = "0x96AF74")]
		set
		{
		}
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x96B080", Offset = "0x96B080", VA = "0x96B080")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x96B0F4", Offset = "0x96B0F4", VA = "0x96B0F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x96B14C", Offset = "0x96B14C", VA = "0x96B14C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x96AFD8", Offset = "0x96AFD8", VA = "0x96AFD8")]
	private void Slow()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x96B030", Offset = "0x96B030", VA = "0x96B030")]
	private void Unslow()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x96B214", Offset = "0x96B214", VA = "0x96B214")]
	public void SetSlowed(bool isToBeSlowed)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x96B330", Offset = "0x96B330", VA = "0x96B330")]
	[PunRPC]
	public void RpcSetSlowed(bool valueToSet)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x96A3CC", Offset = "0x96A3CC", VA = "0x96A3CC")]
	public void SetTimedSlowed(bool isToBeSlowed)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x96B338", Offset = "0x96B338", VA = "0x96B338")]
	[PunRPC]
	public void RpcSetTimedSlowed(bool valueToSet)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x96B384", Offset = "0x96B384", VA = "0x96B384")]
	[IteratorStateMachine(typeof(<UnslowCoroutine>d__25))]
	private IEnumerator UnslowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x96B3F8", Offset = "0x96B3F8", VA = "0x96B3F8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x96B4C0", Offset = "0x96B4C0", VA = "0x96B4C0", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x96B4F4", Offset = "0x96B4F4", VA = "0x96B4F4")]
	public void SetReferences(BodyFreezeEffect _slowingEffect)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x96B4FC", Offset = "0x96B4FC", VA = "0x96B4FC")]
	public SlowingController()
	{
	}
}
[Token(Token = "0x2000173")]
public class OrcAnimationAttackPlayer : MonoBehaviour, IAttackPlayer
{
	[Token(Token = "0x40007A8")]
	private const float roarChance = 0.5f;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcRoarSoundPrefab;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x96B65C", Offset = "0x96B65C", VA = "0x96B65C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x96B660", Offset = "0x96B660", VA = "0x96B660", Slot = "4")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x96B7BC", Offset = "0x96B7BC", VA = "0x96B7BC")]
	public OrcAnimationAttackPlayer()
	{
	}
}
[Token(Token = "0x2000174")]
public class PlayerColliderDetector : MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<PlayerController> OnPlayerDetection;

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x96B7C4", Offset = "0x96B7C4", VA = "0x96B7C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x96B8A8", Offset = "0x96B8A8", VA = "0x96B8A8")]
	public PlayerColliderDetector()
	{
	}
}
[Token(Token = "0x2000175")]
public class ShotThroughWindow : MonoBehaviour
{
	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x96B8B0", Offset = "0x96B8B0", VA = "0x96B8B0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x96B950", Offset = "0x96B950", VA = "0x96B950")]
	public ShotThroughWindow()
	{
	}
}
[Token(Token = "0x2000176")]
public class StandardBodyDisappearingChecker : MonoBehaviour, IBodyDisappearingCheckable
{
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x96B958", Offset = "0x96B958", VA = "0x96B958", Slot = "4")]
	public bool IsBodyDisappearingFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x96B9BC", Offset = "0x96B9BC", VA = "0x96B9BC")]
	public StandardBodyDisappearingChecker()
	{
	}
}
[Token(Token = "0x2000177")]
public class TrollAnimatorController : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int running;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int shouting;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int attacking;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int dead;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float shoutAnimationDuration;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float attackAnimationDuration;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isChangingAnimationLocked;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool defaultDeathAnimAdjusterEnabled;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isRunning;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isShouting;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isAttacking;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool isDead;

	[Token(Token = "0x170000C1")]
	public bool IsRunning
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x96B9C4", Offset = "0x96B9C4", VA = "0x96B9C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x96B9CC", Offset = "0x96B9CC", VA = "0x96B9CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public bool IsShouting
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x96BA40", Offset = "0x96BA40", VA = "0x96BA40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x96BA48", Offset = "0x96BA48", VA = "0x96BA48")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public bool IsAttacking
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x96BABC", Offset = "0x96BABC", VA = "0x96BABC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x96BAC4", Offset = "0x96BAC4", VA = "0x96BAC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public bool IsDead
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x96BB38", Offset = "0x96BB38", VA = "0x96BB38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x96BB40", Offset = "0x96BB40", VA = "0x96BB40")]
		set
		{
		}
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x96BBE0", Offset = "0x96BBE0", VA = "0x96BBE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x96BC38", Offset = "0x96BC38", VA = "0x96BC38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x96BC90", Offset = "0x96BC90", VA = "0x96BC90")]
	public void StopAnimations()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x96BCB0", Offset = "0x96BCB0", VA = "0x96BCB0")]
	public void PlayRunAnimation()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x96BCEC", Offset = "0x96BCEC", VA = "0x96BCEC")]
	public void PlayShoutAnimation()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x96BD28", Offset = "0x96BD28", VA = "0x96BD28")]
	public void PlayAttackAnimation()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x96BD64", Offset = "0x96BD64", VA = "0x96BD64")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x96BDB8", Offset = "0x96BDB8", VA = "0x96BDB8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x96BE24", Offset = "0x96BE24", VA = "0x96BE24", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x96C000", Offset = "0x96C000", VA = "0x96C000")]
	public TrollAnimatorController()
	{
	}
}
[Token(Token = "0x2000178")]
public class TrollArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x96C0E0", Offset = "0x96C0E0", VA = "0x96C0E0", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x96C10C", Offset = "0x96C10C", VA = "0x96C10C", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x96C35C", Offset = "0x96C35C", VA = "0x96C35C")]
	[PunRPC]
	public void RPCGetHitTroll(float damage, int clientID)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x96C4DC", Offset = "0x96C4DC", VA = "0x96C4DC")]
	public TrollArrowHitController()
	{
	}
}
[Token(Token = "0x2000179")]
public class TrollAttackPlaceInfo : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RoutePoint standingRoutePoint;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform targetPoint;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TeleportCollider targetPlatform;

	[Token(Token = "0x170000C5")]
	public RoutePoint StandingRoutePoint
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x96C4E4", Offset = "0x96C4E4", VA = "0x96C4E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	public Transform TargetPoint
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x96C4EC", Offset = "0x96C4EC", VA = "0x96C4EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public TeleportCollider TargetPlatform
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x96C4F4", Offset = "0x96C4F4", VA = "0x96C4F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x96C4FC", Offset = "0x96C4FC", VA = "0x96C4FC")]
	public TrollAttackPlaceInfo()
	{
	}
}
[Token(Token = "0x200017A")]
public enum TrollAttackState
{
	[Token(Token = "0x40007C0")]
	FollowingRoute,
	[Token(Token = "0x40007C1")]
	FirstShouting,
	[Token(Token = "0x40007C2")]
	GoingToAttackStandingPoint,
	[Token(Token = "0x40007C3")]
	RotatingToAttackTarget,
	[Token(Token = "0x40007C4")]
	ShoutingBeforeAttack,
	[Token(Token = "0x40007C5")]
	Attacking
}
[Token(Token = "0x200017B")]
public class TrollFreezingArrowHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrollArrowHitController trollArrowHitController;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x96C504", Offset = "0x96C504", VA = "0x96C504", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x96C530", Offset = "0x96C530", VA = "0x96C530", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x96C5E4", Offset = "0x96C5E4", VA = "0x96C5E4")]
	public TrollFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x200017C")]
public class TrollIceCloudHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x96C5EC", Offset = "0x96C5EC", VA = "0x96C5EC", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x96C618", Offset = "0x96C618", VA = "0x96C618", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x96C81C", Offset = "0x96C81C", VA = "0x96C81C")]
	[PunRPC]
	private void RPCGetHitTrollIceCloud(int hitterActorNumber, float damage)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x96C9D4", Offset = "0x96C9D4", VA = "0x96C9D4")]
	public TrollIceCloudHitController()
	{
	}
}
[Token(Token = "0x200017D")]
public class TrollKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TrollAttackController trollAttackController;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrollAnimatorController trollAnimatorController;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x96C9DC", Offset = "0x96C9DC", VA = "0x96C9DC", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x96C9E4", Offset = "0x96C9E4", VA = "0x96C9E4", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x96CA88", Offset = "0x96CA88", VA = "0x96CA88")]
	public TrollKilledController()
	{
	}
}
[Token(Token = "0x200017E")]
public class TrollShoutTriggerer : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	private const string trollShoutTriggerTag = "TrollShoutTrigger";

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrollAttackController trollAttackController;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x96CA90", Offset = "0x96CA90", VA = "0x96CA90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x96CB0C", Offset = "0x96CB0C", VA = "0x96CB0C")]
	public TrollShoutTriggerer()
	{
	}
}
[Token(Token = "0x200017F")]
public class TrollSimpleHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrollArrowHitController trollArrowHitController;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x96CB14", Offset = "0x96CB14", VA = "0x96CB14", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x96CB40", Offset = "0x96CB40", VA = "0x96CB40", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x96CCC0", Offset = "0x96CCC0", VA = "0x96CCC0")]
	public TrollSimpleHitController()
	{
	}
}
[Token(Token = "0x2000180")]
public class TrollSoundController : MonoBehaviourPun
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource pickingUpSound;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource groarSound;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource punchSound;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource deathSound;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float soundDelay;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float firstScreamDelay;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] punchClips;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x96CCC8", Offset = "0x96CCC8", VA = "0x96CCC8")]
	public void AnimationEventPlayOgreScream()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x96CCE4", Offset = "0x96CCE4", VA = "0x96CCE4")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x96CD78", Offset = "0x96CD78", VA = "0x96CD78")]
	public void PlayPickUpStoneSound()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x96CDB4", Offset = "0x96CDB4", VA = "0x96CDB4")]
	public void PlayOgrePunchSound()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x96CE68", Offset = "0x96CE68", VA = "0x96CE68")]
	public void StopAllAudio()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x96CE98", Offset = "0x96CE98", VA = "0x96CE98")]
	public TrollSoundController()
	{
	}
}
[Token(Token = "0x2000181")]
public class WalkingEnemyHitGroundSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hitGroundAudioSource;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasPlayedHitGroundSound;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x96CEAC", Offset = "0x96CEAC", VA = "0x96CEAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x96CF84", Offset = "0x96CF84", VA = "0x96CF84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x96D05C", Offset = "0x96D05C", VA = "0x96D05C")]
	private void OnDeathAnimAdjustingFinished()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x96D090", Offset = "0x96D090", VA = "0x96D090")]
	public void OnHitGround()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x96D0D8", Offset = "0x96D0D8", VA = "0x96D0D8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x96D0E0", Offset = "0x96D0E0", VA = "0x96D0E0")]
	public WalkingEnemyHitGroundSoundController()
	{
	}
}
[Token(Token = "0x2000182")]
public class WolfAnimatorController : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	public delegate void OnDeathAnimationPlayed();

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int running;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int dead;

	[Token(Token = "0x40007E0")]
	private const bool defaultIsRunning = true;

	[Token(Token = "0x40007E1")]
	private const bool defaultIsDead = false;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isRunning;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isDead;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool isSyncingFromPhoton;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool isAnimatorActiveForParameterSync;

	[Token(Token = "0x170000C8")]
	public bool IsRunning
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x96D258", Offset = "0x96D258", VA = "0x96D258")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x96D260", Offset = "0x96D260", VA = "0x96D260")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public bool IsDead
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x96D2E4", Offset = "0x96D2E4", VA = "0x96D2E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x96D2EC", Offset = "0x96D2EC", VA = "0x96D2EC")]
		set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event OnDeathAnimationPlayed onDeathAnimationPlayed
	{
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x96D0E8", Offset = "0x96D0E8", VA = "0x96D0E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x96D1A0", Offset = "0x96D1A0", VA = "0x96D1A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x96D3BC", Offset = "0x96D3BC", VA = "0x96D3BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x96D414", Offset = "0x96D414", VA = "0x96D414")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x96D46C", Offset = "0x96D46C", VA = "0x96D46C")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x96D48C", Offset = "0x96D48C", VA = "0x96D48C")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x96D4B8", Offset = "0x96D4B8", VA = "0x96D4B8")]
	public void SetReferences(Animator _animator)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x96D4C0", Offset = "0x96D4C0", VA = "0x96D4C0")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x96D668", Offset = "0x96D668", VA = "0x96D668")]
	public WolfAnimatorController()
	{
	}
}
[Token(Token = "0x2000184")]
public class WolfArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x96D7D4", Offset = "0x96D7D4", VA = "0x96D7D4", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x96D800", Offset = "0x96D800", VA = "0x96D800", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x96DAC0", Offset = "0x96DAC0", VA = "0x96DAC0")]
	[PunRPC]
	private void RPCGetHitArrow(float damage, int hitterActorNumber, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x96DC3C", Offset = "0x96DC3C", VA = "0x96DC3C")]
	public WolfArrowHitController()
	{
	}
}
[Token(Token = "0x2000185")]
public class WolfKillController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WolfAnimatorController wolfAnimator;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x96DC44", Offset = "0x96DC44", VA = "0x96DC44", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x96DC64", Offset = "0x96DC64", VA = "0x96DC64", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x96DD1C", Offset = "0x96DD1C", VA = "0x96DD1C")]
	public WolfKillController()
	{
	}
}
[Token(Token = "0x2000186")]
public class WolfSoundController : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	private const float freezeDeathVolume = 0.3f;

	[Token(Token = "0x40007F0")]
	private const float defaultDeathVolume = 0.5f;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] frozenDeathClips;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minPitch;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxPitch;

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x96DD24", Offset = "0x96DD24", VA = "0x96DD24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x96DD9C", Offset = "0x96DD9C", VA = "0x96DD9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x96DE14", Offset = "0x96DE14", VA = "0x96DE14")]
	public void PlayWolfFreezeSound()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x96DEB0", Offset = "0x96DEB0", VA = "0x96DEB0")]
	public void PlayWolfDeathSound()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x96DF4C", Offset = "0x96DF4C", VA = "0x96DF4C")]
	public void PlayWolfFrozenDeathSound()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x96E000", Offset = "0x96E000", VA = "0x96E000")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x96E020", Offset = "0x96E020", VA = "0x96E020")]
	public WolfSoundController()
	{
	}
}
[Token(Token = "0x2000187")]
public class WyvernAnimatorController : MonoBehaviourPun
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isSlowFlying;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int isFastFlying;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int isDead;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x170000CA")]
	public bool IsSlowFlying
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x96E034", Offset = "0x96E034", VA = "0x96E034")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x96E058", Offset = "0x96E058", VA = "0x96E058")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public bool IsFastFlying
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x96E084", Offset = "0x96E084", VA = "0x96E084")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x96E0A8", Offset = "0x96E0A8", VA = "0x96E0A8")]
		set
		{
		}
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x96E0D4", Offset = "0x96E0D4", VA = "0x96E0D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x96E12C", Offset = "0x96E12C", VA = "0x96E12C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x96E184", Offset = "0x96E184", VA = "0x96E184")]
	public void PlayWalkAnimation()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x96E1C4", Offset = "0x96E1C4", VA = "0x96E1C4")]
	public void PlayDeadAnimation()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x96E1E8", Offset = "0x96E1E8", VA = "0x96E1E8")]
	public float GetCurrentAnimationLength()
	{
		return default(float);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x96E244", Offset = "0x96E244", VA = "0x96E244")]
	public void SetReferences(Animator _animator)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x96E24C", Offset = "0x96E24C", VA = "0x96E24C")]
	public WyvernAnimatorController()
	{
	}
}
[Token(Token = "0x2000188")]
public class WyvernArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x96E2F4", Offset = "0x96E2F4", VA = "0x96E2F4", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x96E320", Offset = "0x96E320", VA = "0x96E320", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x96E5E0", Offset = "0x96E5E0", VA = "0x96E5E0")]
	[PunRPC]
	public void RPCGetHitWyvernArrow(float damage, int clientID, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x96E75C", Offset = "0x96E75C", VA = "0x96E75C")]
	public WyvernArrowHitController()
	{
	}
}
[Token(Token = "0x2000189")]
public class WyvernArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FallController fallController;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x96E764", Offset = "0x96E764", VA = "0x96E764", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x96E784", Offset = "0x96E784", VA = "0x96E784", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x96EA94", Offset = "0x96EA94", VA = "0x96EA94")]
	public void SetReferences(FallController fallController)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x96EA9C", Offset = "0x96EA9C", VA = "0x96EA9C")]
	public WyvernArrowKilledController()
	{
	}
}
[Token(Token = "0x200018A")]
public class WyvernAttacher : MonoBehaviour, IResetable
{
	[Token(Token = "0x200018B")]
	[CompilerGenerated]
	private sealed class <StopSnapping>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WyvernAttacher <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000831")]
			[Address(RVA = "0x96F024", Offset = "0x96F024", VA = "0x96F024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000833")]
			[Address(RVA = "0x96F06C", Offset = "0x96F06C", VA = "0x96F06C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x96EEAC", Offset = "0x96EEAC", VA = "0x96EEAC")]
		[DebuggerHidden]
		public <StopSnapping>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x96EF8C", Offset = "0x96EF8C", VA = "0x96EF8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x96EF90", Offset = "0x96EF90", VA = "0x96EF90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x96F02C", Offset = "0x96F02C", VA = "0x96F02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForSeconds stopSnappingDelay;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody nearestBone;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float attachingSpeed;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float step;

	[Token(Token = "0x170000CC")]
	public WyvernFallRagdollController WyvernRagdoll
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x96EAA4", Offset = "0x96EAA4", VA = "0x96EAA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x96EAAC", Offset = "0x96EAAC", VA = "0x96EAAC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x96EAB4", Offset = "0x96EAB4", VA = "0x96EAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x96EB2C", Offset = "0x96EB2C", VA = "0x96EB2C")]
	private void SnapOverTimeArrow()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x96EC8C", Offset = "0x96EC8C", VA = "0x96EC8C")]
	private void SelectBoneToSnap()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x96EE38", Offset = "0x96EE38", VA = "0x96EE38")]
	[IteratorStateMachine(typeof(<StopSnapping>d__12))]
	private IEnumerator StopSnapping()
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x96EED4", Offset = "0x96EED4", VA = "0x96EED4", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x96EF0C", Offset = "0x96EF0C", VA = "0x96EF0C")]
	public WyvernAttacher()
	{
	}
}
[Token(Token = "0x200018C")]
public class WyvernCrushController : MonoBehaviour, IResetable
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool crashPlayed;

	[Token(Token = "0x170000CF")]
	public bool IsActive
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x96F1AC", Offset = "0x96F1AC", VA = "0x96F1AC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x96F1B4", Offset = "0x96F1B4", VA = "0x96F1B4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnWyvernCrush
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x96F074", Offset = "0x96F074", VA = "0x96F074")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x96F110", Offset = "0x96F110", VA = "0x96F110")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x96F1C0", Offset = "0x96F1C0", VA = "0x96F1C0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x96F29C", Offset = "0x96F29C", VA = "0x96F29C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x96F2C8", Offset = "0x96F2C8", VA = "0x96F2C8")]
	public WyvernCrushController()
	{
	}
}
[Token(Token = "0x200018D")]
public enum WyvernDeaths
{
	[Token(Token = "0x4000813")]
	left,
	[Token(Token = "0x4000814")]
	right,
	[Token(Token = "0x4000815")]
	other
}
[Token(Token = "0x200018E")]
public class WyvernFallController : FallController, IResetable
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernAnimatorController wyvernAnimatorController;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WyvernCrushController wyvernCrushController;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float downSpeedCoefficient;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float forwardSpeedCoefficient;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float smoothingTime;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform wyvernParent;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 velocityOnWyvernDead;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x96F2D0", Offset = "0x96F2D0", VA = "0x96F2D0")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x96F354", Offset = "0x96F354", VA = "0x96F354")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x96F3D8", Offset = "0x96F3D8", VA = "0x96F3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x96F3DC", Offset = "0x96F3DC", VA = "0x96F3DC")]
	private void Fall()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x96F4CC", Offset = "0x96F4CC", VA = "0x96F4CC", Slot = "4")]
	public override void StartFalling()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x96F5C4", Offset = "0x96F5C4", VA = "0x96F5C4", Slot = "5")]
	public override void StopFalling()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x96F5E4", Offset = "0x96F5E4", VA = "0x96F5E4", Slot = "6")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x96F5F4", Offset = "0x96F5F4", VA = "0x96F5F4")]
	public WyvernFallController()
	{
	}
}
[Token(Token = "0x200018F")]
public class WyvernFallRagdollController : FallController, IResetable
{
	[Token(Token = "0x2000191")]
	[CompilerGenerated]
	private sealed class <StopRagdollOvertime>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WyvernFallRagdollController <>4__this;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0x970B8C", Offset = "0x970B8C", VA = "0x970B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0x970BD4", Offset = "0x970BD4", VA = "0x970BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x970524", Offset = "0x970524", VA = "0x970524")]
		[DebuggerHidden]
		public <StopRagdollOvertime>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x970960", Offset = "0x970960", VA = "0x970960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x970964", Offset = "0x970964", VA = "0x970964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x970B94", Offset = "0x970B94", VA = "0x970B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000820")]
	private const float timeToStopRagdoll = 8f;

	[Token(Token = "0x4000821")]
	private const float timeToStopWyvernDeathEffect = 6f;

	[Token(Token = "0x4000822")]
	private const float forwardForceMultiplier = 24f;

	[Token(Token = "0x4000823")]
	private const float dragMultiplier = 0.08f;

	[Token(Token = "0x4000824")]
	private const float maxTime = 3f;

	[Token(Token = "0x4000825")]
	private const float minTime = 0.2f;

	[Token(Token = "0x4000826")]
	private const float ragdollStopStep = 0.1f;

	[Token(Token = "0x4000827")]
	private const float freezingSpeedMultiplier = 0.5f;

	[Token(Token = "0x4000828")]
	private const float hitForceMultiplier = 150f;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds stopRagdollDelay;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 eulerAngleVelocity;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 eulerAngleVelocityFreezed;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject mainObject;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Rigidbody[] boneRigidbodies;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider[] animCollider;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Rigidbody[] additionalHitColliders;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Rigidbody[] rotationalBody;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Rigidbody[] Wings;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator Animator;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private (float drag, float angularDrag)[] boneRigidbodiesDrags;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool hasRagdollStopped;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isRotatingFreezed;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 eulerAngleVelocityFreezedActual;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool shouldFallDown;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool shouldRotate;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool areJointsRebuilt;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	private bool enabledRagdoll;

	[Token(Token = "0x170000D0")]
	public bool AlreadyHit
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x96F5FC", Offset = "0x96F5FC", VA = "0x96F5FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x96F604", Offset = "0x96F604", VA = "0x96F604")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public bool CanForceBeApplied
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x96F610", Offset = "0x96F610", VA = "0x96F610")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x96F618", Offset = "0x96F618", VA = "0x96F618")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public Rigidbody[] BoneRigidbodies
	{
		[Token(Token = "0x6000847")]
		[Address(RVA = "0x96F624", Offset = "0x96F624", VA = "0x96F624")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public Rigidbody[] AdditionalHitColliders
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x96F62C", Offset = "0x96F62C", VA = "0x96F62C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x96F634", Offset = "0x96F634", VA = "0x96F634")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x96F818", Offset = "0x96F818", VA = "0x96F818")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x96FB78", Offset = "0x96FB78", VA = "0x96FB78")]
	private void Reset()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x96FD00", Offset = "0x96FD00", VA = "0x96FD00")]
	public void OnAnimationLoop(float value)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x96F650", Offset = "0x96F650", VA = "0x96F650")]
	private void RememberBoneDrags()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x96FD28", Offset = "0x96FD28", VA = "0x96FD28")]
	public void SetWyvernFallVelocity()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x96FAE4", Offset = "0x96FAE4", VA = "0x96FAE4")]
	private void FreezeRotationOvertime()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x96F9C4", Offset = "0x96F9C4", VA = "0x96F9C4")]
	private void AdjustWingsRotationOvertime()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x96F870", Offset = "0x96F870", VA = "0x96F870")]
	private void RotateBody()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x96FD34", Offset = "0x96FD34", VA = "0x96FD34")]
	private void ChangeCollidersActiveStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x96FD9C", Offset = "0x96FD9C", VA = "0x96FD9C")]
	public void EnableRagdollFreezed()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x970020", Offset = "0x970020", VA = "0x970020", Slot = "4")]
	public override void StartFalling()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9701D0", Offset = "0x9701D0", VA = "0x9701D0")]
	public void ApllyFallingForce()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x9703D0", Offset = "0x9703D0", VA = "0x9703D0", Slot = "5")]
	public override void StopFalling()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x96FE74", Offset = "0x96FE74", VA = "0x96FE74")]
	private void ActivateRigidbodiesPhysic()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x9703E0", Offset = "0x9703E0", VA = "0x9703E0")]
	private void DeactivateRigibodiesPhisics()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x97015C", Offset = "0x97015C", VA = "0x97015C")]
	[IteratorStateMachine(typeof(<StopRagdollOvertime>d__57))]
	private IEnumerator StopRagdollOvertime()
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x97054C", Offset = "0x97054C", VA = "0x97054C", Slot = "6")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x970624", Offset = "0x970624", VA = "0x970624")]
	private void ResetBoneRigidbodies()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x9706E0", Offset = "0x9706E0", VA = "0x9706E0")]
	private void ResetBoneRigidbody(Rigidbody rigidbody, int index)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x96FD14", Offset = "0x96FD14", VA = "0x96FD14")]
	private void RebuildJoints()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x96F78C", Offset = "0x96F78C", VA = "0x96F78C")]
	private void EnableJoints(bool enabled)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x970800", Offset = "0x970800", VA = "0x970800")]
	public WyvernFallRagdollController()
	{
	}
}
[Token(Token = "0x2000192")]
public class WyvernFallVelocityRpcDelegate : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonView photonView;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WyvernFallRagdollController wyvernFallRagdollController;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x970BDC", Offset = "0x970BDC", VA = "0x970BDC")]
	[PunRPC]
	public void RpcSetWyvernFallVelocity()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x970BFC", Offset = "0x970BFC", VA = "0x970BFC")]
	public WyvernFallVelocityRpcDelegate()
	{
	}
}
[Token(Token = "0x2000193")]
public class WyvernFlySoundController : MonoBehaviour
{
	[Token(Token = "0x4000847")]
	private const float MinPitch = 1f;

	[Token(Token = "0x4000848")]
	private const float MaxPitch = 1.1f;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource wyvernFlyAudioSource;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] wingsWaveAudioClips;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x970C04", Offset = "0x970C04", VA = "0x970C04")]
	private void WyvernFlyStartAnimationEvent()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x970C1C", Offset = "0x970C1C", VA = "0x970C1C")]
	public WyvernFlySoundController()
	{
	}
}
[Token(Token = "0x2000194")]
public class WyvernFreezeController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
{
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material iceMaterial;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FallController fallController;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private IceMaterialAnimator iceMaterialAnimator;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Renderer> renderers;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ExplodeObject iceToBeBroken;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] collidersToEnable;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> objectsToDisable;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material defaultMaterial;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x970C24", Offset = "0x970C24", VA = "0x970C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x970C7C", Offset = "0x970C7C", VA = "0x970C7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x970CD4", Offset = "0x970CD4", VA = "0x970CD4", Slot = "5")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x970F78", Offset = "0x970F78", VA = "0x970F78", Slot = "6")]
	public void Break(Vector3 breakDirection)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x970D68", Offset = "0x970D68", VA = "0x970D68")]
	private void StartIceCreatingProcess()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x970F14", Offset = "0x970F14", VA = "0x970F14")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x97129C", Offset = "0x97129C", VA = "0x97129C")]
	public void SetReferences(Material _defaultMaterial, List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Collider[] _collidersToEnable, List<GameObject> _objectsToDisable, FallController _fallcontroller)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x97132C", Offset = "0x97132C", VA = "0x97132C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x9715CC", Offset = "0x9715CC", VA = "0x9715CC")]
	public WyvernFreezeController()
	{
	}
}
[Token(Token = "0x2000196")]
public class WyvernFreezingArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x9716E0", Offset = "0x9716E0", VA = "0x9716E0", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x97170C", Offset = "0x97170C", VA = "0x97170C", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x971940", Offset = "0x971940", VA = "0x971940")]
	[PunRPC]
	public void RPCGetHitWyvernFreezingArrow(int clientID, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x971A8C", Offset = "0x971A8C", VA = "0x971A8C")]
	public WyvernFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x2000197")]
public class WyvernShoutController : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	private const string wyvernShoutStartTag = "Wyvern Shout Start";

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource shoutAudioSource;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] shoutAudioClips;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float distanceFromPlayerToShout;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool isShoutingOnTrigger;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x971A94", Offset = "0x971A94", VA = "0x971A94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x971AAC", Offset = "0x971AAC", VA = "0x971AAC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x971B2C", Offset = "0x971B2C", VA = "0x971B2C")]
	private void Shout()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x971BC0", Offset = "0x971BC0", VA = "0x971BC0")]
	public WyvernShoutController()
	{
	}
}
[Token(Token = "0x2000198")]
public class WyvernSimpleHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernArrowHitController wyvernArrowHitController;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x971BC8", Offset = "0x971BC8", VA = "0x971BC8", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x971BF4", Offset = "0x971BF4", VA = "0x971BF4", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x971D74", Offset = "0x971D74", VA = "0x971D74")]
	public WyvernSimpleHitController()
	{
	}
}
[Token(Token = "0x2000199")]
public class WyvernSoundController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000867")]
	private const float iceExplosionVolume = 0.3f;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource roarSoundSource;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource deathSoundSource;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource hitSoundSource;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource freezeSoundSource;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource freezeDeathSoundSource;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource hitGroundSoundSource;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip[] freezeDeathClips;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float minPitch;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float maxPitch;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform defaultDeathSoundSourceParent;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool defaultIsPlayingRpcSounds;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int randomFreezeDeathSoundNumber;

	[Token(Token = "0x170000D6")]
	public bool IsPlayingRpcSounds
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x971D7C", Offset = "0x971D7C", VA = "0x971D7C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x971D84", Offset = "0x971D84", VA = "0x971D84")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x96E9A0", Offset = "0x96E9A0", VA = "0x96E9A0")]
	public void StopRoarSound(RpcTarget targets)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x971D90", Offset = "0x971D90", VA = "0x971D90")]
	[PunRPC]
	public void RpcStopRoarSound()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x96EA78", Offset = "0x96EA78", VA = "0x96EA78")]
	public void StopRoarSound()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x96E8CC", Offset = "0x96E8CC", VA = "0x96E8CC")]
	public void PlayWyvernDeathSound(RpcTarget targets)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x96EA74", Offset = "0x96EA74", VA = "0x96EA74")]
	public void PlayWyvernDeathSound()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x971DAC", Offset = "0x971DAC", VA = "0x971DAC")]
	[PunRPC]
	public void RpcPlayWyvernDeathSound()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x971DD0", Offset = "0x971DD0", VA = "0x971DD0")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x970EFC", Offset = "0x970EFC", VA = "0x970EFC")]
	public void PlayWyvernFreezeSound()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x9711A8", Offset = "0x9711A8", VA = "0x9711A8")]
	public void PlayWyvernFreezeDeathSound()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x971DE8", Offset = "0x971DE8", VA = "0x971DE8")]
	public void PlayHitGroundSound()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x971E04", Offset = "0x971E04", VA = "0x971E04", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x971E68", Offset = "0x971E68", VA = "0x971E68")]
	public WyvernSoundController()
	{
	}
}
[Token(Token = "0x200019A")]
public class PoolNames : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	public const string orcPoolName = "Orc";

	[Token(Token = "0x4000879")]
	public const string arrowPoolName = "Arrow";

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x971E88", Offset = "0x971E88", VA = "0x971E88")]
	public PoolNames()
	{
	}
}
[Token(Token = "0x200019B")]
public class EquipmentChangesManager : MonoBehaviour
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentChanger rightEquipmentChanger;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EquipmentChanger leftEquipmentChanger;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x971E90", Offset = "0x971E90", VA = "0x971E90")]
	public void ChangeBow(string equipedBowName)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x971ED0", Offset = "0x971ED0", VA = "0x971ED0")]
	public void ChangeHelmet(string equipedHelmetName)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x971F10", Offset = "0x971F10", VA = "0x971F10")]
	public void InitEquip()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x971F40", Offset = "0x971F40", VA = "0x971F40")]
	public EquipmentChangesManager()
	{
	}
}
[Token(Token = "0x200019C")]
public class ExpGiver : MonoBehaviour
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellsMenuController spellController;

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x971F48", Offset = "0x971F48", VA = "0x971F48")]
	private void Start()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x971FD0", Offset = "0x971FD0", VA = "0x971FD0")]
	public void GiveExp(int exp)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x9720C4", Offset = "0x9720C4", VA = "0x9720C4")]
	public ExpGiver()
	{
	}
}
[Token(Token = "0x200019D")]
public class OnArrowHitExploder : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 additionalforceVector;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool inheritForceFromArrow;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float forceFromArrowInheritanceMultiplier;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ObjectExploder exploder;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x9720CC", Offset = "0x9720CC", VA = "0x9720CC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x972218", Offset = "0x972218", VA = "0x972218")]
	public OnArrowHitExploder()
	{
	}
}
[Token(Token = "0x200019E")]
public class BarrelOnArrowHitExploder : MonoBehaviour
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x170000D7")]
	public ExplosiveBarrelController BarrelExplosionController
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x972228", Offset = "0x972228", VA = "0x972228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x972230", Offset = "0x972230", VA = "0x972230")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x972234", Offset = "0x972234", VA = "0x972234")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x972480", Offset = "0x972480", VA = "0x972480")]
	public BarrelOnArrowHitExploder()
	{
	}
}
[Token(Token = "0x200019F")]
public class BarrelOnFinishedAssaultExtinguisher : MonoBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CartAssailant cartAssailant;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController explosiveBarrelController;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x972488", Offset = "0x972488", VA = "0x972488")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x972560", Offset = "0x972560", VA = "0x972560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x972638", Offset = "0x972638", VA = "0x972638")]
	private void ExtinguishBarrel()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x972680", Offset = "0x972680", VA = "0x972680")]
	public BarrelOnFinishedAssaultExtinguisher()
	{
	}
}
[Token(Token = "0x20001A0")]
public class BarrelOnGateExploder : MonoBehaviour
{
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x972688", Offset = "0x972688", VA = "0x972688")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x97268C", Offset = "0x97268C", VA = "0x97268C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x972760", Offset = "0x972760", VA = "0x972760")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x972834", Offset = "0x972834", VA = "0x972834")]
	private void ExplodeBarrel()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x972A48", Offset = "0x972A48", VA = "0x972A48")]
	public BarrelOnGateExploder()
	{
	}
}
[Token(Token = "0x20001A1")]
public class BarrelOnHitGroundExploder : MonoBehaviour
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x972A50", Offset = "0x972A50", VA = "0x972A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x972A54", Offset = "0x972A54", VA = "0x972A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x972B2C", Offset = "0x972B2C", VA = "0x972B2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x972C04", Offset = "0x972C04", VA = "0x972C04")]
	private void ExplodeBarrel()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x972CFC", Offset = "0x972CFC", VA = "0x972CFC")]
	public void OnHitGround()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x972D00", Offset = "0x972D00", VA = "0x972D00")]
	public BarrelOnHitGroundExploder()
	{
	}
}
[Token(Token = "0x20001A2")]
public class ExplosiveBarrelController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <HitEnemiesAfterExplosionCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveBarrelController <>4__this;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player hitter;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x973824", Offset = "0x973824", VA = "0x973824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x97386C", Offset = "0x97386C", VA = "0x97386C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x972F54", Offset = "0x972F54", VA = "0x972F54")]
		[DebuggerHidden]
		public <HitEnemiesAfterExplosionCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x973590", Offset = "0x973590", VA = "0x973590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x973594", Offset = "0x973594", VA = "0x973594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x97382C", Offset = "0x97382C", VA = "0x97382C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000889")]
	private const int collidersBufferLength = 200;

	[Token(Token = "0x400088A")]
	private const float secondsAfterExplosionToHit = 0.1f;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject explosionEffectPrefab;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float hitRadius;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float damage;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float attackTargetDamage;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject barrelModel;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem sparksParticleSystem;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource fuseBuringAudioSource;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int collidersHitCount;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isActive;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider[] collidersBuffer;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<IAttackTarget> attackTargets;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForHitAfterExplosion;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AttackInfo attackInfo;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool canExplode;

	[Token(Token = "0x170000D8")]
	public bool IsActive
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x972D08", Offset = "0x972D08", VA = "0x972D08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x972D10", Offset = "0x972D10", VA = "0x972D10")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public bool CanExplode
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x972D50", Offset = "0x972D50", VA = "0x972D50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x972D58", Offset = "0x972D58", VA = "0x972D58")]
		set
		{
		}
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x972D78", Offset = "0x972D78", VA = "0x972D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x972E94", Offset = "0x972E94", VA = "0x972E94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x972370", Offset = "0x972370", VA = "0x972370")]
	public void Explode(Player initiator)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x972650", Offset = "0x972650", VA = "0x972650")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x972CDC", Offset = "0x972CDC", VA = "0x972CDC")]
	public void HitEnemiesAfterExplosion(Player hitter)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x9728EC", Offset = "0x9728EC", VA = "0x9728EC")]
	[PunRPC]
	public void RPCShowExplodeVisualEffect()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x972EC4", Offset = "0x972EC4", VA = "0x972EC4")]
	[IteratorStateMachine(typeof(<HitEnemiesAfterExplosionCoroutine>d__31))]
	private IEnumerator HitEnemiesAfterExplosionCoroutine(Player hitter)
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x972F7C", Offset = "0x972F7C", VA = "0x972F7C")]
	private void HitAttackTarget(AttackTargetTrigger attackTargetTrigger)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x973174", Offset = "0x973174", VA = "0x973174")]
	private static void HitBarrel(BarrelOnArrowHitExploder barrelOnArrowHitExploder, Player hitter)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x973208", Offset = "0x973208", VA = "0x973208")]
	private void HitEnemy(EnemyGetHitController enemyToHit)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x972A14", Offset = "0x972A14", VA = "0x972A14", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x973374", Offset = "0x973374", VA = "0x973374", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x97343C", Offset = "0x97343C", VA = "0x97343C")]
	public ExplosiveBarrelController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class HeadshotController : MonoBehaviour
{
	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x973874", Offset = "0x973874", VA = "0x973874")]
	public HeadshotController()
	{
	}
}
[Token(Token = "0x20001A5")]
public class Fire : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <FireStart>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fire <>4__this;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x973CF4", Offset = "0x973CF4", VA = "0x973CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x973D3C", Offset = "0x973D3C", VA = "0x973D3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x973B60", Offset = "0x973B60", VA = "0x973B60")]
		[DebuggerHidden]
		public <FireStart>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x973C34", Offset = "0x973C34", VA = "0x973C34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x973C38", Offset = "0x973C38", VA = "0x973C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x973CFC", Offset = "0x973CFC", VA = "0x973CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A7")]
	[CompilerGenerated]
	private sealed class <FireStop>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fire <>4__this;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x973E08", Offset = "0x973E08", VA = "0x973E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x973E50", Offset = "0x973E50", VA = "0x973E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x973BFC", Offset = "0x973BFC", VA = "0x973BFC")]
		[DebuggerHidden]
		public <FireStop>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x973D44", Offset = "0x973D44", VA = "0x973D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x973D48", Offset = "0x973D48", VA = "0x973D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x973E10", Offset = "0x973E10", VA = "0x973E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fire;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SwellMultiplier;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxEmissionRate;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gravity;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Swell;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool Down;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x97387C", Offset = "0x97387C", VA = "0x97387C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x9738AC", Offset = "0x9738AC", VA = "0x9738AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x973AEC", Offset = "0x973AEC", VA = "0x973AEC")]
	[IteratorStateMachine(typeof(<FireStart>d__11))]
	public IEnumerator FireStart()
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x973B88", Offset = "0x973B88", VA = "0x973B88")]
	[IteratorStateMachine(typeof(<FireStop>d__12))]
	public IEnumerator FireStop()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x973C24", Offset = "0x973C24", VA = "0x973C24")]
	public Fire()
	{
	}
}
[Token(Token = "0x20001A8")]
public class FireballWooshVolumeDown : MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve wooshVolume;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource wooshSound;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWoosh;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x973E58", Offset = "0x973E58", VA = "0x973E58")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x973F0C", Offset = "0x973F0C", VA = "0x973F0C")]
	public FireballWooshVolumeDown()
	{
	}
}
[Token(Token = "0x20001A9")]
public class FlockEnablingController : MonoBehaviour
{
	[Token(Token = "0x40008B3")]
	private const int maxFlockWaveIndex = 18;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WavesController wavesController;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject flocks;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x973F1C", Offset = "0x973F1C", VA = "0x973F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x97407C", Offset = "0x97407C", VA = "0x97407C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x97404C", Offset = "0x97404C", VA = "0x97404C")]
	private void UpdateFlockEnabled(int waveIndex)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x974198", Offset = "0x974198", VA = "0x974198")]
	public FlockEnablingController()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ArcadeModeOnLaunchParameterSwitcher : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string arcadeCommandParameter;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool arcadeOptionSet;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArcadeGameSwitcherCore arcadeSwitcher;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x9741A0", Offset = "0x9741A0", VA = "0x9741A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x9742CC", Offset = "0x9742CC", VA = "0x9742CC")]
	public ArcadeModeOnLaunchParameterSwitcher()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ArrowRain : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x20001AC")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArrowRain <>4__this;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x974BF4", Offset = "0x974BF4", VA = "0x974BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x974C3C", Offset = "0x974C3C", VA = "0x974C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x974A54", Offset = "0x974A54", VA = "0x974A54")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x974AFC", Offset = "0x974AFC", VA = "0x974AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x974B00", Offset = "0x974B00", VA = "0x974B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x974BFC", Offset = "0x974BFC", VA = "0x974BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfArrowsToSpawnPerSideOfOriginalArrow;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angleDifferencePerArrow;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject arrowPrefab;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds delayBetweenArrow;

	[Token(Token = "0x170000E0")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x974324", Offset = "0x974324", VA = "0x974324", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x97432C", Offset = "0x97432C", VA = "0x97432C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x974334", Offset = "0x974334", VA = "0x974334", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x9744B0", Offset = "0x9744B0", VA = "0x9744B0", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x9743A4", Offset = "0x9743A4", VA = "0x9743A4")]
	private void SpawnArrowsOnBothSidesRoutine(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x9744B4", Offset = "0x9744B4", VA = "0x9744B4")]
	private void SpawnArrow(float arrowAngleDifferenceFromOriginalArrow, GameObject arrowObject)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x9747B0", Offset = "0x9747B0", VA = "0x9747B0")]
	[PunRPC]
	private void RpcSetAdditionalArrow(int instantiatedArrowPhotonViewId, int centralArrowPhotonViewId, float arrowAngleDifferenceFromOriginalArrow)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x97442C", Offset = "0x97442C", VA = "0x97442C")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__15))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x974A7C", Offset = "0x974A7C", VA = "0x974A7C", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x974A80", Offset = "0x974A80", VA = "0x974A80")]
	public ArrowRain()
	{
	}
}
[Token(Token = "0x20001AD")]
public class BowToHandSnapper : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bowParent;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 BowParentLocalRotation;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x974C44", Offset = "0x974C44", VA = "0x974C44")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x974D3C", Offset = "0x974D3C", VA = "0x974D3C")]
	public BowToHandSnapper()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Explosion : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001AF")]
	[CompilerGenerated]
	private sealed class <DealDamageRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explosion <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x9755FC", Offset = "0x9755FC", VA = "0x9755FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x975644", Offset = "0x975644", VA = "0x975644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x975220", Offset = "0x975220", VA = "0x975220")]
		[DebuggerHidden]
		public <DealDamageRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x9754DC", Offset = "0x9754DC", VA = "0x9754DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x9754E0", Offset = "0x9754E0", VA = "0x9754E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x975604", Offset = "0x975604", VA = "0x975604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B0")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Explosion <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x975764", Offset = "0x975764", VA = "0x975764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x9757AC", Offset = "0x9757AC", VA = "0x9757AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x975424", Offset = "0x975424", VA = "0x975424")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x97564C", Offset = "0x97564C", VA = "0x97564C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x975650", Offset = "0x975650", VA = "0x975650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x97576C", Offset = "0x97576C", VA = "0x97576C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float delayFromCastToDealDamageToEnemiesInSeconds;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float dealingDamageTimeInSeconds;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audiosource;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x170000E4")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x974D54", Offset = "0x974D54", VA = "0x974D54", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x974D5C", Offset = "0x974D5C", VA = "0x974D5C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x974D64", Offset = "0x974D64", VA = "0x974D64")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x974F30", Offset = "0x974F30", VA = "0x974F30", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x974F34", Offset = "0x974F34", VA = "0x974F34", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x975104", Offset = "0x975104", VA = "0x975104")]
	private void PlayParticleSystem(Collision collision)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x97518C", Offset = "0x97518C", VA = "0x97518C")]
	public void StartDealDamageRoutine()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x9751AC", Offset = "0x9751AC", VA = "0x9751AC")]
	[IteratorStateMachine(typeof(<DealDamageRoutine>d__17))]
	private IEnumerator DealDamageRoutine()
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x975248", Offset = "0x975248", VA = "0x975248")]
	private void DealDamage()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x9752A4", Offset = "0x9752A4", VA = "0x9752A4")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x975300", Offset = "0x975300", VA = "0x975300", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x975370", Offset = "0x975370", VA = "0x975370")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x9753A0", Offset = "0x9753A0", VA = "0x9753A0")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__22))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x97544C", Offset = "0x97544C", VA = "0x97544C", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x975454", Offset = "0x975454", VA = "0x975454")]
	public Explosion()
	{
	}
}
[Token(Token = "0x20001B1")]
public class FireArrow : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001B2")]
	[CompilerGenerated]
	private sealed class <BurningCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0x97652C", Offset = "0x97652C", VA = "0x97652C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x976574", Offset = "0x976574", VA = "0x976574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x975F44", Offset = "0x975F44", VA = "0x975F44")]
		[DebuggerHidden]
		public <BurningCoroutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x9763E4", Offset = "0x9763E4", VA = "0x9763E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x9763E8", Offset = "0x9763E8", VA = "0x9763E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x976534", Offset = "0x976534", VA = "0x976534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	[CompilerGenerated]
	private sealed class <PeriodicDamageCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0x9766A8", Offset = "0x9766A8", VA = "0x9766A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x9766F0", Offset = "0x9766F0", VA = "0x9766F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x9760F4", Offset = "0x9760F4", VA = "0x9760F4")]
		[DebuggerHidden]
		public <PeriodicDamageCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x97657C", Offset = "0x97657C", VA = "0x97657C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x976580", Offset = "0x976580", VA = "0x976580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x9766B0", Offset = "0x9766B0", VA = "0x9766B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <StopPutOnFireSoundRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x9767C4", Offset = "0x9767C4", VA = "0x9767C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x97680C", Offset = "0x97680C", VA = "0x97680C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x9761A4", Offset = "0x9761A4", VA = "0x9761A4")]
		[DebuggerHidden]
		public <StopPutOnFireSoundRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x9766F8", Offset = "0x9766F8", VA = "0x9766F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x9766FC", Offset = "0x9766FC", VA = "0x9766FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x9767CC", Offset = "0x9767CC", VA = "0x9767CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B5")]
	[CompilerGenerated]
	private sealed class <ExtinguishArrowRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x9768F0", Offset = "0x9768F0", VA = "0x9768F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0x976938", Offset = "0x976938", VA = "0x976938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x976240", Offset = "0x976240", VA = "0x976240")]
		[DebuggerHidden]
		public <ExtinguishArrowRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x976814", Offset = "0x976814", VA = "0x976814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x976818", Offset = "0x976818", VA = "0x976818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x9768F8", Offset = "0x9768F8", VA = "0x9768F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireArrow <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x976A58", Offset = "0x976A58", VA = "0x976A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000942")]
			[Address(RVA = "0x976AA0", Offset = "0x976AA0", VA = "0x976AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x976324", Offset = "0x976324", VA = "0x976324")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x976940", Offset = "0x976940", VA = "0x976940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x976944", Offset = "0x976944", VA = "0x976944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x976A60", Offset = "0x976A60", VA = "0x976A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008D5")]
	private const float ArrowHeadOffset = 1.4f;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damageMultiplier;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeOfArrowBurningInSeconds;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float putOnFireGrownScale;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float putOnFireShrinkedScale;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float putOnFireShrinkTimeInSeconds;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource fireArrowHitSound;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource fireArrowOnFireSound;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource putOnFireSound;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOfPutOnFireSound;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float putOnFireSoundMuteSpeed;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int damagePeriods;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isGrowingFire;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isShrinkingFire;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool isMutingPutOnFireSound;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float periodicDamage;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EnemyGetHitController enemyGetHitController;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentDamagePeriods;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool hasDealtWholePeriodicDamage;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitForPeriodicTime;

	[Token(Token = "0x170000EA")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x9757B4", Offset = "0x9757B4", VA = "0x9757B4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0x9757BC", Offset = "0x9757BC", VA = "0x9757BC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x9757C4", Offset = "0x9757C4", VA = "0x9757C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x975A88", Offset = "0x975A88", VA = "0x975A88", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x975D94", Offset = "0x975D94", VA = "0x975D94", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x975DFC", Offset = "0x975DFC", VA = "0x975DFC")]
	private void Burn(Collision collision)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x975ED0", Offset = "0x975ED0", VA = "0x975ED0")]
	[IteratorStateMachine(typeof(<BurningCoroutine>d__33))]
	private IEnumerator BurningCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x975F6C", Offset = "0x975F6C", VA = "0x975F6C")]
	private void SetFireArrowParent()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x976080", Offset = "0x976080", VA = "0x976080")]
	[IteratorStateMachine(typeof(<PeriodicDamageCoroutine>d__35))]
	private IEnumerator PeriodicDamageCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x97611C", Offset = "0x97611C", VA = "0x97611C")]
	private void TryToStopGrowingFire()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x976130", Offset = "0x976130", VA = "0x976130")]
	[IteratorStateMachine(typeof(<StopPutOnFireSoundRoutine>d__37))]
	private IEnumerator StopPutOnFireSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x975A08", Offset = "0x975A08", VA = "0x975A08")]
	private void MutePutOnFireSound()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x975D1C", Offset = "0x975D1C", VA = "0x975D1C")]
	private void PutOnFire()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x975D74", Offset = "0x975D74", VA = "0x975D74")]
	private void ExtinguishArrowWithDelay()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x9761CC", Offset = "0x9761CC", VA = "0x9761CC")]
	[IteratorStateMachine(typeof(<ExtinguishArrowRoutine>d__41))]
	private IEnumerator ExtinguishArrowRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x976268", Offset = "0x976268", VA = "0x976268", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x9762A0", Offset = "0x9762A0", VA = "0x9762A0")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__43))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x97634C", Offset = "0x97634C", VA = "0x97634C", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x976354", Offset = "0x976354", VA = "0x976354")]
	public FireArrow()
	{
	}
}
[Token(Token = "0x20001B7")]
public class FireClaws : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001B8")]
	[CompilerGenerated]
	private sealed class <DealDamageDefaultRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClaws <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x97784C", Offset = "0x97784C", VA = "0x97784C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x977894", Offset = "0x977894", VA = "0x977894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x9773E8", Offset = "0x9773E8", VA = "0x9773E8")]
		[DebuggerHidden]
		public <DealDamageDefaultRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x9776FC", Offset = "0x9776FC", VA = "0x9776FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x977700", Offset = "0x977700", VA = "0x977700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x977854", Offset = "0x977854", VA = "0x977854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B9")]
	[CompilerGenerated]
	private sealed class <DealDamageToFlyingUnitsRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClaws <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x97797C", Offset = "0x97797C", VA = "0x97797C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x9779C4", Offset = "0x9779C4", VA = "0x9779C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x977410", Offset = "0x977410", VA = "0x977410")]
		[DebuggerHidden]
		public <DealDamageToFlyingUnitsRoutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x97789C", Offset = "0x97789C", VA = "0x97789C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x9778A0", Offset = "0x9778A0", VA = "0x9778A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x977984", Offset = "0x977984", VA = "0x977984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireClaws <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x977AE4", Offset = "0x977AE4", VA = "0x977AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x977B2C", Offset = "0x977B2C", VA = "0x977B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x97763C", Offset = "0x97763C", VA = "0x97763C")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x9779CC", Offset = "0x9779CC", VA = "0x9779CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x9779D0", Offset = "0x9779D0", VA = "0x9779D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x977AEC", Offset = "0x977AEC", VA = "0x977AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	private const float timeAfterFireClawsExploding = 3f;

	[Token(Token = "0x40008FF")]
	private const float timeFromExplosionTillParticleEffectDone = 1f;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask groundHitLayerMask;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource defaultAudioSource;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource explosionAudioSource;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CapsuleCollider defaultDamageCollider;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float dealingDamageTimeInSeconds;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float defaultDamage;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float damageFromEplxosionToFlyingUnits;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private LayerType enemyLayer;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EnemyGetHitController explodeImmediatelyEnemyGetHitController;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool explodeImmediately;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SimpleHitInfo explodeImmediatelyUnitHitInfo;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SimpleHitInfo groundUnitHitInfo;

	[Token(Token = "0x170000F6")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x976AA8", Offset = "0x976AA8", VA = "0x976AA8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F7")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x976AB0", Offset = "0x976AB0", VA = "0x976AB0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x976AB8", Offset = "0x976AB8", VA = "0x976AB8", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x976CC4", Offset = "0x976CC4", VA = "0x976CC4", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x976E48", Offset = "0x976E48", VA = "0x976E48")]
	private void DeparentSpellGameobject()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x976FC4", Offset = "0x976FC4", VA = "0x976FC4")]
	private void CreateFireClawsVisuals()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x976E78", Offset = "0x976E78", VA = "0x976E78")]
	private void SetSpellAtSpace(Collision collision, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x977038", Offset = "0x977038", VA = "0x977038")]
	private void SetSpellAtSpaceWhenHitEnemyUnit(Collision collision, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x9770D4", Offset = "0x9770D4", VA = "0x9770D4")]
	private void SetSpellAtSpaceWhenHitFlyingUnit(Collision collision)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x97717C", Offset = "0x97717C", VA = "0x97717C")]
	private void SetSpellAtSpaceWhenHitDefaultUnit(Collision collision)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x977000", Offset = "0x977000", VA = "0x977000")]
	private void DealDamageDependingOnUnit()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x9772C8", Offset = "0x9772C8", VA = "0x9772C8")]
	public void StartDealDamageRoutine()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x977374", Offset = "0x977374", VA = "0x977374")]
	[IteratorStateMachine(typeof(<DealDamageDefaultRoutine>d__32))]
	private IEnumerator DealDamageDefaultRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x977300", Offset = "0x977300", VA = "0x977300")]
	[IteratorStateMachine(typeof(<DealDamageToFlyingUnitsRoutine>d__33))]
	private IEnumerator DealDamageToFlyingUnitsRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x977438", Offset = "0x977438", VA = "0x977438")]
	private void ToogleDamageCollider(bool value)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x976F98", Offset = "0x976F98", VA = "0x976F98")]
	private void PlayAudioSource()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x977458", Offset = "0x977458", VA = "0x977458")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x9775B8", Offset = "0x9775B8", VA = "0x9775B8", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x976C40", Offset = "0x976C40", VA = "0x976C40")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__38))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x977664", Offset = "0x977664", VA = "0x977664", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x97766C", Offset = "0x97766C", VA = "0x97766C")]
	public FireClaws()
	{
	}
}
[Token(Token = "0x20001BB")]
public class FreezeController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[RequireInterface(typeof(IFreezable))]
	[SerializeField]
	private UnityEngine.Object objectFreezable;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public bool isFreezeResistant;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IFreezable freezable;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isFrozen;

	[Token(Token = "0x170000FE")]
	public bool IsFrozen
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x977C6C", Offset = "0x977C6C", VA = "0x977C6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x977C74", Offset = "0x977C74", VA = "0x977C74")]
		set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action OnFreeze
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x977B34", Offset = "0x977B34", VA = "0x977B34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x977BD0", Offset = "0x977BD0", VA = "0x977BD0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x977D64", Offset = "0x977D64", VA = "0x977D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x977DCC", Offset = "0x977DCC", VA = "0x977DCC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x977E10", Offset = "0x977E10", VA = "0x977E10", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x977EE4", Offset = "0x977EE4", VA = "0x977EE4")]
	public FreezeController()
	{
	}
}
[Token(Token = "0x20001BC")]
public class FreezeStorm : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001BF")]
	[CompilerGenerated]
	private sealed class <DealDamageCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x9798C8", Offset = "0x9798C8", VA = "0x9798C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x979910", Offset = "0x979910", VA = "0x979910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x97925C", Offset = "0x97925C", VA = "0x97925C")]
		[DebuggerHidden]
		public <DealDamageCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x9797B4", Offset = "0x9797B4", VA = "0x9797B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x9797B8", Offset = "0x9797B8", VA = "0x9797B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x9798D0", Offset = "0x9798D0", VA = "0x9798D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private sealed class <DecreaseVolume>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x979A14", Offset = "0x979A14", VA = "0x979A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x979A5C", Offset = "0x979A5C", VA = "0x979A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x979284", Offset = "0x979284", VA = "0x979284")]
		[DebuggerHidden]
		public <DecreaseVolume>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x979918", Offset = "0x979918", VA = "0x979918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x97991C", Offset = "0x97991C", VA = "0x97991C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x979A1C", Offset = "0x979A1C", VA = "0x979A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x979B7C", Offset = "0x979B7C", VA = "0x979B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x979BC4", Offset = "0x979BC4", VA = "0x979BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x97956C", Offset = "0x97956C", VA = "0x97956C")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x979A64", Offset = "0x979A64", VA = "0x979A64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x979A68", Offset = "0x979A68", VA = "0x979A68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x979B84", Offset = "0x979B84", VA = "0x979B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400091F")]
	private const float volumeDecreaseRate = 0.35f;

	[Token(Token = "0x4000920")]
	private const float baseVolumeValue = 0.7f;

	[Token(Token = "0x4000921")]
	private const float volumeDecreaseTimeDivider = 1.35f;

	[Token(Token = "0x4000922")]
	private const float minimalVolume = 0f;

	[Token(Token = "0x4000923")]
	private const int notFoundIndex = -1;

	[Token(Token = "0x4000924")]
	private const float dealingDamageTimeInSeconds = 9f;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float heightOfFreezeStorm;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float delayFromCastToDealDamageToEnemiesInSeconds;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float timeBetweenHitsInSeconds;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<FreezeStormHitTarget> hitTargets;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<FreezeStormHitTarget> toRemoveHitTargets;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSecondsRealtime decreaseVolumeDelay;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HitInfo hitInfo;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x170000FF")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x977EEC", Offset = "0x977EEC", VA = "0x977EEC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x977EF4", Offset = "0x977EF4", VA = "0x977EF4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x977EFC", Offset = "0x977EFC", VA = "0x977EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x97842C", Offset = "0x97842C", VA = "0x97842C")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x978908", Offset = "0x978908", VA = "0x978908")]
	private void OnTriggerExit(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x978ABC", Offset = "0x978ABC", VA = "0x978ABC")]
	private bool IsAbleToUnslow(FreezeStormHitTarget freezeStormHitTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x978B84", Offset = "0x978B84", VA = "0x978B84", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x978C5C", Offset = "0x978C5C", VA = "0x978C5C")]
	public void CreateFreezeStorm(Collision collision)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x978E84", Offset = "0x978E84", VA = "0x978E84")]
	public void AdjustColliderHeight(Transform origin)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x979030", Offset = "0x979030", VA = "0x979030")]
	[IteratorStateMachine(typeof(<DealDamageCoroutine>d__30))]
	private IEnumerator DealDamageCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x977FA8", Offset = "0x977FA8", VA = "0x977FA8")]
	private void RemoveKilledEnemiesFromEnemiesToHitList()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x9790A4", Offset = "0x9790A4", VA = "0x9790A4")]
	[IteratorStateMachine(typeof(<DecreaseVolume>d__32))]
	private IEnumerator DecreaseVolume()
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x9792AC", Offset = "0x9792AC", VA = "0x9792AC")]
	private void StartDealingDamage()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x9792CC", Offset = "0x9792CC", VA = "0x9792CC")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x978E68", Offset = "0x978E68", VA = "0x978E68")]
	private void PlayStormSound()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x9782D8", Offset = "0x9782D8", VA = "0x9782D8")]
	private void HitSpellTargets()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x979118", Offset = "0x979118", VA = "0x979118")]
	private int CalculateOneLayerMaskToExclude(List<LayerType> layerList)
	{
		return default(int);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x979410", Offset = "0x979410", VA = "0x979410", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x979414", Offset = "0x979414", VA = "0x979414", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x9794B8", Offset = "0x9794B8", VA = "0x9794B8")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x9794E8", Offset = "0x9794E8", VA = "0x9794E8")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__41))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x979594", Offset = "0x979594", VA = "0x979594", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x97959C", Offset = "0x97959C", VA = "0x97959C")]
	public FreezeStorm()
	{
	}
}
[Token(Token = "0x20001C2")]
public class FreezeStormHitTarget
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnemyGetHitController enemyGetHitController;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SlowingController slowingController;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> colliders;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeFromLastHit;

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x9787C8", Offset = "0x9787C8", VA = "0x9787C8")]
	public FreezeStormHitTarget(EnemyGetHitController enemyGetHitController, SlowingController slowingController, Collider collider)
	{
	}
}
[Token(Token = "0x20001C3")]
public class FreezingArrow : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FreezingArrow <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x97A014", Offset = "0x97A014", VA = "0x97A014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x97A05C", Offset = "0x97A05C", VA = "0x97A05C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x979EC8", Offset = "0x979EC8", VA = "0x979EC8")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x979EFC", Offset = "0x979EFC", VA = "0x979EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x979F00", Offset = "0x979F00", VA = "0x979F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x97A01C", Offset = "0x97A01C", VA = "0x97A01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrowHitInfo simpleHitInfo;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject arrowObject;

	[Token(Token = "0x17000107")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x979BCC", Offset = "0x979BCC", VA = "0x979BCC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x979BD4", Offset = "0x979BD4", VA = "0x979BD4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x979BDC", Offset = "0x979BDC", VA = "0x979BDC", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x979CD0", Offset = "0x979CD0", VA = "0x979CD0", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x979E14", Offset = "0x979E14", VA = "0x979E14")]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x979E44", Offset = "0x979E44", VA = "0x979E44")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__12))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x979EF0", Offset = "0x979EF0", VA = "0x979EF0", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x979EF4", Offset = "0x979EF4", VA = "0x979EF4")]
	public FreezingArrow()
	{
	}
}
[Token(Token = "0x20001C5")]
public class IceBolt : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001C6")]
	public delegate void FreezingEnemyWithAOE(int playerID, float damage, bool isMagic);

	[Token(Token = "0x20001C7")]
	[CompilerGenerated]
	private sealed class <DisableFreezingCollider>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceBolt <>4__this;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x97ABDC", Offset = "0x97ABDC", VA = "0x97ABDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x97AC24", Offset = "0x97AC24", VA = "0x97AC24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x97A8E4", Offset = "0x97A8E4", VA = "0x97A8E4")]
		[DebuggerHidden]
		public <DisableFreezingCollider>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x97AB1C", Offset = "0x97AB1C", VA = "0x97AB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x97AB20", Offset = "0x97AB20", VA = "0x97AB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x97ABE4", Offset = "0x97ABE4", VA = "0x97ABE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceBolt <>4__this;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x97AD44", Offset = "0x97AD44", VA = "0x97AD44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x97AD8C", Offset = "0x97AD8C", VA = "0x97AD8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x97A928", Offset = "0x97A928", VA = "0x97A928")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x97AC2C", Offset = "0x97AC2C", VA = "0x97AC2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x97AC30", Offset = "0x97AC30", VA = "0x97AC30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x97AD4C", Offset = "0x97AD4C", VA = "0x97AD4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094B")]
	private const float FreezingWindowTimeInSeconds = 2f;

	[Token(Token = "0x400094C")]
	private const int maxNumberOfFrozenEnemies = 3;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider aOECollider;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject arrowObject;

	[Token(Token = "0x1700010B")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x97A1D4", Offset = "0x97A1D4", VA = "0x97A1D4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x97A1DC", Offset = "0x97A1DC", VA = "0x97A1DC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000F")]
	public static event FreezingEnemyWithAOE OnFreezingEnemyWithAOE
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x97A064", Offset = "0x97A064", VA = "0x97A064")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x97A11C", Offset = "0x97A11C", VA = "0x97A11C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x97A1E4", Offset = "0x97A1E4", VA = "0x97A1E4")]
	public void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x97A3C4", Offset = "0x97A3C4", VA = "0x97A3C4", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x97A5AC", Offset = "0x97A5AC", VA = "0x97A5AC", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x97A7A8", Offset = "0x97A7A8", VA = "0x97A7A8")]
	private void CreateIceBolt(Vector3 position)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x97A810", Offset = "0x97A810", VA = "0x97A810")]
	private void PlaceSpellInWorldSpace(Vector3 position)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x97A870", Offset = "0x97A870", VA = "0x97A870")]
	[IteratorStateMachine(typeof(<DisableFreezingCollider>d__22))]
	private IEnumerator DisableFreezingCollider()
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x97A90C", Offset = "0x97A90C", VA = "0x97A90C", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x97A528", Offset = "0x97A528", VA = "0x97A528")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__24))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x97A950", Offset = "0x97A950", VA = "0x97A950", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x97A958", Offset = "0x97A958", VA = "0x97A958")]
	public IceBolt()
	{
	}
}
[Token(Token = "0x20001C9")]
internal class IceShield : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceShield <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x97B334", Offset = "0x97B334", VA = "0x97B334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x97B37C", Offset = "0x97B37C", VA = "0x97B37C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x97B0A4", Offset = "0x97B0A4", VA = "0x97B0A4")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x97B184", Offset = "0x97B184", VA = "0x97B184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x97B188", Offset = "0x97B188", VA = "0x97B188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x97B33C", Offset = "0x97B33C", VA = "0x97B33C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <StartBlinking>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceShield <>4__this;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <blinkTime>5__2;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material <iceShieldMaterial>5__3;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__4;

		[Token(Token = "0x17000115")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x97B598", Offset = "0x97B598", VA = "0x97B598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x97B5E0", Offset = "0x97B5E0", VA = "0x97B5E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x97B150", Offset = "0x97B150", VA = "0x97B150")]
		[DebuggerHidden]
		public <StartBlinking>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x97B384", Offset = "0x97B384", VA = "0x97B384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x97B388", Offset = "0x97B388", VA = "0x97B388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x97B5A0", Offset = "0x97B5A0", VA = "0x97B5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask groundHitLayerMask;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private LayerType enemyLayer;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 100f)]
	[SerializeField]
	private float blinkingTimeInPercentage;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float blinkingSwitches;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float blinkingRatio;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[Range(0f, 1f)]
	private float fadeRatio;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Range(0f, 1f)]
	private float startFadeRatio;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject abilityMesh;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ScalerOverTime scalerOverTime;

	[Token(Token = "0x17000111")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x97AD94", Offset = "0x97AD94", VA = "0x97AD94", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000112")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x97AD9C", Offset = "0x97AD9C", VA = "0x97AD9C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x97ADA4", Offset = "0x97ADA4", VA = "0x97ADA4", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x97ADA8", Offset = "0x97ADA8", VA = "0x97ADA8", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x97ADAC", Offset = "0x97ADAC", VA = "0x97ADAC")]
	public void CreateIceShield(Collision collision)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x97B074", Offset = "0x97B074", VA = "0x97B074")]
	public void SetReferences(ScalerOverTime _scalerOverTime, GameObject _abilityMesh)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x97AF94", Offset = "0x97AF94", VA = "0x97AF94")]
	private void CreateIceShield(Vector3 position)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x97AF20", Offset = "0x97AF20", VA = "0x97AF20")]
	private bool IsEnemyCollider(int layerID)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x97AFF0", Offset = "0x97AFF0", VA = "0x97AFF0")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__21))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x97B0CC", Offset = "0x97B0CC", VA = "0x97B0CC")]
	[IteratorStateMachine(typeof(<StartBlinking>d__22))]
	private IEnumerator StartBlinking(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x97B178", Offset = "0x97B178", VA = "0x97B178", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x97B17C", Offset = "0x97B17C", VA = "0x97B17C")]
	public IceShield()
	{
	}
}
[Token(Token = "0x20001CC")]
public class MeteorShower : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20001CD")]
	[CompilerGenerated]
	private sealed class <DealDamageRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorShower <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x97C200", Offset = "0x97C200", VA = "0x97C200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x97C248", Offset = "0x97C248", VA = "0x97C248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x97BD74", Offset = "0x97BD74", VA = "0x97BD74")]
		[DebuggerHidden]
		public <DealDamageRoutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x97C150", Offset = "0x97C150", VA = "0x97C150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x97C154", Offset = "0x97C154", VA = "0x97C154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x97C208", Offset = "0x97C208", VA = "0x97C208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[CompilerGenerated]
	private sealed class <DecreaseVolumeDelayed>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorShower <>4__this;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x97C34C", Offset = "0x97C34C", VA = "0x97C34C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x97C394", Offset = "0x97C394", VA = "0x97C394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x97BD9C", Offset = "0x97BD9C", VA = "0x97BD9C")]
		[DebuggerHidden]
		public <DecreaseVolumeDelayed>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x97C250", Offset = "0x97C250", VA = "0x97C250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x97C254", Offset = "0x97C254", VA = "0x97C254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x97C354", Offset = "0x97C354", VA = "0x97C354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeteorShower <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x97C4B4", Offset = "0x97C4B4", VA = "0x97C4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x97C4FC", Offset = "0x97C4FC", VA = "0x97C4FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x97BF64", Offset = "0x97BF64", VA = "0x97BF64")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x97C39C", Offset = "0x97C39C", VA = "0x97C39C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x97C3A0", Offset = "0x97C3A0", VA = "0x97C3A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x97C4BC", Offset = "0x97C4BC", VA = "0x97C4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000972")]
	private const float minimalVolume = 0f;

	[Token(Token = "0x4000973")]
	private const float volumeDecreaseRate = 0.35f;

	[Token(Token = "0x4000974")]
	private const float baseVolumeValue = 0.7f;

	[Token(Token = "0x4000975")]
	private const float volumeDecreaseTimeDivider = 1.35f;

	[Token(Token = "0x4000976")]
	private const float dealingDamageTimeInSeconds = 6f;

	[Token(Token = "0x4000977")]
	private const float delayFromCastToDealDamageToEnemiesInSeconds = 1f;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSecondsRealtime decreaseVolumeDelay;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds dealingDamageDelay;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds dealingDamage;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float heightOfMeteorsSpawnArea;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x17000117")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x97B5E8", Offset = "0x97B5E8", VA = "0x97B5E8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x97B5F0", Offset = "0x97B5F0", VA = "0x97B5F0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x97B5F8", Offset = "0x97B5F8", VA = "0x97B5F8", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x97B600", Offset = "0x97B600", VA = "0x97B600", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x97B6D8", Offset = "0x97B6D8", VA = "0x97B6D8", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x97B6DC", Offset = "0x97B6DC", VA = "0x97B6DC")]
	public void CreateMeteorShower(Collision collision)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x97B8E8", Offset = "0x97B8E8", VA = "0x97B8E8")]
	public void AdjustColliderHeight(Transform origin)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x97BCC0", Offset = "0x97BCC0", VA = "0x97BCC0")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x97BA94", Offset = "0x97BA94", VA = "0x97BA94")]
	[IteratorStateMachine(typeof(<DealDamageRoutine>d__27))]
	private IEnumerator DealDamageRoutine()
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x97BB08", Offset = "0x97BB08", VA = "0x97BB08")]
	[IteratorStateMachine(typeof(<DecreaseVolumeDelayed>d__28))]
	private IEnumerator DecreaseVolumeDelayed()
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x97BDC4", Offset = "0x97BDC4", VA = "0x97BDC4")]
	private void StartDealingDamage()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x97BDE4", Offset = "0x97BDE4", VA = "0x97BDE4")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x97BE04", Offset = "0x97BE04", VA = "0x97BE04")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x97BB7C", Offset = "0x97BB7C", VA = "0x97BB7C")]
	private int CalculateOneLayerMaskToExclude(List<LayerType> layerList)
	{
		return default(int);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x97BCF0", Offset = "0x97BCF0", VA = "0x97BCF0")]
	[IteratorStateMachine(typeof(<PhotonDestroySpellWithDelayRoutine>d__33))]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x97BF8C", Offset = "0x97BF8C", VA = "0x97BF8C", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x97C018", Offset = "0x97C018", VA = "0x97C018")]
	public MeteorShower()
	{
	}
}
[Token(Token = "0x20001D0")]
public class SpellInGameSlot : MonoBehaviour
{
	[Token(Token = "0x400098D")]
	private const float slotInitialCooldownValue = 0f;

	[Token(Token = "0x400098E")]
	private const int fullFillValue = 1;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float slotCooldown;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SlotPostion position;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image spellImage;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image cooldownImage;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IAbility spell;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cooldownTimeLeft;

	[Token(Token = "0x1700011F")]
	public IAbility Spell
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x97C504", Offset = "0x97C504", VA = "0x97C504")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x97C50C", Offset = "0x97C50C", VA = "0x97C50C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public bool IsCooldownFinished
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x97C52C", Offset = "0x97C52C", VA = "0x97C52C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000121")]
	public float ActualCooldownLeftLevel
	{
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x97C53C", Offset = "0x97C53C", VA = "0x97C53C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000122")]
	public bool IsHighlited
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x97C54C", Offset = "0x97C54C", VA = "0x97C54C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x97C638", Offset = "0x97C638", VA = "0x97C638")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x97C6C8", Offset = "0x97C6C8", VA = "0x97C6C8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x97C758", Offset = "0x97C758", VA = "0x97C758")]
	public void ProcessUpdate()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x97C7C0", Offset = "0x97C7C0", VA = "0x97C7C0")]
	public void ResetCooldownTime()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x97C7CC", Offset = "0x97C7CC", VA = "0x97C7CC")]
	public SpellInGameSlot()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Spells : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] abilityObject;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IAbility> abilities;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Spells instance;

	[Token(Token = "0x17000123")]
	public static Spells Instance
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x97C7D4", Offset = "0x97C7D4", VA = "0x97C7D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x97C90C", Offset = "0x97C90C", VA = "0x97C90C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x97CA74", Offset = "0x97CA74", VA = "0x97CA74")]
	private void InitAblitiesList()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x97CC18", Offset = "0x97CC18", VA = "0x97CC18")]
	private void InitializePlayerPrefs()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x97CEC4", Offset = "0x97CEC4", VA = "0x97CEC4")]
	public IAbility GetSpellByType(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x97D158", Offset = "0x97D158", VA = "0x97D158")]
	public IAbility GetSpellByTypeName(string spellTypeName)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x97D3FC", Offset = "0x97D3FC", VA = "0x97D3FC")]
	public Spells()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SpellsGUI : MonoBehaviour
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellInGameSlot[] spellSlots;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image backgroundImage;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x97D484", Offset = "0x97D484", VA = "0x97D484")]
	public SpellInGameSlot GetSlotByPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x97D5B0", Offset = "0x97D5B0", VA = "0x97D5B0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x97D620", Offset = "0x97D620", VA = "0x97D620")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x97D690", Offset = "0x97D690", VA = "0x97D690")]
	public void AttachSpellsToSlots()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x97DA50", Offset = "0x97DA50", VA = "0x97DA50")]
	private void AttachSpellToSlot(SlotPostion slotPosition, IAbility spell)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x97DB74", Offset = "0x97DB74", VA = "0x97DB74")]
	public void UpdateImage(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x97DC44", Offset = "0x97DC44", VA = "0x97DC44")]
	public void HighlightSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x97DD68", Offset = "0x97DD68", VA = "0x97DD68")]
	public bool IsHighlightened(SlotPostion slotPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x97DE68", Offset = "0x97DE68", VA = "0x97DE68")]
	public void UnhighlightSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x97DFB4", Offset = "0x97DFB4", VA = "0x97DFB4")]
	public void UnhighlightAllSlots()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x97E2F0", Offset = "0x97E2F0", VA = "0x97E2F0")]
	public SpellsGUI()
	{
	}
}
[Token(Token = "0x20001D3")]
public enum GameStatePayload
{
	[Token(Token = "0x400099B")]
	NotStarted,
	[Token(Token = "0x400099C")]
	During,
	[Token(Token = "0x400099D")]
	Victory,
	[Token(Token = "0x400099E")]
	Defeat
}
[Token(Token = "0x20001D4")]
public class GateExplosionController : MonoBehaviour, IGateExplosionController
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCityDestroyedSoundsPlaying;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ExplosionAudioSource;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource FireAudioSource;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Smoke;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasExplosionSoundFinnished;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x97E2F8", Offset = "0x97E2F8", VA = "0x97E2F8", Slot = "4")]
	public void DestroyCity()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x97E3B0", Offset = "0x97E3B0", VA = "0x97E3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x97E4F4", Offset = "0x97E4F4", VA = "0x97E4F4")]
	public GateExplosionController()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MenuWindowsController : MonoBehaviour
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] menuWindows;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuWindowsParent;

	[Token(Token = "0x17000124")]
	public bool IsMenuVisible
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x97E4FC", Offset = "0x97E4FC", VA = "0x97E4FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x97E518", Offset = "0x97E518", VA = "0x97E518")]
	public void ShowWindows()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x97E538", Offset = "0x97E538", VA = "0x97E538")]
	public void HideWindows()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x97E59C", Offset = "0x97E59C", VA = "0x97E59C")]
	public MenuWindowsController()
	{
	}
}
[Token(Token = "0x20001D6")]
public class HeadsetQualityVersionSetter : MonoBehaviour
{
	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x97E5A4", Offset = "0x97E5A4", VA = "0x97E5A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x97E5B4", Offset = "0x97E5B4", VA = "0x97E5B4")]
	private void DetectHeadsetQuality()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x97E610", Offset = "0x97E610", VA = "0x97E610")]
	private void SetQuality()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x97E688", Offset = "0x97E688", VA = "0x97E688")]
	public HeadsetQualityVersionSetter()
	{
	}
}
[Token(Token = "0x20001D7")]
[CreateAssetMenu(fileName = "ProjectSettings", menuName = "ScriptableObjects/ProjectSettings", order = 51)]
public class ProjectSettings : ProjectSettingsCore
{
	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isReleaseBuild;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool isArcadeBuild;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool isFreeItemsInShop;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool isTournamentBuild;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isSpellsTestingBuild;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool isBowSpellsBuild;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	private bool isOrcCaptainEnabled;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[SerializeField]
	private bool isPauseVotingEnabled;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isEquipmentBonusEnabled;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isSkippingWavesAvailable;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int wavesToSkipCount;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isFastShootingLockAvailable;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool isVoiceChatDisabled;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool isDiscordLinkDisabled;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[SerializeField]
	private bool isLeaderboardDisabled;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string gameVersion;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string tournamentPhotonID;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AWSEndpointType aWSEndpointType;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextAsset changelog;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[DisplayWithoutEditEnum]
	[SerializeField]
	private Quality gameQuality;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[DisplayWithoutEditEnum]
	[SerializeField]
	private VRSDK vRSDK;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[DisplayWithoutEditEnum]
	[SerializeField]
	private TargetPlatform currentPlatform;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[DisplayWithoutEditEnum]
	[SerializeField]
	private CloudRegionCode defaultCloudRegionCode;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Maps maps;

	[Token(Token = "0x17000125")]
	public override bool IsReleaseBuild
	{
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x97E690", Offset = "0x97E690", VA = "0x97E690", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000126")]
	public override bool IsArcadeBuild
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x97E698", Offset = "0x97E698", VA = "0x97E698", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000127")]
	public bool IsFreeItemsInShop
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x97E6A0", Offset = "0x97E6A0", VA = "0x97E6A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000128")]
	public bool IsTournamentBuild
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x97E6A8", Offset = "0x97E6A8", VA = "0x97E6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public bool IsSpellsTestingBuild
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x97E6B0", Offset = "0x97E6B0", VA = "0x97E6B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	public bool IsBowSpellsBuild
	{
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x97E6B8", Offset = "0x97E6B8", VA = "0x97E6B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public bool IsOrcCaptainEnabled
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x97E6C0", Offset = "0x97E6C0", VA = "0x97E6C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012C")]
	public bool IsPauseVotingEnabled
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x97E6C8", Offset = "0x97E6C8", VA = "0x97E6C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012D")]
	public bool IsEquipmentBonusEnabled
	{
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x97E6D0", Offset = "0x97E6D0", VA = "0x97E6D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012E")]
	public bool IsSkippingWavesAvailable
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x97E6D8", Offset = "0x97E6D8", VA = "0x97E6D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012F")]
	public int WavesToSkipCount
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x97E6E0", Offset = "0x97E6E0", VA = "0x97E6E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000130")]
	public bool IsFastShootingLockAvailable
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x97E6E8", Offset = "0x97E6E8", VA = "0x97E6E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	public override string GameVersion
	{
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x97E6F0", Offset = "0x97E6F0", VA = "0x97E6F0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	public string TournamentPhotonID
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x97E6F8", Offset = "0x97E6F8", VA = "0x97E6F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public AWSEndpointType AWSEndpointType
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x97E700", Offset = "0x97E700", VA = "0x97E700")]
		get
		{
			return default(AWSEndpointType);
		}
	}

	[Token(Token = "0x17000134")]
	public override TextAsset Changelog
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x97E708", Offset = "0x97E708", VA = "0x97E708", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000135")]
	public override Maps Maps
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x97E710", Offset = "0x97E710", VA = "0x97E710", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	public override Quality GameQuality
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x97E718", Offset = "0x97E718", VA = "0x97E718", Slot = "9")]
		get
		{
			return default(Quality);
		}
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x97E720", Offset = "0x97E720", VA = "0x97E720", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public override TargetPlatform CurrentPlatform
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x97E728", Offset = "0x97E728", VA = "0x97E728", Slot = "13")]
		get
		{
			return default(TargetPlatform);
		}
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x97E730", Offset = "0x97E730", VA = "0x97E730", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public override VRSDK VRSDK
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x97E738", Offset = "0x97E738", VA = "0x97E738", Slot = "11")]
		get
		{
			return default(VRSDK);
		}
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x97E740", Offset = "0x97E740", VA = "0x97E740", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public override CloudRegionCode DefaultCloudRegionCode
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x97E748", Offset = "0x97E748", VA = "0x97E748", Slot = "15")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x97E750", Offset = "0x97E750", VA = "0x97E750", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public override bool IsVoiceChatDisabled
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x97E758", Offset = "0x97E758", VA = "0x97E758", Slot = "17")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x97E760", Offset = "0x97E760", VA = "0x97E760", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public override bool IsDiscordLinkDisabled
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x97E76C", Offset = "0x97E76C", VA = "0x97E76C", Slot = "19")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x97E774", Offset = "0x97E774", VA = "0x97E774", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public override bool IsLeaderboardDisabled
	{
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x97E780", Offset = "0x97E780", VA = "0x97E780", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x97E788", Offset = "0x97E788", VA = "0x97E788", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x97E794", Offset = "0x97E794", VA = "0x97E794")]
	public ProjectSettings()
	{
	}
}
[Token(Token = "0x20001D8")]
public struct TouchpadArea
{
	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minAngle;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float maxAngle;
}
[Token(Token = "0x20001D9")]
public class TouchpadSelectController : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	private const int selectionParts = 4;

	[Token(Token = "0x40009C1")]
	private const float requiredDistanceFromCenter = 0.3f;

	[Token(Token = "0x40009C2")]
	private const float maximumAngle = 360f;

	[Token(Token = "0x40009C3")]
	private const int nothingSelectedValue = -1;

	[Token(Token = "0x40009C4")]
	private const float startingAngle = 45f;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchpadArea[] touchpadAreas;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x97E7A4", Offset = "0x97E7A4", VA = "0x97E7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x97E808", Offset = "0x97E808", VA = "0x97E808")]
	public int GetSelectedItemIndex(Vector2 touchpadAxis)
	{
		return default(int);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x97E9F0", Offset = "0x97E9F0", VA = "0x97E9F0")]
	public TouchpadSelectController()
	{
	}
}
[Token(Token = "0x20001DA")]
public class VotedPauseVisualsController : MonoBehaviour
{
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotedPauseController votedPauseController;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject GUIObject;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject votingSuccessObject;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text timerText;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int minutesLeft;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int secondsLeft;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x97EA54", Offset = "0x97EA54", VA = "0x97EA54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x97EBB8", Offset = "0x97EBB8", VA = "0x97EBB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x97ED1C", Offset = "0x97ED1C", VA = "0x97ED1C")]
	private void UpdateActive()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x97ED98", Offset = "0x97ED98", VA = "0x97ED98")]
	private void UpdateTimerText()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x97EF5C", Offset = "0x97EF5C", VA = "0x97EF5C")]
	public VotedPauseVisualsController()
	{
	}
}
[Token(Token = "0x20001DB")]
public class GameInfo : GameInfoCore
{
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isFreeItemsInShop;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool isTournamentBuild;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool IsSpellsTestingBuild;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool isBowSpellsBuild;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IsOrcCaptainEnabled;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool IsEquipmentBonusEnabled;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool isTorsoCoopBuild;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AWSEndpointType awsEndpointType;

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x97EF64", Offset = "0x97EF64", VA = "0x97EF64")]
	public GameInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DC")]
public class GauntletRenderers
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SkinnedMeshRenderer> renderers;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x97EFBC", Offset = "0x97EFBC", VA = "0x97EFBC")]
	public GauntletRenderers()
	{
	}
}
[Token(Token = "0x20001DD")]
public class GoldGiver : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	private const int goldToAdd = 100;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShopController shopController;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x97F044", Offset = "0x97F044", VA = "0x97F044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x97F0CC", Offset = "0x97F0CC", VA = "0x97F0CC")]
	public void GiveGold()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x97F140", Offset = "0x97F140", VA = "0x97F140")]
	public GoldGiver()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ArcheryController : MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool handsActive;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bowHandController;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ArrowHandController arrowHandController;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BowController bowController;

	[Token(Token = "0x1700013D")]
	public bool isArrowAttached
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x97F3B8", Offset = "0x97F3B8", VA = "0x97F3B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public bool IsActive
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x97F3D4", Offset = "0x97F3D4", VA = "0x97F3D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x97F3DC", Offset = "0x97F3DC", VA = "0x97F3DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public bool CanAttachArrow
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x97F4B0", Offset = "0x97F4B0", VA = "0x97F4B0")]
		set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnArrowAttach
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x97F148", Offset = "0x97F148", VA = "0x97F148")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x97F1E4", Offset = "0x97F1E4", VA = "0x97F1E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnArrowDetach
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x97F280", Offset = "0x97F280", VA = "0x97F280")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x97F31C", Offset = "0x97F31C", VA = "0x97F31C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x97F4FC", Offset = "0x97F4FC", VA = "0x97F4FC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x97F664", Offset = "0x97F664", VA = "0x97F664")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x97F7CC", Offset = "0x97F7CC", VA = "0x97F7CC")]
	internal void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x97F7EC", Offset = "0x97F7EC", VA = "0x97F7EC")]
	public ArcheryController()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ArrowHandController : MonoBehaviourPun, IPunObservable, IResetable, ISettable, IHandController
{
	[Token(Token = "0x40009DD")]
	private const float maxDistanceToAttachArrow = 0.1f;

	[Token(Token = "0x40009DE")]
	private const float inputTriggerMinValue = 0.2f;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform handControlller;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform handParent;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform inHandArrowParent;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BowController bow;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource attachedArrowSound;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject arrow;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InputActionReference interactionInput;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isAttachArrowAnimationPlaying;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isDetachArrowAnimationPlaying;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion handDefaultRotation;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handDefaultPosition;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lerpValue;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool canAttachArrow;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isActive;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool isArrowActive;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool isButtonPressed;

	[Token(Token = "0x17000140")]
	public GameObject Arrow
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x97F7F4", Offset = "0x97F7F4", VA = "0x97F7F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x97F7FC", Offset = "0x97F7FC", VA = "0x97F7FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public bool CanAttachArrow
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x97F804", Offset = "0x97F804", VA = "0x97F804")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x97F4E0", Offset = "0x97F4E0", VA = "0x97F4E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public bool IsActive
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x97F82C", Offset = "0x97F82C", VA = "0x97F82C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x97F454", Offset = "0x97F454", VA = "0x97F454")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public bool IsAttachArrowAnimationPlaying
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x97F834", Offset = "0x97F834", VA = "0x97F834")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x97F83C", Offset = "0x97F83C", VA = "0x97F83C")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public bool IsDetachArrowAnimationPlaying
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x97F858", Offset = "0x97F858", VA = "0x97F858")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x97F860", Offset = "0x97F860", VA = "0x97F860")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public bool IsArrowActive
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x97F87C", Offset = "0x97F87C", VA = "0x97F87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x97F884", Offset = "0x97F884", VA = "0x97F884")]
		set
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnArrowAttach
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x97F52C", Offset = "0x97F52C", VA = "0x97F52C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x97F694", Offset = "0x97F694", VA = "0x97F694")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnArrowDetach
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x97F5C8", Offset = "0x97F5C8", VA = "0x97F5C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x97F730", Offset = "0x97F730", VA = "0x97F730")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x97F8C4", Offset = "0x97F8C4", VA = "0x97F8C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x97F91C", Offset = "0x97F91C", VA = "0x97F91C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x97F974", Offset = "0x97F974", VA = "0x97F974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x97FAC0", Offset = "0x97FAC0", VA = "0x97FAC0")]
	private void SetIsButtonPressed(bool isPressed)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x9800B8", Offset = "0x9800B8", VA = "0x9800B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x980268", Offset = "0x980268", VA = "0x980268")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x97F80C", Offset = "0x97F80C", VA = "0x97F80C")]
	private void UpdateArrowIsActive()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x97FD90", Offset = "0x97FD90", VA = "0x97FD90")]
	private bool CanDetachArrow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x980368", Offset = "0x980368", VA = "0x980368", Slot = "7")]
	public VRSDK GetPickingHandPlatformType()
	{
		return default(VRSDK);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x97FB00", Offset = "0x97FB00", VA = "0x97FB00")]
	private void UpdateArrowAttaching()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x97FDCC", Offset = "0x97FDCC", VA = "0x97FDCC")]
	private void UpdateArrowDetaching()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x980068", Offset = "0x980068", VA = "0x980068")]
	private void RotateArrowHandOnBow()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x9803B8", Offset = "0x9803B8", VA = "0x9803B8", Slot = "8")]
	public GameObject GetItemInPickingHand()
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x9803C0", Offset = "0x9803C0", VA = "0x9803C0")]
	public void AttachArrowToBow()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x9804D4", Offset = "0x9804D4", VA = "0x9804D4")]
	public void AttachArrowToHand()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x9805E4", Offset = "0x9805E4", VA = "0x9805E4")]
	public void AttachHandToBow()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x9806B0", Offset = "0x9806B0", VA = "0x9806B0")]
	public void DetachHand()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x980704", Offset = "0x980704", VA = "0x980704", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x98089C", Offset = "0x98089C", VA = "0x98089C", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x9808C4", Offset = "0x9808C4", VA = "0x9808C4", Slot = "6")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x980908", Offset = "0x980908", VA = "0x980908")]
	public ArrowHandController()
	{
	}
}
[Token(Token = "0x20001E0")]
public class ControllersHandsController : MonoBehaviourPun
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightController;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftController;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SteamVR_LaserPointer laserToActivate;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SteamVR_LaserPointer laserToDeactivate;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x17000146")]
	public bool IsActive
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x98091C", Offset = "0x98091C", VA = "0x98091C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x980924", Offset = "0x980924", VA = "0x980924")]
		set
		{
		}
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x980930", Offset = "0x980930", VA = "0x980930")]
	private void SetAppropriateControllersState()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x980958", Offset = "0x980958", VA = "0x980958")]
	private void DisableAllControllers()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x9809B8", Offset = "0x9809B8", VA = "0x9809B8")]
	private void EnableUsedControllers()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x980A28", Offset = "0x980A28", VA = "0x980A28")]
	public ControllersHandsController()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Gesture : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	public enum GestureType
	{
		[Token(Token = "0x40009F9")]
		None,
		[Token(Token = "0x40009FA")]
		Open,
		[Token(Token = "0x40009FB")]
		Point,
		[Token(Token = "0x40009FC")]
		Ok,
		[Token(Token = "0x40009FD")]
		Scissors
	}

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GestureType type;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gestureObject;

	[Token(Token = "0x17000147")]
	public GestureType Type
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x980A30", Offset = "0x980A30", VA = "0x980A30")]
		get
		{
			return default(GestureType);
		}
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x980A38", Offset = "0x980A38", VA = "0x980A38")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x980A58", Offset = "0x980A58", VA = "0x980A58")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x980A78", Offset = "0x980A78", VA = "0x980A78")]
	public Gesture()
	{
	}
}
[Token(Token = "0x20001E3")]
public class GestureHand : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Gesture.GestureType gestureType;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Gesture actualGesture;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSynchronizingGestureType;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private HandSide side;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Gesture> gestures;

	[Token(Token = "0x17000148")]
	public bool IsActive
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x980A80", Offset = "0x980A80", VA = "0x980A80")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public HandSide Side
	{
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x980AA8", Offset = "0x980AA8", VA = "0x980AA8")]
		get
		{
			return default(HandSide);
		}
	}

	[Token(Token = "0x1700014A")]
	public Gesture.GestureType GestureType
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x980AB0", Offset = "0x980AB0", VA = "0x980AB0")]
		get
		{
			return default(Gesture.GestureType);
		}
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x980AB8", Offset = "0x980AB8", VA = "0x980AB8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x980B58", Offset = "0x980B58", VA = "0x980B58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x980C1C", Offset = "0x980C1C", VA = "0x980C1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x980C74", Offset = "0x980C74", VA = "0x980C74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x980CCC", Offset = "0x980CCC", VA = "0x980CCC")]
	private Gesture GetGestureByType(Gesture.GestureType gestureType)
	{
		return null;
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x980DB0", Offset = "0x980DB0", VA = "0x980DB0")]
	private void DeactivateAllGestures()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x980B0C", Offset = "0x980B0C", VA = "0x980B0C")]
	private void AdjustHandsToGestureType()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x980EB8", Offset = "0x980EB8", VA = "0x980EB8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x980F84", Offset = "0x980F84", VA = "0x980F84")]
	public GestureHand()
	{
	}
}
[Token(Token = "0x20001E6")]
public class GesturesController : MonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GestureHand> gestureHands;

	[Token(Token = "0x1700014B")]
	public bool IsActive
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x981040", Offset = "0x981040", VA = "0x981040")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x981048", Offset = "0x981048", VA = "0x981048")]
		set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action OnGesturesDeactivation
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x981228", Offset = "0x981228", VA = "0x981228")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x9812C4", Offset = "0x9812C4", VA = "0x9812C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x981360", Offset = "0x981360", VA = "0x981360")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x981524", Offset = "0x981524", VA = "0x981524")]
	public void SetGesture(HandSide SideOfGestureHandToSet, Gesture.GestureType gestureToSet)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x981744", Offset = "0x981744", VA = "0x981744")]
	public void SetNoGestures()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x981668", Offset = "0x981668", VA = "0x981668")]
	private GestureHand GetGestureHandBySide(HandSide handSide)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x98158C", Offset = "0x98158C", VA = "0x98158C")]
	private GestureHand GetOtherGestureHandBySide(HandSide handSide)
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x98177C", Offset = "0x98177C", VA = "0x98177C")]
	internal void SetOpenGestures()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x9817A4", Offset = "0x9817A4", VA = "0x9817A4")]
	public GesturesController()
	{
	}
}
[Token(Token = "0x20001EB")]
public class HandsController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20001EC")]
	public enum HandsType
	{
		[Token(Token = "0x4000A1C")]
		Controllers,
		[Token(Token = "0x4000A1D")]
		Archery,
		[Token(Token = "0x4000A1E")]
		Gestures
	}

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isInMenu;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GesturesController gesturesController;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GesturesInputController> gestureInputControllers;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ArcheryController archeryController;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ControllersHandsController controllersHandsController;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PickableItemsHandController itemsHandsController;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isGhostly;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HandsType handsTypeToReturnToAfterGestures;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandsType currentHandsType;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isActive;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isHoldingItem;

	[Token(Token = "0x1700014C")]
	public HandsType CurrentHandsType
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x9818D4", Offset = "0x9818D4", VA = "0x9818D4")]
		get
		{
			return default(HandsType);
		}
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x9818DC", Offset = "0x9818DC", VA = "0x9818DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public bool IsActive
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x981A14", Offset = "0x981A14", VA = "0x981A14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x981A1C", Offset = "0x981A1C", VA = "0x981A1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public bool IsHoldingItem
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x981AB4", Offset = "0x981AB4", VA = "0x981AB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x981ABC", Offset = "0x981ABC", VA = "0x981ABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x981B14", Offset = "0x981B14", VA = "0x981B14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x981B6C", Offset = "0x981B6C", VA = "0x981B6C")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x981DCC", Offset = "0x981DCC", VA = "0x981DCC")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x981F88", Offset = "0x981F88", VA = "0x981F88")]
	private void OnArrowDetach()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x981FA8", Offset = "0x981FA8", VA = "0x981FA8")]
	private void OnArrowAttach()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x981FC4", Offset = "0x981FC4", VA = "0x981FC4")]
	private void OnTorchRelease()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x981FF0", Offset = "0x981FF0", VA = "0x981FF0")]
	private void OnTorchCatch()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x982020", Offset = "0x982020", VA = "0x982020")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x9818F0", Offset = "0x9818F0", VA = "0x9818F0")]
	private void AdjustHandsToState(HandsType handsState)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x982124", Offset = "0x982124", VA = "0x982124")]
	private void AdjustHandsBasedOnProperties(HandsType handsState)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x9822FC", Offset = "0x9822FC", VA = "0x9822FC")]
	private void TryToSetReturningGestureToOpen()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x98241C", Offset = "0x98241C", VA = "0x98241C")]
	private void OnGesturesDeactivation()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x982464", Offset = "0x982464", VA = "0x982464")]
	private void OnSetGestureInputted(HandSide handSide, Gesture.GestureType gestureType)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x9824F8", Offset = "0x9824F8", VA = "0x9824F8")]
	internal void SetNoGestures()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x98252C", Offset = "0x98252C", VA = "0x98252C")]
	internal void SetOpenGestures()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x982560", Offset = "0x982560", VA = "0x982560", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x982630", Offset = "0x982630", VA = "0x982630")]
	private void TryToSynchronizeData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x9827F4", Offset = "0x9827F4", VA = "0x9827F4")]
	public HandsController()
	{
	}
}
[Token(Token = "0x20001EE")]
public class HandsDominanceSwitcher : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20001EF")]
	public enum HandsDominanceType
	{
		[Token(Token = "0x4000A28")]
		Right,
		[Token(Token = "0x4000A29")]
		Left
	}

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDominanceLoadedFromSettings;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HandsController rightHandedHandsController;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HandsController leftHandedHandsController;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandsDominanceType handsDominance;

	[Token(Token = "0x1700014F")]
	public HandsDominanceType HandsDominance
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x982A7C", Offset = "0x982A7C", VA = "0x982A7C")]
		get
		{
			return default(HandsDominanceType);
		}
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x982B84", Offset = "0x982B84", VA = "0x982B84")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public HandsController HandsController
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x982BE8", Offset = "0x982BE8", VA = "0x982BE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x982C10", Offset = "0x982C10", VA = "0x982C10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x982C68", Offset = "0x982C68", VA = "0x982C68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x982CC0", Offset = "0x982CC0", VA = "0x982CC0")]
	public void InitializeWithPlayer(bool isLocalPlayer)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x982EF8", Offset = "0x982EF8", VA = "0x982EF8")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x982F04", Offset = "0x982F04", VA = "0x982F04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x982AC0", Offset = "0x982AC0", VA = "0x982AC0")]
	private void OnHandDominanceSettingChange()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x982B8C", Offset = "0x982B8C", VA = "0x982B8C")]
	private void AdjustHandsToDominance()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x983114", Offset = "0x983114", VA = "0x983114", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x9831E8", Offset = "0x9831E8", VA = "0x9831E8")]
	public HandsDominanceSwitcher()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MenuHand : MonoBehaviour
{
	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject controllerModelObject;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject laserObject;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hand;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GestureHand gestureHand;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandPickUpController handPickUpController;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x9831F0", Offset = "0x9831F0", VA = "0x9831F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x983354", Offset = "0x983354", VA = "0x983354")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x9834B8", Offset = "0x9834B8", VA = "0x9834B8")]
	public void ShowController(bool isActive)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x9834FC", Offset = "0x9834FC", VA = "0x9834FC")]
	public void ShowHand(bool isActive)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x983590", Offset = "0x983590", VA = "0x983590")]
	public void ShowGesture(Gesture.GestureType gestureType)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x9835E4", Offset = "0x9835E4", VA = "0x9835E4")]
	public void HideGestures()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x98361C", Offset = "0x98361C", VA = "0x98361C")]
	private void ShowOpenHand()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x983624", Offset = "0x983624", VA = "0x983624")]
	public MenuHand()
	{
	}
}
[Token(Token = "0x20001F1")]
public class MenuHandsController : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	private const float picoHandsRotationOffset = 15f;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rightHandedRightHand;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHandedLeftHand;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SteamVR_MenuLaserPointer rightHandedPointer;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject leftHandedLeftHand;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject leftHandedRightHand;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SteamVR_MenuLaserPointer leftHandedPointer;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform leftHandRotationOffsetter;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform rightHandRotationOffsetter;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 leftHandPicoPositionOffset;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Vector3 rightHandPicoPositionOffset;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 farAway;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x98362C", Offset = "0x98362C", VA = "0x98362C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x9839C0", Offset = "0x9839C0", VA = "0x9839C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x983AEC", Offset = "0x983AEC", VA = "0x983AEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x983C18", Offset = "0x983C18", VA = "0x983C18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x983D20", Offset = "0x983D20", VA = "0x983D20")]
	private void OnAreKnucklesConnectedChanged(bool areKnucklesConnected)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x98373C", Offset = "0x98373C", VA = "0x98373C")]
	private void AdjustHandsToDominance()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x983D24", Offset = "0x983D24", VA = "0x983D24")]
	public MenuHandsController()
	{
	}
}
[Token(Token = "0x20001F2")]
public class HelmetActivator : MonoBehaviour
{
	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x983D3C", Offset = "0x983D3C", VA = "0x983D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x983DF4", Offset = "0x983DF4", VA = "0x983DF4")]
	public HelmetActivator()
	{
	}
}
[Token(Token = "0x20001F3")]
public class IceFragmentController : MonoBehaviour
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayFromStartingToVanishInSeconds;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeOfVanishing;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeFromStart;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 initialScale;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider collider;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool destroyedPhysicsComponentAlready;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool areInitialParametersSet;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x983DFC", Offset = "0x983DFC", VA = "0x983DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x983EC4", Offset = "0x983EC4", VA = "0x983EC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x984024", Offset = "0x984024", VA = "0x984024")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x9842B8", Offset = "0x9842B8", VA = "0x9842B8")]
	public IceFragmentController()
	{
	}
}
[Token(Token = "0x20001F4")]
public class InitGameInfo : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectSettings _projectSettingsSetter;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x9842C0", Offset = "0x9842C0", VA = "0x9842C0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x984794", Offset = "0x984794", VA = "0x984794")]
	private bool WasArcadeBuildSetViaParams()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x9847EC", Offset = "0x9847EC", VA = "0x9847EC")]
	public InitGameInfo()
	{
	}
}
[Token(Token = "0x20001F5")]
public class IntervalFPSData
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int displayInterval;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fpsSum;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int framesCount;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float averageFps;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x9847F4", Offset = "0x9847F4", VA = "0x9847F4")]
	public IntervalFPSData(int displayInterval, string description)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x984838", Offset = "0x984838", VA = "0x984838")]
	public void ResetFPSData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F6")]
public class BonusTranslation
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ItemBonusType itemBonusType;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	[SerializeField]
	private string bonusNameEn;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[TextArea]
	private string bonusNameKr;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[TextArea]
	private string bonusNameZn;

	[Token(Token = "0x17000151")]
	public ItemBonusType ItemBonusType
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x984844", Offset = "0x984844", VA = "0x984844")]
		get
		{
			return default(ItemBonusType);
		}
	}

	[Token(Token = "0x17000152")]
	public string BonusName
	{
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x98484C", Offset = "0x98484C", VA = "0x98484C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x9849BC", Offset = "0x9849BC", VA = "0x9849BC")]
	public BonusTranslation()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F7")]
public class BonusTypeWithFormatter
{
	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemBonusType ItemBonusType;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[RequireInterface(typeof(IBonusStringFormatter))]
	[SerializeField]
	private UnityEngine.Object _bonusFormatter;

	[Token(Token = "0x17000153")]
	public IBonusStringFormatter BonusFormatter
	{
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x9849C4", Offset = "0x9849C4", VA = "0x9849C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x984A0C", Offset = "0x984A0C", VA = "0x984A0C")]
	public BonusTypeWithFormatter()
	{
	}
}
[Token(Token = "0x20001F8")]
public interface IBonusStringFormatter
{
	[Token(Token = "0x6000B08")]
	string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation);
}
[Serializable]
[Token(Token = "0x20001F9")]
public class ItemBonus
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemBonusType ItemBonusType;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(1f, 100f)]
	public int Chance;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Multiplier;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AbilityType abilityType;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x984A14", Offset = "0x984A14", VA = "0x984A14")]
	public ItemBonus()
	{
	}
}
[Token(Token = "0x20001FA")]
[CreateAssetMenu(fileName = "ItemWithBonuses", menuName = "Item bonuses/Item with bonuses list")]
public class ItemsWithBonuses : ScriptableObject
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ItemWithBonuses> ItemsWithBonusesList;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BonusTranslation> BonusTranslations;

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x984A24", Offset = "0x984A24", VA = "0x984A24")]
	public ItemsWithBonuses()
	{
	}
}
[Token(Token = "0x20001FB")]
[CreateAssetMenu(fileName = "NewItemWithBonuses", menuName = "Item bonuses/Item with bonuses")]
public class ItemWithBonuses : ScriptableObject
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ItemBonus> itemBonuses;

	[Token(Token = "0x17000154")]
	public EquipmentItemKey EquipmentItemKey
	{
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x984A2C", Offset = "0x984A2C", VA = "0x984A2C")]
		get
		{
			return default(EquipmentItemKey);
		}
	}

	[Token(Token = "0x17000155")]
	public List<ItemBonus> ItemBonuses
	{
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x984A34", Offset = "0x984A34", VA = "0x984A34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x984A3C", Offset = "0x984A3C", VA = "0x984A3C")]
	public ItemWithBonuses()
	{
	}
}
[Token(Token = "0x20001FC")]
public class SpellCastBonusFormatter : MonoBehaviour, IBonusStringFormatter
{
	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x984A44", Offset = "0x984A44", VA = "0x984A44", Slot = "4")]
	public string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation)
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x984ACC", Offset = "0x984ACC", VA = "0x984ACC")]
	private string GetLocalizedSpellName(AbilityType ability)
	{
		return null;
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x984D1C", Offset = "0x984D1C", VA = "0x984D1C")]
	public SpellCastBonusFormatter()
	{
	}
}
[Token(Token = "0x20001FE")]
public class StandardBonusFormatter : MonoBehaviour, IBonusStringFormatter
{
	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x984D58", Offset = "0x984D58", VA = "0x984D58", Slot = "4")]
	public string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation)
	{
		return null;
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x984DC4", Offset = "0x984DC4", VA = "0x984DC4")]
	public StandardBonusFormatter()
	{
	}
}
[Token(Token = "0x20001FF")]
public class LeaderboardsWindowWSController : WindowController
{
	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalLeaderboardView localLeaderboardView;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRParkLeaderboardViewController vRParkLeaderboardViewController;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x984DCC", Offset = "0x984DCC", VA = "0x984DCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x984FF0", Offset = "0x984FF0", VA = "0x984FF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x985190", Offset = "0x985190", VA = "0x985190")]
	public void OnBack()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x984F64", Offset = "0x984F64", VA = "0x984F64")]
	private void ShowLeaderboards()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x985210", Offset = "0x985210", VA = "0x985210")]
	private void ShowArcadeLeaderboards()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x985428", Offset = "0x985428", VA = "0x985428")]
	private void ShowLeaderboards(VRParkLeaderboardEntriesResponseDTO entries)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x985444", Offset = "0x985444", VA = "0x985444")]
	public LeaderboardsWindowWSController()
	{
	}
}
[Token(Token = "0x2000200")]
public class LeaderboardViewController : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	[CompilerGenerated]
	private sealed class <SaveScore>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isForcingScoreUpdate;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x9863A0", Offset = "0x9863A0", VA = "0x9863A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x9863E8", Offset = "0x9863E8", VA = "0x9863E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x985824", Offset = "0x985824", VA = "0x985824")]
		[DebuggerHidden]
		public <SaveScore>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x986314", Offset = "0x986314", VA = "0x986314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x986318", Offset = "0x986318", VA = "0x986318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x9863A8", Offset = "0x9863A8", VA = "0x9863A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[CompilerGenerated]
	private sealed class <SaveScore>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x98644C", Offset = "0x98644C", VA = "0x98644C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x986494", Offset = "0x986494", VA = "0x986494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x98584C", Offset = "0x98584C", VA = "0x98584C")]
		[DebuggerHidden]
		public <SaveScore>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x9863F0", Offset = "0x9863F0", VA = "0x9863F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x9863F4", Offset = "0x9863F4", VA = "0x9863F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x986454", Offset = "0x986454", VA = "0x986454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[CompilerGenerated]
	private sealed class <UpdateLeaderboard>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x98654C", Offset = "0x98654C", VA = "0x98654C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x986594", Offset = "0x986594", VA = "0x986594", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x985874", Offset = "0x985874", VA = "0x985874")]
		[DebuggerHidden]
		public <UpdateLeaderboard>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x98649C", Offset = "0x98649C", VA = "0x98649C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x9864A0", Offset = "0x9864A0", VA = "0x9864A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x986554", Offset = "0x986554", VA = "0x986554", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamLeaderboardsController steamLeaderboardsController;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OculusLeaderboardsController oculusLeaderboardsController;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerStatistics playerStatistics;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EntryView[] GlobalTop;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EntryView[] PlayerAround;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isTournamentLeaderbord;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TournamentTopPlayerSpot[] GlobalTopTournament;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TournamentTopPlayerSpot[] PlayerAroundTournament;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GlobalTopLeaderboard;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PlayerAroundLeaderboard;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject loadingIndicator;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject noTournamentLeaderboardIndicator;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsLeaderboardFound;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int entryCount;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform Top10LeaderboardPosition;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ViveportInGameLeaderboardsController viveportLeaderboardsController;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isLeaderboardLoading;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool shouldDisplayPlayerAroundLeaderboard;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool getRequestingGlobalTop;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool getRequesingPlayerAround;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 globalTopLeaderboardInitialLocalPosition;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string leaderboardPlayerName;

	[Token(Token = "0x17000156")]
	public bool IsLeaderboardLoading
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x98544C", Offset = "0x98544C", VA = "0x98544C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x985454", Offset = "0x985454", VA = "0x985454")]
		set
		{
		}
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x985634", Offset = "0x985634", VA = "0x985634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x9856CC", Offset = "0x9856CC", VA = "0x9856CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x9856D8", Offset = "0x9856D8", VA = "0x9856D8")]
	public void SetLeaderboardEntry(bool isForcingScoreUpdate)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x985784", Offset = "0x985784", VA = "0x985784")]
	public void SetLeaderboardEntry(int score, bool isForcingScoreUpdate)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x98581C", Offset = "0x98581C", VA = "0x98581C")]
	private void SetLeaderboardPlayerName(string leaderboardPlayerName)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x9856FC", Offset = "0x9856FC", VA = "0x9856FC")]
	[IteratorStateMachine(typeof(<SaveScore>d__30))]
	private IEnumerator SaveScore(bool isForcingScoreUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x9857A8", Offset = "0x9857A8", VA = "0x9857A8")]
	[IteratorStateMachine(typeof(<SaveScore>d__31))]
	private IEnumerator SaveScore(int score, bool isForcingScoreUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x9853B4", Offset = "0x9853B4", VA = "0x9853B4")]
	[IteratorStateMachine(typeof(<UpdateLeaderboard>d__32))]
	public IEnumerator UpdateLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x98589C", Offset = "0x98589C", VA = "0x98589C")]
	public void UpdateLeaderboardTable(List<LeaderboardEntry> leaderboardEntries, LeaderboardRequestState leaderboardType)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x98611C", Offset = "0x98611C", VA = "0x98611C")]
	private AWSTournamentLeaderboardEntryDTO ConvertToTournamentEntry(LeaderboardEntry entry)
	{
		return null;
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x9862BC", Offset = "0x9862BC", VA = "0x9862BC")]
	private void TryDisplayingLeaderboard()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x9862FC", Offset = "0x9862FC", VA = "0x9862FC")]
	public void NoPlayerEntryInLeaderboard()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x9862DC", Offset = "0x9862DC", VA = "0x9862DC")]
	private bool ShouldDisplayLeaderboard()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x9860F8", Offset = "0x9860F8", VA = "0x9860F8")]
	private bool IsLocalPlayersEntry(LeaderboardEntry entry)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x98567C", Offset = "0x98567C", VA = "0x98567C")]
	private static string GetLeaderboardPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x986304", Offset = "0x986304", VA = "0x986304")]
	public LeaderboardViewController()
	{
	}
}
[Token(Token = "0x2000205")]
public class OculusLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	private const int userIsNotRankedErrorCode = 12074;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string leaderboardAPIName;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x986654", Offset = "0x986654", VA = "0x986654")]
	public OculusLeaderboardsController()
	{
	}
}
[Token(Token = "0x2000206")]
public class SteamLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x98665C", Offset = "0x98665C", VA = "0x98665C")]
	public SteamLeaderboardsController()
	{
	}
}
[Token(Token = "0x2000207")]
public class UpdateLeaderboards : MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x986664", Offset = "0x986664", VA = "0x986664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x98675C", Offset = "0x98675C", VA = "0x98675C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x986854", Offset = "0x986854", VA = "0x986854")]
	private void SaveResult()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x986958", Offset = "0x986958", VA = "0x986958")]
	private void SaveToArcadeLeaderboards()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x986AC4", Offset = "0x986AC4", VA = "0x986AC4")]
	public UpdateLeaderboards()
	{
	}
}
[Token(Token = "0x2000208")]
public class LeaderboardsLocalViveportSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SteamLeaderboardsController steamLeaderboardsController;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ViveportInGameLeaderboardsController vivePortLeaderboardsController;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalLeaderboardView localLeaderboardView;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x986ACC", Offset = "0x986ACC", VA = "0x986ACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x986BE8", Offset = "0x986BE8", VA = "0x986BE8")]
	public LeaderboardsLocalViveportSwitcher()
	{
	}
}
[Token(Token = "0x2000209")]
public class ViveportInGameLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x986BF0", Offset = "0x986BF0", VA = "0x986BF0")]
	public ViveportInGameLeaderboardsController()
	{
	}
}
[Token(Token = "0x200020A")]
public class VRParkLeaderboardTester : MonoBehaviour
{
	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x986BF8", Offset = "0x986BF8", VA = "0x986BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x987104", Offset = "0x987104", VA = "0x987104")]
	public VRParkLeaderboardTester()
	{
	}
}
[Token(Token = "0x200020B")]
public class LightAnimation : MonoBehaviour
{
	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve lightIntenseCurve;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_DefaultIntensity;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool disableOnAnimEnd;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool m_LoopAnimation;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lightIntenseAnimTime;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delay;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_Light;

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x98710C", Offset = "0x98710C", VA = "0x98710C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x9871C0", Offset = "0x9871C0", VA = "0x9871C0")]
	private void Activate()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x9871E0", Offset = "0x9871E0", VA = "0x9871E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x987394", Offset = "0x987394", VA = "0x987394")]
	public LightAnimation()
	{
	}
}
[Token(Token = "0x200020C")]
public class LightLerp : MonoBehaviour
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpRadius;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpSpeed;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float changingLightValue;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minimumLight;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maximumLight;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startIntensity;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 minimum;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 maximum;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPositions;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x98739C", Offset = "0x98739C", VA = "0x98739C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x9874C8", Offset = "0x9874C8", VA = "0x9874C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x987448", Offset = "0x987448", VA = "0x987448")]
	private void randomNewPositions()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x987694", Offset = "0x987694", VA = "0x987694")]
	public LightLerp()
	{
	}
}
[Token(Token = "0x200020D")]
public class LoadedSceneLogger : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasBeenInitialized;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x9876B4", Offset = "0x9876B4", VA = "0x9876B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x987818", Offset = "0x987818", VA = "0x987818")]
	private void LogLoadedScene(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x9878D0", Offset = "0x9878D0", VA = "0x9878D0")]
	public LoadedSceneLogger()
	{
	}
}
[Token(Token = "0x200020E")]
public class LanguageChanger : LanguageChangerCore
{
	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Translation translationEn;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Translation translationKR;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Translation translationZh;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TranslationCore _translationCoreEn;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TranslationCore _translationCoreKR;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TranslationCore _translationCoreZh;

	[Token(Token = "0x1700015D")]
	protected override TranslationCore translationCoreEn
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x9878D8", Offset = "0x9878D8", VA = "0x9878D8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	[SerializeField]
	protected override TranslationCore translationCoreKr
	{
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x9878E0", Offset = "0x9878E0", VA = "0x9878E0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	[SerializeField]
	protected override TranslationCore translationCoreZh
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x9878E8", Offset = "0x9878E8", VA = "0x9878E8", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x9878F0", Offset = "0x9878F0", VA = "0x9878F0", Slot = "7")]
	public override void ChangeLanguage(string lang)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x987A14", Offset = "0x987A14", VA = "0x987A14")]
	protected void Translate(TranslationCore coreTranslation, Translation translation)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x98868C", Offset = "0x98868C", VA = "0x98868C")]
	public LanguageChanger()
	{
	}
}
[Token(Token = "0x200020F")]
public static class LocalizedStringsEA
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string lbEvaluationWarning;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string adjDark;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string adjElven;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string adjFire;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string adjFrozen;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string adjGolden;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string adjSilver;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string adjBrave;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string adjForest;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string adjGlorious;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string adjHoly;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string adjSwift;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string adjMythical;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string adjFearless;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string nounArrow;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string nounThunder;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string nounKnight;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string nounPaladin;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string nounWarrior;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string nounWizard;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string nounArcher;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string nounAssassin;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string nounGuardian;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string nounDefender;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string nounBow;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string nounHero;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string nounChampion;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string lbDefendElvenTown;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string lbSupportHumanVillage;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string lbSupportHumanCastle;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string lbDefendAncientTemple;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static string lbDefendBay;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string lbWinterMountains;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string lbDefendLastStronghold;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static string lbEscortTheDwarves;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static string lbEscortTheCarriage;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static string lbWinterMountainsDeathmatch;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static string lbBow_WoodenBow_Default;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string lbBow_SteelDefender;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static string lbBow_NaturesCall;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static string lbBow_BowOfAlliance;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static string lbHelmet_Barbuta_default;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static string lbHelmet_ArchersHelmet;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static string lbHelmet_GiftOfTheSea;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static string lbHelmet_HelmetOfAncestors;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static string lbHelmet_GriffinHelmet;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static string lbSet_ForestGuardian;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static string lbSet_OrcHunter;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static string lbSet_HolySet;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static string lbSet_FrozenTouch;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static string dspBow_WoodenBow_Default;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static string dspBow_SteelDefender;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static string dspBow_NaturesCall;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static string dspBow_BowOfAlliance;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static string dspHelmet_Barbuta_default;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static string dspHelmet_ArchersHelmet;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static string dspHelmet_GiftOfTheSea;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static string dspHelmet_HelmetOfAncestors;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static string dspHelmet_GriffinHelmet;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static string dspSet_ForestGuardian;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static string dspSet_OrcHunter;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static string dspSet_HolySet;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static string dspSet_FrozenTouch;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static string lbMenu;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static string lbSpells;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static string btFire;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static string btIce;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static string lbSpellPoints;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static string lbCooldown;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static string lbLevelNeededToUpgrade;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static string btReset;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static string lbResetWindowTitle;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static string btLearn;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public static string lbSpellSelectionTitle;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static string lbHowToUseSpellsTitle;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public static string lbHowToUseSpellsDescription;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static string lbYouNeedMoreSpellsPoints;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public static string lbMaxLevel;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static string txtHigherLevelNeeded;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static string txtSpellPointNeeded;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static string txtPreviousSpellsRequired;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public static string txtMaxLevelReached;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static string txtYouHaveToLearnIt;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public static string lbFireArrow;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static string lbFireClaws;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public static string lbArrowRain;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static string lbExplosion;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public static string lbMeteorShower;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static string lbFreezingArrow;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public static string lbIceShield;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static string lbIceBolt;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public static string lbIceRevive;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static string lbIcePiercingArrow;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public static string lbFreezeStorm;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static string dspFireArrow;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public static string dspFireClaws;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public static string dspArrowRain;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public static string dspExplosion;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public static string dspMeteorShower;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public static string dspFreezingArrow;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public static string dspIceShield;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public static string dspIceBolt;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public static string dspIceRevive;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public static string dspIcePiercingArrow;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public static string dspFreezeStorm;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public static string lbHeadText;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public static string lbBlowText;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public static string lbBlowTextWands;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public static string lbHornWasUsedText;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public static string lbMicrophoneNotConnectedText;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public static string dspGameEndedDisconnectionMessage;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public static string dspRejoinMainMenuCanvas;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public static string dspRejoinSmallMainMenuCanvas;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public static string lbElvenTownHealth;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public static string lbHumanVillageHealth;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public static string lbHumanCastleHealth;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public static string lbTempleHealth;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public static string lbAxeDodgedUsingBonus;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public static string lbYourElvenTownHasFallen;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public static string lbTheHumanVillageHasFallen;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public static string lbTheHumanCastleHasFallen;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public static string lbAncientTempleHasFallen;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public static string lbYouWereKilledByOrcWarrior_WaitForNextWave;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public static string lbYouWereKilledByDragon_WaitForNextWave;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public static string lbYouWereKilledByTroll_WaitForNextWave;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public static string txtRpgElementsTitle;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public static string txtRpgElementsText;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public static string btRpg;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public static string lbWithSpells;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public static string lbWithoutSpells;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public static string lbArrowHandOffset;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public static string btSpells;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public static string lbPlayAreaWarningDescription;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public static string txtTouchTrackingText;
}
[Token(Token = "0x2000210")]
public class ArcadeOwnerSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text VRParkVersion;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OldLeaderboards;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Server;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Global;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Local;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text LocalInactive;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Setup;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SetupOutline;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Language;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text UseDefaultServer;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text EU;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text EUDisabled;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text Asia;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text AsiaDisabled;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text US;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text USDisabled;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text Back;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text BackOutline;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text OtherSettings;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text EnableBlood;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text AutoJoin;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text AutoJoinShaded;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text AutoJoinMessage;

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x988694", Offset = "0x988694", VA = "0x988694", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x988B3C", Offset = "0x988B3C", VA = "0x988B3C")]
	public ArcadeOwnerSettingsLocalizer()
	{
	}
}
[Token(Token = "0x2000211")]
public class ArcadeSettingsLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x988B44", Offset = "0x988B44", VA = "0x988B44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x988B48", Offset = "0x988B48", VA = "0x988B48")]
	public ArcadeSettingsLocalizer()
	{
	}
}
[Token(Token = "0x2000212")]
public class AskForConfirmationLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text AreYouSureYouWantToQuit;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Yes;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YesOutline;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text No;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NoOutline;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x988B50", Offset = "0x988B50", VA = "0x988B50", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x988C6C", Offset = "0x988C6C", VA = "0x988C6C")]
	public AskForConfirmationLocalizer()
	{
	}
}
[Token(Token = "0x2000213")]
public class ChangelogInitilizer : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChangelogController changelogController;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x988C74", Offset = "0x988C74", VA = "0x988C74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x988C90", Offset = "0x988C90", VA = "0x988C90")]
	public ChangelogInitilizer()
	{
	}
}
[Token(Token = "0x2000214")]
public class ChangelogWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Close;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CloseOutline;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Next;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NextOutline;

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x988C98", Offset = "0x988C98", VA = "0x988C98", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x988D8C", Offset = "0x988D8C", VA = "0x988D8C")]
	public ChangelogWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000215")]
public class ChoosePlayerNameLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseName;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ToAppearInPublicLeaderboards;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YourName;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Generate;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text GenerateOutline;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Continue;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x988D94", Offset = "0x988D94", VA = "0x988D94", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x988F5C", Offset = "0x988F5C", VA = "0x988F5C")]
	public ChoosePlayerNameLocalizer()
	{
	}
}
[Token(Token = "0x2000216")]
public class ConfirmationQuitWindowTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ConfirmationQuitText;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Yes;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YesOutline;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text No;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NoOutline;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x988F64", Offset = "0x988F64", VA = "0x988F64", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x989058", Offset = "0x989058", VA = "0x989058")]
	public ConfirmationQuitWindowTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000217")]
public class ConnectingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Connecting;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text NoInternet;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Back;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text BackOutline;

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x989060", Offset = "0x989060", VA = "0x989060", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x989130", Offset = "0x989130", VA = "0x989130")]
	public ConnectingLocalizer()
	{
	}
}
[Token(Token = "0x2000218")]
public class ControllerTrackingWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Text;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Continue;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x989138", Offset = "0x989138", VA = "0x989138", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x98921C", Offset = "0x98921C", VA = "0x98921C")]
	public ControllerTrackingWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000219")]
public class ControlsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Mandatory to fill in every control schema")]
	public Text Gestures;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Menu_Pause;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Multiplayer1;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Multiplayer2;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PullString;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text SpeakOn;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Additional, for controls schemas with more labels")]
	public Text Gestures2;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Multiplayer3;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Multiplayer4;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text SpeakOn2;

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x989224", Offset = "0x989224", VA = "0x989224", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x989488", Offset = "0x989488", VA = "0x989488")]
	public ControlsLocalizer()
	{
	}
}
[Token(Token = "0x200021A")]
public class ControlsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFirstTimeWindow;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Controls;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ControlsShadow;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ShootAtToTeleport;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text KoreanShootAtToTeleport;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Button;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ButtonOutline;

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x989490", Offset = "0x989490", VA = "0x989490", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x9896E4", Offset = "0x9896E4", VA = "0x9896E4")]
	public ControlsWindowLocalizer()
	{
	}
}
[Token(Token = "0x200021B")]
public class CreateGameLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text SelectMap;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text CoOp;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text DefendElvenTown;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SupportHumanVillage;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SupportHumanCastle;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text DefendRuins;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text defendBay;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text winterMountains;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text defendLastStronghold;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text escortTheDwarves;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text escortTheCarriage;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text PvP;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Deathmatch;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text winterMountainsDeathmatch;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text Create;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text CreateOutline;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x9896EC", Offset = "0x9896EC", VA = "0x9896EC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x9899C8", Offset = "0x9899C8", VA = "0x9899C8")]
	public CreateGameLocalizer()
	{
	}
}
[Token(Token = "0x200021C")]
public class CreatingWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Back;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text BackOutline;

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x9899D0", Offset = "0x9899D0", VA = "0x9899D0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x989A58", Offset = "0x989A58", VA = "0x989A58")]
	public CreatingWindowLocalizer()
	{
	}
}
[Token(Token = "0x200021D")]
public class DisconnectionWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ProblemWithConnection;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x989A60", Offset = "0x989A60", VA = "0x989A60", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x989B0C", Offset = "0x989B0C", VA = "0x989B0C")]
	public DisconnectionWindowLocalizer()
	{
	}
}
[Token(Token = "0x200021E")]
public class EarlyAccessWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text EarlyAccessText;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x989B14", Offset = "0x989B14", VA = "0x989B14", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x989BC0", Offset = "0x989BC0", VA = "0x989BC0")]
	public EarlyAccessWindowLocalizer()
	{
	}
}
[Token(Token = "0x200021F")]
public class EvaluationVersionWarningLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Error;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x989BC8", Offset = "0x989BC8", VA = "0x989BC8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x989C2C", Offset = "0x989C2C", VA = "0x989C2C")]
	public EvaluationVersionWarningLocalizer()
	{
	}
}
[Token(Token = "0x2000220")]
public class GameOverMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text GameOver;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text YourTownHasFallen;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Wave;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Points;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Gold;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Leaderboards;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text LeaderboardsOutline;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Settings;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SettingsOutline;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Quit;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text QuitOutline;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Restart;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text RestartOutline;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x989C34", Offset = "0x989C34", VA = "0x989C34", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x989F80", Offset = "0x989F80", VA = "0x989F80")]
	public GameOverMenuLocalizer()
	{
	}
}
[Token(Token = "0x2000221")]
public class ItemsDescriptionLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x989F88", Offset = "0x989F88", VA = "0x989F88")]
	public static string GetItemDescription(EquipmentItemKey itemKey)
	{
		return null;
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x98A00C", Offset = "0x98A00C", VA = "0x98A00C")]
	public static string GetItemName(EquipmentItemKey itemKey)
	{
		return null;
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x98A090", Offset = "0x98A090", VA = "0x98A090")]
	public ItemsDescriptionLocalizer()
	{
	}
}
[Token(Token = "0x2000222")]
public class LeaderboardsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Leaderboards;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Loading;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text BestArchers;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text VRParkBestArchers;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text VRParkBestArchersName;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text VRParkBestArchersWave;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text VRParkBestArchersScore;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text CurrentRivals;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text VRParkCurrentRivals;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text VRParkCurrentRivalsName;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text VRParkCurrentRivalsWave;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text VRParkCurrentRivalsScore;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text BackMenu;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text BackMenuOutline;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x98A098", Offset = "0x98A098", VA = "0x98A098", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x98A2E4", Offset = "0x98A2E4", VA = "0x98A2E4")]
	public LeaderboardsWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000223")]
public class LobbyColumnHeadersLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text nameHeader;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text mapHeader;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text playersHeader;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text stateHeader;

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x98A2EC", Offset = "0x98A2EC", VA = "0x98A2EC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x98A3BC", Offset = "0x98A3BC", VA = "0x98A3BC")]
	public LobbyColumnHeadersLocalizer()
	{
	}
}
[Token(Token = "0x2000224")]
public class LobbyWithoutTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Lobby;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text LobbyShadow;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Refresh;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text RefreshOutline;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Back;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text BackOutline;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Create;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text CreateOutline;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text RefreshingServers;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x98A3C4", Offset = "0x98A3C4", VA = "0x98A3C4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x98A548", Offset = "0x98A548", VA = "0x98A548")]
	public LobbyWithoutTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000225")]
public class LobbyWithTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Connecting;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ConnectingBack;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ConnectingBackOutline;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text LobbyTitle;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text LobbyTitleShadow;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text LobbyTitleOutline;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Refresh;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text RefreshOutline;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Refreshing;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text LobbyBack;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text LobbyBackOutline;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Create;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CreateOutline;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text TournamentTitle;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text TournamentTitleShadow;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text TournamentTitleOutline;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text DisclaimerTitle;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text DisclaimerTitleShadow;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text Disclaimer;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text DisclaimerLinkOutline;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text Agreement;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text MustAgree;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text DisclaimerBack;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text DisclaimerBackOutline;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text Continue;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text ContinueOutline;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text TournamentBack;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text TournamentBackOutline;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text Join;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text JoinOutline;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text EnrollmentBack;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text EnrollmentBackOutline;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text TopPlayersLastTournament;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text BestArchers;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text BestArchersShadow;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text BestArchersLastTournament;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text BestArchersRank;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text BestArchersName;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text BestArchersStage;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text BestArchersKills;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text BestArchersDeaths;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text BestArchersStatus;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text YourRivals;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text YourRivalsShadow;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text YourRivalsLastTournament;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text YourRivalsRank;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text YourRivalsName;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text YourRivalsStage;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Text YourRivalsKills;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Text YourRivalsDeaths;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Text YourRivalsStatus;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Text LoadingLeaderboard;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text NoResultsYet;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Text LoadingError;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x98A550", Offset = "0x98A550", VA = "0x98A550", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x98B024", Offset = "0x98B024", VA = "0x98B024")]
	public LobbyWithTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000226")]
public class MainMenuSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Buttons")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Arcade")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text ArcadeMultiplayer;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text ArcadeVoiceChat;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text ArcadeAlwaysSpeak;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text ArcadePrivacy;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text ArcadeLimitUserTracking;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text ArcadeOpenDataPrivacyPage;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text ArcadeOpenDataPrivacyPageOutline;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text ArcadeOwnerSettings;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text ArcadeOwnerSettingsOutline;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Non Arcade")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Text snapTurn;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Text VoiceChat;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Text AlwaysSpeak;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Text Privacy;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Text LimitUserTracking;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Text OpenDataPrivacyPage;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Text OpenDataPrivacyPageOutline;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Text language;

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x98B02C", Offset = "0x98B02C", VA = "0x98B02C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x98B5CC", Offset = "0x98B5CC", VA = "0x98B5CC")]
	public MainMenuSettingsLocalizer()
	{
	}
}
[Token(Token = "0x2000227")]
public class MainWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text menuInactiveTitle;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SinglePlayerVive;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SinglePlayerViveOutline;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text MultiplayerOutline;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text SteamInitError;

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x98B5D4", Offset = "0x98B5D4", VA = "0x98B5D4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x98B748", Offset = "0x98B748", VA = "0x98B748")]
	public MainWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000228")]
public class MapVotingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseNextMap;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text CoOp;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CoOpShadow;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text PvP;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PvPShadow;

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x98B750", Offset = "0x98B750", VA = "0x98B750", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x98B86C", Offset = "0x98B86C", VA = "0x98B86C")]
	public MapVotingLocalizer()
	{
	}
}
[Token(Token = "0x2000229")]
public class MatchSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text MatchSettings;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text RoomType;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Private;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Weather;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Rain;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Create;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text CreateOutline;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text HowToUseCodeToEnter;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text Password;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Warning;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text PrivateCreate;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text PrivateCreateOutline;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text waves;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text skipInitialWaves;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text shooting;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text lockFastShooting;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x98B874", Offset = "0x98B874", VA = "0x98B874", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x98BB6C", Offset = "0x98BB6C", VA = "0x98BB6C")]
	public MatchSettingsLocalizer()
	{
	}
}
[Token(Token = "0x200022A")]
public class MiniScoreboardLocalizer : MonoBehaviour
{
	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text timeLeftLabel;

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x98BB74", Offset = "0x98BB74", VA = "0x98BB74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x98BB78", Offset = "0x98BB78", VA = "0x98BB78")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x98BBDC", Offset = "0x98BBDC", VA = "0x98BBDC")]
	public MiniScoreboardLocalizer()
	{
	}
}
[Token(Token = "0x200022B")]
public class NoInternetConnectionWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NoInternetConnection;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x98BBE4", Offset = "0x98BBE4", VA = "0x98BBE4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x98BC90", Offset = "0x98BC90", VA = "0x98BC90")]
	public NoInternetConnectionWindowLocalizer()
	{
	}
}
[Token(Token = "0x200022C")]
public class OculusInitErrorMessageLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Message;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x98BC98", Offset = "0x98BC98", VA = "0x98BC98", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x98BCFC", Offset = "0x98BCFC", VA = "0x98BCFC")]
	public OculusInitErrorMessageLocalizer()
	{
	}
}
[Token(Token = "0x200022D")]
public class PauseMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Pause;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Settings;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text SettingsOutline;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Wave;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Points;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Quit;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text QuitOutline;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Continue;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ContinueOutline;

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x98BD04", Offset = "0x98BD04", VA = "0x98BD04", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x98BF08", Offset = "0x98BF08", VA = "0x98BF08")]
	public PauseMenuLocalizer()
	{
	}
}
[Token(Token = "0x200022E")]
public class PauseVotingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text yesButton;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text yesButtonOutline;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text noButton;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text noButtonOutline;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text breakAsk;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text agreedForBreak;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text disagreedForBreak;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text voting;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text yesCounterLabel;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text noCounterLabel;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text breakWillStartAfterWave;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x98BF10", Offset = "0x98BF10", VA = "0x98BF10", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x98C0DC", Offset = "0x98C0DC", VA = "0x98C0DC")]
	public PauseVotingLocalizer()
	{
	}
}
[Token(Token = "0x200022F")]
public class PlayAreaWarningLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Description;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueText;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x98C0E4", Offset = "0x98C0E4", VA = "0x98C0E4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x98C1C8", Offset = "0x98C1C8", VA = "0x98C1C8")]
	public PlayAreaWarningLocalizer()
	{
	}
}
[Token(Token = "0x2000230")]
public class PlayerTitlesLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Name;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Score;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Level;

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x98C1D0", Offset = "0x98C1D0", VA = "0x98C1D0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x98C27C", Offset = "0x98C27C", VA = "0x98C27C")]
	public PlayerTitlesLocalizer()
	{
	}
}
[Token(Token = "0x2000231")]
public class PleaseLogintoOculusLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Text;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x98C284", Offset = "0x98C284", VA = "0x98C284", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x98C2E8", Offset = "0x98C2E8", VA = "0x98C2E8")]
	public PleaseLogintoOculusLocalizer()
	{
	}
}
[Token(Token = "0x2000232")]
public class PolicyOpenedInBrowserLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text OpenedInBrowser;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x98C2F0", Offset = "0x98C2F0", VA = "0x98C2F0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x98C39C", Offset = "0x98C39C", VA = "0x98C39C")]
	public PolicyOpenedInBrowserLocalizer()
	{
	}
}
[Token(Token = "0x2000233")]
public class PrivacyLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text PrivacyPolicy;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text OpenPrivacy;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OpenPrivacyOutline;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Continue;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x98C3A4", Offset = "0x98C3A4", VA = "0x98C3A4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x98C498", Offset = "0x98C498", VA = "0x98C498")]
	public PrivacyLocalizer()
	{
	}
}
[Token(Token = "0x2000234")]
public class ProvideServerCodeLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text HowToUseCodeToEnter;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ServerCode;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text WarningText;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Back;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BackOutline;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Continue;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x98C4A0", Offset = "0x98C4A0", VA = "0x98C4A0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x98C634", Offset = "0x98C634", VA = "0x98C634")]
	public ProvideServerCodeLocalizer()
	{
	}
}
[Token(Token = "0x2000235")]
public class RegionListLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Regions;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text LoadingRegions;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text NoInternetMessage;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Region;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text USARegion;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text EuropeRegion;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text AsiaRegion;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Players;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Ping;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text ConnectRegion1;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text ConnectRegion1Outline;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text ConnectRegion2;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ConnectRegion2Outline;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text ConnectRegion3;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text ConnectRegion3Outline;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text Back;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text BackOutline;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x98C63C", Offset = "0x98C63C", VA = "0x98C63C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x98C91C", Offset = "0x98C91C", VA = "0x98C91C")]
	public RegionListLocalizer()
	{
	}
}
[Token(Token = "0x2000236")]
public class RpgElementsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text RpgElementsTitle;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text RpgElementsText;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Continue;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x98C924", Offset = "0x98C924", VA = "0x98C924", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x98CA08", Offset = "0x98CA08", VA = "0x98CA08")]
	public RpgElementsWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000237")]
public class ScoreboardLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Name;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Level;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Score;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text WaitingForHost;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text YouAreKilled;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text Quit;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text QuitOutline;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Start;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text StartOutline;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Continue;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text ContinueOutline;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text EvaluationVersionWarning;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text pause;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text pauseOutline;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text gamePaused;

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x98CA10", Offset = "0x98CA10", VA = "0x98CA10", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x98CDC8", Offset = "0x98CDC8", VA = "0x98CDC8")]
	public ScoreboardLocalizer()
	{
	}
}
[Token(Token = "0x2000238")]
public class ServerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Join;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text JoinOutline;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text RoomName;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x98CDD0", Offset = "0x98CDD0", VA = "0x98CDD0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x98CF68", Offset = "0x98CF68", VA = "0x98CF68")]
	public ServerLocalizer()
	{
	}
}
[Token(Token = "0x2000239")]
public class SettingsWindowMultiplayerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SettingsShadow;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text GoBackToMainMenu;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text VoiceChat;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text AlwaysSpeak;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text ArcadeGoBackToMainMenu;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Text ArcadeMultiplayer;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Text ArcadeVoiceChat;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Text ArcadeAlwaysSpeak;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x98CF70", Offset = "0x98CF70", VA = "0x98CF70", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x98D390", Offset = "0x98D390", VA = "0x98D390")]
	public SettingsWindowMultiplayerLocalizer()
	{
	}
}
[Token(Token = "0x200023A")]
public class SettingsWindowSinglePlayerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text GoBackToMainMenu;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text ArcadeGoBackToMainMenu;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x98D398", Offset = "0x98D398", VA = "0x98D398", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x98D6BC", Offset = "0x98D6BC", VA = "0x98D6BC")]
	public SettingsWindowSinglePlayerLocalizer()
	{
	}
}
[Token(Token = "0x200023B")]
public class SettingsWindowTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text SettingsShadow;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Controls;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ControlsOutline;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Gameplay;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ArrowHandOffset;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text DominantHand;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Audio;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Music;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Sounds;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text Multiplayer;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text VoiceChat;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text AlwaysSpeak;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text VRParkVersion;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text ArcadeGameplay;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text ArcadeDominantHand;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text ArcadeAudio;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text ArcadeMusic;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text ArcadeMultiplayer;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text ArcadeVoiceChat;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text ArcadeAlwaysSpeak;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text Back;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text BackOutline;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x98D6C4", Offset = "0x98D6C4", VA = "0x98D6C4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x98DA98", Offset = "0x98DA98", VA = "0x98DA98")]
	public SettingsWindowTournamentLocalizer()
	{
	}
}
[Token(Token = "0x200023C")]
public class SetupOfLocalServerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Create;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CreateOutline;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Join;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text JoinOutline;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x98DAA0", Offset = "0x98DAA0", VA = "0x98DAA0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x98DC18", Offset = "0x98DC18", VA = "0x98DC18")]
	public SetupOfLocalServerLocalizer()
	{
	}
}
[Token(Token = "0x200023D")]
public class ShopLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Shop;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Use;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text UseOutline;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Buy;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BuyOutline;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Bought;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Ok;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text OkOutline;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ComingSoon;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x98DC20", Offset = "0x98DC20", VA = "0x98DC20", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x98DDA4", Offset = "0x98DDA4", VA = "0x98DDA4")]
	public ShopLocalizer()
	{
	}
}
[Token(Token = "0x200023E")]
public class SinglePlayerMapChoiceWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text ChooseLocation;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text DefendElvenTown;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SupportHumanVillage;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text DefendAncientTempleText;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text supportHumanCastle;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text defendBay;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text winterMountains;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text defendLastStronghold;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text escortTheDwarves;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text escortTheCarriage;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Start;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text StartOutline;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x98DDAC", Offset = "0x98DDAC", VA = "0x98DDAC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x98DFF8", Offset = "0x98DFF8", VA = "0x98DFF8")]
	public SinglePlayerMapChoiceWindowLocalizer()
	{
	}
}
[Token(Token = "0x200023F")]
public class SingleplayerModeMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseMode;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ChooseModeShadow;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Rpg;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text RpgShadow;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text RpgDescription;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Arcade;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ArcadeShadow;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text ArcadeDescription;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Back;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text BackShadow;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x98E000", Offset = "0x98E000", VA = "0x98E000", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x98E214", Offset = "0x98E214", VA = "0x98E214")]
	public SingleplayerModeMenuLocalizer()
	{
	}
}
[Token(Token = "0x2000240")]
public class SpellsCanvasLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpellsWindowLocalizer> spellsWindowLocalizers;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text spells;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text resetWindowTitle;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text yes;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text yesOutline;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text no;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text noOutline;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text youNeedMoreSpellPoints;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ok;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text okOutline;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text assignSpellsTitle;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text assignWindowBack;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text assignWindowBackOutline;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text howToUseSpellsTitle;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text howToUseSpellsDescription;

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x98E21C", Offset = "0x98E21C", VA = "0x98E21C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x98E544", Offset = "0x98E544", VA = "0x98E544")]
	public SpellsCanvasLocalizer()
	{
	}
}
[Token(Token = "0x2000242")]
public class SpellsDescriptionLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x98E8BC", Offset = "0x98E8BC", VA = "0x98E8BC")]
	public static string GetSpellDescription(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x98E93C", Offset = "0x98E93C", VA = "0x98E93C")]
	public static string GetSpellName(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x98E9BC", Offset = "0x98E9BC", VA = "0x98E9BC")]
	public SpellsDescriptionLocalizer()
	{
	}
}
[Token(Token = "0x2000243")]
public class SpellsWindowLocalizer : MonoBehaviour
{
	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Ice window specified")]
	private Text fireOutline;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Fire window specified")]
	private Text iceOutline;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Common")]
	private Text fire;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text ice;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text spellPoints;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text cooldown;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text levelNeededToUpgrade;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text reset;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text resetOutline;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text use;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text useOutline;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text learn;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text learnOutline;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x98E5D8", Offset = "0x98E5D8", VA = "0x98E5D8")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x98E9C4", Offset = "0x98E9C4", VA = "0x98E9C4")]
	public SpellsWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000244")]
public class StartMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text btStart;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text btStartOutline;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SettingsText;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Leaderboards;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text LeaderboardsOutline;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text quitOculusQuest;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text quitOculusQuestOutline;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text quit;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text quitOutline;

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x98E9CC", Offset = "0x98E9CC", VA = "0x98E9CC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x98EC44", Offset = "0x98EC44", VA = "0x98EC44")]
	public StartMenuLocalizer()
	{
	}
}
[Token(Token = "0x2000245")]
public class SteamInitErrorMessageLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Message;

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x98EC4C", Offset = "0x98EC4C", VA = "0x98EC4C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x98ECB0", Offset = "0x98ECB0", VA = "0x98ECB0")]
	public SteamInitErrorMessageLocalizer()
	{
	}
}
[Token(Token = "0x2000246")]
public class TournamentCanvasLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text TournamentTitle;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text TournamentTitleShadow;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Loading;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text TopPlayersHeader;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BestArchersHeader;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text BestArchersHeaderShadow;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BestArchersLastTournament;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text BestArchersRank;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text BestArchersName;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text BestArchersStage;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text BestArchersKills;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text BestArchersDeaths;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text BestArchersStatus;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text Join;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text JoinOutline;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text EnrollmentBack;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text EnrollmentBackOutline;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text DisclaimerTitle;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text DisclaimerTitleShadow;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text Disclaimer;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text DisclaimerLinkOutline;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text Agreement;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text MustAgree;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text DisclaimerBack;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text DisclaimerBackOutline;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text Continue;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text ContinueOutline;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text RivalsTitle;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text RivalsTitleShadow;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text RivalsLastTournament;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text RivalsRank;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text RivalsName;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text RivalsStage;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text RivalsKils;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text RivalsDeaths;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text RivalsStatus;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text NoResultsYet;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text Error;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x98ECB8", Offset = "0x98ECB8", VA = "0x98ECB8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x98F54C", Offset = "0x98F54C", VA = "0x98F54C")]
	public TournamentCanvasLocalizer()
	{
	}
}
[Token(Token = "0x2000247")]
public class TournamentLeaderboardWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text TournamentLeaderboard;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Rank;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Name;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Round;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Kills;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Deaths;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text TotalKills;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text TotalDeaths;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Status;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x98F554", Offset = "0x98F554", VA = "0x98F554", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x98F6D8", Offset = "0x98F6D8", VA = "0x98F6D8")]
	public TournamentLeaderboardWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000248")]
public class TournamentLobbyLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text SettingsOutline;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Quit;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text QuitOutline;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x98F6E0", Offset = "0x98F6E0", VA = "0x98F6E0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x98F7B0", Offset = "0x98F7B0", VA = "0x98F7B0")]
	public TournamentLobbyLocalizer()
	{
	}
}
[Token(Token = "0x2000249")]
public class VillageHealthLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text VillageHealth;

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x98F7B8", Offset = "0x98F7B8", VA = "0x98F7B8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x98F848", Offset = "0x98F848", VA = "0x98F848")]
	public VillageHealthLocalizer()
	{
	}
}
[Token(Token = "0x200024A")]
public class YourServerCodeIsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text YourServerCodeIs;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text HowToUseCode;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Back;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text BackOutline;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Continue;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ContinueOutline;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x98F850", Offset = "0x98F850", VA = "0x98F850", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x98F9C0", Offset = "0x98F9C0", VA = "0x98F9C0")]
	public YourServerCodeIsLocalizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200024B")]
[CreateAssetMenu(menuName = "Translations/Translation")]
public class Translation : ScriptableObject
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string adjDark;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string adjElven;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[TextArea]
	public string adjFire;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[TextArea]
	public string adjFrozen;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[TextArea]
	public string adjGolden;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[TextArea]
	public string adjSilver;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[TextArea]
	public string adjBrave;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[TextArea]
	public string adjForest;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[TextArea]
	public string adjGlorious;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[TextArea]
	public string adjHoly;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[TextArea]
	public string adjSwift;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[TextArea]
	public string adjMythical;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[TextArea]
	public string adjFearless;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[TextArea]
	public string nounArrow;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[TextArea]
	public string nounThunder;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[TextArea]
	public string nounKnight;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[TextArea]
	public string nounPaladin;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[TextArea]
	public string nounWarrior;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[TextArea]
	public string nounWizard;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[TextArea]
	public string nounArcher;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[TextArea]
	public string nounAssassin;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[TextArea]
	public string nounGuardian;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[TextArea]
	public string nounDefender;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[TextArea]
	public string nounBow;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[TextArea]
	public string nounHero;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[TextArea]
	public string nounChampion;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[TextArea]
	public string lbDefendElvenTown;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[TextArea]
	public string lbSupportHumanVillage;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[TextArea]
	public string lbDefendAncientTemple;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[TextArea]
	public string lbSupportHumanCastle;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[TextArea]
	public string lbDefendBay;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[TextArea]
	public string lbWinterMountains;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[TextArea]
	public string lbDefendLastStronghold;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[TextArea]
	public string lbEscortTheDwarves;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[TextArea]
	public string lbEscortTheCarriage;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[TextArea]
	public string lbWinterMountainsDeathmatch;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[TextArea]
	public string lbBow_WoodenBow_Default;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[TextArea]
	public string lbBow_SteelDefender;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[TextArea]
	public string lbBow_NaturesCall;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[TextArea]
	public string lbBow_BowOfAlliance;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[TextArea]
	public string lbHelmet_Barbuta_default;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[TextArea]
	public string lbHelmet_ArchersHelmet;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[TextArea]
	public string lbHelmet_GiftOfTheSea;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[TextArea]
	public string lbHelmet_HelmetOfAncestors;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[TextArea]
	public string lbHelmet_GriffinHelmet;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[TextArea]
	public string lbSet_ForestGuardian;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[TextArea]
	public string lbSet_OrcHunter;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[TextArea]
	public string lbSet_HolySet;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[TextArea]
	public string lbSet_FrozenTouch;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[TextArea]
	public string dspBow_WoodenBow_Default;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[TextArea]
	public string dspBow_SteelDefender;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[TextArea]
	public string dspBow_NaturesCall;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[TextArea]
	public string dspBow_BowOfAlliance;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[TextArea]
	public string dspHelmet_Barbuta_default;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[TextArea]
	public string dspHelmet_ArchersHelmet;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[TextArea]
	public string dspHelmet_GiftOfTheSea;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[TextArea]
	public string dspHelmet_HelmetOfAncestors;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[TextArea]
	public string dspHelmet_GriffinHelmet;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[TextArea]
	public string dspSet_ForestGuardian;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[TextArea]
	public string dspSet_OrcHunter;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[TextArea]
	public string dspSet_HolySet;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[TextArea]
	public string dspSet_FrozenTouch;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[TextArea]
	public string lbMenu;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[TextArea]
	public string lbSpells;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[TextArea]
	public string btFire;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[TextArea]
	public string btIce;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[TextArea]
	public string lbLevel;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[TextArea]
	public string lbSpellPoints;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[TextArea]
	public string lbCooldown;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[TextArea]
	public string lbLevelNeededToUpgrade;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[TextArea]
	public string btReset;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[TextArea]
	public string lbResetWindowTit;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[TextArea]
	public string btLearn;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[TextArea]
	public string lbSpellSelectionTitle;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[TextArea]
	public string lbHowToUseSpellsTitle;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[TextArea]
	public string lbHowToUseSpellsDescription;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[TextArea]
	public string lbYouNeedMoreSpellsPoints;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[TextArea]
	public string lbMaxLevel;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[TextArea]
	public string txtHigherLevelNeeded;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[TextArea]
	public string txtSpellPointNeeded;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[TextArea]
	public string txtPreviousSpellsRequired;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[TextArea]
	public string txtMaxLevelReached;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[TextArea]
	public string txtYouHaveToLearnIt;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[TextArea]
	public string lbFireArrow;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[TextArea]
	public string lbFireClaws;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[TextArea]
	public string lbArrowRain;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[TextArea]
	public string lbExplosion;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[TextArea]
	public string lbMeteorShower;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[TextArea]
	public string lbFreezingArrow;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[TextArea]
	public string lbIceShield;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[TextArea]
	public string lbIceBolt;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[TextArea]
	public string lbIceRevive;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[TextArea]
	public string lbFreezeStorm;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[TextArea]
	public string dspFireArrow;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[TextArea]
	public string dspFireClaws;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[TextArea]
	public string dspArrowRain;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[TextArea]
	public string dspExplosion;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[TextArea]
	public string dspMeteorShower;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[TextArea]
	public string dspFreezingArrow;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[TextArea]
	public string dspIceShield;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[TextArea]
	public string dspIceBolt;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[TextArea]
	public string dspIceRevive;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	[TextArea]
	public string dspFreezeStorm;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[TextArea]
	public string lbHeadText;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[TextArea]
	public string lbBlowText;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[TextArea]
	public string lbBlowTextWands;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[TextArea]
	public string lbHornWasUsedText;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[TextArea]
	public string lbMicrophoneNotConnectedText;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	[TextArea]
	public string dspGameEndedDisconnectionMessage;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	[TextArea]
	public string dspRejoinMainMenuCanvas;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	[TextArea]
	public string dspRejoinSmallMainMenuCanvas;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	[TextArea]
	public string txtNoNameSet;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	[TextArea]
	public string txtRpgElementsTitle;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[TextArea]
	public string txtRpgElementsText;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	[TextArea]
	public string btRpg;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[TextArea]
	public string lbWithSpells;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	[TextArea]
	public string lbWithoutSpells;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	[TextArea]
	public string lbArrowHandOffset;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	[TextArea]
	public string lbElvenTownHealth;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	[TextArea]
	public string lbHumanVillageHealth;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	[TextArea]
	public string lbHumanCastleHealth;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[TextArea]
	public string lbTempleHealth;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	[TextArea]
	public string lbAxeDodgedUsingBonus;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	[TextArea]
	public string lbYourElvenTownHasFallen;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	[TextArea]
	public string lbTheHumanVillageHasFallen;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	[TextArea]
	public string lbTheHumanCastleHasFallen;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	[TextArea]
	public string lbAncientTempleHasFallen;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	[TextArea]
	public string lbYouWereKilledByOrcWarrior_WaitForNextWave;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	[TextArea]
	public string lbYouWereKilledByTroll_WaitForNextWave;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	[TextArea]
	public string lbYouWereKilledByDragon_WaitForNextWave;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	[TextArea]
	public string btSpells;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	[TextArea]
	public string lbEvaluationWarning;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	[TextArea]
	public string lbPlayAreaWarningDescription;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	[TextArea]
	public string txtShootToTeleport;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	[TextArea]
	public string txtTouchTrackingText;

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x98F9C8", Offset = "0x98F9C8", VA = "0x98F9C8")]
	public Translation()
	{
	}
}
[Token(Token = "0x200024C")]
public class LocalPositionHolder : MonoBehaviour
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 localPosition;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion localRotation;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x990CD0", Offset = "0x990CD0", VA = "0x990CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x990D38", Offset = "0x990D38", VA = "0x990D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x990E04", Offset = "0x990E04", VA = "0x990E04")]
	public LocalPositionHolder()
	{
	}
}
[Token(Token = "0x200024D")]
public class MagicElementController : MonoBehaviour
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image borderImage;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image arrowImage;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text spellLevelText;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite availableImage;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite unavailableImage;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color activeColor;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color learnedColor;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color inactiveColor;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text maxSpellLevelText;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite wheelMenuImage;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Image elementImage;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AbilityType spellName;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool isElementAvailable;

	[Token(Token = "0x17000160")]
	public AbilityType SpellName
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x990E0C", Offset = "0x990E0C", VA = "0x990E0C")]
		get
		{
			return default(AbilityType);
		}
	}

	[Token(Token = "0x17000161")]
	public Sprite WheelMenuImage
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x990E14", Offset = "0x990E14", VA = "0x990E14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000162")]
	public bool IsElementAvailable
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x990E1C", Offset = "0x990E1C", VA = "0x990E1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x990E24", Offset = "0x990E24", VA = "0x990E24")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public Color InactiveColor
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x990E30", Offset = "0x990E30", VA = "0x990E30")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x990E3C", Offset = "0x990E3C", VA = "0x990E3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x990E48", Offset = "0x990E48", VA = "0x990E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x990FB8", Offset = "0x990FB8", VA = "0x990FB8")]
	public void Highlight()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x990FE8", Offset = "0x990FE8", VA = "0x990FE8")]
	public void UnHighlight()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x991038", Offset = "0x991038", VA = "0x991038")]
	public void UpdateVisuals()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x99143C", Offset = "0x99143C", VA = "0x99143C")]
	public void SetActiveImage()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x99146C", Offset = "0x99146C", VA = "0x99146C")]
	public void SetNonActiveImage()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x9914B8", Offset = "0x9914B8", VA = "0x9914B8")]
	public bool HasRequiredLevel(IAbility spell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x9914F4", Offset = "0x9914F4", VA = "0x9914F4")]
	public bool IsRequiredSpellUnlocked(IAbility spell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x9912CC", Offset = "0x9912CC", VA = "0x9912CC")]
	private int GetAbilityLevel(IAbility spell)
	{
		return default(int);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x9916D0", Offset = "0x9916D0", VA = "0x9916D0")]
	public MagicElementController()
	{
	}
}
[Token(Token = "0x200024E")]
public class DisclaimerWindowController : MonoBehaviour
{
	[Token(Token = "0x4000DF4")]
	private const string urlToPrivacyPolicy = "https://wenklystudio.com/legal/privacypolicy/vrgames/PrivacyPolicy-VR_Games.pdf";

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle toggle;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text errorText;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnJoinCanvasDisabler tournamentOnJoinCanvasDisabler;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject enrollmentWindow;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BeforeEnrollmentTournamentController enrollmentTournamentController;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x9916E4", Offset = "0x9916E4", VA = "0x9916E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x991720", Offset = "0x991720", VA = "0x991720")]
	private void SetStateBeforeDisclaimer()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x9916E8", Offset = "0x9916E8", VA = "0x9916E8")]
	private void SetInitialDisclaimerState()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x99175C", Offset = "0x99175C", VA = "0x99175C")]
	public void OnContinueButtonClick()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x9917B4", Offset = "0x9917B4", VA = "0x9917B4")]
	public void OnRejoinClick()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x9917E4", Offset = "0x9917E4", VA = "0x9917E4")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x9917E8", Offset = "0x9917E8", VA = "0x9917E8")]
	public void OnLinkClick()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x99182C", Offset = "0x99182C", VA = "0x99182C")]
	public void ToggleAgreement()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x99186C", Offset = "0x99186C", VA = "0x99186C")]
	public DisclaimerWindowController()
	{
	}
}
[Token(Token = "0x200024F")]
public class ExternalLinkController : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <OpenApp>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExternalLinkController <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x991ACC", Offset = "0x991ACC", VA = "0x991ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x991B14", Offset = "0x991B14", VA = "0x991B14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x9919C0", Offset = "0x9919C0", VA = "0x9919C0")]
		[DebuggerHidden]
		public <OpenApp>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x9919F0", Offset = "0x9919F0", VA = "0x9919F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x9919F4", Offset = "0x9919F4", VA = "0x9919F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x991AD4", Offset = "0x991AD4", VA = "0x991AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string link;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string appLink;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isPaused;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x991874", Offset = "0x991874", VA = "0x991874")]
	private void OnApplicationPause()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x991880", Offset = "0x991880", VA = "0x991880")]
	public void OpenLink()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x991914", Offset = "0x991914", VA = "0x991914")]
	public void TryToOpenApp()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x99194C", Offset = "0x99194C", VA = "0x99194C")]
	[IteratorStateMachine(typeof(<OpenApp>d__6))]
	private IEnumerator OpenApp()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x9919E8", Offset = "0x9919E8", VA = "0x9919E8")]
	public ExternalLinkController()
	{
	}
}
[Token(Token = "0x2000251")]
public class MagicMenuController : MonoBehaviour
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] magicElements;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image leftImage;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image topImage;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image rightImage;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image bottomImage;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color inactiveBorderColor;

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x991B1C", Offset = "0x991B1C", VA = "0x991B1C")]
	public MagicMenuController()
	{
	}
}
[Token(Token = "0x2000252")]
public class MainMenuInitializer : MonoBehaviour
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerProgressionLoader playerProgressionLoader;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ReferenceSetterController referenceSetterController;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Spells spells;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArcadeGameSwitcher arcadeGameSwitcher;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AutoJoiner autoJoiner;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MainMenuTeleportsController mainMenuTeleportsController;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InitGameInfo initGameInfo;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DRMHandler dRMHandler;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VRDeviceDetector vRDeviceDetector;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private VoiceChatInitializer voiceChatInitializer;

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x991B24", Offset = "0x991B24", VA = "0x991B24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x991BBC", Offset = "0x991BBC", VA = "0x991BBC")]
	private void RunInitialization()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x991C74", Offset = "0x991C74", VA = "0x991C74")]
	public MainMenuInitializer()
	{
	}
}
[Token(Token = "0x2000253")]
public class MainMenuLoadingScreenInitializer : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InitGameInfo initGameInfo;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerProgressionLoader playerProgressionLoader;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Spells spells;

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x991C7C", Offset = "0x991C7C", VA = "0x991C7C")]
	public void RunInitialization()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x991D44", Offset = "0x991D44", VA = "0x991D44")]
	public MainMenuLoadingScreenInitializer()
	{
	}
}
[Token(Token = "0x2000254")]
public enum SlotPostion
{
	[Token(Token = "0x4000E14")]
	Left,
	[Token(Token = "0x4000E15")]
	Right,
	[Token(Token = "0x4000E16")]
	Top,
	[Token(Token = "0x4000E17")]
	Bottom
}
[Token(Token = "0x2000255")]
public class SpellSlot : MonoBehaviour
{
	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SlotPostion slotPosition;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image slotImage;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MagicElementController magicElementController;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpellsMenuController spellsMenuController;

	[Token(Token = "0x4000E1C")]
	public const string topSlotPlayerPrefsKey = "Top Slot";

	[Token(Token = "0x4000E1D")]
	public const string bottomSlotPlayerPrefsKey = "Bottom Slot";

	[Token(Token = "0x4000E1E")]
	public const string leftSlotPlayerPrefsKey = "Left Slot";

	[Token(Token = "0x4000E1F")]
	public const string rightSlotPlayerPrefsKey = "Right Slot";

	[Token(Token = "0x17000166")]
	public MagicElementController MagicElementController
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x991E9C", Offset = "0x991E9C", VA = "0x991E9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x991EA4", Offset = "0x991EA4", VA = "0x991EA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x991D4C", Offset = "0x991D4C", VA = "0x991D4C")]
	public static string GetSlotPlayerPrefsKeyBySlotPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x991F54", Offset = "0x991F54", VA = "0x991F54")]
	public void SetSpell()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x992380", Offset = "0x992380", VA = "0x992380")]
	public SpellSlot()
	{
	}
}
[Token(Token = "0x2000256")]
public class SpellsMenuController : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	public delegate void LearnSpellDelegate();

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iceCard;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fireCard;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wheelMenu;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color learnedColor;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<MagicElementController> magicElementControllers;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpellSlot[] spellSlots;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject infoWindow;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text infoWindowText;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpellsWindowUI spellsWindowUI;

	[Token(Token = "0x17000167")]
	public SpellsWindowUI SpellsWindowUI
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x992868", Offset = "0x992868", VA = "0x992868")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x992870", Offset = "0x992870", VA = "0x992870")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public MagicElementController SelectedSpell
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x992878", Offset = "0x992878", VA = "0x992878")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x992880", Offset = "0x992880", VA = "0x992880")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public int SelectedSpellIndex
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x992888", Offset = "0x992888", VA = "0x992888")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700016A")]
	public GameObject LearnButton
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x992964", Offset = "0x992964", VA = "0x992964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016B")]
	public GameObject UseButton
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x992980", Offset = "0x992980", VA = "0x992980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000015")]
	public event LearnSpellDelegate OnCannotLearn
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x992388", Offset = "0x992388", VA = "0x992388")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x992424", Offset = "0x992424", VA = "0x992424")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event LearnSpellDelegate OnLearning
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x9924C0", Offset = "0x9924C0", VA = "0x9924C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x99255C", Offset = "0x99255C", VA = "0x99255C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event LearnSpellDelegate OnCannotUse
	{
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x9925F8", Offset = "0x9925F8", VA = "0x9925F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x992694", Offset = "0x992694", VA = "0x992694")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event LearnSpellDelegate OnUsing
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x992730", Offset = "0x992730", VA = "0x992730")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x9927CC", Offset = "0x9927CC", VA = "0x9927CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x99299C", Offset = "0x99299C", VA = "0x99299C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x9929B4", Offset = "0x9929B4", VA = "0x9929B4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x992F28", Offset = "0x992F28", VA = "0x992F28")]
	public void SelectSpell(AbilityType abilityType)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x9931A4", Offset = "0x9931A4", VA = "0x9931A4")]
	public SpellSlot GetSlotByPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x99305C", Offset = "0x99305C", VA = "0x99305C")]
	public void UnHighlightAllMagicElements()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x992218", Offset = "0x992218", VA = "0x992218")]
	public void AssignSpell(MagicElementController spellToAssign, SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x99214C", Offset = "0x99214C", VA = "0x99214C")]
	public void RemoveSpellFromSlots(MagicElementController spellToRemove)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x992044", Offset = "0x992044", VA = "0x992044")]
	public void SwapSpellSlot(SpellSlot spellSlot, MagicElementController spellToSet)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x99325C", Offset = "0x99325C", VA = "0x99325C")]
	private bool AbilityAssignedToSlot(MagicElementController magicElementController)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x993320", Offset = "0x993320", VA = "0x993320")]
	public void UnlockAllSpellsForTestingPurposes()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x9936D8", Offset = "0x9936D8", VA = "0x9936D8")]
	public void LearnSelectedSpell()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x993680", Offset = "0x993680", VA = "0x993680")]
	private bool PlayerCanLearnSelectedSpell(IAbility currentSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x993D00", Offset = "0x993D00", VA = "0x993D00")]
	private void ShowInfoWindow(string info)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x993D84", Offset = "0x993D84", VA = "0x993D84")]
	private MagicElementController GetMagicElementControllerBySpellName(string spellName)
	{
		return null;
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x9929CC", Offset = "0x9929CC", VA = "0x9929CC")]
	private void LoadSpells()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x992B58", Offset = "0x992B58", VA = "0x992B58")]
	private void LoadSpellSlots()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x99223C", Offset = "0x99223C", VA = "0x99223C")]
	public void SaveSpellSlots()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x993FC4", Offset = "0x993FC4", VA = "0x993FC4")]
	public void AssignSpell(out bool canAssignSpell)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x993654", Offset = "0x993654", VA = "0x993654")]
	public void UpdatePlayerExp()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x993BC4", Offset = "0x993BC4", VA = "0x993BC4")]
	private bool PlayerHasRequredLevel(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x993C90", Offset = "0x993C90", VA = "0x993C90")]
	private bool PlayerHasEnoughSpellPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x9935A8", Offset = "0x9935A8", VA = "0x9935A8")]
	private bool PlayerHasRequiredSpellUnlocked(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x993A34", Offset = "0x993A34", VA = "0x993A34")]
	private bool PlayerHasReachMaxSpellLevel(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x9940F8", Offset = "0x9940F8", VA = "0x9940F8")]
	[ContextMenu("GatherMagicElementControllers")]
	private void GatherMagicElementControllers()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x994198", Offset = "0x994198", VA = "0x994198")]
	public SpellsMenuController()
	{
	}
}
[Token(Token = "0x2000259")]
public class SpellsTutorialController : MonoBehaviour
{
	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject arrowOnSpellToLearn;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject arrowOnLearn;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject arrowOnUse;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject arrowOnSpellToLearnIce;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject arrowOnLearnIce;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject arrowOnUseIce;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject arrowOnAttachToSlot;

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x9942B4", Offset = "0x9942B4", VA = "0x9942B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x994684", Offset = "0x994684", VA = "0x994684")]
	private bool CheckIfAttachedAnySpellInMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x9945E4", Offset = "0x9945E4", VA = "0x9945E4")]
	private void ToggleAllArrows(bool value)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x994C7C", Offset = "0x994C7C", VA = "0x994C7C")]
	public SpellsTutorialController()
	{
	}
}
[Token(Token = "0x200025A")]
public class MeshAttacher : MonoBehaviour
{
	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x994C84", Offset = "0x994C84", VA = "0x994C84")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x994D1C", Offset = "0x994D1C", VA = "0x994D1C")]
	public MeshAttacher()
	{
	}
}
[Token(Token = "0x200025B")]
public class MicrophoneController : MonoBehaviour
{
	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool micConnected;

	[Token(Token = "0x1700016C")]
	public bool MicConnected
	{
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x994D24", Offset = "0x994D24", VA = "0x994D24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x994D2C", Offset = "0x994D2C", VA = "0x994D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x994D30", Offset = "0x994D30", VA = "0x994D30")]
	public void MicrophoneSetup()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x994DC8", Offset = "0x994DC8", VA = "0x994DC8")]
	public MicrophoneController()
	{
	}
}
[Token(Token = "0x200025C")]
public class MicrophoneUIInertia : MonoBehaviour
{
	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform mainCamera;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x994DD0", Offset = "0x994DD0", VA = "0x994DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x994F84", Offset = "0x994F84", VA = "0x994F84")]
	public MicrophoneUIInertia()
	{
	}
}
[Token(Token = "0x200025D")]
public class PlayersController : MonoBehaviour
{
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x994F8C", Offset = "0x994F8C", VA = "0x994F8C")]
	public PlayersController()
	{
	}
}
[Token(Token = "0x200025E")]
public static class TournamentRoomPropertiesController
{
	[Token(Token = "0x4000E3A")]
	public const string tournamentKey = "Tournament";

	[Token(Token = "0x1700016D")]
	public static bool IsInTournamentRoom
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x994F94", Offset = "0x994F94", VA = "0x994F94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x995050", Offset = "0x995050", VA = "0x995050")]
	public static RoomOptions GetDefaultTournamentDeathMatchRoomOptions(int maxPlayersCount = 4)
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x995354", Offset = "0x995354", VA = "0x995354")]
	public static RoomOptions GetDefaultTournamentRoomOptions()
	{
		return null;
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x99551C", Offset = "0x99551C", VA = "0x99551C")]
	public static TournamentGameStateController.TournamentGameStateType GetTournamentGameState()
	{
		return default(TournamentGameStateController.TournamentGameStateType);
	}
}
[Token(Token = "0x200025F")]
public class CloudRegionByLocalTimeZoneDetector : MonoBehaviour
{
	[Token(Token = "0x4000E3B")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x4000E3C")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x4000E3D")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x99562C", Offset = "0x99562C", VA = "0x99562C")]
	public static CloudRegionCode GetCloudRegionByLocalTimeZone()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x9956B8", Offset = "0x9956B8", VA = "0x9956B8")]
	public CloudRegionByLocalTimeZoneDetector()
	{
	}
}
[Token(Token = "0x2000260")]
public class OculusMenuHandController : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	public enum HandSide
	{
		[Token(Token = "0x4000E40")]
		LEFT,
		[Token(Token = "0x4000E41")]
		RIGHT
	}

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandSide handSide;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x9956C0", Offset = "0x9956C0", VA = "0x9956C0")]
	public OculusMenuHandController()
	{
	}
}
[Token(Token = "0x2000262")]
public class DestinationController : MonoBehaviour, IConnectionCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x4000E42")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x4000E43")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x4000E44")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Maps maps;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string serverName;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string customServerName;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCreatingRoom;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isJoiningRoom;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isGroupLaunch;

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x9956C8", Offset = "0x9956C8", VA = "0x9956C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x995778", Offset = "0x995778", VA = "0x995778")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x995828", Offset = "0x995828", VA = "0x995828")]
	private void CreateRoom(string mapName)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x9959B4", Offset = "0x9959B4", VA = "0x9959B4")]
	private void CreateCustomNameRoom(string mapName, string customRoomName)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x99582C", Offset = "0x99582C", VA = "0x99582C")]
	private void ConnectUsingMap(string _mapName)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x9959EC", Offset = "0x9959EC", VA = "0x9959EC")]
	private string GetRegionBasedOnLocalTimeZone()
	{
		return null;
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x995C38", Offset = "0x995C38", VA = "0x995C38")]
	private void ConnectToRegion(string cloudRegionCode, string _mapName)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x995D84", Offset = "0x995D84", VA = "0x995D84")]
	private void ErrorMessage()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x995DEC", Offset = "0x995DEC", VA = "0x995DEC", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x995ED8", Offset = "0x995ED8", VA = "0x995ED8", Slot = "10")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x995F24", Offset = "0x995F24", VA = "0x995F24", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x995F28", Offset = "0x995F28", VA = "0x995F28", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x995F2C", Offset = "0x995F2C", VA = "0x995F2C", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x995F30", Offset = "0x995F30", VA = "0x995F30", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x995F34", Offset = "0x995F34", VA = "0x995F34", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x995F38", Offset = "0x995F38", VA = "0x995F38", Slot = "11")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x995F3C", Offset = "0x995F3C", VA = "0x995F3C", Slot = "12")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x995F40", Offset = "0x995F40", VA = "0x995F40", Slot = "13")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x995F44", Offset = "0x995F44", VA = "0x995F44")]
	public DestinationController()
	{
	}
}
[Token(Token = "0x2000263")]
public class MainMenuLoaderController : MonoBehaviour
{
	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Map mainMenuMap;

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x995F4C", Offset = "0x995F4C", VA = "0x995F4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x996054", Offset = "0x996054", VA = "0x996054")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x99615C", Offset = "0x99615C", VA = "0x99615C")]
	private void LoadMenu()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x996220", Offset = "0x996220", VA = "0x996220")]
	private void LoadMenu(string unrelevantArg)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x996224", Offset = "0x996224", VA = "0x996224")]
	public MainMenuLoaderController()
	{
	}
}
[Token(Token = "0x2000264")]
public class RichPresenceAndDestination : MonoBehaviour, IMatchmakingCallbacks
{
	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuLoadingScreenInitializer mainMenuLoadingScreenInitializer;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x99622C", Offset = "0x99622C", VA = "0x99622C", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x996230", Offset = "0x996230", VA = "0x996230", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x996234", Offset = "0x996234", VA = "0x996234", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x996238", Offset = "0x996238", VA = "0x996238", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x99623C", Offset = "0x99623C", VA = "0x99623C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x996240", Offset = "0x996240", VA = "0x996240", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x996244", Offset = "0x996244", VA = "0x996244", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x996248", Offset = "0x996248", VA = "0x996248")]
	public RichPresenceAndDestination()
	{
	}
}
[Token(Token = "0x2000265")]
public class RoomInfoDetails : MonoBehaviour
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapNames map;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Region;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RoomCode;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isMultiplayer;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x996250", Offset = "0x996250", VA = "0x996250")]
	public RoomInfoDetails()
	{
	}
}
[Token(Token = "0x2000266")]
public class OffsetSetter : MonoBehaviour
{
	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float NewHorizontalValue;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VerticalOffsetValue;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HorizontalOffsetValue;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BowHandTransform;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ArrowHandTransform;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CameraTransform;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BowController bowController;

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x996258", Offset = "0x996258", VA = "0x996258")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x996264", Offset = "0x996264", VA = "0x996264")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x996270", Offset = "0x996270", VA = "0x996270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x9965B0", Offset = "0x9965B0", VA = "0x9965B0")]
	public OffsetSetter()
	{
	}
}
[Token(Token = "0x2000267")]
public class OrcKillerController : MonoBehaviourPun
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource sound;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x9965D0", Offset = "0x9965D0", VA = "0x9965D0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x9966DC", Offset = "0x9966DC", VA = "0x9966DC")]
	[PunRPC]
	private void RPCDestroyOrcs()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x996840", Offset = "0x996840", VA = "0x996840")]
	public OrcKillerController()
	{
	}
}
[Token(Token = "0x2000268")]
public class Particle_Controller : MonoBehaviour
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sortingLayerName;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destoryAfterEndPlay;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x996848", Offset = "0x996848", VA = "0x996848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x996988", Offset = "0x996988", VA = "0x996988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x996A98", Offset = "0x996A98", VA = "0x996A98")]
	private bool ParticlePlaying(Transform p_Transform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x996BAC", Offset = "0x996BAC", VA = "0x996BAC")]
	public Particle_Controller()
	{
	}
}
[Token(Token = "0x2000269")]
public class CarriageCartBehaviourController : MonoBehaviour, ICartBehaviour
{
	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController carriageMovementController;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemiesSlotsController enemiesSlotsController;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SplineFollowerMovementProcessor splineFollowerMovementProcessor;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform horseTransform;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HorseAnimatorController horseAnimatorController;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float distanceToHorseTransform;

	[Token(Token = "0x1700016E")]
	public float ReachedDistance
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x996BB4", Offset = "0x996BB4", VA = "0x996BB4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x996BE8", Offset = "0x996BE8", VA = "0x996BE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x996CB8", Offset = "0x996CB8", VA = "0x996CB8", Slot = "5")]
	public void Initialize(RoutePoint spawnRoutePoint, List<RoutePoint> additionalSpawnRoutePoints)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x996D64", Offset = "0x996D64", VA = "0x996D64", Slot = "6")]
	public void GroundCart()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x996DB8", Offset = "0x996DB8", VA = "0x996DB8", Slot = "7")]
	public void StartCart()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x996E38", Offset = "0x996E38", VA = "0x996E38", Slot = "8")]
	public void OnFinishedRoute()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x996E3C", Offset = "0x996E3C", VA = "0x996E3C")]
	public void SetReferences(HorseAnimatorController horseAnimatorController, Transform horseTransform)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x996E6C", Offset = "0x996E6C", VA = "0x996E6C")]
	public CarriageCartBehaviourController()
	{
	}
}
[Token(Token = "0x200026A")]
public class CarriageDifferentialController : MonoBehaviour
{
	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leftWheel;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightWheel;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rotationSpeedFactor;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController carriageMovementcontroller;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastLeftWheelPos;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastRightWheelPos;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x996E74", Offset = "0x996E74", VA = "0x996E74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x996ED0", Offset = "0x996ED0", VA = "0x996ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x9971CC", Offset = "0x9971CC", VA = "0x9971CC")]
	public CarriageDifferentialController()
	{
	}
}
[Serializable]
[Token(Token = "0x200026B")]
public class CarriageReferences
{
	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("CarriageCartBehaviourController")]
	public HorseAnimatorController horseAnimatorController;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform horseTransform;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x9971D4", Offset = "0x9971D4", VA = "0x9971D4")]
	public CarriageReferences()
	{
	}
}
[Token(Token = "0x200026C")]
public class CarriageSoundController : MonoBehaviour
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioItem carriageMoveSound;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioItem leftFrontHoofSound;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioItem rightFrontHoofSound;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioItem leftBackHoofSound;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioItem rightBackHoofSound;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioItem carriageHitSound;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFadingCarriageMoveSound;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float baseCarriageMoveSound;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x9971DC", Offset = "0x9971DC", VA = "0x9971DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x99720C", Offset = "0x99720C", VA = "0x99720C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x996DF4", Offset = "0x996DF4", VA = "0x996DF4")]
	public void PlayMoveSound()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x9972B8", Offset = "0x9972B8", VA = "0x9972B8")]
	public void PlayLeftFrontHoofSound()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x9972D4", Offset = "0x9972D4", VA = "0x9972D4")]
	public void PlayRightFrontHoofSound()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x9972F0", Offset = "0x9972F0", VA = "0x9972F0")]
	public void PlayLeftBackHoofSound()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x99730C", Offset = "0x99730C", VA = "0x99730C")]
	public void PlayRightBackHoofSound()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x996DA4", Offset = "0x996DA4", VA = "0x996DA4")]
	public void StopMoveSound()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x997328", Offset = "0x997328", VA = "0x997328")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x997344", Offset = "0x997344", VA = "0x997344")]
	public CarriageSoundController()
	{
	}
}
[Token(Token = "0x200026D")]
public class CartAnimController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int getHit1;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int getHit2;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int GetDestroyed;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CartAttackTargetController cartAttackTargetController;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] getHitAnims;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDestroyed;

	[Token(Token = "0x1700016F")]
	private bool IsDestroyed
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x99734C", Offset = "0x99734C", VA = "0x99734C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x997354", Offset = "0x997354", VA = "0x997354")]
		set
		{
		}
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x99739C", Offset = "0x99739C", VA = "0x99739C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x997420", Offset = "0x997420", VA = "0x997420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x9975AC", Offset = "0x9975AC", VA = "0x9975AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x997738", Offset = "0x997738", VA = "0x997738")]
	private void PlayeGetHitAnim()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x997790", Offset = "0x997790", VA = "0x997790")]
	private void PlayDestroyCartAnimation(HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x997798", Offset = "0x997798", VA = "0x997798", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x997860", Offset = "0x997860", VA = "0x997860")]
	public CartAnimController()
	{
	}
}
[Token(Token = "0x200026E")]
public class FourSupportPointsVerticalObjectStayOnTerrainController : MonoBehaviour
{
	[Token(Token = "0x4000E7C")]
	private const float rayMaxDistance = 10f;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxRotationSpeed;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxTranslationSpeed;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform backOnTerrainLeft;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform backOnTerrainRight;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform frontOnTerrainLeft;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform frontOnTerrainRight;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform backCenter;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform frontCenter;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit backLeftRaycastHit;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit backRightRaycastHit;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RaycastHit frontLeftRaycastHit;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private RaycastHit frontRightRaycastHit;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 backPosition;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 frontPosition;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 forward;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 position;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float backYPosition;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float frontYPosition;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x997908", Offset = "0x997908", VA = "0x997908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x997A0C", Offset = "0x997A0C", VA = "0x997A0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x998078", Offset = "0x998078", VA = "0x998078")]
	public FourSupportPointsVerticalObjectStayOnTerrainController()
	{
	}
}
[Token(Token = "0x200026F")]
public class HorseAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000E92")]
	private const float movementSpeedToAnimationSpeedFactor = 3f;

	[Token(Token = "0x4000E93")]
	private const float animatorRotationChangeSpeed = 2f;

	[Token(Token = "0x4000E94")]
	private const float maxAngleMultiplier = 2f;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isWalking;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int walkSpeedMultiplier;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int rotationSpeedAnimatorHash;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController carriageMovementController;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animatorRotationSpeed;

	[Token(Token = "0x17000170")]
	public float WalkSpeedMultiplier
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x99811C", Offset = "0x99811C", VA = "0x99811C")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public bool IsWalking
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x998140", Offset = "0x998140", VA = "0x998140")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x998164", Offset = "0x998164", VA = "0x998164")]
		set
		{
		}
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x998190", Offset = "0x998190", VA = "0x998190")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x998268", Offset = "0x998268", VA = "0x998268")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x996D40", Offset = "0x996D40", VA = "0x996D40")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x996E30", Offset = "0x996E30", VA = "0x996E30")]
	public void StartHorse()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x996DB0", Offset = "0x996DB0", VA = "0x996DB0")]
	public void StopHorse()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x998340", Offset = "0x998340", VA = "0x998340")]
	private void AdjustAnimatorToCurrentRotationChange(Vector3 lastForward, Vector3 newForward)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x9985D0", Offset = "0x9985D0", VA = "0x9985D0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x9986A4", Offset = "0x9986A4", VA = "0x9986A4")]
	public HorseAnimatorController()
	{
	}
}
[Token(Token = "0x2000270")]
public class OnHorseAnimationEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem leftFrontHoofParticle;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem rightFrontHoofParticle;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem leftBackHoofParticle;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem rightBackHoofParticle;

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x99874C", Offset = "0x99874C", VA = "0x99874C")]
	public void LeftFrontHoofStep()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x998784", Offset = "0x998784", VA = "0x998784")]
	public void RightFrontHoofStep()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x9987BC", Offset = "0x9987BC", VA = "0x9987BC")]
	public void LeftBackHoofStep()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x9987F4", Offset = "0x9987F4", VA = "0x9987F4")]
	public void RightBackHoofStep()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x99882C", Offset = "0x99882C", VA = "0x99882C")]
	public OnHorseAnimationEventHandler()
	{
	}
}
[Token(Token = "0x2000271")]
public class TwoSupportPointsConnectedObjectStayOnTerrainController : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	private const float rayMaxDistance = 20f;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxRotationSpeed;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxTranslationSpeed;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform leftSupportPoint;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform rightSupportPoint;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit leftRaycastHit;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private RaycastHit rightRaycastHit;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 position;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 right;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 forward;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 upwards;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x998834", Offset = "0x998834", VA = "0x998834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x998924", Offset = "0x998924", VA = "0x998924")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x998FB0", Offset = "0x998FB0", VA = "0x998FB0")]
	public TwoSupportPointsConnectedObjectStayOnTerrainController()
	{
	}
}
[Token(Token = "0x2000272")]
public class WheelRotator : MonoBehaviour
{
	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform wheelTransform;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform wheelHelper;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform wheelGroundTouchPoint;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 localWheelRotationAxis;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float wheelCircumference;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float wheelGroundTouchPointTranslation;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastGroundTouchPointPosition;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canRotate;

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x999054", Offset = "0x999054", VA = "0x999054")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x999164", Offset = "0x999164", VA = "0x999164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x99925C", Offset = "0x99925C", VA = "0x99925C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x999354", Offset = "0x999354", VA = "0x999354")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x999138", Offset = "0x999138", VA = "0x999138")]
	private void UpdateLastGroundTouchPointPosition()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x999480", Offset = "0x999480", VA = "0x999480")]
	private void DisableWheelRotation()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x999488", Offset = "0x999488", VA = "0x999488")]
	public WheelRotator()
	{
	}
}
[Token(Token = "0x2000273")]
public class CartAttackTargetController : MonoBehaviour, IAttackTarget
{
	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonView targetView;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnGetHit;

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x999490", Offset = "0x999490", VA = "0x999490", Slot = "5")]
	public void GetHit(AttackInfo attackInfo)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x999558", Offset = "0x999558", VA = "0x999558", Slot = "4")]
	public int GetPhotonID()
	{
		return default(int);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x999574", Offset = "0x999574", VA = "0x999574")]
	public CartAttackTargetController()
	{
	}
}
[Token(Token = "0x2000274")]
public class DwarfAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <PlayKneelingAnimationCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DwarfAnimatorController <>4__this;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x99A360", Offset = "0x99A360", VA = "0x99A360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x99A3A8", Offset = "0x99A3A8", VA = "0x99A3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x999E18", Offset = "0x999E18", VA = "0x999E18")]
		[DebuggerHidden]
		public <PlayKneelingAnimationCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x99A2F4", Offset = "0x99A2F4", VA = "0x99A2F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x99A2F8", Offset = "0x99A2F8", VA = "0x99A2F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x99A368", Offset = "0x99A368", VA = "0x99A368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EBB")]
	private const float minKneelingSpeed = 0.8f;

	[Token(Token = "0x4000EBC")]
	private const float maxKneelingSpeed = 1.2f;

	[Token(Token = "0x4000EBD")]
	private const float minKneelingTimeOffset = 0f;

	[Token(Token = "0x4000EBE")]
	private const float maxKneelingTimeOffset = 0.8f;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isWalking;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int isRunning;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isIdling;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int isBlockIdling;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int isKneeling;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int shout;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int blockImpact;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int speedMultiplier;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int kneelingSpeedAnimatorShash;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int shieldRunName;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int isRunningBack;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int isRotatingLeft;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int isRotatingRight;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private HealthStateController healthstateController;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds waitForKneeling;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float animationSpeedMultiplierFactor;

	[Token(Token = "0x17000172")]
	public float SpeedMultiplier
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x99957C", Offset = "0x99957C", VA = "0x99957C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x9995A0", Offset = "0x9995A0", VA = "0x9995A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public bool IsWalking
	{
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x9995C4", Offset = "0x9995C4", VA = "0x9995C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x9995E8", Offset = "0x9995E8", VA = "0x9995E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public bool IsRunning
	{
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x999614", Offset = "0x999614", VA = "0x999614")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x999638", Offset = "0x999638", VA = "0x999638")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public bool IsIdling
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x9996E0", Offset = "0x9996E0", VA = "0x9996E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x999704", Offset = "0x999704", VA = "0x999704")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public bool IsShieldIdling
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x999730", Offset = "0x999730", VA = "0x999730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x999754", Offset = "0x999754", VA = "0x999754")]
		set
		{
		}
	}

	[Token(Token = "0x17000177")]
	public bool IsKneeling
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x999780", Offset = "0x999780", VA = "0x999780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x9997A4", Offset = "0x9997A4", VA = "0x9997A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000178")]
	private bool IsRunningBack
	{
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x9997D0", Offset = "0x9997D0", VA = "0x9997D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	private bool IsRotatingLeft
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x9997FC", Offset = "0x9997FC", VA = "0x9997FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700017A")]
	private bool IsRotatingRight
	{
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x999828", Offset = "0x999828", VA = "0x999828")]
		set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	private float KneelingSpeed
	{
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x999854", Offset = "0x999854", VA = "0x999854")]
		set
		{
		}
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x999878", Offset = "0x999878", VA = "0x999878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x9998AC", Offset = "0x9998AC", VA = "0x9998AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x999A80", Offset = "0x999A80", VA = "0x999A80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x99987C", Offset = "0x99987C", VA = "0x99987C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x999BB8", Offset = "0x999BB8", VA = "0x999BB8")]
	public void SetSpeedMultiplierBasedOnDwarfSpeed(float dwarfSpeed)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x999BC4", Offset = "0x999BC4", VA = "0x999BC4")]
	public void Shout()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x999BE8", Offset = "0x999BE8", VA = "0x999BE8")]
	public void BlockHit()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x999C0C", Offset = "0x999C0C", VA = "0x999C0C")]
	public void PlayShieldingAnim()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x999B68", Offset = "0x999B68", VA = "0x999B68")]
	public void PlayRunningAnim()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x999C5C", Offset = "0x999C5C", VA = "0x999C5C")]
	public void PlayRunningBackAnim()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x999CAC", Offset = "0x999CAC", VA = "0x999CAC")]
	public void PlayRotatingLeftAnim()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x999CFC", Offset = "0x999CFC", VA = "0x999CFC")]
	public void PlayRotatingRightAnim()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x999D4C", Offset = "0x999D4C", VA = "0x999D4C")]
	public void PlayIdleAnim()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x999698", Offset = "0x999698", VA = "0x999698")]
	public void SetRandomAnimFrame(int name, int layer)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x999D9C", Offset = "0x999D9C", VA = "0x999D9C")]
	public void SetReferences(Animator animator)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x999A60", Offset = "0x999A60", VA = "0x999A60")]
	private void PlayKneelingAnimation([Optional] HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x999DA4", Offset = "0x999DA4", VA = "0x999DA4")]
	[IteratorStateMachine(typeof(<PlayKneelingAnimationCoroutine>d__64))]
	private IEnumerator PlayKneelingAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x999E40", Offset = "0x999E40", VA = "0x999E40", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x99A0CC", Offset = "0x99A0CC", VA = "0x99A0CC")]
	public DwarfAnimatorController()
	{
	}
}
[Token(Token = "0x2000276")]
public class DwarfAnimSoundCaller : MonoBehaviour
{
	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DwarfsSoundController dwarfsSoundController;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x99A3B0", Offset = "0x99A3B0", VA = "0x99A3B0")]
	private void PlayWalkSound()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x99A3EC", Offset = "0x99A3EC", VA = "0x99A3EC")]
	private void PlayShieldImpactSound()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x99A428", Offset = "0x99A428", VA = "0x99A428")]
	private void PlayeArmorWalkSound()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x99A464", Offset = "0x99A464", VA = "0x99A464")]
	public DwarfAnimSoundCaller()
	{
	}
}
[Serializable]
[Token(Token = "0x2000277")]
public class DwarfReferences
{
	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("RandomDwarfWeaponController")]
	public List<GameObject> dwarfWeapons;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("DwarfAnimatorController")]
	public Animator animator;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("DwarfController")]
	public Transform modelTransform;

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x99A46C", Offset = "0x99A46C", VA = "0x99A46C")]
	public DwarfReferences()
	{
	}
}
[Token(Token = "0x2000278")]
public class DwarfsSoundController : MonoBehaviour
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSourceController audioSourceController;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] walkSounds;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] shieldImpactSounds;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] armorWalkSounds;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x99A440", Offset = "0x99A440", VA = "0x99A440")]
	public void PlayeArmorWalkSound()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x99A3C8", Offset = "0x99A3C8", VA = "0x99A3C8")]
	public void PlayWalkSound()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x99A404", Offset = "0x99A404", VA = "0x99A404")]
	public void PlayeShieldImpactSound()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x99A474", Offset = "0x99A474", VA = "0x99A474")]
	public DwarfsSoundController()
	{
	}
}
[Token(Token = "0x2000279")]
public class FormationColumnTag : MonoBehaviour
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ColumnTag columnTag;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int orderInCollumn;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform constDistanceTo;

	[Token(Token = "0x1700017E")]
	public ColumnTag ColumnTag
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x99A47C", Offset = "0x99A47C", VA = "0x99A47C")]
		get
		{
			return default(ColumnTag);
		}
	}

	[Token(Token = "0x1700017F")]
	public int OrderInCollumn
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x99A484", Offset = "0x99A484", VA = "0x99A484")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000180")]
	public Transform ConstDistanceTo
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x99A48C", Offset = "0x99A48C", VA = "0x99A48C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x99A494", Offset = "0x99A494", VA = "0x99A494")]
	public FormationColumnTag()
	{
	}
}
[Token(Token = "0x200027A")]
public enum ColumnTag
{
	[Token(Token = "0x4000EE0")]
	LeftColumn,
	[Token(Token = "0x4000EE1")]
	MiddleColumn,
	[Token(Token = "0x4000EE2")]
	RightColumn
}
[Token(Token = "0x200027B")]
public class RandomDwarfWeaponController : MonoBehaviour
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> dwarfWeapons;

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x99A49C", Offset = "0x99A49C", VA = "0x99A49C")]
	public void RandomizeWeapon()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x99A64C", Offset = "0x99A64C", VA = "0x99A64C")]
	public void SetReferences(List<GameObject> dwarfWeapons)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x99A654", Offset = "0x99A654", VA = "0x99A654")]
	public RandomDwarfWeaponController()
	{
	}
}
[Token(Token = "0x200027C")]
public class CartDirectionIndicator : MonoBehaviour, IResetable, ISettable
{
	[Token(Token = "0x4000EE4")]
	private const float rayMaxDistance = 10f;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int materialColorID;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer renderer;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float heightAboveTerrain;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float vanishingSpeed;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float appearingSpeed;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color defaultColor;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color currentColor;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Spline spline;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentDistance;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 position;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 forward;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit raycastHit;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion rotation;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PayloadGate gate;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isVanishing;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float currentAlpha;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float targetAlpha;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isAppearing;

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x99A65C", Offset = "0x99A65C", VA = "0x99A65C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x99A74C", Offset = "0x99A74C", VA = "0x99A74C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x99AB68", Offset = "0x99AB68", VA = "0x99AB68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x99AC6C", Offset = "0x99AC6C", VA = "0x99AC6C")]
	public void Initialize(float targetAlpha, Spline spline, float currentDistance)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x99A880", Offset = "0x99A880", VA = "0x99A880")]
	private void UpdateTransform()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x99AAD4", Offset = "0x99AAD4", VA = "0x99AAD4")]
	private void UpdateAppearing()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x99A9A8", Offset = "0x99A9A8", VA = "0x99A9A8")]
	private void UpdateVanishing()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x99AD28", Offset = "0x99AD28", VA = "0x99AD28", Slot = "5")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x99ADBC", Offset = "0x99ADBC", VA = "0x99ADBC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x99AE28", Offset = "0x99AE28", VA = "0x99AE28")]
	public CartDirectionIndicator()
	{
	}
}
[Token(Token = "0x200027D")]
public class PayloadProgressDisplayController : MonoBehaviour
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PayloadGameTimeController payloadGameTimeController;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text gameTimeText;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text scoreboardTimeText;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text stageProgressText;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Slider stateProgressSlider;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PayloadStageController payloadStageController;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float stagesCount;

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x99AF0C", Offset = "0x99AF0C", VA = "0x99AF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x99B380", Offset = "0x99B380", VA = "0x99B380")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x99B748", Offset = "0x99B748", VA = "0x99B748")]
	private void UpdateTimeText(float value)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x99B344", Offset = "0x99B344", VA = "0x99B344")]
	private void UpdateProgressInfo()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x99B7A0", Offset = "0x99B7A0", VA = "0x99B7A0")]
	private void UpdateProgressInfo(int currentStageIndex)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x99B928", Offset = "0x99B928", VA = "0x99B928")]
	private void ShowFinishedProgressInfo()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x99BA78", Offset = "0x99BA78", VA = "0x99BA78")]
	public PayloadProgressDisplayController()
	{
	}
}
[Token(Token = "0x200027E")]
public class PerformanceChecker : MonoBehaviour
{
	[Token(Token = "0x4000F03")]
	private const int longDisplayInteval = 1080;

	[Token(Token = "0x4000F04")]
	private const int shortDisplayInterval = 360;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isPaused;

	[Token(Token = "0x4000F06")]
	private const string shortDescription = "short period ";

	[Token(Token = "0x4000F07")]
	private const string longDescription = "long period ";

	[Token(Token = "0x4000F08")]
	private const string waveDescription = "wave period ";

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntervalFPSData shortData;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntervalFPSData longData;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntervalFPSData waveData;

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x99BA80", Offset = "0x99BA80", VA = "0x99BA80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x99BA84", Offset = "0x99BA84", VA = "0x99BA84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x99BA88", Offset = "0x99BA88", VA = "0x99BA88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x99BA94", Offset = "0x99BA94", VA = "0x99BA94")]
	private void ProcessShortIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x99BAB0", Offset = "0x99BAB0", VA = "0x99BAB0")]
	private static void ProcessIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x99BB38", Offset = "0x99BB38", VA = "0x99BB38")]
	private static float MsToFPS(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x99BB48", Offset = "0x99BB48", VA = "0x99BB48")]
	private static void TryToDisplayResult(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x99BB78", Offset = "0x99BB78", VA = "0x99BB78")]
	private static void DisplayResult(IntervalFPSData fpsData)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x99BCB0", Offset = "0x99BCB0", VA = "0x99BCB0")]
	private static float FPSToMs(float fps)
	{
		return default(float);
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x99BB08", Offset = "0x99BB08", VA = "0x99BB08")]
	private static void TryToResetFPSData(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x99BCC0", Offset = "0x99BCC0", VA = "0x99BCC0")]
	private void ProcessLongIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x99BCDC", Offset = "0x99BCDC", VA = "0x99BCDC")]
	private static void ProcessWaveIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x99BD3C", Offset = "0x99BD3C", VA = "0x99BD3C")]
	public static void TryToResetWavesFPSData()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x99BDD4", Offset = "0x99BDD4", VA = "0x99BDD4")]
	public static void PauseProcessingWaveData(int waveNumber)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x99BDD8", Offset = "0x99BDD8", VA = "0x99BDD8")]
	public static void PauseCountingFPS()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x99BE34", Offset = "0x99BE34", VA = "0x99BE34")]
	public PerformanceChecker()
	{
	}
}
[Token(Token = "0x200027F")]
public static class PhotonCustomTypesForElvenAssassin
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool registered;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memPlayerFeats;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x99BE3C", Offset = "0x99BE3C", VA = "0x99BE3C")]
	public static void Register()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x99BFE0", Offset = "0x99BFE0", VA = "0x99BFE0")]
	private static short SerializePlayerFeats(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x99C1B8", Offset = "0x99C1B8", VA = "0x99C1B8")]
	private static object DeserializePlayerFeats(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x2000280")]
public class PlatfromDependentActivator : MonoBehaviour
{
	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> itemsToChangeActivity;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRSDK platformToChangeActivityOn;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool activityValueToSet;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x99C3F8", Offset = "0x99C3F8", VA = "0x99C3F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x99C4DC", Offset = "0x99C4DC", VA = "0x99C4DC")]
	public PlatfromDependentActivator()
	{
	}
}
[Token(Token = "0x2000281")]
public enum ControllersState
{
	[Token(Token = "0x4000F12")]
	Pointer,
	[Token(Token = "0x4000F13")]
	Bow,
	[Token(Token = "0x4000F14")]
	Gestures
}
[Token(Token = "0x2000282")]
public enum ControllerType
{
	[Token(Token = "0x4000F16")]
	Left,
	[Token(Token = "0x4000F17")]
	Right
}
[Token(Token = "0x2000283")]
public enum GesturesState
{
	[Token(Token = "0x4000F19")]
	Point,
	[Token(Token = "0x4000F1A")]
	Open,
	[Token(Token = "0x4000F1B")]
	ThumbsUp,
	[Token(Token = "0x4000F1C")]
	Peace,
	[Token(Token = "0x4000F1D")]
	Basic,
	[Token(Token = "0x4000F1E")]
	None
}
[Token(Token = "0x2000284")]
public class GlovesFader : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000F1F")]
	private const float shaderSwitchTriggerValue = 0.9f;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftGloveOnBowTransform;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftGloveOnArrowTransform;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightGloveOnBowTransform;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightGloveOnArrowTransform;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] leftGloveSkinnedMeshRenderers;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer[] rightGloveSkinnedMeshRenderers;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera playerCamera;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float distanceStartingFading;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fadeSpeed;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Shader nonTransparentShader;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Shader transparentShader;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerMaterialsColorSetter playerMaterialsColorSetter;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distanceFromCameraToLeftGlove;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float distanceFromCameraToRightGlove;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Material> leftGloveMaterials;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Material> rightGloveMaterials;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isLeftGloveFadingIn;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isRightGloveFadingIn;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform leftGloveTransform;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform rightGloveTransform;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool areFadeableGloves;

	[Token(Token = "0x17000181")]
	public float DistanceFromCameraToLeftGlove
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x99C508", Offset = "0x99C508", VA = "0x99C508")]
		set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public float DistanceFromCameraToRightGlove
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x99C6E8", Offset = "0x99C6E8", VA = "0x99C6E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x99C854", Offset = "0x99C854", VA = "0x99C854")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x99C950", Offset = "0x99C950", VA = "0x99C950")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x99CA4C", Offset = "0x99CA4C", VA = "0x99CA4C")]
	public void SetReferences(PlayerMaterialsColorSetter playerMaterialsColorSetter)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x99CA54", Offset = "0x99CA54", VA = "0x99CA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x99CD18", Offset = "0x99CD18", VA = "0x99CD18")]
	public void InitializeGlovesFader()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x99CD74", Offset = "0x99CD74", VA = "0x99CD74")]
	private void UpdateHandsMaterials(bool areFadeableGloves)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x99C674", Offset = "0x99C674", VA = "0x99C674")]
	public void TryToChangeRenderingMode(Material gloveMaterial, bool shouldBeFade)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x99CE8C", Offset = "0x99CE8C", VA = "0x99CE8C")]
	private static void ChangeRenderingMode(Material gloveMaterial, bool shouldBeFade)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x99D0B8", Offset = "0x99D0B8", VA = "0x99D0B8")]
	private void FadeGlove(bool isLeftGlove)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x99CCF0", Offset = "0x99CCF0", VA = "0x99CCF0")]
	public void FadeGloves()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x99D3D4", Offset = "0x99D3D4", VA = "0x99D3D4")]
	private void TryToChangeRenderingMaterial()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x99D448", Offset = "0x99D448", VA = "0x99D448")]
	private void ChangeGlovesShaders()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x99D644", Offset = "0x99D644", VA = "0x99D644")]
	private void SetPropperShader(Material gloveMaterial)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x99D698", Offset = "0x99D698", VA = "0x99D698", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x99D6B8", Offset = "0x99D6B8", VA = "0x99D6B8")]
	public GlovesFader()
	{
	}
}
[Token(Token = "0x2000285")]
public class PlatformWarning : MonoBehaviour
{
	[Token(Token = "0x4000F35")]
	private const float warningTime = 2f;

	[Token(Token = "0x4000F36")]
	private const float distanceFromPlayer = 2f;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FloatingTextController floatingText;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnLocalPlayerEnter;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnLocalPlayerExit;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x99D770", Offset = "0x99D770", VA = "0x99D770")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x99D8B8", Offset = "0x99D8B8", VA = "0x99D8B8")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x99D81C", Offset = "0x99D81C", VA = "0x99D81C")]
	private bool IsLocalPlayerCamera(Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x99D92C", Offset = "0x99D92C", VA = "0x99D92C")]
	public PlatformWarning()
	{
	}
}
[Token(Token = "0x2000286")]
public abstract class PlayerDeathController : PlayerDeathControllerCore
{
	[Token(Token = "0x17000183")]
	public abstract override bool IsDead
	{
		[Token(Token = "0x6000D31")]
		get;
		[Token(Token = "0x6000D32")]
		set;
	}

	[Token(Token = "0x6000D33")]
	public abstract void InitializeWithoutPlayer();

	[Token(Token = "0x6000D34")]
	public abstract void InitializeWithPlayer();

	[Token(Token = "0x6000D35")]
	public abstract void Die(PlayerKillInfo playerKillInfo);

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x99D934", Offset = "0x99D934", VA = "0x99D934")]
	protected PlayerDeathController()
	{
	}
}
[Token(Token = "0x2000287")]
public class PlayerDeathControllerMobile : PlayerDeathControllerWave
{
	[Token(Token = "0x2000288")]
	[CompilerGenerated]
	private sealed class <DieSoundRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x99E75C", Offset = "0x99E75C", VA = "0x99E75C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0x99E7A4", Offset = "0x99E7A4", VA = "0x99E7A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x99DE38", Offset = "0x99DE38", VA = "0x99DE38")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x99E6C4", Offset = "0x99E6C4", VA = "0x99E6C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x99E6C8", Offset = "0x99E6C8", VA = "0x99E6C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x99E764", Offset = "0x99E764", VA = "0x99E764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <BlackScreenRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0x99E8B8", Offset = "0x99E8B8", VA = "0x99E8B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x99E900", Offset = "0x99E900", VA = "0x99E900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x99DED4", Offset = "0x99DED4", VA = "0x99DED4")]
		[DebuggerHidden]
		public <BlackScreenRoutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x99E7AC", Offset = "0x99E7AC", VA = "0x99E7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x99E7B0", Offset = "0x99E7B0", VA = "0x99E7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x99E8C0", Offset = "0x99E8C0", VA = "0x99E8C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028B")]
	[CompilerGenerated]
	private sealed class <RespawnWithDelay>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dalayRemain>5__2;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x99EB20", Offset = "0x99EB20", VA = "0x99EB20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x99EB68", Offset = "0x99EB68", VA = "0x99EB68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x99E33C", Offset = "0x99E33C", VA = "0x99E33C")]
		[DebuggerHidden]
		public <RespawnWithDelay>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x99E9DC", Offset = "0x99E9DC", VA = "0x99E9DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x99E9E0", Offset = "0x99E9E0", VA = "0x99E9E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x99EB28", Offset = "0x99EB28", VA = "0x99EB28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3A")]
	private const float shortDeathEffectDuration = 4.8f;

	[Token(Token = "0x4000F3B")]
	private const float longDeathEffectDuration = 7.8f;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds blackScreenDelay;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip deathSound;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isLongTimeEffectWithRespawn;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DeathIndicatorEffectController deathIndicatorEffectController;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PlayerMaterialsColorSetterMobile playerMaterialsColorSetter;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float payloadRespawnDelay;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float payloadRespawnDelaySingle;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentDeathEffectDuration;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool dieCameraEffect;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isDead;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string gameOverInfo;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AxeController> axesInHead;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x17000184")]
	public override bool IsDead
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x99D93C", Offset = "0x99D93C", VA = "0x99D93C", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x99D944", Offset = "0x99D944", VA = "0x99D944", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public override bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x99D9B0", Offset = "0x99D9B0", VA = "0x99D9B0", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x99D9B8", Offset = "0x99D9B8", VA = "0x99D9B8", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public override List<AxeController> AxesInHead
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x99D9C8", Offset = "0x99D9C8", VA = "0x99D9C8", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000187")]
	public override Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x99D9D0", Offset = "0x99D9D0", VA = "0x99D9D0", Slot = "12")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x99D9D8", Offset = "0x99D9D8", VA = "0x99D9D8", Slot = "13")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x99D9E0", Offset = "0x99D9E0", VA = "0x99D9E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x99DB08", Offset = "0x99DB08", VA = "0x99DB08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x99DC30", Offset = "0x99DC30", VA = "0x99DC30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x99DD10", Offset = "0x99DD10", VA = "0x99DD10", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x99DDB8", Offset = "0x99DDB8", VA = "0x99DDB8", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x99DDC4", Offset = "0x99DDC4", VA = "0x99DDC4")]
	[IteratorStateMachine(typeof(<DieSoundRoutine>d__34))]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x99DE60", Offset = "0x99DE60", VA = "0x99DE60")]
	[IteratorStateMachine(typeof(<BlackScreenRoutine>d__35))]
	private IEnumerator BlackScreenRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x99DEFC", Offset = "0x99DEFC", VA = "0x99DEFC")]
	private void RespawnCallback()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x99DF0C", Offset = "0x99DF0C", VA = "0x99DF0C", Slot = "14")]
	public override void Respawn()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x99E2C8", Offset = "0x99E2C8", VA = "0x99E2C8")]
	[IteratorStateMachine(typeof(<RespawnWithDelay>d__38))]
	private IEnumerator RespawnWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x99E364", Offset = "0x99E364", VA = "0x99E364", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x99DC34", Offset = "0x99DC34", VA = "0x99DC34")]
	private void TryApplyDeathEffect()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x99E21C", Offset = "0x99E21C", VA = "0x99E21C")]
	private void RemoveDeathEffect()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x99D98C", Offset = "0x99D98C", VA = "0x99D98C")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x99E578", Offset = "0x99E578", VA = "0x99E578")]
	public PlayerDeathControllerMobile()
	{
	}
}
[Token(Token = "0x200028C")]
public class PlayerDeathControllerNetwork : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerDeathController playerDeathController;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x99EB70", Offset = "0x99EB70", VA = "0x99EB70")]
	public void SetReferences(PlayerDeathController _playerDeathController)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x99EB78", Offset = "0x99EB78", VA = "0x99EB78", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x99EB9C", Offset = "0x99EB9C", VA = "0x99EB9C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x99EC8C", Offset = "0x99EC8C", VA = "0x99EC8C")]
	public PlayerDeathControllerNetwork()
	{
	}
}
[Token(Token = "0x200028D")]
public class PlayerDeathControllerPC : PlayerDeathControllerWave
{
	[Token(Token = "0x200028E")]
	[CompilerGenerated]
	private sealed class <DieSoundRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x99FCC0", Offset = "0x99FCC0", VA = "0x99FCC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x99FD08", Offset = "0x99FD08", VA = "0x99FD08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x99F450", Offset = "0x99F450", VA = "0x99F450")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x99FC28", Offset = "0x99FC28", VA = "0x99FC28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x99FC2C", Offset = "0x99FC2C", VA = "0x99FC2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x99FCC8", Offset = "0x99FCC8", VA = "0x99FCC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028F")]
	[CompilerGenerated]
	private sealed class <BlackScreenRoutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x99FE2C", Offset = "0x99FE2C", VA = "0x99FE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x99FE74", Offset = "0x99FE74", VA = "0x99FE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x99F4EC", Offset = "0x99F4EC", VA = "0x99F4EC")]
		[DebuggerHidden]
		public <BlackScreenRoutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x99FD10", Offset = "0x99FD10", VA = "0x99FD10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x99FD14", Offset = "0x99FD14", VA = "0x99FD14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x99FE34", Offset = "0x99FE34", VA = "0x99FE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[CompilerGenerated]
	private sealed class <RespawnWithDelay>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dalayRemain>5__2;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x9A0094", Offset = "0x9A0094", VA = "0x9A0094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x9A00DC", Offset = "0x9A00DC", VA = "0x9A00DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x99F8A8", Offset = "0x99F8A8", VA = "0x99F8A8")]
		[DebuggerHidden]
		public <RespawnWithDelay>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x99FF50", Offset = "0x99FF50", VA = "0x99FF50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x99FF54", Offset = "0x99FF54", VA = "0x99FF54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x9A009C", Offset = "0x9A009C", VA = "0x9A009C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F5A")]
	private const float intensity = 4f;

	[Token(Token = "0x4000F5B")]
	private const float intensityMultiplier = 4f;

	[Token(Token = "0x4000F5C")]
	private const float shortDeathEffectDuration = 4.8f;

	[Token(Token = "0x4000F5D")]
	private const float longDeathEffectDuration = 7.8f;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds blackScreenDelay;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DeathIndicatorEffectController deathIndicatorEffectController;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip deathSound;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayerMaterialsColorSetterPC playerMaterialsColorSetter;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float payloadRespawnDelay;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float payloadRespawnDelaySingle;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool deathCameraEffect;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isDead;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string gameOverInfo;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isLongTimeEffectWithRespawn;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AxeController> axesInHead;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Blur blur;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ScreenOverlay screenOverlay;

	[Token(Token = "0x1700018E")]
	public override bool IsDead
	{
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x99EC94", Offset = "0x99EC94", VA = "0x99EC94", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x99EC9C", Offset = "0x99EC9C", VA = "0x99EC9C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	private Blur Blur
	{
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x99ED08", Offset = "0x99ED08", VA = "0x99ED08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	private ScreenOverlay ScreenOverlay
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x99EDB8", Offset = "0x99EDB8", VA = "0x99EDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public override bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x99EE68", Offset = "0x99EE68", VA = "0x99EE68", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x99EE70", Offset = "0x99EE70", VA = "0x99EE70", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public override List<AxeController> AxesInHead
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x99EE7C", Offset = "0x99EE7C", VA = "0x99EE7C", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000193")]
	public override Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x99EE84", Offset = "0x99EE84", VA = "0x99EE84", Slot = "12")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x99EE8C", Offset = "0x99EE8C", VA = "0x99EE8C", Slot = "13")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x99EE94", Offset = "0x99EE94", VA = "0x99EE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x99EFBC", Offset = "0x99EFBC", VA = "0x99EFBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x99F0E4", Offset = "0x99F0E4", VA = "0x99F0E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x99F228", Offset = "0x99F228", VA = "0x99F228", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x99F3D0", Offset = "0x99F3D0", VA = "0x99F3D0", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x99F3DC", Offset = "0x99F3DC", VA = "0x99F3DC")]
	[IteratorStateMachine(typeof(<DieSoundRoutine>d__41))]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x99F478", Offset = "0x99F478", VA = "0x99F478")]
	[IteratorStateMachine(typeof(<BlackScreenRoutine>d__42))]
	private IEnumerator BlackScreenRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x99F514", Offset = "0x99F514", VA = "0x99F514")]
	private void RespawnCallback()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x99F524", Offset = "0x99F524", VA = "0x99F524", Slot = "14")]
	public override void Respawn()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x99F834", Offset = "0x99F834", VA = "0x99F834")]
	[IteratorStateMachine(typeof(<RespawnWithDelay>d__45))]
	private IEnumerator RespawnWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x99F8D0", Offset = "0x99F8D0", VA = "0x99F8D0", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x99F0E8", Offset = "0x99F0E8", VA = "0x99F0E8")]
	private void TryApplyDeathEffect()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x99F2F4", Offset = "0x99F2F4", VA = "0x99F2F4")]
	private void RemoveDeathEffect()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x99ECE4", Offset = "0x99ECE4", VA = "0x99ECE4")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x99FAE4", Offset = "0x99FAE4", VA = "0x99FAE4")]
	public PlayerDeathControllerPC()
	{
	}
}
[Token(Token = "0x2000292")]
public abstract class PlayerDeathControllerWave : PlayerDeathController
{
	[Token(Token = "0x1700019A")]
	public abstract bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6000D93")]
		get;
		[Token(Token = "0x6000D94")]
		set;
	}

	[Token(Token = "0x1700019B")]
	public abstract List<AxeController> AxesInHead
	{
		[Token(Token = "0x6000D95")]
		get;
	}

	[Token(Token = "0x1700019C")]
	public abstract Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6000D96")]
		get;
		[Token(Token = "0x6000D97")]
		set;
	}

	[Token(Token = "0x6000D98")]
	public abstract override void Die(PlayerKillInfo playerKillInfo);

	[Token(Token = "0x6000D99")]
	public abstract void Respawn();

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x99E6BC", Offset = "0x99E6BC", VA = "0x99E6BC")]
	protected PlayerDeathControllerWave()
	{
	}
}
[Token(Token = "0x2000293")]
public class PlayerDeathUIWave : MonoBehaviour
{
	[Token(Token = "0x4000F7C")]
	private const float respawnTimerMessageDuration = 0.3f;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerDeathControllerWave playerDeathController;

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x9A00E4", Offset = "0x9A00E4", VA = "0x9A00E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x9A01D0", Offset = "0x9A01D0", VA = "0x9A01D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x9A02BC", Offset = "0x9A02BC", VA = "0x9A02BC")]
	public void SetReferences(PlayerDeathControllerWave _playerDeathController)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x9A02C4", Offset = "0x9A02C4", VA = "0x9A02C4")]
	private void ShowRespawnTimer(float timerValue)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x9A0370", Offset = "0x9A0370", VA = "0x9A0370")]
	public PlayerDeathUIWave()
	{
	}
}
[Token(Token = "0x2000294")]
public class PlayerExperienceGiver : MonoBehaviourPun
{
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x9A0378", Offset = "0x9A0378", VA = "0x9A0378")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x9A0558", Offset = "0x9A0558", VA = "0x9A0558")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x9A0738", Offset = "0x9A0738", VA = "0x9A0738")]
	private void SaveEarnedExp(int arg)
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x9A0800", Offset = "0x9A0800", VA = "0x9A0800")]
	[PunRPC]
	private void RpcSaveEarnedExp()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x9A0804", Offset = "0x9A0804", VA = "0x9A0804")]
	private void SaveEarnedExp()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x9A0920", Offset = "0x9A0920", VA = "0x9A0920")]
	public PlayerExperienceGiver()
	{
	}
}
[Token(Token = "0x2000295")]
public class PlayerProgressionLoader : MonoBehaviour
{
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x9A0928", Offset = "0x9A0928", VA = "0x9A0928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x9A09A8", Offset = "0x9A09A8", VA = "0x9A09A8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x9A0AA4", Offset = "0x9A0AA4", VA = "0x9A0AA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x9A09AC", Offset = "0x9A09AC", VA = "0x9A09AC")]
	private void LoadPlayerProgression()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x9A0B24", Offset = "0x9A0B24", VA = "0x9A0B24")]
	private void LoadDefaultState()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x9A11C4", Offset = "0x9A11C4", VA = "0x9A11C4")]
	private void ReloadPlayerProgression()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x9A11C8", Offset = "0x9A11C8", VA = "0x9A11C8")]
	public PlayerProgressionLoader()
	{
	}
}
[Token(Token = "0x2000296")]
public class PlayerSpellSlotsUpdater : MonoBehaviour
{
	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpellInGameSlot> spellInGameSlots;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x9A11D0", Offset = "0x9A11D0", VA = "0x9A11D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x9A12D8", Offset = "0x9A12D8", VA = "0x9A12D8")]
	public PlayerSpellSlotsUpdater()
	{
	}
}
[Token(Token = "0x2000298")]
public class PlayerTournamentJoiningScreenController : MonoBehaviour
{
	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject overlay;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x9A1370", Offset = "0x9A1370", VA = "0x9A1370")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x9A1404", Offset = "0x9A1404", VA = "0x9A1404")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x9A1484", Offset = "0x9A1484", VA = "0x9A1484")]
	private void HideOverlay()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x9A14A4", Offset = "0x9A14A4", VA = "0x9A14A4")]
	public PlayerTournamentJoiningScreenController()
	{
	}
}
[Token(Token = "0x2000299")]
public class PlayerEquipment : MonoBehaviour
{
	[Token(Token = "0x4000F82")]
	private const string PlayerGoldString = "PlayerGold";

	[Token(Token = "0x4000F83")]
	private const string PlayerBowString = "PlayerBow";

	[Token(Token = "0x4000F84")]
	private const string PlayerHelmetString = "PlayerHelmet";

	[Token(Token = "0x4000F85")]
	private const string PreviousBowString = "PreviousBow";

	[Token(Token = "0x4000F86")]
	private const string PreviousHelmetString = "PreviousHelmet";

	[Token(Token = "0x4000F87")]
	private const string StandardBowAndHelmetString = "StandardBowAndHelmet";

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int cachedWaveGold;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string cachedBowName;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string cachedHelmetName;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int cachedPlayerGold;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static bool exist;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<int> OnPlayerGoldChange;

	[Token(Token = "0x1700019D")]
	public static Dictionary<string, bool> BoughtItems
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x9A14AC", Offset = "0x9A14AC", VA = "0x9A14AC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x9A1504", Offset = "0x9A1504", VA = "0x9A1504")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public static int CachedPlayerGold
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x9A1A6C", Offset = "0x9A1A6C", VA = "0x9A1A6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x9A0C84", Offset = "0x9A0C84", VA = "0x9A0C84")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public static int Gold
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x9A1AC4", Offset = "0x9A1AC4", VA = "0x9A1AC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x9A1B58", Offset = "0x9A1B58", VA = "0x9A1B58")]
		set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public static string EquipedBowName
	{
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x9A1C24", Offset = "0x9A1C24", VA = "0x9A1C24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x9A1D70", Offset = "0x9A1D70", VA = "0x9A1D70")]
		set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public static string EquipedHelmetName
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x9A1E1C", Offset = "0x9A1E1C", VA = "0x9A1E1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x9A1F6C", Offset = "0x9A1F6C", VA = "0x9A1F6C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public static string PreviousEquipedBow
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x9A2A88", Offset = "0x9A2A88", VA = "0x9A2A88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x9A2A14", Offset = "0x9A2A14", VA = "0x9A2A14")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public static string PreviousEquipedHelmet
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x9A2960", Offset = "0x9A2960", VA = "0x9A2960")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x9A2B38", Offset = "0x9A2B38", VA = "0x9A2B38")]
		set
		{
		}
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x9A1564", Offset = "0x9A1564", VA = "0x9A1564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x9A1834", Offset = "0x9A1834", VA = "0x9A1834")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x9A1838", Offset = "0x9A1838", VA = "0x9A1838")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x9A2018", Offset = "0x9A2018", VA = "0x9A2018")]
	public static void SetEquippedItemsBonuses(ItemsWithBonuses itemBonusesList)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x9A2308", Offset = "0x9A2308", VA = "0x9A2308")]
	private void GiveGoldToPlayer(int amountOfGold, Vector3 arg2)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x9A2398", Offset = "0x9A2398", VA = "0x9A2398")]
	public static void SetIsItemBought(EquipmentItemKey itemKey, bool isBought)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x9A24F4", Offset = "0x9A24F4", VA = "0x9A24F4")]
	public static void SetIsItemBoughtCached(EquipmentItemKey itemKey, bool isBought)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x9A259C", Offset = "0x9A259C", VA = "0x9A259C")]
	public static void SetIsItemBoughtCached(string itemKey, bool isBought)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x9A265C", Offset = "0x9A265C", VA = "0x9A265C")]
	public static void GiveGoldOnWaveEnd(int waveCount)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x9A26A8", Offset = "0x9A26A8", VA = "0x9A26A8")]
	public static void SaveGold()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x9A27F4", Offset = "0x9A27F4", VA = "0x9A27F4")]
	public static void SetIsItemUsed(EquipmentItemType equipmentItemType, EquipmentItemKey equipmentItemKey)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x9A2BAC", Offset = "0x9A2BAC", VA = "0x9A2BAC")]
	public static bool GetIsItemUsed(EquipmentItemType equipmentItemType, EquipmentItemKey equipmentItemKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x9A2E48", Offset = "0x9A2E48", VA = "0x9A2E48")]
	public static void InitEquipment()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x9A3300", Offset = "0x9A3300", VA = "0x9A3300")]
	public static bool GetIsItemBoughtOnline(EquipmentItemKey itemKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x9A0D1C", Offset = "0x9A0D1C", VA = "0x9A0D1C")]
	public static void InitEquipmentWithDefaults()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x9A2D6C", Offset = "0x9A2D6C", VA = "0x9A2D6C")]
	public static bool GetIsItemBought(string itemName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x9A33A4", Offset = "0x9A33A4", VA = "0x9A33A4")]
	private static bool IsDefaultItem(string itemName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x9A3454", Offset = "0x9A3454", VA = "0x9A3454")]
	public static EquipmentItemType GetEquipmentTypeFromEquipmentKey(EquipmentItemKey equipmentKey)
	{
		return default(EquipmentItemType);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x9A3518", Offset = "0x9A3518", VA = "0x9A3518")]
	public static List<EquipmentItemKey> GetAllSetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x9A3720", Offset = "0x9A3720", VA = "0x9A3720")]
	public static List<EquipmentItemKey> GetAllHelmetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x9A3928", Offset = "0x9A3928", VA = "0x9A3928")]
	public static List<EquipmentItemKey> GetAllBowKeys()
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x9A3B30", Offset = "0x9A3B30", VA = "0x9A3B30")]
	public static void ClearCachedBowAndHelmet()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x9A3BE0", Offset = "0x9A3BE0", VA = "0x9A3BE0")]
	public PlayerEquipment()
	{
	}
}
[Token(Token = "0x200029B")]
public class PlayerSpell
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AbilityType spellType;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int level;

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x9A4004", Offset = "0x9A4004", VA = "0x9A4004")]
	public PlayerSpell(AbilityType spellType, int level)
	{
	}
}
[Token(Token = "0x200029C")]
public class PlayerSpells : MonoBehaviour
{
	[Token(Token = "0x4000F96")]
	private const float baseCooldownDivider = 0.8f;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PlayerSpellSlot> cachedPlayerSpellSlots;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PlayerSpell> cachedPlayerSpells;

	[Token(Token = "0x170001A4")]
	public static List<PlayerSpellSlot> CachedPlayerSpellSlots
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x9A4030", Offset = "0x9A4030", VA = "0x9A4030")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	public static List<PlayerSpell> CachedPlayerSpells
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x9A4088", Offset = "0x9A4088", VA = "0x9A4088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x9A40E0", Offset = "0x9A40E0", VA = "0x9A40E0")]
	public static PlayerSpellSlot GetSpellSlotBySlotPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x9A4510", Offset = "0x9A4510", VA = "0x9A4510")]
	public static void SetSpellSlot(SlotPostion slotPosition, AbilityType spell)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x9A4758", Offset = "0x9A4758", VA = "0x9A4758")]
	public static void SetCachedSpellSlot(SlotPostion slotPosition, AbilityType spell)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x9A4950", Offset = "0x9A4950", VA = "0x9A4950")]
	public static void ClearSpellSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x9A4AC8", Offset = "0x9A4AC8", VA = "0x9A4AC8")]
	public static bool HasSpellSlot(SlotPostion slotPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x994A54", Offset = "0x994A54", VA = "0x994A54")]
	public static int GetSpellLevel(AbilityType spellType)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x9A4ED8", Offset = "0x9A4ED8", VA = "0x9A4ED8")]
	public static void SetSpellLevel(AbilityType spellType, int level)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x9A510C", Offset = "0x9A510C", VA = "0x9A510C")]
	public static void SetCachedSpellLevel(AbilityType spellType, int level)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x9A5304", Offset = "0x9A5304", VA = "0x9A5304")]
	public static void ClearCachedSpellsAndSpellsSlots()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x9A53DC", Offset = "0x9A53DC", VA = "0x9A53DC")]
	public static void ClearSpellsData()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x9A5A78", Offset = "0x9A5A78", VA = "0x9A5A78")]
	public static int GetCooldownValue(AbilityData abilityData)
	{
		return default(int);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x9A5B24", Offset = "0x9A5B24", VA = "0x9A5B24")]
	public PlayerSpells()
	{
	}
}
[Token(Token = "0x20002A7")]
public class PlayerSpellSlot
{
	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SlotPostion slotPosition;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AbilityType spellType;

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x9A44E4", Offset = "0x9A44E4", VA = "0x9A44E4")]
	public PlayerSpellSlot(SlotPostion slotPosition, AbilityType spellType)
	{
	}
}
[Token(Token = "0x20002A8")]
public class PrefabMigrator : MonoBehaviour
{
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x9A5E38", Offset = "0x9A5E38", VA = "0x9A5E38")]
	public PrefabMigrator()
	{
	}
}
[Token(Token = "0x20002A9")]
public class RainSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirstRain;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SecondRain;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool secondRain;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x9A5E40", Offset = "0x9A5E40", VA = "0x9A5E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x9A5E9C", Offset = "0x9A5E9C", VA = "0x9A5E9C")]
	public RainSwitcher()
	{
	}
}
[Token(Token = "0x20002AA")]
public class RandomizeLight : MonoBehaviour
{
	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x9A5EA4", Offset = "0x9A5EA4", VA = "0x9A5EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x9A5F14", Offset = "0x9A5F14", VA = "0x9A5F14")]
	public RandomizeLight()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ArcherReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Components")]
	[SerializeField]
	private OrcArcherController orcArcherController;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Mobile References")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootControllerMobile;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandlerMobile;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("PC References")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootControllerPC;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandlerPC;

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x9A5F1C", Offset = "0x9A5F1C", VA = "0x9A5F1C", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x9A605C", Offset = "0x9A605C", VA = "0x9A605C")]
	public ArcherReferenceSetter()
	{
	}
}
[Token(Token = "0x20002AC")]
public class ArrowSpellsParticlesSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShowArrowSpellParticle showArrowSpellParticle;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("FireParticles")]
	[SerializeField]
	private ParticleSystem fireParticlesPC;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem fireParticlesMOBILE;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("IceParticles")]
	private ParticleSystem iceParticlesPC;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem iceParticlesMOBILE;

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x9A6064", Offset = "0x9A6064", VA = "0x9A6064", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x9A6188", Offset = "0x9A6188", VA = "0x9A6188")]
	public ArrowSpellsParticlesSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AD")]
public class AxeReferences
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Sword;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SwordOnBack;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Axe;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer AxeRenderer;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AxeParentBone;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material axeMaterial;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x9A6190", Offset = "0x9A6190", VA = "0x9A6190")]
	public AxeReferences()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AE")]
public class DragonReferences
{
	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("GameObject DragonBoss:")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bodyMaterial;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x9A6198", Offset = "0x9A6198", VA = "0x9A6198")]
	public DragonReferences()
	{
	}
}
[Token(Token = "0x20002AF")]
public class DragonReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Componenets")]
	[SerializeField]
	private SkinnedMeshRenderer bodySkinnedMeshRenderer;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Mobile References")]
	private DragonReferences dragonReferencesMobile;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("PC References")]
	private DragonReferences dragonReferencesPC;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x9A61A0", Offset = "0x9A61A0", VA = "0x9A61A0", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x9A6264", Offset = "0x9A6264", VA = "0x9A6264")]
	public void SetRenderers(DragonReferences dragonReferences)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x9A62AC", Offset = "0x9A62AC", VA = "0x9A62AC")]
	public DragonReferenceSetter()
	{
	}
}
[Token(Token = "0x20002B0")]
public class HelmetsSetterInMenu : MonoBehaviour
{
	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlayerHelmetsSetter> helmetsSetters;

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x9A62B4", Offset = "0x9A62B4", VA = "0x9A62B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x9A64D4", Offset = "0x9A64D4", VA = "0x9A64D4")]
	public HelmetsSetterInMenu()
	{
	}
}
[Token(Token = "0x20002B1")]
public class IceShieldReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Componenets")]
	private IceShield iceShield;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Mobile References")]
	[SerializeField]
	private ScalerOverTime scalerOverTimeMobile;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Mobile References")]
	[SerializeField]
	private GameObject abilityMeshMobile;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("PC References")]
	[SerializeField]
	private ScalerOverTime scalerOverTimePC;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("PC References")]
	[SerializeField]
	private GameObject abilityMeshPC;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x9A64DC", Offset = "0x9A64DC", VA = "0x9A64DC", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x9A65B4", Offset = "0x9A65B4", VA = "0x9A65B4")]
	public IceShieldReferenceSetter()
	{
	}
}
[Token(Token = "0x20002B2")]
public class KamikazeReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KamikazeAttackPlayer kamikazeAttackPlayer;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController mobileExplosiveBarrelController;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExplosiveBarrelController pCExplosiveBarrelController;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x9A65BC", Offset = "0x9A65BC", VA = "0x9A65BC", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x9A66FC", Offset = "0x9A66FC", VA = "0x9A66FC")]
	public KamikazeReferenceSetter()
	{
	}
}
[Token(Token = "0x20002B3")]
public class LobbyReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LobbyWindowsController lobbyWindowsController;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ServerListController serverListControllerStandard;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController serverListControllerTournament;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x9A6704", Offset = "0x9A6704", VA = "0x9A6704", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x9A6774", Offset = "0x9A6774", VA = "0x9A6774")]
	public LobbyReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B4")]
public class OrcReferences
{
	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("SlowingController")]
	public BodyFreezeEffect SlowingEffect;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("OrcController")]
	public DeathAnimAdjuster DeathAnimAdjuster;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("OrcFreezeController")]
	public List<Renderer> FreezeRenderers;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material IceMaterial;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material DefaultMaterial;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material IceAxeMaterial;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ForceDirectionExploderController FrontCollider;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ForceDirectionExploderController BackCollider;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("BodyDissapearController")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("IceExplosionParticlesController")]
	public ParticleSystem OrcExplosionParticleSystemFog;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem OrcExplosionParticleSystemFragments;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("OrcAnimatorController/OrcAnimatorSynchronizer")]
	public Animator Animator;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SwordInHand;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject SwordOnBack;

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x9A677C", Offset = "0x9A677C", VA = "0x9A677C")]
	public OrcReferences()
	{
	}
}
[Token(Token = "0x20002B5")]
public class PlayerHelmetsSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<MeshRenderer> helmetsRenderers;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScriptableObjectPlayerHelmets helmetsMaterialsScriptableObject;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x9A6784", Offset = "0x9A6784", VA = "0x9A6784", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x9A63FC", Offset = "0x9A63FC", VA = "0x9A63FC")]
	public void SetMaterialsDependingOnPlatform()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x9A6788", Offset = "0x9A6788", VA = "0x9A6788")]
	private void SetMaterials(List<Material> helmetsMaterials)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x9A685C", Offset = "0x9A685C", VA = "0x9A685C")]
	public PlayerHelmetsSetter()
	{
	}
}
[Token(Token = "0x20002B6")]
public class PlayerMenuReferenceSetter : MonoBehaviour
{
	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Renderer> gauntletRenderers;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerColorSettings playerColorSetterMobile;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayerColorSettings playerColorSetterPC;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x9A6864", Offset = "0x9A6864", VA = "0x9A6864")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x9A69A0", Offset = "0x9A69A0", VA = "0x9A69A0")]
	[ContextMenu("Get Renders")]
	private void GetRenderers()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x9A6B1C", Offset = "0x9A6B1C", VA = "0x9A6B1C")]
	public PlayerMenuReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B8")]
public class PlayerReferences
{
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("RPCCaller/PI/PC/TPH")]
	public PlayerDeathController PlayerDeathController;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("PlayerColorSetter")]
	public PlayerMaterialsColorSetter PlayerMaterialsColorSetter;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("PlayerColorSetter")]
	public float timeUntilRespawn;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x9A6C58", Offset = "0x9A6C58", VA = "0x9A6C58")]
	public PlayerReferences()
	{
	}
}
[Token(Token = "0x20002B9")]
public class SpellReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[RequireInterface(typeof(IAbility))]
	private UnityEngine.Object _ablity;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem particleSystemPC;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem particleSystemMobile;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IAbility ablity;

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x9A6C60", Offset = "0x9A6C60", VA = "0x9A6C60", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x9A6D74", Offset = "0x9A6D74", VA = "0x9A6D74")]
	private void SetSpellParticleSystem(ParticleSystem particleSystemToSet)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x9A6E20", Offset = "0x9A6E20", VA = "0x9A6E20")]
	public SpellReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BA")]
public class TrollReferences
{
	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Slowing Controller")]
	public BodyFreezeEffect BodyVisualEffect;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("GameObject BodyMesh:")]
	public Material bodyMaterial;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material addMaterial;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinQuality skinQuality;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("GameObject Helmet:")]
	public Material helmetMaterial;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("GameObject BodyMesh and Helmet:")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x9A6E28", Offset = "0x9A6E28", VA = "0x9A6E28")]
	public TrollReferences()
	{
	}
}
[Token(Token = "0x20002BB")]
public class TrollReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Components")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer helmetRenderer;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Header("Mobile References")]
	private TrollReferences trollReferencesMobile;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("PC References")]
	private TrollReferences trollReferencesMobilePC;

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x9A6E30", Offset = "0x9A6E30", VA = "0x9A6E30", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x9A6EF4", Offset = "0x9A6EF4", VA = "0x9A6EF4")]
	private void SetRenderers(TrollReferences trollReferences)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x9A708C", Offset = "0x9A708C", VA = "0x9A708C")]
	public TrollReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BC")]
public class WolfReferences
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Slowing Controller")]
	public BodyFreezeEffect SlowingEffect;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Freeze controll")]
	public List<Renderer> FreezeRenderers;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material IceMaterial;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material DefaultMaterial;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ForceDirectionExploderController FrontCollider;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ForceDirectionExploderController BackCollider;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Body Dissapear Controller")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("IceExplosionParticlesController")]
	public ParticleSystem WolfExplosionParticleSystemFog;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem WolfExplosionParticleSystemFragments;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Animator")]
	public Animator Animator;

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x9A7094", Offset = "0x9A7094", VA = "0x9A7094")]
	public WolfReferences()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BD")]
public class WyvernReferences
{
	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("WyvernController")]
	public GameObject WyvernBody;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallController FallController;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("WyvernAnimatorController/WyvernAnimatorSynchronizer")]
	public Animator Animator;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("BodyDissapearController")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("WyvernFreezeController")]
	public Material DefaultMaterial;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Renderer> Renderers;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider[] CollidersToEnable;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FallController fallControllerPC;

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x9A709C", Offset = "0x9A709C", VA = "0x9A709C")]
	public WyvernReferences()
	{
	}
}
[Token(Token = "0x20002BE")]
public class WyvernReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Components")]
	private WyvernAnimatorController wyvernAnimatorController;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernFreezeController wyvernFreezeController;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WyvernArrowKilledController wyvernArrowKilledController;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Mobile References")]
	private WyvernReferences wyvernReferencesMobile;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Header("PC References")]
	private WyvernReferences wyvernReferencesPC;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x9A70A4", Offset = "0x9A70A4", VA = "0x9A70A4", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x9A7168", Offset = "0x9A7168", VA = "0x9A7168")]
	private void SetReferences(WyvernReferences wyvernReferences)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x9A71FC", Offset = "0x9A71FC", VA = "0x9A71FC")]
	public WyvernReferenceSetter()
	{
	}
}
[Token(Token = "0x20002BF")]
public class ResetFirstTime : MonoBehaviour
{
	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x9A7204", Offset = "0x9A7204", VA = "0x9A7204")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x9A72D0", Offset = "0x9A72D0", VA = "0x9A72D0")]
	public ResetFirstTime()
	{
	}
}
[Token(Token = "0x20002C0")]
public class rotateObject : MonoBehaviour
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int speed;

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x9A72D8", Offset = "0x9A72D8", VA = "0x9A72D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x9A7380", Offset = "0x9A7380", VA = "0x9A7380")]
	public rotateObject()
	{
	}
}
[Token(Token = "0x20002C1")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x9A7390", Offset = "0x9A7390", VA = "0x9A7390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x9A7464", Offset = "0x9A7464", VA = "0x9A7464")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20002C2")]
[CreateAssetMenu(fileName = "HelmetsMaterials", menuName = "HelmetsMaterials", order = 2)]
public class ScriptableObjectPlayerHelmets : ScriptableObject
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Material> helmetsMaterialsPC;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Material> helmetsMaterialsMobile;

	[Token(Token = "0x170001A6")]
	public List<Material> HelmetsMaterialsPC
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x9A746C", Offset = "0x9A746C", VA = "0x9A746C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public List<Material> HelmetsMaterialsMobile
	{
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x9A7474", Offset = "0x9A7474", VA = "0x9A7474")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x9A747C", Offset = "0x9A747C", VA = "0x9A747C")]
	public ScriptableObjectPlayerHelmets()
	{
	}
}
[Token(Token = "0x20002C3")]
public class ShowArrowSpellParticle : MonoBehaviour, IResetable
{
	[Token(Token = "0x20002C4")]
	private enum SoundState
	{
		[Token(Token = "0x400101E")]
		none,
		[Token(Token = "0x400101F")]
		start,
		[Token(Token = "0x4001020")]
		stop
	}

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellSelectController spellSellectController;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem fireParticle;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem iceParticle;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x9A7484", Offset = "0x9A7484", VA = "0x9A7484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x9A763C", Offset = "0x9A763C", VA = "0x9A763C")]
	private void SetSpellCastEffect(AbilityParticleType type)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x9A7760", Offset = "0x9A7760", VA = "0x9A7760")]
	private static bool IsPcQuality()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x9A6158", Offset = "0x9A6158", VA = "0x9A6158")]
	public void SetReferences(ParticleSystem fireParticleToSet, ParticleSystem iceParticleToSet)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x9A7720", Offset = "0x9A7720", VA = "0x9A7720")]
	private bool AreParticleSystemPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x9A77C0", Offset = "0x9A77C0", VA = "0x9A77C0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x9A77C8", Offset = "0x9A77C8", VA = "0x9A77C8")]
	public ShowArrowSpellParticle()
	{
	}
}
[Token(Token = "0x20002C5")]
public class SkyboxExposureSwitch : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(1f, 5f)]
	public float normalIntensity;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(1f, 5f)]
	public float thunderIntensity;

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x9A77D0", Offset = "0x9A77D0", VA = "0x9A77D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x9A782C", Offset = "0x9A782C", VA = "0x9A782C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x9A7888", Offset = "0x9A7888", VA = "0x9A7888")]
	public SkyboxExposureSwitch()
	{
	}
}
[Token(Token = "0x20002C6")]
public class SlotSelectScreen : MonoBehaviour
{
	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] itemsToDisable;

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x9A7890", Offset = "0x9A7890", VA = "0x9A7890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x9A78F4", Offset = "0x9A78F4", VA = "0x9A78F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x9A7958", Offset = "0x9A7958", VA = "0x9A7958")]
	public SlotSelectScreen()
	{
	}
}
[Token(Token = "0x20002C7")]
public class SoftFlicker : MonoBehaviour
{
	[Token(Token = "0x20002C8")]
	[CompilerGenerated]
	private sealed class <Flicker>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoftFlicker <>4__this;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x9A7B10", Offset = "0x9A7B10", VA = "0x9A7B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x9A7B58", Offset = "0x9A7B58", VA = "0x9A7B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x9A7A08", Offset = "0x9A7A08", VA = "0x9A7A08")]
		[DebuggerHidden]
		public <Flicker>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x9A7A44", Offset = "0x9A7A44", VA = "0x9A7A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x9A7A48", Offset = "0x9A7A48", VA = "0x9A7A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x9A7B18", Offset = "0x9A7B18", VA = "0x9A7B18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minIntensity;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxIntensity;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light flickerLight;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x9A7960", Offset = "0x9A7960", VA = "0x9A7960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x9A7984", Offset = "0x9A7984", VA = "0x9A7984")]
	[IteratorStateMachine(typeof(<Flicker>d__5))]
	private IEnumerator Flicker(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x9A7A30", Offset = "0x9A7A30", VA = "0x9A7A30")]
	public SoftFlicker()
	{
	}
}
[Token(Token = "0x20002C9")]
public class ArrowFire : MonoBehaviour
{
	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFired;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Fire fire;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] fireArrow;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] burnArrow;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] extinctionArrow;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource[] fireSounds;

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x9A7B60", Offset = "0x9A7B60", VA = "0x9A7B60")]
	public void StopFire()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x9A7CA0", Offset = "0x9A7CA0", VA = "0x9A7CA0")]
	public void StartFire()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x9A7EF0", Offset = "0x9A7EF0", VA = "0x9A7EF0")]
	public void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x9A7F7C", Offset = "0x9A7F7C", VA = "0x9A7F7C")]
	public ArrowFire()
	{
	}
}
[Token(Token = "0x20002CA")]
public class BreakingInIndicationTrigger : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialSoundEffects SpecialSoundsEffects;

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x9A7F84", Offset = "0x9A7F84", VA = "0x9A7F84")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x9A806C", Offset = "0x9A806C", VA = "0x9A806C")]
	public BreakingInIndicationTrigger()
	{
	}
}
[Token(Token = "0x20002CB")]
public class WalkSound : MonoBehaviour
{
	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _tag;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HealthStateController healthStateController;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource walk;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] clips;

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x9A8074", Offset = "0x9A8074", VA = "0x9A8074")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x9A8154", Offset = "0x9A8154", VA = "0x9A8154")]
	public WalkSound()
	{
	}
}
[Token(Token = "0x20002CC")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pref_Obj;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curveInterval;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float tempTime;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x9A81AC", Offset = "0x9A81AC", VA = "0x9A81AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x9A81C8", Offset = "0x9A81C8", VA = "0x9A81C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x9A837C", Offset = "0x9A837C", VA = "0x9A837C")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20002CD")]
public class SpawnParticles : MonoBehaviour
{
	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> particles;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentParticle;

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x9A8384", Offset = "0x9A8384", VA = "0x9A8384")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x9A8548", Offset = "0x9A8548", VA = "0x9A8548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x9A87EC", Offset = "0x9A87EC", VA = "0x9A87EC")]
	public SpawnParticles()
	{
	}
}
[Token(Token = "0x20002CE")]
public class SpawnVoice : MonoBehaviourPun
{
	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x9A87F4", Offset = "0x9A87F4", VA = "0x9A87F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x9A8858", Offset = "0x9A8858", VA = "0x9A8858")]
	public SpawnVoice()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CF")]
public struct StepSound
{
	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip soundClip;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] soundPlayMomentsInAnimationInSeconds;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string animationStateName;
}
[Token(Token = "0x20002D0")]
public class StepSoundController : MonoBehaviour
{
	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StepSound[] stepSounds;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource stepAudioSource;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastStepTime;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastAnimationStateHash;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool changedAnimationStateFromLastStepSound;

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x9A8860", Offset = "0x9A8860", VA = "0x9A8860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x9A8B9C", Offset = "0x9A8B9C", VA = "0x9A8B9C")]
	public StepSoundController()
	{
	}
}
[Token(Token = "0x20002D1")]
public static class LocalStorageController
{
	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DEV_SHOULDSAVELOCALLY;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int staticCounter;

	[Token(Token = "0x4001049")]
	private const string PlayerExperienceKey = "PlayerExperienceKey";

	[Token(Token = "0x400104A")]
	private const string PlayerGoldKey = "PlayerGoldKey";

	[Token(Token = "0x400104B")]
	private const string PlayerEquipmentKey = "PlayerItemsKey";

	[Token(Token = "0x170001AA")]
	public static bool HasSomethingSaved
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x9A8BB0", Offset = "0x9A8BB0", VA = "0x9A8BB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AB")]
	public static int Gold
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x9A1B10", Offset = "0x9A1B10", VA = "0x9A1B10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x9A1BD8", Offset = "0x9A1BD8", VA = "0x9A1BD8")]
		set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public static int Experience
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x9A088C", Offset = "0x9A088C", VA = "0x9A088C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x9A08D4", Offset = "0x9A08D4", VA = "0x9A08D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x9A2428", Offset = "0x9A2428", VA = "0x9A2428")]
	public static void AddEquipmentItem(EquipmentItemKey equipmentItemKey)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x9A0B98", Offset = "0x9A0B98", VA = "0x9A0B98")]
	public static void Load()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x9A8C4C", Offset = "0x9A8C4C", VA = "0x9A8C4C")]
	private static void LoadShopItems()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x9A90C4", Offset = "0x9A90C4", VA = "0x9A90C4")]
	private static void LoadIsItemBought(EquipmentItemKey key)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x9A9044", Offset = "0x9A9044", VA = "0x9A9044")]
	private static List<string> GetEquipmentFromPrefs()
	{
		return null;
	}
}
[Token(Token = "0x20002D3")]
public static class OculusCloudStorage2Controller
{
	[Token(Token = "0x400104D")]
	private const string saveFileName = "save.dat";

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string saveFileDirectoryPath;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static OculusCloudStorage2SaveData save;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Action OnSaveFileDirectoryPathSuccessfullyLoaded;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action OnProgressSaved;

	[Token(Token = "0x170001AD")]
	private static string SaveFilePath
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x9A91F4", Offset = "0x9A91F4", VA = "0x9A91F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public static int Gold
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x9A9268", Offset = "0x9A9268", VA = "0x9A9268")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x9A92CC", Offset = "0x9A92CC", VA = "0x9A92CC")]
		set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public static int Experience
	{
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x9A962C", Offset = "0x9A962C", VA = "0x9A962C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x9A9690", Offset = "0x9A9690", VA = "0x9A9690")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x9A96F8", Offset = "0x9A96F8", VA = "0x9A96F8")]
	public static void AddEquipmentItem(EquipmentItemKey equipmentToAddKey)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x9A97DC", Offset = "0x9A97DC", VA = "0x9A97DC")]
	public static void Load()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x9A987C", Offset = "0x9A987C", VA = "0x9A987C")]
	public static void SaveNewPlayerProgressToFile()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x9A9334", Offset = "0x9A9334", VA = "0x9A9334")]
	private static void SavePlayerProgressToFile()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x9A9CD8", Offset = "0x9A9CD8", VA = "0x9A9CD8")]
	private static void LoadPlayerProgressFromCachedPath()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x9A9FF4", Offset = "0x9A9FF4", VA = "0x9A9FF4")]
	private static void CreateNewSaveFile()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x9AA2C4", Offset = "0x9AA2C4", VA = "0x9AA2C4")]
	private static void LoadSaveFromFile()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x9AA5C8", Offset = "0x9AA5C8", VA = "0x9AA5C8")]
	private static void LoadEquipment()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x9AA99C", Offset = "0x9AA99C", VA = "0x9AA99C")]
	private static List<string> GetEquipmentFromSave()
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x9A9878", Offset = "0x9A9878", VA = "0x9A9878")]
	private static void LoadSaveFileDirectoryPath(Action OnSaveFileDirectoryPathSuccessfullyLoaded)
	{
	}
}
[Serializable]
[Token(Token = "0x20002D6")]
public class OculusCloudStorage2SaveData
{
	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Experience;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Gold;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Equipment;

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x9A9CD0", Offset = "0x9A9CD0", VA = "0x9A9CD0")]
	public OculusCloudStorage2SaveData()
	{
	}
}
[Token(Token = "0x20002D7")]
public class OculusCloudStorageController : MonoBehaviour
{
	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x9AACA0", Offset = "0x9AACA0", VA = "0x9AACA0")]
	public OculusCloudStorageController()
	{
	}
}
[Token(Token = "0x20002D8")]
public static class SteamCloudStorageController
{
}
[Token(Token = "0x20002D9")]
public static class ElvenAssassinViveportStatsController
{
}
[Token(Token = "0x20002DA")]
public class TerrainTextureController : MonoBehaviour
{
	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 terrainSize;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 alphamapSize;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 terrainPosition;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x9AACA8", Offset = "0x9AACA8", VA = "0x9AACA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x9AADBC", Offset = "0x9AADBC", VA = "0x9AADBC")]
	public float GetTerrainTextureWeight(Vector3 positionInWorld, int textureIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x9AAEA8", Offset = "0x9AAEA8", VA = "0x9AAEA8")]
	public TerrainTextureController()
	{
	}
}
[Token(Token = "0x20002DB")]
public class TesterButtonDisabler : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject testerButton;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x9AAEB0", Offset = "0x9AAEB0", VA = "0x9AAEB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x9AAED0", Offset = "0x9AAED0", VA = "0x9AAED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x9AAF8C", Offset = "0x9AAF8C", VA = "0x9AAF8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x9AB024", Offset = "0x9AB024", VA = "0x9AB024", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x9AB094", Offset = "0x9AB094", VA = "0x9AB094", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x9AB098", Offset = "0x9AB098", VA = "0x9AB098", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x9AB09C", Offset = "0x9AB09C", VA = "0x9AB09C", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9AB0A0", Offset = "0x9AB0A0", VA = "0x9AB0A0", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9AB0A4", Offset = "0x9AB0A4", VA = "0x9AB0A4")]
	public TesterButtonDisabler()
	{
	}
}
[Token(Token = "0x20002DC")]
public class TesterDeathMatch : MonoBehaviourPun
{
	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController deathMatchGameTimeController;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Timer timerInGame;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int defaultFullTimeGame;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int defaultTimeToEndGame;

	[Token(Token = "0x4001062")]
	private const int finishTime = 5;

	[Token(Token = "0x4001063")]
	private const int infinityTime = 99;

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9AB0AC", Offset = "0x9AB0AC", VA = "0x9AB0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9AB0CC", Offset = "0x9AB0CC", VA = "0x9AB0CC")]
	public void SetTimeDeathMatchToFiveSecond()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x9AB11C", Offset = "0x9AB11C", VA = "0x9AB11C")]
	public void SetDefaultTimeDeathMatch()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x9AB17C", Offset = "0x9AB17C", VA = "0x9AB17C")]
	public void SetInfinityTime()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x9AB1D4", Offset = "0x9AB1D4", VA = "0x9AB1D4")]
	public TesterDeathMatch()
	{
	}
}
[Token(Token = "0x20002DD")]
public class TesterGoldIncrementer : MonoBehaviour
{
	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text goldText;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentGold;

	[Token(Token = "0x170001B0")]
	public int GoldToIncrement
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x9AB214", Offset = "0x9AB214", VA = "0x9AB214")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x9AB1DC", Offset = "0x9AB1DC", VA = "0x9AB1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x9AB21C", Offset = "0x9AB21C", VA = "0x9AB21C")]
	public void OnIncrement()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x9AB264", Offset = "0x9AB264", VA = "0x9AB264")]
	public void OnDecrement()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x9AB22C", Offset = "0x9AB22C", VA = "0x9AB22C")]
	private void SetGoldText()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x9AB274", Offset = "0x9AB274", VA = "0x9AB274")]
	public TesterGoldIncrementer()
	{
	}
}
[Token(Token = "0x20002DE")]
public class TesterMenu : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4001066")]
	public const float TimeBoostValue = 3f;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("PrefabReferences")]
	[SerializeField]
	private Toggle togglePlayerImmortality;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle toggleBoostGameSpeed;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Toggle toggleTestGold;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject goldIncrementerGO;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GateController castleController;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RandomRouteSpawner> enemySpawners;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<EnemySpawnData> enemySpawnDatas;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<WavesDataContainer> wavesDataContainersCopy;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<EnemySpawnData> enemySpawnDatasCopy;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isTestingGold;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TesterGoldIncrementer goldIncrementer;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeScale;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isTestingRoutes;

	[Token(Token = "0x170001B1")]
	public static bool IsPlayerImmortal
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x9AB27C", Offset = "0x9AB27C", VA = "0x9AB27C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x9AB2C4", Offset = "0x9AB2C4", VA = "0x9AB2C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public static bool IsBoostGameSpeed
	{
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x9AB310", Offset = "0x9AB310", VA = "0x9AB310")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x9AB358", Offset = "0x9AB358", VA = "0x9AB358")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	private float TimeScale
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x9AB3A4", Offset = "0x9AB3A4", VA = "0x9AB3A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x9AB3AC", Offset = "0x9AB3AC", VA = "0x9AB3AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x9AB3B8", Offset = "0x9AB3B8", VA = "0x9AB3B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x9AB4B0", Offset = "0x9AB4B0", VA = "0x9AB4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x9AC090", Offset = "0x9AC090", VA = "0x9AC090")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x9AC480", Offset = "0x9AC480", VA = "0x9AC480")]
	private void BoostGameSpeed()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x9AC4D4", Offset = "0x9AC4D4", VA = "0x9AC4D4")]
	public void GiveMuchosHealthToCastle()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x9AC57C", Offset = "0x9AC57C", VA = "0x9AC57C")]
	public void GiveFullHealthToCastle()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x9AC59C", Offset = "0x9AC59C", VA = "0x9AC59C")]
	public void GiveOneHelathToCastle()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x9AC640", Offset = "0x9AC640", VA = "0x9AC640")]
	public void SetNormalTrollsOnWaves()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x9AC93C", Offset = "0x9AC93C", VA = "0x9AC93C")]
	public void SetBlackTrollsOnWaves()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x9AC94C", Offset = "0x9AC94C", VA = "0x9AC94C")]
	public void SetRedDragonsOnWaves()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x9AC95C", Offset = "0x9AC95C", VA = "0x9AC95C")]
	public void SetGreenDragonsOnWaves()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x9AC96C", Offset = "0x9AC96C", VA = "0x9AC96C")]
	public void SetNormalAxeMansOnWaves()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x9ACC50", Offset = "0x9ACC50", VA = "0x9ACC50")]
	public void SetGizmoOnWaves()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x9ACC5C", Offset = "0x9ACC5C", VA = "0x9ACC5C")]
	public void SetKanitOnWaves()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x9ACC68", Offset = "0x9ACC68", VA = "0x9ACC68")]
	public void SetGnurOnWaves()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x9ACC74", Offset = "0x9ACC74", VA = "0x9ACC74")]
	public void SetRedAxeMansOnWaves()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x9ACC80", Offset = "0x9ACC80", VA = "0x9ACC80")]
	public void SetWyvernsOnWaves()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x9ACC90", Offset = "0x9ACC90", VA = "0x9ACC90")]
	public void SetWavesForTestingRoutes()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x9AC1D0", Offset = "0x9AC1D0", VA = "0x9AC1D0")]
	public void RevertToNormalWaves()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x9ACDEC", Offset = "0x9ACDEC", VA = "0x9ACDEC")]
	public void SkipToWave(string waveNumberText)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x9ACE04", Offset = "0x9ACE04", VA = "0x9ACE04")]
	public void SetNextWave(string waveNumberText)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x9AD1CC", Offset = "0x9AD1CC", VA = "0x9AD1CC")]
	private void SkipToStage(int waveNumber)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x9ACF20", Offset = "0x9ACF20", VA = "0x9ACF20")]
	public void FinishWave()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x9AD30C", Offset = "0x9AD30C", VA = "0x9AD30C")]
	public void SetImmortality()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x9AD3DC", Offset = "0x9AD3DC", VA = "0x9AD3DC")]
	public void ToggleTestingGold()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x9AD590", Offset = "0x9AD590", VA = "0x9AD590")]
	public void AddGoldToDropController()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x9AC034", Offset = "0x9AC034", VA = "0x9AC034")]
	private List<GoldDropController> GetGoldDropControllers()
	{
		return null;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x9AD6F0", Offset = "0x9AD6F0", VA = "0x9AD6F0")]
	public void SetGameSpeed()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x9AC650", Offset = "0x9AC650", VA = "0x9AC650")]
	private void StartSpawningEnemy(EnemyPoolType enemyPoolType, EnemyType enemyType, int enemiesAmount)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x9AC978", Offset = "0x9AC978", VA = "0x9AC978")]
	private void StartSpawningEnemy(EnemyPoolType enemyPoolType, EnemyType enemyType)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x9AB6B4", Offset = "0x9AB6B4", VA = "0x9AB6B4")]
	private void CopyWavesData()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x9ABB68", Offset = "0x9ABB68", VA = "0x9ABB68")]
	private void CacheSpawnAreaChosers()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x9AD804", Offset = "0x9AD804", VA = "0x9AD804", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x9AD9A8", Offset = "0x9AD9A8", VA = "0x9AD9A8")]
	public TesterMenu()
	{
	}
}
[Token(Token = "0x20002E2")]
public class TextureAnim : MonoBehaviour
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 scrollSpeed;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x9AED60", Offset = "0x9AED60", VA = "0x9AED60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x9AEDB8", Offset = "0x9AEDB8", VA = "0x9AEDB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x9AEE40", Offset = "0x9AEE40", VA = "0x9AEE40")]
	public TextureAnim()
	{
	}
}
[Token(Token = "0x20002E3")]
public class Thunders : MonoBehaviour
{
	[Token(Token = "0x20002E4")]
	[CompilerGenerated]
	private sealed class <ActivateThunder>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Thunders <>4__this;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x9AF0F0", Offset = "0x9AF0F0", VA = "0x9AF0F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x9AF138", Offset = "0x9AF138", VA = "0x9AF138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x9AEF78", Offset = "0x9AEF78", VA = "0x9AEF78")]
		[DebuggerHidden]
		public <ActivateThunder>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x9AF018", Offset = "0x9AF018", VA = "0x9AF018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x9AF01C", Offset = "0x9AF01C", VA = "0x9AF01C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x9AF0F8", Offset = "0x9AF0F8", VA = "0x9AF0F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minTimeOffset;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxTimeOffset;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float thunderDuration;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource thunderSoundSource;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] thunderClips;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject lightingBoltParticle;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject lightingBoltLight;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float thunderBreakDuration;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds thunderDelay;

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x9AEE48", Offset = "0x9AEE48", VA = "0x9AEE48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x9AEE98", Offset = "0x9AEE98", VA = "0x9AEE98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x9AEF04", Offset = "0x9AEF04", VA = "0x9AEF04")]
	[IteratorStateMachine(typeof(<ActivateThunder>d__12))]
	private IEnumerator ActivateThunder()
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x9AEFA0", Offset = "0x9AEFA0", VA = "0x9AEFA0")]
	public Thunders()
	{
	}
}
[Token(Token = "0x20002E5")]
public enum AWSEndpointType
{
	[Token(Token = "0x400108B")]
	Prod,
	[Token(Token = "0x400108C")]
	Stage,
	[Token(Token = "0x400108D")]
	Dev
}
[Token(Token = "0x20002E6")]
public class AWSEndpointTypeSetterForMaster : MonoBehaviour
{
	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AWSEndpointType awsEndpointType;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x9AF140", Offset = "0x9AF140", VA = "0x9AF140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x9AF144", Offset = "0x9AF144", VA = "0x9AF144")]
	public AWSEndpointTypeSetterForMaster()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E7")]
public class AWSLastTournamentLeaderboardEntriesDTO
{
	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AWSTournamentLeaderboardEntryDTO> finalists;

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x9AF14C", Offset = "0x9AF14C", VA = "0x9AF14C")]
	public AWSLastTournamentLeaderboardEntriesDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E8")]
public class AWSLastTournamentsLeaderboardEntriesDTO
{
	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<AWSLastTournamentLeaderboardEntriesDTO> tournaments;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x9AF154", Offset = "0x9AF154", VA = "0x9AF154")]
	public AWSLastTournamentsLeaderboardEntriesDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E9")]
public class AWSTournamentFinalScoresDTO
{
	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AWSTournamentRoundScoreDTO final;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AWSTournamentSemiFinalScoreDTO semifinal;

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x9AF15C", Offset = "0x9AF15C", VA = "0x9AF15C")]
	public AWSTournamentFinalScoresDTO()
	{
	}
}
[Token(Token = "0x20002EA")]
public class AWSTournamentLeaderboardController : MonoBehaviour
{
	[Token(Token = "0x4001094")]
	private const string instanceGameObjectName = "VRParkLeaderboardsController";

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AWSTournamentLeaderboardController instance;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Guid playerGUID;

	[Token(Token = "0x4001097")]
	private const string apiUrlSetWithoutTournamentIdProd = "https://api.elven-assassin.com/tournaments/";

	[Token(Token = "0x4001098")]
	private const string apiUrlSetWithoutTournamentIdStage = "https://stage.api.elven-assassin.com/tournaments/";

	[Token(Token = "0x4001099")]
	private const string apiUrlSetWithoutTournamentIdDev = "https://dev.api.elven-assassin.com/tournaments/";

	[Token(Token = "0x400109A")]
	private const string apiUrlGetProd = "https://api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x400109B")]
	private const string apiUrlGetStage = "https://stage.api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x400109C")]
	private const string apiUrlGetDev = "https://dev.api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x400109D")]
	private const string firstHeaderKey = "Content-Type";

	[Token(Token = "0x400109E")]
	private const string firstHeaderValue = "application/json";

	[Token(Token = "0x400109F")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x40010A0")]
	private const string xApiKeyProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x40010A1")]
	private const string xApiKeyStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x40010A2")]
	private const string xApiKeyDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x40010A3")]
	private const string tournamentLeaderboardJsonBackupFileName = "TournamentLeaderboardJsonBackup";

	[Token(Token = "0x40010A4")]
	private const string JSONAdditionalTournamentsField = "{\"tournaments\":";

	[Token(Token = "0x40010A5")]
	private const string JSONClosingObject = "}";

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Guid leaderboardGuid;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal static Action<AWSTournamentLeaderboardEntriesResponseDTO> OnResponseAcquired;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string tournamentId;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string tournamentEpochTimestamp;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Action<List<AWSTournamentLeaderboardEntryDTO>> OnGetFromAWSAction;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Action<string> OnGetFromAWSFailedAction;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool hasSavedScoresToAWS;

	[Token(Token = "0x170001B6")]
	private static AWSTournamentLeaderboardController Instance
	{
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x9AF164", Offset = "0x9AF164", VA = "0x9AF164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B7")]
	public static Guid LocalPlayerGUID
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x9AF270", Offset = "0x9AF270", VA = "0x9AF270")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x170001B8")]
	private static string TournamentLeaderboardJsonBackupFilePath
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x9AFB24", Offset = "0x9AFB24", VA = "0x9AFB24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x9AF2C8", Offset = "0x9AF2C8", VA = "0x9AF2C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x9AF408", Offset = "0x9AF408", VA = "0x9AF408")]
	internal static void SaveToAWS(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x9AF40C", Offset = "0x9AF40C", VA = "0x9AF40C")]
	internal static void SaveToLocalFile(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x9AF410", Offset = "0x9AF410", VA = "0x9AF410")]
	internal static void GetFromAWS(CloudRegionCode cloudRegionCode, string playerId, Action<List<AWSTournamentLeaderboardEntryDTO>> OnGetFromAWS, Action<string> OnGetFromAWSFailed)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x9AF790", Offset = "0x9AF790", VA = "0x9AF790")]
	internal static void SaveToAWSWithLocalFileBackup(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x9AF7E4", Offset = "0x9AF7E4", VA = "0x9AF7E4")]
	private static string GetApiUrlSet()
	{
		return null;
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x9AF528", Offset = "0x9AF528", VA = "0x9AF528")]
	private static string GetApiUrlGet(CloudRegionCode regionCode, string playerId)
	{
		return null;
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x9AF9A0", Offset = "0x9AF9A0", VA = "0x9AF9A0")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x9AFEBC", Offset = "0x9AFEBC", VA = "0x9AFEBC")]
	public static void SetInitialDataOfTournament(TournamentHostingInfo nextTorunamentToHostInfo)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x9B0074", Offset = "0x9B0074", VA = "0x9B0074")]
	internal static void GenerateLeaderboardGuid()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x9B00DC", Offset = "0x9B00DC", VA = "0x9B00DC")]
	internal static void GenerateNewPlayerGUID()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x9B01B8", Offset = "0x9B01B8", VA = "0x9B01B8")]
	private static void OnGetFromAWS(UnityWebRequest unityWebRequest)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x9B03BC", Offset = "0x9B03BC", VA = "0x9B03BC")]
	private static List<AWSTournamentLeaderboardEntryDTO> GetPlayersFromJson(string json)
	{
		return null;
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x9B05B0", Offset = "0x9B05B0", VA = "0x9B05B0")]
	private static void ConvertTournamentsJSONArrayToJSONObject(ref string json)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x9B062C", Offset = "0x9B062C", VA = "0x9B062C")]
	private static void OnTournamentLeaderboardSaved(UnityWebRequest response)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x9B0714", Offset = "0x9B0714", VA = "0x9B0714")]
	private static string GetLeaderboardGetJson(string mapName, string parkCode)
	{
		return null;
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x9B081C", Offset = "0x9B081C", VA = "0x9B081C")]
	public static string GetLeaderboardSetJson(List<TournamentPlayer> allPlayers)
	{
		return null;
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x9B0990", Offset = "0x9B0990", VA = "0x9B0990")]
	private static List<AWSTournamentLeaderboardEntryDTO> TournamentPlayersToEntries(List<TournamentPlayer> allPlayers)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x9B0C8C", Offset = "0x9B0C8C", VA = "0x9B0C8C")]
	public AWSTournamentLeaderboardController()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EC")]
public class AWSTournamentLeaderboardDAO
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string PlayerID;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x9B0DA4", Offset = "0x9B0DA4", VA = "0x9B0DA4")]
	public AWSTournamentLeaderboardDAO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002ED")]
public class AWSTournamentLeaderboardEntriesDTO
{
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string date;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string region;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AWSTournamentLeaderboardEntryDTO> entries;

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x9B0988", Offset = "0x9B0988", VA = "0x9B0988")]
	public AWSTournamentLeaderboardEntriesDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EE")]
public class AWSTournamentLeaderboardEntriesResponseDTO
{
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Date;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Guid;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Region;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AWSTournamentLeaderboardEntryDTO> BestScores;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AWSTournamentLeaderboardEntryDTO> ScoreNeighberhood;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x9B0DAC", Offset = "0x9B0DAC", VA = "0x9B0DAC")]
	public AWSTournamentLeaderboardEntriesResponseDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EF")]
public class AWSTournamentLeaderboardEntryDTO
{
	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string playerId;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rank;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string name;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int stage;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hits;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int deaths;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isFinalist;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool isSemifinalist;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AWSTournamentSemiFinalScoreDTO semifinal;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int lastStageDeaths;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int lastStageHits;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x9B0BF0", Offset = "0x9B0BF0", VA = "0x9B0BF0")]
	public AWSTournamentLeaderboardEntryDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F0")]
public class AWSTournamentLeaderboardGetDTO
{
	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ParkCode;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MapName;

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x9B0814", Offset = "0x9B0814", VA = "0x9B0814")]
	public AWSTournamentLeaderboardGetDTO()
	{
	}
}
[Token(Token = "0x20002F1")]
public class AWSTournamentLeaderboardView : MonoBehaviour
{
	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject top10Object;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> top10Entries;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rivalsObject;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> rivalsEntries;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform Top10LeaderboardPosition;

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x9B0DB4", Offset = "0x9B0DB4", VA = "0x9B0DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x9B0EE0", Offset = "0x9B0EE0", VA = "0x9B0EE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x9B100C", Offset = "0x9B100C", VA = "0x9B100C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x9B10A4", Offset = "0x9B10A4", VA = "0x9B10A4")]
	public void ShowLeaderboards(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x9B15B8", Offset = "0x9B15B8", VA = "0x9B15B8")]
	private bool IsLocalPlayerInEntries(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x9B14AC", Offset = "0x9B14AC", VA = "0x9B14AC")]
	private static bool IsLocalPlayerInTop10(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x9B11A8", Offset = "0x9B11A8", VA = "0x9B11A8")]
	private void ShowTop10Leaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x9B1780", Offset = "0x9B1780", VA = "0x9B1780")]
	private void ShowCurrentRivalsLeaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x9B1E74", Offset = "0x9B1E74", VA = "0x9B1E74")]
	public AWSTournamentLeaderboardView()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F3")]
public class AWSTournamentRoundScoreDTO
{
	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int lastStageHits;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lastStageDeaths;

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x9B2220", Offset = "0x9B2220", VA = "0x9B2220")]
	public AWSTournamentRoundScoreDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20002F4")]
public class AWSTournamentSemiFinalScoreDTO
{
	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string roomId;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int semiFinalRankInRoom;

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x9B0C84", Offset = "0x9B0C84", VA = "0x9B0C84")]
	public AWSTournamentSemiFinalScoreDTO()
	{
	}
}
[Token(Token = "0x20002F5")]
public class AWSTournmentLeaderboardsTester : MonoBehaviour
{
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x9B2228", Offset = "0x9B2228", VA = "0x9B2228")]
	[ContextMenu("Test saving")]
	private void TestSaving()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x9B25D4", Offset = "0x9B25D4", VA = "0x9B25D4")]
	[ContextMenu("Test getting")]
	private void TestGetting()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x9B269C", Offset = "0x9B269C", VA = "0x9B269C")]
	private void TestGettingOnReceive(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x9B27D0", Offset = "0x9B27D0", VA = "0x9B27D0")]
	public AWSTournmentLeaderboardsTester()
	{
	}
}
[Token(Token = "0x20002F7")]
public class GlobalTimeController : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	[CompilerGenerated]
	private sealed class <GetCurrentGlobalTimeCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<DateTime> OnTimeReceived;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <myHttpWebRequest>5__2;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x9B2BD8", Offset = "0x9B2BD8", VA = "0x9B2BD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x9B2C20", Offset = "0x9B2C20", VA = "0x9B2C20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x9B29D0", Offset = "0x9B29D0", VA = "0x9B29D0")]
		[DebuggerHidden]
		public <GetCurrentGlobalTimeCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9B2A00", Offset = "0x9B2A00", VA = "0x9B2A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x9B2A04", Offset = "0x9B2A04", VA = "0x9B2A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x9B2BE0", Offset = "0x9B2BE0", VA = "0x9B2BE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalTimeController instance;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x9B2844", Offset = "0x9B2844", VA = "0x9B2844")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x9B28F4", Offset = "0x9B28F4", VA = "0x9B28F4")]
	public static void GetCurrentGlobalTimeAsync(Action<DateTime> OnTimeReceived)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x9B295C", Offset = "0x9B295C", VA = "0x9B295C")]
	[IteratorStateMachine(typeof(<GetCurrentGlobalTimeCoroutine>d__3))]
	private IEnumerator GetCurrentGlobalTimeCoroutine(Action<DateTime> OnTimeReceived)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x9B29F8", Offset = "0x9B29F8", VA = "0x9B29F8")]
	public GlobalTimeController()
	{
	}
}
[Token(Token = "0x20002F9")]
public class Http : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private struct <PostAsync>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string json;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> headers;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <unityWebRequest>5__2;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x9B3158", Offset = "0x9B3158", VA = "0x9B3158", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x9B33C4", Offset = "0x9B33C4", VA = "0x9B33C4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[CompilerGenerated]
	private sealed class <GetCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <unityWebRequest>5__2;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x9B347C", Offset = "0x9B347C", VA = "0x9B347C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x9B34C4", Offset = "0x9B34C4", VA = "0x9B34C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9B2F40", Offset = "0x9B2F40", VA = "0x9B2F40")]
		[DebuggerHidden]
		public <GetCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x9B33D0", Offset = "0x9B33D0", VA = "0x9B33D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x9B33D4", Offset = "0x9B33D4", VA = "0x9B33D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x9B3484", Offset = "0x9B3484", VA = "0x9B3484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[CompilerGenerated]
	private sealed class <SendRequestCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityWebRequest unityWebRequest;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> headers;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string json;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x9B355C", Offset = "0x9B355C", VA = "0x9B355C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x9B35A4", Offset = "0x9B35A4", VA = "0x9B35A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x9B2F68", Offset = "0x9B2F68", VA = "0x9B2F68")]
		[DebuggerHidden]
		public <SendRequestCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x9B34CC", Offset = "0x9B34CC", VA = "0x9B34CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x9B34D0", Offset = "0x9B34D0", VA = "0x9B34D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x9B3564", Offset = "0x9B3564", VA = "0x9B3564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010DC")]
	private const int waitingForResponseMilliseconds = 25;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x9AF770", Offset = "0x9AF770", VA = "0x9AF770")]
	public void Get(string url, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x9B2CB8", Offset = "0x9B2CB8", VA = "0x9B2CB8")]
	public void Post(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x9B2DD4", Offset = "0x9B2DD4", VA = "0x9B2DD4")]
	[AsyncStateMachine(typeof(<PostAsync>d__3))]
	public static void PostAsync(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x9B2EE4", Offset = "0x9B2EE4", VA = "0x9B2EE4")]
	public void Put(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x9B2C28", Offset = "0x9B2C28", VA = "0x9B2C28")]
	[IteratorStateMachine(typeof(<GetCoroutine>d__5))]
	private IEnumerator GetCoroutine(string url, Action<UnityWebRequest> OnResponseReceived)
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x9B2D14", Offset = "0x9B2D14", VA = "0x9B2D14")]
	[IteratorStateMachine(typeof(<SendRequestCoroutine>d__6))]
	private IEnumerator SendRequestCoroutine(UnityWebRequest unityWebRequest, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x9B2F90", Offset = "0x9B2F90", VA = "0x9B2F90")]
	private static void SetRequestData(UnityWebRequest unityWebRequest, Dictionary<string, string> headers, string json)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x9B3150", Offset = "0x9B3150", VA = "0x9B3150")]
	public Http()
	{
	}
}
[Token(Token = "0x20002FE")]
public class JoiningToTournamentConfirmationController : MonoBehaviour
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text confirmationText;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text yesText;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text noText;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JoiningTournamentDuringMatchController joiningTournamentDuringMatchController;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x9B3620", Offset = "0x9B3620", VA = "0x9B3620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x9B36CC", Offset = "0x9B36CC", VA = "0x9B36CC")]
	public void OnYesClick()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x9B3790", Offset = "0x9B3790", VA = "0x9B3790")]
	public void OnNoClick()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x9B36F8", Offset = "0x9B36F8", VA = "0x9B36F8")]
	private static void CloseConfirmationWindow()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x9B37A8", Offset = "0x9B37A8", VA = "0x9B37A8")]
	public JoiningToTournamentConfirmationController()
	{
	}
}
[Token(Token = "0x20002FF")]
public class JoiningTournamentDuringMatchController : MonoBehaviour, ILobbyCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isDuringJoining;

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x9B37B0", Offset = "0x9B37B0", VA = "0x9B37B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x9B3808", Offset = "0x9B3808", VA = "0x9B3808")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x9B3718", Offset = "0x9B3718", VA = "0x9B3718")]
	public void JoinTournament()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x9B3860", Offset = "0x9B3860", VA = "0x9B3860", Slot = "14")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x9B38EC", Offset = "0x9B38EC", VA = "0x9B38EC", Slot = "4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x9B38F0", Offset = "0x9B38F0", VA = "0x9B38F0", Slot = "11")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x9B38F4", Offset = "0x9B38F4", VA = "0x9B38F4", Slot = "12")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x9B38F8", Offset = "0x9B38F8", VA = "0x9B38F8", Slot = "13")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x9B38FC", Offset = "0x9B38FC", VA = "0x9B38FC", Slot = "5")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x9B3900", Offset = "0x9B3900", VA = "0x9B3900", Slot = "6")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x9B3904", Offset = "0x9B3904", VA = "0x9B3904", Slot = "7")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x9B3908", Offset = "0x9B3908", VA = "0x9B3908", Slot = "8")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x9B390C", Offset = "0x9B390C", VA = "0x9B390C", Slot = "9")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9B3910", Offset = "0x9B3910", VA = "0x9B3910", Slot = "10")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9B3914", Offset = "0x9B3914", VA = "0x9B3914")]
	public JoiningTournamentDuringMatchController()
	{
	}
}
[Token(Token = "0x2000300")]
public class JoinTournamentPopUpController : MonoBehaviour
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject popUpGameObject;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particlesGameObject;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentHostingDatesGatherer;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text popUpText;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CollisionEvents joiningTrigger;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator portalContentsAnimator;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource portalOpenAudioSource;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource portalCloseAudioSource;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource portalIdleAudioSource;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource portalShotAudioSource;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject popUpInfoGameObject;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int popUpDuration;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private int popUpTimeBorder;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly int openPortalTriggerId;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private readonly int closePortalTriggerId;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float secondsCount;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timerLenght;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string timer;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isPopUpVisible;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isTournamentFound;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool isCounting;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int secondsInMinute;

	[Token(Token = "0x170001BF")]
	public bool IsHidingPopUp
	{
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x9B391C", Offset = "0x9B391C", VA = "0x9B391C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x9B3924", Offset = "0x9B3924", VA = "0x9B3924")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x9B3930", Offset = "0x9B3930", VA = "0x9B3930")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x9B3B38", Offset = "0x9B3B38", VA = "0x9B3B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x9B3EE8", Offset = "0x9B3EE8", VA = "0x9B3EE8")]
	private float GetTimeFromDbInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x9B3F7C", Offset = "0x9B3F7C", VA = "0x9B3F7C")]
	private void UpdateTimerUI()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x9B4040", Offset = "0x9B4040", VA = "0x9B4040")]
	private void HidePopUp()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x9B3E9C", Offset = "0x9B3E9C", VA = "0x9B3E9C")]
	private void ShowPopUp()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x9B41A8", Offset = "0x9B41A8", VA = "0x9B41A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x9B4364", Offset = "0x9B4364", VA = "0x9B4364")]
	private void OnJoiningTriggerEnter(Collider triggeredCollider)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x9B4448", Offset = "0x9B4448", VA = "0x9B4448")]
	private static void OpenConfirmationWindow()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x9B40B4", Offset = "0x9B40B4", VA = "0x9B40B4")]
	private static void CloseConfirmationWindow()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x9B44BC", Offset = "0x9B44BC", VA = "0x9B44BC")]
	private void SetNextTournamentDateFromHostingsGatherer()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x9B3DD0", Offset = "0x9B3DD0", VA = "0x9B3DD0")]
	private bool IsTournamentStartingShortly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x9B458C", Offset = "0x9B458C", VA = "0x9B458C")]
	private List<DateTime> GetTournamentDatesAvailableForCurrentRegion()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x9B4868", Offset = "0x9B4868", VA = "0x9B4868")]
	private static List<DateTime> GetNextTournamentDates(List<DateTime> tournamentDates)
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x9B4A74", Offset = "0x9B4A74", VA = "0x9B4A74")]
	private static string GetTextForTimeLeftForEnrollment()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x9B4BB4", Offset = "0x9B4BB4", VA = "0x9B4BB4")]
	public JoinTournamentPopUpController()
	{
	}
}
[Token(Token = "0x2000303")]
public class JoinTournamentPortalAnimationEventsController : MonoBehaviour
{
	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource portalIdleAudioSource;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particlesGameObject;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject mainPopGameObject;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JoinTournamentPopUpController joinTournamentPopUpController;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject popUpInfoGameObject;

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x9B4E48", Offset = "0x9B4E48", VA = "0x9B4E48")]
	private void OnIdleStartAnimationEvent()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x9B4E90", Offset = "0x9B4E90", VA = "0x9B4E90")]
	private void OnPortalClosedAnimationEvent()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x9B4EC8", Offset = "0x9B4EC8", VA = "0x9B4EC8")]
	public JoinTournamentPortalAnimationEventsController()
	{
	}
}
[Token(Token = "0x2000304")]
public class LastTournamentLeaderboardController : MonoBehaviour
{
	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> playerSpotList;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bestArchersParent;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject noLeaderboardIndicator;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject loadingIndicator;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text errorIndicatorText;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x9B4ED0", Offset = "0x9B4ED0", VA = "0x9B4ED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x9B50C4", Offset = "0x9B50C4", VA = "0x9B50C4")]
	private void OnGetLeaderboardFromAWS(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x9B5304", Offset = "0x9B5304", VA = "0x9B5304")]
	private void OnGetLeaderboardFromAWSFailed(string error)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x9B5340", Offset = "0x9B5340", VA = "0x9B5340")]
	private void ShowErrorMessage(string error)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x9B5100", Offset = "0x9B5100", VA = "0x9B5100")]
	private void ShowBestArchersLeaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x9B5058", Offset = "0x9B5058", VA = "0x9B5058")]
	private void HideAllLeaderboardGUI()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x9B53FC", Offset = "0x9B53FC", VA = "0x9B53FC")]
	public LastTournamentLeaderboardController()
	{
	}
}
[Token(Token = "0x2000305")]
public class TournamentHostingAutoInputController : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x2000306")]
	private enum AutoHostingState
	{
		[Token(Token = "0x4001128")]
		WaitingToHost,
		[Token(Token = "0x4001129")]
		Hosting,
		[Token(Token = "0x400112A")]
		WaitingToShutdownVirtualMachine
	}

	[Token(Token = "0x2000307")]
	[CompilerGenerated]
	private sealed class <CloseServerRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingAutoInputController <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x9B5FE4", Offset = "0x9B5FE4", VA = "0x9B5FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x9B602C", Offset = "0x9B602C", VA = "0x9B602C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x9B5A04", Offset = "0x9B5A04", VA = "0x9B5A04")]
		[DebuggerHidden]
		public <CloseServerRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x9B5D24", Offset = "0x9B5D24", VA = "0x9B5D24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x9B5D28", Offset = "0x9B5D28", VA = "0x9B5D28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x9B5FEC", Offset = "0x9B5FEC", VA = "0x9B5FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030A")]
	[CompilerGenerated]
	private sealed class <PlanNextTournament>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingAutoInputController <>4__this;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x9B67F4", Offset = "0x9B67F4", VA = "0x9B67F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x9B683C", Offset = "0x9B683C", VA = "0x9B683C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x9B5B10", Offset = "0x9B5B10", VA = "0x9B5B10")]
		[DebuggerHidden]
		public <PlanNextTournament>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x9B61A0", Offset = "0x9B61A0", VA = "0x9B61A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x9B61A4", Offset = "0x9B61A4", VA = "0x9B61A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x9B67FC", Offset = "0x9B67FC", VA = "0x9B67FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400111C")]
	private const int secondsDelayToCloseServerAfterTournamentEnd = 300;

	[Token(Token = "0x400111D")]
	private const int minutesBeforeTournamentDateToStartHosting = 5;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AutoHostingState state;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CloudRegionCode regionCode;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TournamentHostingInfo nextTorunamentToHostInfo;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMasterConnectingWindowController TournamentMasterConnectingWindowController;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentInfoWindowController TournamentInfoWindowController;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentHostingController TournamentHostingController;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentHostingDatesGatherer;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TournamentGameStateController tournamentGameStateController;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TournamentVirtualMachineShutdownController tournamentVirtualMachineShutdownController;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x9B5404", Offset = "0x9B5404", VA = "0x9B5404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x9B55C0", Offset = "0x9B55C0", VA = "0x9B55C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x9B5618", Offset = "0x9B5618", VA = "0x9B5618")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x9B5670", Offset = "0x9B5670", VA = "0x9B5670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x9B5990", Offset = "0x9B5990", VA = "0x9B5990")]
	[IteratorStateMachine(typeof(<CloseServerRoutine>d__16))]
	private IEnumerator CloseServerRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x9B5788", Offset = "0x9B5788", VA = "0x9B5788")]
	private void HostNextTournament()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x9B54B0", Offset = "0x9B54B0", VA = "0x9B54B0")]
	[IteratorStateMachine(typeof(<PlanNextTournament>d__18))]
	private IEnumerator PlanNextTournament()
	{
		return null;
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x9B56BC", Offset = "0x9B56BC", VA = "0x9B56BC")]
	private bool ShouldStartHostingNextTournament()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x9B5928", Offset = "0x9B5928", VA = "0x9B5928")]
	private bool IsHostingTournamentThatFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x9B5B38", Offset = "0x9B5B38", VA = "0x9B5B38", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x9B5B3C", Offset = "0x9B5B3C", VA = "0x9B5B3C", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x9B5B40", Offset = "0x9B5B40", VA = "0x9B5B40", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x9B5C0C", Offset = "0x9B5C0C", VA = "0x9B5C0C", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x9B5C10", Offset = "0x9B5C10", VA = "0x9B5C10", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x9B5C14", Offset = "0x9B5C14", VA = "0x9B5C14", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x9B5C18", Offset = "0x9B5C18", VA = "0x9B5C18", Slot = "10")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x9B5C1C", Offset = "0x9B5C1C", VA = "0x9B5C1C", Slot = "11")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x9B5C20", Offset = "0x9B5C20", VA = "0x9B5C20", Slot = "12")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x9B5CAC", Offset = "0x9B5CAC", VA = "0x9B5CAC", Slot = "13")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x9B5CB0", Offset = "0x9B5CB0", VA = "0x9B5CB0", Slot = "14")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x9B5CB4", Offset = "0x9B5CB4", VA = "0x9B5CB4", Slot = "15")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x9B5CB8", Offset = "0x9B5CB8", VA = "0x9B5CB8", Slot = "16")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x9B5CBC", Offset = "0x9B5CBC", VA = "0x9B5CBC")]
	public TournamentHostingAutoInputController()
	{
	}
}
[Token(Token = "0x200030B")]
public class TournamentHostingDatesGatherer : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[CompilerGenerated]
	private sealed class <PlanningRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingDatesGatherer <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x9B7518", Offset = "0x9B7518", VA = "0x9B7518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x9B7560", Offset = "0x9B7560", VA = "0x9B7560", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x9B6A5C", Offset = "0x9B6A5C", VA = "0x9B6A5C")]
		[DebuggerHidden]
		public <PlanningRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x9B7444", Offset = "0x9B7444", VA = "0x9B7444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x9B7448", Offset = "0x9B7448", VA = "0x9B7448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x9B7520", Offset = "0x9B7520", VA = "0x9B7520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001135")]
	private const float secondsDelayOfRefreshingTouenamentPlan = 3600f;

	[Token(Token = "0x4001136")]
	private const string urlToDatabaseProd = "https://api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x4001137")]
	private const string urlToDatabaseStage = "https://stage.api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x4001138")]
	private const string urlToDatabaseDev = "https://dev.api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x4001139")]
	private const string regionCodeForAllRegions = "all";

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentHostingInfo> tournamentHostingInfos;

	[Token(Token = "0x14000019")]
	public event Action OnTournamentDatesGathered
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x9B3A9C", Offset = "0x9B3A9C", VA = "0x9B3A9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x9B42C8", Offset = "0x9B42C8", VA = "0x9B42C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x9B6844", Offset = "0x9B6844", VA = "0x9B6844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x9B68D8", Offset = "0x9B68D8", VA = "0x9B68D8")]
	private static string GetApiUrl()
	{
		return null;
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x9B6864", Offset = "0x9B6864", VA = "0x9B6864")]
	[IteratorStateMachine(typeof(<PlanningRoutine>d__12))]
	private IEnumerator PlanningRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x9B6A84", Offset = "0x9B6A84", VA = "0x9B6A84")]
	private void RequestTournamentDatesByHttp()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x9B6B30", Offset = "0x9B6B30", VA = "0x9B6B30")]
	private void OnHttpResponseReceived(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x9B7044", Offset = "0x9B7044", VA = "0x9B7044")]
	private void AddNewTournamentHostingInfoFromDTO(TournamentDateDTO date)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x9B6F9C", Offset = "0x9B6F9C", VA = "0x9B6F9C")]
	private void AddNewTournamentHostingInfosFromDTOs(List<TournamentDateDTO> dates)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x9B7438", Offset = "0x9B7438", VA = "0x9B7438")]
	public TournamentHostingDatesGatherer()
	{
	}
}
[Serializable]
[Token(Token = "0x200030E")]
public class TournamentHostingInfo
{
	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime date;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomDateTime dateForJson;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudRegionCode regionCode;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isAvailableOnAllRegions;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string id;

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x9B75F4", Offset = "0x9B75F4", VA = "0x9B75F4")]
	public void MigrateDateFromJson()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x9B763C", Offset = "0x9B763C", VA = "0x9B763C")]
	public void MigrateDateToJson()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x9B73C8", Offset = "0x9B73C8", VA = "0x9B73C8")]
	public TournamentHostingInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x200030F")]
public class CustomDateTime
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int year;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int month;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int day;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hour;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minute;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int second;

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x9B7430", Offset = "0x9B7430", VA = "0x9B7430")]
	public CustomDateTime()
	{
	}
}
[Token(Token = "0x2000310")]
public class TournamentVirtualMachineShutdownController : MonoBehaviour
{
	[Token(Token = "0x400114C")]
	private const string urlForVirtualMachineShutdownProd = "https://api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x400114D")]
	private const string urlForVirtualMachineShutdownStage = "https://stage.api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x400114E")]
	private const string urlForVirtualMachineShutdownDev = "https://dev.api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x400114F")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x4001150")]
	private const string xApiHeaderValueProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x4001151")]
	private const string xApiHeaderValueStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x4001152")]
	private const string xApiHeaderValueDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x4001153")]
	private const string shutdownRequestJson = ".";

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x9B5E3C", Offset = "0x9B5E3C", VA = "0x9B5E3C")]
	public void ShutdownVirtualMachine(string tournamentId)
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x9B788C", Offset = "0x9B788C", VA = "0x9B788C")]
	private string GetUrlForShutdown(string tournamentId)
	{
		return null;
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x9B7708", Offset = "0x9B7708", VA = "0x9B7708")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x9B7A2C", Offset = "0x9B7A2C", VA = "0x9B7A2C")]
	private void OnResponseReceived(UnityWebRequest response)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x9B7B14", Offset = "0x9B7B14", VA = "0x9B7B14")]
	public TournamentVirtualMachineShutdownController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000311")]
public class TournamentDateDTO
{
	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long timestamp;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string region;

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x9B7B1C", Offset = "0x9B7B1C", VA = "0x9B7B1C")]
	public TournamentDateDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x2000312")]
public class TournamentDatesDTO
{
	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TournamentDateDTO eu;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TournamentDateDTO us;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TournamentDateDTO asia;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TournamentDateDTO all;

	[Token(Token = "0x170001C6")]
	public List<TournamentDateDTO> AllDatesDTOs
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x9B6CD0", Offset = "0x9B6CD0", VA = "0x9B6CD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x9B7B24", Offset = "0x9B7B24", VA = "0x9B7B24")]
	public TournamentDatesDTO()
	{
	}
}
[Token(Token = "0x2000314")]
public class TournamentDeathMatchAutostarter : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000315")]
	[CompilerGenerated]
	private sealed class <TryToStartCountdownCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentDeathMatchAutostarter <>4__this;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x9B8328", Offset = "0x9B8328", VA = "0x9B8328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x9B8370", Offset = "0x9B8370", VA = "0x9B8370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x9B7C78", Offset = "0x9B7C78", VA = "0x9B7C78")]
		[DebuggerHidden]
		public <TryToStartCountdownCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x9B80EC", Offset = "0x9B80EC", VA = "0x9B80EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x9B80F0", Offset = "0x9B80F0", VA = "0x9B80F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x9B8330", Offset = "0x9B8330", VA = "0x9B8330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000316")]
	[CompilerGenerated]
	private sealed class <SyncTimeCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentDeathMatchAutostarter <>4__this;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player player;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x9B8630", Offset = "0x9B8630", VA = "0x9B8630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x9B8678", Offset = "0x9B8678", VA = "0x9B8678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x9B7ED4", Offset = "0x9B7ED4", VA = "0x9B7ED4")]
		[DebuggerHidden]
		public <SyncTimeCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x9B8378", Offset = "0x9B8378", VA = "0x9B8378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x9B837C", Offset = "0x9B837C", VA = "0x9B837C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x9B8638", Offset = "0x9B8638", VA = "0x9B8638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController deathMatchGameTimeController;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Timer timerToStartTheGame;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float retryTime;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasStarted;

	[Token(Token = "0x170001C7")]
	public bool HasStarted
	{
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x9B7BC4", Offset = "0x9B7BC4", VA = "0x9B7BC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x9B7BCC", Offset = "0x9B7BCC", VA = "0x9B7BCC")]
		set
		{
		}
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x9B7BE4", Offset = "0x9B7BE4", VA = "0x9B7BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x9B7C04", Offset = "0x9B7C04", VA = "0x9B7C04")]
	[IteratorStateMachine(typeof(<TryToStartCountdownCoroutine>d__9))]
	private IEnumerator TryToStartCountdownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x9B7CA0", Offset = "0x9B7CA0", VA = "0x9B7CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x9B7E24", Offset = "0x9B7E24", VA = "0x9B7E24")]
	[PunRPC]
	private void RPCRequestTimeToStartGame(Player player)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x9B7E44", Offset = "0x9B7E44", VA = "0x9B7E44")]
	[IteratorStateMachine(typeof(<SyncTimeCoroutine>d__12))]
	private IEnumerator SyncTimeCoroutine(Player player)
	{
		return null;
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x9B7EFC", Offset = "0x9B7EFC", VA = "0x9B7EFC")]
	[PunRPC]
	private void RPCSynchronizeCountdownToGameStart(float time)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x9B7FF8", Offset = "0x9B7FF8", VA = "0x9B7FF8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x9B80C0", Offset = "0x9B80C0", VA = "0x9B80C0")]
	public TournamentDeathMatchAutostarter()
	{
	}
}
[Token(Token = "0x2000317")]
public class TournamentDeathMatchController : MonoBehaviourPun, IMatchmakingCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x200031A")]
	[CompilerGenerated]
	private sealed class <JoinLobbyAfterReadyCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x9B9920", Offset = "0x9B9920", VA = "0x9B9920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x9B9968", Offset = "0x9B9968", VA = "0x9B9968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x9B95E4", Offset = "0x9B95E4", VA = "0x9B95E4")]
		[DebuggerHidden]
		public <JoinLobbyAfterReadyCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9B9768", Offset = "0x9B9768", VA = "0x9B9768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x9B976C", Offset = "0x9B976C", VA = "0x9B976C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x9B9928", Offset = "0x9B9928", VA = "0x9B9928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchScoreboard scoreboard;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isLeavingTournamentMatch;

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x9B8680", Offset = "0x9B8680", VA = "0x9B8680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x9B87B8", Offset = "0x9B87B8", VA = "0x9B87B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x9B8810", Offset = "0x9B8810", VA = "0x9B8810")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x9B8868", Offset = "0x9B8868", VA = "0x9B8868")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x9B89A0", Offset = "0x9B89A0", VA = "0x9B89A0")]
	private void TournamentResult()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x9B92AC", Offset = "0x9B92AC", VA = "0x9B92AC")]
	private void LeaveRoom()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x9B93F8", Offset = "0x9B93F8", VA = "0x9B93F8", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x9B93FC", Offset = "0x9B93FC", VA = "0x9B93FC", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x9B948C", Offset = "0x9B948C", VA = "0x9B948C", Slot = "11")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x9B942C", Offset = "0x9B942C", VA = "0x9B942C")]
	[IteratorStateMachine(typeof(<JoinLobbyAfterReadyCoroutine>d__11))]
	private IEnumerator JoinLobbyAfterReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x9B960C", Offset = "0x9B960C", VA = "0x9B960C", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x9B9610", Offset = "0x9B9610", VA = "0x9B9610", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x9B9614", Offset = "0x9B9614", VA = "0x9B9614", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x9B9618", Offset = "0x9B9618", VA = "0x9B9618", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x9B961C", Offset = "0x9B961C", VA = "0x9B961C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x9B9620", Offset = "0x9B9620", VA = "0x9B9620", Slot = "12")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x9B9624", Offset = "0x9B9624", VA = "0x9B9624", Slot = "13")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x9B9628", Offset = "0x9B9628", VA = "0x9B9628", Slot = "14")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x9B962C", Offset = "0x9B962C", VA = "0x9B962C")]
	public TournamentDeathMatchController()
	{
	}
}
[Token(Token = "0x200031B")]
public class TournamentDebugTimers : MonoBehaviour
{
	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timeSincePlaymodeEntered;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text timeControllerState;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text stateControllerState;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text timer;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text milisecondTimer;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool statusSet;

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x9B9970", Offset = "0x9B9970", VA = "0x9B9970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x9B9C28", Offset = "0x9B9C28", VA = "0x9B9C28")]
	private void CheckStatusAmbiguity()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x9B9E9C", Offset = "0x9B9E9C", VA = "0x9B9E9C")]
	private void SetTimers(TimeSpan timeSpan)
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x9BA450", Offset = "0x9BA450", VA = "0x9BA450")]
	public TournamentDebugTimers()
	{
	}
}
[Token(Token = "0x200031C")]
public class TournamentGameStateController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x200031D")]
	public enum TournamentGameStateType
	{
		[Token(Token = "0x4001180")]
		Enrolling,
		[Token(Token = "0x4001181")]
		DividingPlayersIntoGroup,
		[Token(Token = "0x4001182")]
		WaitingForRound,
		[Token(Token = "0x4001183")]
		Playing,
		[Token(Token = "0x4001184")]
		End
	}

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentGroupDivider groupDivider;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMatchesCreator matchesCreator;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController progressController;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool forceCreatingMatches;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TournamentGameStateType tournamentGameState;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TournamentGameStateType debugTournamentGameState;

	[Token(Token = "0x170001CE")]
	public static TournamentGameStateType TournamentGameState
	{
		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x9BA458", Offset = "0x9BA458", VA = "0x9BA458")]
		get
		{
			return default(TournamentGameStateType);
		}
		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x9BA4A0", Offset = "0x9BA4A0", VA = "0x9BA4A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public static bool IsEnrolling
	{
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x9BA594", Offset = "0x9BA594", VA = "0x9BA594")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D0")]
	public static bool IsWaitingForRound
	{
		[Token(Token = "0x6001000")]
		[Address(RVA = "0x9BA5DC", Offset = "0x9BA5DC", VA = "0x9BA5DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D1")]
	public static bool IsTournamentOver
	{
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x9BA6B8", Offset = "0x9BA6B8", VA = "0x9BA6B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D2")]
	public static bool IsTournamentInProgress
	{
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x9BA700", Offset = "0x9BA700", VA = "0x9BA700")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x9BA790", Offset = "0x9BA790", VA = "0x9BA790")]
	private void CreateRoomsForAllPlayers()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x9BB180", Offset = "0x9BB180", VA = "0x9BB180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x9BB1D8", Offset = "0x9BB1D8", VA = "0x9BB1D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x9BB230", Offset = "0x9BB230", VA = "0x9BB230")]
	private void Update()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x9BB234", Offset = "0x9BB234", VA = "0x9BB234")]
	public void ForceCreatingMatches()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x9BB240", Offset = "0x9BB240", VA = "0x9BB240", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x9BB330", Offset = "0x9BB330", VA = "0x9BB330")]
	public TournamentGameStateController()
	{
	}
}
[Serializable]
[Token(Token = "0x200031E")]
public class TournamentGroup
{
	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentPlayer> playerListInGroup;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string roomName;

	[Token(Token = "0x170001D3")]
	public string RoomName
	{
		[Token(Token = "0x600100A")]
		[Address(RVA = "0x9BB338", Offset = "0x9BB338", VA = "0x9BB338")]
		get
		{
			return null;
		}
		[Token(Token = "0x600100B")]
		[Address(RVA = "0x9BB340", Offset = "0x9BB340", VA = "0x9BB340")]
		set
		{
		}
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x9BB348", Offset = "0x9BB348", VA = "0x9BB348")]
	public bool CheckIfPlayerBelongsToGroup(TournamentPlayer tournamentPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x9BB438", Offset = "0x9BB438", VA = "0x9BB438")]
	public TournamentGroup()
	{
	}
}
[Token(Token = "0x2000320")]
public class TournamentGroupDivider : MonoBehaviour
{
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentInfoWindowController tournamentInfoWindowController;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RejoinDBController rejoinDBController;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TournamentPlayer> playerDividerList;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<TournamentGroup> tournamentGroupList;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int countOfPlayersInDividerList;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int countOfGroups;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int modulo;

	[Token(Token = "0x4001190")]
	private const int defaultMaxPlayersInGroup = 4;

	[Token(Token = "0x4001191")]
	private const int threePlayersInGroup = 3;

	[Token(Token = "0x4001192")]
	private const int fivePlayersInDividerList = 5;

	[Token(Token = "0x4001193")]
	private const int twoPlayersInGroup = 2;

	[Token(Token = "0x170001D4")]
	public int CountGroup
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x9BB4D0", Offset = "0x9BB4D0", VA = "0x9BB4D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x9BA820", Offset = "0x9BA820", VA = "0x9BA820")]
	public List<TournamentGroup> StartDividingIntoGroups()
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x9BBCF0", Offset = "0x9BBCF0", VA = "0x9BBCF0")]
	private void DrawTournamentGroupListOnMasterPanel()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x9BB4D8", Offset = "0x9BB4D8", VA = "0x9BB4D8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x9BBDC4", Offset = "0x9BBDC4", VA = "0x9BBDC4")]
	public TournamentGroup GetPlayerEnrolledGroup(TournamentPlayer tournamentPlayer)
	{
		return null;
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x9BB994", Offset = "0x9BB994", VA = "0x9BB994")]
	private void SelectPlayersToTournamentGroup(int maxPlayersInGroup)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x9BBEE0", Offset = "0x9BBEE0", VA = "0x9BBEE0")]
	private TournamentPlayer GetRandomTournamentPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x9BBFE8", Offset = "0x9BBFE8", VA = "0x9BBFE8")]
	public TournamentGroupDivider()
	{
	}
}
[Token(Token = "0x2000324")]
public class TournamentHostingController : MonoBehaviour, IMatchmakingCallbacks
{
	[Token(Token = "0x4001198")]
	public const string tournamentRoomName = "Tournament";

	[Token(Token = "0x4001199")]
	private const string tournamentLobbyName = "Tournament";

	[Token(Token = "0x400119A")]
	public const string tournamentSceneName = "TournamentMenu";

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TypedLobby tournamentLobby;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentRoomCreatingErrorWindowController creatingRoomErrorWindow;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject controllersContainer;

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x9BC494", Offset = "0x9BC494", VA = "0x9BC494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x9BC4EC", Offset = "0x9BC4EC", VA = "0x9BC4EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x9BC544", Offset = "0x9BC544", VA = "0x9BC544")]
	public void CreatePhotonTournamentRoom()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x9BC78C", Offset = "0x9BC78C", VA = "0x9BC78C")]
	public void ShowCreatingRoomError(string message)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x9BC800", Offset = "0x9BC800", VA = "0x9BC800", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x9BC878", Offset = "0x9BC878", VA = "0x9BC878", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x9BC8B8", Offset = "0x9BC8B8", VA = "0x9BC8B8", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x9BC938", Offset = "0x9BC938", VA = "0x9BC938", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x9BC93C", Offset = "0x9BC93C", VA = "0x9BC93C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x9BC940", Offset = "0x9BC940", VA = "0x9BC940", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x9BC944", Offset = "0x9BC944", VA = "0x9BC944", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x9BC948", Offset = "0x9BC948", VA = "0x9BC948")]
	public TournamentHostingController()
	{
	}
}
[Token(Token = "0x2000325")]
public class TournamentHostPlayerMenuSwitcher : MonoBehaviourPun
{
	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject masterSceneContents;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject playerSceneContents;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controllersContainer;

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x9BC9F0", Offset = "0x9BC9F0", VA = "0x9BC9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x9BCAB4", Offset = "0x9BCAB4", VA = "0x9BCAB4")]
	public TournamentHostPlayerMenuSwitcher()
	{
	}
}
[Token(Token = "0x2000326")]
public class TournamentIDResetter : MonoBehaviour
{
	[Token(Token = "0x600102F")]
	[Address(RVA = "0x9BCABC", Offset = "0x9BCABC", VA = "0x9BCABC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x9BCB0C", Offset = "0x9BCB0C", VA = "0x9BCB0C")]
	public TournamentIDResetter()
	{
	}
}
[Token(Token = "0x2000327")]
public class TournamentInfoWindowController : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playerCountText;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentPlayersScrollViewController playersScrollView;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentPlayersScrollViewController playersInDividerGroupsScrollView;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numberOfPlayersInTournament;

	[Token(Token = "0x40011A7")]
	private const string groupName = "Tournament Group ";

	[Token(Token = "0x170001D5")]
	public int NumberOfPlayersInTournament
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x9BCBC4", Offset = "0x9BCBC4", VA = "0x9BCBC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001034")]
		[Address(RVA = "0x9BCBCC", Offset = "0x9BCBCC", VA = "0x9BCBCC")]
		set
		{
		}
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x9BCB14", Offset = "0x9BCB14", VA = "0x9BCB14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x9BCB6C", Offset = "0x9BCB6C", VA = "0x9BCB6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x9BCC04", Offset = "0x9BCC04", VA = "0x9BCC04")]
	public void OnBotCreated(string newBot)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x9BCD8C", Offset = "0x9BCD8C", VA = "0x9BCD8C")]
	public void OnBotRemoved(string removedBot)
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x9BCEE8", Offset = "0x9BCEE8", VA = "0x9BCEE8")]
	public void OnCloseServerClick()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x9BBD10", Offset = "0x9BBD10", VA = "0x9BBD10")]
	public void DrawTournamentGroupList(List<TournamentGroup> tournamentGroupList)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x9BD0DC", Offset = "0x9BD0DC", VA = "0x9BD0DC")]
	private void AddPlayersInfoPanelToTournamentGroupScrollView(TournamentGroup group, int countGroup)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x9BD374", Offset = "0x9BD374", VA = "0x9BD374")]
	public void ChangePlayerInfoPanelColor(string id, bool qualified)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x9BD5D4", Offset = "0x9BD5D4", VA = "0x9BD5D4", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x9BD6D0", Offset = "0x9BD6D0", VA = "0x9BD6D0", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x9BD7CC", Offset = "0x9BD7CC", VA = "0x9BD7CC", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x9BD7D0", Offset = "0x9BD7D0", VA = "0x9BD7D0", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x9BD7D4", Offset = "0x9BD7D4", VA = "0x9BD7D4", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x9BD7D8", Offset = "0x9BD7D8", VA = "0x9BD7D8", Slot = "9")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x9BD7DC", Offset = "0x9BD7DC", VA = "0x9BD7DC", Slot = "10")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x9BD7E0", Offset = "0x9BD7E0", VA = "0x9BD7E0", Slot = "11")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x9BD7E4", Offset = "0x9BD7E4", VA = "0x9BD7E4", Slot = "12")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x9BD7E8", Offset = "0x9BD7E8", VA = "0x9BD7E8", Slot = "13")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x9BD7EC", Offset = "0x9BD7EC", VA = "0x9BD7EC", Slot = "14")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x9BD7F0", Offset = "0x9BD7F0", VA = "0x9BD7F0", Slot = "15")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x9BD868", Offset = "0x9BD868", VA = "0x9BD868")]
	public TournamentInfoWindowController()
	{
	}
}
[Token(Token = "0x2000328")]
public class TournamentLeaderboardGUIController : MonoBehaviourPun
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentTopPlayerSpot> playerSpotList;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TournamentPlayer> tournamentPlayerList;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int topPlayerIndex;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int qualifiedPlayersTopIndex;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int unqualifiedPlayersTopIndex;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxPlayersInTopList;

	[Token(Token = "0x170001D6")]
	private int TopPlayerIndex
	{
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x9BD870", Offset = "0x9BD870", VA = "0x9BD870")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001049")]
		[Address(RVA = "0x9BD878", Offset = "0x9BD878", VA = "0x9BD878")]
		set
		{
		}
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x9BD8E4", Offset = "0x9BD8E4", VA = "0x9BD8E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x9BD934", Offset = "0x9BD934", VA = "0x9BD934")]
	public void ShowLeaderboard(List<TournamentPlayer> players)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x9BD8E8", Offset = "0x9BD8E8", VA = "0x9BD8E8")]
	private void SetMaxPlayersInTopList()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x9BD950", Offset = "0x9BD950", VA = "0x9BD950")]
	private void DrawLeaderboard()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x9BDA8C", Offset = "0x9BDA8C", VA = "0x9BDA8C")]
	private bool CheckIfTournamentPlayerIndexIsOutOfRange(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x9BDF20", Offset = "0x9BDF20", VA = "0x9BDF20")]
	public void ReactOnPressNextButton()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x9BDF44", Offset = "0x9BDF44", VA = "0x9BDF44")]
	public void ReactOnPressPreviousButton()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x9BDF68", Offset = "0x9BDF68", VA = "0x9BDF68")]
	public TournamentLeaderboardGUIController()
	{
	}
}
[Token(Token = "0x2000329")]
public class TournamentLobbyMenuController : WindowController, IInRoomCallbacks
{
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playersCountText;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text timeToEndEnrollmentText;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text stateInfoText;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x9BDFF0", Offset = "0x9BDFF0", VA = "0x9BDFF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x9BE144", Offset = "0x9BE144", VA = "0x9BE144")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x9BE19C", Offset = "0x9BE19C", VA = "0x9BE19C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x9BE6D0", Offset = "0x9BE6D0", VA = "0x9BE6D0")]
	public void OnSettings()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x9BE750", Offset = "0x9BE750", VA = "0x9BE750")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x9BE7D0", Offset = "0x9BE7D0", VA = "0x9BE7D0")]
	public void TournamentRoomIsNoLongerLive()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x9BE630", Offset = "0x9BE630", VA = "0x9BE630")]
	private void UpdateTournamentInProgressText()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x9BE594", Offset = "0x9BE594", VA = "0x9BE594")]
	private void UpdateTournamentOverText()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x9BE3F4", Offset = "0x9BE3F4", VA = "0x9BE3F4")]
	private void UpdateQualifiedText()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x9BE26C", Offset = "0x9BE26C", VA = "0x9BE26C")]
	private void UpdateEnrollmentText()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x9BE050", Offset = "0x9BE050", VA = "0x9BE050")]
	private void UpdatePlayerCountText()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x9BE978", Offset = "0x9BE978", VA = "0x9BE978", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x9BE97C", Offset = "0x9BE97C", VA = "0x9BE97C", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x9BE980", Offset = "0x9BE980", VA = "0x9BE980", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x9BE984", Offset = "0x9BE984", VA = "0x9BE984", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x9BE988", Offset = "0x9BE988", VA = "0x9BE988", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x9BE98C", Offset = "0x9BE98C", VA = "0x9BE98C")]
	public TournamentLobbyMenuController()
	{
	}
}
[Token(Token = "0x200032A")]
public class TournamentLocalMatchResult : MonoBehaviour
{
	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int stage;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool isItFinalMatch;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TournamentMatchClassification matchClassification;

	[Token(Token = "0x170001D7")]
	public static TournamentPlayerResult LocalPlayerResult
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x9BE994", Offset = "0x9BE994", VA = "0x9BE994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x9BEB8C", Offset = "0x9BEB8C", VA = "0x9BEB8C")]
	public static void ResetResult()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x9BEBE8", Offset = "0x9BEBE8", VA = "0x9BEBE8")]
	public TournamentLocalMatchResult()
	{
	}
}
[Token(Token = "0x200032C")]
public class TournamentMasterConnectingWindowController : MonoBehaviour, IConnectionCallbacks
{
	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text connectingToPhotonErrorText;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CloudRegionCode cloudRegionCode;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject connectingUIelements;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject selectRegionUIElements;

	[Token(Token = "0x1400001A")]
	public event Action OnConnectionEstablished
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x9B5524", Offset = "0x9B5524", VA = "0x9B5524")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x9BF194", Offset = "0x9BF194", VA = "0x9BF194")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x9BF230", Offset = "0x9BF230", VA = "0x9BF230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x9BF2BC", Offset = "0x9BF2BC", VA = "0x9BF2BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x9B5A2C", Offset = "0x9B5A2C", VA = "0x9B5A2C")]
	public void OnConnectButtonClicked()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x9BF314", Offset = "0x9BF314", VA = "0x9BF314", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x9BF354", Offset = "0x9BF354", VA = "0x9BF354")]
	public void SetRegion(CloudRegionCode cloudRegionCode)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x9BF35C", Offset = "0x9BF35C", VA = "0x9BF35C", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x9BF360", Offset = "0x9BF360", VA = "0x9BF360", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x9BF404", Offset = "0x9BF404", VA = "0x9BF404", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x9BF408", Offset = "0x9BF408", VA = "0x9BF408", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x9BF40C", Offset = "0x9BF40C", VA = "0x9BF40C", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x9BF410", Offset = "0x9BF410", VA = "0x9BF410")]
	public TournamentMasterConnectingWindowController()
	{
	}
}
[Token(Token = "0x200032D")]
public class TournamentMasterDisconnectionErrorWindowController : MonoBehaviour, IConnectionCallbacks
{
	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject disconnectionErrorWindow;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text disconnectionErrorMessageText;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x9BF420", Offset = "0x9BF420", VA = "0x9BF420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x9BF478", Offset = "0x9BF478", VA = "0x9BF478")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x9BF4D0", Offset = "0x9BF4D0", VA = "0x9BF4D0")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x9BF4EC", Offset = "0x9BF4EC", VA = "0x9BF4EC", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x9BF4F0", Offset = "0x9BF4F0", VA = "0x9BF4F0", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x9BF4F4", Offset = "0x9BF4F4", VA = "0x9BF4F4", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x9BF598", Offset = "0x9BF598", VA = "0x9BF598", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x9BF59C", Offset = "0x9BF59C", VA = "0x9BF59C", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x9BF5A0", Offset = "0x9BF5A0", VA = "0x9BF5A0", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x9BF5A4", Offset = "0x9BF5A4", VA = "0x9BF5A4")]
	public TournamentMasterDisconnectionErrorWindowController()
	{
	}
}
[Token(Token = "0x200032E")]
public class TournamentMasterSettingsWindowController : MonoBehaviour
{
	[Token(Token = "0x200032F")]
	[CompilerGenerated]
	private sealed class <InputFieldInitializationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentMasterSettingsWindowController <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x9BFB54", Offset = "0x9BFB54", VA = "0x9BFB54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x9BFB9C", Offset = "0x9BFB9C", VA = "0x9BFB9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x9BF640", Offset = "0x9BF640", VA = "0x9BF640")]
		[DebuggerHidden]
		public <InputFieldInitializationRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x9BF86C", Offset = "0x9BF86C", VA = "0x9BF86C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x9BF870", Offset = "0x9BF870", VA = "0x9BF870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x9BFB5C", Offset = "0x9BFB5C", VA = "0x9BFB5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputField tournamentYearInputField;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputField tournamentMonthInputField;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputField tournamentDayInputField;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InputField tournamentHourInputField;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InputField tournamentMinuteInputField;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputField tournamentSecondInputField;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InputField tournamentEnrollmentInputField;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InputField tournamentPreparationInputField;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private InputField tournamentMatchInputField;

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x9BF5AC", Offset = "0x9BF5AC", VA = "0x9BF5AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x9BF5CC", Offset = "0x9BF5CC", VA = "0x9BF5CC")]
	[IteratorStateMachine(typeof(<InputFieldInitializationRoutine>d__10))]
	private IEnumerator InputFieldInitializationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x9BF668", Offset = "0x9BF668", VA = "0x9BF668")]
	public void OnSetButtonClick()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x9BF864", Offset = "0x9BF864", VA = "0x9BF864")]
	public TournamentMasterSettingsWindowController()
	{
	}
}
[Token(Token = "0x2000330")]
public class TournamentMasterWindow : MonoBehaviour
{
	[Token(Token = "0x2000331")]
	public enum Type
	{
		[Token(Token = "0x40011CE")]
		BeforeConnectedToPhoton,
		[Token(Token = "0x40011CF")]
		BeforeHosting,
		[Token(Token = "0x40011D0")]
		CreatingRoom,
		[Token(Token = "0x40011D1")]
		AfterHosting,
		[Token(Token = "0x40011D2")]
		CreatingRoomError,
		[Token(Token = "0x40011D3")]
		DisconnectionError,
		[Token(Token = "0x40011D4")]
		CouldNotConnectError
	}

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Type type;

	[Token(Token = "0x170001DA")]
	public Type WindowType
	{
		[Token(Token = "0x600108B")]
		[Address(RVA = "0x9BFBA4", Offset = "0x9BFBA4", VA = "0x9BFBA4")]
		get
		{
			return default(Type);
		}
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x9BFBAC", Offset = "0x9BFBAC", VA = "0x9BFBAC")]
	public TournamentMasterWindow()
	{
	}
}
[Token(Token = "0x2000332")]
public class TournamentMasterWindowsSwitcher : MonoBehaviour
{
	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentMasterWindow> windows;

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x9BFBB4", Offset = "0x9BFBB4", VA = "0x9BFBB4")]
	public void CloseAllWindows()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x9BC690", Offset = "0x9BC690", VA = "0x9BC690")]
	public void OpenWindow(TournamentMasterWindow.Type windowType)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x9BFCC4", Offset = "0x9BFCC4", VA = "0x9BFCC4")]
	public TournamentMasterWindowsSwitcher()
	{
	}
}
[Serializable]
[Token(Token = "0x2000335")]
public class TournamentMatchClassification
{
	[Token(Token = "0x40011D9")]
	private const int playersQualifingCount = 2;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentPlayerResult> playersResults;

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x9BFD94", Offset = "0x9BFD94", VA = "0x9BFD94")]
	public TournamentMatchClassification(List<TournamentPlayerResult> playersResults)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x9B9228", Offset = "0x9B9228", VA = "0x9B9228")]
	public static bool isQualified(int playerRank, int playersCount)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000336")]
public class TournamentMatchesCreator : MonoBehaviourPun, IMatchmakingCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x200033C")]
	[CompilerGenerated]
	private sealed class <JoinLobbyAfterReadyCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentMatchesCreator <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x9C19EC", Offset = "0x9C19EC", VA = "0x9C19EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x9C1A34", Offset = "0x9C1A34", VA = "0x9C1A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x9C08AC", Offset = "0x9C08AC", VA = "0x9C08AC")]
		[DebuggerHidden]
		public <JoinLobbyAfterReadyCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x9C1804", Offset = "0x9C1804", VA = "0x9C1804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x9C1808", Offset = "0x9C1808", VA = "0x9C1808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x9C19F4", Offset = "0x9C19F4", VA = "0x9C19F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011DB")]
	private const float secondsBeforeMapChange = 10f;

	[Token(Token = "0x40011DC")]
	private const float rPCDelayTime = 2f;

	[Token(Token = "0x40011DD")]
	private const int maxRoomId = 10000;

	[Token(Token = "0x40011DE")]
	private const int minRoomId = 0;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int roomSize;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentGroup> debugTournamentGroupList;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentLobbyMenuController tournamentEnrollmentPhaseController;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController tournamentProgressController;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentLobbyMenuController tournamentLobbyMenuController;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Map deathmatchMap;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRejoing;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string roomName;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TournamentGroup groupInMatch;

	[Token(Token = "0x170001DB")]
	private WaitForSeconds waitBetweenRejoinCall
	{
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x9BFE6C", Offset = "0x9BFE6C", VA = "0x9BFE6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DC")]
	public bool IsRejoing
	{
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x9BFECC", Offset = "0x9BFECC", VA = "0x9BFECC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x9BFED4", Offset = "0x9BFED4", VA = "0x9BFED4")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public string RoomName
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x9BFEE0", Offset = "0x9BFEE0", VA = "0x9BFEE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x9BFEE8", Offset = "0x9BFEE8", VA = "0x9BFEE8")]
		set
		{
		}
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x9BFEF0", Offset = "0x9BFEF0", VA = "0x9BFEF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x9BFF48", Offset = "0x9BFF48", VA = "0x9BFF48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x9BABE4", Offset = "0x9BABE4", VA = "0x9BABE4")]
	public void CreateMatches(List<TournamentGroup> tournamentGroups)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x9BFFA0", Offset = "0x9BFFA0", VA = "0x9BFFA0")]
	private void SendRPCCreateMatchToMatchCreatingPlayer(TournamentGroup group)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x9C01D0", Offset = "0x9C01D0", VA = "0x9C01D0")]
	private static Player GetMatchCreatingPlayerForGroup(TournamentGroup group)
	{
		return null;
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x9C0374", Offset = "0x9C0374", VA = "0x9C0374")]
	[PunRPC]
	private void RPCCreateOrJoinMatch(string roomName, string[] playersInGroupIDs, string[] playersInGroupNames, bool[] playersInGroupIsBot, bool isFinalRound)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x9C05FC", Offset = "0x9C05FC", VA = "0x9C05FC")]
	public void TournamentsLocalMatchResultCreate(string[] playersInGroupIDs)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x9C07D4", Offset = "0x9C07D4", VA = "0x9C07D4")]
	public void DisconnectPlayerFroMaster()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x9C0838", Offset = "0x9C0838", VA = "0x9C0838")]
	[IteratorStateMachine(typeof(<JoinLobbyAfterReadyCoroutine>d__29))]
	private IEnumerator JoinLobbyAfterReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x9C08D4", Offset = "0x9C08D4", VA = "0x9C08D4", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x9C08F4", Offset = "0x9C08F4", VA = "0x9C08F4", Slot = "11")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x9C0AC8", Offset = "0x9C0AC8", VA = "0x9C0AC8", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x9C0ACC", Offset = "0x9C0ACC", VA = "0x9C0ACC", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x9C0AD0", Offset = "0x9C0AD0", VA = "0x9C0AD0", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x9C0AD4", Offset = "0x9C0AD4", VA = "0x9C0AD4", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x9C0AD8", Offset = "0x9C0AD8", VA = "0x9C0AD8", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x9C0ADC", Offset = "0x9C0ADC", VA = "0x9C0ADC", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x9C0AE0", Offset = "0x9C0AE0", VA = "0x9C0AE0", Slot = "12")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x9C0AE4", Offset = "0x9C0AE4", VA = "0x9C0AE4", Slot = "13")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x9C0AE8", Offset = "0x9C0AE8", VA = "0x9C0AE8", Slot = "14")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x9C0AEC", Offset = "0x9C0AEC", VA = "0x9C0AEC")]
	public TournamentMatchesCreator()
	{
	}
}
[Token(Token = "0x200033D")]
public class TournamentMatchResultsScoreboard : MonoBehaviour
{
	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentMatchResultsScoreboardEntry> entries;

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x9C1A3C", Offset = "0x9C1A3C", VA = "0x9C1A3C")]
	public void ShowResults(TournamentMatchClassification matchClassification)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x9C1B6C", Offset = "0x9C1B6C", VA = "0x9C1B6C")]
	private void ShowMatchClassificationEntries(TournamentMatchClassification matchClassification)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x9C1A64", Offset = "0x9C1A64", VA = "0x9C1A64")]
	private void HideAllResults()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x9C1C14", Offset = "0x9C1C14", VA = "0x9C1C14")]
	public TournamentMatchResultsScoreboard()
	{
	}
}
[Token(Token = "0x200033F")]
public class TournamentMatchResultsScoreboardEntry : MonoBehaviour
{
	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playerName;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text playerScore;

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x9C1D30", Offset = "0x9C1D30", VA = "0x9C1D30")]
	public void ShowResult(TournamentPlayerResult playerResult)
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x9C1EA8", Offset = "0x9C1EA8", VA = "0x9C1EA8")]
	public void HideResult()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x9C1E54", Offset = "0x9C1E54", VA = "0x9C1E54")]
	internal bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x9C1ECC", Offset = "0x9C1ECC", VA = "0x9C1ECC")]
	public TournamentMatchResultsScoreboardEntry()
	{
	}
}
[Token(Token = "0x2000340")]
public class TournamentOnMasterChangeKickerController : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x9C1ED4", Offset = "0x9C1ED4", VA = "0x9C1ED4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x9C1F2C", Offset = "0x9C1F2C", VA = "0x9C1F2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x9C1F84", Offset = "0x9C1F84", VA = "0x9C1F84", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x9C1FF0", Offset = "0x9C1FF0", VA = "0x9C1FF0", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x9C1FF4", Offset = "0x9C1FF4", VA = "0x9C1FF4", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x9C1FF8", Offset = "0x9C1FF8", VA = "0x9C1FF8", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x9C1FFC", Offset = "0x9C1FFC", VA = "0x9C1FFC", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x9C2000", Offset = "0x9C2000", VA = "0x9C2000")]
	public TournamentOnMasterChangeKickerController()
	{
	}
}
[Token(Token = "0x2000341")]
public class TournamentOrderOfLastHitSyncer : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TournamentOrderOfLastHitSyncer instance;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int orderOfLastHit;

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x9C2008", Offset = "0x9C2008", VA = "0x9C2008")]
	public void Awake()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x9C21A8", Offset = "0x9C21A8", VA = "0x9C21A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x9C2200", Offset = "0x9C2200", VA = "0x9C2200")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x9C2258", Offset = "0x9C2258", VA = "0x9C2258", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x9C2334", Offset = "0x9C2334", VA = "0x9C2334")]
	internal static void ApplyOrderOfLastHitFromMaster(int playerId)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x9C2460", Offset = "0x9C2460", VA = "0x9C2460")]
	[PunRPC]
	private void RPCApplyOrderOfLastHitFromMaster(int playerId)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x9C2808", Offset = "0x9C2808", VA = "0x9C2808")]
	private static int GetSafetyLargerOrderOfLastHitValue(int maxOrderOfLastHit)
	{
		return default(int);
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x9C2864", Offset = "0x9C2864", VA = "0x9C2864")]
	[PunRPC]
	private void RPCSyncOrderOfLastHit(int orderOfLastHit)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x9C28A0", Offset = "0x9C28A0", VA = "0x9C28A0", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x9C28A4", Offset = "0x9C28A4", VA = "0x9C28A4", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x9C28A8", Offset = "0x9C28A8", VA = "0x9C28A8", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x9C28AC", Offset = "0x9C28AC", VA = "0x9C28AC", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x9C28B0", Offset = "0x9C28B0", VA = "0x9C28B0", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x9C28D8", Offset = "0x9C28D8", VA = "0x9C28D8")]
	public TournamentOrderOfLastHitSyncer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000344")]
public class TournamentPlayer
{
	[Token(Token = "0x4001201")]
	private const string photonPlayerPersistentIDKey = "PersistentID";

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isBot;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string playerName;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TournamentPlayerResult matchResult;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int stageThatGetTo;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isSemiFinal;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string semiFinalRoomId;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int semiFinalRankInRoom;

	[Token(Token = "0x170001E0")]
	public bool IsBot
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x9C29BC", Offset = "0x9C29BC", VA = "0x9C29BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x9C29C4", Offset = "0x9C29C4", VA = "0x9C29C4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public string PlayerName
	{
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x9C29D0", Offset = "0x9C29D0", VA = "0x9C29D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x9C29D8", Offset = "0x9C29D8", VA = "0x9C29D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public static string LocalPlayerPersistentID
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x9BDAE0", Offset = "0x9BDAE0", VA = "0x9BDAE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x9C29E0", Offset = "0x9C29E0", VA = "0x9C29E0")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public string PersistentPlayerID
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x9B0C30", Offset = "0x9B0C30", VA = "0x9B0C30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x9C29A0", Offset = "0x9C29A0", VA = "0x9C29A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public int Hits
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x9B0C68", Offset = "0x9B0C68", VA = "0x9B0C68")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x9C2ABC", Offset = "0x9C2ABC", VA = "0x9C2ABC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public int Deaths
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x9B0C4C", Offset = "0x9B0C4C", VA = "0x9B0C4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x9C2AD8", Offset = "0x9C2AD8", VA = "0x9C2AD8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public int TotalHits
	{
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x9B0C14", Offset = "0x9B0C14", VA = "0x9B0C14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x9C2AF4", Offset = "0x9C2AF4", VA = "0x9C2AF4")]
		set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public int TotalDeaths
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x9B0BF8", Offset = "0x9B0BF8", VA = "0x9B0BF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001101")]
		[Address(RVA = "0x9C2B10", Offset = "0x9C2B10", VA = "0x9C2B10")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public int OrderOfLastHit
	{
		[Token(Token = "0x6001102")]
		[Address(RVA = "0x9C2B2C", Offset = "0x9C2B2C", VA = "0x9C2B2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001103")]
		[Address(RVA = "0x9C2B48", Offset = "0x9C2B48", VA = "0x9C2B48")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public bool IsQualified
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0x9C2B64", Offset = "0x9C2B64", VA = "0x9C2B64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x9C2B80", Offset = "0x9C2B80", VA = "0x9C2B80")]
		set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public bool isFinal
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x9C2BA0", Offset = "0x9C2BA0", VA = "0x9C2BA0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x9C2BA8", Offset = "0x9C2BA8", VA = "0x9C2BA8")]
		[CompilerGenerated]
		internal set
		{
		}
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x9B248C", Offset = "0x9B248C", VA = "0x9B248C")]
	public TournamentPlayer(string name, string id, bool isBot)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x9C2A68", Offset = "0x9C2A68", VA = "0x9C2A68")]
	public void UpdateTournamentResult(TournamentPlayerResult result)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x9C2BB4", Offset = "0x9C2BB4", VA = "0x9C2BB4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x9C2C9C", Offset = "0x9C2C9C", VA = "0x9C2C9C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x9BC2DC", Offset = "0x9BC2DC", VA = "0x9BC2DC")]
	public static string GetPersistentPlayerID(Player photonPlayer)
	{
		return null;
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x9C2CD4", Offset = "0x9C2CD4", VA = "0x9C2CD4")]
	public static void SetPersistentPlayerID(Player photonPlayer, string id)
	{
	}
}
[Token(Token = "0x2000345")]
public class TournamentPlayerInfoPanel : MonoBehaviour
{
	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string playerName;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text playerNameText;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string persistentPlayerID;

	[Token(Token = "0x170001EB")]
	public string PlayerName
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x9C2D7C", Offset = "0x9C2D7C", VA = "0x9C2D7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x9C2D84", Offset = "0x9C2D84", VA = "0x9C2D84")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public string PersistentPlayerID
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x9C2DC8", Offset = "0x9C2DC8", VA = "0x9C2DC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x9C2DD0", Offset = "0x9C2DD0", VA = "0x9C2DD0")]
		set
		{
		}
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x9C2DD8", Offset = "0x9C2DD8", VA = "0x9C2DD8")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x9C2E44", Offset = "0x9C2E44", VA = "0x9C2E44")]
	public TournamentPlayerInfoPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000346")]
public class TournamentPlayerResult
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string persistentPlayerID;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hits;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int totalHits;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int deaths;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int totalDeaths;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int orderOfLastHit;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isQualified;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x9B9240", Offset = "0x9B9240", VA = "0x9B9240")]
	public TournamentPlayerResult(string persistentPlayerID, int hits, int deaths, int orderOfLastHit, bool isQualified)
	{
	}
}
[Token(Token = "0x2000347")]
public class TournamentPlayersScrollViewController : MonoBehaviour
{
	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform contentTransform;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentPlayerInfoPanel playerInfoPanelPrefab;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TournamentPlayerInfoPanel> playerInfoPanels;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x9BCC3C", Offset = "0x9BCC3C", VA = "0x9BCC3C")]
	public void AddPlayer(string playerName)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x9BD204", Offset = "0x9BD204", VA = "0x9BD204")]
	public void AddPlayer(string playerName, string id)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x9BCDC4", Offset = "0x9BCDC4", VA = "0x9BCDC4")]
	public void RemovePlayer(string playerName)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x9BCF8C", Offset = "0x9BCF8C", VA = "0x9BCF8C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x9BD390", Offset = "0x9BD390", VA = "0x9BD390")]
	public void ChangePlayerInfoPanelColor(string id, bool qualified)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x9C2E5C", Offset = "0x9C2E5C", VA = "0x9C2E5C")]
	public TournamentPlayersScrollViewController()
	{
	}
}
[Token(Token = "0x200034B")]
public class TournamentProgressController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400121B")]
	private const int stageDuration = 540;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentResultsController resultsController;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentGroupDivider groupDivider;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeFromStageStart;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int tournamentStage;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSemiFinalTournamentRoundStarted;

	[Token(Token = "0x170001ED")]
	public int TournamentStage
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x9C2FB8", Offset = "0x9C2FB8", VA = "0x9C2FB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x9C2FC0", Offset = "0x9C2FC0", VA = "0x9C2FC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x9C3018", Offset = "0x9C3018", VA = "0x9C3018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x9C3070", Offset = "0x9C3070", VA = "0x9C3070")]
	public void StartNextStage()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x9C32A0", Offset = "0x9C32A0", VA = "0x9C32A0")]
	internal int GetPlayerStage(TournamentPlayerResult playerResult)
	{
		return default(int);
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x9C32C4", Offset = "0x9C32C4", VA = "0x9C32C4")]
	public bool IsStageFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x9C1654", Offset = "0x9C1654", VA = "0x9C1654")]
	public bool IsLastTournamentRoundStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x9C32F4", Offset = "0x9C32F4", VA = "0x9C32F4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x9C33B0", Offset = "0x9C33B0", VA = "0x9C33B0")]
	internal bool IsSemiFinalTournamentRoundStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x9C33EC", Offset = "0x9C33EC", VA = "0x9C33EC")]
	public TournamentProgressController()
	{
	}
}
[Token(Token = "0x200034C")]
public class TournamentRegionDropdownController : MonoBehaviour
{
	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterConnectingWindowController tournamentMasterConnectingWindowController;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x9C33FC", Offset = "0x9C33FC", VA = "0x9C33FC")]
	public void OnRegionSelected(int regionIndex)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x9C3528", Offset = "0x9C3528", VA = "0x9C3528")]
	public TournamentRegionDropdownController()
	{
	}
}
[Token(Token = "0x200034D")]
public class TournamentResultsController : MonoBehaviourPun
{
	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentStageResults> tournamentResults;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentLeaderboardController leaderboardController;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController progressController;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x9C3530", Offset = "0x9C3530", VA = "0x9C3530")]
	private void Awake()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x9BE834", Offset = "0x9BE834", VA = "0x9BE834")]
	public static bool IsQualifiedForNextRound()
	{
		return default(bool);
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x9C3C6C", Offset = "0x9C3C6C", VA = "0x9C3C6C")]
	[PunRPC]
	private void RPCAddMatchResult(string[] playerPersistentIDs, int[] playersScores, int[] playersDeaths, int[] ordersOfLastHit, bool[] isQualifieds)
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x9C40F0", Offset = "0x9C40F0", VA = "0x9C40F0")]
	private bool MatchWithPlayersOfGivenIdsAlreadySaved(string[] playerPersistentIDs)
	{
		return default(bool);
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x9C421C", Offset = "0x9C421C", VA = "0x9C421C")]
	public TournamentResultsController()
	{
	}
}
[Token(Token = "0x2000350")]
public class TournamentRoomCreatingErrorWindowController : MonoBehaviour
{
	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text errorText;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x9BC7DC", Offset = "0x9BC7DC", VA = "0x9BC7DC")]
	public void SetErrorText(string errorMessage)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x9C4548", Offset = "0x9C4548", VA = "0x9C4548")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x9C4564", Offset = "0x9C4564", VA = "0x9C4564")]
	public TournamentRoomCreatingErrorWindowController()
	{
	}
}
[Token(Token = "0x2000351")]
public struct TournamentRoomSize
{
	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int roomSize;
}
[Serializable]
[Token(Token = "0x2000352")]
public class TournamentStageResults
{
	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentMatchClassification> matchesResults;

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x9C3218", Offset = "0x9C3218", VA = "0x9C3218")]
	public TournamentStageResults()
	{
	}
}
[Token(Token = "0x2000353")]
public class TournamentTestingBotController : MonoBehaviourPun, IConnectionCallbacks, ILobbyCallbacks, IMatchmakingCallbacks
{
	[PreserveSig]
	[Token(Token = "0x6001141")]
	[Address(RVA = "0x9C456C", Offset = "0x9C456C", VA = "0x9C456C")]
	public static extern bool SetWindowText(IntPtr hwnd, string lpString);

	[PreserveSig]
	[Token(Token = "0x6001142")]
	[Address(RVA = "0x9C4610", Offset = "0x9C4610", VA = "0x9C4610")]
	public static extern IntPtr GetActiveWindow();

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x9C4678", Offset = "0x9C4678", VA = "0x9C4678")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x9C46D0", Offset = "0x9C46D0", VA = "0x9C46D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x9C4728", Offset = "0x9C4728", VA = "0x9C4728")]
	private void Start()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x9C4A18", Offset = "0x9C4A18", VA = "0x9C4A18", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x9C4A1C", Offset = "0x9C4A1C", VA = "0x9C4A1C", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x9C4AE8", Offset = "0x9C4AE8", VA = "0x9C4AE8", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x9C4AEC", Offset = "0x9C4AEC", VA = "0x9C4AEC", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x9C4AF0", Offset = "0x9C4AF0", VA = "0x9C4AF0", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x9C4AF4", Offset = "0x9C4AF4", VA = "0x9C4AF4", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x9C4AF8", Offset = "0x9C4AF8", VA = "0x9C4AF8", Slot = "10")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x9C4D68", Offset = "0x9C4D68", VA = "0x9C4D68", Slot = "11")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x9C4D6C", Offset = "0x9C4D6C", VA = "0x9C4D6C", Slot = "12")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x9C4D70", Offset = "0x9C4D70", VA = "0x9C4D70", Slot = "13")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x9C4D74", Offset = "0x9C4D74", VA = "0x9C4D74", Slot = "14")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x9C4D78", Offset = "0x9C4D78", VA = "0x9C4D78", Slot = "15")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x9C4D7C", Offset = "0x9C4D7C", VA = "0x9C4D7C", Slot = "16")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x9C4D80", Offset = "0x9C4D80", VA = "0x9C4D80", Slot = "17")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x9C4DE8", Offset = "0x9C4DE8", VA = "0x9C4DE8", Slot = "18")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x9C4DEC", Offset = "0x9C4DEC", VA = "0x9C4DEC", Slot = "19")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x9C4DF0", Offset = "0x9C4DF0", VA = "0x9C4DF0", Slot = "20")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x9C4DF4", Offset = "0x9C4DF4", VA = "0x9C4DF4")]
	public TournamentTestingBotController()
	{
	}
}
[Token(Token = "0x2000354")]
public class TournamentTimeController : MonoBehaviourPun
{
	[Token(Token = "0x2000355")]
	[CompilerGenerated]
	private sealed class <SynchronizeTimeOnlineCycleCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentTimeController <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x9C5964", Offset = "0x9C5964", VA = "0x9C5964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x9C59AC", Offset = "0x9C59AC", VA = "0x9C59AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x9C5084", Offset = "0x9C5084", VA = "0x9C5084")]
		[DebuggerHidden]
		public <SynchronizeTimeOnlineCycleCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x9C5844", Offset = "0x9C5844", VA = "0x9C5844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x9C5848", Offset = "0x9C5848", VA = "0x9C5848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x9C596C", Offset = "0x9C596C", VA = "0x9C596C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000356")]
	[CompilerGenerated]
	private sealed class <IncreaseCurrentTimeByOneSecond>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentTimeController <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0x9C5AC0", Offset = "0x9C5AC0", VA = "0x9C5AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x9C5B08", Offset = "0x9C5B08", VA = "0x9C5B08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x9C51BC", Offset = "0x9C51BC", VA = "0x9C51BC")]
		[DebuggerHidden]
		public <IncreaseCurrentTimeByOneSecond>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x9C59B4", Offset = "0x9C59B4", VA = "0x9C59B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x9C59B8", Offset = "0x9C59B8", VA = "0x9C59B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x9C5AC8", Offset = "0x9C5AC8", VA = "0x9C5AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001233")]
	private const int secondsInDay = 86400;

	[Token(Token = "0x4001234")]
	private const int secondsInHour = 3600;

	[Token(Token = "0x4001235")]
	private const int hoursInDay = 24;

	[Token(Token = "0x4001236")]
	private const int minutesInHour = 60;

	[Token(Token = "0x4001237")]
	private const int minutesInDay = 1440;

	[Token(Token = "0x4001238")]
	private const float delayOfCycleSynchronizingTimeOnline = 120f;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DateTime nextTournamentDate;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DateTime storedDateTime;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TimeSpan enrollmentDuration;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static TimeSpan firstPreparationDuration;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static TimeSpan preparationDuration;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static TimeSpan gameDuration;

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x9C4DFC", Offset = "0x9C4DFC", VA = "0x9C4DFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x9C4E94", Offset = "0x9C4E94", VA = "0x9C4E94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x9C4F9C", Offset = "0x9C4F9C", VA = "0x9C4F9C")]
	[IteratorStateMachine(typeof(<SynchronizeTimeOnlineCycleCoroutine>d__14))]
	private IEnumerator SynchronizeTimeOnlineCycleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x9C50AC", Offset = "0x9C50AC", VA = "0x9C50AC")]
	private void SetStoredDateTime(DateTime dateTimeToSet)
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x9C5010", Offset = "0x9C5010", VA = "0x9C5010")]
	[IteratorStateMachine(typeof(<IncreaseCurrentTimeByOneSecond>d__16))]
	private IEnumerator IncreaseCurrentTimeByOneSecond()
	{
		return null;
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x9C51E4", Offset = "0x9C51E4", VA = "0x9C51E4")]
	[ContextMenu("CheckTimeToNextDate")]
	public static TimeSpan GetTimeToNextTournament()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x9C52AC", Offset = "0x9C52AC", VA = "0x9C52AC")]
	private static TimeSpan GetTimeToNextTournamentWithNegative()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x9B40D4", Offset = "0x9B40D4", VA = "0x9B40D4")]
	public static TimeSpan GetTimeToEnrollmentEnd()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x9C5308", Offset = "0x9C5308", VA = "0x9C5308")]
	public static void SetEnrollmentFinish()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x9C53A4", Offset = "0x9C53A4", VA = "0x9C53A4")]
	public static bool IsWaitingForEnrollment()
	{
		return default(bool);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x9B496C", Offset = "0x9B496C", VA = "0x9B496C")]
	public static bool IsDuringEnrollment()
	{
		return default(bool);
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x9B9F2C", Offset = "0x9B9F2C", VA = "0x9B9F2C")]
	public static bool IsDuringPreparation()
	{
		return default(bool);
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x9BA0C0", Offset = "0x9BA0C0", VA = "0x9BA0C0")]
	public static TimeSpan GetTimeToPreparationEnd()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x9BA300", Offset = "0x9BA300", VA = "0x9BA300")]
	public static bool IsDuringGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x9C553C", Offset = "0x9C553C", VA = "0x9C553C")]
	private static bool GetIsDuringGame(DateTime gameStartTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x9C5434", Offset = "0x9C5434", VA = "0x9C5434")]
	public static TimeSpan GetPreparationDuration(bool isFirstPreparation)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x9C54A0", Offset = "0x9C54A0", VA = "0x9C54A0")]
	public static TimeSpan GetGameCycleDuration(bool isFirstPreparation)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x9C55DC", Offset = "0x9C55DC", VA = "0x9C55DC")]
	public static TimeSpan GetGameCyclesDurationFromEnrollmentEnd(int numberOfCycles)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x9C56D4", Offset = "0x9C56D4", VA = "0x9C56D4")]
	public TournamentTimeController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000357")]
public class TournamentTopPlayerSpot : MonoBehaviour
{
	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text rankSpot;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text playerNameSpot;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text playerStageSpot;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playerKillsSpot;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerDeathsSpot;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text playerTotalKillsSpot;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text playerTotalDeathsSpot;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer qualifiedSprite;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer unqualifiedSprite;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer goldMedal;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer silverMedal;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpriteRenderer bronzeMedal;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color remotePlayerColor;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color localPlayerColor;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color remoteNotQualifiedPlayerColor;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color localNotQualifiedPlayerColor;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string brackets;

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x9BDB34", Offset = "0x9BDB34", VA = "0x9BDB34")]
	public void SetTopPlayerSpot(int rank, TournamentPlayer player, bool isLocal)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x9B1C0C", Offset = "0x9B1C0C", VA = "0x9B1C0C")]
	public void SetTopPlayerSpotInMainMenu(int rank, string playerName, string stage, string kills, string deaths, bool isFinalResult, bool isLocal)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x9C5B84", Offset = "0x9C5B84", VA = "0x9C5B84")]
	private void ShowMedal(int rank, bool isMainMenu)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x9C5B10", Offset = "0x9C5B10", VA = "0x9C5B10")]
	private void SetStatusSpotBlank()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x9B2058", Offset = "0x9B2058", VA = "0x9B2058")]
	public void SetSpotBlank()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x9C5BFC", Offset = "0x9C5BFC", VA = "0x9C5BFC")]
	public TournamentTopPlayerSpot()
	{
	}
}
[Token(Token = "0x2000358")]
public static class UnixTimestampConverter
{
	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DateTime unixEpoch;

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x9AFF90", Offset = "0x9AFF90", VA = "0x9AFF90")]
	public static long ToUnixTimestamp(DateTime target)
	{
		return default(long);
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x9B73D0", Offset = "0x9B73D0", VA = "0x9B73D0")]
	public static DateTime FromUnixTimestamp(long target)
	{
		return default(DateTime);
	}
}
[Token(Token = "0x2000359")]
public class BonusPanelController : MonoBehaviour
{
	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BonusTypeWithFormatter> typesWithFormatters;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Space]
	private ItemsWithBonuses itemBonusList;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Text> bonusesTexts;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ornamentImage;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject spacer;

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x9C5CD0", Offset = "0x9C5CD0", VA = "0x9C5CD0")]
	public void DisplayBonuses(ShopItem shopItem)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x9C6338", Offset = "0x9C6338", VA = "0x9C6338")]
	private void DisableAllPanels()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x9C64DC", Offset = "0x9C64DC", VA = "0x9C64DC")]
	public BonusPanelController()
	{
	}
}
[Token(Token = "0x200035B")]
public class EnemyIndicator : MonoBehaviour
{
	[Token(Token = "0x200035C")]
	[CompilerGenerated]
	private sealed class <RotateToTheTarget>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyIndicator <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x9C6C20", Offset = "0x9C6C20", VA = "0x9C6C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x9C6C68", Offset = "0x9C6C68", VA = "0x9C6C68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x9C66A8", Offset = "0x9C66A8", VA = "0x9C66A8")]
		[DebuggerHidden]
		public <RotateToTheTarget>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x9C6B24", Offset = "0x9C6B24", VA = "0x9C6B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x9C6B28", Offset = "0x9C6B28", VA = "0x9C6B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x9C6C28", Offset = "0x9C6C28", VA = "0x9C6C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035D")]
	[CompilerGenerated]
	private sealed class <DestroyCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyIndicator <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x9C6DA8", Offset = "0x9C6DA8", VA = "0x9C6DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x9C6DF0", Offset = "0x9C6DF0", VA = "0x9C6DF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x9C6A64", Offset = "0x9C6A64", VA = "0x9C6A64")]
		[DebuggerHidden]
		public <DestroyCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x9C6C70", Offset = "0x9C6C70", VA = "0x9C6C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x9C6C74", Offset = "0x9C6C74", VA = "0x9C6C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x9C6DB0", Offset = "0x9C6DB0", VA = "0x9C6DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400125D")]
	private const float fadeSpeed = 5f;

	[Token(Token = "0x400125E")]
	private const float minAngleToShowIndicator = 40f;

	[Token(Token = "0x400125F")]
	private const float indicatorMaxAlpha = 0.8f;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform rect;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform player;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion targetRotation;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetPosition;

	[Token(Token = "0x170001F2")]
	public Transform Target
	{
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x9C653C", Offset = "0x9C653C", VA = "0x9C653C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001188")]
		[Address(RVA = "0x9C6544", Offset = "0x9C6544", VA = "0x9C6544")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x9C654C", Offset = "0x9C654C", VA = "0x9C654C")]
	public void ShowIndicator(Transform target, Transform player)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x9C6608", Offset = "0x9C6608", VA = "0x9C6608")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x9C6594", Offset = "0x9C6594", VA = "0x9C6594")]
	[IteratorStateMachine(typeof(<RotateToTheTarget>d__14))]
	private IEnumerator RotateToTheTarget()
	{
		return null;
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x9C66D0", Offset = "0x9C66D0", VA = "0x9C66D0")]
	private void RotateIndicator()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x9C67E8", Offset = "0x9C67E8", VA = "0x9C67E8")]
	private void FadeIndicator()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x9C6634", Offset = "0x9C6634", VA = "0x9C6634")]
	[IteratorStateMachine(typeof(<DestroyCoroutine>d__17))]
	private IEnumerator DestroyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x9C6A8C", Offset = "0x9C6A8C", VA = "0x9C6A8C")]
	public EnemyIndicator()
	{
	}
}
[Token(Token = "0x200035E")]
public class FastShootingLockIconSwitcher : MonoBehaviour
{
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image fastShootingLockImage;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite fastShootingLockedSprite;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite fastShootingUnlockedSprite;

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x9C6DF8", Offset = "0x9C6DF8", VA = "0x9C6DF8")]
	[SerializeField]
	private void Awake()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x9C6E98", Offset = "0x9C6E98", VA = "0x9C6E98")]
	public FastShootingLockIconSwitcher()
	{
	}
}
[Token(Token = "0x200035F")]
public class GoldUI : GoldUICore
{
	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text _goldText;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float StartingGold;

	[Token(Token = "0x170001F7")]
	protected override Text goldText
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x9C6EA0", Offset = "0x9C6EA0", VA = "0x9C6EA0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x9C6EA8", Offset = "0x9C6EA8", VA = "0x9C6EA8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x9C6EB0", Offset = "0x9C6EB0", VA = "0x9C6EB0", Slot = "6")]
	public override void DisplayGoldEarnedDuringGame()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x9C6FC4", Offset = "0x9C6FC4", VA = "0x9C6FC4", Slot = "7")]
	public override void InitGoldUI()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x9C7058", Offset = "0x9C7058", VA = "0x9C7058")]
	public GoldUI()
	{
	}
}
[Token(Token = "0x2000360")]
public class LobbyFastShootingLockSwitcher : MonoBehaviour
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject columnHeadersWithLock;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject columnHeadersWithoutLock;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController serverListController;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject serverListElementPrefabWithLock;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject serverListElementPrefabWithoutLock;

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x9C7060", Offset = "0x9C7060", VA = "0x9C7060")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x9C7124", Offset = "0x9C7124", VA = "0x9C7124")]
	public LobbyFastShootingLockSwitcher()
	{
	}
}
[Token(Token = "0x2000361")]
public class SpellsWindowUI : MonoBehaviour
{
	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text spellNameText;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text descriptionText;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text cooldownText;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text levelText;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LevelUI levelIndicator;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject levelInfoGO;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject useButton;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject learnButton;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text spellPointsLeftText;

	[Token(Token = "0x170001F8")]
	public GameObject LearnButton
	{
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x9C712C", Offset = "0x9C712C", VA = "0x9C712C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public GameObject UseButton
	{
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x9C7134", Offset = "0x9C7134", VA = "0x9C7134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FA")]
	public Text SpellPointsLeftText
	{
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x9C713C", Offset = "0x9C713C", VA = "0x9C713C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x9C7144", Offset = "0x9C7144", VA = "0x9C7144")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x9C71F0", Offset = "0x9C71F0", VA = "0x9C71F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x9C727C", Offset = "0x9C727C", VA = "0x9C727C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x9C72E4", Offset = "0x9C72E4", VA = "0x9C72E4")]
	public void UpdateWindowReference()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x9C7350", Offset = "0x9C7350", VA = "0x9C7350")]
	public void SetSpellDesription(AbilityType abilityType)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x9C7798", Offset = "0x9C7798", VA = "0x9C7798")]
	public void UpdateLevel()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x9C7810", Offset = "0x9C7810", VA = "0x9C7810")]
	public void UpdateButtonsState(bool state)
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x9C7854", Offset = "0x9C7854", VA = "0x9C7854")]
	private void EnableUseButton()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x9C7628", Offset = "0x9C7628", VA = "0x9C7628")]
	private int GetAbilityLevel(IAbility spell, AbilityType abilityType)
	{
		return default(int);
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x9C7874", Offset = "0x9C7874", VA = "0x9C7874")]
	public SpellsWindowUI()
	{
	}
}
[Token(Token = "0x2000362")]
public class PauseWindowDController : WindowController
{
	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x9C787C", Offset = "0x9C787C", VA = "0x9C787C")]
	public void OnStart()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x9C78B4", Offset = "0x9C78B4", VA = "0x9C78B4")]
	public void OnContinue()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x9C78D4", Offset = "0x9C78D4", VA = "0x9C78D4")]
	public void OnSettings()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x9C7954", Offset = "0x9C7954", VA = "0x9C7954")]
	public void OnTester()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x9C79D4", Offset = "0x9C79D4", VA = "0x9C79D4")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x9C7A54", Offset = "0x9C7A54", VA = "0x9C7A54")]
	public PauseWindowDController()
	{
	}
}
[Token(Token = "0x2000363")]
public class AssignSpellsWindowController : WindowController
{
	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellSlot leftSpellSlot;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpellSlot rightSpellSlot;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpellSlot topSpellSlot;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpellSlot bottomSpellSlot;

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x9C7A5C", Offset = "0x9C7A5C", VA = "0x9C7A5C")]
	public void OnLeftQuater()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x9C7A78", Offset = "0x9C7A78", VA = "0x9C7A78")]
	public void OnRightQuater()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x9C7A94", Offset = "0x9C7A94", VA = "0x9C7A94")]
	public void OnTopQuater()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x9C7AB0", Offset = "0x9C7AB0", VA = "0x9C7AB0")]
	public void OnBottomQuater()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x9C7ACC", Offset = "0x9C7ACC", VA = "0x9C7ACC")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x9C7B74", Offset = "0x9C7B74", VA = "0x9C7B74")]
	public AssignSpellsWindowController()
	{
	}
}
[Token(Token = "0x2000364")]
public class NeedMorePointsWindowController : WindowController
{
	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x9C7B7C", Offset = "0x9C7B7C", VA = "0x9C7B7C")]
	public void OnOk()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x9C7BEC", Offset = "0x9C7BEC", VA = "0x9C7BEC")]
	public NeedMorePointsWindowController()
	{
	}
}
[Token(Token = "0x2000365")]
public class ResetSpellsWindowController : WindowController
{
	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsResetController spellsResetController;

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x9C7BF4", Offset = "0x9C7BF4", VA = "0x9C7BF4")]
	public void OnYes()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x9C7C74", Offset = "0x9C7C74", VA = "0x9C7C74")]
	public void OnNo()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x9C7CE4", Offset = "0x9C7CE4", VA = "0x9C7CE4")]
	public ResetSpellsWindowController()
	{
	}
}
[Token(Token = "0x2000366")]
public class SpellsWindowController : WindowController
{
	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WindowType spellsWindow;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AbilityType firstAbilityType;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityType secondAbilityType;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AbilityType thirdAbilityType;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityType fourthAbilityType;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private AbilityType fifthAbilityType;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text infoText;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x9C7CEC", Offset = "0x9C7CEC", VA = "0x9C7CEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x9C7D54", Offset = "0x9C7D54", VA = "0x9C7D54")]
	public void OnPickFirstSpell()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x9C7D78", Offset = "0x9C7D78", VA = "0x9C7D78")]
	public void OnPickSecondSpell()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x9C7D9C", Offset = "0x9C7D9C", VA = "0x9C7D9C")]
	public void OnPickThirdSpell()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x9C7DC0", Offset = "0x9C7DC0", VA = "0x9C7DC0")]
	public void OnPickFourthSpell()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x9C7DE4", Offset = "0x9C7DE4", VA = "0x9C7DE4")]
	public void OnPickFifthSpell()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x9C7E08", Offset = "0x9C7E08", VA = "0x9C7E08")]
	public void OnSpellsWindow()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x9C7E7C", Offset = "0x9C7E7C", VA = "0x9C7E7C")]
	public void OnLearn()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x9C7E98", Offset = "0x9C7E98", VA = "0x9C7E98")]
	public void OnUse()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x9C7F90", Offset = "0x9C7F90", VA = "0x9C7F90")]
	public void OnReset()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x9C7FF0", Offset = "0x9C7FF0", VA = "0x9C7FF0")]
	public SpellsWindowController()
	{
	}
}
[Token(Token = "0x2000367")]
public class TesterWindowDController : WindowController
{
	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterDeathMatch testerDeathMatch;

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x9C7FF8", Offset = "0x9C7FF8", VA = "0x9C7FF8")]
	public void OnSetShortTime()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x9C8014", Offset = "0x9C8014", VA = "0x9C8014")]
	public void OnSetMuchosTime()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x9C8030", Offset = "0x9C8030", VA = "0x9C8030")]
	public void OnSetDefaultTime()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x9C804C", Offset = "0x9C804C", VA = "0x9C804C")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x9C80CC", Offset = "0x9C80CC", VA = "0x9C80CC")]
	public void SetLowResolution()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x9C80D4", Offset = "0x9C80D4", VA = "0x9C80D4")]
	public TesterWindowDController()
	{
	}
}
[Token(Token = "0x2000368")]
public class TesterWindowWController : WindowController
{
	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterMenu testerMenu;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x9C80DC", Offset = "0x9C80DC", VA = "0x9C80DC")]
	public void OnGiveCastleMuchosHealth()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x9C80F8", Offset = "0x9C80F8", VA = "0x9C80F8")]
	public void OnGiveCastleFullHealth()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x9C8114", Offset = "0x9C8114", VA = "0x9C8114")]
	public void OnGiveCastleOneHealth()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x9C8130", Offset = "0x9C8130", VA = "0x9C8130")]
	public void OnSetNormalTrolls()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x9C814C", Offset = "0x9C814C", VA = "0x9C814C")]
	public void OnSetBlackTrolls()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x9C8168", Offset = "0x9C8168", VA = "0x9C8168")]
	public void OnSetWyverns()
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x9C8184", Offset = "0x9C8184", VA = "0x9C8184")]
	public void OnSetRedDragons()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x9C81A0", Offset = "0x9C81A0", VA = "0x9C81A0")]
	public void OnSetGreenDragons()
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x9C81BC", Offset = "0x9C81BC", VA = "0x9C81BC")]
	public void OnSetNormalAxemans()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x9C81D8", Offset = "0x9C81D8", VA = "0x9C81D8")]
	public void OnSetRedAxemans()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x9C81F4", Offset = "0x9C81F4", VA = "0x9C81F4")]
	public void OnPlayerImmortal()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x9C8210", Offset = "0x9C8210", VA = "0x9C8210")]
	public void OnBoostGameSpeed()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x9C822C", Offset = "0x9C822C", VA = "0x9C822C")]
	public void OnSetGizmo()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x9C8248", Offset = "0x9C8248", VA = "0x9C8248")]
	public void OnSetKanit()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x9C8264", Offset = "0x9C8264", VA = "0x9C8264")]
	public void OnSetGnur()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x9C8280", Offset = "0x9C8280", VA = "0x9C8280")]
	public void OnSetTestingRoutes()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x9C829C", Offset = "0x9C829C", VA = "0x9C829C")]
	public void OnSkipWave()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x9C831C", Offset = "0x9C831C", VA = "0x9C831C")]
	public void OnAddPoints(int points)
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x9C8348", Offset = "0x9C8348", VA = "0x9C8348")]
	public void OnRevertToNormalWaves()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x9C8364", Offset = "0x9C8364", VA = "0x9C8364")]
	public void OnFinishWave()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x9C8380", Offset = "0x9C8380", VA = "0x9C8380")]
	public void OnTestGold()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x9C839C", Offset = "0x9C839C", VA = "0x9C839C")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x9C841C", Offset = "0x9C841C", VA = "0x9C841C")]
	public void SetLowResolution()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x9C8424", Offset = "0x9C8424", VA = "0x9C8424")]
	public TesterWindowWController()
	{
	}
}
[Token(Token = "0x2000369")]
public class WaveChooserWindowController : WindowController
{
	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterMenu testerMenu;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text waveNumber;

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x9C842C", Offset = "0x9C842C", VA = "0x9C842C")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x9C84A0", Offset = "0x9C84A0", VA = "0x9C84A0")]
	public void OnSetWave()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x9C8544", Offset = "0x9C8544", VA = "0x9C8544")]
	public void OnSetWaveAndSkipCurrent()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x9C85E8", Offset = "0x9C85E8", VA = "0x9C85E8")]
	public WaveChooserWindowController()
	{
	}
}
[Token(Token = "0x200036A")]
public class UIDebug : MonoBehaviour
{
	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera playerCamera;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RaycastHit _rayHit;

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x9C85F0", Offset = "0x9C85F0", VA = "0x9C85F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x9C865C", Offset = "0x9C865C", VA = "0x9C865C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x9C87AC", Offset = "0x9C87AC", VA = "0x9C87AC")]
	public UIDebug()
	{
	}
}
[Token(Token = "0x200036B")]
public class TransformInfo
{
	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rotation;

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x9C87B4", Offset = "0x9C87B4", VA = "0x9C87B4")]
	public TransformInfo(Vector3 _position, Quaternion _rotation)
	{
	}
}
[Token(Token = "0x200036C")]
public interface IVoting
{
	[Token(Token = "0x170001FB")]
	Action OnVotingForceFinish
	{
		[Token(Token = "0x60011F4")]
		get;
		[Token(Token = "0x60011F5")]
		set;
	}

	[Token(Token = "0x170001FC")]
	Action OnVotingEffectFinish
	{
		[Token(Token = "0x60011F6")]
		get;
		[Token(Token = "0x60011F7")]
		set;
	}

	[Token(Token = "0x170001FD")]
	Action OnVotingPossible
	{
		[Token(Token = "0x60011F8")]
		get;
		[Token(Token = "0x60011F9")]
		set;
	}

	[Token(Token = "0x170001FE")]
	Action OnVotingImpossible
	{
		[Token(Token = "0x60011FA")]
		get;
		[Token(Token = "0x60011FB")]
		set;
	}

	[Token(Token = "0x60011FC")]
	string GetStartVotingMessage(Player requestingPlayer);

	[Token(Token = "0x60011FD")]
	bool GetVotingResult(Vote[] votes);

	[Token(Token = "0x60011FE")]
	string GetVotingSuccessMessage();

	[Token(Token = "0x60011FF")]
	string GetVotingFailedMessage();

	[Token(Token = "0x6001200")]
	void ApplyEffect(bool isForced);
}
[Token(Token = "0x200036D")]
public class PauseVoting : MonoBehaviour, IVoting
{
	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotedPauseController votedPauseController;

	[Token(Token = "0x170001FF")]
	public Action OnVotingForceFinish
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x9C8818", Offset = "0x9C8818", VA = "0x9C8818", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001202")]
		[Address(RVA = "0x9C8820", Offset = "0x9C8820", VA = "0x9C8820", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public Action OnVotingEffectFinish
	{
		[Token(Token = "0x6001203")]
		[Address(RVA = "0x9C8828", Offset = "0x9C8828", VA = "0x9C8828", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001204")]
		[Address(RVA = "0x9C8830", Offset = "0x9C8830", VA = "0x9C8830", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public Action OnVotingPossible
	{
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x9C8838", Offset = "0x9C8838", VA = "0x9C8838", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x9C8840", Offset = "0x9C8840", VA = "0x9C8840", Slot = "9")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000202")]
	public Action OnVotingImpossible
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x9C8848", Offset = "0x9C8848", VA = "0x9C8848", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x9C8850", Offset = "0x9C8850", VA = "0x9C8850", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x9C8858", Offset = "0x9C8858", VA = "0x9C8858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x9C8BA0", Offset = "0x9C8BA0", VA = "0x9C8BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x9C8EE8", Offset = "0x9C8EE8", VA = "0x9C8EE8", Slot = "16")]
	public void ApplyEffect(bool isForced)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x9C8F14", Offset = "0x9C8F14", VA = "0x9C8F14", Slot = "12")]
	public string GetStartVotingMessage(Player requestingPlayer)
	{
		return null;
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x9C8FAC", Offset = "0x9C8FAC", VA = "0x9C8FAC", Slot = "15")]
	public string GetVotingFailedMessage()
	{
		return null;
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x9C8FF4", Offset = "0x9C8FF4", VA = "0x9C8FF4", Slot = "13")]
	public bool GetVotingResult(Vote[] votes)
	{
		return default(bool);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x9C90B8", Offset = "0x9C90B8", VA = "0x9C90B8", Slot = "14")]
	public string GetVotingSuccessMessage()
	{
		return null;
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x9C9100", Offset = "0x9C9100", VA = "0x9C9100")]
	private void OnWaveEnded(int obj)
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x9C911C", Offset = "0x9C911C", VA = "0x9C911C")]
	private void OnVotedPauseFinish()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x9C9138", Offset = "0x9C9138", VA = "0x9C9138")]
	private void OnGameFinished()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x9C9154", Offset = "0x9C9154", VA = "0x9C9154")]
	private void OnGameStarted()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x9C9170", Offset = "0x9C9170", VA = "0x9C9170")]
	public PauseVoting()
	{
	}
}
[Token(Token = "0x200036E")]
public class Vote
{
	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Player Voter;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VoteType voteType;

	[Token(Token = "0x17000203")]
	public VoteType VoteType
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x9C92B0", Offset = "0x9C92B0", VA = "0x9C92B0")]
		get
		{
			return default(VoteType);
		}
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x9C92B8", Offset = "0x9C92B8", VA = "0x9C92B8")]
		set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action OnVoteChange
	{
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x9C9178", Offset = "0x9C9178", VA = "0x9C9178")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x9C9214", Offset = "0x9C9214", VA = "0x9C9214")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x9C92E4", Offset = "0x9C92E4", VA = "0x9C92E4")]
	public void SetValuesFrom(Vote vote)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x9C9350", Offset = "0x9C9350", VA = "0x9C9350")]
	public void Reset()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x9C9390", Offset = "0x9C9390", VA = "0x9C9390")]
	public Vote()
	{
	}
}
[Token(Token = "0x200036F")]
public class VoteController : MonoBehaviourPun
{
	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x9CA398", Offset = "0x9CA398", VA = "0x9CA398")]
	public void VoteYes()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x9CA3CC", Offset = "0x9CA3CC", VA = "0x9CA3CC")]
	public void VoteNo()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x9CA3B4", Offset = "0x9CA3B4", VA = "0x9CA3B4")]
	private void Vote(VoteType voteType)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x9CA580", Offset = "0x9CA580", VA = "0x9CA580")]
	public VoteController()
	{
	}
}
[Token(Token = "0x2000370")]
public enum VoteType
{
	[Token(Token = "0x40012A0")]
	NoOpinion,
	[Token(Token = "0x40012A1")]
	Yes,
	[Token(Token = "0x40012A2")]
	No
}
[Token(Token = "0x2000371")]
public class VotingController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x40012A3")]
	private const float MessageTime = 6f;

	[Token(Token = "0x40012A4")]
	private const float MessageDistance = 2f;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[RequireInterface(typeof(IVoting))]
	[SerializeField]
	private UnityEngine.Object votingObject;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IVoting voting;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vote[] votes;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VotingState votingState;

	[Token(Token = "0x17000204")]
	private Action<PlayerControllerCore> OnPlayerRemovedWithPlayer
	{
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x9CA588", Offset = "0x9CA588", VA = "0x9CA588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000205")]
	public Vote[] Votes
	{
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x9CA604", Offset = "0x9CA604", VA = "0x9CA604")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000206")]
	public bool HasBeenVoting
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x9CA9B4", Offset = "0x9CA9B4", VA = "0x9CA9B4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x9CA9BC", Offset = "0x9CA9BC", VA = "0x9CA9BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public Player RequestingPlayer
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x9CA9C8", Offset = "0x9CA9C8", VA = "0x9CA9C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x9CA9D0", Offset = "0x9CA9D0", VA = "0x9CA9D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public IVoting Voting
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x9CA9D8", Offset = "0x9CA9D8", VA = "0x9CA9D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000209")]
	public VotingState VotingState
	{
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x9CA9E0", Offset = "0x9CA9E0", VA = "0x9CA9E0")]
		get
		{
			return default(VotingState);
		}
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x9CA9E8", Offset = "0x9CA9E8", VA = "0x9CA9E8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public VoteType LocalVoteType
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x9CAA34", Offset = "0x9CAA34", VA = "0x9CAA34")]
		get
		{
			return default(VoteType);
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action OnStateChanged
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x9CA60C", Offset = "0x9CA60C", VA = "0x9CA60C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x9CA6A8", Offset = "0x9CA6A8", VA = "0x9CA6A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action OnVotesChange
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9CA744", Offset = "0x9CA744", VA = "0x9CA744")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x9CA7E0", Offset = "0x9CA7E0", VA = "0x9CA7E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action OnDisableVoting
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x9CA87C", Offset = "0x9CA87C", VA = "0x9CA87C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x9CA918", Offset = "0x9CA918", VA = "0x9CA918")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x9CAB08", Offset = "0x9CAB08", VA = "0x9CAB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x9CAD1C", Offset = "0x9CAD1C", VA = "0x9CAD1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x9CB294", Offset = "0x9CB294", VA = "0x9CB294")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x9CB83C", Offset = "0x9CB83C", VA = "0x9CB83C")]
	public void RequestVoting()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x9CA3E8", Offset = "0x9CA3E8", VA = "0x9CA3E8")]
	public void Vote(VoteType voteType)
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x9CB950", Offset = "0x9CB950", VA = "0x9CB950")]
	public int GetVotesCount(VoteType voteType)
	{
		return default(int);
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x9CB9B4", Offset = "0x9CB9B4", VA = "0x9CB9B4")]
	private void EnableRequesting()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x9CBA54", Offset = "0x9CBA54", VA = "0x9CBA54")]
	private void DisableVoting()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x9CBA8C", Offset = "0x9CBA8C", VA = "0x9CBA8C")]
	private void FinishVoting(bool isForced)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x9CBD6C", Offset = "0x9CBD6C", VA = "0x9CBD6C")]
	[PunRPC]
	private void RPCRequestVoting(Player requestingPlayer)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x9CC08C", Offset = "0x9CC08C", VA = "0x9CC08C")]
	[PunRPC]
	private void RPCVote(Player voter, VoteType voteType)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x9CC1D8", Offset = "0x9CC1D8", VA = "0x9CC1D8")]
	private void MoveVotesLeft(int startIndex)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x9CC130", Offset = "0x9CC130", VA = "0x9CC130")]
	private bool GetAreAllPlayersVoted()
	{
		return default(bool);
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x9CC26C", Offset = "0x9CC26C", VA = "0x9CC26C")]
	private void CallOnVotesChangeEvent()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x9CC288", Offset = "0x9CC288", VA = "0x9CC288")]
	private void OnVotingForceFinish()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x9CC304", Offset = "0x9CC304", VA = "0x9CC304")]
	private void OnVotingEffectFinish()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x9CC394", Offset = "0x9CC394", VA = "0x9CC394")]
	private void OnPlayerAdded(PlayerControllerCore player)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x9CC484", Offset = "0x9CC484", VA = "0x9CC484")]
	private void OnPlayerRemoved()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x9CC5A8", Offset = "0x9CC5A8", VA = "0x9CC5A8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x9CC898", Offset = "0x9CC898", VA = "0x9CC898")]
	public VotingController()
	{
	}
}
[Token(Token = "0x2000372")]
public class VotingRequestController : MonoBehaviourPun
{
	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x9CC8A4", Offset = "0x9CC8A4", VA = "0x9CC8A4")]
	public void RequestVoting()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x9CC8BC", Offset = "0x9CC8BC", VA = "0x9CC8BC")]
	public VotingRequestController()
	{
	}
}
[Token(Token = "0x2000373")]
public enum VotingState
{
	[Token(Token = "0x40012B0")]
	NotAvailable,
	[Token(Token = "0x40012B1")]
	Requesting,
	[Token(Token = "0x40012B2")]
	Voting,
	[Token(Token = "0x40012B3")]
	VotingSuccessfull
}
[Token(Token = "0x2000374")]
public class VotingVisualsController : MonoBehaviour
{
	[Token(Token = "0x40012B4")]
	private const float MessageTime = 6f;

	[Token(Token = "0x40012B5")]
	private const float MessageDistance = 2f;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject votingGUI;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject votedYesGUI;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject votedNoGUI;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject votingSuccessGUI;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject votingResultGUI;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text yesCounterText;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text noCounterText;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject requestVotingGUI;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color yesVoteColor;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Color noVoteColor;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color neutralVoteColor;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private List<Image> voteIndicatorImages;

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x9CC8C4", Offset = "0x9CC8C4", VA = "0x9CC8C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x9CC9E4", Offset = "0x9CC9E4", VA = "0x9CC9E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x9CCB04", Offset = "0x9CCB04", VA = "0x9CCB04")]
	private void UpdateGUIToState()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x9CCBA0", Offset = "0x9CCBA0", VA = "0x9CCBA0")]
	private void ShowProperGUI(VotingState votingState)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x9CD0E0", Offset = "0x9CD0E0", VA = "0x9CD0E0")]
	private void ShowVotingGUI()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x9CCEB0", Offset = "0x9CCEB0", VA = "0x9CCEB0")]
	private void PrepareVotesIndicators()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x9CCB2C", Offset = "0x9CCB2C", VA = "0x9CCB2C")]
	private void DisableGUIs()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x9CD11C", Offset = "0x9CD11C", VA = "0x9CD11C")]
	private void UpdateGUIToVotes()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x9CD15C", Offset = "0x9CD15C", VA = "0x9CD15C")]
	private void SetVotingIndicators()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x9CD2A4", Offset = "0x9CD2A4", VA = "0x9CD2A4")]
	private void DisableRequestVotingGUI()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x9CD2C4", Offset = "0x9CD2C4", VA = "0x9CD2C4")]
	public VotingVisualsController()
	{
	}
}
[Token(Token = "0x2000375")]
public class VRoteinManager : MonoBehaviour
{
	[Token(Token = "0x6001252")]
	[Address(RVA = "0x9CD2CC", Offset = "0x9CD2CC", VA = "0x9CD2CC")]
	public VRoteinManager()
	{
	}
}
[Token(Token = "0x2000376")]
public class WaterfallSoundDelayer : MonoBehaviour
{
	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource waterfall;

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x9CD2D4", Offset = "0x9CD2D4", VA = "0x9CD2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x9CD328", Offset = "0x9CD328", VA = "0x9CD328")]
	private void ActivateDelayed()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x9CD348", Offset = "0x9CD348", VA = "0x9CD348")]
	public WaterfallSoundDelayer()
	{
	}
}
[Token(Token = "0x2000377")]
public enum EquipmentItemType
{
	[Token(Token = "0x40012C5")]
	Bow,
	[Token(Token = "0x40012C6")]
	Helmet,
	[Token(Token = "0x40012C7")]
	BowAndHelmet
}
[Token(Token = "0x2000378")]
public enum EquipmentItemKey
{
	[Token(Token = "0x40012C9")]
	Bow_WoodenBow_Default,
	[Token(Token = "0x40012CA")]
	Bow_SteelDefender,
	[Token(Token = "0x40012CB")]
	Bow_NaturesCall,
	[Token(Token = "0x40012CC")]
	Bow_BowOfAlliance,
	[Token(Token = "0x40012CD")]
	Helmet_Barbuta_default,
	[Token(Token = "0x40012CE")]
	Helmet_ArchersHelmet,
	[Token(Token = "0x40012CF")]
	Helmet_GiftOfTheSea,
	[Token(Token = "0x40012D0")]
	Helmet_HelmetOfAncestors,
	[Token(Token = "0x40012D1")]
	Helmet_GriffinHelmet,
	[Token(Token = "0x40012D2")]
	Set_ForestGuardian,
	[Token(Token = "0x40012D3")]
	Set_OrcHunter,
	[Token(Token = "0x40012D4")]
	Set_HolySet,
	[Token(Token = "0x40012D5")]
	Set_FrozenTouch
}
[Token(Token = "0x2000379")]
public class ShopController : MonoBehaviour
{
	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShopItemsController shopItemsController;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EquipmentChangesManager equipmentChangesManager;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject useButton;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject buyButton;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text boughtText;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject currentBowSelection;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text playerGold;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject infoWindow;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text infoWindowText;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject boughtMark;

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x9CD350", Offset = "0x9CD350", VA = "0x9CD350")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x9CD514", Offset = "0x9CD514", VA = "0x9CD514")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x9CD484", Offset = "0x9CD484", VA = "0x9CD484")]
	public void UpdatePlayerGoldInShopInfoBoard()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x9CD640", Offset = "0x9CD640", VA = "0x9CD640")]
	public void UpdatePlayerGoldInShopInfoBoard(int gold)
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x9CD688", Offset = "0x9CD688", VA = "0x9CD688")]
	public void BuyItem()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x9CD7B0", Offset = "0x9CD7B0", VA = "0x9CD7B0")]
	public void UseItem()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x9CDAA4", Offset = "0x9CDAA4", VA = "0x9CDAA4")]
	private void ChangeEquipment(EquipmentChangesManager equipmentChangesManager)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x9CDB28", Offset = "0x9CDB28", VA = "0x9CDB28")]
	public void GoToPreviousItem()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x9CDC14", Offset = "0x9CDC14", VA = "0x9CDC14")]
	public void GoToNextItem()
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x9CD9E0", Offset = "0x9CD9E0", VA = "0x9CD9E0")]
	public void RefreshShopButtonsInfo()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x9CD994", Offset = "0x9CD994", VA = "0x9CD994")]
	public void ShowInfoWindow(string info)
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x9CDC30", Offset = "0x9CDC30", VA = "0x9CDC30")]
	public ShopController()
	{
	}
}
[Token(Token = "0x200037A")]
public class ShopItemsController : MonoBehaviour
{
	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShopController shopController;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShopItem currentItem;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShopItem previousItem;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text descriptionText;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text costText;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text currentBowNumberText;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text numberOfItems;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text nameText;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<ShopItem> shopItems;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BonusPanelController bonusPanelController;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentItemNumber;

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x9CDC38", Offset = "0x9CDC38", VA = "0x9CDC38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x9CE104", Offset = "0x9CE104", VA = "0x9CE104")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x9CDEBC", Offset = "0x9CDEBC", VA = "0x9CDEBC")]
	private void ShowItem(ShopItem shopItem)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x9CE17C", Offset = "0x9CE17C", VA = "0x9CE17C")]
	private bool CheckIfCanSetFreeItemsInShop()
	{
		return default(bool);
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x9CDFFC", Offset = "0x9CDFFC", VA = "0x9CDFFC")]
	private void SetFreeItemsInShop()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x9CDB7C", Offset = "0x9CDB7C", VA = "0x9CDB7C")]
	public void ChangeItem(int shift)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x9CDDB0", Offset = "0x9CDDB0", VA = "0x9CDDB0")]
	public int GetIndexOfItem(string equipmentItemKey)
	{
		return default(int);
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x9CE1CC", Offset = "0x9CE1CC", VA = "0x9CE1CC")]
	public ShopItemsController()
	{
	}
}
[Token(Token = "0x200037D")]
public class SiegeTowerController : MonoBehaviour
{
	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isMovingTowardsGate;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasReachedDestination;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool hasOpenedDoors;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float positionFromStartingToDestination;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float angleFromStartingToDestination;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform destinationTransform;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform doorsTransform;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RoutePoint jumpingRoutePoint;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startingPosition;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startingRotation;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 destinationRotation;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float doorAngleRotation;

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x9CE2E8", Offset = "0x9CE2E8", VA = "0x9CE2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x9CE388", Offset = "0x9CE388", VA = "0x9CE388")]
	private void MovingTowardsTheGate()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x9CE468", Offset = "0x9CE468", VA = "0x9CE468")]
	private void OpeningSiegeDoor()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x9CE500", Offset = "0x9CE500", VA = "0x9CE500")]
	private void Update()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x9CE524", Offset = "0x9CE524", VA = "0x9CE524")]
	public SiegeTowerController()
	{
	}
}
[Token(Token = "0x200037E")]
public static class LODMaker
{
	[Token(Token = "0x6001274")]
	[Address(RVA = "0x9CE548", Offset = "0x9CE548", VA = "0x9CE548")]
	public static Mesh MakeLODMesh(Mesh orig, float aMaxWeight, bool recalcNormals = true, float removeSmallParts = 1f, bool reuseOldMesh = false)
	{
		return null;
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x9CE564", Offset = "0x9CE564", VA = "0x9CE564")]
	public static Mesh MakeLODMesh(Mesh orig, float aMaxWeight, float removeSmallParts, float protectNormals, float protectUvs, float smallTrianglesFirst, float protectSubMeshesAndSharpEdges, bool recalcNormals, bool reuseOldMesh = false)
	{
		return null;
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x9CE6DC", Offset = "0x9CE6DC", VA = "0x9CE6DC")]
	private static void GetWeights(float aMaxWeight, float removeSmallParts, float protectNormals, float protectUvs, float smallTrianglesFirst, float protectSubMeshesAndSharpEdges, out float sideLengthWeight, out float oldAngleWeight, out float newAngleWeight, out float uvWeight, out float areaDiffWeight, out float normalWeight, out float vertexWeight, out float centerDistanceWeight)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x9CF468", Offset = "0x9CF468", VA = "0x9CF468")]
	public static void MakeLODMeshInBackground(object data)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x9CE780", Offset = "0x9CE780", VA = "0x9CE780")]
	private static Mesh MakeLODMesh(Mesh orig, float maxWeight, float removeSmallParts, float sideLengthWeight, float oldAngleWeight, float newAngleWeight, float uvWeight, float areaDiffWeight, float normalWeight, float vertexWeight, float centerDistanceWeight, bool recalcNormals, bool reuseOldMesh)
	{
		return null;
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x9D08FC", Offset = "0x9D08FC", VA = "0x9D08FC")]
	private static void MakeLODMesh(Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, ref Matrix4x4[] bindposes, BoneWeight[] bws, ref int[] subMeshOffsets, Bounds meshBounds, float maxWeight, float removeSmallParts, float sideLengthWeight, float oldAngleWeight, float newAngleWeight, float uvWeight, float areaDiffWeight, float normalWeight, float vertexWeight, float centerDistanceWeight, out List<Vector3> newVs, out List<Vector3> newNs, out List<Vector2> newUv1s, out List<Vector2> newUv2s, out List<Vector2> newUv3s, out List<Vector2> newUv4s, out List<Color32> newColors32, out List<int> newTs, out List<BoneWeight> newBws)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x9D4A54", Offset = "0x9D4A54", VA = "0x9D4A54")]
	private static bool AnyWeightOK(float[] weights, float aMaxWeight)
	{
		return default(bool);
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x9D40E8", Offset = "0x9D40E8", VA = "0x9D40E8")]
	private static int[] GetAdjacentTriangles(int[] ts, int tIdx, List<List<int>> trianglesPerVertex, int[] uniqueVs, int[] triangleGroups, List<List<int>> trianglesPerGroup)
	{
		return null;
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x9D8488", Offset = "0x9D8488", VA = "0x9D8488")]
	private static void SetTriangleGroup(int tIdx0, int tIdx1, int[] triangleGroups, List<List<int>> trianglesPerGroup)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x9D4AA4", Offset = "0x9D4AA4", VA = "0x9D4AA4")]
	private static void GetTotalAngleAndCenterDistanceForCorner(int[] ts, Vector3[] vs, int[] movedVs, int vertexIdx, Vector3[] centerDistances, ref float totalAngle, ref Vector3 totalCenterDist)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x9D5084", Offset = "0x9D5084", VA = "0x9D5084")]
	private static void GetTotalAngleAndCenterDistanceForNewCorner(int[] ts, Vector3[] vs, int[] movedVs, int[] uniqueVs, int vertexIdx, int newIdx, Vector3[] centerDistances, float maxWeight, ref float totalAngle, ref Vector3 totalCenterDist, ref bool flipsTriangles)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x9D5A14", Offset = "0x9D5A14", VA = "0x9D5A14")]
	private static void GetUVStretchAndAreaForCorner(int[] ts, Vector3[] vs, int[] movedVs, int[] uniqueVs, Vector2[] uvs, int cFrom, int cTo, ref float affectedUvAreaDiff, ref float affectedAreaDiff, ref float totalUvAreaDiff, ref float totalAreaDiff)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x9D3F94", Offset = "0x9D3F94", VA = "0x9D3F94")]
	private static float GetNormalDiffForCorners(Vector3[] ns, int corner1, int corner2)
	{
		return default(float);
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x9D60F0", Offset = "0x9D60F0", VA = "0x9D60F0")]
	private static void MergeVertices(ref int oldV, int newV, bool[] hasTwinVS, Vector3[] vs, int[] triangles, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, bool[] deletedVertices, int[] movedVs, int[] uniqueVs, int[] movedUv1s, int[] movedUv2s, int[] movedUv3s, int[] movedUv4s, int[] movedColors, List<List<int>> trianglesPerVertex, bool logYN)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x9D88C0", Offset = "0x9D88C0", VA = "0x9D88C0")]
	private static void MoveVertex(int oldV, int newV, int[] movedVs, int[] uniqueVs, int[] movedUv1s, int[] movedUv2s, int[] movedUv3s, int[] movedUv4s, int[] movedColors)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x9D6480", Offset = "0x9D6480", VA = "0x9D6480")]
	private static void FillNewMeshArray(Vector3[] vs, bool[] vdel, int[] movedVs, Vector3[] ns, Vector2[] uv1s, int[] movedUv1s, Vector2[] uv2s, int[] movedUv2s, Vector2[] uv3s, int[] movedUv3s, Vector2[] uv4s, int[] movedUv4s, Color32[] colors32, int[] movedColors, BoneWeight[] bws, List<Vector3> newVs, List<Vector3> newNs, List<Vector2> newUv1s, List<Vector2> newUv2s, List<Vector2> newUv3s, List<Vector2> newUv4s, List<Color32> newColors32, List<BoneWeight> newBws, int[] o2n)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x9D6DB0", Offset = "0x9D6DB0", VA = "0x9D6DB0")]
	private static void FillNewMeshTriangles(int[] oldTriangles, int[] o2n, List<int> newTriangles, int[] subMeshOffsets, int[] triangleGroups, List<int> newTGrps)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x9D7EF4", Offset = "0x9D7EF4", VA = "0x9D7EF4")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, List<int> ts)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x9D8A54", Offset = "0x9D8A54", VA = "0x9D8A54")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, List<List<int>> subMeshes)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x9D91B4", Offset = "0x9D91B4", VA = "0x9D91B4")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, Dictionary<Material, List<int>> subMeshes)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x9D716C", Offset = "0x9D716C", VA = "0x9D716C")]
	private static void RemoveEmptyTriangles(List<Vector3> newVs, List<Vector3> newNs, List<Vector2> newUv1s, List<Vector2> newUv2s, List<Vector2> newUv3s, List<Vector2> newUv4s, List<Color32> newColors32, List<int> newTs, List<BoneWeight> newBws, int[] subMeshOffsets, List<int> newTGrps)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x9D7878", Offset = "0x9D7878", VA = "0x9D7878")]
	private static void RemoveMiniTriangleGroups(float removeSmallParts, Vector3 sizeMultiplier, float aMaxWeight, List<Vector3> newVs, List<int> newTs, int[] subMeshOffsets, List<int> newTGrps)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x9D38E8", Offset = "0x9D38E8", VA = "0x9D38E8")]
	public static Mesh CreateNewMesh(Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, BoneWeight[] bws, Matrix4x4[] bindposes, int[] subMeshOffsets, bool recalcNormals)
	{
		return null;
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x9D3620", Offset = "0x9D3620", VA = "0x9D3620")]
	public static void FillMesh(Mesh mesh, Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, BoneWeight[] bws, Matrix4x4[] bindposes, int[] subMeshOffsets, bool recalcNormals)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x9D5964", Offset = "0x9D5964", VA = "0x9D5964")]
	private static float AngleCornerDiff(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x9D59D0", Offset = "0x9D59D0", VA = "0x9D59D0")]
	private static float AngleDiff(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x9D3DB0", Offset = "0x9D3DB0", VA = "0x9D3DB0")]
	private static float Area(Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(float);
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x9D9B1C", Offset = "0x9D9B1C", VA = "0x9D9B1C")]
	private static int GetVertexEqualTo(Vector3 v, List<int> orderedVertices, Vector3[] vs)
	{
		return default(int);
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x9D3BE0", Offset = "0x9D3BE0", VA = "0x9D3BE0")]
	private static List<int> GetVerticesEqualTo(Vector3 v, List<int> orderedVertices, Vector3[] vs)
	{
		return null;
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x9D9D2C", Offset = "0x9D9D2C", VA = "0x9D9D2C")]
	private static List<int> GetVerticesWithinBox(Vector3 from, Vector3 to, List<int> orderedVertices, Vector3[] vs)
	{
		return null;
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x9D39C4", Offset = "0x9D39C4", VA = "0x9D39C4")]
	private static int GetLastVertexWithYSmaller(float y, List<int> orderedVertices, Vector3[] vs, int limitSearchRange)
	{
		return default(int);
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x9D9FCC", Offset = "0x9D9FCC", VA = "0x9D9FCC")]
	private static bool IsVertexObscured(Vector3[] vs, Vector3[] ns, int[] ts, bool[] vObscured, int[] uniqueVs, Vector3 vertexBoxSize, List<int> orderedVertices, List<List<int>> trianglesPerVertex, int[] subMeshIdxPerVertex, float maxObscureDist, bool hiddenByOtherSubmesh, Vector3 vertex, Vector3 normal, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x9DA6AC", Offset = "0x9DA6AC", VA = "0x9DA6AC")]
	public static float FindCollision(Vector3 fromPos, Vector3 direction, Vector3 pointOnPlane, Vector3 normalPlane)
	{
		return default(float);
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x9D3534", Offset = "0x9D3534", VA = "0x9D3534")]
	private static void Log(string msg)
	{
	}
}
[Token(Token = "0x200037F")]
public class LODSwitcher : MonoBehaviour
{
	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] lodMeshes;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lodGameObjects;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lodScreenSizes;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deactivateAtDistance;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera customCamera;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 centerOffset;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float pixelsPerMeter;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float objectSize;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int fixedLODLevel;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lodLevel;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int frameOffset;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int frameInterval;

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x9DA780", Offset = "0x9DA780", VA = "0x9DA780")]
	private void Start()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x9DACC0", Offset = "0x9DACC0", VA = "0x9DACC0")]
	public void ComputeDimensions()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x9DB254", Offset = "0x9DB254", VA = "0x9DB254")]
	public void SetCustomCamera(Camera aCamera)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x9DB270", Offset = "0x9DB270", VA = "0x9DB270")]
	public void SetFixedLODLevel(int aLevel)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x9DB2A8", Offset = "0x9DB2A8", VA = "0x9DB2A8")]
	public void ReleaseFixedLODLevel()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x9DB2B4", Offset = "0x9DB2B4", VA = "0x9DB2B4")]
	public int GetLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x9DB290", Offset = "0x9DB290", VA = "0x9DB290")]
	public int MaxLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x9DB2BC", Offset = "0x9DB2BC", VA = "0x9DB2BC")]
	public Mesh GetMesh(int aLevel)
	{
		return null;
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x9DB2F4", Offset = "0x9DB2F4", VA = "0x9DB2F4")]
	public void SetMesh(Mesh aMesh, int aLevel)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x9DB494", Offset = "0x9DB494", VA = "0x9DB494")]
	public void SetRelativeScreenSize(float aValue, int aLevel)
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x9DB5E4", Offset = "0x9DB5E4", VA = "0x9DB5E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x9DB61C", Offset = "0x9DB61C", VA = "0x9DB61C")]
	public Vector3 NearestCameraPositionForLOD(int aLevel)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x9DB820", Offset = "0x9DB820", VA = "0x9DB820")]
	public float ScreenPortion()
	{
		return default(float);
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x9DB0C0", Offset = "0x9DB0C0", VA = "0x9DB0C0")]
	private void ComputeLODLevel()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x9DB164", Offset = "0x9DB164", VA = "0x9DB164")]
	private void GetMeshFilter()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x9DAA68", Offset = "0x9DAA68", VA = "0x9DAA68")]
	public void SetLODLevel(int newLodLevel)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x9DBA74", Offset = "0x9DBA74", VA = "0x9DBA74")]
	public LODSwitcher()
	{
	}
}
[Token(Token = "0x2000380")]
public class SmallTournamentCanvasController : MonoBehaviourPun
{
	[Token(Token = "0x4001309")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x400130A")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x400130B")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text connectingText;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject tournamentInfo;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BeforeEnrollmentTournamentController beforeEnrollmentTournamentController;

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x9DBA8C", Offset = "0x9DBA8C", VA = "0x9DBA8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x9DBABC", Offset = "0x9DBABC", VA = "0x9DBABC")]
	private CloudRegionCode GetRegionBasedOnLocalTimeZone()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x9DBCE8", Offset = "0x9DBCE8", VA = "0x9DBCE8")]
	private void ShowTournamentInfo()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x9DBD20", Offset = "0x9DBD20", VA = "0x9DBD20")]
	public SmallTournamentCanvasController()
	{
	}
}
[Token(Token = "0x2000381")]
public class RandomOrcRoar : MonoBehaviour
{
	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Breathing;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x9DBD28", Offset = "0x9DBD28", VA = "0x9DBD28")]
	private void Start()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x9DBD80", Offset = "0x9DBD80", VA = "0x9DBD80")]
	private void Update()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x9DBDCC", Offset = "0x9DBDCC", VA = "0x9DBDCC")]
	public RandomOrcRoar()
	{
	}
}
[Token(Token = "0x2000382")]
public class SpellsResetController : MonoBehaviour
{
	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x9DBDD4", Offset = "0x9DBDD4", VA = "0x9DBDD4")]
	public void OnButtonResetClick()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x9DBE48", Offset = "0x9DBE48", VA = "0x9DBE48")]
	public SpellsResetController()
	{
	}
}
[Token(Token = "0x2000383")]
public class AnimatedUVs : MonoBehaviour
{
	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedY;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedx;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offsety;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float offsetx;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x9DBE50", Offset = "0x9DBE50", VA = "0x9DBE50")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x9DBEA8", Offset = "0x9DBEA8", VA = "0x9DBEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x9DBF4C", Offset = "0x9DBF4C", VA = "0x9DBF4C")]
	public AnimatedUVs()
	{
	}
}
[Token(Token = "0x2000384")]
public class AnimateTiledTextureOnTrail : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	public delegate void VoidEvent();

	[Token(Token = "0x2000386")]
	[CompilerGenerated]
	private sealed class <updateTiling>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTiledTextureOnTrail <>4__this;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <checkAgainst>5__2;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x9DCA38", Offset = "0x9DCA38", VA = "0x9DCA38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x9DCA80", Offset = "0x9DCA80", VA = "0x9DCA80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x9DC60C", Offset = "0x9DC60C", VA = "0x9DC60C")]
		[DebuggerHidden]
		public <updateTiling>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x9DC8C0", Offset = "0x9DC8C0", VA = "0x9DC8C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x9DC8C4", Offset = "0x9DC8C4", VA = "0x9DC8C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x9DCA40", Offset = "0x9DCA40", VA = "0x9DCA40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _columns;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _rows;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 _scale;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 _offset;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 _buffer;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _framesPerSecond;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _playOnce;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _disableUponCompletion;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool _enableEvents;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool _playOnEnable;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _newMaterialInstance;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _index;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _textureSize;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _materialInstance;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hasMaterialInstance;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _isPlaying;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VoidEvent> _voidEventCallbackList;

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x9DBF5C", Offset = "0x9DBF5C", VA = "0x9DBF5C")]
	public void RegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x9DC060", Offset = "0x9DC060", VA = "0x9DC060")]
	public void UnRegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x9DC10C", Offset = "0x9DC10C", VA = "0x9DC10C")]
	public void Play()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x9DC22C", Offset = "0x9DC22C", VA = "0x9DC22C")]
	public void ChangeMaterial(Material newMaterial, bool newInstance = false)
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x9DC3E0", Offset = "0x9DC3E0", VA = "0x9DC3E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x9DC4A0", Offset = "0x9DC4A0", VA = "0x9DC4A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x9DC540", Offset = "0x9DC540", VA = "0x9DC540")]
	private void HandleCallbacks(List<VoidEvent> cbList)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x9DC5DC", Offset = "0x9DC5DC", VA = "0x9DC5DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x9DC3BC", Offset = "0x9DC3BC", VA = "0x9DC3BC")]
	private void CalcTextureSize()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x9DC1B8", Offset = "0x9DC1B8", VA = "0x9DC1B8")]
	[IteratorStateMachine(typeof(<updateTiling>d__27))]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x9DC634", Offset = "0x9DC634", VA = "0x9DC634")]
	private void ApplyOffset()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x9DC74C", Offset = "0x9DC74C", VA = "0x9DC74C")]
	public AnimateTiledTextureOnTrail()
	{
	}
}
[Token(Token = "0x2000387")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x9DCA88", Offset = "0x9DCA88", VA = "0x9DCA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x9DCA8C", Offset = "0x9DCA8C", VA = "0x9DCA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x9DCAD4", Offset = "0x9DCAD4", VA = "0x9DCAD4")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x2000388")]
public class button_target : MonoBehaviour
{
	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MY_target;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject temp_target;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] ALL_target;

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x9DCADC", Offset = "0x9DCADC", VA = "0x9DCADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x9DCC00", Offset = "0x9DCC00", VA = "0x9DCC00")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x9DCC04", Offset = "0x9DCC04", VA = "0x9DCC04")]
	public void ShowTarget()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x9DCCC4", Offset = "0x9DCCC4", VA = "0x9DCCC4")]
	public button_target()
	{
	}
}
[Token(Token = "0x2000389")]
public class demo : MonoBehaviour
{
	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x9DCCCC", Offset = "0x9DCCCC", VA = "0x9DCCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x9DCCD0", Offset = "0x9DCCD0", VA = "0x9DCCD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x9DCCD4", Offset = "0x9DCCD4", VA = "0x9DCCD4")]
	public void GoURL_FX()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x9DCD18", Offset = "0x9DCD18", VA = "0x9DCD18")]
	public void GoURL_Free()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x9DCD5C", Offset = "0x9DCD5C", VA = "0x9DCD5C")]
	public demo()
	{
	}
}
[Token(Token = "0x200038A")]
public class tazo_UVScroller : MonoBehaviour
{
	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetMaterialSlot;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myrender;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedX;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeWentX;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeWentY;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x9DCD64", Offset = "0x9DCD64", VA = "0x9DCD64")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x9DCDBC", Offset = "0x9DCDBC", VA = "0x9DCDBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x9DCE60", Offset = "0x9DCE60", VA = "0x9DCE60")]
	public tazo_UVScroller()
	{
	}
}
[Token(Token = "0x200038B")]
public class tazo_UVScroller_r : MonoBehaviour
{
	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetMaterialSlot;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myrender;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedX;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeWentX;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeWentY;

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x9DCE70", Offset = "0x9DCE70", VA = "0x9DCE70")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x9DCEC8", Offset = "0x9DCEC8", VA = "0x9DCEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x9DCFA4", Offset = "0x9DCFA4", VA = "0x9DCFA4")]
	public tazo_UVScroller_r()
	{
	}
}
[Token(Token = "0x200038C")]
public class TorchSlider : MonoBehaviour
{
	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorcheObj;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUISkin SkinSlider;

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x9DCFB4", Offset = "0x9DCFB4", VA = "0x9DCFB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x9DD15C", Offset = "0x9DD15C", VA = "0x9DD15C")]
	public TorchSlider()
	{
	}
}
[Token(Token = "0x200038D")]
public class Torchslider2 : MonoBehaviour
{
	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorcheObj;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera MainCamera;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUISkin SkinSlider;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject Torch;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Intensity_Light;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool CameraRendering;

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x9DD164", Offset = "0x9DD164", VA = "0x9DD164")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x9DD358", Offset = "0x9DD358", VA = "0x9DD358")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x9DD418", Offset = "0x9DD418", VA = "0x9DD418")]
	public Torchslider2()
	{
	}
}
[Token(Token = "0x200038E")]
public class Torchelight : MonoBehaviour
{
	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorchLight;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MainFlame;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BaseFlame;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Etincelles;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Fumee;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxLightIntensity;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float IntensityLight;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x9DD420", Offset = "0x9DD420", VA = "0x9DD420")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x9DD424", Offset = "0x9DD424", VA = "0x9DD424")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x9DD428", Offset = "0x9DD428", VA = "0x9DD428")]
	public Torchelight()
	{
	}
}
[Token(Token = "0x200038F")]
public class TorsoEnabler : MonoBehaviour
{
	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x9DD430", Offset = "0x9DD430", VA = "0x9DD430")]
	public void EnableTorsoOnSuitableGameVersion()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x9DD4A8", Offset = "0x9DD4A8", VA = "0x9DD4A8")]
	public TorsoEnabler()
	{
	}
}
[Token(Token = "0x2000390")]
public class TorsoTracker : MonoBehaviour
{
	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxTurnAngleRatio;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 torsoPitch;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 horizontalNeckOffset;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 directionToHands;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float handsDirectiondampingValue;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float headDirectionDampingValue;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float dampingSpeed;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distSquared;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dotProduct;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cachedYRotation;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxHeadPitch;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float neckOffset;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float HipsOffset;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float deltaPitch;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float pitchPole;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pitchAdjust;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform head;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightHand;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform leftHand;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxTurnAngle;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minDistanceToTurn;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float turnSpeed;

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x9DD4B0", Offset = "0x9DD4B0", VA = "0x9DD4B0")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x9DD4DC", Offset = "0x9DD4DC", VA = "0x9DD4DC")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x9DD4E8", Offset = "0x9DD4E8", VA = "0x9DD4E8", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x9DDA2C", Offset = "0x9DDA2C", VA = "0x9DDA2C")]
	private float RemapHeadPitchAngle()
	{
		return default(float);
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x9DD9F8", Offset = "0x9DD9F8", VA = "0x9DD9F8")]
	private bool IsHeadPitchedTooMuch()
	{
		return default(bool);
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x9DDA78", Offset = "0x9DDA78", VA = "0x9DDA78")]
	public TorsoTracker()
	{
	}
}
[Token(Token = "0x2000391")]
public class TournamentBuildLobbySwitcher : MonoBehaviour
{
	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LobbyWithoutTournament;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject LobbyWithTournament;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject LobbyWithTournament_Lobby;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject LobbyWithTournament_Tournament;

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x9DDAF8", Offset = "0x9DDAF8", VA = "0x9DDAF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x9DDBE0", Offset = "0x9DDBE0", VA = "0x9DDBE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x9DDB80", Offset = "0x9DDB80", VA = "0x9DDB80")]
	private void SetAllToInactive()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x9DDBE4", Offset = "0x9DDBE4", VA = "0x9DDBE4")]
	public TournamentBuildLobbySwitcher()
	{
	}
}
[Token(Token = "0x2000392")]
public class TournamentDisconnectionWindowDisabler : MonoBehaviour
{
	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DisconnectionWindowController disconnectionWindowController;

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x9DDBEC", Offset = "0x9DDBEC", VA = "0x9DDBEC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x9DDC58", Offset = "0x9DDC58", VA = "0x9DDC58")]
	public TournamentDisconnectionWindowDisabler()
	{
	}
}
[Token(Token = "0x2000393")]
public class TournamentQuitController : WindowController
{
	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x9DDC60", Offset = "0x9DDC60", VA = "0x9DDC60")]
	public void ResetLobby()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x9DDD14", Offset = "0x9DDD14", VA = "0x9DDD14")]
	public void OnYes()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x9DDE80", Offset = "0x9DDE80", VA = "0x9DDE80")]
	public void OnNo()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x9DDF00", Offset = "0x9DDF00", VA = "0x9DDF00")]
	public TournamentQuitController()
	{
	}
}
[Token(Token = "0x2000394")]
public class TournamentRejoin : MonoBehaviourPun
{
	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMatchesCreator tournamentMatchesCreator;

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x9DDF08", Offset = "0x9DDF08", VA = "0x9DDF08")]
	public void Rejoin(Player player, string playerID)
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x9DE48C", Offset = "0x9DE48C", VA = "0x9DE48C")]
	[PunRPC]
	private void RPCJoinMatch(string roomName, string[] playersInGroupIDs)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x9DE558", Offset = "0x9DE558", VA = "0x9DE558")]
	[PunRPC]
	private void RPCKickOutOfLobby()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x9DE574", Offset = "0x9DE574", VA = "0x9DE574")]
	public TournamentRejoin()
	{
	}
}
[Token(Token = "0x2000396")]
public class TournamentTimeSynchronizer : MonoBehaviourPun
{
	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeOffset;

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x9DE60C", Offset = "0x9DE60C", VA = "0x9DE60C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x9DE750", Offset = "0x9DE750", VA = "0x9DE750")]
	[PunRPC]
	public void RPCRequestTime(int playerID)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x9DEAE0", Offset = "0x9DEAE0", VA = "0x9DEAE0")]
	[PunRPC]
	public void RPCSynchronizeTime(int year, int month, int day, int hour, int minute, int second)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x9DEBB4", Offset = "0x9DEBB4", VA = "0x9DEBB4")]
	public TournamentTimeSynchronizer()
	{
	}
}
[Token(Token = "0x2000397")]
public class TrailColorSetter : MonoBehaviourPun
{
	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerController _playerController;

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x9DEBC4", Offset = "0x9DEBC4", VA = "0x9DEBC4")]
	public Gradient GetTrailColor(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x9DEC9C", Offset = "0x9DEC9C", VA = "0x9DEC9C")]
	public TrailColorSetter()
	{
	}
}
[Token(Token = "0x2000398")]
public class EagleController : MonoBehaviour
{
	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation EagleAnimation;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip lookAround;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip eatYourWing;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip hop;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip fly;

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x9DECA4", Offset = "0x9DECA4", VA = "0x9DECA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x9DED80", Offset = "0x9DED80", VA = "0x9DED80")]
	public void LookAround()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x9DEE20", Offset = "0x9DEE20", VA = "0x9DEE20")]
	public void FlyAway()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x9DEE24", Offset = "0x9DEE24", VA = "0x9DEE24")]
	public void EatYourWind()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x9DEEA0", Offset = "0x9DEEA0", VA = "0x9DEEA0")]
	public void Hop()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x9DEEF4", Offset = "0x9DEEF4", VA = "0x9DEEF4")]
	public void Fly()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x9DEF48", Offset = "0x9DEF48", VA = "0x9DEF48")]
	public EagleController()
	{
	}
}
[Token(Token = "0x2000399")]
public class CamMove : MonoBehaviour
{
	[Token(Token = "0x6001309")]
	[Address(RVA = "0x9DEF50", Offset = "0x9DEF50", VA = "0x9DEF50")]
	private void Start()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x9DEF54", Offset = "0x9DEF54", VA = "0x9DEF54")]
	private void Update()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x9DF0F4", Offset = "0x9DF0F4", VA = "0x9DF0F4")]
	public CamMove()
	{
	}
}
[Token(Token = "0x200039A")]
public class UnusedAssetDestroyer : MonoBehaviour
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("(Mainly for Maciek) All these assets will be deleted from the project. Use it before you build to delete files necessary only for other platforms. Unity takes a second to update the project view.")]
	public List<UnityEngine.Object> unusedObjects;

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x9DF0FC", Offset = "0x9DF0FC", VA = "0x9DF0FC")]
	public UnusedAssetDestroyer()
	{
	}
}
[Token(Token = "0x200039B")]
public class UpDownMovementController : MonoBehaviour
{
	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float oneDirectionMovementDuration;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float movementSpeed;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 movementVector;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isMovingUp;

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x9DF104", Offset = "0x9DF104", VA = "0x9DF104")]
	private void Update()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x9DF1F8", Offset = "0x9DF1F8", VA = "0x9DF1F8")]
	public UpDownMovementController()
	{
	}
}
[Token(Token = "0x200039C")]
[ExecuteInEditMode]
public class FixMobileDepth : MonoBehaviour
{
	[Token(Token = "0x600130F")]
	[Address(RVA = "0x9DF218", Offset = "0x9DF218", VA = "0x9DF218")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x9DF254", Offset = "0x9DF254", VA = "0x9DF254")]
	public FixMobileDepth()
	{
	}
}
[Token(Token = "0x200039D")]
public class VRKey : MonoBehaviour
{
	[Token(Token = "0x200039E")]
	public delegate void KeyClickAction(string key, bool isBackSpace);

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color ActiveColor;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color NormalColor;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isBackSpace;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image _buttonImage;

	[Token(Token = "0x1400001F")]
	public event KeyClickAction OnKeyClicked
	{
		[Token(Token = "0x6001311")]
		[Address(RVA = "0x9DF25C", Offset = "0x9DF25C", VA = "0x9DF25C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001312")]
		[Address(RVA = "0x9DF2F8", Offset = "0x9DF2F8", VA = "0x9DF2F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x9DF394", Offset = "0x9DF394", VA = "0x9DF394")]
	private void Start()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x9DF408", Offset = "0x9DF408", VA = "0x9DF408")]
	public void KeyAction()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x9DF460", Offset = "0x9DF460", VA = "0x9DF460")]
	public void ActivateKey()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x9DF490", Offset = "0x9DF490", VA = "0x9DF490")]
	public void DeactivateKey()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x9DF4C0", Offset = "0x9DF4C0", VA = "0x9DF4C0")]
	public VRKey()
	{
	}
}
[Token(Token = "0x200039F")]
public class WaterMillParticlePlayer : MonoBehaviour
{
	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float waterHeight;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float centerOffset;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasPlayed;

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x9DF63C", Offset = "0x9DF63C", VA = "0x9DF63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x9DF658", Offset = "0x9DF658", VA = "0x9DF658")]
	private void Update()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x9DF780", Offset = "0x9DF780", VA = "0x9DF780")]
	public WaterMillParticlePlayer()
	{
	}
}
[Token(Token = "0x20003A0")]
public class WaterWheelParticlesController : MonoBehaviour
{
	[Token(Token = "0x20003A1")]
	[CompilerGenerated]
	private sealed class <SetParticlesSize>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterWheelParticlesController <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0x9DFAA0", Offset = "0x9DFAA0", VA = "0x9DFAA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x9DFAE8", Offset = "0x9DFAE8", VA = "0x9DFAE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x9DF828", Offset = "0x9DF828", VA = "0x9DF828")]
		[DebuggerHidden]
		public <SetParticlesSize>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x9DF858", Offset = "0x9DF858", VA = "0x9DF858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x9DF85C", Offset = "0x9DF85C", VA = "0x9DF85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x9DFAA8", Offset = "0x9DFAA8", VA = "0x9DFAA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400137F")]
	private const float forwardSizeMultiplier = 0.75f;

	[Token(Token = "0x4001380")]
	private const float foamMultiplier = 20f;

	[Token(Token = "0x4001381")]
	private const float backwardSizeMultiplier = 0.25f;

	[Token(Token = "0x4001382")]
	private const float randomSizeCoefficient = 0.2f;

	[Token(Token = "0x4001383")]
	private const float particleSizeCheckDelay = 1f;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WheelController wheelController;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem foamParticle;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float newSize;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationSpeed;

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x9DF794", Offset = "0x9DF794", VA = "0x9DF794")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x9DF7B4", Offset = "0x9DF7B4", VA = "0x9DF7B4")]
	[IteratorStateMachine(typeof(<SetParticlesSize>d__11))]
	private IEnumerator SetParticlesSize()
	{
		return null;
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x9DF850", Offset = "0x9DF850", VA = "0x9DF850")]
	public WaterWheelParticlesController()
	{
	}
}
[Token(Token = "0x20003A2")]
public class WheelController : MonoBehaviour
{
	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float steadyStateRotationSpeed;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationGainCoefficient;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedDifference;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float attenuationConstant;

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x9DFAF0", Offset = "0x9DFAF0", VA = "0x9DFAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x9DFBA4", Offset = "0x9DFBA4", VA = "0x9DFBA4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x9DFC24", Offset = "0x9DFC24", VA = "0x9DFC24")]
	public WheelController()
	{
	}
}
[Token(Token = "0x20003A3")]
public class WitchController : MonoBehaviour
{
	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellsMenuController spellsMenuController;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator witchAnimator;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform WitchTransform;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform PlayerTransform;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 playerVector;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float WitchRotationY;

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x9DFC4C", Offset = "0x9DFC4C", VA = "0x9DFC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x9DFDC4", Offset = "0x9DFDC4", VA = "0x9DFDC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x9E010C", Offset = "0x9E010C", VA = "0x9E010C")]
	private void startLearningAnimation()
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x9E0164", Offset = "0x9E0164", VA = "0x9E0164")]
	private void startRejectLearningAnimation()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x9E01BC", Offset = "0x9E01BC", VA = "0x9E01BC")]
	private void startUsingAnimation()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x9E0214", Offset = "0x9E0214", VA = "0x9E0214")]
	private void startRejectUsingAnimation()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x9E026C", Offset = "0x9E026C", VA = "0x9E026C")]
	public WitchController()
	{
	}
}
[Token(Token = "0x20003A4")]
public class WooshSoundController : MonoBehaviourPun
{
	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource wooshSource;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x9E0274", Offset = "0x9E0274", VA = "0x9E0274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x9E03AC", Offset = "0x9E03AC", VA = "0x9E03AC")]
	public void PlayWooshSound()
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x9E03C8", Offset = "0x9E03C8", VA = "0x9E03C8")]
	public void PlayArrowWoosh()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x9E03E4", Offset = "0x9E03E4", VA = "0x9E03E4")]
	public void StopWooshSound(Collision collision)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x9E0400", Offset = "0x9E0400", VA = "0x9E0400")]
	public WooshSoundController()
	{
	}
}
[Token(Token = "0x20003A5")]
public class WyvernRagdoll : MonoBehaviour
{
	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wyvernAlive;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wyvernDead;

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x9E0408", Offset = "0x9E0408", VA = "0x9E0408")]
	public void EnableRagdollObjects()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x9E0440", Offset = "0x9E0440", VA = "0x9E0440")]
	public void ResetWyvernObjects()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x9E0478", Offset = "0x9E0478", VA = "0x9E0478")]
	public WyvernRagdoll()
	{
	}
}
[Token(Token = "0x20003A6")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x9E0480", Offset = "0x9E0480", VA = "0x9E0480")]
	private void Awake()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x9E048C", Offset = "0x9E048C", VA = "0x9E048C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x9E04BC", Offset = "0x9E04BC", VA = "0x9E04BC")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x9E0530", Offset = "0x9E0530", VA = "0x9E0530")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x9E055C", Offset = "0x9E055C", VA = "0x9E055C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x9E0594", Offset = "0x9E0594", VA = "0x9E0594")]
	private void Update()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x9E0A2C", Offset = "0x9E0A2C", VA = "0x9E0A2C")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x20003A7")]
[ExecuteInEditMode]
public class Compass : MonoBehaviour
{
	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x9E0A4C", Offset = "0x9E0A4C", VA = "0x9E0A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x9E0B90", Offset = "0x9E0B90", VA = "0x9E0B90")]
	private void Update()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x9E0CD4", Offset = "0x9E0CD4", VA = "0x9E0CD4")]
	public Compass()
	{
	}
}
[Token(Token = "0x20003A8")]
public class LightTilt : MonoBehaviour
{
	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Tempo;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EnableIntensity;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RandomIntensity;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Fluctuation;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float OriginalInt;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TiltInt;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float Tmp;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool EnableMovement;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MovFluct;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PositionRandom;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RangeFluct;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 OriginalPos;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float OriginalRan;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float TiltMovx;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float TiltMovy;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float TiltMovz;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool EnableColorChange;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color TiltColor;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color OriginalColor;

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x9E0CF4", Offset = "0x9E0CF4", VA = "0x9E0CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x9E0DBC", Offset = "0x9E0DBC", VA = "0x9E0DBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x9E1040", Offset = "0x9E1040", VA = "0x9E1040")]
	public LightTilt()
	{
	}
}
[Token(Token = "0x20003A9")]
public class CompassCamera : MonoBehaviour
{
	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x9E1084", Offset = "0x9E1084", VA = "0x9E1084")]
	private void Start()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x9E11C8", Offset = "0x9E11C8", VA = "0x9E11C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x9E130C", Offset = "0x9E130C", VA = "0x9E130C")]
	public CompassCamera()
	{
	}
}
[Token(Token = "0x20003AA")]
public class TagControl : MonoBehaviour
{
	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("LookUp Settings")]
	public Color GlowColor;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color WaitColor;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WaitIntensity;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SelectIntensity;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool GlowFadeIn;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool GlowFadeOut;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool TrackCamera;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool SmoothFollow;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("General Settings")]
	public bool WaitStartAnim;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeDelay;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool CheckOnUpdate;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Source Variables")]
	public Animation TargetAnimation;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationClip StartAnim;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationClip EndAnim;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer GlowMesh1;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer GlowMesh2;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material MaterialGlow1;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material MaterialGlow2;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject EnabledParts;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider TargetCollider;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Collider PlayerCollider;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timerstart;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material mat1;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat2;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool colliding;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool waiting;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool ready;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float glowint;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rotor;

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x9E132C", Offset = "0x9E132C", VA = "0x9E132C")]
	private void Start()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x9E1420", Offset = "0x9E1420", VA = "0x9E1420")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x9E1644", Offset = "0x9E1644", VA = "0x9E1644")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x9E16C4", Offset = "0x9E16C4", VA = "0x9E16C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x9E20F4", Offset = "0x9E20F4", VA = "0x9E20F4")]
	public TagControl()
	{
	}
}
[Token(Token = "0x20003AB")]
public class TagInfo : MonoBehaviour
{
	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Tag Text Source")]
	public TextMesh AssetName;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh PrefabName;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh Location;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh LOD0;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh LOD1;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh LOD2;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh MainMapSize;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh SecondMapSize;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh Number;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh Comments;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Compass Info")]
	public GameObject CompassRotator;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CompassTargetTag;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Round Circle Info")]
	public GameObject CircleLod0;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject CircleLod1;

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x9E2128", Offset = "0x9E2128", VA = "0x9E2128")]
	public TagInfo()
	{
	}
}
[Token(Token = "0x20003AC")]
[ExecuteInEditMode]
public class TagsMain : MonoBehaviour
{
	[Token(Token = "0x20003AD")]
	public enum TextureSize
	{
		[Token(Token = "0x4001402")]
		_None,
		[Token(Token = "0x4001403")]
		_32,
		[Token(Token = "0x4001404")]
		_64,
		[Token(Token = "0x4001405")]
		_128,
		[Token(Token = "0x4001406")]
		_256,
		[Token(Token = "0x4001407")]
		_512,
		[Token(Token = "0x4001408")]
		_1024,
		[Token(Token = "0x4001409")]
		_2048,
		[Token(Token = "0x400140A")]
		_4096,
		[Token(Token = "0x400140B")]
		_8K,
		[Token(Token = "0x400140C")]
		_16k
	}

	[Serializable]
	[Token(Token = "0x20003AE")]
	public class Prefab
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Asset Info")]
		public string PrefabOrder;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TagInfo;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ReferenceGO;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject AssetPrefab;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Category;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Lod0Tricount;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Lod1Tricount;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Lod2Tricount;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public TextureSize MainMaps;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextureSize SecondaryMaps;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Multiline]
		public string AdditionalInfo;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Lookup Settings")]
		public bool ShowCirce;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool TargetCompass;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool TagsInPosition;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool TagOrderNum;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string TagNotes;

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x9E5CB4", Offset = "0x9E5CB4", VA = "0x9E5CB4")]
		public Prefab()
		{
		}
	}

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("[Prefab List]")]
	public List<Prefab> PrefabList;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("[General Settings]")]
	public string AssetPackName;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CheckOnUpdate;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool SceneGOTags;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool ShowTargetTags;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("[Lookup Settings]")]
	public Texture PackIcon;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseIcon;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color MainColor;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color SecondaryColor;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Range(0f, 10f)]
	public float EmissionLevel;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material TagMaterial;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material GlowMaterial;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material IconMaterial;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("[PolyCount Colors]")]
	public Color32 _1k;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color32 _3k;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 _5k;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color32 _10k;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color32 _20k;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color32 _30k;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color32 _50k;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color32 _more;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color32 _tagmat;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color32 _glowmat;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Texture _oldicon;

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x9E2130", Offset = "0x9E2130", VA = "0x9E2130")]
	private void Start()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x9E26C0", Offset = "0x9E26C0", VA = "0x9E26C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x9E5B94", Offset = "0x9E5B94", VA = "0x9E5B94")]
	private void Exit()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x9E5C50", Offset = "0x9E5C50", VA = "0x9E5C50")]
	public TagsMain()
	{
	}
}
[Token(Token = "0x20003AF")]
public class BuildingControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class Target
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FloorName;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetGo;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FloorNum;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AllFloors;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PropsGroup;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject CeilingShadow;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x9E634C", Offset = "0x9E634C", VA = "0x9E634C")]
		public Target()
		{
		}
	}

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BuildingName;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CheapDecoration;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TownManager TownManagerScript;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int ActualFloor;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int PreviousTest;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Target> Floors;

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x9E5CC4", Offset = "0x9E5CC4", VA = "0x9E5CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x9E5E48", Offset = "0x9E5E48", VA = "0x9E5E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x9E62F4", Offset = "0x9E62F4", VA = "0x9E62F4")]
	public BuildingControl()
	{
	}
}
[Token(Token = "0x20003B1")]
public class BuildingTrigger : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	public enum Direction
	{
		[Token(Token = "0x4001433")]
		RiseUpFloor,
		[Token(Token = "0x4001434")]
		StayOnFloor,
		[Token(Token = "0x4001435")]
		DownFloor
	}

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("[Source]")]
	public BuildingControl Building;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("[Normal]")]
	public int FloorLevel;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int TargetFloor;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("[Dynamic]")]
	public bool Dynamic;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Direction FloorMovement;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool Allvisible;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TownManager TownManagerScript;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider Activator;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x9E63A4", Offset = "0x9E63A4", VA = "0x9E63A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x9E6440", Offset = "0x9E6440", VA = "0x9E6440")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x9E65C0", Offset = "0x9E65C0", VA = "0x9E65C0")]
	public BuildingTrigger()
	{
	}
}
[Token(Token = "0x20003B3")]
public class PushTrigger : MonoBehaviour
{
	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("[Source]")]
	public TownManager ManagerScript;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DoorHinge;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("[Door Settings]")]
	public bool opened;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Percentage;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("[Movement Settings]")]
	public Vector3 XYZDisplacement;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion Rotation;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Duration;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[Range(0f, 100f)]
	public KeyCode UnlockKey;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider _activator;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _timer;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _iscolliding;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _ismoving;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _percentage;

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x9E65C8", Offset = "0x9E65C8", VA = "0x9E65C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x9E6630", Offset = "0x9E6630", VA = "0x9E6630")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x9E69A0", Offset = "0x9E69A0", VA = "0x9E69A0")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x9E6A3C", Offset = "0x9E6A3C", VA = "0x9E6A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x9E6F50", Offset = "0x9E6F50", VA = "0x9E6F50")]
	public PushTrigger()
	{
	}
}
[Token(Token = "0x20003B4")]
public class SceneControl : MonoBehaviour
{
	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("[Scene Settings]")]
	public Light SunLight;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SkyBackground;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource BackgroundMusic;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Fxs;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("[Player & Camera]")]
	public TownManager Town;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider PlayerCharacter;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject FPSCamera;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TopDownCamera;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("[Interface]")]
	public KeyCode CameraSwitchKey;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public KeyCode HelpKey;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public KeyCode DecoCheap;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public KeyCode DoorKey;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text LocationGUI;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text CameraGUI;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text HelpText;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool FPSMode;

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x9E6F6C", Offset = "0x9E6F6C", VA = "0x9E6F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x9E7378", Offset = "0x9E7378", VA = "0x9E7378")]
	private void Update()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x9E7614", Offset = "0x9E7614", VA = "0x9E7614")]
	public SceneControl()
	{
	}
}
[Token(Token = "0x20003B5")]
[ExecuteInEditMode]
public class TownManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B6")]
	public class Building
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingControl BuildingTarget;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool CheapDecoration;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x9E7934", Offset = "0x9E7934", VA = "0x9E7934")]
		public Building()
		{
		}
	}

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("[Global Settings]")]
	public bool EnableTownControl;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool CheapDecoration;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool OverrideLocalSett;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Building> Buildings;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string PlayerLocation;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Collider PlayerCollider;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int ActualFloor;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool FPSMode;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public KeyCode DoorKeyCode;

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x9E7630", Offset = "0x9E7630", VA = "0x9E7630")]
	private void Start()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x9E76AC", Offset = "0x9E76AC", VA = "0x9E76AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x9E791C", Offset = "0x9E791C", VA = "0x9E791C")]
	public TownManager()
	{
	}
}
[Token(Token = "0x20003B7")]
public class TrampActivator : MonoBehaviour
{
	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider CharCollider;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ActivateGO;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GOEffect;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation AnimatorEffect;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip AnimPlay;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationClip AnimReset;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeToReset;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool collide;

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x9E793C", Offset = "0x9E793C", VA = "0x9E793C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x9E7A7C", Offset = "0x9E7A7C", VA = "0x9E7A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x9E7B0C", Offset = "0x9E7B0C", VA = "0x9E7B0C")]
	public TrampActivator()
	{
	}
}
namespace OrbCreationExtensions
{
	[Token(Token = "0x20003B8")]
	public static class FloatExtensions
	{
		[Token(Token = "0x600136B")]
		[Address(RVA = "0x9E7B14", Offset = "0x9E7B14", VA = "0x9E7B14")]
		public static string MakeString(this float aFloat)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x9E7B6C", Offset = "0x9E7B6C", VA = "0x9E7B6C")]
		public static string MakeString(this float aFloat, int decimals)
		{
			return null;
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x9E7D30", Offset = "0x9E7D30", VA = "0x9E7D30")]
		public static float To180Angle(this float f)
		{
			return default(float);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x9E7D8C", Offset = "0x9E7D8C", VA = "0x9E7D8C")]
		public static float To360Angle(this float f)
		{
			return default(float);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x9E7DD8", Offset = "0x9E7DD8", VA = "0x9E7DD8")]
		public static float RadToCompassAngle(this float rad)
		{
			return default(float);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x9E7E3C", Offset = "0x9E7E3C", VA = "0x9E7E3C")]
		public static float DegreesToCompassAngle(this float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x9E7E94", Offset = "0x9E7E94", VA = "0x9E7E94")]
		public static float Distance(this float f1, float f2)
		{
			return default(float);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x9E7E9C", Offset = "0x9E7E9C", VA = "0x9E7E9C")]
		public static float RelativePositionBetweenAngles(this float angle, float from, float to)
		{
			return default(float);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x9E8038", Offset = "0x9E8038", VA = "0x9E8038")]
		public static float Round(this float f, int decimals)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003B9")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x20003BA")]
		[CompilerGenerated]
		private sealed class <SetUpLODLevelsWithLODSwitcherInBackground>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] maxWeights;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float removeSmallParts;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool recalcNormals;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float[] lodScreenSizes;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Mesh <mesh>5__2;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private LODSwitcher <lodSwitcher>5__3;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Mesh <mesh0>5__4;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Mesh[] <lodMeshes>5__5;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__6;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private System.Collections.Hashtable <lodInfo>5__7;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600139F")]
				[Address(RVA = "0x9F1F34", Offset = "0x9F1F34", VA = "0x9F1F34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A1")]
				[Address(RVA = "0x9F1F7C", Offset = "0x9F1F7C", VA = "0x9F1F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600139C")]
			[Address(RVA = "0x9EEC78", Offset = "0x9EEC78", VA = "0x9EEC78")]
			[DebuggerHidden]
			public <SetUpLODLevelsWithLODSwitcherInBackground>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0x9F0B90", Offset = "0x9F0B90", VA = "0x9F0B90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600139E")]
			[Address(RVA = "0x9F0B94", Offset = "0x9F0B94", VA = "0x9F0B94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x9F1F3C", Offset = "0x9F1F3C", VA = "0x9F1F3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BB")]
		[CompilerGenerated]
		private sealed class <GetSimplifiedMeshInBackground>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxWeight;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float removeSmallParts;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Mesh> result;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool recalcNormals;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Collections.Hashtable <lodInfo>5__2;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013A5")]
				[Address(RVA = "0x9F2DBC", Offset = "0x9F2DBC", VA = "0x9F2DBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013A7")]
				[Address(RVA = "0x9F2E04", Offset = "0x9F2E04", VA = "0x9F2E04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x9F0900", Offset = "0x9F0900", VA = "0x9F0900")]
			[DebuggerHidden]
			public <GetSimplifiedMeshInBackground>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x9F1F84", Offset = "0x9F1F84", VA = "0x9F1F84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x9F1F88", Offset = "0x9F1F88", VA = "0x9F1F88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x9F2DC4", Offset = "0x9F2DC4", VA = "0x9F2DC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x9E80DC", Offset = "0x9E80DC", VA = "0x9E80DC")]
		public static Bounds GetWorldBounds(this GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x9E82E8", Offset = "0x9E82E8", VA = "0x9E82E8")]
		public static Vector3[] GetBoundsCorners(this Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x9E83FC", Offset = "0x9E83FC", VA = "0x9E83FC")]
		public static Vector3[] GetBoundsCenterAndCorners(this Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x9E852C", Offset = "0x9E852C", VA = "0x9E852C")]
		public static Vector3[] GetWorldBoundsCorners(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x9E8550", Offset = "0x9E8550", VA = "0x9E8550")]
		public static Vector3[] GetWorldBoundsCenterAndCorners(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x9E8574", Offset = "0x9E8574", VA = "0x9E8574")]
		public static float GetModelComplexity(this GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x9E86C4", Offset = "0x9E86C4", VA = "0x9E86C4")]
		public static string GetModelInfoString(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x9E8964", Offset = "0x9E8964", VA = "0x9E8964")]
		public static GameObject TopParent(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x9E8A10", Offset = "0x9E8A10", VA = "0x9E8A10")]
		public static GameObject FindParentWithName(this GameObject go, string parentName)
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x9E8AE0", Offset = "0x9E8AE0", VA = "0x9E8AE0")]
		public static GameObject FindMutualParent(this GameObject go1, GameObject go2)
		{
			return null;
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x9E8C68", Offset = "0x9E8C68", VA = "0x9E8C68")]
		public static GameObject FindFirstChildWithName(this GameObject go, string childName)
		{
			return null;
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x9E8D7C", Offset = "0x9E8D7C", VA = "0x9E8D7C")]
		public static bool IsChildWithNameUnique(this GameObject go, string childName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x9E8DA0", Offset = "0x9E8DA0", VA = "0x9E8DA0")]
		public static void CountChildrenWithName(this GameObject go, string childName, ref int total)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x9E90BC", Offset = "0x9E90BC", VA = "0x9E90BC")]
		public static GameObject GetGameObjectNamed(this GameObject go, string aStr, GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x9E91B0", Offset = "0x9E91B0", VA = "0x9E91B0")]
		public static void DestroyChildren(this GameObject go, bool disabledOnly)
		{
		}

		[Token(Token = "0x6001383")]
		public static T GetFirstComponentInParents<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		public static T GetFirstComponentInChildren<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x9E9640", Offset = "0x9E9640", VA = "0x9E9640")]
		public static Mesh[] GetMeshes(this GameObject aGo)
		{
			return null;
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x9E9648", Offset = "0x9E9648", VA = "0x9E9648")]
		public static Mesh[] GetMeshes(this GameObject aGo, bool includeDisabled)
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x9E9848", Offset = "0x9E9848", VA = "0x9E9848")]
		public static int GetTotalVertexCount(this GameObject aGo)
		{
			return default(int);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x9E9A08", Offset = "0x9E9A08", VA = "0x9E9A08")]
		public static Mesh Get1stSharedMesh(this GameObject aGo)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x9E9BE8", Offset = "0x9E9BE8", VA = "0x9E9BE8")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x9EA0BC", Offset = "0x9EA0BC", VA = "0x9EA0BC")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes, int lodLevel)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x9E9BF4", Offset = "0x9E9BF4", VA = "0x9E9BF4")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes, bool includeDisabled, int lodLevel)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x9EA0C8", Offset = "0x9EA0C8", VA = "0x9EA0C8")]
		public static Material[] GetMaterials(this GameObject aGo, bool includeDisabled)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x9EA274", Offset = "0x9EA274", VA = "0x9EA274")]
		public static Mesh[] CombineMeshes(this GameObject aGO)
		{
			return null;
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x9EA2C8", Offset = "0x9EA2C8", VA = "0x9EA2C8")]
		public static Mesh[] CombineMeshes(this GameObject aGO, string[] skipSubmeshNames)
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x9EE260", Offset = "0x9EE260", VA = "0x9EE260")]
		private static int GiveUniqueNameIfNeeded(GameObject aGo, GameObject topGO, int uniqueId)
		{
			return default(int);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x9EE334", Offset = "0x9EE334", VA = "0x9EE334")]
		public static void SetUpLODLevels(this GameObject go)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x9EE33C", Offset = "0x9EE33C", VA = "0x9EE33C")]
		public static void SetUpLODLevels(this GameObject go, float maxWeight)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x9EE41C", Offset = "0x9EE41C", VA = "0x9EE41C")]
		public static void SetUpLODLevels(this GameObject go, float[] lodScreenSizes, float[] maxWeights)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x9EE504", Offset = "0x9EE504", VA = "0x9EE504")]
		public static Mesh[] SetUpLODLevelsWithLODSwitcher(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x9EEBB0", Offset = "0x9EEBB0", VA = "0x9EEBB0")]
		[IteratorStateMachine(typeof(<SetUpLODLevelsWithLODSwitcherInBackground>d__32))]
		public static IEnumerator SetUpLODLevelsWithLODSwitcherInBackground(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x9EECA0", Offset = "0x9EECA0", VA = "0x9EECA0")]
		public static Mesh[] SetUpLODLevelsAndChildrenWithLODSwitcher(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x9EF768", Offset = "0x9EF768", VA = "0x9EF768")]
		public static Mesh[] SetUpLODLevelsAndChildrenWithLODGroup(this GameObject go, float[] relativeTransitionHeights, float[] maxWeights, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x9F0514", Offset = "0x9F0514", VA = "0x9F0514")]
		public static Mesh GetSimplifiedMesh(this GameObject go, float maxWeight, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x9F0850", Offset = "0x9F0850", VA = "0x9F0850")]
		[IteratorStateMachine(typeof(<GetSimplifiedMeshInBackground>d__36))]
		public static IEnumerator GetSimplifiedMeshInBackground(this GameObject go, float maxWeight, bool recalcNormals, float removeSmallParts, Action<Mesh> result)
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x9EC634", Offset = "0x9EC634", VA = "0x9EC634")]
		private static bool MergeMeshInto(Mesh fromMesh, Transform[] fromBones, Material[] fromMaterials, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> boneWeights, List<Transform> bones, List<Matrix4x4> bindposes, Dictionary<Material, List<int>> subMeshes, bool usesNegativeScale, Vector4 lightmapScaleOffset, Transform fromTransform, Transform topTransform, string submeshName, string[] skipSubmeshNames)
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x9F0928", Offset = "0x9F0928", VA = "0x9F0928")]
		private static Vector3 ApplyBindPose(Vector3 vertex, Transform bone, Matrix4x4 bindpose, float boneWeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x9F0A44", Offset = "0x9F0A44", VA = "0x9F0A44")]
		private static Vector3 UnApplyBindPose(Vector3 vertex, Transform bone, Matrix4x4 bindpose, float boneWeight)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003BC")]
	public static class MeshExtensions
	{
		[Token(Token = "0x20003BD")]
		[CompilerGenerated]
		private sealed class <MakeLODMeshInBackground>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxWeight;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float removeSmallParts;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh mesh;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Mesh> result;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool recalcNormals;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Collections.Hashtable <lodInfo>5__2;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013BF")]
				[Address(RVA = "0x877BE8", Offset = "0x877BE8", VA = "0x877BE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C1")]
				[Address(RVA = "0x877C30", Offset = "0x877C30", VA = "0x877C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x876EE0", Offset = "0x876EE0", VA = "0x876EE0")]
			[DebuggerHidden]
			public <MakeLODMeshInBackground>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x876F08", Offset = "0x876F08", VA = "0x876F08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x876F0C", Offset = "0x876F0C", VA = "0x876F0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x877BF0", Offset = "0x877BF0", VA = "0x877BF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x9F2E0C", Offset = "0x9F2E0C", VA = "0x9F2E0C")]
		public static void RecalculateTangents(this Mesh mesh)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x9F32EC", Offset = "0x9F32EC", VA = "0x9F32EC")]
		public static Mesh ScaledRotatedTranslatedMesh(this Mesh mesh, Vector3 scale, Quaternion rotate, Vector3 translate)
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x9F3598", Offset = "0x9F3598", VA = "0x9F3598")]
		public static bool IsSkinnedMesh(this Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x9F35F4", Offset = "0x9F35F4", VA = "0x9F35F4")]
		public static int GetTriangleCount(this Mesh orig)
		{
			return default(int);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x9F0504", Offset = "0x9F0504", VA = "0x9F0504")]
		public static Mesh MakeLODMesh(this Mesh orig, float aMaxWeight, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x9F3630", Offset = "0x9F3630", VA = "0x9F3630")]
		[IteratorStateMachine(typeof(<MakeLODMeshInBackground>d__5))]
		public static IEnumerator MakeLODMeshInBackground(this Mesh mesh, float maxWeight, bool recalcNormals, float removeSmallParts, Action<Mesh> result)
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x9EE9B0", Offset = "0x9EE9B0", VA = "0x9EE9B0")]
		public static Mesh[] MakeLODMeshes(this Mesh mesh, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x9F36E0", Offset = "0x9F36E0", VA = "0x9F36E0")]
		public static Vector4 GetUvRange(this Mesh mesh)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x9F3780", Offset = "0x9F3780", VA = "0x9F3780")]
		public static bool CheckUvsWithin01Range(this Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9F380C", Offset = "0x9F380C", VA = "0x9F380C")]
		public static void ClampUvs(this Mesh mesh)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x9F389C", Offset = "0x9F389C", VA = "0x9F389C")]
		public static void WrapUvs(this Mesh mesh)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x9F3958", Offset = "0x9F3958", VA = "0x9F3958")]
		public static void SetAtlasRectForSubmesh(this Mesh mesh, Rect atlasRect, int submeshIndex)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x9F3C70", Offset = "0x9F3C70", VA = "0x9F3C70")]
		public static void MergeSubmeshInto(this Mesh mesh, int from, int to)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x9F3F1C", Offset = "0x9F3F1C", VA = "0x9F3F1C")]
		public static Mesh CopyAndRemoveSubmeshes(this Mesh orig, int[] submeshesToRemove)
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x9F47C4", Offset = "0x9F47C4", VA = "0x9F47C4")]
		public static Mesh CopyAndRemoveHiddenTriangles(this Mesh orig, int subMeshIdx, Matrix4x4 localToWorldMatrix, Mesh[] hidingMeshes, int[] hidingSubMeshes, Matrix4x4[] hidingLocalToWorldMatrices, float maxRemoveDistance = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x9F590C", Offset = "0x9F590C", VA = "0x9F590C")]
		private static bool IsTriangleHidden(Vector3 v0, Vector3 v1, Vector3 v2, float maxDistance, List<Vector3> triMinCorners, List<Vector3> triMaxCorners, List<Vector3> hidingVs, List<int> hidingTs)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x9F5E3C", Offset = "0x9F5E3C", VA = "0x9F5E3C")]
		private static bool IsHidden(Vector3 v, Vector3 n, float maxDistance, List<Vector3> hidingVs, List<int> hidingTs, List<int> trianglesToCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x9F5BFC", Offset = "0x9F5BFC", VA = "0x9F5BFC")]
		private static List<int> GetTrianglesWithinRange(Vector3 v0, Vector3 v1, Vector3 v2, float maxDistance, List<Vector3> triMinCorners, List<Vector3> triMaxCorners)
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x9F61A4", Offset = "0x9F61A4", VA = "0x9F61A4")]
		public static float DistanceToPlane(Vector3 fromPos, Vector3 direction, Vector3 pointOnPlane, Vector3 normalPlane)
		{
			return default(float);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x9F5AE4", Offset = "0x9F5AE4", VA = "0x9F5AE4")]
		public static Vector3 GetNormal(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003BE")]
	public static class RectExtensions
	{
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x877C38", Offset = "0x877C38", VA = "0x877C38")]
		public static bool MouseInRect(this Rect rect, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x877C6C", Offset = "0x877C6C", VA = "0x877C6C")]
		public static bool MouseInRect(this Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x877CE4", Offset = "0x877CE4", VA = "0x877CE4")]
		public static bool MouseInRect(this Rect rect, Rect parentRect, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x877D94", Offset = "0x877D94", VA = "0x877D94")]
		public static bool MouseInRect(this Rect rect, Rect parentRect)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x877E2C", Offset = "0x877E2C", VA = "0x877E2C")]
		public static bool MouseInRect(this Rect rect, Rect parentRect1, Rect parentRect2, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x877F3C", Offset = "0x877F3C", VA = "0x877F3C")]
		public static bool MouseInRect(this Rect rect, Rect parentRect1, Rect parentRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x877FE4", Offset = "0x877FE4", VA = "0x877FE4")]
		public static Vector2 RelativeMousePosInRect(this Rect rect, Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x8780B4", Offset = "0x8780B4", VA = "0x8780B4")]
		public static Vector2 RelativeMousePosInRect(this Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x87811C", Offset = "0x87811C", VA = "0x87811C")]
		public static Rect RelativeRectInImage(this Rect r, Texture2D img)
		{
			return default(Rect);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x87824C", Offset = "0x87824C", VA = "0x87824C")]
		public static float MaxExtents(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x878298", Offset = "0x878298", VA = "0x878298")]
		public static float MaxSize(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x8782E4", Offset = "0x8782E4", VA = "0x8782E4")]
		public static float MinExtents(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x878330", Offset = "0x878330", VA = "0x878330")]
		public static float MinSize(this Bounds b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003BF")]
	public static class Texture2DExtensions
	{
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x87837C", Offset = "0x87837C", VA = "0x87837C")]
		public static Texture2D GetCopy(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x8784F4", Offset = "0x8784F4", VA = "0x8784F4")]
		public static Texture2D GetCopy(this Texture2D tex, int x, int y, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x878550", Offset = "0x878550", VA = "0x878550")]
		public static Texture2D GetSection(this Texture2D tex, int x, int y, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x8783E8", Offset = "0x8783E8", VA = "0x8783E8")]
		public static Texture2D GetCopy(this Texture2D tex, int x, int y, int w, int h, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x878634", Offset = "0x878634", VA = "0x878634")]
		public static Texture2D ScaledCopy(this Texture2D tex, int width, int height, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x878BD4", Offset = "0x878BD4", VA = "0x878BD4")]
		public static void CopyFrom(this Texture2D tex, Texture2D fromTex, int toX, int toY, int fromX, int fromY, int width, int height)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x878E48", Offset = "0x878E48", VA = "0x878E48")]
		public static void Scale(this Texture2D tex, int width, int height)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x878D4C", Offset = "0x878D4C", VA = "0x878D4C")]
		public static void MakeFormatWritable(this Texture2D tex)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x8785AC", Offset = "0x8785AC", VA = "0x8785AC")]
		public static TextureFormat GetWritableFormat(TextureFormat format)
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x878F98", Offset = "0x878F98", VA = "0x878F98")]
		public static Color GetAverageColor(this Texture2D tex)
		{
			return default(Color);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x879088", Offset = "0x879088", VA = "0x879088")]
		public static Color GetAverageColor(this Texture2D tex, Color useThisColorForAlpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x8791B4", Offset = "0x8791B4", VA = "0x8791B4")]
		public static bool IsReadable(this Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x87926C", Offset = "0x87926C", VA = "0x87926C")]
		public static bool HasTransparency(this Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x8787F8", Offset = "0x8787F8", VA = "0x8787F8")]
		private static Color[] ScaledPixels(Color[] originalPixels, int oldWidth, int oldHeight, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x879384", Offset = "0x879384", VA = "0x879384")]
		public static Texture2D GetUnityNormalMap(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x879598", Offset = "0x879598", VA = "0x879598")]
		public static Texture2D FromUnityNormalMap(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x8797C0", Offset = "0x8797C0", VA = "0x8797C0")]
		public static void Fill(this Texture2D tex, Color aColor)
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public static class TransformExtensions
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x879884", Offset = "0x879884", VA = "0x879884")]
		public static bool IsPartOf(this Transform trans, Transform aTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x879990", Offset = "0x879990", VA = "0x879990")]
		public static Transform FindFirstChildWithName(this Transform trans, string childName)
		{
			return null;
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x879CF0", Offset = "0x879CF0", VA = "0x879CF0")]
		public static Transform FindFirstChildWhereNameContains(this Transform trans, string childName)
		{
			return null;
		}

		[Token(Token = "0x60013E3")]
		public static T GetFirstComponentInParents<T>(this Transform trans) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x87A054", Offset = "0x87A054", VA = "0x87A054")]
		public static Vector3 PointToWorldSpace(this Transform trans, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x87A068", Offset = "0x87A068", VA = "0x87A068")]
		public static Vector3 PointToLocalSpace(this Transform trans, Vector3 p)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003C1")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x87A07C", Offset = "0x87A07C", VA = "0x87A07C")]
		public static string MakeString(this Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x87A334", Offset = "0x87A334", VA = "0x87A334")]
		public static string MakeString(this Vector3 v, int decimals)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x87AA64", Offset = "0x87AA64", VA = "0x87AA64")]
		public static Vector3 Product(this Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x87AA74", Offset = "0x87AA74", VA = "0x87AA74")]
		public static float Sum(this Vector3 v1)
		{
			return default(float);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x87AA80", Offset = "0x87AA80", VA = "0x87AA80")]
		public static float InProduct(this Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x87AA98", Offset = "0x87AA98", VA = "0x87AA98")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x87AAA8", Offset = "0x87AAA8", VA = "0x87AAA8")]
		public static Vector3 VectorMax(this Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x87AAC4", Offset = "0x87AAC4", VA = "0x87AAC4")]
		public static bool IsEqual(this Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x87AAEC", Offset = "0x87AAEC", VA = "0x87AAEC")]
		public static bool DiffBetween(this Vector3 v1, Vector3 v2, float from, float to)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x87AB38", Offset = "0x87AB38", VA = "0x87AB38")]
		public static bool IsDiffSmallEnough(this Vector3 v1, Vector3 v2, float maxDiff)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x87AB88", Offset = "0x87AB88", VA = "0x87AB88")]
		public static bool IsAllSmaller(this Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x87ABB0", Offset = "0x87ABB0", VA = "0x87ABB0")]
		public static Vector2 Barycentric(this Vector3 p, Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x87AC80", Offset = "0x87AC80", VA = "0x87AC80")]
		public static Vector3 To180Angle(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x87ACD8", Offset = "0x87ACD8", VA = "0x87ACD8")]
		public static Vector3 To360Angle(this Vector3 v)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003C2")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x87AD30", Offset = "0x87AD30", VA = "0x87AD30")]
		public static string MakeString(this Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x87AF4C", Offset = "0x87AF4C", VA = "0x87AF4C")]
		public static string MakeString(this Vector2 v, int decimals)
		{
			return null;
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x87B4A0", Offset = "0x87B4A0", VA = "0x87B4A0")]
		public static Vector2 Product(this Vector2 v1, Vector2 v2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x87B4AC", Offset = "0x87B4AC", VA = "0x87B4AC")]
		public static float InProduct(this Vector2 v1, Vector2 v2)
		{
			return default(float);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x87B4BC", Offset = "0x87B4BC", VA = "0x87B4BC")]
		public static Vector2 Abs(this Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x87B4C8", Offset = "0x87B4C8", VA = "0x87B4C8")]
		public static bool IsEqual(this Vector2 v1, Vector2 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x87B4E0", Offset = "0x87B4E0", VA = "0x87B4E0")]
		public static bool DiffBetween(this Vector2 v1, Vector2 v2, float from, float to)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x87B518", Offset = "0x87B518", VA = "0x87B518")]
		public static bool IsDiffSmallEnough(this Vector2 v1, Vector2 v2, float maxDiff)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x87B550", Offset = "0x87B550", VA = "0x87B550")]
		public static bool IsAllSmaller(this Vector2 v1, Vector2 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x87B568", Offset = "0x87B568", VA = "0x87B568")]
		public static bool IsBarycentricInTriangle(this Vector2 v)
		{
			return default(bool);
		}
	}
}
namespace MagicalFX
{
	[Token(Token = "0x20003C3")]
	public class FX_Rotation : MonoBehaviour
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Speed;

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x87B594", Offset = "0x87B594", VA = "0x87B594")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x87B598", Offset = "0x87B598", VA = "0x87B598")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x87B5C4", Offset = "0x87B5C4", VA = "0x87B5C4")]
		public FX_Rotation()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20003C4")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x87B624", Offset = "0x87B624", VA = "0x87B624")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x87B8AC", Offset = "0x87B8AC", VA = "0x87B8AC")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x87BA30", Offset = "0x87BA30", VA = "0x87BA30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x87BAA0", Offset = "0x87BAA0", VA = "0x87BAA0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x87BB6C", Offset = "0x87BB6C", VA = "0x87BB6C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x87BBD0", Offset = "0x87BBD0", VA = "0x87BBD0")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20003C6")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4001490")]
			Hardware,
			[Token(Token = "0x4001491")]
			Touch
		}

		[Token(Token = "0x20003C7")]
		public class VirtualAxis
		{
			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x17000216")]
			public string name
			{
				[Token(Token = "0x6001420")]
				[Address(RVA = "0x87CC44", Offset = "0x87CC44", VA = "0x87CC44")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001421")]
				[Address(RVA = "0x87CC4C", Offset = "0x87CC4C", VA = "0x87CC4C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000217")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001422")]
				[Address(RVA = "0x87CC54", Offset = "0x87CC54", VA = "0x87CC54")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001423")]
				[Address(RVA = "0x87CC5C", Offset = "0x87CC5C", VA = "0x87CC5C")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000218")]
			public float GetValue
			{
				[Token(Token = "0x6001428")]
				[Address(RVA = "0x87CCB0", Offset = "0x87CCB0", VA = "0x87CCB0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000219")]
			public float GetValueRaw
			{
				[Token(Token = "0x6001429")]
				[Address(RVA = "0x87CCB8", Offset = "0x87CCB8", VA = "0x87CCB8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x87B7A0", Offset = "0x87B7A0", VA = "0x87B7A0")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x87CC68", Offset = "0x87CC68", VA = "0x87CC68")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x87BA48", Offset = "0x87BA48", VA = "0x87BA48")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0x87CCA8", Offset = "0x87CCA8", VA = "0x87CCA8")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20003C8")]
		public class VirtualButton
		{
			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x1700021A")]
			public string name
			{
				[Token(Token = "0x600142A")]
				[Address(RVA = "0x87CCC0", Offset = "0x87CCC0", VA = "0x87CCC0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x600142B")]
				[Address(RVA = "0x87CCC8", Offset = "0x87CCC8", VA = "0x87CCC8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700021B")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600142C")]
				[Address(RVA = "0x87CCD0", Offset = "0x87CCD0", VA = "0x87CCD0")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600142D")]
				[Address(RVA = "0x87CCD8", Offset = "0x87CCD8", VA = "0x87CCD8")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700021C")]
			public bool GetButton
			{
				[Token(Token = "0x6001433")]
				[Address(RVA = "0x87CE14", Offset = "0x87CE14", VA = "0x87CE14")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700021D")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001434")]
				[Address(RVA = "0x87CE1C", Offset = "0x87CE1C", VA = "0x87CE1C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700021E")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001435")]
				[Address(RVA = "0x87CE40", Offset = "0x87CE40", VA = "0x87CE40")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600142E")]
			[Address(RVA = "0x87CCE4", Offset = "0x87CCE4", VA = "0x87CCE4")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x600142F")]
			[Address(RVA = "0x87CD28", Offset = "0x87CD28", VA = "0x87CD28")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001430")]
			[Address(RVA = "0x87CD70", Offset = "0x87CD70", VA = "0x87CD70")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6001431")]
			[Address(RVA = "0x87CD9C", Offset = "0x87CD9C", VA = "0x87CD9C")]
			public void Released()
			{
			}

			[Token(Token = "0x6001432")]
			[Address(RVA = "0x87CDBC", Offset = "0x87CDBC", VA = "0x87CDBC")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000215")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x87CA70", Offset = "0x87CA70", VA = "0x87CA70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x87BC3C", Offset = "0x87BC3C", VA = "0x87BC3C")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x87BD14", Offset = "0x87BD14", VA = "0x87BD14")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x87B738", Offset = "0x87B738", VA = "0x87B738")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x87BE10", Offset = "0x87BE10", VA = "0x87BE10")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x87B7DC", Offset = "0x87B7DC", VA = "0x87B7DC")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x87C068", Offset = "0x87C068", VA = "0x87C068")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x87C268", Offset = "0x87C268", VA = "0x87C268")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x87C3B0", Offset = "0x87C3B0", VA = "0x87C3B0")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x87B844", Offset = "0x87B844", VA = "0x87B844")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x87C53C", Offset = "0x87C53C", VA = "0x87C53C")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x87C614", Offset = "0x87C614", VA = "0x87C614")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x87C594", Offset = "0x87C594", VA = "0x87C594")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x87C66C", Offset = "0x87C66C", VA = "0x87C66C")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x87C6DC", Offset = "0x87C6DC", VA = "0x87C6DC")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x87C74C", Offset = "0x87C74C", VA = "0x87C74C")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x87C7BC", Offset = "0x87C7BC", VA = "0x87C7BC")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x87C82C", Offset = "0x87C82C", VA = "0x87C82C")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x87C89C", Offset = "0x87C89C", VA = "0x87C89C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x87C90C", Offset = "0x87C90C", VA = "0x87C90C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x87C97C", Offset = "0x87C97C", VA = "0x87C97C")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x87C9EC", Offset = "0x87C9EC", VA = "0x87C9EC")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x87CADC", Offset = "0x87CADC", VA = "0x87CADC")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x87CB54", Offset = "0x87CB54", VA = "0x87CB54")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x87CBCC", Offset = "0x87CBCC", VA = "0x87CBCC")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x87CE64", Offset = "0x87CE64", VA = "0x87CE64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x87CE68", Offset = "0x87CE68", VA = "0x87CE68")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x87CED8", Offset = "0x87CED8", VA = "0x87CED8")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20003CB")]
		public enum AxisOption
		{
			[Token(Token = "0x40014A5")]
			Both,
			[Token(Token = "0x40014A6")]
			OnlyHorizontal,
			[Token(Token = "0x40014A7")]
			OnlyVertical
		}

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x87CEE0", Offset = "0x87CEE0", VA = "0x87CEE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x87D044", Offset = "0x87D044", VA = "0x87D044")]
		private void Start()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x87D074", Offset = "0x87D074", VA = "0x87D074")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x87CEE4", Offset = "0x87CEE4", VA = "0x87CEE4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x87D0D4", Offset = "0x87D0D4", VA = "0x87D0D4", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x87D220", Offset = "0x87D220", VA = "0x87D220", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x87D25C", Offset = "0x87D25C", VA = "0x87D25C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x87D260", Offset = "0x87D260", VA = "0x87D260")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x87D2A0", Offset = "0x87D2A0", VA = "0x87D2A0")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001442")]
		[Address(RVA = "0x87D32C", Offset = "0x87D32C", VA = "0x87D32C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x87D33C", Offset = "0x87D33C", VA = "0x87D33C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x87D334", Offset = "0x87D334", VA = "0x87D334")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x87D444", Offset = "0x87D444", VA = "0x87D444")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x87D73C", Offset = "0x87D73C", VA = "0x87D73C")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[RequireComponent(typeof(Image))]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20003CE")]
		public enum AxisOption
		{
			[Token(Token = "0x40014BB")]
			Both,
			[Token(Token = "0x40014BC")]
			OnlyHorizontal,
			[Token(Token = "0x40014BD")]
			OnlyVertical
		}

		[Token(Token = "0x20003CF")]
		public enum ControlStyle
		{
			[Token(Token = "0x40014BF")]
			Absolute,
			[Token(Token = "0x40014C0")]
			Relative,
			[Token(Token = "0x40014C1")]
			Swipe
		}

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x87D744", Offset = "0x87D744", VA = "0x87D744")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x87D8A8", Offset = "0x87D8A8", VA = "0x87D8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x87D748", Offset = "0x87D748", VA = "0x87D748")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x87D930", Offset = "0x87D930", VA = "0x87D930")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x87DA30", Offset = "0x87DA30", VA = "0x87DA30", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x87DA68", Offset = "0x87DA68", VA = "0x87DA68")]
		private void Update()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x87DC40", Offset = "0x87DC40", VA = "0x87DC40", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x87DCA0", Offset = "0x87DCA0", VA = "0x87DCA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x87DD60", Offset = "0x87DD60", VA = "0x87DD60")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x1700021F")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x87DDF4", Offset = "0x87DDF4", VA = "0x87DDF4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x87DE00", Offset = "0x87DE00", VA = "0x87DE00")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x87BDB8", Offset = "0x87BDB8", VA = "0x87BDB8")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x87BE78", Offset = "0x87BE78", VA = "0x87BE78")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x87BED0", Offset = "0x87BED0", VA = "0x87BED0")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x87C0D0", Offset = "0x87C0D0", VA = "0x87C0D0")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x87C320", Offset = "0x87C320", VA = "0x87C320")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x87C418", Offset = "0x87C418", VA = "0x87C418")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x87C4A8", Offset = "0x87C4A8", VA = "0x87C4A8")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x87CB4C", Offset = "0x87CB4C", VA = "0x87CB4C")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x87CBC4", Offset = "0x87CBC4", VA = "0x87CBC4")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x87CC3C", Offset = "0x87CC3C", VA = "0x87CC3C")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600145C")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600145D")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x600145E")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600145F")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001460")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001461")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001462")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001463")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001464")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001465")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001466")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x87DE0C", Offset = "0x87DE0C", VA = "0x87DE0C")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20003D1")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0x87DF34", Offset = "0x87DF34", VA = "0x87DF34")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x87DFE4", Offset = "0x87DFE4", VA = "0x87DFE4")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x87E08C", Offset = "0x87E08C", VA = "0x87E08C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x87E124", Offset = "0x87E124", VA = "0x87E124", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x87E1D8", Offset = "0x87E1D8", VA = "0x87E1D8", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x87E280", Offset = "0x87E280", VA = "0x87E280", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x87E31C", Offset = "0x87E31C", VA = "0x87E31C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x87E3B8", Offset = "0x87E3B8", VA = "0x87E3B8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x87E450", Offset = "0x87E450", VA = "0x87E450", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x87E4F4", Offset = "0x87E4F4", VA = "0x87E4F4", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x87E5A0", Offset = "0x87E5A0", VA = "0x87E5A0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x87E64C", Offset = "0x87E64C", VA = "0x87E64C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x87E6E4", Offset = "0x87E6E4", VA = "0x87E6E4", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x87BD0C", Offset = "0x87BD0C", VA = "0x87BD0C")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001476")]
		[Address(RVA = "0x87E6F0", Offset = "0x87E6F0", VA = "0x87E6F0", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x87E704", Offset = "0x87E704", VA = "0x87E704", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x87E710", Offset = "0x87E710", VA = "0x87E710", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x87E71C", Offset = "0x87E71C", VA = "0x87E71C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x87E728", Offset = "0x87E728", VA = "0x87E728", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x87E778", Offset = "0x87E778", VA = "0x87E778", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x87E7C8", Offset = "0x87E7C8", VA = "0x87E7C8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x87E818", Offset = "0x87E818", VA = "0x87E818", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x87E868", Offset = "0x87E868", VA = "0x87E868", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x87E8B8", Offset = "0x87E8B8", VA = "0x87E8B8", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x87E908", Offset = "0x87E908", VA = "0x87E908", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x87BD10", Offset = "0x87BD10", VA = "0x87BD10")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20003D3")]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(PhotonView))]
	[RequireComponent(typeof(Animator))]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x87E910", Offset = "0x87E910", VA = "0x87E910", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x87EAE8", Offset = "0x87EAE8", VA = "0x87EAE8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x87EC0C", Offset = "0x87EC0C", VA = "0x87EC0C", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x87ECB4", Offset = "0x87ECB4", VA = "0x87ECB4", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x87ED48", Offset = "0x87ED48", VA = "0x87ED48", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x87EDD8", Offset = "0x87EDD8", VA = "0x87EDD8", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x87EE84", Offset = "0x87EE84", VA = "0x87EE84", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x87EEFC", Offset = "0x87EEFC", VA = "0x87EEFC", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x87EFB8", Offset = "0x87EFB8", VA = "0x87EFB8", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x87F048", Offset = "0x87F048", VA = "0x87F048", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x600148C")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x87F0D8", Offset = "0x87F0D8", VA = "0x87F0D8")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[DisallowMultipleComponent]
	[RequireComponent(typeof(Toggle))]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x20003D5")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000020")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x87F0E8", Offset = "0x87F0E8", VA = "0x87F0E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x87F1A0", Offset = "0x87F1A0", VA = "0x87F1A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x87F258", Offset = "0x87F258", VA = "0x87F258")]
		private void Start()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x87F334", Offset = "0x87F334", VA = "0x87F334")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x87F3A0", Offset = "0x87F3A0", VA = "0x87F3A0")]
		public BetterToggle()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x20003D7")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000021")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x87EA30", Offset = "0x87EA30", VA = "0x87EA30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x87EB54", Offset = "0x87EB54", VA = "0x87EB54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x87F4FC", Offset = "0x87F4FC", VA = "0x87F4FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x87F710", Offset = "0x87F710", VA = "0x87F710")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x87F870", Offset = "0x87F870", VA = "0x87F870")]
		private void Start()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x87FA94", Offset = "0x87FA94", VA = "0x87FA94")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x87FB9C", Offset = "0x87FB9C", VA = "0x87FB9C")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x87FD20", Offset = "0x87FD20", VA = "0x87FD20")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x87FD28", Offset = "0x87FD28", VA = "0x87FD28")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x87FBA4", Offset = "0x87FBA4", VA = "0x87FBA4")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x87FD30", Offset = "0x87FD30", VA = "0x87FD30")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x87FDD4", Offset = "0x87FDD4", VA = "0x87FDD4", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x87FDD8", Offset = "0x87FDD8", VA = "0x87FDD8", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x87FDDC", Offset = "0x87FDDC", VA = "0x87FDDC", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x87FDE0", Offset = "0x87FDE0", VA = "0x87FDE0", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x87FDE4", Offset = "0x87FDE4", VA = "0x87FDE4", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x87FDE8", Offset = "0x87FDE8", VA = "0x87FDE8", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x87FDEC", Offset = "0x87FDEC", VA = "0x87FDEC", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x87FF00", Offset = "0x87FF00", VA = "0x87FF00")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x20003D9")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x40014DF")]
		private const byte manualInstantiationEventCode = 1;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x14000022")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x87F658", Offset = "0x87F658", VA = "0x87F658")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x87F7B8", Offset = "0x87F7B8", VA = "0x87F7B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x87FF48", Offset = "0x87FF48", VA = "0x87FF48", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x8802B8", Offset = "0x8802B8", VA = "0x8802B8")]
		private void ManualInstantiation(int index, Vector3 position)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x8806EC", Offset = "0x8806EC", VA = "0x8806EC", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x880958", Offset = "0x880958", VA = "0x880958")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x17000220")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x8809A8", Offset = "0x8809A8", VA = "0x8809A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x8809C4", Offset = "0x8809C4", VA = "0x8809C4", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x880A08", Offset = "0x880A08", VA = "0x880A08", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x880A90", Offset = "0x880A90", VA = "0x880A90")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x880A94", Offset = "0x880A94", VA = "0x880A94")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x880BBC", Offset = "0x880BBC", VA = "0x880BBC")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[RequireComponent(typeof(Canvas))]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x880C38", Offset = "0x880C38", VA = "0x880C38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x880E64", Offset = "0x880E64", VA = "0x880E64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x880FE0", Offset = "0x880FE0", VA = "0x880FE0")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x880FEC", Offset = "0x880FEC", VA = "0x880FEC")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x881008", Offset = "0x881008", VA = "0x881008")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x881138", Offset = "0x881138", VA = "0x881138")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x881298", Offset = "0x881298", VA = "0x881298")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x8813B0", Offset = "0x8813B0", VA = "0x8813B0")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x8813B8", Offset = "0x8813B8", VA = "0x8813B8", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x8813E0", Offset = "0x8813E0", VA = "0x8813E0", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x881450", Offset = "0x881450", VA = "0x881450", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x8815E4", Offset = "0x8815E4", VA = "0x8815E4")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x8816B8", Offset = "0x8816B8", VA = "0x8816B8")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x881468", Offset = "0x881468", VA = "0x881468", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x8816D4", Offset = "0x8816D4", VA = "0x8816D4")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x20003DF")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x17000221")]
		public bool DebugMode
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x8816EC", Offset = "0x8816EC", VA = "0x8816EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x8816F4", Offset = "0x8816F4", VA = "0x8816F4")]
			set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x880DAC", Offset = "0x880DAC", VA = "0x880DAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x880F28", Offset = "0x880F28", VA = "0x880F28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x881824", Offset = "0x881824", VA = "0x881824")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x881888", Offset = "0x881888", VA = "0x881888")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x881A8C", Offset = "0x881A8C", VA = "0x881A8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x881C90", Offset = "0x881C90", VA = "0x881C90")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x881D50", Offset = "0x881D50", VA = "0x881D50")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x8820D0", Offset = "0x8820D0", VA = "0x8820D0")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x882424", Offset = "0x882424", VA = "0x882424")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x882440", Offset = "0x882440", VA = "0x882440")]
		private void Start()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x882A28", Offset = "0x882A28", VA = "0x882A28")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x882AF8", Offset = "0x882AF8", VA = "0x882AF8")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x882B78", Offset = "0x882B78", VA = "0x882B78")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x882C14", Offset = "0x882C14", VA = "0x882C14")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x882E24", Offset = "0x882E24", VA = "0x882E24")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x8833EC", Offset = "0x8833EC", VA = "0x8833EC")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x882FB8", Offset = "0x882FB8", VA = "0x882FB8")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x8833F4", Offset = "0x8833F4", VA = "0x8833F4")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x20003E0")]
	[RequireComponent(typeof(VoiceConnection))]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4001517")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color warningColor;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color okColor;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x8834B0", Offset = "0x8834B0", VA = "0x8834B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x883904", Offset = "0x883904", VA = "0x883904")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x883A48", Offset = "0x883A48", VA = "0x883A48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x883AD4", Offset = "0x883AD4", VA = "0x883AD4")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x883BD0", Offset = "0x883BD0", VA = "0x883BD0")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x883C74", Offset = "0x883C74", VA = "0x883C74")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x883DA8", Offset = "0x883DA8", VA = "0x883DA8")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x883DE0", Offset = "0x883DE0", VA = "0x883DE0")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x883E18", Offset = "0x883E18", VA = "0x883E18")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x883E40", Offset = "0x883E40", VA = "0x883E40")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x883E68", Offset = "0x883E68", VA = "0x883E68")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x883E90", Offset = "0x883E90", VA = "0x883E90")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x883EB8", Offset = "0x883EB8", VA = "0x883EB8")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x883F08", Offset = "0x883F08", VA = "0x883F08")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x883FB4", Offset = "0x883FB4", VA = "0x883FB4")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x883FEC", Offset = "0x883FEC", VA = "0x883FEC")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x884094", Offset = "0x884094", VA = "0x884094")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x884220", Offset = "0x884220", VA = "0x884220")]
		protected void Update()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x883510", Offset = "0x883510", VA = "0x883510")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x88484C", Offset = "0x88484C", VA = "0x88484C")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public struct MicRef
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x884868", Offset = "0x884868", VA = "0x884868")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x884898", Offset = "0x884898", VA = "0x884898")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x8848BC", Offset = "0x8848BC", VA = "0x8848BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003E2")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[FormerlySerializedAs("RefreshButton")]
		private GameObject refreshButton;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[FormerlySerializedAs("ToggleButton")]
		private GameObject toggleButton;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x884908", Offset = "0x884908", VA = "0x884908")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x884990", Offset = "0x884990", VA = "0x884990")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x884CF8", Offset = "0x884CF8", VA = "0x884CF8")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x884D88", Offset = "0x884D88", VA = "0x884D88")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x8850E8", Offset = "0x8850E8", VA = "0x8850E8")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x884978", Offset = "0x884978", VA = "0x884978")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x885178", Offset = "0x885178", VA = "0x885178")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x885190", Offset = "0x885190", VA = "0x885190")]
		public MicrophoneDropdownFiller()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	[RequireComponent(typeof(Speaker))]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Speaker speaker;

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x885220", Offset = "0x885220", VA = "0x885220")]
		private void Start()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x885370", Offset = "0x885370", VA = "0x885370")]
		private void Update()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x885474", Offset = "0x885474", VA = "0x885474")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20003E4")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x88547C", Offset = "0x88547C", VA = "0x88547C")]
		public void Start()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x88561C", Offset = "0x88561C", VA = "0x88561C")]
		public void Update()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x885750", Offset = "0x885750", VA = "0x885750", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x885754", Offset = "0x885754", VA = "0x885754", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x8857D8", Offset = "0x8857D8", VA = "0x8857D8", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x8858C4", Offset = "0x8858C4", VA = "0x8858C4", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x8858C8", Offset = "0x8858C8", VA = "0x8858C8", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x8858CC", Offset = "0x8858CC", VA = "0x8858CC", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x8859A8", Offset = "0x8859A8", VA = "0x8859A8", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x8859AC", Offset = "0x8859AC", VA = "0x8859AC", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x8859B0", Offset = "0x8859B0", VA = "0x8859B0", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x8859B4", Offset = "0x8859B4", VA = "0x8859B4", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x8859B8", Offset = "0x8859B8", VA = "0x8859B8", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x8859BC", Offset = "0x8859BC", VA = "0x8859BC", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x8859C0", Offset = "0x8859C0", VA = "0x8859C0", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x8859C4", Offset = "0x8859C4", VA = "0x8859C4", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x885A2C", Offset = "0x885A2C", VA = "0x885A2C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x885A30", Offset = "0x885A30", VA = "0x885A30", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x885AE4", Offset = "0x885AE4", VA = "0x885AE4", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x885AE8", Offset = "0x885AE8", VA = "0x885AE8")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x885C0C", Offset = "0x885C0C", VA = "0x885C0C")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20003E5")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x885C80", Offset = "0x885C80", VA = "0x885C80")]
		private void Start()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x885D88", Offset = "0x885D88", VA = "0x885D88")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001520")]
		[Address(RVA = "0x885D90", Offset = "0x885D90", VA = "0x885D90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x885DFC", Offset = "0x885DFC", VA = "0x885DFC")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x885E04", Offset = "0x885E04", VA = "0x885E04")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x885E5C", Offset = "0x885E5C", VA = "0x885E5C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x885E8C", Offset = "0x885E8C", VA = "0x885E8C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x885EBC", Offset = "0x885EBC", VA = "0x885EBC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x885F6C", Offset = "0x885F6C", VA = "0x885F6C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x88601C", Offset = "0x88601C", VA = "0x88601C")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x886038", Offset = "0x886038", VA = "0x886038")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x88618C", Offset = "0x88618C", VA = "0x88618C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x886128", Offset = "0x886128", VA = "0x886128")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x886234", Offset = "0x886234", VA = "0x886234", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x8862A8", Offset = "0x8862A8", VA = "0x8862A8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x886318", Offset = "0x886318", VA = "0x886318")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusRemover
{
	[Token(Token = "0x20003E9")]
	internal class Program
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string path;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool removedFile;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isWaiting;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x88633C", Offset = "0x88633C", VA = "0x88633C")]
		private static void Main(string[] args)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x8863EC", Offset = "0x8863EC", VA = "0x8863EC")]
		public void RemoveOculusDirectory()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x886394", Offset = "0x886394", VA = "0x886394")]
		public Program()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x20003EA")]
	internal class Behavior
	{
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool jettison;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool boundaryMarkers;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool noHoles;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool conformDel;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x17000222")]
		public static bool NoExact
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x886968", Offset = "0x886968", VA = "0x886968")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x8869B0", Offset = "0x8869B0", VA = "0x8869B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public bool Quality
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x8869FC", Offset = "0x8869FC", VA = "0x8869FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x886A04", Offset = "0x886A04", VA = "0x886A04")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public double MinAngle
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x886A18", Offset = "0x886A18", VA = "0x886A18")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x886A20", Offset = "0x886A20", VA = "0x886A20")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public double MaxAngle
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x886A28", Offset = "0x886A28", VA = "0x886A28")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x886A30", Offset = "0x886A30", VA = "0x886A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public double MaxArea
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x886A38", Offset = "0x886A38", VA = "0x886A38")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x886A40", Offset = "0x886A40", VA = "0x886A40")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public bool VarArea
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0x886A54", Offset = "0x886A54", VA = "0x886A54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x886A5C", Offset = "0x886A5C", VA = "0x886A5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool Poly
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x886A68", Offset = "0x886A68", VA = "0x886A68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x886A70", Offset = "0x886A70", VA = "0x886A70")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x886A7C", Offset = "0x886A7C", VA = "0x886A7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x886A84", Offset = "0x886A84", VA = "0x886A84")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public bool Convex
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x886A8C", Offset = "0x886A8C", VA = "0x886A8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x886A94", Offset = "0x886A94", VA = "0x886A94")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x886AA0", Offset = "0x886AA0", VA = "0x886AA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x886AA8", Offset = "0x886AA8", VA = "0x886AA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public int NoBisect
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x886AB4", Offset = "0x886AB4", VA = "0x886AB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x886ABC", Offset = "0x886ABC", VA = "0x886ABC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x886ACC", Offset = "0x886ACC", VA = "0x886ACC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x886AD4", Offset = "0x886AD4", VA = "0x886AD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public bool NoHoles
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x886AE0", Offset = "0x886AE0", VA = "0x886AE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x886AE8", Offset = "0x886AE8", VA = "0x886AE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool Jettison
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x886AF4", Offset = "0x886AF4", VA = "0x886AF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x886AFC", Offset = "0x886AFC", VA = "0x886AFC")]
			set
			{
			}
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x8865A4", Offset = "0x8865A4", VA = "0x8865A4")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x886608", Offset = "0x886608", VA = "0x886608")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class Configuration
	{
		[Token(Token = "0x17000230")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x886DBC", Offset = "0x886DBC", VA = "0x886DBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x886DC4", Offset = "0x886DC4", VA = "0x886DC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x886DCC", Offset = "0x886DCC", VA = "0x886DCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x886DD4", Offset = "0x886DD4", VA = "0x886DD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x886B08", Offset = "0x886B08", VA = "0x886B08")]
		public Configuration()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x886CCC", Offset = "0x886CCC", VA = "0x886CCC")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x886C88", Offset = "0x886C88", VA = "0x886C88")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public enum VertexType
	{
		[Token(Token = "0x4001554")]
		InputVertex,
		[Token(Token = "0x4001555")]
		SegmentVertex,
		[Token(Token = "0x4001556")]
		FreeVertex,
		[Token(Token = "0x4001557")]
		DeadVertex,
		[Token(Token = "0x4001558")]
		UndeadVertex
	}
	[Token(Token = "0x20003EE")]
	public enum NodeNumbering
	{
		[Token(Token = "0x400155A")]
		None,
		[Token(Token = "0x400155B")]
		Linear,
		[Token(Token = "0x400155C")]
		CuthillMcKee
	}
	[Token(Token = "0x20003EF")]
	public enum LocateResult
	{
		[Token(Token = "0x400155E")]
		InTriangle,
		[Token(Token = "0x400155F")]
		OnEdge,
		[Token(Token = "0x4001560")]
		OnVertex,
		[Token(Token = "0x4001561")]
		Outside
	}
	[Token(Token = "0x20003F0")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x4001563")]
		Successful,
		[Token(Token = "0x4001564")]
		Encroaching,
		[Token(Token = "0x4001565")]
		Violating,
		[Token(Token = "0x4001566")]
		Duplicate
	}
	[Token(Token = "0x20003F1")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x4001568")]
		Within,
		[Token(Token = "0x4001569")]
		Leftcollinear,
		[Token(Token = "0x400156A")]
		Rightcollinear
	}
	[Token(Token = "0x20003F2")]
	public interface IPredicates
	{
		[Token(Token = "0x600155B")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x600155C")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x600155D")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x600155E")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x20003F3")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x17000232")]
		public static bool Verbose
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x886F5C", Offset = "0x886F5C", VA = "0x886F5C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x886FB4", Offset = "0x886FB4", VA = "0x886FB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x8870FC", Offset = "0x8870FC", VA = "0x8870FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x887554", Offset = "0x887554", VA = "0x887554", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public LogLevel Level
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x88755C", Offset = "0x88755C", VA = "0x88755C", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x887010", Offset = "0x887010", VA = "0x887010")]
		static Log()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x887074", Offset = "0x887074", VA = "0x887074")]
		private Log()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x887154", Offset = "0x887154", VA = "0x887154", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x887204", Offset = "0x887204", VA = "0x887204", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x887274", Offset = "0x887274", VA = "0x887274", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x887364", Offset = "0x887364", VA = "0x887364", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x88745C", Offset = "0x88745C", VA = "0x88745C", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x20003F5")]
		[CompilerGenerated]
		private sealed class <get_Edges>d__39 : IEnumerable<Edge>, IEnumerable, IEnumerator<Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Edge <>2__current;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh <>4__this;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x17000240")]
			private Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x600158F")]
				[Address(RVA = "0x88B248", Offset = "0x88B248", VA = "0x88B248", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001591")]
				[Address(RVA = "0x88B290", Offset = "0x88B290", VA = "0x88B290", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0x88B13C", Offset = "0x88B13C", VA = "0x88B13C")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600158D")]
			[Address(RVA = "0x88B170", Offset = "0x88B170", VA = "0x88B170", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x88B174", Offset = "0x88B174", VA = "0x88B174", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001590")]
			[Address(RVA = "0x88B250", Offset = "0x88B250", VA = "0x88B250", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0x88B298", Offset = "0x88B298", VA = "0x88B298", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001593")]
			[Address(RVA = "0x88B344", Offset = "0x88B344", VA = "0x88B344", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int hash_tri;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<Point> holes;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal Rectangle bounds;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int invertices;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int insegments;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int undeads;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int mesh_dim;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int nextras;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int hullsize;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int steinerleft;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal bool checksegments;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		internal bool checkquality;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal TriangleLocator locator;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Behavior behavior;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal NodeNumbering numbering;

		[Token(Token = "0x400158B")]
		internal const int DUMMY = -1;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal Triangle dummytri;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal SubSegment dummysub;

		[Token(Token = "0x17000236")]
		public Rectangle Bounds
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x887564", Offset = "0x887564", VA = "0x887564", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x88756C", Offset = "0x88756C", VA = "0x88756C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public IList<Point> Holes
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x8875BC", Offset = "0x8875BC", VA = "0x8875BC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public ICollection<Triangle> Triangles
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x8875C4", Offset = "0x8875C4", VA = "0x8875C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x8875CC", Offset = "0x8875CC", VA = "0x8875CC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public IEnumerable<Edge> Edges
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x88761C", Offset = "0x88761C", VA = "0x88761C", Slot = "5")]
			[IteratorStateMachine(typeof(<get_Edges>d__39))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x887690", Offset = "0x887690", VA = "0x887690")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023D")]
		public int NumberOfEdges
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x887698", Offset = "0x887698", VA = "0x887698")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023E")]
		public bool IsPolygon
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x8876D4", Offset = "0x8876D4", VA = "0x8876D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023F")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x8876E4", Offset = "0x8876E4", VA = "0x8876E4")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x8876EC", Offset = "0x8876EC", VA = "0x8876EC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x8878C8", Offset = "0x8878C8", VA = "0x8878C8")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x887C0C", Offset = "0x887C0C", VA = "0x887C0C", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x887DC8", Offset = "0x887DC8", VA = "0x887DC8", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x887DD0", Offset = "0x887DD0", VA = "0x887DD0")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x8882D0", Offset = "0x8882D0", VA = "0x8882D0")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x8882D8", Offset = "0x8882D8", VA = "0x8882D8")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x88836C", Offset = "0x88836C", VA = "0x88836C")]
		private void ResetData()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x887D58", Offset = "0x887D58", VA = "0x887D58")]
		private void Reset()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x8884A8", Offset = "0x8884A8", VA = "0x8884A8")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x888AA8", Offset = "0x888AA8", VA = "0x888AA8")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x888D80", Offset = "0x888D80", VA = "0x888D80")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x888E88", Offset = "0x888E88", VA = "0x888E88")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x888FB8", Offset = "0x888FB8", VA = "0x888FB8")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x88A094", Offset = "0x88A094", VA = "0x88A094")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x88A1D8", Offset = "0x88A1D8", VA = "0x88A1D8")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x88A4DC", Offset = "0x88A4DC", VA = "0x88A4DC")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x88A7E0", Offset = "0x88A7E0", VA = "0x88A7E0")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x88AA68", Offset = "0x88AA68", VA = "0x88AA68")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x88AD80", Offset = "0x88AD80", VA = "0x88AD80")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x88AD04", Offset = "0x88AD04", VA = "0x88AD04")]
		internal void TriangleDealloc(Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x88ACA0", Offset = "0x88ACA0", VA = "0x88ACA0")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x88B0D4", Offset = "0x88B0D4", VA = "0x88B0D4")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public static class MeshValidator
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x88B348", Offset = "0x88B348", VA = "0x88B348")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x88BE3C", Offset = "0x88BE3C", VA = "0x88BE3C")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x88C704", Offset = "0x88C704", VA = "0x88C704")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x88BE94", Offset = "0x88BE94", VA = "0x88BE94")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F7")]
	internal class NewLocation
	{
		[Token(Token = "0x4001594")]
		private const double EPS = 1E-50;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x88C7DC", Offset = "0x88C7DC", VA = "0x88C7DC")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x88C9BC", Offset = "0x88C9BC", VA = "0x88C9BC")]
		public Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x88C9FC", Offset = "0x88C9FC", VA = "0x88C9FC")]
		private Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x88DB24", Offset = "0x88DB24", VA = "0x88DB24")]
		private Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x88F884", Offset = "0x88F884", VA = "0x88F884")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x88F910", Offset = "0x88F910", VA = "0x88F910")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x890B70", Offset = "0x890B70", VA = "0x890B70")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x88FD24", Offset = "0x88FD24", VA = "0x88FD24")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x890FD0", Offset = "0x890FD0", VA = "0x890FD0")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x891B7C", Offset = "0x891B7C", VA = "0x891B7C")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x890E18", Offset = "0x890E18", VA = "0x890E18")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x893904", Offset = "0x893904", VA = "0x893904")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x8906BC", Offset = "0x8906BC", VA = "0x8906BC")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x8935D4", Offset = "0x8935D4", VA = "0x8935D4")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x893A08", Offset = "0x893A08", VA = "0x893A08")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x894524", Offset = "0x894524", VA = "0x894524")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x894354", Offset = "0x894354", VA = "0x894354")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x893854", Offset = "0x893854", VA = "0x893854")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x8901AC", Offset = "0x8901AC", VA = "0x8901AC")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x890400", Offset = "0x890400", VA = "0x890400")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x890440", Offset = "0x890440", VA = "0x890440")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x890504", Offset = "0x890504", VA = "0x890504")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x890878", Offset = "0x890878", VA = "0x890878")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20003F8")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x17000242")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x89467C", Offset = "0x89467C", VA = "0x89467C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x894830", Offset = "0x894830", VA = "0x894830")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x894814", Offset = "0x894814", VA = "0x894814")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x894CC0", Offset = "0x894CC0", VA = "0x894CC0", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x89562C", Offset = "0x89562C", VA = "0x89562C", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x898628", Offset = "0x898628", VA = "0x898628")]
		public double NonRegular(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x89862C", Offset = "0x89862C", VA = "0x89862C", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x898978", Offset = "0x898978", VA = "0x898978", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x898B80", Offset = "0x898B80", VA = "0x898B80")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x898E48", Offset = "0x898E48", VA = "0x898E48")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x89907C", Offset = "0x89907C", VA = "0x89907C")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x894E8C", Offset = "0x894E8C", VA = "0x894E8C")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x8958D4", Offset = "0x8958D4", VA = "0x8958D4")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x8949AC", Offset = "0x8949AC", VA = "0x8949AC")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x8990D4", Offset = "0x8990D4", VA = "0x8990D4")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class TriangleLocator
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x8990D8", Offset = "0x8990D8", VA = "0x8990D8")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x899144", Offset = "0x899144", VA = "0x899144")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x899264", Offset = "0x899264", VA = "0x899264")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x899278", Offset = "0x899278", VA = "0x899278")]
		public void Reset()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x8992B4", Offset = "0x8992B4", VA = "0x8992B4")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x8995C0", Offset = "0x8995C0", VA = "0x8995C0")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x20003FA")]
	public class TrianglePool : ICollection<Triangle>, IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x20003FB")]
		private class Enumerator : IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle[][] pool;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Triangle current;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x17000245")]
			public Triangle Current
			{
				[Token(Token = "0x60015D5")]
				[Address(RVA = "0x89A8DC", Offset = "0x89A8DC", VA = "0x89A8DC", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D7")]
				[Address(RVA = "0x89A8E8", Offset = "0x89A8E8", VA = "0x89A8E8", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x89A88C", Offset = "0x89A88C", VA = "0x89A88C")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x89A8E4", Offset = "0x89A8E4", VA = "0x89A8E4", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x89A8F0", Offset = "0x89A8F0", VA = "0x89A8F0", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x89A9B0", Offset = "0x89A9B0", VA = "0x89A9B0", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[CompilerGenerated]
		private sealed class <Sample>d__9 : IEnumerable<Triangle>, IEnumerable, IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle <>2__current;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x17000247")]
			private Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x60015DD")]
				[Address(RVA = "0x89AACC", Offset = "0x89AACC", VA = "0x89AACC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015DF")]
				[Address(RVA = "0x89AB14", Offset = "0x89AB14", VA = "0x89AB14", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x89A400", Offset = "0x89A400", VA = "0x89A400")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x89A9B8", Offset = "0x89A9B8", VA = "0x89A9B8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x89A9BC", Offset = "0x89A9BC", VA = "0x89A9BC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x89AAD4", Offset = "0x89AAD4", VA = "0x89AAD4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x89AB1C", Offset = "0x89AB1C", VA = "0x89AB1C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x89ABE0", Offset = "0x89ABE0", VA = "0x89ABE0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015CC")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triangle[][] pool;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Triangle> stack;

		[Token(Token = "0x17000243")]
		public int Count
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x89A7F4", Offset = "0x89A7F4", VA = "0x89A7F4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000244")]
		public bool IsReadOnly
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x89A844", Offset = "0x89A844", VA = "0x89A844", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x899C90", Offset = "0x899C90", VA = "0x899C90")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x899E00", Offset = "0x899E00", VA = "0x899E00")]
		public Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x89A158", Offset = "0x89A158", VA = "0x89A158")]
		public void Release(Triangle triangle)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x89A1C4", Offset = "0x89A1C4", VA = "0x89A1C4")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x89A358", Offset = "0x89A358", VA = "0x89A358")]
		[IteratorStateMachine(typeof(<Sample>d__9))]
		internal IEnumerable<Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x89A0A4", Offset = "0x89A0A4", VA = "0x89A0A4")]
		private void Cleanup(Triangle triangle)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x89A434", Offset = "0x89A434", VA = "0x89A434", Slot = "6")]
		public void Add(Triangle item)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x89A474", Offset = "0x89A474", VA = "0x89A474", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x89A58C", Offset = "0x89A58C", VA = "0x89A58C", Slot = "8")]
		public bool Contains(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x89A60C", Offset = "0x89A60C", VA = "0x89A60C", Slot = "9")]
		public void CopyTo(Triangle[] array, int index)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x89A84C", Offset = "0x89A84C", VA = "0x89A84C", Slot = "10")]
		public bool Remove(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x89A794", Offset = "0x89A794", VA = "0x89A794", Slot = "11")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x89A8D8", Offset = "0x89A8D8", VA = "0x89A8D8", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FD")]
	internal class TriangleSampler : IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x40015DF")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x40015E0")]
		private const int samplefactor = 11;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x8991E8", Offset = "0x8991E8", VA = "0x8991E8")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x89ABE4", Offset = "0x89ABE4", VA = "0x89ABE4")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x8992A4", Offset = "0x8992A4", VA = "0x8992A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x899B5C", Offset = "0x899B5C", VA = "0x899B5C")]
		public void Update()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x899BD4", Offset = "0x899BD4", VA = "0x899BD4", Slot = "4")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x89AC30", Offset = "0x89AC30", VA = "0x89AC30", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x20003FE")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int offset;

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x89AC34", Offset = "0x89AC34", VA = "0x89AC34")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x89ACDC", Offset = "0x89ACDC", VA = "0x89ACDC")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x89AE04", Offset = "0x89AE04", VA = "0x89AE04")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x89B0EC", Offset = "0x89B0EC", VA = "0x89B0EC")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x89B500", Offset = "0x89B500", VA = "0x89B500")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x89B8CC", Offset = "0x89B8CC", VA = "0x89B8CC", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x89B8D0", Offset = "0x89B8D0", VA = "0x89B8D0", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x89B8D4", Offset = "0x89B8D4", VA = "0x89B8D4", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x89B948", Offset = "0x89B948", VA = "0x89B948", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x89B9BC", Offset = "0x89B9BC", VA = "0x89B9BC", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x89ACD4", Offset = "0x89ACD4", VA = "0x89ACD4")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x60015F3")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x60015F4")]
		void Reset();

		[Token(Token = "0x60015F5")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x60015F6")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x60015F7")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x2000401")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x89BA20", Offset = "0x89BA20", VA = "0x89BA20")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x89BB24", Offset = "0x89BB24", VA = "0x89BB24")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x89BACC", Offset = "0x89BACC", VA = "0x89BACC")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x89BBCC", Offset = "0x89BBCC", VA = "0x89BBCC")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x2000402")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IPredicates predicates;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x89AD8C", Offset = "0x89AD8C", VA = "0x89AD8C")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x89BD90", Offset = "0x89BD90", VA = "0x89BD90")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x89C2CC", Offset = "0x89C2CC", VA = "0x89C2CC")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x89C83C", Offset = "0x89C83C", VA = "0x89C83C")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x89D408", Offset = "0x89D408", VA = "0x89D408", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x89D6DC", Offset = "0x89D6DC", VA = "0x89D6DC", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x2000403")]
	[Obsolete("Use TriangleNet.Voronoi.BoundedVoronoi class instead.")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Point> segPoints;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int segIndex;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool includeBoundary;

		[Token(Token = "0x17000249")]
		public Point[] Points
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x89DFA0", Offset = "0x89DFA0", VA = "0x89DFA0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x89DFA8", Offset = "0x89DFA8", VA = "0x89DFA8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x89DFB0", Offset = "0x89DFB0", VA = "0x89DFB0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x89DA68", Offset = "0x89DA68", VA = "0x89DA68")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x89DA70", Offset = "0x89DA70", VA = "0x89DA70")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x89DB10", Offset = "0x89DB10", VA = "0x89DB10")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x89E834", Offset = "0x89E834", VA = "0x89E834")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x89EC28", Offset = "0x89EC28", VA = "0x89EC28")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x8A0580", Offset = "0x8A0580", VA = "0x8A0580")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x89F2BC", Offset = "0x89F2BC", VA = "0x89F2BC")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x89F8DC", Offset = "0x89F8DC", VA = "0x89F8DC")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x8A06A8", Offset = "0x8A06A8", VA = "0x8A06A8")]
		private bool SegmentsIntersect(Point p1, Point p2, Point p3, Point p4, out Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x89DFB4", Offset = "0x89DFB4", VA = "0x89DFB4")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000404")]
	public interface IVoronoi
	{
		[Token(Token = "0x1700024C")]
		Point[] Points
		{
			[Token(Token = "0x600160F")]
			get;
		}

		[Token(Token = "0x1700024D")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6001610")]
			get;
		}

		[Token(Token = "0x1700024E")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001611")]
			get;
		}
	}
	[Token(Token = "0x2000405")]
	[Obsolete("Use TriangleNet.Voronoi.StandardVoronoi class instead.")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Point> rayPoints;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rayIndex;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rectangle bounds;

		[Token(Token = "0x1700024F")]
		public Point[] Points
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x8A0E24", Offset = "0x8A0E24", VA = "0x8A0E24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x8A0E2C", Offset = "0x8A0E2C", VA = "0x8A0E2C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x8A0E7C", Offset = "0x8A0E7C", VA = "0x8A0E7C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x8A08DC", Offset = "0x8A08DC", VA = "0x8A08DC")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x8A096C", Offset = "0x8A096C", VA = "0x8A096C")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x8A1710", Offset = "0x8A1710", VA = "0x8A1710")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x8A1B9C", Offset = "0x8A1B9C", VA = "0x8A1B9C")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x8A2474", Offset = "0x8A2474", VA = "0x8A2474")]
		private bool BoxRayIntersection(Point pt, double dx, double dy, out Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x8A0E80", Offset = "0x8A0E80", VA = "0x8A0E80")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000406")]
	public class VoronoiRegion
	{
		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int id;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point generator;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> vertices;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool bounded;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x17000252")]
		public int ID
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x8A2624", Offset = "0x8A2624", VA = "0x8A2624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000253")]
		public Point Generator
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x8A262C", Offset = "0x8A262C", VA = "0x8A262C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public ICollection<Point> Vertices
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x8A2634", Offset = "0x8A2634", VA = "0x8A2634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public bool Bounded
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x8A263C", Offset = "0x8A263C", VA = "0x8A263C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x8A2644", Offset = "0x8A2644", VA = "0x8A2644")]
			set
			{
			}
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x8A2650", Offset = "0x8A2650", VA = "0x8A2650")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x8A275C", Offset = "0x8A275C", VA = "0x8A275C")]
		public void Add(Point point)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x8A280C", Offset = "0x8A280C", VA = "0x8A280C")]
		public void Add(List<Point> points)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x8A2864", Offset = "0x8A2864", VA = "0x8A2864")]
		public VoronoiRegion GetNeighbor(Point p)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x8A28E0", Offset = "0x8A28E0", VA = "0x8A28E0")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x8A2948", Offset = "0x8A2948", VA = "0x8A2948", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x2000407")]
	public struct Osub
	{
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x17000256")]
		public SubSegment Segment
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x8A29CC", Offset = "0x8A29CC", VA = "0x8A29CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x8A29D4", Offset = "0x8A29D4", VA = "0x8A29D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x8A2A74", Offset = "0x8A2A74", VA = "0x8A2A74")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x8A2AB4", Offset = "0x8A2AB4", VA = "0x8A2AB4")]
		public void Sym()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x8A2AC8", Offset = "0x8A2AC8", VA = "0x8A2AC8")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x8A2B14", Offset = "0x8A2B14", VA = "0x8A2B14")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x8A2B60", Offset = "0x8A2B60", VA = "0x8A2B60")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x8A2BB4", Offset = "0x8A2BB4", VA = "0x8A2BB4")]
		public void Next()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x8A2C00", Offset = "0x8A2C00", VA = "0x8A2C00")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x8A2C3C", Offset = "0x8A2C3C", VA = "0x8A2C3C")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x8A2C80", Offset = "0x8A2C80", VA = "0x8A2C80")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x8A2CF0", Offset = "0x8A2CF0", VA = "0x8A2CF0")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x8A2D68", Offset = "0x8A2D68", VA = "0x8A2D68")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x8A2DA8", Offset = "0x8A2DA8", VA = "0x8A2DA8")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x8A2DEC", Offset = "0x8A2DEC", VA = "0x8A2DEC")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x8A2E60", Offset = "0x8A2E60", VA = "0x8A2E60")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x8A2ED8", Offset = "0x8A2ED8", VA = "0x8A2ED8")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x8A2F60", Offset = "0x8A2F60", VA = "0x8A2F60")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x8A2F9C", Offset = "0x8A2F9C", VA = "0x8A2F9C")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x8A2FC0", Offset = "0x8A2FC0", VA = "0x8A2FC0")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x8A2FFC", Offset = "0x8A2FFC", VA = "0x8A2FFC")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x8A3030", Offset = "0x8A3030", VA = "0x8A3030")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x2000408")]
	public struct Otri
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x17000257")]
		public Triangle Triangle
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0x8A3084", Offset = "0x8A3084", VA = "0x8A3084")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163D")]
			[Address(RVA = "0x8A308C", Offset = "0x8A308C", VA = "0x8A308C")]
			set
			{
			}
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x8A3094", Offset = "0x8A3094", VA = "0x8A3094", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x8A3134", Offset = "0x8A3134", VA = "0x8A3134")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x8A31B8", Offset = "0x8A31B8", VA = "0x8A31B8")]
		public void Sym()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x8A3200", Offset = "0x8A3200", VA = "0x8A3200")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x8A32A0", Offset = "0x8A32A0", VA = "0x8A32A0")]
		public void Lnext()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x8A3324", Offset = "0x8A3324", VA = "0x8A3324")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x8A33C4", Offset = "0x8A33C4", VA = "0x8A33C4")]
		public void Lprev()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x8A3448", Offset = "0x8A3448", VA = "0x8A3448")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x8A351C", Offset = "0x8A351C", VA = "0x8A351C")]
		public void Onext()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x8A35D4", Offset = "0x8A35D4", VA = "0x8A35D4")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x8A36BC", Offset = "0x8A36BC", VA = "0x8A36BC")]
		public void Oprev()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x8A377C", Offset = "0x8A377C", VA = "0x8A377C")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x8A3864", Offset = "0x8A3864", VA = "0x8A3864")]
		public void Dnext()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x8A3924", Offset = "0x8A3924", VA = "0x8A3924")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x8A39F8", Offset = "0x8A39F8", VA = "0x8A39F8")]
		public void Dprev()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x8A3AB0", Offset = "0x8A3AB0", VA = "0x8A3AB0")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x8A3BCC", Offset = "0x8A3BCC", VA = "0x8A3BCC")]
		public void Rnext()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x8A3CC0", Offset = "0x8A3CC0", VA = "0x8A3CC0")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x8A3DDC", Offset = "0x8A3DDC", VA = "0x8A3DDC")]
		public void Rprev()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x8A3ED0", Offset = "0x8A3ED0", VA = "0x8A3ED0")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x8A3F74", Offset = "0x8A3F74", VA = "0x8A3F74")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x8A4018", Offset = "0x8A4018", VA = "0x8A4018")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x8A4054", Offset = "0x8A4054", VA = "0x8A4054")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x8A408C", Offset = "0x8A408C", VA = "0x8A408C")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x8A40B0", Offset = "0x8A40B0", VA = "0x8A40B0")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x8A4188", Offset = "0x8A4188", VA = "0x8A4188")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x8A4260", Offset = "0x8A4260", VA = "0x8A4260")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x8A42D0", Offset = "0x8A42D0", VA = "0x8A42D0")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x8A43A8", Offset = "0x8A43A8", VA = "0x8A43A8")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x8A4414", Offset = "0x8A4414", VA = "0x8A4414")]
		internal void Infect()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x8A4434", Offset = "0x8A4434", VA = "0x8A4434")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x8A4450", Offset = "0x8A4450", VA = "0x8A4450")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x8A446C", Offset = "0x8A446C", VA = "0x8A446C")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x8A44B8", Offset = "0x8A44B8", VA = "0x8A44B8")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x8A4540", Offset = "0x8A4540", VA = "0x8A4540")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x8A457C", Offset = "0x8A457C", VA = "0x8A457C")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x8A45B0", Offset = "0x8A45B0", VA = "0x8A45B0")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x17000258")]
		public int P0
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x8A47B8", Offset = "0x8A47B8", VA = "0x8A47B8", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000259")]
		public int P1
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x8A47E8", Offset = "0x8A47E8", VA = "0x8A47E8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025A")]
		public int Label
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x8A481C", Offset = "0x8A481C", VA = "0x8A481C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x8A46E8", Offset = "0x8A46E8", VA = "0x8A46E8")]
		public SubSegment()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x8A4824", Offset = "0x8A4824", VA = "0x8A4824", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x8A4854", Offset = "0x8A4854", VA = "0x8A4854", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x8A4894", Offset = "0x8A4894", VA = "0x8A4894", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x8A489C", Offset = "0x8A489C", VA = "0x8A489C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040A")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x1700025B")]
		public int ID
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x8A49EC", Offset = "0x8A49EC", VA = "0x8A49EC", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x8A49F4", Offset = "0x8A49F4", VA = "0x8A49F4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public int Label
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x8A49FC", Offset = "0x8A49FC", VA = "0x8A49FC", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x8A4A04", Offset = "0x8A4A04", VA = "0x8A4A04", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public double Area
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x8A4A0C", Offset = "0x8A4A0C", VA = "0x8A4A0C", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x8A4A14", Offset = "0x8A4A14", VA = "0x8A4A14", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x8A4920", Offset = "0x8A4920", VA = "0x8A4920")]
		public Triangle()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x8A4A1C", Offset = "0x8A4A1C", VA = "0x8A4A1C", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x8A4A4C", Offset = "0x8A4A4C", VA = "0x8A4A4C", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x8A4A84", Offset = "0x8A4A84", VA = "0x8A4A84", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x8A4AC4", Offset = "0x8A4AC4", VA = "0x8A4AC4", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x8A4B10", Offset = "0x8A4B10", VA = "0x8A4B10", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x8A4B50", Offset = "0x8A4B50", VA = "0x8A4B50", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x8A4B58", Offset = "0x8A4B58", VA = "0x8A4B58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x200040B")]
	public class DcelMesh
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Vertex> vertices;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Face> faces;

		[Token(Token = "0x1700025E")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x8A4D20", Offset = "0x8A4D20", VA = "0x8A4D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0x8A4D28", Offset = "0x8A4D28", VA = "0x8A4D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public List<Face> Faces
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x8A4D30", Offset = "0x8A4D30", VA = "0x8A4D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x8A4D38", Offset = "0x8A4D38", VA = "0x8A4D38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x8A4BDC", Offset = "0x8A4BDC", VA = "0x8A4BDC")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x8A4BE4", Offset = "0x8A4BE4", VA = "0x8A4BE4")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x8A4D44", Offset = "0x8A4D44", VA = "0x8A4D44", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x8A53B8", Offset = "0x8A53B8", VA = "0x8A53B8")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x8A58F8", Offset = "0x8A58F8", VA = "0x8A58F8", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x200040C")]
	public class Face
	{
		[Token(Token = "0x200040D")]
		[CompilerGenerated]
		private sealed class <EnumerateEdges>d__18 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Face <>4__this;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x17000265")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6001691")]
				[Address(RVA = "0x8A5F04", Offset = "0x8A5F04", VA = "0x8A5F04", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001693")]
				[Address(RVA = "0x8A5F4C", Offset = "0x8A5F4C", VA = "0x8A5F4C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600168E")]
			[Address(RVA = "0x8A5D8C", Offset = "0x8A5D8C", VA = "0x8A5D8C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600168F")]
			[Address(RVA = "0x8A5E44", Offset = "0x8A5E44", VA = "0x8A5E44", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001690")]
			[Address(RVA = "0x8A5E48", Offset = "0x8A5E48", VA = "0x8A5E48", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001692")]
			[Address(RVA = "0x8A5F0C", Offset = "0x8A5F0C", VA = "0x8A5F0C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001694")]
			[Address(RVA = "0x8A5F54", Offset = "0x8A5F54", VA = "0x8A5F54", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001695")]
			[Address(RVA = "0x8A6000", Offset = "0x8A6000", VA = "0x8A6000", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Face Empty;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Point generator;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HalfEdge edge;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool bounded;

		[Token(Token = "0x17000262")]
		public int ID
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x8A5C54", Offset = "0x8A5C54", VA = "0x8A5C54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x8A5C5C", Offset = "0x8A5C5C", VA = "0x8A5C5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public HalfEdge Edge
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x8A5C64", Offset = "0x8A5C64", VA = "0x8A5C64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x8A5C6C", Offset = "0x8A5C6C", VA = "0x8A5C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool Bounded
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x8A5C74", Offset = "0x8A5C74", VA = "0x8A5C74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x8A5C7C", Offset = "0x8A5C7C", VA = "0x8A5C7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x8A5BBC", Offset = "0x8A5BBC", VA = "0x8A5BBC")]
		static Face()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x8A5C4C", Offset = "0x8A5C4C", VA = "0x8A5C4C")]
		public Face(Point generator)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x8A5C88", Offset = "0x8A5C88", VA = "0x8A5C88")]
		public Face(Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x8A5D08", Offset = "0x8A5D08", VA = "0x8A5D08")]
		[IteratorStateMachine(typeof(<EnumerateEdges>d__18))]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x8A5DC0", Offset = "0x8A5DC0", VA = "0x8A5DC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040E")]
	public class HalfEdge
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vertex origin;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Face face;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HalfEdge twin;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge next;

		[Token(Token = "0x17000267")]
		public int ID
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x8A6004", Offset = "0x8A6004", VA = "0x8A6004")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x8A600C", Offset = "0x8A600C", VA = "0x8A600C")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public int Boundary
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0x8A6014", Offset = "0x8A6014", VA = "0x8A6014")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x8A601C", Offset = "0x8A601C", VA = "0x8A601C")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Vertex Origin
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x8A6024", Offset = "0x8A6024", VA = "0x8A6024")]
			get
			{
				return null;
			}
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x8A602C", Offset = "0x8A602C", VA = "0x8A602C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public Face Face
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x8A6034", Offset = "0x8A6034", VA = "0x8A6034")]
			get
			{
				return null;
			}
			[Token(Token = "0x600169D")]
			[Address(RVA = "0x8A603C", Offset = "0x8A603C", VA = "0x8A603C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public HalfEdge Twin
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x8A6044", Offset = "0x8A6044", VA = "0x8A6044")]
			get
			{
				return null;
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x8A604C", Offset = "0x8A604C", VA = "0x8A604C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public HalfEdge Next
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x8A6054", Offset = "0x8A6054", VA = "0x8A6054")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x8A605C", Offset = "0x8A605C", VA = "0x8A605C")]
			set
			{
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x8A6064", Offset = "0x8A6064", VA = "0x8A6064")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x8A588C", Offset = "0x8A588C", VA = "0x8A588C")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x8A6094", Offset = "0x8A6094", VA = "0x8A6094", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040F")]
	public class Vertex : Point
	{
		[Token(Token = "0x2000410")]
		[CompilerGenerated]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vertex <>4__this;

			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x1700026E")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x60016AE")]
				[Address(RVA = "0x8A638C", Offset = "0x8A638C", VA = "0x8A638C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B0")]
				[Address(RVA = "0x8A63D4", Offset = "0x8A63D4", VA = "0x8A63D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x8A620C", Offset = "0x8A620C", VA = "0x8A620C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x8A62C4", Offset = "0x8A62C4", VA = "0x8A62C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x8A62C8", Offset = "0x8A62C8", VA = "0x8A62C8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x8A6394", Offset = "0x8A6394", VA = "0x8A6394", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x8A63DC", Offset = "0x8A63DC", VA = "0x8A63DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x8A6488", Offset = "0x8A6488", VA = "0x8A6488", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge leaving;

		[Token(Token = "0x1700026D")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x8A6140", Offset = "0x8A6140", VA = "0x8A6140")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x8A6148", Offset = "0x8A6148", VA = "0x8A6148")]
			set
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x8A6150", Offset = "0x8A6150", VA = "0x8A6150")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x8A6158", Offset = "0x8A6158", VA = "0x8A6158")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x8A6188", Offset = "0x8A6188", VA = "0x8A6188")]
		[IteratorStateMachine(typeof(<EnumerateEdges>d__6))]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x8A6240", Offset = "0x8A6240", VA = "0x8A6240", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x2000411")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nnz;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] pcol;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] irow;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int N;

		[Token(Token = "0x17000270")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x8A648C", Offset = "0x8A648C", VA = "0x8A648C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public int[] RowIndices
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x8A6494", Offset = "0x8A6494", VA = "0x8A6494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x8A649C", Offset = "0x8A649C", VA = "0x8A649C")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x8A7168", Offset = "0x8A7168", VA = "0x8A7168")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x8A7284", Offset = "0x8A7284", VA = "0x8A7284")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x8A6570", Offset = "0x8A6570", VA = "0x8A6570")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x8A6ADC", Offset = "0x8A6ADC", VA = "0x8A6ADC")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x8A70C0", Offset = "0x8A70C0", VA = "0x8A70C0")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class CuthillMcKee
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x8A73C8", Offset = "0x8A73C8", VA = "0x8A73C8")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x8A7444", Offset = "0x8A7444", VA = "0x8A7444")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x8A772C", Offset = "0x8A772C", VA = "0x8A772C")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x8A7CEC", Offset = "0x8A7CEC", VA = "0x8A7CEC")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x8A7AF8", Offset = "0x8A7AF8", VA = "0x8A7AF8")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x8A82D0", Offset = "0x8A82D0", VA = "0x8A82D0")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x8A7FA0", Offset = "0x8A7FA0", VA = "0x8A7FA0")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x8A794C", Offset = "0x8A794C", VA = "0x8A794C")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x8A78A0", Offset = "0x8A78A0", VA = "0x8A78A0")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x8A824C", Offset = "0x8A824C", VA = "0x8A824C")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x8A76CC", Offset = "0x8A76CC", VA = "0x8A76CC")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x8A84B4", Offset = "0x8A84B4", VA = "0x8A84B4")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public static class Interpolation
	{
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x8A84BC", Offset = "0x8A84BC", VA = "0x8A84BC")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x2000414")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x8A86D0", Offset = "0x8A86D0", VA = "0x8A86D0")]
		public static void IntersectSegments(Point p0, Point p1, Point q0, Point q1, ref Point c0)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x8A8748", Offset = "0x8A8748", VA = "0x8A8748")]
		public static bool LiangBarsky(Rectangle rect, Point p0, Point p1, ref Point c0, ref Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x8A8890", Offset = "0x8A8890", VA = "0x8A8890")]
		public static bool BoxRayIntersection(Rectangle rect, Point p0, Point p1, ref Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000415")]
	public static class PolygonValidator
	{
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x8A89AC", Offset = "0x8A89AC", VA = "0x8A89AC")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x8A9DA8", Offset = "0x8A9DA8", VA = "0x8A9DA8")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x8AA0AC", Offset = "0x8AA0AC", VA = "0x8AA0AC")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x8AA5F4", Offset = "0x8AA5F4", VA = "0x8AA5F4")]
		private static bool IsBadAngle(Point a, Point b, Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x8AA6A8", Offset = "0x8AA6A8", VA = "0x8AA6A8")]
		private static double DotProduct(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x8AA6EC", Offset = "0x8AA6EC", VA = "0x8AA6EC")]
		private static double CrossProductLength(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x8A9520", Offset = "0x8A9520", VA = "0x8A9520")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x8A9A40", Offset = "0x8A9A40", VA = "0x8A9A40")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000416")]
	public class QualityMeasure
	{
		[Token(Token = "0x2000417")]
		private class AreaMeasure
		{
			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double area_min;

			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double area_max;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double area_total;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int area_zero;

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x8AA9F0", Offset = "0x8AA9F0", VA = "0x8AA9F0")]
			public void Reset()
			{
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x8AAEEC", Offset = "0x8AAEEC", VA = "0x8AAEEC")]
			public double Measure(Point a, Point b, Point c)
			{
				return default(double);
			}

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x8AA828", Offset = "0x8AA828", VA = "0x8AA828")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x2000418")]
		private class AlphaMeasure
		{
			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double alpha_min;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double alpha_max;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double alpha_ave;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double alpha_area;

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x8AAA08", Offset = "0x8AAA08", VA = "0x8AAA08")]
			public void Reset()
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x8AB718", Offset = "0x8AB718", VA = "0x8AB718")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x8AB000", Offset = "0x8AB000", VA = "0x8AB000")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x8AB2E0", Offset = "0x8AB2E0", VA = "0x8AB2E0")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x8AA83C", Offset = "0x8AA83C", VA = "0x8AA83C")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x2000419")]
		private class Q_Measure
		{
			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double q_min;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double q_max;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double q_ave;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double q_area;

			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x8AAA1C", Offset = "0x8AAA1C", VA = "0x8AAA1C")]
			public void Reset()
			{
			}

			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x8AB1F4", Offset = "0x8AB1F4", VA = "0x8AB1F4")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x8AB318", Offset = "0x8AB318", VA = "0x8AB318")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x8AA844", Offset = "0x8AA844", VA = "0x8AA844")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Q_Measure qMeasure;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x17000272")]
		public double AreaMinimum
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x8AA84C", Offset = "0x8AA84C", VA = "0x8AA84C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000273")]
		public double AreaMaximum
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x8AA868", Offset = "0x8AA868", VA = "0x8AA868")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000274")]
		public double AreaRatio
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x8AA884", Offset = "0x8AA884", VA = "0x8AA884")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000275")]
		public double AlphaMinimum
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x8AA8A4", Offset = "0x8AA8A4", VA = "0x8AA8A4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000276")]
		public double AlphaMaximum
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x8AA8C0", Offset = "0x8AA8C0", VA = "0x8AA8C0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000277")]
		public double AlphaAverage
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x8AA8DC", Offset = "0x8AA8DC", VA = "0x8AA8DC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000278")]
		public double AlphaArea
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x8AA8F8", Offset = "0x8AA8F8", VA = "0x8AA8F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000279")]
		public double Q_Minimum
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x8AA914", Offset = "0x8AA914", VA = "0x8AA914")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700027A")]
		public double Q_Maximum
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x8AA930", Offset = "0x8AA930", VA = "0x8AA930")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700027B")]
		public double Q_Average
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x8AA94C", Offset = "0x8AA94C", VA = "0x8AA94C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700027C")]
		public double Q_Area
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x8AA968", Offset = "0x8AA968", VA = "0x8AA968")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x8AA730", Offset = "0x8AA730", VA = "0x8AA730")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x8AA984", Offset = "0x8AA984", VA = "0x8AA984")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x8AAA30", Offset = "0x8AAA30", VA = "0x8AAA30")]
		private void Compute()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x8AB350", Offset = "0x8AB350", VA = "0x8AB350")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200041A")]
	public class Statistic
	{
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double minEdge;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double maxEdge;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double minAspect;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double maxAspect;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double minArea;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double minAngle;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double maxAngle;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] angleTable;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] minAngles;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] maxAngles;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x1700027D")]
		public double ShortestEdge
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x8AB79C", Offset = "0x8AB79C", VA = "0x8AB79C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700027E")]
		public double LongestEdge
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x8AB7A4", Offset = "0x8AB7A4", VA = "0x8AB7A4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700027F")]
		public double ShortestAltitude
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x8AB7AC", Offset = "0x8AB7AC", VA = "0x8AB7AC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000280")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x8AB7B4", Offset = "0x8AB7B4", VA = "0x8AB7B4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000281")]
		public double SmallestArea
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x8AB7BC", Offset = "0x8AB7BC", VA = "0x8AB7BC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000282")]
		public double LargestArea
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x8AB7C4", Offset = "0x8AB7C4", VA = "0x8AB7C4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000283")]
		public double SmallestAngle
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x8AB7CC", Offset = "0x8AB7CC", VA = "0x8AB7CC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000284")]
		public double LargestAngle
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x8AB7D4", Offset = "0x8AB7D4", VA = "0x8AB7D4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000285")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x8AB7DC", Offset = "0x8AB7DC", VA = "0x8AB7DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x8AB7E4", Offset = "0x8AB7E4", VA = "0x8AB7E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x8AB7EC", Offset = "0x8AB7EC", VA = "0x8AB7EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x8AB7F4", Offset = "0x8AB7F4", VA = "0x8AB7F4")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x8ABF74", Offset = "0x8ABF74", VA = "0x8ABF74")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x8ACCE4", Offset = "0x8ACCE4", VA = "0x8ACCE4")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x200041C")]
		private class QuadNode
		{
			[Token(Token = "0x400165B")]
			private const int SW = 0;

			[Token(Token = "0x400165C")]
			private const int SE = 1;

			[Token(Token = "0x400165D")]
			private const int NW = 2;

			[Token(Token = "0x400165E")]
			private const int NE = 3;

			[Token(Token = "0x400165F")]
			private const double EPS = 1E-06;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rectangle bounds;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Point pivot;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleQuadTree tree;

			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuadNode[] regions;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> triangles;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte bitRegions;

			[Token(Token = "0x6001701")]
			[Address(RVA = "0x8ADDE8", Offset = "0x8ADDE8", VA = "0x8ADDE8")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x6001702")]
			[Address(RVA = "0x8ACEBC", Offset = "0x8ACEBC", VA = "0x8ACEBC")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x6001703")]
			[Address(RVA = "0x8ADBD0", Offset = "0x8ADBD0", VA = "0x8ADBD0")]
			public List<int> FindTriangles(Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x8AD148", Offset = "0x8AD148", VA = "0x8AD148")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0x8ADE28", Offset = "0x8ADE28", VA = "0x8ADE28")]
			private void AddTriangleToRegion(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x8AE128", Offset = "0x8AE128", VA = "0x8AE128")]
			private void FindTriangleIntersections(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6001707")]
			[Address(RVA = "0x8AE204", Offset = "0x8AE204", VA = "0x8AE204")]
			private void FindIntersectionsWithX(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0x8AE460", Offset = "0x8AE460", VA = "0x8AE460")]
			private void FindIntersectionsWithY(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001709")]
			[Address(RVA = "0x8ADDF0", Offset = "0x8ADDF0", VA = "0x8ADDF0")]
			private int FindRegion(Point point)
			{
				return default(int);
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0x8ADFB0", Offset = "0x8ADFB0", VA = "0x8ADFB0")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuadNode root;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ITriangle[] triangles;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int sizeBound;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int maxDepth;

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x8ACDE0", Offset = "0x8ACDE0", VA = "0x8ACDE0")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x8AD888", Offset = "0x8AD888", VA = "0x8AD888")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x8ADC20", Offset = "0x8ADC20", VA = "0x8ADC20")]
		internal static bool IsPointInTriangle(Point p, Point t0, Point t1, Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x8ADDC0", Offset = "0x8ADDC0", VA = "0x8ADDC0")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200041D")]
	public class VertexSorter
	{
		[Token(Token = "0x4001667")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x8AE75C", Offset = "0x8AE75C", VA = "0x8AE75C")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x8AA02C", Offset = "0x8AA02C", VA = "0x8AA02C")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x8AEB2C", Offset = "0x8AEB2C", VA = "0x8AEB2C")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x8AE7F4", Offset = "0x8AE7F4", VA = "0x8AE7F4")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x8AEBE8", Offset = "0x8AEBE8", VA = "0x8AEBE8")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x8AECA0", Offset = "0x8AECA0", VA = "0x8AECA0")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x8AEFB0", Offset = "0x8AEFB0", VA = "0x8AEFB0")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x200041E")]
	public interface ISmoother
	{
		[Token(Token = "0x6001713")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x6001714")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x200041F")]
	public class SimpleSmoother : ISmoother
	{
		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrianglePool pool;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Configuration config;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVoronoiFactory factory;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConstraintOptions options;

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x8AF2C0", Offset = "0x8AF2C0", VA = "0x8AF2C0")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x8AF454", Offset = "0x8AF454", VA = "0x8AF454")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x8AF664", Offset = "0x8AF664", VA = "0x8AF664")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x8AF710", Offset = "0x8AF710", VA = "0x8AF710", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x8AF718", Offset = "0x8AF718", VA = "0x8AF718", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x8AF970", Offset = "0x8AF970", VA = "0x8AF970")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x8AFF74", Offset = "0x8AFF74", VA = "0x8AFF74")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x8AFB48", Offset = "0x8AFB48", VA = "0x8AFB48")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000421")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x2000422")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x17000288")]
			public int Count
			{
				[Token(Token = "0x6001728")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000289")]
			public int Capacity
			{
				[Token(Token = "0x6001729")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600172A")]
				set
				{
				}
			}

			[Token(Token = "0x600172B")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x600172C")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x600172D")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600172E")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x600172F")]
			public void Release()
			{
			}

			[Token(Token = "0x6001730")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x8AF320", Offset = "0x8AF320", VA = "0x8AF320")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x8B0110", Offset = "0x8B0110", VA = "0x8B0110", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x8B03CC", Offset = "0x8B03CC", VA = "0x8B03CC", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x8B0464", Offset = "0x8B0464", VA = "0x8B0464", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x8B0550", Offset = "0x8B0550", VA = "0x8B0550", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x8B0690", Offset = "0x8B0690", VA = "0x8B0690", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x2000423")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Triangle> viri;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x8B0794", Offset = "0x8B0794", VA = "0x8B0794")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x8B08F8", Offset = "0x8B08F8", VA = "0x8B08F8")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x8B1450", Offset = "0x8B1450", VA = "0x8B1450")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x8B0C68", Offset = "0x8B0C68", VA = "0x8B0C68")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x8B1C90", Offset = "0x8B1C90", VA = "0x8B1C90")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x8B1E88", Offset = "0x8B1E88", VA = "0x8B1E88")]
		private void Plague()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x8B2780", Offset = "0x8B2780", VA = "0x8B2780")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x8B2B7C", Offset = "0x8B2B7C", VA = "0x8B2B7C")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x8B2F68", Offset = "0x8B2F68", VA = "0x8B2F68")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x8B3120", Offset = "0x8B3120", VA = "0x8B3120")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x8B341C", Offset = "0x8B341C", VA = "0x8B341C")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x8B2420", Offset = "0x8B2420", VA = "0x8B2420")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x8B26A4", Offset = "0x8B26A4", VA = "0x8B26A4")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class ConstraintOptions
	{
		[Token(Token = "0x1700028A")]
		[Obsolete("Not used anywhere, will be removed in beta 4.")]
		public bool UseRegions
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x8B36B8", Offset = "0x8B36B8", VA = "0x8B36B8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x8B36C0", Offset = "0x8B36C0", VA = "0x8B36C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x8B36CC", Offset = "0x8B36CC", VA = "0x8B36CC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x8B36D4", Offset = "0x8B36D4", VA = "0x8B36D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public bool Convex
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x8B36E0", Offset = "0x8B36E0", VA = "0x8B36E0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x8B36E8", Offset = "0x8B36E8", VA = "0x8B36E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public int SegmentSplitting
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x8B36F4", Offset = "0x8B36F4", VA = "0x8B36F4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x8B36FC", Offset = "0x8B36FC", VA = "0x8B36FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x8AF65C", Offset = "0x8AF65C", VA = "0x8AF65C")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public static class Converter
	{
		[Token(Token = "0x6001747")]
		[Address(RVA = "0x8B3704", Offset = "0x8B3704", VA = "0x8B3704")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x8B3764", Offset = "0x8B3764", VA = "0x8B3764")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x8B3960", Offset = "0x8B3960", VA = "0x8B3960")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x8B44E8", Offset = "0x8B44E8", VA = "0x8B44E8")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x8B4E58", Offset = "0x8B4E58", VA = "0x8B4E58")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000426")]
	public class GenericMesher
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x8B6004", Offset = "0x8B6004", VA = "0x8B6004")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x8B60F4", Offset = "0x8B60F4", VA = "0x8B60F4")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x8B6168", Offset = "0x8B6168", VA = "0x8B6168")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x8B60B0", Offset = "0x8B60B0", VA = "0x8B60B0")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x8B61E4", Offset = "0x8B61E4", VA = "0x8B61E4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x8B6294", Offset = "0x8B6294", VA = "0x8B6294")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x8B64E0", Offset = "0x8B64E0", VA = "0x8B64E0")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x8B64E8", Offset = "0x8B64E8", VA = "0x8B64E8")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x8B62A0", Offset = "0x8B62A0", VA = "0x8B62A0")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x8B687C", Offset = "0x8B687C", VA = "0x8B687C")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x8B6988", Offset = "0x8B6988", VA = "0x8B6988")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x6001757")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x6001758")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x2000428")]
	public interface IMesh
	{
		[Token(Token = "0x1700028E")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x6001759")]
			get;
		}

		[Token(Token = "0x1700028F")]
		IEnumerable<Edge> Edges
		{
			[Token(Token = "0x600175A")]
			get;
		}

		[Token(Token = "0x17000290")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x600175B")]
			get;
		}

		[Token(Token = "0x17000291")]
		ICollection<Triangle> Triangles
		{
			[Token(Token = "0x600175C")]
			get;
		}

		[Token(Token = "0x17000292")]
		IList<Point> Holes
		{
			[Token(Token = "0x600175D")]
			get;
		}

		[Token(Token = "0x17000293")]
		Rectangle Bounds
		{
			[Token(Token = "0x600175E")]
			get;
		}

		[Token(Token = "0x600175F")]
		void Renumber();

		[Token(Token = "0x6001760")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x2000429")]
	public interface IQualityMesher
	{
		[Token(Token = "0x6001761")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x6001762")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x200042A")]
	public interface ITriangulator
	{
		[Token(Token = "0x6001763")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x200042B")]
	internal class QualityMesher
	{
		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Triangle newvertex_tri;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x8B64F4", Offset = "0x8B64F4", VA = "0x8B64F4")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x8B6708", Offset = "0x8B6708", VA = "0x8B6708")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x8B753C", Offset = "0x8B753C", VA = "0x8B753C")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x8B7594", Offset = "0x8B7594", VA = "0x8B7594")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8B789C", Offset = "0x8B789C", VA = "0x8B789C")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x8B7E98", Offset = "0x8B7E98", VA = "0x8B7E98")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x8B8018", Offset = "0x8B8018", VA = "0x8B8018")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x8B8888", Offset = "0x8B8888", VA = "0x8B8888")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x8B8B18", Offset = "0x8B8B18", VA = "0x8B8B18")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x8B72EC", Offset = "0x8B72EC", VA = "0x8B72EC")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class QualityOptions
	{
		[Token(Token = "0x17000294")]
		public double MaximumAngle
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x8B9424", Offset = "0x8B9424", VA = "0x8B9424")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x8B942C", Offset = "0x8B942C", VA = "0x8B942C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public double MinimumAngle
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x8B9434", Offset = "0x8B9434", VA = "0x8B9434")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x8B943C", Offset = "0x8B943C", VA = "0x8B943C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public double MaximumArea
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x8B9444", Offset = "0x8B9444", VA = "0x8B9444")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x8B944C", Offset = "0x8B944C", VA = "0x8B944C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x8B9454", Offset = "0x8B9454", VA = "0x8B9454")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x8B945C", Offset = "0x8B945C", VA = "0x8B945C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public bool VariableArea
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x8B9464", Offset = "0x8B9464", VA = "0x8B9464")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x8B946C", Offset = "0x8B946C", VA = "0x8B946C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public int SteinerPoints
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x8B9478", Offset = "0x8B9478", VA = "0x8B9478")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x8B9480", Offset = "0x8B9480", VA = "0x8B9480")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x8B9488", Offset = "0x8B9488", VA = "0x8B9488")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x200042D")]
	public class EdgeIterator : IEnumerator<Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Triangle> triangles;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Otri tri;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Otri neighbor;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Osub sub;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Edge current;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x1700029A")]
		public Edge Current
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x8B95F8", Offset = "0x8B95F8", VA = "0x8B95F8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x8B96A0", Offset = "0x8B96A0", VA = "0x8B96A0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x8B9490", Offset = "0x8B9490", VA = "0x8B9490")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x8B9600", Offset = "0x8B9600", VA = "0x8B9600", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x8B96A8", Offset = "0x8B96A8", VA = "0x8B96A8", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x8B9980", Offset = "0x8B9980", VA = "0x8B9980", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class RegionIterator
	{
		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Triangle> region;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x8B9A24", Offset = "0x8B9A24", VA = "0x8B9A24")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x8B9AAC", Offset = "0x8B9AAC", VA = "0x8B9AAC")]
		public void Process(Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x8B9B98", Offset = "0x8B9B98", VA = "0x8B9B98")]
		public void Process(Triangle triangle, Action<Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x8B9E24", Offset = "0x8B9E24", VA = "0x8B9E24")]
		private void ProcessRegion(Action<Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class VertexCirculator
	{
		[Token(Token = "0x2000433")]
		[CompilerGenerated]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400169E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700029C")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x6001794")]
				[Address(RVA = "0x8BA910", Offset = "0x8BA910", VA = "0x8BA910", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0x8BA958", Offset = "0x8BA958", VA = "0x8BA958", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001790")]
			[Address(RVA = "0x8BA354", Offset = "0x8BA354", VA = "0x8BA354")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001791")]
			[Address(RVA = "0x8BA6DC", Offset = "0x8BA6DC", VA = "0x8BA6DC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001792")]
			[Address(RVA = "0x8BA6F8", Offset = "0x8BA6F8", VA = "0x8BA6F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001793")]
			[Address(RVA = "0x8BA8C0", Offset = "0x8BA8C0", VA = "0x8BA8C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001795")]
			[Address(RVA = "0x8BA918", Offset = "0x8BA918", VA = "0x8BA918", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001797")]
			[Address(RVA = "0x8BA960", Offset = "0x8BA960", VA = "0x8BA960", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001798")]
			[Address(RVA = "0x8BAA1C", Offset = "0x8BAA1C", VA = "0x8BAA1C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000434")]
		[CompilerGenerated]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ITriangle <>2__current;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700029E")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x600179D")]
				[Address(RVA = "0x8BAC38", Offset = "0x8BAC38", VA = "0x8BAC38", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600179F")]
				[Address(RVA = "0x8BAC80", Offset = "0x8BAC80", VA = "0x8BAC80", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001799")]
			[Address(RVA = "0x8BA428", Offset = "0x8BA428", VA = "0x8BA428")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600179A")]
			[Address(RVA = "0x8BAA20", Offset = "0x8BAA20", VA = "0x8BAA20", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600179B")]
			[Address(RVA = "0x8BAA3C", Offset = "0x8BAA3C", VA = "0x8BAA3C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600179C")]
			[Address(RVA = "0x8BABE8", Offset = "0x8BABE8", VA = "0x8BABE8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600179E")]
			[Address(RVA = "0x8BAC40", Offset = "0x8BAC40", VA = "0x8BAC40", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x8BAC88", Offset = "0x8BAC88", VA = "0x8BAC88", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x8BAD44", Offset = "0x8BAD44", VA = "0x8BAD44", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Otri> cache;

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x8BA210", Offset = "0x8BA210", VA = "0x8BA210")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x8BA2B4", Offset = "0x8BA2B4", VA = "0x8BA2B4")]
		[IteratorStateMachine(typeof(<EnumerateVertices>d__2))]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x8BA388", Offset = "0x8BA388", VA = "0x8BA388")]
		[IteratorStateMachine(typeof(<EnumerateTriangles>d__3))]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x8BA45C", Offset = "0x8BA45C", VA = "0x8BA45C")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x2000435")]
	internal class BadSubseg
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x8BAD48", Offset = "0x8BAD48", VA = "0x8BAD48", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x8BAD64", Offset = "0x8BAD64", VA = "0x8BAD64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x8B7894", Offset = "0x8B7894", VA = "0x8B7894")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x2000436")]
	internal class BadTriangle
	{
		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x8BADEC", Offset = "0x8BADEC", VA = "0x8BADEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x8BAE74", Offset = "0x8BAE74", VA = "0x8BAE74")]
		public BadTriangle()
		{
		}
	}
	[Token(Token = "0x2000437")]
	internal class BadTriQueue
	{
		[Token(Token = "0x40016B5")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x170002A0")]
		public int Count
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x8BAE7C", Offset = "0x8BAE7C", VA = "0x8BAE7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x8B7228", Offset = "0x8B7228", VA = "0x8B7228")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x8B91FC", Offset = "0x8B91FC", VA = "0x8B91FC")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x8B7DC0", Offset = "0x8B7DC0", VA = "0x8B7DC0")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x8B9100", Offset = "0x8B9100", VA = "0x8B9100")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x2000438")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x8BAE84", Offset = "0x8BAE84", VA = "0x8BAE84", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x8BC040", Offset = "0x8BC040", VA = "0x8BC040")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x8BB628", Offset = "0x8BB628", VA = "0x8BB628")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x8BBECC", Offset = "0x8BBECC", VA = "0x8BBECC")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x8B60A0", Offset = "0x8B60A0", VA = "0x8B60A0")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x8BCE18", Offset = "0x8BCE18", VA = "0x8BCE18", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x8BD234", Offset = "0x8BD234", VA = "0x8BD234")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x8BD468", Offset = "0x8BD468", VA = "0x8BD468")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x8BD6B4", Offset = "0x8BD6B4", VA = "0x8BD6B4")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x200043B")]
		private class SweepEvent
		{
			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double xkey;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double ykey;

			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Otri otriEvent;

			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int heapposition;

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x8BEF30", Offset = "0x8BEF30", VA = "0x8BEF30")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x200043C")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SweepEvent evt;

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x8BF1B0", Offset = "0x8BF1B0", VA = "0x8BF1B0")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x200043D")]
		private class SplayNode
		{
			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Otri keyedge;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplayNode lchild;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplayNode rchild;

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x8BF994", Offset = "0x8BF994", VA = "0x8BF994")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int SAMPLERATE;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xminextreme;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x8BD6BC", Offset = "0x8BD6BC", VA = "0x8BD6BC")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x8BD75C", Offset = "0x8BD75C", VA = "0x8BD75C", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x8BF074", Offset = "0x8BF074", VA = "0x8BF074")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x8BF34C", Offset = "0x8BF34C", VA = "0x8BF34C")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x8BE8C8", Offset = "0x8BE8C8", VA = "0x8BE8C8")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x8BE694", Offset = "0x8BE694", VA = "0x8BE694")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x8BF524", Offset = "0x8BF524", VA = "0x8BF524")]
		private SplayNode Splay(SplayNode splaytree, Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x8BED7C", Offset = "0x8BED7C", VA = "0x8BED7C")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x8BECD4", Offset = "0x8BECD4", VA = "0x8BECD4")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x8BEB20", Offset = "0x8BEB20", VA = "0x8BEB20")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x8BF85C", Offset = "0x8BF85C", VA = "0x8BF85C")]
		private bool RightOfHyperbola(ref Otri fronttri, Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x8BEF38", Offset = "0x8BEF38", VA = "0x8BEF38")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x8BEA28", Offset = "0x8BEA28", VA = "0x8BEA28")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x8BF1E0", Offset = "0x8BF1E0", VA = "0x8BF1E0")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x8BF99C", Offset = "0x8BF99C", VA = "0x8BF99C")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x200043E")]
	public enum LogLevel
	{
		[Token(Token = "0x40016D1")]
		Info,
		[Token(Token = "0x40016D2")]
		Warning,
		[Token(Token = "0x40016D3")]
		Error
	}
	[Token(Token = "0x200043F")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x170002A1")]
		IList<T> Data
		{
			[Token(Token = "0x60017CD")]
			get;
		}

		[Token(Token = "0x170002A2")]
		LogLevel Level
		{
			[Token(Token = "0x60017CE")]
			get;
		}

		[Token(Token = "0x60017C8")]
		void Add(T item);

		[Token(Token = "0x60017C9")]
		void Clear();

		[Token(Token = "0x60017CA")]
		void Info(string message);

		[Token(Token = "0x60017CB")]
		void Error(string message, string info);

		[Token(Token = "0x60017CC")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x2000440")]
	public interface ILogItem
	{
		[Token(Token = "0x170002A3")]
		DateTime Time
		{
			[Token(Token = "0x60017CF")]
			get;
		}

		[Token(Token = "0x170002A4")]
		LogLevel Level
		{
			[Token(Token = "0x60017D0")]
			get;
		}

		[Token(Token = "0x170002A5")]
		string Message
		{
			[Token(Token = "0x60017D1")]
			get;
		}

		[Token(Token = "0x170002A6")]
		string Info
		{
			[Token(Token = "0x60017D2")]
			get;
		}
	}
	[Token(Token = "0x2000441")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x170002A7")]
		public DateTime Time
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x8BF9F4", Offset = "0x8BF9F4", VA = "0x8BF9F4", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170002A8")]
		public LogLevel Level
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x8BF9FC", Offset = "0x8BF9FC", VA = "0x8BF9FC", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x170002A9")]
		public string Message
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x8BFA04", Offset = "0x8BFA04", VA = "0x8BFA04", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public string Info
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x8BFA0C", Offset = "0x8BFA0C", VA = "0x8BFA0C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x8BFA14", Offset = "0x8BFA14", VA = "0x8BFA14")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x8BFA74", Offset = "0x8BFA74", VA = "0x8BFA74")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x2000442")]
	internal class DebugWriter
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int iteration;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string session;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter stream;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string tmpFile;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] vertices;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int triangles;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x170002AB")]
		public static DebugWriter Session
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x8BFBE4", Offset = "0x8BFBE4", VA = "0x8BFBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x8BFB18", Offset = "0x8BFB18", VA = "0x8BFB18")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x8BFBDC", Offset = "0x8BFBDC", VA = "0x8BFBDC")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x8BFC3C", Offset = "0x8BFC3C", VA = "0x8BFC3C")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x8BFD58", Offset = "0x8BFD58", VA = "0x8BFD58")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x8C0D7C", Offset = "0x8C0D7C", VA = "0x8C0D7C")]
		public void Finish()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x8C0DD4", Offset = "0x8C0DD4", VA = "0x8C0DD4")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x8C1200", Offset = "0x8C1200", VA = "0x8C1200")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x8BFE24", Offset = "0x8BFE24", VA = "0x8BFE24")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x8C12A0", Offset = "0x8C12A0", VA = "0x8C12A0")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x8C16A0", Offset = "0x8C16A0", VA = "0x8C16A0")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000443")]
	public static class FileProcessor
	{
		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x8C1B04", Offset = "0x8C1B04", VA = "0x8C1B04")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x8C1C58", Offset = "0x8C1C58", VA = "0x8C1C58")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x8C1D30", Offset = "0x8C1D30", VA = "0x8C1D30")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x8C1F30", Offset = "0x8C1F30", VA = "0x8C1F30")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x8C2224", Offset = "0x8C2224", VA = "0x8C2224")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x8C251C", Offset = "0x8C251C", VA = "0x8C251C")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x8C2810", Offset = "0x8C2810", VA = "0x8C2810")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x2000444")]
	public interface IFileFormat
	{
		[Token(Token = "0x60017EB")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x2000445")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x60017EC")]
		IMesh Import(string filename);

		[Token(Token = "0x60017ED")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x60017EE")]
		void Write(IMesh mesh, Stream stream);
	}
	[Token(Token = "0x2000446")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] vertices;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int label;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x170002AC")]
		public int ID
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x8C2B08", Offset = "0x8C2B08", VA = "0x8C2B08", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x8C2B10", Offset = "0x8C2B10", VA = "0x8C2B10", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public int Label
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x8C2B14", Offset = "0x8C2B14", VA = "0x8C2B14", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x8C2B1C", Offset = "0x8C2B1C", VA = "0x8C2B1C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public double Area
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x8C2B24", Offset = "0x8C2B24", VA = "0x8C2B24", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x8C2B2C", Offset = "0x8C2B2C", VA = "0x8C2B2C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x8B7178", Offset = "0x8B7178", VA = "0x8B7178")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x8C2B34", Offset = "0x8C2B34", VA = "0x8C2B34", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x8C2B3C", Offset = "0x8C2B3C", VA = "0x8C2B3C", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x8C2B6C", Offset = "0x8C2B6C", VA = "0x8C2B6C", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x8C2B74", Offset = "0x8C2B74", VA = "0x8C2B74", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x8C2B7C", Offset = "0x8C2B7C", VA = "0x8C2B7C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000447")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x60017FB")]
		IPolygon Read(string filename);

		[Token(Token = "0x60017FC")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x60017FD")]
		void Write(IPolygon polygon, Stream stream);
	}
	[Token(Token = "0x2000448")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x8C2B84", Offset = "0x8C2B84", VA = "0x8C2B84", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x8C2C70", Offset = "0x8C2C70", VA = "0x8C2C70", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x8C2F44", Offset = "0x8C2F44", VA = "0x8C2F44", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x8C3838", Offset = "0x8C3838", VA = "0x8C3838", Slot = "10")]
		public void Write(IMesh mesh, Stream stream)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x8C3878", Offset = "0x8C3878", VA = "0x8C3878", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x8C3A1C", Offset = "0x8C3A1C", VA = "0x8C3A1C", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x8C4D7C", Offset = "0x8C4D7C", VA = "0x8C4D7C", Slot = "6")]
		public void Write(IPolygon polygon, Stream stream)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x8C1C50", Offset = "0x8C1C50", VA = "0x8C1C50")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class TriangleReader
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int startIndex;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x8C4DBC", Offset = "0x8C4DBC", VA = "0x8C4DBC")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x8C4DE0", Offset = "0x8C4DE0", VA = "0x8C4DE0")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x8C4F70", Offset = "0x8C4F70", VA = "0x8C4F70")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x8C512C", Offset = "0x8C512C", VA = "0x8C512C")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x8C2E4C", Offset = "0x8C2E4C", VA = "0x8C2E4C")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x8C5240", Offset = "0x8C5240", VA = "0x8C5240")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x8C3A08", Offset = "0x8C3A08", VA = "0x8C3A08")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x8C525C", Offset = "0x8C525C", VA = "0x8C525C")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x8C3A10", Offset = "0x8C3A10", VA = "0x8C3A10")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x8C72C4", Offset = "0x8C72C4", VA = "0x8C72C4")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x8C5F64", Offset = "0x8C5F64", VA = "0x8C5F64")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x8C5238", Offset = "0x8C5238", VA = "0x8C5238")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x8C5818", Offset = "0x8C5818", VA = "0x8C5818")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x8C72D0", Offset = "0x8C72D0", VA = "0x8C72D0")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x8C77CC", Offset = "0x8C77CC", VA = "0x8C77CC")]
		public List<Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x8C2E44", Offset = "0x8C2E44", VA = "0x8C2E44")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class TriangleWriter
	{
		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x8C8060", Offset = "0x8C8060", VA = "0x8C8060")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x8C8124", Offset = "0x8C8124", VA = "0x8C8124")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x8C82BC", Offset = "0x8C82BC", VA = "0x8C82BC")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x8C8740", Offset = "0x8C8740", VA = "0x8C8740")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x8C30C0", Offset = "0x8C30C0", VA = "0x8C30C0")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x8C3A90", Offset = "0x8C3A90", VA = "0x8C3A90")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x8C30B8", Offset = "0x8C30B8", VA = "0x8C30B8")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x8C8BA4", Offset = "0x8C8BA4", VA = "0x8C8BA4")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x8C992C", Offset = "0x8C992C", VA = "0x8C992C")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x8CA568", Offset = "0x8CA568", VA = "0x8CA568")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x8C30B0", Offset = "0x8C30B0", VA = "0x8C30B0")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x200044B")]
	public class Contour
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x170002AF")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x8CACA8", Offset = "0x8CACA8", VA = "0x8CACA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x8CACB0", Offset = "0x8CACB0", VA = "0x8CACB0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x8CACB8", Offset = "0x8CACB8", VA = "0x8CACB8")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x8CAD38", Offset = "0x8CAD38", VA = "0x8CAD38")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x8CACF0", Offset = "0x8CACF0", VA = "0x8CACF0")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x8CAEA4", Offset = "0x8CAEA4", VA = "0x8CAEA4")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x8CB124", Offset = "0x8CB124", VA = "0x8CB124")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x8CAD74", Offset = "0x8CAD74", VA = "0x8CAD74")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x8CB278", Offset = "0x8CB278", VA = "0x8CB278")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x8CB658", Offset = "0x8CB658", VA = "0x8CB658")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044D")]
	public class Edge : IEdge
	{
		[Token(Token = "0x170002B0")]
		public int P0
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x8CB908", Offset = "0x8CB908", VA = "0x8CB908", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x8CB910", Offset = "0x8CB910", VA = "0x8CB910")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public int P1
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x8CB918", Offset = "0x8CB918", VA = "0x8CB918", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x8CB920", Offset = "0x8CB920", VA = "0x8CB920")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public int Label
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x8CB928", Offset = "0x8CB928", VA = "0x8CB928", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x8CB930", Offset = "0x8CB930", VA = "0x8CB930")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x8CB938", Offset = "0x8CB938", VA = "0x8CB938")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x8B9944", Offset = "0x8B9944", VA = "0x8B9944")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x200044E")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x8CB968", Offset = "0x8CB968", VA = "0x8CB968")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x8CB9D0", Offset = "0x8CB9D0", VA = "0x8CB9D0")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x8CBA44", Offset = "0x8CBA44", VA = "0x8CBA44")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x8CBAB8", Offset = "0x8CBAB8", VA = "0x8CBAB8")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x8CBB30", Offset = "0x8CBB30", VA = "0x8CBB30")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x8CBBB8", Offset = "0x8CBBB8", VA = "0x8CBBB8")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x8CBBD0", Offset = "0x8CBBD0", VA = "0x8CBBD0")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x8CBED8", Offset = "0x8CBED8", VA = "0x8CBED8")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x8CBEB0", Offset = "0x8CBEB0", VA = "0x8CBEB0")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200044F")]
	public interface IEdge
	{
		[Token(Token = "0x170002B3")]
		int P0
		{
			[Token(Token = "0x6001841")]
			get;
		}

		[Token(Token = "0x170002B4")]
		int P1
		{
			[Token(Token = "0x6001842")]
			get;
		}

		[Token(Token = "0x170002B5")]
		int Label
		{
			[Token(Token = "0x6001843")]
			get;
		}
	}
	[Token(Token = "0x2000450")]
	public interface IPolygon
	{
		[Token(Token = "0x170002B6")]
		List<Vertex> Points
		{
			[Token(Token = "0x6001844")]
			get;
		}

		[Token(Token = "0x170002B7")]
		List<ISegment> Segments
		{
			[Token(Token = "0x6001845")]
			get;
		}

		[Token(Token = "0x170002B8")]
		List<Point> Holes
		{
			[Token(Token = "0x6001846")]
			get;
		}

		[Token(Token = "0x170002B9")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6001847")]
			get;
		}

		[Token(Token = "0x170002BA")]
		bool HasPointMarkers
		{
			[Token(Token = "0x6001848")]
			get;
			[Token(Token = "0x6001849")]
			set;
		}

		[Token(Token = "0x170002BB")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x600184A")]
			get;
			[Token(Token = "0x600184B")]
			set;
		}

		[Token(Token = "0x600184C")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x600184D")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x600184E")]
		Rectangle Bounds();

		[Token(Token = "0x600184F")]
		void Add(Vertex vertex);

		[Token(Token = "0x6001850")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x6001851")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x6001852")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x6001853")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x2000451")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x6001854")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6001855")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x2000452")]
	public interface ITriangle
	{
		[Token(Token = "0x170002BC")]
		int ID
		{
			[Token(Token = "0x6001856")]
			get;
			[Token(Token = "0x6001857")]
			set;
		}

		[Token(Token = "0x170002BD")]
		int Label
		{
			[Token(Token = "0x6001858")]
			get;
			[Token(Token = "0x6001859")]
			set;
		}

		[Token(Token = "0x170002BE")]
		double Area
		{
			[Token(Token = "0x600185A")]
			get;
			[Token(Token = "0x600185B")]
			set;
		}

		[Token(Token = "0x600185C")]
		Vertex GetVertex(int index);

		[Token(Token = "0x600185D")]
		int GetVertexID(int index);

		[Token(Token = "0x600185E")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x600185F")]
		int GetNeighborID(int index);

		[Token(Token = "0x6001860")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x2000453")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x170002BF")]
		public int ID
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x8CC068", Offset = "0x8CC068", VA = "0x8CC068")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x8CC070", Offset = "0x8CC070", VA = "0x8CC070")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public double X
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x8CC078", Offset = "0x8CC078", VA = "0x8CC078")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x8CC080", Offset = "0x8CC080", VA = "0x8CC080")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public double Y
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x8CC088", Offset = "0x8CC088", VA = "0x8CC088")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x8CC090", Offset = "0x8CC090", VA = "0x8CC090")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public double Z
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x8CC098", Offset = "0x8CC098", VA = "0x8CC098")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x8CC0A0", Offset = "0x8CC0A0", VA = "0x8CC0A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public int Label
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x8CC0A8", Offset = "0x8CC0A8", VA = "0x8CC0A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x8CC0B0", Offset = "0x8CC0B0", VA = "0x8CC0B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x8CBFD8", Offset = "0x8CBFD8", VA = "0x8CBFD8")]
		public Point()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x8CC038", Offset = "0x8CC038", VA = "0x8CC038")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x8CBFFC", Offset = "0x8CBFFC", VA = "0x8CBFFC")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x8CC0B8", Offset = "0x8CC0B8", VA = "0x8CC0B8")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x8CC134", Offset = "0x8CC134", VA = "0x8CC134")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x8CC180", Offset = "0x8CC180", VA = "0x8CC180", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x8CC104", Offset = "0x8CC104", VA = "0x8CC104", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x8CC228", Offset = "0x8CC228", VA = "0x8CC228", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x8CC28C", Offset = "0x8CC28C", VA = "0x8CC28C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x8CC374", Offset = "0x8CC374", VA = "0x8CC374", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000454")]
	public class Polygon : IPolygon
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x170002C4")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x8CC41C", Offset = "0x8CC41C", VA = "0x8CC41C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public List<Point> Holes
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x8CC424", Offset = "0x8CC424", VA = "0x8CC424", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x8CC42C", Offset = "0x8CC42C", VA = "0x8CC42C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x8CC434", Offset = "0x8CC434", VA = "0x8CC434", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x8CC43C", Offset = "0x8CC43C", VA = "0x8CC43C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600187A")]
			[Address(RVA = "0x8CC444", Offset = "0x8CC444", VA = "0x8CC444", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x8CC450", Offset = "0x8CC450", VA = "0x8CC450", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600187C")]
			[Address(RVA = "0x8CC458", Offset = "0x8CC458", VA = "0x8CC458", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public int Count
		{
			[Token(Token = "0x600187D")]
			[Address(RVA = "0x8CC464", Offset = "0x8CC464", VA = "0x8CC464")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x8CC4AC", Offset = "0x8CC4AC", VA = "0x8CC4AC")]
		public Polygon()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x8CC654", Offset = "0x8CC654", VA = "0x8CC654")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x8CC4B8", Offset = "0x8CC4B8", VA = "0x8CC4B8")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x8CC660", Offset = "0x8CC660", VA = "0x8CC660", Slot = "12")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x8CC7D0", Offset = "0x8CC7D0", VA = "0x8CC7D0", Slot = "13")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x8CC980", Offset = "0x8CC980", VA = "0x8CC980", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x8CCDE8", Offset = "0x8CCDE8", VA = "0x8CCDE8", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x8CCE98", Offset = "0x8CCE98", VA = "0x8CCE98", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x8CD118", Offset = "0x8CD118", VA = "0x8CD118", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x8CC6F4", Offset = "0x8CC6F4", VA = "0x8CC6F4", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x8CC85C", Offset = "0x8CC85C", VA = "0x8CC85C", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class Rectangle
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x170002CB")]
		public double Left
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x8CD3D8", Offset = "0x8CD3D8", VA = "0x8CD3D8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CC")]
		public double Right
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x8CD3E0", Offset = "0x8CD3E0", VA = "0x8CD3E0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CD")]
		public double Bottom
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x8CD3E8", Offset = "0x8CD3E8", VA = "0x8CD3E8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CE")]
		public double Top
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x8CD3F0", Offset = "0x8CD3F0", VA = "0x8CD3F0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002CF")]
		public double Width
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x8CD3F8", Offset = "0x8CD3F8", VA = "0x8CD3F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170002D0")]
		public double Height
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x8CD408", Offset = "0x8CD408", VA = "0x8CD408")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x8CCAE4", Offset = "0x8CCAE4", VA = "0x8CCAE4")]
		public Rectangle()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x8CD348", Offset = "0x8CD348", VA = "0x8CD348")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x8CD390", Offset = "0x8CD390", VA = "0x8CD390")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x8CD418", Offset = "0x8CD418", VA = "0x8CD418")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x8CD430", Offset = "0x8CD430", VA = "0x8CD430")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x8CCB10", Offset = "0x8CCB10", VA = "0x8CCB10")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x8CD4EC", Offset = "0x8CD4EC", VA = "0x8CD4EC")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x8CD5A8", Offset = "0x8CD5A8", VA = "0x8CD5A8")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x8CD5E4", Offset = "0x8CD5E4", VA = "0x8CD5E4")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x8CD638", Offset = "0x8CD638", VA = "0x8CD638")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x8CD694", Offset = "0x8CD694", VA = "0x8CD694")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000457")]
	public class RegionPointer
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x170002D1")]
		public double Area
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0x8CD6F0", Offset = "0x8CD6F0", VA = "0x8CD6F0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x8CD6F8", Offset = "0x8CD6F8", VA = "0x8CD6F8")]
			set
			{
			}
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x8CD75C", Offset = "0x8CD75C", VA = "0x8CD75C")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x8CD764", Offset = "0x8CD764", VA = "0x8CD764")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x170002D2")]
		public int Label
		{
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x8CD814", Offset = "0x8CD814", VA = "0x8CD814", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x8CD81C", Offset = "0x8CD81C", VA = "0x8CD81C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public int P0
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x8CD824", Offset = "0x8CD824", VA = "0x8CD824", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D4")]
		public int P1
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x8CD840", Offset = "0x8CD840", VA = "0x8CD840", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x8CD85C", Offset = "0x8CD85C", VA = "0x8CD85C")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x8CD864", Offset = "0x8CD864", VA = "0x8CD864")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x8CD8BC", Offset = "0x8CD8BC", VA = "0x8CD8BC", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x8CD920", Offset = "0x8CD920", VA = "0x8CD920", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000459")]
	public class Vertex : Point
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x170002D5")]
		public VertexType Type
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x8CD9FC", Offset = "0x8CD9FC", VA = "0x8CD9FC")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x170002D6")]
		public double this[int i]
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x8CDA04", Offset = "0x8CDA04", VA = "0x8CDA04")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x8CD960", Offset = "0x8CD960", VA = "0x8CD960")]
		public Vertex()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x8CD9C8", Offset = "0x8CD9C8", VA = "0x8CD9C8")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x8CD988", Offset = "0x8CD988", VA = "0x8CD988")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x8CDA78", Offset = "0x8CDA78", VA = "0x8CDA78", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x200045A")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossFade;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x8CDA80", Offset = "0x8CDA80", VA = "0x8CDA80")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x8CDB74", Offset = "0x8CDB74", VA = "0x8CDB74")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x8CDD9C", Offset = "0x8CDD9C", VA = "0x8CDD9C")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sizeOfCrowd;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectedOption;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxSize;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string fps;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousFrame;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x8CDDA4", Offset = "0x8CDDA4", VA = "0x8CDDA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x8CE420", Offset = "0x8CE420", VA = "0x8CE420")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x8CDE04", Offset = "0x8CDE04", VA = "0x8CDE04")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x8CE4AC", Offset = "0x8CE4AC", VA = "0x8CE4AC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x8CEE8C", Offset = "0x8CEE8C", VA = "0x8CEE8C")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool crossFade;

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x8CEF24", Offset = "0x8CEF24", VA = "0x8CEF24")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x8CEF7C", Offset = "0x8CEF7C", VA = "0x8CEF7C")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x8CF008", Offset = "0x8CF008", VA = "0x8CF008")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x8CF2EC", Offset = "0x8CF2EC", VA = "0x8CF2EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x8CF484", Offset = "0x8CF484", VA = "0x8CF484")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x8D0360", Offset = "0x8D0360", VA = "0x8D0360")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x200045D")]
	[ExecuteInEditMode]
	public class AttachObjectToFace : MonoBehaviour
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int faceIndex;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 offset;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool drawFaceDebugInfo;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color debugColor;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform mTransform;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mMeshAnimatorTransform;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x8D043C", Offset = "0x8D043C", VA = "0x8D043C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x8D0578", Offset = "0x8D0578", VA = "0x8D0578")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x8D0F28", Offset = "0x8D0F28", VA = "0x8D0F28")]
		public AttachObjectToFace()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool crossFade;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, string> animHashes;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string cAnim;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x8D0F3C", Offset = "0x8D0F3C", VA = "0x8D0F3C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x8D10E8", Offset = "0x8D10E8", VA = "0x8D10E8", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x8D12D4", Offset = "0x8D12D4", VA = "0x8D12D4")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class MeshAnimation : ScriptableObject
	{
		[Token(Token = "0x2000460")]
		public enum RootMotionMode
		{
			[Token(Token = "0x4001744")]
			None,
			[Token(Token = "0x4001745")]
			Baked,
			[Token(Token = "0x4001746")]
			AppliedToTransform
		}

		[Token(Token = "0x2000461")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x170002D8")]
			public int Count
			{
				[Token(Token = "0x60018D4")]
				[Address(RVA = "0x8D40F0", Offset = "0x8D40F0", VA = "0x8D40F0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x8D40F8", Offset = "0x8D40F8", VA = "0x8D40F8")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x8D3D18", Offset = "0x8D3D18", VA = "0x8D3D18")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x8D3C7C", Offset = "0x8D3C7C", VA = "0x8D3C7C")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x8D3DF0", Offset = "0x8D3DF0", VA = "0x8D3DF0")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> generatedFrames;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationName;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preGenerateFrames;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playbackSpeed;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int smoothNormalsAngle;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool instantNormalCalculation;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float length;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int frameSkip;

		[NonSerialized]
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh[] frames;

		[NonSerialized]
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalFrames;

		[NonSerialized]
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] generatedMeshes;

		[NonSerialized]
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool completelyGenerated;

		[NonSerialized]
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshFrameData[] decompressedFrameData;

		[NonSerialized]
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x170002D7")]
		[HideInInspector]
		public MeshFrameData[] frameData
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x8D1388", Offset = "0x8D1388", VA = "0x8D1388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x8D1888", Offset = "0x8D1888", VA = "0x8D1888")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x8D1938", Offset = "0x8D1938", VA = "0x8D1938")]
		public void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x8D2020", Offset = "0x8D2020", VA = "0x8D2020")]
		public void GenerateFrameIfNeeded(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x8D0C34", Offset = "0x8D0C34", VA = "0x8D0C34")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x8D24BC", Offset = "0x8D24BC", VA = "0x8D24BC")]
		public float GetInterpolatingFrames(int frame, out MeshFrameData previousFrame, out MeshFrameData nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x8D26D4", Offset = "0x8D26D4", VA = "0x8D26D4")]
		public MeshFrameData GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x8D2838", Offset = "0x8D2838", VA = "0x8D2838")]
		public void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x8D36EC", Offset = "0x8D36EC", VA = "0x8D36EC")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x8D386C", Offset = "0x8D386C", VA = "0x8D386C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x8D399C", Offset = "0x8D399C", VA = "0x8D399C")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x8D244C", Offset = "0x8D244C", VA = "0x8D244C")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x8D1C04", Offset = "0x8D1C04", VA = "0x8D1C04")]
		private Mesh GenerateFrame(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x8D39E8", Offset = "0x8D39E8", VA = "0x8D39E8")]
		private void RecalculateNormals(Mesh mesh, float angle)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x8D2940", Offset = "0x8D2940", VA = "0x8D2940")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x8D3EA4", Offset = "0x8D3EA4", VA = "0x8D3EA4")]
		public MeshAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x2000466")]
		public enum Mode : byte
		{
			[Token(Token = "0x400175A")]
			Data,
			[Token(Token = "0x400175B")]
			String,
			[Token(Token = "0x400175C")]
			Float
		}

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x8D3768", Offset = "0x8D3768", VA = "0x8D3768")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x8D42FC", Offset = "0x8D42FC", VA = "0x8D42FC")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000467")]
	[RequireComponent(typeof(MeshFilter))]
	[AddComponentMenu("Miscellaneous/Mesh Animator")]
	public class MeshAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		public class MeshAnimatorLODLevel
		{
			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int fps;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float distance;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distanceSquared;

			[Token(Token = "0x6001903")]
			[Address(RVA = "0x8D8430", Offset = "0x8D8430", VA = "0x8D8430")]
			public MeshAnimatorLODLevel()
			{
			}
		}

		[Token(Token = "0x2000469")]
		private struct CurrentCrossFade
		{
			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshFrameData fromFrame;

			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MeshFrameData toFrame;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesNeeded;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int currentFrame;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int generatedFrame;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isFading;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float endTime;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrossFadeFrameData frame;

			[Token(Token = "0x6001904")]
			[Address(RVA = "0x8D4E2C", Offset = "0x8D4E2C", VA = "0x8D4E2C")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x8D5F4C", Offset = "0x8D5F4C", VA = "0x8D5F4C")]
			public void PopulateFrame(int length)
			{
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x8D7564", Offset = "0x8D7564", VA = "0x8D7564")]
			public void ReturnFrame()
			{
			}
		}

		[Token(Token = "0x200046A")]
		private class CrossFadeFrameData
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] positions;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds bounds;

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x8D8438", Offset = "0x8D8438", VA = "0x8D8438")]
			public CrossFadeFrameData()
			{
			}
		}

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> s_meshCount;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Thread> s_crossfadeThreads;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_shutDownThreads;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Queue<MeshAnimator> s_crossfadeAnimators;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Stack<Mesh>> s_crossFadePool;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> s_crossFadeIndex;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimation defaultAnimation;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshAnimation[] animations;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool playAutomatically;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool resetOnEnable;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject eventReciever;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FPS;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<string> OnAnimationFinished;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnFrameUpdated;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<bool> OnVisibilityChanged;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int currentFrame;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform LODCamera;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public MeshAnimation currentAnimation;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int currentAnimIndex;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool isVisible;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastFrameTime;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool pingPong;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool isPaused;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentAnimTime;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh crossFadeMesh;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<string> queuedAnims;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CurrentCrossFade currentCrossFade;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int currentLodLevel;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform mTransform;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<string, Transform> childMap;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool initialized;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int previousEventFrame;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool hasExposedTransforms;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int crossFadePoolIndex;

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x8D4304", Offset = "0x8D4304", VA = "0x8D4304")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x8D4A38", Offset = "0x8D4A38", VA = "0x8D4A38")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x8D4A68", Offset = "0x8D4A68", VA = "0x8D4A68")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x8D4A94", Offset = "0x8D4A94", VA = "0x8D4A94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x8D4D14", Offset = "0x8D4D14", VA = "0x8D4D14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x8D4E70", Offset = "0x8D4E70", VA = "0x8D4E70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x8D5980", Offset = "0x8D5980", VA = "0x8D5980")]
		private void FireAnimationEvents(MeshAnimation cAnim, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x8D5AEC", Offset = "0x8D5AEC", VA = "0x8D5AEC")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x8D55B4", Offset = "0x8D55B4", VA = "0x8D55B4")]
		private void ReturnCrossfadeToPool()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x8D5D00", Offset = "0x8D5D00", VA = "0x8D5D00")]
		private void GenerateCrossfadeFrame()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x8D6088", Offset = "0x8D6088", VA = "0x8D6088")]
		private static void EnqueueAnimatorForCrossfade(MeshAnimator animator)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x8D61C8", Offset = "0x8D61C8", VA = "0x8D61C8")]
		private static MeshAnimator DequeueAnimatorForCrossfade()
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x8D6358", Offset = "0x8D6358", VA = "0x8D6358")]
		private static Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x8D6410", Offset = "0x8D6410", VA = "0x8D6410")]
		private static void GenerateThreadedCrossfade()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x8D6694", Offset = "0x8D6694", VA = "0x8D6694")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x8CDCC0", Offset = "0x8CDCC0", VA = "0x8CDCC0")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x8D124C", Offset = "0x8D124C", VA = "0x8D124C")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x8D76F8", Offset = "0x8D76F8", VA = "0x8D76F8")]
		public void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x8D7884", Offset = "0x8D7884", VA = "0x8D7884")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x8CDB6C", Offset = "0x8CDB6C", VA = "0x8CDB6C")]
		public void Play()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x8D1258", Offset = "0x8D1258", VA = "0x8D1258")]
		public void Play(string animationName)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x8CDCCC", Offset = "0x8CDCCC", VA = "0x8CDCCC")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x8D7914", Offset = "0x8D7914", VA = "0x8D7914")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x8D79B8", Offset = "0x8D79B8", VA = "0x8D79B8")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x8D7A68", Offset = "0x8D7A68", VA = "0x8D7A68")]
		public void Pause()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x8D7A74", Offset = "0x8D7A74", VA = "0x8D7A74")]
		public void RestartAnim()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x8D7A7C", Offset = "0x8D7A7C", VA = "0x8D7A7C")]
		public void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x8D7B44", Offset = "0x8D7B44", VA = "0x8D7B44")]
		public void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x8D7C10", Offset = "0x8D7C10", VA = "0x8D7C10")]
		public MeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x8D7CA0", Offset = "0x8D7CA0", VA = "0x8D7CA0")]
		public void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x8D7FB4", Offset = "0x8D7FB4", VA = "0x8D7FB4")]
		public MeshAnimator()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MeshAnimatorManager mInstance;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<MeshAnimator> mAnimators;

		[Token(Token = "0x170002D9")]
		public static int AnimatorCount
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x8D4970", Offset = "0x8D4970", VA = "0x8D4970")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DA")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x8D84C4", Offset = "0x8D84C4", VA = "0x8D84C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x8D4BE0", Offset = "0x8D4BE0", VA = "0x8D4BE0")]
		public static void AddAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x8D4DAC", Offset = "0x8D4DAC", VA = "0x8D4DAC")]
		public static void RemoveAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x8D868C", Offset = "0x8D868C", VA = "0x8D868C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x8D8838", Offset = "0x8D8838", VA = "0x8D8838")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046D")]
	public class MeshFrameData
	{
		[NonSerialized]
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] decompressed;

		[NonSerialized]
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x170002DB")]
		public Vector3[] verts
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0x8D88F0", Offset = "0x8D88F0", VA = "0x8D88F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x8D88F8", Offset = "0x8D88F8", VA = "0x8D88F8")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x8D8900", Offset = "0x8D8900", VA = "0x8D8900", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x8D8A24", Offset = "0x8D8A24", VA = "0x8D8A24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x8D8A2C", Offset = "0x8D8A2C", VA = "0x8D8A2C")]
		public MeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046E")]
	public class MeshTriangleData
	{
		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x8D8A34", Offset = "0x8D8A34", VA = "0x8D8A34")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046F")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x8D1434", Offset = "0x8D1434", VA = "0x8D1434")]
		public static implicit operator MeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x8D8A3C", Offset = "0x8D8A3C", VA = "0x8D8A3C")]
		public static implicit operator DeltaCompressedFrameData(MeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x8D93B8", Offset = "0x8D93B8", VA = "0x8D93B8")]
		public DeltaCompressedFrameData()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x600191E")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x2000472")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x8D95C4", Offset = "0x8D95C4", VA = "0x8D95C4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x8D95D4", Offset = "0x8D95D4", VA = "0x8D95D4", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001926")]
			[Address(RVA = "0x8D959C", Offset = "0x8D959C", VA = "0x8D959C")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x8D95F4", Offset = "0x8D95F4", VA = "0x8D95F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001928")]
			[Address(RVA = "0x8D9600", Offset = "0x8D9600", VA = "0x8D9600", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001929")]
			[Address(RVA = "0x8D95A4", Offset = "0x8D95A4", VA = "0x8D95A4")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000474")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x8D961C", Offset = "0x8D961C", VA = "0x8D961C", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x600192B")]
			[Address(RVA = "0x8D9628", Offset = "0x8D9628", VA = "0x8D9628", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x600192C")]
			[Address(RVA = "0x8D95AC", Offset = "0x8D95AC", VA = "0x8D95AC")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000475")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x8D9644", Offset = "0x8D9644", VA = "0x8D9644", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x600192E")]
			[Address(RVA = "0x8D9654", Offset = "0x8D9654", VA = "0x8D9654", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x600192F")]
			[Address(RVA = "0x8D95B4", Offset = "0x8D95B4", VA = "0x8D95B4")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000476")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x8D9670", Offset = "0x8D9670", VA = "0x8D9670", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0x8D967C", Offset = "0x8D967C", VA = "0x8D967C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001932")]
			[Address(RVA = "0x8D95BC", Offset = "0x8D95BC", VA = "0x8D95BC")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000477")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x6001933")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x6001934")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001935")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x6001922")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x2000479")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x170002DC")]
		public static int Count
		{
			[Token(Token = "0x6001939")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600193A")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x600193B")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x600193C")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x200047A")]
	public static class MatrixUtils
	{
		[Token(Token = "0x600193E")]
		[Address(RVA = "0x8D7658", Offset = "0x8D7658", VA = "0x8D7658")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x8D96A8", Offset = "0x8D96A8", VA = "0x8D96A8")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x8D969C", Offset = "0x8D969C", VA = "0x8D969C")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x8D97CC", Offset = "0x8D97CC", VA = "0x8D97CC")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200047B")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x170002DD")]
		public bool recycleable
		{
			[Token(Token = "0x6001942")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001943")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001944")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x6001945")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001946")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x6001949")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x600194A")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x600194B")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace LuxWater
{
	[Token(Token = "0x200047C")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class LuxWater_CameraDepthMode : MonoBehaviour
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GrabDepthTexture;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material CopyDepthMat;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTextureFormat format;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, CommandBuffer> m_cmdBuffer;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool CamCallBackAdded;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool ShowShaderWarning;

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x8D9960", Offset = "0x8D9960", VA = "0x8D9960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x8D9B78", Offset = "0x8D9B78", VA = "0x8D9B78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x8D9E3C", Offset = "0x8D9E3C", VA = "0x8D9E3C")]
		private void OnPrecull(Camera camera)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x8DA264", Offset = "0x8DA264", VA = "0x8DA264")]
		public LuxWater_CameraDepthMode()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class LuxWater_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string URL;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x8DA2F4", Offset = "0x8DA2F4", VA = "0x8DA2F4")]
		public LuxWater_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class LuxWater_InfiniteOcean : MonoBehaviour
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(6f)]
		[LuxWater_HelpBtn("h.c1utuz9up55r")]
		public Camera MainCam;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GridSize;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform camTrans;

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x8DA324", Offset = "0x8DA324", VA = "0x8DA324")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x8DA37C", Offset = "0x8DA37C", VA = "0x8DA37C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x8DA694", Offset = "0x8DA694", VA = "0x8DA694")]
		public LuxWater_InfiniteOcean()
		{
		}
	}
	[Token(Token = "0x200047F")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		public enum ReflectionResolution
		{
			[Token(Token = "0x40017DD")]
			Full = 1,
			[Token(Token = "0x40017DE")]
			Half = 2,
			[Token(Token = "0x40017DF")]
			Quarter = 4,
			[Token(Token = "0x40017E0")]
			Eighth = 8
		}

		[Token(Token = "0x2000481")]
		public enum NumberOfShadowCascades
		{
			[Token(Token = "0x40017E2")]
			One = 1,
			[Token(Token = "0x40017E3")]
			Two = 2,
			[Token(Token = "0x40017E4")]
			Four = 4
		}

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LuxWater_HelpBtn("h.5c3jy4qfh163")]
		[Space(6f)]
		public bool UpdateSceneView;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[Space(5f)]
		public bool isMaster;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] WaterMaterials;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(5f)]
		public LayerMask reflectionMask;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ReflectionResolution Resolution;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color clearColor;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool reflectSkybox;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[Space(5f)]
		public bool disablePixelLights;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[Space(5f)]
		public bool renderShadows;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float shadowDistance;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NumberOfShadowCascades ShadowCascades;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Space(5f)]
		public float WaterSurfaceOffset;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float clipPlaneOffset;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string reflectionSampler;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material m_SharedMaterial;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture m_reflectionMap;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x8DA6A4", Offset = "0x8DA6A4", VA = "0x8DA6A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x8DA7B8", Offset = "0x8DA7B8", VA = "0x8DA7B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x8DA890", Offset = "0x8DA890", VA = "0x8DA890")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x8DABB4", Offset = "0x8DABB4", VA = "0x8DABB4")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x8DAC68", Offset = "0x8DAC68", VA = "0x8DAC68")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x8DAD98", Offset = "0x8DAD98", VA = "0x8DAD98")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x8DB580", Offset = "0x8DB580", VA = "0x8DB580")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x8DB5D8", Offset = "0x8DB5D8", VA = "0x8DB5D8")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x8DB6B8", Offset = "0x8DB6B8", VA = "0x8DB6B8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x8DAF8C", Offset = "0x8DAF8C", VA = "0x8DAF8C")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x8DB6E0", Offset = "0x8DB6E0", VA = "0x8DB6E0")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x8DB994", Offset = "0x8DB994", VA = "0x8DB994")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x8DB740", Offset = "0x8DB740", VA = "0x8DB740")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x8DBB00", Offset = "0x8DBB00", VA = "0x8DBB00")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x8DB7E4", Offset = "0x8DB7E4", VA = "0x8DB7E4")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x8DBB20", Offset = "0x8DBB20", VA = "0x8DBB20")]
		public LuxWater_PlanarReflection()
		{
		}
	}
	[Token(Token = "0x2000482")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarWaterTile : MonoBehaviour
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(6f)]
		[LuxWater_HelpBtn("h.nu6w5ylbucb7")]
		public LuxWater_PlanarReflection reflection;

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x8DBBB8", Offset = "0x8DBBB8", VA = "0x8DBBB8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x8DBBBC", Offset = "0x8DBBBC", VA = "0x8DBBBC")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x8DBCC8", Offset = "0x8DBCC8", VA = "0x8DBCC8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x8DBD60", Offset = "0x8DBD60", VA = "0x8DBD60")]
		public LuxWater_PlanarWaterTile()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class LuxWater_Projector : MonoBehaviour
	{
		[Token(Token = "0x2000484")]
		public enum ProjectorType
		{
			[Token(Token = "0x40017EE")]
			FoamProjector,
			[Token(Token = "0x40017EF")]
			NormalProjector
		}

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(8f)]
		public ProjectorType Type;

		[NonSerialized]
		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<LuxWater_Projector> FoamProjectors;

		[NonSerialized]
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<LuxWater_Projector> NormalProjectors;

		[NonSerialized]
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_Rend;

		[NonSerialized]
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_Mat;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool added;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 origPos;

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x8DBD68", Offset = "0x8DBD68", VA = "0x8DBD68")]
		private void Update()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x8DBD88", Offset = "0x8DBD88", VA = "0x8DBD88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x8DBF64", Offset = "0x8DBF64", VA = "0x8DBF64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x8DC020", Offset = "0x8DC020", VA = "0x8DC020")]
		public LuxWater_Projector()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class LuxWater_ProjectorRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000486")]
		public enum BufferResolution
		{
			[Token(Token = "0x4001805")]
			Full = 1,
			[Token(Token = "0x4001806")]
			Half = 2,
			[Token(Token = "0x4001807")]
			Quarter = 4,
			[Token(Token = "0x4001808")]
			Eighth = 8
		}

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(8f)]
		public BufferResolution FoamBufferResolution;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BufferResolution NormalBufferResolution;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(4f)]
		[Space(2f)]
		[Header("Debug")]
		public bool DebugFoamBuffer;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DebugNormalBuffer;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DebugStats;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int drawnFoamProjectors;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int drawnNormalProjectors;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommandBuffer cb_Foam;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CommandBuffer cb_Normals;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform camTransform;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture ProjectedFoam;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture ProjectedNormals;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D defaultBump;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds tempBounds;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _LuxWater_FoamOverlayPID;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _LuxWater_NormalOverlayPID;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Plane[] frustumPlanes;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material DebugMat;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material DebugNormalMat;

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x8DC0F4", Offset = "0x8DC0F4", VA = "0x8DC0F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x8DC258", Offset = "0x8DC258", VA = "0x8DC258")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x8DC494", Offset = "0x8DC494", VA = "0x8DC494")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x8DD12C", Offset = "0x8DD12C", VA = "0x8DD12C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x8DD494", Offset = "0x8DD494", VA = "0x8DD494")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x8DD700", Offset = "0x8DD700", VA = "0x8DD700")]
		public LuxWater_ProjectorRenderer()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public static class GeomUtil
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x8DCE18", Offset = "0x8DCE18", VA = "0x8DCE18")]
		public static void CalculateFrustumPlanes(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
	[Token(Token = "0x2000488")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LuxWater_HelpBtn("h.3a2840a53u5j")]
		[Space(6f)]
		public float blurSpread;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int blurDownSample;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blurIterations;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] m_offsets;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blitMaterial;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool doBlur;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool initBlur;

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x8DD76C", Offset = "0x8DD76C", VA = "0x8DD76C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x8DD884", Offset = "0x8DD884", VA = "0x8DD884")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x8DD954", Offset = "0x8DD954", VA = "0x8DD954")]
		private void GetWaterrendermanagerInstance()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x8DD9A8", Offset = "0x8DD9A8", VA = "0x8DD9A8")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x8DDCA0", Offset = "0x8DDCA0", VA = "0x8DDCA0")]
		private void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x8DDBD0", Offset = "0x8DDBD0", VA = "0x8DDBD0")]
		private void DownSample(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x8DDD74", Offset = "0x8DDD74", VA = "0x8DDD74")]
		public LuxWater_UnderWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000489")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderWaterRendering : MonoBehaviour
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LuxWater_UnderWaterRendering instance;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LuxWater_HelpBtn("h.d0q6uguuxpy")]
		[Space(6f)]
		public Transform Sun;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(4f)]
		public bool FindSunOnEnable;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SunGoName;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SunTagName;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light SunLight;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space(2f)]
		[Header("Deep Water Lighting")]
		[Space(4f)]
		public bool EnableDeepwaterLighting;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float DefaultWaterSurfacePosition;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float DirectionalLightingFadeRange;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FogLightingFadeRange;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Advanced Deferred Fog")]
		[Space(2f)]
		[Space(4f)]
		public bool EnableAdvancedDeferredFog;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float FogDepthShift;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FogEdgeBlending;

		[NonSerialized]
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Space(8f)]
		public int activeWaterVolume;

		[NonSerialized]
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Camera> activeWaterVolumeCameras;

		[NonSerialized]
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float activeGridSize;

		[NonSerialized]
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float WaterSurfacePos;

		[NonSerialized]
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space(8f)]
		public List<int> RegisteredWaterVolumesIDs;

		[NonSerialized]
		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<LuxWater_WaterVolume> RegisteredWaterVolumes;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Mesh> WaterMeshes;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Transform> WaterTransforms;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> WaterMaterials;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<bool> WaterIsOnScreen;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<bool> WaterUsesSlidingVolume;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture UnderWaterMask;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Space(2f)]
		[Header("Managed transparent Materials")]
		[Space(4f)]
		public List<Material> m_aboveWatersurface;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Material> m_belowWatersurface;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Space(4f)]
		[Space(2f)]
		[Header("Optimize")]
		public ShaderVariantCollection PrewarmedShaders;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int ListCapacity;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Header("Debug")]
		[Space(4f)]
		[Space(2f)]
		public bool enableDebug;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Space(8f)]
		private Material mat;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material blurMaterial;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blitMaterial;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Camera cam;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool UnderwaterIsSetUp;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform camTransform;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Matrix4x4 frustumCornersArray;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SphericalHarmonicsL2 ambientProbe;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3[] directions;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color[] AmbientLightingSamples;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool DoUnderWaterRendering;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Matrix4x4 camProj;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3[] frustumCorners;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float Projection;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private bool islinear;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Matrix4x4 WatervolumeMatrix;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int UnderWaterMaskPID;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int Lux_FrustumCornersWSPID;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int Lux_CameraWSPID;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private int GerstnerEnabledPID;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int LuxWaterMask_GerstnerVertexIntensityPID;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private int GerstnerVertexIntensityPID;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int LuxWaterMask_GAmplitudePID;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private int GAmplitudePID;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int LuxWaterMask_GFinalFrequencyPID;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private int GFinalFrequencyPID;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int LuxWaterMask_GSteepnessPID;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private int GSteepnessPID;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int LuxWaterMask_GFinalSpeedPID;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private int GFinalSpeedPID;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int LuxWaterMask_GDirectionABPID;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private int GDirectionABPID;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int LuxWaterMask_GDirectionCDPID;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int GDirectionCDPID;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int LuxWaterMask_GerstnerSecondaryWaves;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int GerstnerSecondaryWaves;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private int Lux_UnderWaterAmbientSkyLightPID;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private int Lux_UnderWaterSunColorPID;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private int Lux_UnderWaterSunDirPID;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private int Lux_UnderWaterSunDirViewSpacePID;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private int Lux_EdgeLengthPID;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private int Lux_CausticsEnabledPID;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private int Lux_CausticModePID;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private int Lux_UnderWaterFogColorPID;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int Lux_UnderWaterFogDensityPID;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private int Lux_UnderWaterFogAbsorptionCancellationPID;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private int Lux_UnderWaterAbsorptionHeightPID;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int Lux_UnderWaterAbsorptionMaxHeightPID;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int Lux_MaxDirLightDepthPID;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private int Lux_MaxFogLightDepthPID;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private int Lux_UnderWaterAbsorptionDepthPID;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int Lux_UnderWaterAbsorptionColorStrengthPID;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private int Lux_UnderWaterAbsorptionStrengthPID;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int Lux_UnderWaterUnderwaterScatteringPowerPID;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private int Lux_UnderWaterUnderwaterScatteringIntensityPID;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private int Lux_UnderWaterUnderwaterScatteringColorPID;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private int Lux_UnderWaterUnderwaterScatteringOcclusionPID;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private int Lux_UnderWaterCausticsPID;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int Lux_UnderWaterDeferredFogParams;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private int CausticTexPID;

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x8DDDF4", Offset = "0x8DDDF4", VA = "0x8DDDF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x8DEAC4", Offset = "0x8DEAC4", VA = "0x8DEAC4")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x8DECA0", Offset = "0x8DECA0", VA = "0x8DECA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x8DECA4", Offset = "0x8DECA4", VA = "0x8DECA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x8DECA8", Offset = "0x8DECA8", VA = "0x8DECA8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x8DEA40", Offset = "0x8DEA40", VA = "0x8DEA40")]
		public void SetDeferredFogParams()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x8DE954", Offset = "0x8DE954", VA = "0x8DE954")]
		public void SetDeepwaterLighting()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x8DECC0", Offset = "0x8DECC0", VA = "0x8DECC0")]
		public void RegisterWaterVolume(LuxWater_WaterVolume item, int ID, bool visible, bool SlidingVolume)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x8DF3A0", Offset = "0x8DF3A0", VA = "0x8DF3A0")]
		public void DeRegisterWaterVolume(LuxWater_WaterVolume item, int ID)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x8DF514", Offset = "0x8DF514", VA = "0x8DF514")]
		public void SetWaterVisible(int ID)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x8DF59C", Offset = "0x8DF59C", VA = "0x8DF59C")]
		public void SetWaterInvisible(int ID)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x8DF624", Offset = "0x8DF624", VA = "0x8DF624")]
		public void EnteredWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam, float GridSize)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x8DF858", Offset = "0x8DF858", VA = "0x8DF858")]
		public void LeftWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x8DF9E0", Offset = "0x8DF9E0", VA = "0x8DF9E0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x8E0820", Offset = "0x8E0820", VA = "0x8E0820")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x8DF0EC", Offset = "0x8DF0EC", VA = "0x8DF0EC")]
		public void SetGerstnerWaves(int index)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x8DFA00", Offset = "0x8DFA00", VA = "0x8DFA00")]
		public void RenderWaterMask(Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x8E082C", Offset = "0x8E082C", VA = "0x8E082C")]
		public void RenderUnderWater(RenderTexture src, RenderTexture dest, Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x8E1294", Offset = "0x8E1294", VA = "0x8E1294")]
		public LuxWater_UnderWaterRendering()
		{
		}
	}
	[Token(Token = "0x200048A")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderwaterRenderingSlave : MonoBehaviour
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool readyToGo;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x8E26C4", Offset = "0x8E26C4", VA = "0x8E26C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x8E274C", Offset = "0x8E274C", VA = "0x8E274C")]
		private void GetWaterrendermanager()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x8E27F0", Offset = "0x8E27F0", VA = "0x8E27F0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x8E2828", Offset = "0x8E2828", VA = "0x8E2828")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x8E28CC", Offset = "0x8E28CC", VA = "0x8E28CC")]
		public LuxWater_UnderwaterRenderingSlave()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class LuxWater_WaterVolume : MonoBehaviour
	{
		[Token(Token = "0x200048C")]
		public delegate void TriggerEnter();

		[Token(Token = "0x200048D")]
		public delegate void TriggerExit();

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(6f)]
		[LuxWater_HelpBtn("h.86taxuhovssb")]
		public Mesh WaterVolumeMesh;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(8f)]
		public bool SlidingVolume;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GridSize;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool readyToGo;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int ID;

		[Token(Token = "0x14000024")]
		public static event TriggerEnter OnEnterWaterVolume
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x8E28D4", Offset = "0x8E28D4", VA = "0x8E28D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x8E298C", Offset = "0x8E298C", VA = "0x8E298C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public static event TriggerExit OnExitWaterVolume
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x8E2A44", Offset = "0x8E2A44", VA = "0x8E2A44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x8E2B00", Offset = "0x8E2B00", VA = "0x8E2B00")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x8E2BBC", Offset = "0x8E2BBC", VA = "0x8E2BBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x8E2D50", Offset = "0x8E2D50", VA = "0x8E2D50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x8E2E20", Offset = "0x8E2E20", VA = "0x8E2E20")]
		private void Register()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x8E2F58", Offset = "0x8E2F58", VA = "0x8E2F58")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x8E2F8C", Offset = "0x8E2F8C", VA = "0x8E2F8C")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x8E2FC0", Offset = "0x8E2FC0", VA = "0x8E2FC0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x8E30F0", Offset = "0x8E30F0", VA = "0x8E30F0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x8E31EC", Offset = "0x8E31EC", VA = "0x8E31EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x8E3318", Offset = "0x8E3318", VA = "0x8E3318")]
		public LuxWater_WaterVolume()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class LuxWater_WaterVolumeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(6f)]
		[LuxWater_HelpBtn("h.cetbv2etlk23")]
		public Camera cam;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x8E34F8", Offset = "0x8E34F8", VA = "0x8E34F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x8E35D8", Offset = "0x8E35D8", VA = "0x8E35D8")]
		public LuxWater_WaterVolumeTrigger()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class LuxWater_SetMeshBounds : MonoBehaviour
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(6f)]
		[LuxWater_HelpBtn("h.s0d0kaaphhix")]
		public float Expand_XZ;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Expand_Y;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer rend;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x8E35E8", Offset = "0x8E35E8", VA = "0x8E35E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x8E36B8", Offset = "0x8E36B8", VA = "0x8E36B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x8E371C", Offset = "0x8E371C", VA = "0x8E371C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x8E37EC", Offset = "0x8E37EC", VA = "0x8E37EC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x8E3940", Offset = "0x8E3940", VA = "0x8E3940")]
		public LuxWater_SetMeshBounds()
		{
		}
	}
}
namespace Prototype.NetworkLobby
{
	[Token(Token = "0x2000490")]
	public class DraggablePanel : MonoBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x8E3948", Offset = "0x8E3948", VA = "0x8E3948", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x8E3978", Offset = "0x8E3978", VA = "0x8E3978")]
		public DraggablePanel()
		{
		}
	}
}
namespace HeurekaGames
{
	[Token(Token = "0x2000491")]
	public static class Extensions
	{
		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x8E3980", Offset = "0x8E3980", VA = "0x8E3980")]
		public static Vector2 YZ(this Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x8E3988", Offset = "0x8E3988", VA = "0x8E3988")]
		public static Vector2[] YZ(this Vector3[] v)
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x8E3A34", Offset = "0x8E3A34", VA = "0x8E3A34")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x8E3A50", Offset = "0x8E3A50", VA = "0x8E3A50")]
		public static string ToCamelCase(this string camelCaseString)
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x8E3AE8", Offset = "0x8E3AE8", VA = "0x8E3AE8")]
		public static bool Contains(this string source, string toCheck, StringComparison comp)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B7")]
		public static void SetComponentRecursively<T>(this GameObject gameObject, bool tf) where T : Component
		{
		}

		[Token(Token = "0x60019B8")]
		public static void CastList<T>(this List<T> targetList)
		{
		}

		[Token(Token = "0x60019B9")]
		public static bool Has<T>(this Enum type, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		public static bool Is<T>(this Enum type, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		public static T Add<T>(this Enum type, T value)
		{
			return (T)null;
		}

		[Token(Token = "0x60019BC")]
		public static T Remove<T>(this Enum type, T value)
		{
			return (T)null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x8E3B18", Offset = "0x8E3B18", VA = "0x8E3B18")]
		public static Color ModifiedAlpha(this Color color, float alpha)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000492")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x170002DE")]
		public static T Instance
		{
			[Token(Token = "0x60019BE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BF")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60019C0")]
		public Singleton()
		{
		}
	}
}
namespace Exploder
{
	[Token(Token = "0x2000493")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x8E3B20", Offset = "0x8E3B20", VA = "0x8E3B20")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x8E3BBC", Offset = "0x8E3BBC", VA = "0x8E3BBC")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x8E3BC0", Offset = "0x8E3BC0", VA = "0x8E3BC0")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x8E3C5C", Offset = "0x8E3C5C", VA = "0x8E3C5C")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x8E3CE8", Offset = "0x8E3CE8", VA = "0x8E3CE8")]
		public Example()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class Array<T>
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x170002DF")]
		public int Count
		{
			[Token(Token = "0x60019C9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E0")]
		public T this[int key]
		{
			[Token(Token = "0x60019CA")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60019C7")]
		public Array(int size)
		{
		}

		[Token(Token = "0x60019C8")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x60019CB")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019CC")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x60019CD")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x2000495")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x2000496")]
		private struct DicItem
		{
			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4001888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x170002E1")]
		public T this[int key]
		{
			[Token(Token = "0x60019D0")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60019D1")]
			set
			{
			}
		}

		[Token(Token = "0x60019CE")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x60019CF")]
		public bool ContainsKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019D3")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x60019D4")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x60019D5")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000497")]
	public class Contour
	{
		[Token(Token = "0x2000498")]
		private struct MidPoint
		{
			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x170002E2")]
		public int MidPointsCount
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x8E41A8", Offset = "0x8E41A8", VA = "0x8E41A8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x8E41B0", Offset = "0x8E41B0", VA = "0x8E41B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x8E3CF0", Offset = "0x8E3CF0", VA = "0x8E3CF0")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x8E3D1C", Offset = "0x8E3D1C", VA = "0x8E3D1C")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x8E41B8", Offset = "0x8E41B8", VA = "0x8E41B8")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x8E4480", Offset = "0x8E4480", VA = "0x8E4480")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000499")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ExploderTask[] tasks;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TaskType currTaskType;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool initialized;

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x8E47FC", Offset = "0x8E47FC", VA = "0x8E47FC")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x8E5794", Offset = "0x8E5794", VA = "0x8E5794")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject obj, bool crack)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x8E5888", Offset = "0x8E5888", VA = "0x8E5888")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x8E588C", Offset = "0x8E588C", VA = "0x8E588C")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x8E5C98", Offset = "0x8E5C98", VA = "0x8E5C98")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x8E5F70", Offset = "0x8E5F70", VA = "0x8E5F70")]
		public void Update()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x8E6054", Offset = "0x8E6054", VA = "0x8E6054", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x8E5644", Offset = "0x8E5644", VA = "0x8E5644")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x8E5DE4", Offset = "0x8E5DE4", VA = "0x8E5DE4")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x8E5DA8", Offset = "0x8E5DA8", VA = "0x8E5DA8")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x8E5E20", Offset = "0x8E5E20", VA = "0x8E5E20")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x8E60F4", Offset = "0x8E60F4", VA = "0x8E60F4")]
		public Core()
		{
		}
	}
	[Token(Token = "0x200049A")]
	internal class CrackedObject
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x8E613C", Offset = "0x8E613C", VA = "0x8E613C")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x8E6224", Offset = "0x8E6224", VA = "0x8E6224")]
		public long Explode()
		{
			return default(long);
		}
	}
	[Token(Token = "0x200049B")]
	internal class CrackManager
	{
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x8E4F9C", Offset = "0x8E4F9C", VA = "0x8E4F9C")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x8E6734", Offset = "0x8E6734", VA = "0x8E6734")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x8E5950", Offset = "0x8E5950", VA = "0x8E5950")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x8E5AF8", Offset = "0x8E5AF8", VA = "0x8E5AF8")]
		public long ExplodeAll()
		{
			return default(long);
		}
	}
	[Token(Token = "0x200049C")]
	internal class CuttingPlane
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x8E67D4", Offset = "0x8E67D4", VA = "0x8E67D4")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x8E69A0", Offset = "0x8E69A0", VA = "0x8E69A0")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x8E6B64", Offset = "0x8E6B64", VA = "0x8E6B64")]
		private Plane GetRectangularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x8E6D14", Offset = "0x8E6D14", VA = "0x8E6D14")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x200049D")]
	internal class ExploderParams
	{
		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 AdditionalForceVector;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Force;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float FrameBudget;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Radius;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float DeactivateTimeout;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float BulletSize;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int id;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int TargetFragments;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int FragmentPoolSize;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.FragmentOption FragmentOptions;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ExploderObject.SFXOption SFXOptions;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Target;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool UseCubeRadius;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool DontUseTag;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool UseForceVector;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool MeshColliders;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool ExplodeSelf;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public bool HideSelf;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
		public bool ExplodeFragments;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool SplitMeshIslands;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool Use2DCollision;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public bool DisableRadiusScan;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool DisableTriangulation;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool PartialExplosion;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public bool Crack;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
		public bool processing;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool ShouldUseAdditionalForce;

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x8E4E04", Offset = "0x8E4E04", VA = "0x8E4E04")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x200049E")]
	internal class ExploderQueue
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x8E5024", Offset = "0x8E5024", VA = "0x8E5024")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x8E57B0", Offset = "0x8E57B0", VA = "0x8E57B0")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject target, bool crack)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x8E6EB8", Offset = "0x8E6EB8", VA = "0x8E6EB8")]
		public void EnqueuePartialExplosion(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject target, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x8E6E08", Offset = "0x8E6E08", VA = "0x8E6E08")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x8E5EE4", Offset = "0x8E5EE4", VA = "0x8E5EE4")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public struct ExploderTransform
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x8E6FD8", Offset = "0x8E6FD8", VA = "0x8E6FD8")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x8E7050", Offset = "0x8E7050", VA = "0x8E7050")]
		public Vector3 InverseTransformDirection(Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x8E709C", Offset = "0x8E709C", VA = "0x8E709C")]
		public Vector3 InverseTransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x8E7120", Offset = "0x8E7120", VA = "0x8E7120")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20004A0")]
	public class LSHash
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x8E4070", Offset = "0x8E4070", VA = "0x8E4070")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x8E4054", Offset = "0x8E4054", VA = "0x8E4054")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x8E40FC", Offset = "0x8E40FC", VA = "0x8E40FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x8E71BC", Offset = "0x8E71BC", VA = "0x8E71BC")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x8E43F0", Offset = "0x8E43F0", VA = "0x8E43F0")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class ExploderMesh
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int minX;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxX;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int minY;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int maxY;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int minZ;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int maxZ;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x8E7284", Offset = "0x8E7284", VA = "0x8E7284")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x8E728C", Offset = "0x8E728C", VA = "0x8E728C")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x8E7364", Offset = "0x8E7364", VA = "0x8E7364")]
		public void CalculateCentroid()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x8E7530", Offset = "0x8E7530", VA = "0x8E7530")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A2")]
	public class MeshCutter
	{
		[Token(Token = "0x20004A3")]
		private struct Triangle
		{
			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x8E75F0", Offset = "0x8E75F0", VA = "0x8E75F0")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x8E7628", Offset = "0x8E7628", VA = "0x8E7628")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x8E816C", Offset = "0x8E816C", VA = "0x8E816C")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x8E8658", Offset = "0x8E8658", VA = "0x8E8658")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x8E8674", Offset = "0x8E8674", VA = "0x8E8674")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x8EEE58", Offset = "0x8EEE58", VA = "0x8EEE58")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x8EF368", Offset = "0x8EF368", VA = "0x8EF368")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x8EF718", Offset = "0x8EF718", VA = "0x8EF718")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x8F23E0", Offset = "0x8F23E0", VA = "0x8F23E0")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	internal struct MeshObject
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x20004A5")]
	public static class MeshUtils
	{
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x8F1270", Offset = "0x8F1270", VA = "0x8F1270")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A12")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x8F23E8", Offset = "0x8F23E8", VA = "0x8F23E8")]
		public static void CenterPivot(Vector3[] vertices, Vector3 centroid)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x8F2448", Offset = "0x8F2448", VA = "0x8F2448")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x8F3C58", Offset = "0x8F3C58", VA = "0x8F3C58")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class Plane
	{
		[Token(Token = "0x20004A7")]
		[Flags]
		public enum PointClass
		{
			[Token(Token = "0x4001914")]
			Coplanar = 0,
			[Token(Token = "0x4001915")]
			Front = 1,
			[Token(Token = "0x4001916")]
			Back = 2,
			[Token(Token = "0x4001917")]
			Intersection = 3
		}

		[Token(Token = "0x400190F")]
		private const float epsylon = 0.0001f;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x170002E3")]
		public Vector3 Pnt
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x8F3D9C", Offset = "0x8F3D9C", VA = "0x8F3D9C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x8F3DA8", Offset = "0x8F3DA8", VA = "0x8F3DA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x8F3DB4", Offset = "0x8F3DB4", VA = "0x8F3DB4")]
		public Plane(Vector3 a, Vector3 b, Vector3 c)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x8E693C", Offset = "0x8E693C", VA = "0x8E693C")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x8E6A50", Offset = "0x8E6A50", VA = "0x8E6A50")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x8F3F38", Offset = "0x8F3F38", VA = "0x8F3F38")]
		public Plane(Plane instance)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x8F3F8C", Offset = "0x8F3F8C", VA = "0x8F3F8C")]
		public PointClass ClassifyPoint(Vector3 p)
		{
			return default(PointClass);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x8EED24", Offset = "0x8EED24", VA = "0x8EED24")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x8F3FDC", Offset = "0x8F3FDC", VA = "0x8F3FDC")]
		public void Flip()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x8EEC58", Offset = "0x8EEC58", VA = "0x8EEC58")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x8F4004", Offset = "0x8F4004", VA = "0x8F4004")]
		public bool SameSide(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x8EED5C", Offset = "0x8EED5C", VA = "0x8EED5C")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x8F4044", Offset = "0x8F4044", VA = "0x8F4044")]
		public void InverseTransform(ExploderTransform transform)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x8F1344", Offset = "0x8F1344", VA = "0x8F1344")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x20004A8")]
	public class Polygon
	{
		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x8F1434", Offset = "0x8F1434", VA = "0x8F1434")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x8F40C0", Offset = "0x8F40C0", VA = "0x8F40C0")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x8F14E4", Offset = "0x8F14E4", VA = "0x8F14E4")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x8F41A8", Offset = "0x8F41A8", VA = "0x8F41A8")]
		public bool IsPolygonInside(Polygon polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x8F1608", Offset = "0x8F1608", VA = "0x8F1608")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x8F16B8", Offset = "0x8F16B8", VA = "0x8F16B8")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x8F41F4", Offset = "0x8F41F4", VA = "0x8F41F4")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x8F43D8", Offset = "0x8F43D8", VA = "0x8F43D8")]
		private bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004A9")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x170002E4")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x8F46BC", Offset = "0x8F46BC", VA = "0x8F46BC", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x8E522C", Offset = "0x8E522C", VA = "0x8E522C")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x8F46C4", Offset = "0x8F46C4", VA = "0x8F46C4", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x8F4808", Offset = "0x8F4808", VA = "0x8F4808", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x8F4894", Offset = "0x8F4894", VA = "0x8F4894", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x8F49F0", Offset = "0x8F49F0", VA = "0x8F49F0", Slot = "8")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x8F5664", Offset = "0x8F5664", VA = "0x8F5664")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AA")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x170002E5")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x8F58FC", Offset = "0x8F58FC", VA = "0x8F58FC", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x8E50C8", Offset = "0x8E50C8", VA = "0x8E50C8")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x8F4738", Offset = "0x8F4738", VA = "0x8F4738", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x8F5934", Offset = "0x8F5934", VA = "0x8F5934", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x8F5974", Offset = "0x8F5974", VA = "0x8F5974", Slot = "8")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x8F551C", Offset = "0x8F551C", VA = "0x8F551C")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AB")]
	internal class CutterWorker
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x8F4454", Offset = "0x8F4454", VA = "0x8F4454")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x8F47A8", Offset = "0x8F47A8", VA = "0x8F47A8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x8F57B0", Offset = "0x8F57B0", VA = "0x8F57B0")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x8F5844", Offset = "0x8F5844", VA = "0x8F5844")]
		public void Run()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x8F6248", Offset = "0x8F6248", VA = "0x8F6248")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x8F49D4", Offset = "0x8F49D4", VA = "0x8F49D4")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x8F6BFC", Offset = "0x8F6BFC", VA = "0x8F6BFC")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x8F4874", Offset = "0x8F4874", VA = "0x8F4874")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x8F630C", Offset = "0x8F630C", VA = "0x8F630C")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public enum TaskType
	{
		[Token(Token = "0x4001932")]
		None,
		[Token(Token = "0x4001933")]
		Preprocess,
		[Token(Token = "0x4001934")]
		ProcessCutter,
		[Token(Token = "0x4001935")]
		PartialSeparator,
		[Token(Token = "0x4001936")]
		IsolateMeshIslands,
		[Token(Token = "0x4001937")]
		PostprocessExplode,
		[Token(Token = "0x4001938")]
		PostprocessCrack,
		[Token(Token = "0x4001939")]
		TaskMax
	}
	[Token(Token = "0x20004AD")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x170002E6")]
		public abstract TaskType Type
		{
			[Token(Token = "0x6001A42")]
			get;
		}

		[Token(Token = "0x170002E7")]
		public Stopwatch Watch
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x8F6C04", Offset = "0x8F6C04", VA = "0x8F6C04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x8F6C0C", Offset = "0x8F6C0C", VA = "0x8F6C0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x8F5870", Offset = "0x8F5870", VA = "0x8F5870")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x8F6C14", Offset = "0x8F6C14", VA = "0x8F6C14", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x8F5904", Offset = "0x8F5904", VA = "0x8F5904", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001A48")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x20004AE")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x170002E8")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x8F6C18", Offset = "0x8F6C18", VA = "0x8F6C18", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x8E5500", Offset = "0x8E5500", VA = "0x8E5500")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x8F6C20", Offset = "0x8F6C20", VA = "0x8F6C20", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x8F6CF0", Offset = "0x8F6CF0", VA = "0x8F6CF0", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004AF")]
	internal class PartialSeparator : ExploderTask
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x170002E9")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x8F73A8", Offset = "0x8F73A8", VA = "0x8F73A8", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x8E5598", Offset = "0x8E5598", VA = "0x8E5598")]
		public PartialSeparator(Core Core)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x8F73B0", Offset = "0x8F73B0", VA = "0x8F73B0", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x8F73B4", Offset = "0x8F73B4", VA = "0x8F73B4", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x8F73E0", Offset = "0x8F73E0", VA = "0x8F73E0")]
		private void Separate()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x8F78BC", Offset = "0x8F78BC", VA = "0x8F78BC")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x8F78C0", Offset = "0x8F78C0", VA = "0x8F78C0", Slot = "6")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x170002EA")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x8F79F0", Offset = "0x8F79F0", VA = "0x8F79F0", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x8E5594", Offset = "0x8E5594", VA = "0x8E5594")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x8F79F8", Offset = "0x8F79F8", VA = "0x8F79F8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x8F7C1C", Offset = "0x8F7C1C", VA = "0x8F7C1C", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B2")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x170002EB")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x8F92DC", Offset = "0x8F92DC", VA = "0x8F92DC", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x8F92D4", Offset = "0x8F92D4", VA = "0x8F92D4")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x8F92E4", Offset = "0x8F92E4", VA = "0x8F92E4", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x8FA3F0", Offset = "0x8FA3F0", VA = "0x8FA3F0", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B3")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x20004B4")]
		private struct MeshData
		{
			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x170002EC")]
		public override TaskType Type
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x8FB828", Offset = "0x8FB828", VA = "0x8FB828", Slot = "4")]
			get
			{
				return default(TaskType);
			}
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x8FB788", Offset = "0x8FB788", VA = "0x8FB788")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x8FB830", Offset = "0x8FB830", VA = "0x8FB830", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x8FB894", Offset = "0x8FB894", VA = "0x8FB894", Slot = "7")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x8FBBDC", Offset = "0x8FBBDC", VA = "0x8FBBDC")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x8FCF84", Offset = "0x8FCF84", VA = "0x8FCF84")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x8FD754", Offset = "0x8FD754", VA = "0x8FD754")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x8FCE38", Offset = "0x8FCE38", VA = "0x8FCE38")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004B5")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x8FD958", Offset = "0x8FD958", VA = "0x8FD958")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x20004B7")]
		public enum ThreadOptions
		{
			[Token(Token = "0x4001966")]
			WorkerThread1x,
			[Token(Token = "0x4001967")]
			WorkerThread2x,
			[Token(Token = "0x4001968")]
			WorkerThread3x,
			[Token(Token = "0x4001969")]
			Disabled
		}

		[Token(Token = "0x20004B8")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x400196B")]
			Random,
			[Token(Token = "0x400196C")]
			Rectangular
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public class SFXOption
		{
			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip ExplosionSoundClip;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip FragmentSoundClip;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject FragmentEmitter;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float HitSoundTimeout;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int EmitersMax;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float ParticleTimeout;

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x8FE0F4", Offset = "0x8FE0F4", VA = "0x8FE0F4")]
			public SFXOption Clone()
			{
				return null;
			}

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x8FE078", Offset = "0x8FE078", VA = "0x8FE078")]
			public SFXOption()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public class FragmentOption
		{
			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool FreezePositionX;

			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool FreezePositionY;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool FreezePositionZ;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool FreezeRotationX;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool FreezeRotationY;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool FreezeRotationZ;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Layer;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float MaxVelocity;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool InheritParentPhysicsProperty;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float Mass;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool UseGravity;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool DisableColliders;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float AngularVelocity;

			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float MaxAngularVelocity;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 AngularVelocityVector;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool RandomAngularVelocityVector;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material FragmentMaterial1;

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x8FE194", Offset = "0x8FE194", VA = "0x8FE194")]
			public FragmentOption Clone()
			{
				return null;
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x8FE080", Offset = "0x8FE080", VA = "0x8FE080")]
			public FragmentOption()
			{
			}
		}

		[Token(Token = "0x20004BB")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x20004BC")]
		public enum ExplosionState
		{
			[Token(Token = "0x4001985")]
			ExplosionStarted,
			[Token(Token = "0x4001986")]
			ExplosionFinished,
			[Token(Token = "0x4001987")]
			ObjectCracked
		}

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 AdditionalForceVector;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ShouldUseAdditionalForceVector;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool UseForceVector;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int TargetFragments;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DeactivateTimeout;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool MeshColliders;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool ExplodeSelf;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool HideSelf;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool ExplodeFragments;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool SplitMeshIslands;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool DisableTriangulation;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int FragmentPoolSize;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool Use2DCollision;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SFXOption SFXOptions;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Core core;

		[Token(Token = "0x170002ED")]
		public int ProcessingFrames
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x8FDB6C", Offset = "0x8FDB6C", VA = "0x8FDB6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x8FD960", Offset = "0x8FD960", VA = "0x8FD960")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x8FD968", Offset = "0x8FD968", VA = "0x8FD968")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x8FD998", Offset = "0x8FD998", VA = "0x8FD998")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x8FD9A0", Offset = "0x8FD9A0", VA = "0x8FD9A0")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x8FD9CC", Offset = "0x8FD9CC", VA = "0x8FD9CC")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x8FD9D4", Offset = "0x8FD9D4", VA = "0x8FD9D4")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x8FD9FC", Offset = "0x8FD9FC", VA = "0x8FD9FC")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x8FDA04", Offset = "0x8FDA04", VA = "0x8FDA04")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x8FDA34", Offset = "0x8FDA34", VA = "0x8FDA34")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x8FDA3C", Offset = "0x8FDA3C", VA = "0x8FDA3C")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x8FDA68", Offset = "0x8FDA68", VA = "0x8FDA68")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x8FDAE8", Offset = "0x8FDAE8", VA = "0x8FDAE8")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x8FDB04", Offset = "0x8FDB04", VA = "0x8FDB04")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x8FDB24", Offset = "0x8FDB24", VA = "0x8FDB24")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x8FDB48", Offset = "0x8FDB48", VA = "0x8FDB48")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x8FDB88", Offset = "0x8FDB88", VA = "0x8FDB88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x8FDBF8", Offset = "0x8FDBF8", VA = "0x8FDBF8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x8FDD24", Offset = "0x8FDD24", VA = "0x8FDD24")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x8FDE14", Offset = "0x8FDE14", VA = "0x8FDE14")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x8FB154", Offset = "0x8FB154", VA = "0x8FB154")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x8FE414", Offset = "0x8FE414", VA = "0x8FE414")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x4001990")]
		Never,
		[Token(Token = "0x4001991")]
		OutsideOfCamera,
		[Token(Token = "0x4001992")]
		Timeout
	}
	[Token(Token = "0x20004BF")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x4001994")]
		None,
		[Token(Token = "0x4001995")]
		FadeoutAlpha,
		[Token(Token = "0x4001996")]
		ScaleDown
	}
	[Token(Token = "0x20004C0")]
	public class Fragment : MonoBehaviour
	{
		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool explodable;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool cracked;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DeactivateOptions deactivateOptions;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deactivateTimeout;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FadeoutOptions fadeoutOptions;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool disableColliders;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float disableCollidersTimeout;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool visible;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool activeObj;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minSizeToExplode;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshCollider meshCollider;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BoxCollider boxCollider;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Collider generalCollider;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource audioSource;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip audioClip;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject particleChild;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PolygonCollider2D polygonCollider2D;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Rigidbody2D rigid2D;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ExploderOption options;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Rigidbody rigidBody;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 originalScale;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float visibilityCheckTimer;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float deactivateTimer;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float emmitersTimeout;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x8FE438", Offset = "0x8FE438", VA = "0x8FE438")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x8FE4C4", Offset = "0x8FE4C4", VA = "0x8FE4C4")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x8FE550", Offset = "0x8FE550", VA = "0x8FE550")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x8FE5DC", Offset = "0x8FE5DC", VA = "0x8FE5DC")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x8FE670", Offset = "0x8FE670", VA = "0x8FE670")]
		public void SetSFX(ExploderObject.SFXOption sfx, bool allowParticle)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x8FE9CC", Offset = "0x8FE9CC", VA = "0x8FE9CC")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x8FEAB0", Offset = "0x8FEAB0", VA = "0x8FEAB0")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x8FB278", Offset = "0x8FB278", VA = "0x8FB278")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, Vector3 mainCentroid, ExploderObject.FragmentOption fragmentOption, bool useForceVector, Vector3 ForceVector, float force, GameObject original, int targetFragments, Vector3 additionalForceVector, bool shouldUseAdditionalForce)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x8FECC8", Offset = "0x8FECC8", VA = "0x8FECC8")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, Vector3 mainCentroid, ExploderObject.FragmentOption fragmentOption, bool useForceVector, Vector2 ForceVector, float force, GameObject original, int targetFragments)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x8FEFD0", Offset = "0x8FEFD0", VA = "0x8FEFD0")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x8FB1A8", Offset = "0x8FB1A8", VA = "0x8FB1A8")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x8FF1C8", Offset = "0x8FF1C8", VA = "0x8FF1C8")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x8FF324", Offset = "0x8FF324", VA = "0x8FF324")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x8FADC8", Offset = "0x8FADC8", VA = "0x8FADC8")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x8FF464", Offset = "0x8FF464", VA = "0x8FF464")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x8FF484", Offset = "0x8FF484", VA = "0x8FF484")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x8FFB28", Offset = "0x8FFB28", VA = "0x8FFB28")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float fragmentSoundTimeout;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float HitSoundTimeout;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MaxEmitters;

		[Token(Token = "0x170002EE")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x8F94E8", Offset = "0x8F94E8", VA = "0x8F94E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public int PoolSize
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x8FFD4C", Offset = "0x8FFD4C", VA = "0x8FFD4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F0")]
		public Fragment[] Pool
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x8FFD68", Offset = "0x8FFD68", VA = "0x8FFD68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x8FFB48", Offset = "0x8FFB48", VA = "0x8FFB48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x8FFBE4", Offset = "0x8FFBE4", VA = "0x8FFBE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x8F9F48", Offset = "0x8F9F48", VA = "0x8F9F48")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x8FDA90", Offset = "0x8FDA90", VA = "0x8FDA90")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x8F95F8", Offset = "0x8F95F8", VA = "0x8F95F8")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision, GameObject fragmentPrefab)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x8FFD70", Offset = "0x8FFD70", VA = "0x8FFD70")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x8FFE4C", Offset = "0x8FFE4C", VA = "0x8FFE4C")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x8FFEA8", Offset = "0x8FFEA8", VA = "0x8FFEA8")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x8FFC44", Offset = "0x8FFC44", VA = "0x8FFC44")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x8FFF04", Offset = "0x8FFF04", VA = "0x8FFF04")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x8F9B0C", Offset = "0x8F9B0C", VA = "0x8F9B0C")]
		public void SetDeactivateOptions(DeactivateOptions options, FadeoutOptions fadeoutOptions, float timeout)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x8F9B64", Offset = "0x8F9B64", VA = "0x8F9B64")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x8F9D38", Offset = "0x8F9D38", VA = "0x8F9D38")]
		public void SetFragmentPhysicsOptions(ExploderObject.FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x8F9ECC", Offset = "0x8F9ECC", VA = "0x8F9ECC")]
		public void SetSFXOptions(ExploderObject.SFXOption sfx)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x8FFFBC", Offset = "0x8FFFBC", VA = "0x8FFFBC")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x900194", Offset = "0x900194", VA = "0x900194")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x8FEAA4", Offset = "0x8FEAA4", VA = "0x8FEAA4")]
		public void OnFragmentHit()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x8FEA94", Offset = "0x8FEA94", VA = "0x8FEA94")]
		public bool CanPlayHitSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x9001C0", Offset = "0x9001C0", VA = "0x9001C0")]
		public FragmentPool()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public static class Profiler
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Stopwatch> timeSegments;

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x9001D4", Offset = "0x9001D4", VA = "0x9001D4")]
		public static void Start(string key)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x900310", Offset = "0x900310", VA = "0x900310")]
		public static void End(string key)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x90039C", Offset = "0x90039C", VA = "0x90039C")]
		public static string[] PrintResults()
		{
			return null;
		}
	}
	[Token(Token = "0x20004C3")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x9006F8", Offset = "0x9006F8", VA = "0x9006F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x90074C", Offset = "0x90074C", VA = "0x90074C")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x90082C", Offset = "0x90082C", VA = "0x90082C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x900894", Offset = "0x900894", VA = "0x900894")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public static class ExploderUtils
	{
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x9008A8", Offset = "0x9008A8", VA = "0x9008A8")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Assert(bool condition, string message)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x90094C", Offset = "0x90094C", VA = "0x90094C")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Warning(bool condition, string message)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x9009E8", Offset = "0x9009E8", VA = "0x9009E8")]
		[Conditional("UNITY_EDITOR_NO_DEBUG")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x8FD770", Offset = "0x8FD770", VA = "0x8FD770")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x8FB070", Offset = "0x8FB070", VA = "0x8FB070")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x900A40", Offset = "0x900A40", VA = "0x900A40")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x900114", Offset = "0x900114", VA = "0x900114")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x900A44", Offset = "0x900A44", VA = "0x900A44")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x8FAE98", Offset = "0x8FAE98", VA = "0x8FAE98")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x8FAF8C", Offset = "0x8FAF8C", VA = "0x8FAF8C")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x900AD4", Offset = "0x900AD4", VA = "0x900AD4")]
		public static bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004C5")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x900BB0", Offset = "0x900BB0", VA = "0x900BB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x900CA8", Offset = "0x900CA8", VA = "0x900CA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x900E70", Offset = "0x900E70", VA = "0x900E70")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x170002F1")]
		public static T Instance
		{
			[Token(Token = "0x6001AC1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC2")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC3")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x20004C7")]
	public static class Compatibility
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x900E80", Offset = "0x900E80", VA = "0x900E80")]
		public static void SetVisible(GameObject obj, bool status, bool includeInactive)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x900FD4", Offset = "0x900FD4", VA = "0x900FD4")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x901054", Offset = "0x901054", VA = "0x901054")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x9010E4", Offset = "0x9010E4", VA = "0x9010E4")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x9011D8", Offset = "0x9011D8", VA = "0x9011D8")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x9012BC", Offset = "0x9012BC", VA = "0x9012BC")]
		public static void Destroy(UnityEngine.Object obj, bool allowDestroyingAssets)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x901354", Offset = "0x901354", VA = "0x901354")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x901360", Offset = "0x901360", VA = "0x901360")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x901374", Offset = "0x901374", VA = "0x901374")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004C8")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x901390", Offset = "0x901390", VA = "0x901390")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x901418", Offset = "0x901418", VA = "0x901418")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	internal class Hull2D
	{
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x901420", Offset = "0x901420", VA = "0x901420")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x901520", Offset = "0x901520", VA = "0x901520")]
		public static void DumpArray(Vector2[] array)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x901610", Offset = "0x901610", VA = "0x901610")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x90187C", Offset = "0x90187C", VA = "0x90187C")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x9018A4", Offset = "0x9018A4", VA = "0x9018A4")]
		public Hull2D()
		{
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x20004CB")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x901968", Offset = "0x901968", VA = "0x901968")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x9019F4", Offset = "0x9019F4", VA = "0x9019F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x901A70", Offset = "0x901A70", VA = "0x901A70")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x901AE8", Offset = "0x901AE8", VA = "0x901AE8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x901B8C", Offset = "0x901B8C", VA = "0x901B8C")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x20004CC")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x901B94", Offset = "0x901B94", VA = "0x901B94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x901BE4", Offset = "0x901BE4", VA = "0x901BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x901CA0", Offset = "0x901CA0", VA = "0x901CA0")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x901D10", Offset = "0x901D10", VA = "0x901D10")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x901D7C", Offset = "0x901D7C", VA = "0x901D7C")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x20004CE")]
		public enum RotationAxes
		{
			[Token(Token = "0x40019DD")]
			MouseXAndY,
			[Token(Token = "0x40019DE")]
			MouseX,
			[Token(Token = "0x40019DF")]
			MouseY
		}

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x901D84", Offset = "0x901D84", VA = "0x901D84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x9020A4", Offset = "0x9020A4", VA = "0x9020A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x902160", Offset = "0x902160", VA = "0x902160")]
		public void Kick()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x9021B4", Offset = "0x9021B4", VA = "0x9021B4")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x9021D4", Offset = "0x9021D4", VA = "0x9021D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x9021E8", Offset = "0x9021E8", VA = "0x9021E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x902534", Offset = "0x902534", VA = "0x902534")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x902404", Offset = "0x902404", VA = "0x902404")]
		public void Throw()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x902424", Offset = "0x902424", VA = "0x902424")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x90253C", Offset = "0x90253C", VA = "0x90253C")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x902690", Offset = "0x902690", VA = "0x902690")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x9026B0", Offset = "0x9026B0", VA = "0x9026B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x902748", Offset = "0x902748", VA = "0x902748")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x902750", Offset = "0x902750", VA = "0x902750", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x902918", Offset = "0x902918", VA = "0x902918")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x902A3C", Offset = "0x902A3C", VA = "0x902A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x902A8C", Offset = "0x902A8C", VA = "0x902A8C")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x902AF8", Offset = "0x902AF8", VA = "0x902AF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x902BA8", Offset = "0x902BA8", VA = "0x902BA8", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x902CF0", Offset = "0x902CF0", VA = "0x902CF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x902D24", Offset = "0x902D24", VA = "0x902D24")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x902D28", Offset = "0x902D28", VA = "0x902D28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x902D2C", Offset = "0x902D2C", VA = "0x902D2C", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x903158", Offset = "0x903158", VA = "0x903158")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x90315C", Offset = "0x90315C", VA = "0x90315C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x903198", Offset = "0x903198", VA = "0x903198")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x9031F0", Offset = "0x9031F0", VA = "0x9031F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x903300", Offset = "0x903300", VA = "0x903300")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x20004D6")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x903314", Offset = "0x903314", VA = "0x903314")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x903368", Offset = "0x903368", VA = "0x903368")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x903404", Offset = "0x903404", VA = "0x903404")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x903428", Offset = "0x903428", VA = "0x903428")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x9035D0", Offset = "0x9035D0", VA = "0x9035D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x903974", Offset = "0x903974", VA = "0x903974")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x903ADC", Offset = "0x903ADC", VA = "0x903ADC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x903B64", Offset = "0x903B64", VA = "0x903B64")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x903B7C", Offset = "0x903B7C", VA = "0x903B7C")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x903C18", Offset = "0x903C18", VA = "0x903C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x903E44", Offset = "0x903E44", VA = "0x903E44")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x903E4C", Offset = "0x903E4C", VA = "0x903E4C")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x903E58", Offset = "0x903E58", VA = "0x903E58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x9042E4", Offset = "0x9042E4", VA = "0x9042E4")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public enum TargetType
	{
		[Token(Token = "0x4001A1E")]
		DestroyableObject,
		[Token(Token = "0x4001A1F")]
		UseObject,
		[Token(Token = "0x4001A20")]
		Default,
		[Token(Token = "0x4001A21")]
		None
	}
	[Token(Token = "0x20004DA")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x170002F2")]
		public static TargetManager Instance
		{
			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0x9042F4", Offset = "0x9042F4", VA = "0x9042F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x90433C", Offset = "0x90433C", VA = "0x90433C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x904394", Offset = "0x904394", VA = "0x904394")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x9043EC", Offset = "0x9043EC", VA = "0x9043EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x904A20", Offset = "0x904A20", VA = "0x904A20")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x904B10", Offset = "0x904B10", VA = "0x904B10")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x904C08", Offset = "0x904C08", VA = "0x904C08")]
		public TargetManager()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x904D00", Offset = "0x904D00", VA = "0x904D00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x904D0C", Offset = "0x904D0C", VA = "0x904D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x904DAC", Offset = "0x904DAC", VA = "0x904DAC")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x902840", Offset = "0x902840", VA = "0x902840", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x904DB4", Offset = "0x904DB4", VA = "0x904DB4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x902A90", Offset = "0x902A90", VA = "0x902A90")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x904E08", Offset = "0x904E08", VA = "0x904E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x904EF8", Offset = "0x904EF8", VA = "0x904EF8")]
		public WeaponManager()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x904F00", Offset = "0x904F00", VA = "0x904F00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x905288", Offset = "0x905288", VA = "0x905288")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x905370", Offset = "0x905370", VA = "0x905370")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x9054BC", Offset = "0x9054BC", VA = "0x9054BC")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x905554", Offset = "0x905554", VA = "0x905554")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x905558", Offset = "0x905558", VA = "0x905558")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x905550", Offset = "0x905550", VA = "0x905550")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x90555C", Offset = "0x90555C", VA = "0x90555C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x905680", Offset = "0x905680", VA = "0x905680")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class DemoClickPartialExplode : MonoBehaviour
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x905770", Offset = "0x905770", VA = "0x905770")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x9057D0", Offset = "0x9057D0", VA = "0x9057D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x9059E4", Offset = "0x9059E4", VA = "0x9059E4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x905A84", Offset = "0x905A84", VA = "0x905A84")]
		public DemoClickPartialExplode()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class DemoSelfExplode : MonoBehaviour
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x905B84", Offset = "0x905B84", VA = "0x905B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x905C14", Offset = "0x905C14", VA = "0x905C14")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x905C80", Offset = "0x905C80", VA = "0x905C80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x905DC8", Offset = "0x905DC8", VA = "0x905DC8")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x905EDC", Offset = "0x905EDC", VA = "0x905EDC")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x905EE0", Offset = "0x905EE0", VA = "0x905EE0")]
		public DemoSelfExplode()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class DemoSimple : MonoBehaviour
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x905EE8", Offset = "0x905EE8", VA = "0x905EE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x906264", Offset = "0x906264", VA = "0x906264")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x90644C", Offset = "0x90644C", VA = "0x90644C")]
		public DemoSimple()
		{
		}
	}
}
namespace WenklyStudio
{
	[Token(Token = "0x20004E5")]
	public class BalistaController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks, IWithIcon
	{
		[Token(Token = "0x20004E6")]
		[CompilerGenerated]
		private sealed class <ReloadBalista>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BalistaController <>4__this;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B63")]
				[Address(RVA = "0x907B08", Offset = "0x907B08", VA = "0x907B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B65")]
				[Address(RVA = "0x907B50", Offset = "0x907B50", VA = "0x907B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x9076A0", Offset = "0x9076A0", VA = "0x9076A0")]
			[DebuggerHidden]
			public <ReloadBalista>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x907A24", Offset = "0x907A24", VA = "0x907A24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x907A28", Offset = "0x907A28", VA = "0x907A28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0x907B10", Offset = "0x907B10", VA = "0x907B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<OwnershipChanger> OwnershipChangers;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform balistaStand;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform balista;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BalistaShootController shootController;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BalistaAnimatorController balistaAnimatorController;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BalistaSoundController balistaSoundController;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BalistaBoltVisibilityController balistaBoltController;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material balistaMaterial;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BalistaHandsController balistaHands;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int maxDistance;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 rotationOffset;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 standOffSet;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform leftHandTransform;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform rightHandTransform;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BalistaHandsPositionReference handsReferences;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool canShoot;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isGrabbed;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int balistaUserId;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool shouldResetHands;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool areHandsActive;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WaitForSecondsRealtime timeToStartReload;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WaitForSecondsRealtime timeToEndReload;

		[Token(Token = "0x170002F3")]
		public BalistaHandsPositionReference HandsReferences
		{
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0x90653C", Offset = "0x90653C", VA = "0x90653C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x906544", Offset = "0x906544", VA = "0x906544")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public bool AreHandsActive
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x90669C", Offset = "0x90669C", VA = "0x90669C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x906658", Offset = "0x906658", VA = "0x906658")]
			set
			{
			}
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x9066A4", Offset = "0x9066A4", VA = "0x9066A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x906A20", Offset = "0x906A20", VA = "0x906A20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x906D94", Offset = "0x906D94", VA = "0x906D94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x907090", Offset = "0x907090", VA = "0x907090")]
		private void GrabBalista(Transform hand)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x90739C", Offset = "0x90739C", VA = "0x90739C")]
		private void ReleaseBalista(Transform hand)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x907458", Offset = "0x907458", VA = "0x907458")]
		private void Shoot(Transform hand)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x906E20", Offset = "0x906E20", VA = "0x906E20")]
		private void ResetBallista()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x9065C4", Offset = "0x9065C4", VA = "0x9065C4")]
		private bool ShouldResetLastPlayerHands()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x907508", Offset = "0x907508", VA = "0x907508")]
		private void ResetHandsToArcheryState()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x907564", Offset = "0x907564", VA = "0x907564")]
		private void ResetHandToGameOverState()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x907470", Offset = "0x907470", VA = "0x907470")]
		private void ShootAndReloadBalista()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x906F60", Offset = "0x906F60", VA = "0x906F60")]
		private bool IsPlayerHoldingBalista()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x906DE0", Offset = "0x906DE0", VA = "0x906DE0")]
		private bool PlayerOwnsBallista()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x906FB8", Offset = "0x906FB8", VA = "0x906FB8")]
		private void SetBalistaOnHoldPosition()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x907634", Offset = "0x907634", VA = "0x907634")]
		private Vector3 CalulateHandsMidPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x9075C0", Offset = "0x9075C0", VA = "0x9075C0")]
		[IteratorStateMachine(typeof(<ReloadBalista>d__44))]
		private IEnumerator ReloadBalista()
		{
			return null;
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x9074E0", Offset = "0x9074E0", VA = "0x9074E0")]
		private static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x907250", Offset = "0x907250", VA = "0x907250")]
		private void TransferBalistaOwnership()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x9076C8", Offset = "0x9076C8", VA = "0x9076C8", Slot = "10")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x9076D8", Offset = "0x9076D8", VA = "0x9076D8", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x9077D8", Offset = "0x9077D8", VA = "0x9077D8", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x9076DC", Offset = "0x9076DC", VA = "0x9076DC")]
		private void ResetBallistaIfOwnerDoesntExist()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x9077DC", Offset = "0x9077DC", VA = "0x9077DC", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x907910", Offset = "0x907910", VA = "0x907910", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x907914", Offset = "0x907914", VA = "0x907914", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x907918", Offset = "0x907918", VA = "0x907918", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x90791C", Offset = "0x90791C", VA = "0x90791C")]
		public BalistaController()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class HeadColliderController : MonoBehaviour
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnHornHeadTriggerEnter;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action OnHornHeadTriggerExit;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SalvaHandleController salvaHandleController;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x907B58", Offset = "0x907B58", VA = "0x907B58")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x907C68", Offset = "0x907C68", VA = "0x907C68")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x907D78", Offset = "0x907D78", VA = "0x907D78")]
		public HeadColliderController()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x20004E9")]
		private enum RotationAxes
		{
			[Token(Token = "0x4001A6D")]
			MouseXAndY,
			[Token(Token = "0x4001A6E")]
			MouseX,
			[Token(Token = "0x4001A6F")]
			MouseY
		}

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> Mirrors;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject LightBulb;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle RecursionToggle;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationModifier;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float moveModifier;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material lightBulbMaterial;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RotationAxes axes;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float sensitivityX;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float sensitivityY;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float minimumX;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float maximumX;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float minimumY;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float maximumY;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float rotationX;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float rotationY;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x907D80", Offset = "0x907D80", VA = "0x907D80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x907E44", Offset = "0x907E44", VA = "0x907E44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x908760", Offset = "0x908760", VA = "0x908760")]
		public void MirrorRecursionToggled()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x908764", Offset = "0x908764", VA = "0x908764")]
		public void ChangeMirrorRecursion()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x908614", Offset = "0x908614", VA = "0x908614")]
		private void UpdateMovement()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x907E6C", Offset = "0x907E6C", VA = "0x907E6C")]
		private void RotateMirror()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x907FEC", Offset = "0x907FEC", VA = "0x907FEC")]
		private void MoveLightBulb()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x908160", Offset = "0x908160", VA = "0x908160")]
		private void UpdateMouseLook()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x9088F0", Offset = "0x9088F0", VA = "0x9088F0")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x90892C", Offset = "0x90892C", VA = "0x90892C")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class MirrorCameraScript : MonoBehaviour
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject MirrorObject;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer mirrorRenderer;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material mirrorMaterial;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MirrorScript mirrorScript;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cameraObject;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture reflectionTexture;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Matrix4x4 reflectionMatrix;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int oldReflectionTextureSize;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool renderingMirror;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x908958", Offset = "0x908958", VA = "0x908958")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x908AC4", Offset = "0x908AC4", VA = "0x908AC4")]
		private void CreateRenderTexture()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x908D48", Offset = "0x908D48", VA = "0x908D48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x908D4C", Offset = "0x908D4C", VA = "0x908D4C")]
		private void UpdateCameraProperties(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x908F48", Offset = "0x908F48", VA = "0x908F48")]
		internal void RenderMirror()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x9099C4", Offset = "0x9099C4", VA = "0x9099C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x909848", Offset = "0x909848", VA = "0x909848")]
		private Vector4 CameraSpacePlane(ref Matrix4x4 worldToCameraMatrix, ref Vector3 pos, ref Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x90974C", Offset = "0x90974C", VA = "0x90974C")]
		private void CalculateReflectionMatrix(ref Vector4 plane)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x909A60", Offset = "0x909A60", VA = "0x909A60")]
		private static void CalculateObliqueMatrix(ref Matrix4x4 projection, ref Vector4 clipPlane)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x909BBC", Offset = "0x909BBC", VA = "0x909BBC")]
		private static float Sign(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x909BDC", Offset = "0x909BDC", VA = "0x909BDC")]
		public MirrorCameraScript()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class MirrorReflectionScript : MonoBehaviour
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MirrorCameraScript childScript;

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x909BE4", Offset = "0x909BE4", VA = "0x909BE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x909CFC", Offset = "0x909CFC", VA = "0x909CFC")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x909D14", Offset = "0x909D14", VA = "0x909D14")]
		public MirrorReflectionScript()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class MirrorScript : MonoBehaviour
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Maximum number of per pixel lights that will show in the mirrored image")]
		public int MaximumPerPixelLights;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Texture size for the mirror, depending on how close the player can get to the mirror, this will need to be larger")]
		public int TextureSize;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Subtracted from the near plane of the mirror")]
		public float ClipPlaneOffset;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Far clip plane for mirro camera")]
		public float FarClipPlane;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("What layers will be reflected?")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Add a flare layer to the reflection camera?")]
		public bool AddFlareLayer;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[Tooltip("For quads, the normal points forward (true). For planes, the normal points up (false)")]
		public bool NormalIsForward;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Aspect ratio (width / height). Set to 0 to use default.")]
		public float AspectRatio;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Set to true if you have multiple mirrors facing each other to get an infinite effect, otherwise leave as false for a more realistic mirror effect.")]
		public bool MirrorRecursion;

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x909D1C", Offset = "0x909D1C", VA = "0x909D1C")]
		public MirrorScript()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class PlayerWealthCalculator : MonoBehaviour
	{
		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShopItemsController shopItemsController;

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x909D60", Offset = "0x909D60", VA = "0x909D60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x909D64", Offset = "0x909D64", VA = "0x909D64")]
		public float GetPlayerWealth()
		{
			return default(float);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x909D6C", Offset = "0x909D6C", VA = "0x909D6C")]
		public PlayerWealthCalculator()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class PresentGiftController : MonoBehaviour
	{
		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int goldAmount;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] particleSystemsEnabledOnOpening;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] particleSystemsDisabledOnOpening;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] presentRenderers;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GoldGiftController goldGiftController;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource explosionSound;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool giftHasBeenPicked;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<MenuHand> menuHandsHolding;

		[Token(Token = "0x14000026")]
		public static event Action OnGiftPicked
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x909D74", Offset = "0x909D74", VA = "0x909D74")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x909E50", Offset = "0x909E50", VA = "0x909E50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x909F2C", Offset = "0x909F2C", VA = "0x909F2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x90A034", Offset = "0x90A034", VA = "0x90A034")]
		private void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x90A190", Offset = "0x90A190", VA = "0x90A190")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x90A264", Offset = "0x90A264", VA = "0x90A264")]
		private void PickupGift()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x90A5AC", Offset = "0x90A5AC", VA = "0x90A5AC")]
		public PresentGiftController()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class PresentGiftEnabler : MonoBehaviour
	{
		[Token(Token = "0x4001A92")]
		private const string rewardWasTakenSteamKey = "WasPresentTaken10";

		[Token(Token = "0x4001A93")]
		private const string wasInitializationSuccessfulKey = "WasInitSuc10";

		[Token(Token = "0x4001A94")]
		private const string rewardWasTakenPPEKey = "PresentRewardTaken";

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject presentObject;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerWealthCalculator playerWealthCalculator;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float wealthPresentCoefficient;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int presentGoldConstantValue;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime lastPresentDay;

		[Token(Token = "0x170002F7")]
		public static bool RewardWasTakenPPE
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x90A784", Offset = "0x90A784", VA = "0x90A784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x90A7F0", Offset = "0x90A7F0", VA = "0x90A7F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x90A864", Offset = "0x90A864", VA = "0x90A864")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x90AAC0", Offset = "0x90AAC0", VA = "0x90AAC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x90AB60", Offset = "0x90AB60", VA = "0x90AB60")]
		public void SetGiftTaken()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x90AB68", Offset = "0x90AB68", VA = "0x90AB68")]
		[ContextMenu("Reset Present")]
		private void ResetPresent()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x90A9B4", Offset = "0x90A9B4", VA = "0x90A9B4")]
		private void SetPresentGold()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x90A93C", Offset = "0x90A93C", VA = "0x90A93C")]
		private bool PlayerIsEligible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x90ABD8", Offset = "0x90ABD8", VA = "0x90ABD8")]
		public PresentGiftEnabler()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class CatapultLeverController : MonoBehaviour
	{
		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CatapultController catapultController;

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x90AC30", Offset = "0x90AC30", VA = "0x90AC30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x90AD18", Offset = "0x90AD18", VA = "0x90AD18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x90AE00", Offset = "0x90AE00", VA = "0x90AE00")]
		private void ShootCatapult(Transform hand)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x90AF8C", Offset = "0x90AF8C", VA = "0x90AF8C")]
		public CatapultLeverController()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class DailyRewardController : MonoBehaviour
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject reward;

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x90AF94", Offset = "0x90AF94", VA = "0x90AF94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x90AFB8", Offset = "0x90AFB8", VA = "0x90AFB8")]
		private bool WasDailyRewardTakenToday()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x90B034", Offset = "0x90B034", VA = "0x90B034")]
		private void ActivateReward()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x90B054", Offset = "0x90B054", VA = "0x90B054")]
		public DailyRewardController()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class ExplosiveBarrelFreezeController : MonoBehaviour
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FreezeController freezeController;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FrozenEnemyBreakController frozenEnemyBreakController;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ExplosiveBarrelController explosiveBarrelController;

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x90B05C", Offset = "0x90B05C", VA = "0x90B05C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x90B060", Offset = "0x90B060", VA = "0x90B060")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x90B124", Offset = "0x90B124", VA = "0x90B124")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x90B1B0", Offset = "0x90B1B0", VA = "0x90B1B0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x90B104", Offset = "0x90B104", VA = "0x90B104")]
		private void DisableBarrelExploding()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x90B2F0", Offset = "0x90B2F0", VA = "0x90B2F0")]
		public ExplosiveBarrelFreezeController()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class BowController : MonoBehaviourPun, IPunObservable, IResetable, ISettable
	{
		[Token(Token = "0x4001AA0")]
		private const float distanceFromStringStartPointToBowAnimationTimeMultiplier = 0.75f;

		[Token(Token = "0x4001AA1")]
		private const float minimalBowTensionToShootPC = 0.3f;

		[Token(Token = "0x4001AA2")]
		private const float minimalBowTensionToShootMobile = 0.35f;

		[Token(Token = "0x4001AA3")]
		private const float arrowVelocityMultiplierPC = 0.75f;

		[Token(Token = "0x4001AA4")]
		private const float arrowVelocityMultiplierMobile = 1.5f;

		[Token(Token = "0x4001AA5")]
		private const float bowReleaseAnimationSpeed = 10f;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject arrowPrefab;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform handAttachPoint;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform arrowAttachPoint;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform stringStartPoint;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform bowHandGrip;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform arrowHandGrip;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform arrowHandGripOffseted;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform bowParent;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float arrowVelocityMultiplier;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioSource BowStringShotSound;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SpellSelectController spellSelectController;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Animator bowAnimator;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputActionReference interactionInput;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion bowParentDefaultLocalRotation;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int distancePart;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float lerpValue;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isArrowAttached;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isHandAttached;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float bowAnimationNormalizedTime;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool canRelase;

		[Token(Token = "0x170002F8")]
		public Transform HandAttachPoint
		{
			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0x90B5C8", Offset = "0x90B5C8", VA = "0x90B5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x90B5D0", Offset = "0x90B5D0", VA = "0x90B5D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public Transform ArrowAttachPoint
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0x90B5D8", Offset = "0x90B5D8", VA = "0x90B5D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x90B5E0", Offset = "0x90B5E0", VA = "0x90B5E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public bool IsReleaseAnimationPlaying
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x90B5E8", Offset = "0x90B5E8", VA = "0x90B5E8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x90B5F0", Offset = "0x90B5F0", VA = "0x90B5F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public bool IsHandAttached
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0x90B5FC", Offset = "0x90B5FC", VA = "0x90B5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x90B604", Offset = "0x90B604", VA = "0x90B604")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public bool IsArrowAttached
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x90B648", Offset = "0x90B648", VA = "0x90B648")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x90B650", Offset = "0x90B650", VA = "0x90B650")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public float BowAnimationNormalizedTime
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x90B6B8", Offset = "0x90B6B8", VA = "0x90B6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x90B6C0", Offset = "0x90B6C0", VA = "0x90B6C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		private float MinimalBowTensionToShoot
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x90B700", Offset = "0x90B700", VA = "0x90B700")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002FF")]
		private float ArrowVelocityMultiplier
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x90B76C", Offset = "0x90B76C", VA = "0x90B76C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000300")]
		private Transform ArrowHandGrip
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x90B7D4", Offset = "0x90B7D4", VA = "0x90B7D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000027")]
		public static event Action<GameObject> OnArrowFire
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0x90B2F8", Offset = "0x90B2F8", VA = "0x90B2F8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x90B3C4", Offset = "0x90B3C4", VA = "0x90B3C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action OnShoot
		{
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x90B490", Offset = "0x90B490", VA = "0x90B490")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x90B52C", Offset = "0x90B52C", VA = "0x90B52C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x90B840", Offset = "0x90B840", VA = "0x90B840")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x90B978", Offset = "0x90B978", VA = "0x90B978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x90BB00", Offset = "0x90BB00", VA = "0x90BB00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x90BDDC", Offset = "0x90BDDC", VA = "0x90BDDC")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x90BDE8", Offset = "0x90BDE8", VA = "0x90BDE8")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x90BC20", Offset = "0x90BC20", VA = "0x90BC20")]
		private void UpdateLoadedBow()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x90BD24", Offset = "0x90BD24", VA = "0x90BD24")]
		private void UpdateArrowReleasing()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x90C840", Offset = "0x90C840", VA = "0x90C840")]
		private void OnInputPerformed(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x90C870", Offset = "0x90C870", VA = "0x90C870")]
		private void OnINputCanceled(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x90BCF4", Offset = "0x90BCF4", VA = "0x90BCF4")]
		private void StartArrowReleasing()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x90C8A4", Offset = "0x90C8A4", VA = "0x90C8A4")]
		private void DetachHand()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x90C8D4", Offset = "0x90C8D4", VA = "0x90C8D4")]
		private bool IsBowTensionedEnoughToReleaseArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x90C004", Offset = "0x90C004", VA = "0x90C004")]
		private bool CanShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x90BCB8", Offset = "0x90BCB8", VA = "0x90BCB8")]
		private bool CanReleaseArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x90BE20", Offset = "0x90BE20", VA = "0x90BE20")]
		private void UpdateBowRotation()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x90BC38", Offset = "0x90BC38", VA = "0x90BC38")]
		private void UpdateBowSnappingToController()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x90BF30", Offset = "0x90BF30", VA = "0x90BF30")]
		private void UpdateBowTensionValue()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x90C74C", Offset = "0x90C74C", VA = "0x90C74C")]
		private void TriggerHapticPulseWhenShot()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x90BD88", Offset = "0x90BD88", VA = "0x90BD88")]
		private void RumbleControllerInConstPeriodOfDistance(float distfromStringStartPoint)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x90C8F8", Offset = "0x90C8F8", VA = "0x90C8F8")]
		private void ApplyHaptics()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x90C7F4", Offset = "0x90C7F4", VA = "0x90C7F4")]
		private void PlayReleaseAnimation()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x90C038", Offset = "0x90C038", VA = "0x90C038")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x90CA60", Offset = "0x90CA60", VA = "0x90CA60")]
		private void InstantiateAblitity(GameObject instance, string abilityType)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x90CD90", Offset = "0x90CD90", VA = "0x90CD90")]
		[PunRPC]
		private void AssignAbility(int arrowId, int abilityId)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x90CE30", Offset = "0x90CE30", VA = "0x90CE30")]
		[PunRPC]
		private void ReleaseArrow(int ArrowPhotonViewID, Vector3 Position, Vector3 Rotation, Vector3 loacalscale, Vector3 arrowVelocity)
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x90C9E4", Offset = "0x90C9E4", VA = "0x90C9E4")]
		private Vector3 CountArrowStartingVelocity(Vector3 forward, float distFromStringToHand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x90D044", Offset = "0x90D044", VA = "0x90D044")]
		public static void TriggerOnArrowFireEvent(GameObject currentArrow)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x90D0B0", Offset = "0x90D0B0", VA = "0x90D0B0", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x90BAB8", Offset = "0x90BAB8", VA = "0x90BAB8", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x90D2A8", Offset = "0x90D2A8", VA = "0x90D2A8", Slot = "6")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x90D2D4", Offset = "0x90D2D4", VA = "0x90D2D4")]
		public BowController()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class FastShootingBlocker : MonoBehaviourPun
	{
		[Token(Token = "0x20004F6")]
		[CompilerGenerated]
		private sealed class <BlockShootingCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastShootingBlocker <>4__this;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE4")]
				[Address(RVA = "0x90E668", Offset = "0x90E668", VA = "0x90E668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE6")]
				[Address(RVA = "0x90E6B0", Offset = "0x90E6B0", VA = "0x90E6B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x90E534", Offset = "0x90E534", VA = "0x90E534")]
			[DebuggerHidden]
			public <BlockShootingCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x90E564", Offset = "0x90E564", VA = "0x90E564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x90E568", Offset = "0x90E568", VA = "0x90E568", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x90E670", Offset = "0x90E670", VA = "0x90E670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ABE")]
		private const float minSecondsBetweenShots = 0.25f;

		[Token(Token = "0x4001ABF")]
		private const float hapticForce = 1f;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BowController bowController;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HandsController handsController;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticsController.Controller controllerForHaptic;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x90E2EC", Offset = "0x90E2EC", VA = "0x90E2EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x90E414", Offset = "0x90E414", VA = "0x90E414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x90E4A0", Offset = "0x90E4A0", VA = "0x90E4A0")]
		private void BlockShooting()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x90E4C0", Offset = "0x90E4C0", VA = "0x90E4C0")]
		[IteratorStateMachine(typeof(<BlockShootingCoroutine>d__9))]
		private IEnumerator BlockShootingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x90E55C", Offset = "0x90E55C", VA = "0x90E55C")]
		public FastShootingBlocker()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class SpellSelectController : MonoBehaviourPun
	{
		[Token(Token = "0x4001AC7")]
		private const float minTouchpadDeviation = 0.3f;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spellIndex;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BowController bowController;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpellsGUI spellsGUI;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TouchpadSelectController touchpadSelectController;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputActionReference interactionInput;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isVisible;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int? activeSpellIndex;

		[Token(Token = "0x17000303")]
		public int? ActiveSpellIndex
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0x90E6B8", Offset = "0x90E6B8", VA = "0x90E6B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x90E6C0", Offset = "0x90E6C0", VA = "0x90E6C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public SpellInGameSlot ActiveSpellInSlot
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x90E6C8", Offset = "0x90E6C8", VA = "0x90E6C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public string GetActiveSpellName
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x90E764", Offset = "0x90E764", VA = "0x90E764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x90E824", Offset = "0x90E824", VA = "0x90E824")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x90E884", Offset = "0x90E884", VA = "0x90E884")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x90E8C4", Offset = "0x90E8C4", VA = "0x90E8C4")]
		public void SetSpellOnCooldown()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x90E85C", Offset = "0x90E85C", VA = "0x90E85C")]
		private void HandleSpellSelection()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x90E8E0", Offset = "0x90E8E0", VA = "0x90E8E0")]
		private bool SelectSpellAndSpellCanBeSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x90E9A0", Offset = "0x90E9A0", VA = "0x90E9A0")]
		private void SelectActiveSpell()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x90EA74", Offset = "0x90EA74", VA = "0x90EA74")]
		private void SelectActiveSpell(int selectedIndex)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x90EB34", Offset = "0x90EB34", VA = "0x90EB34")]
		private void ShowGUI(int selectedIndex)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x90EA2C", Offset = "0x90EA2C", VA = "0x90EA2C")]
		private void RemoveActiveSpell()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x90EB74", Offset = "0x90EB74", VA = "0x90EB74")]
		private void TryToRefreshSpellGUI(int selectedIndex)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x90E6F4", Offset = "0x90E6F4", VA = "0x90E6F4")]
		private SlotPostion GetSlotPositionByIndex(int? index)
		{
			return default(SlotPostion);
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x90EC1C", Offset = "0x90EC1C", VA = "0x90EC1C")]
		public SpellSelectController()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class GesturesInputController : MonoBehaviour
	{
		[Token(Token = "0x20004F9")]
		public enum TouchpadButton
		{
			[Token(Token = "0x4001AD7")]
			Up,
			[Token(Token = "0x4001AD8")]
			Down,
			[Token(Token = "0x4001AD9")]
			Left,
			[Token(Token = "0x4001ADA")]
			Right
		}

		[Token(Token = "0x20004FA")]
		[CompilerGenerated]
		private sealed class <DisappearGestureWhenValidPressUp>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GesturesInputController <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C09")]
				[Address(RVA = "0x90F368", Offset = "0x90F368", VA = "0x90F368", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C0B")]
				[Address(RVA = "0x90F3B0", Offset = "0x90F3B0", VA = "0x90F3B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x90F180", Offset = "0x90F180", VA = "0x90F180")]
			[DebuggerHidden]
			public <DisappearGestureWhenValidPressUp>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x90F280", Offset = "0x90F280", VA = "0x90F280", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x90F284", Offset = "0x90F284", VA = "0x90F284", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0x90F370", Offset = "0x90F370", VA = "0x90F370", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandSide handSide;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference enableGesturesInput;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputActionReference chooseGestureInput;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gesture.GestureType gestureToReturnTo;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isDown;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Gesture.GestureType currentGesture;

		[Token(Token = "0x14000029")]
		public event Action<HandSide, Gesture.GestureType> OnSetGestureInputted
		{
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x90EC24", Offset = "0x90EC24", VA = "0x90EC24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x90ECD4", Offset = "0x90ECD4", VA = "0x90ECD4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x90ED84", Offset = "0x90ED84", VA = "0x90ED84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x90EE8C", Offset = "0x90EE8C", VA = "0x90EE8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x90EF94", Offset = "0x90EF94", VA = "0x90EF94")]
		private void EnableGestures(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x90EFA0", Offset = "0x90EFA0", VA = "0x90EFA0")]
		private void DisableGestures(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x90F050", Offset = "0x90F050", VA = "0x90F050")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x90EFCC", Offset = "0x90EFCC", VA = "0x90EFCC")]
		[IteratorStateMachine(typeof(<DisappearGestureWhenValidPressUp>d__15))]
		private IEnumerator DisappearGestureWhenValidPressUp(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x90F1A8", Offset = "0x90F1A8", VA = "0x90F1A8")]
		private Vector2 GetAxisFromTouchpad()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x90F134", Offset = "0x90F134", VA = "0x90F134")]
		private Gesture.GestureType GetGestureSelectedWithTouchpad()
		{
			return default(Gesture.GestureType);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x90F240", Offset = "0x90F240", VA = "0x90F240")]
		private Gesture.GestureType GetGestureTypeByTouchpadButton(TouchpadButton touchpadButton)
		{
			return default(Gesture.GestureType);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x90F204", Offset = "0x90F204", VA = "0x90F204")]
		private TouchpadButton GetTouchpadButton(Vector2 touchPosition)
		{
			return default(TouchpadButton);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x90F260", Offset = "0x90F260", VA = "0x90F260")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x90F26C", Offset = "0x90F26C", VA = "0x90F26C")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x90F278", Offset = "0x90F278", VA = "0x90F278")]
		public GesturesInputController()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class SalvaHandleController : MonoBehaviourPun, IPunObservable, IWithIcon
	{
		[Token(Token = "0x20004FC")]
		[CompilerGenerated]
		private sealed class <WaitToDisplayText>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SalvaHandleController <>4__this;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C27")]
				[Address(RVA = "0x910BD4", Offset = "0x910BD4", VA = "0x910BD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C29")]
				[Address(RVA = "0x910C1C", Offset = "0x910C1C", VA = "0x910C1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x9104F4", Offset = "0x9104F4", VA = "0x9104F4")]
			[DebuggerHidden]
			public <WaitToDisplayText>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x910B04", Offset = "0x910B04", VA = "0x910B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x910B08", Offset = "0x910B08", VA = "0x910B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x910BDC", Offset = "0x910BDC", VA = "0x910BDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PickableItemHandleController pickableItemHandleController;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<CatapultController> catapults;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject aimArea;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpecialSoundEffects soundEffect;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MicrophoneController microphoneController;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float delayTimeAfterPick;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isInCorrectPosition;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool wasUsed;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<SalvaHandleController> OnHornTaken;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SalvaHandleController> OnHornCloseToHead;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<SalvaHandleController> OnSalvaClose;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<SalvaHandleController> OnHornWasUsed;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<SalvaHandleController> OnMicrophoneNotConnected;

		[Token(Token = "0x17000308")]
		private WaitForSeconds delayAfterFirstPick
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x90F3B8", Offset = "0x90F3B8", VA = "0x90F3B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public bool WasUsed
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x90F428", Offset = "0x90F428", VA = "0x90F428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x90F430", Offset = "0x90F430", VA = "0x90F430")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		private bool IsInCorrectPosition
		{
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x90F5C0", Offset = "0x90F5C0", VA = "0x90F5C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x90F5C8", Offset = "0x90F5C8", VA = "0x90F5C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public int TakerID
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x90F654", Offset = "0x90F654", VA = "0x90F654")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x90F670", Offset = "0x90F670", VA = "0x90F670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x90FB94", Offset = "0x90FB94", VA = "0x90FB94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x9100B8", Offset = "0x9100B8", VA = "0x9100B8")]
		private void TryUseSalva(Transform hand)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x910208", Offset = "0x910208", VA = "0x910208")]
		private void SetHornWasTaken()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x910330", Offset = "0x910330", VA = "0x910330")]
		private void PutTheHornAway()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x910408", Offset = "0x910408", VA = "0x910408")]
		[PunRPC]
		private void SendWasUsedtoMaster()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x910454", Offset = "0x910454", VA = "0x910454")]
		private void WaveStart()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x90F4F4", Offset = "0x90F4F4", VA = "0x90F4F4")]
		private void SetupSalva(bool shouldWait)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x9102BC", Offset = "0x9102BC", VA = "0x9102BC")]
		[IteratorStateMachine(typeof(<WaitToDisplayText>d__32))]
		private IEnumerator WaitToDisplayText()
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x91045C", Offset = "0x91045C", VA = "0x91045C")]
		private void SalvaSetter()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x91051C", Offset = "0x91051C", VA = "0x91051C")]
		private void SetHornIsCloseToHead()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x9105F8", Offset = "0x9105F8", VA = "0x9105F8")]
		private void SetHornIsNotCloseToHead()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x9106D4", Offset = "0x9106D4", VA = "0x9106D4")]
		private void StartSalva()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x9109B8", Offset = "0x9109B8", VA = "0x9109B8")]
		private void TryActivateSalva(SalvaPlayerMicrophoneController salvaPlayerMicrophoneController)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x9100BC", Offset = "0x9100BC", VA = "0x9100BC")]
		private void TryShoot()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x9109F8", Offset = "0x9109F8", VA = "0x9109F8", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x910AC0", Offset = "0x910AC0", VA = "0x910AC0", Slot = "5")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x910AF4", Offset = "0x910AF4", VA = "0x910AF4")]
		public SalvaHandleController()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class GoldGiftController : MonoBehaviour
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int goldAmount;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera playerCamera;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject floatingText;

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x910C24", Offset = "0x910C24", VA = "0x910C24")]
		public void ShowAmountOfGold()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x910E64", Offset = "0x910E64", VA = "0x910E64")]
		public void AddGold()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x910EC8", Offset = "0x910EC8", VA = "0x910EC8")]
		public GoldGiftController()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class PickableObject : MonoBehaviour
	{
		[Token(Token = "0x4001AF3")]
		private const float force = 20f;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rigidbody myRigidbody;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform avatarParentTransform;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform holdingHand;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 pointToAddForceAt;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] translationVectors;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int translatonVectorIndex;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isTaken;

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x910ED8", Offset = "0x910ED8", VA = "0x910ED8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x911060", Offset = "0x911060", VA = "0x911060")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x911094", Offset = "0x911094", VA = "0x911094")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x91121C", Offset = "0x91121C", VA = "0x91121C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x9112DC", Offset = "0x9112DC", VA = "0x9112DC")]
		public void PickUp(Transform hand)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x911358", Offset = "0x911358", VA = "0x911358")]
		public void DropDown(Transform hand)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x911220", Offset = "0x911220", VA = "0x911220")]
		private void AddVectorToTranslationArray()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x911440", Offset = "0x911440", VA = "0x911440")]
		private Vector3 AverageThrowingForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x9114F4", Offset = "0x9114F4", VA = "0x9114F4")]
		[ContextMenu("GetPickableInteracter")]
		private void GetPickableInteracter()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x91154C", Offset = "0x91154C", VA = "0x91154C")]
		public PickableObject()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class SoundPickableController : MonoBehaviour
	{
		[Token(Token = "0x2000500")]
		public enum ObjectType
		{
			[Token(Token = "0x4001B09")]
			metalDish,
			[Token(Token = "0x4001B0A")]
			wood,
			[Token(Token = "0x4001B0B")]
			papyrus,
			[Token(Token = "0x4001B0C")]
			book,
			[Token(Token = "0x4001B0D")]
			marble,
			[Token(Token = "0x4001B0E")]
			wall,
			[Token(Token = "0x4001B0F")]
			metalHelmet,
			[Token(Token = "0x4001B10")]
			candle
		}

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource hitSound;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] hitClipsMetalDish;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] hitClipsWood;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] hitClipsPapyrus;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] hitClipsBook;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] hitClipsMarble;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] hitClipsWall;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip[] hitClipsMetalHelmet;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] hitClipsCandle;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ObjectType type;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int numberRandom;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x9115B0", Offset = "0x9115B0", VA = "0x9115B0")]
		private void SoundCreateDelete(AudioClip clip, float iVolume)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x9116B0", Offset = "0x9116B0", VA = "0x9116B0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x911AB0", Offset = "0x911AB0", VA = "0x911AB0")]
		public SoundPickableController()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class SackWithDailyReward : MonoBehaviour
	{
		[Token(Token = "0x4001B11")]
		private const string lastDayRewardWasTakenKey = "DailyRewardTime";

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GoldGiftController goldGiftController;

		[Token(Token = "0x1700030E")]
		public static int LastDayRewardWasTaken
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x911AB8", Offset = "0x911AB8", VA = "0x911AB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x911B24", Offset = "0x911B24", VA = "0x911B24")]
			set
			{
			}
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x911B98", Offset = "0x911B98", VA = "0x911B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x911C80", Offset = "0x911C80", VA = "0x911C80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x911D68", Offset = "0x911D68", VA = "0x911D68")]
		public void PickUp(Transform hand)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x911E18", Offset = "0x911E18", VA = "0x911E18")]
		public SackWithDailyReward()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class ViewPointPerformanceTests : MonoBehaviour
	{
		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isShootingEnabled;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int viewPointId;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int firstViewPointId;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int lastViewPointId;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float xAngleOffset;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 handBasePosition;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 baseRotation;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion handBaseRotation;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion parentToFreezeBaseRotation;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightControllerPfBaseParent;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform bowParentBaseParent;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform cameraVRTransform;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform trackingSpace;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform viewPointSetter;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform bowPositionSetter;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform bowParent;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform rightControllerPf;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform arrowHandGrip;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<CapsuleCollider> bodyColliders;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private BoxCollider headCollider;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BowController bowController;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private List<Transform> elvenTownViewPoints;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Vector3 bowCustomRotation;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private Vector3 secondHandPositionOffset;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Vector3 arrowHandGripBaseScale;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float timeBetweenShootingArrow;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputActionReference nextViewPointInput;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputActionReference previousViewPointInput;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputActionReference turnOffViewPointInput;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x911E20", Offset = "0x911E20", VA = "0x911E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x911EB0", Offset = "0x911EB0", VA = "0x911EB0")]
		public void TurnOnViewPointsTests(bool isShooting)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x9121E8", Offset = "0x9121E8", VA = "0x9121E8")]
		public void TurnOffViewPointsTests()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x9123CC", Offset = "0x9123CC", VA = "0x9123CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x912534", Offset = "0x912534", VA = "0x912534")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x91269C", Offset = "0x91269C", VA = "0x91269C")]
		private void PreviousViewPoint(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x9126D4", Offset = "0x9126D4", VA = "0x9126D4")]
		private void NextViewPoint(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x9126E4", Offset = "0x9126E4", VA = "0x9126E4")]
		private void TurnOffViewPoints(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x9126AC", Offset = "0x9126AC", VA = "0x9126AC")]
		private void ChooseNewViewPoint()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x911E24", Offset = "0x911E24", VA = "0x911E24")]
		private void FreezeCamera()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x912140", Offset = "0x912140", VA = "0x912140")]
		private void SetViewPoint()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x911EE8", Offset = "0x911EE8", VA = "0x911EE8")]
		private void PrepareGameObjectsForViewPointTests(bool isShooting)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x912208", Offset = "0x912208", VA = "0x912208")]
		private void ResetGameObjects()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x912704", Offset = "0x912704", VA = "0x912704")]
		private void SetActiveColliders(bool isActive)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x912874", Offset = "0x912874", VA = "0x912874")]
		public ViewPointPerformanceTests()
		{
		}
	}
}
namespace WenklyStudio.Physics
{
	[Token(Token = "0x2000503")]
	public class StayOnTerrainController : MonoBehaviour
	{
		[Token(Token = "0x4001B32")]
		private const float rayMaxDistance = 10f;

		[Token(Token = "0x4001B33")]
		private const float timeScaleToUpdatePos = 1f;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 raycastOriginOffset;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 raycastDirection;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float heightAboveTerrain;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float speedOfAdjustingHeight;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LayerMask terrainLayerMask;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit raycastHit;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float targetHeight;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool hasBeenHeightInitialized;

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x912890", Offset = "0x912890", VA = "0x912890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x912980", Offset = "0x912980", VA = "0x912980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x912AD4", Offset = "0x912AD4", VA = "0x912AD4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x912B94", Offset = "0x912B94", VA = "0x912B94")]
		public StayOnTerrainController()
		{
		}
	}
}
namespace WenklyStudio.ElvenAssassin
{
	[Token(Token = "0x2000504")]
	public class IceRevive : MonoBehaviourPun, IAbility, IResetable
	{
		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AbilityData abilityData;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AbilityLevelController abilityLelvelController;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem spellParticleSystem;

		[Token(Token = "0x1700030F")]
		public AbilityLevelController AbilityLevelController
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x912C38", Offset = "0x912C38", VA = "0x912C38", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public AbilityData AbilityData
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x912C40", Offset = "0x912C40", VA = "0x912C40", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x912C48", Offset = "0x912C48", VA = "0x912C48", Slot = "6")]
		public void Initialize(GameObject arrowObject)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x912C4C", Offset = "0x912C4C", VA = "0x912C4C")]
		public void RevivePlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x912E6C", Offset = "0x912E6C", VA = "0x912E6C")]
		[PunRPC]
		private void RpcTryRevivePlayer()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x912F68", Offset = "0x912F68", VA = "0x912F68", Slot = "9")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x912F84", Offset = "0x912F84", VA = "0x912F84", Slot = "7")]
		public void InvokeAbility(Collision collision)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x912F88", Offset = "0x912F88", VA = "0x912F88", Slot = "8")]
		public void SetQualityReference(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x912F90", Offset = "0x912F90", VA = "0x912F90")]
		public IceRevive()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class SalvaTextController : MonoBehaviourPun
	{
		[Token(Token = "0x4001B3F")]
		private const float lifeTime = 0f;

		[Token(Token = "0x4001B40")]
		private const float distance = 1.3f;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject floatingText;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x912F98", Offset = "0x912F98", VA = "0x912F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x913390", Offset = "0x913390", VA = "0x913390")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x913788", Offset = "0x913788", VA = "0x913788")]
		private void SetHornWasUsedTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x9138EC", Offset = "0x9138EC", VA = "0x9138EC")]
		private void SetHeadTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x9139C8", Offset = "0x9139C8", VA = "0x9139C8")]
		private void SetBlowTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x913B24", Offset = "0x913B24", VA = "0x913B24")]
		private void SetMicrophoneNotConnectedTextActvation(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x913C00", Offset = "0x913C00", VA = "0x913C00")]
		private void SetAllDeactivated(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x913864", Offset = "0x913864", VA = "0x913864")]
		private void CloseOld()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x913C04", Offset = "0x913C04", VA = "0x913C04")]
		public SalvaTextController()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class AnalyticsSendOnConnectionFailInfoCaller : MonoBehaviour
	{
		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x913C0C", Offset = "0x913C0C", VA = "0x913C0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x913D28", Offset = "0x913D28", VA = "0x913D28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x913E44", Offset = "0x913E44", VA = "0x913E44")]
		private void SendOnConnectionFailInfoCallback(int cause)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x913E50", Offset = "0x913E50", VA = "0x913E50")]
		public AnalyticsSendOnConnectionFailInfoCaller()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class ArrowPlayerHitController : MonoBehaviourPun
	{
		[Token(Token = "0x4001B43")]
		private const float hidingOffset = 1000f;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionEvents arrowCollisionEvents;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldKillPlayer;

		[Token(Token = "0x1400002A")]
		public static event Action<PlayerController, PlayerController> OnArrowHitPlayer
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x913E58", Offset = "0x913E58", VA = "0x913E58")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x913F24", Offset = "0x913F24", VA = "0x913F24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x913FF0", Offset = "0x913FF0", VA = "0x913FF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x9140A8", Offset = "0x9140A8", VA = "0x9140A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x914160", Offset = "0x914160", VA = "0x914160")]
		private void TryToKillPlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x9145EC", Offset = "0x9145EC", VA = "0x9145EC")]
		private void HideArrow()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x9146A4", Offset = "0x9146A4", VA = "0x9146A4")]
		private void TryToAttachArrowToPlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x9147F4", Offset = "0x9147F4", VA = "0x9147F4")]
		public ArrowPlayerHitController()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class EnemyArrowPlayerHitController : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x4001B48")]
		private const string KillMessage = "You were killed by Orc Archer";

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionEvents collisionEvents;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject arrow;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody arrowRigidbody;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x17000311")]
		public Vector3 EnemyPosition
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x9148F8", Offset = "0x9148F8", VA = "0x9148F8")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x914904", Offset = "0x914904", VA = "0x914904")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x914910", Offset = "0x914910", VA = "0x914910")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x91499C", Offset = "0x91499C", VA = "0x91499C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x914A28", Offset = "0x914A28", VA = "0x914A28")]
		private void TryKillPlayer(Collider collider)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x914C1C", Offset = "0x914C1C", VA = "0x914C1C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x914C3C", Offset = "0x914C3C", VA = "0x914C3C", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x914D08", Offset = "0x914D08", VA = "0x914D08")]
		public EnemyArrowPlayerHitController()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class CannonController : MonoBehaviourPun, IWithIcon
	{
		[Token(Token = "0x200050B")]
		[CompilerGenerated]
		private sealed class <ShotHitTargetCoroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CannonController <>4__this;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C8B")]
				[Address(RVA = "0x915960", Offset = "0x915960", VA = "0x915960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8D")]
				[Address(RVA = "0x9159A8", Offset = "0x9159A8", VA = "0x9159A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x915498", Offset = "0x915498", VA = "0x915498")]
			[DebuggerHidden]
			public <ShotHitTargetCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x91572C", Offset = "0x91572C", VA = "0x91572C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x915730", Offset = "0x915730", VA = "0x915730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x915968", Offset = "0x915968", VA = "0x915968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B4E")]
		private const string fireTag = "Fire";

		[Token(Token = "0x4001B4F")]
		private const string cannonFireAnimatioName = "CannonFireAnim";

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableItemHandleController torchHandle;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject CannonObject;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip CannonFireAnim;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem CannonMuzzleFlash;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light MuzzleFlashLight;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem SparkParticles;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem SmokeParticles;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject FuseObject;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject FuseCentre;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ParticleSystem FuseSmokeParticles;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject FuseSmokeParticlesNode;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Light FuseLight;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource CannonFireAudio;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource BurningFuseAudio;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CannonShotController cannonShot;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] grapeShots;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float timeFromShotToHit;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float offset;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float fuselightintensity;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float explodeset;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float explodehalt;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float cannonfired;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float fadeStart;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float fadeEnd;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float fadeTime;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float t;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool shot;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float fuseLit;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isFusing;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool finishedFusing;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int shooterID;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x914DA4", Offset = "0x914DA4", VA = "0x914DA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x914DC4", Offset = "0x914DC4", VA = "0x914DC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x915164", Offset = "0x915164", VA = "0x915164")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x914F68", Offset = "0x914F68", VA = "0x914F68")]
		public void Fuse()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x915424", Offset = "0x915424", VA = "0x915424")]
		[IteratorStateMachine(typeof(<ShotHitTargetCoroutine>d__37))]
		public IEnumerator ShotHitTargetCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x9154C0", Offset = "0x9154C0", VA = "0x9154C0")]
		public void FadeLight()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x915594", Offset = "0x915594", VA = "0x915594")]
		public void EndCannonShot()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x915054", Offset = "0x915054", VA = "0x915054")]
		private void FireCannon()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x9152B8", Offset = "0x9152B8", VA = "0x9152B8")]
		private bool AreShootConditionMet(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x9156B4", Offset = "0x9156B4", VA = "0x9156B4")]
		[PunRPC]
		private void RpcSetFire(int shooterID)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x9156D0", Offset = "0x9156D0", VA = "0x9156D0")]
		public void SetReferences(GameObject[] _grapeShots)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x9156D8", Offset = "0x9156D8", VA = "0x9156D8", Slot = "4")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x9156FC", Offset = "0x9156FC", VA = "0x9156FC")]
		public CannonController()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class DeathMatchFloatingTextManager : MonoBehaviourPun
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <AddColorToText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playerNick;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int playerColorIndex;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string infoText;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9A")]
				[Address(RVA = "0x9163F0", Offset = "0x9163F0", VA = "0x9163F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9C")]
				[Address(RVA = "0x916438", Offset = "0x916438", VA = "0x916438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x915BF4", Offset = "0x915BF4", VA = "0x915BF4")]
			[DebuggerHidden]
			public <AddColorToText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x916278", Offset = "0x916278", VA = "0x916278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x91627C", Offset = "0x91627C", VA = "0x91627C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x9163F8", Offset = "0x9163F8", VA = "0x9163F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[CompilerGenerated]
		private sealed class <AddColorToText>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string firstplayerNick;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int firstPlayerColorIndex;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string secondPlayerNick;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int secondPlayerColorIndex;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string infoText;

			[Token(Token = "0x17000316")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA0")]
				[Address(RVA = "0x9165D8", Offset = "0x9165D8", VA = "0x9165D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000317")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA2")]
				[Address(RVA = "0x916620", Offset = "0x916620", VA = "0x916620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x915CF4", Offset = "0x915CF4", VA = "0x915CF4")]
			[DebuggerHidden]
			public <AddColorToText>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x916440", Offset = "0x916440", VA = "0x916440", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x916444", Offset = "0x916444", VA = "0x916444", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x9165E0", Offset = "0x9165E0", VA = "0x9165E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050F")]
		[CompilerGenerated]
		private sealed class <ShowKillStreakMessage>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string killer;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isOver;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int killCount;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA6")]
				[Address(RVA = "0x916834", Offset = "0x916834", VA = "0x916834", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA8")]
				[Address(RVA = "0x91687C", Offset = "0x91687C", VA = "0x91687C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x916240", Offset = "0x916240", VA = "0x916240")]
			[DebuggerHidden]
			public <ShowKillStreakMessage>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x916628", Offset = "0x916628", VA = "0x916628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x91662C", Offset = "0x91662C", VA = "0x91662C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x91683C", Offset = "0x91683C", VA = "0x91683C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B72")]
		private const float killMessageTime = 2f;

		[Token(Token = "0x4001B73")]
		private const float distanceFromPlayer = 2f;

		[Token(Token = "0x4001B74")]
		private const float textDelay = 1.7f;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int queuedTextsCount;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeLastText;

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x9159B0", Offset = "0x9159B0", VA = "0x9159B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x915A80", Offset = "0x915A80", VA = "0x915A80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x915B40", Offset = "0x915B40", VA = "0x915B40")]
		[IteratorStateMachine(typeof(<AddColorToText>d__8))]
		public IEnumerator AddColorToText(string infoText, int playerColorIndex, string playerNick)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x915C1C", Offset = "0x915C1C", VA = "0x915C1C")]
		[IteratorStateMachine(typeof(<AddColorToText>d__9))]
		public IEnumerator AddColorToText(string infoText, int firstPlayerColorIndex, int secondPlayerColorIndex, string firstplayerNick, string secondPlayerNick)
		{
			return null;
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x915D1C", Offset = "0x915D1C", VA = "0x915D1C")]
		private void KillStreakAnnounce(PlayerControllerCore killer, int killcount)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x915F44", Offset = "0x915F44", VA = "0x915F44")]
		private void KillStreakOverAnnounce(PlayerControllerCore killer, int killcount)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x916170", Offset = "0x916170", VA = "0x916170")]
		[PunRPC]
		private void RPCKillStreakAnnounce(string killer, int killerColorID, int killCount, bool isOver)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x916194", Offset = "0x916194", VA = "0x916194")]
		[IteratorStateMachine(typeof(<ShowKillStreakMessage>d__13))]
		private IEnumerator ShowKillStreakMessage(string killer, int killerColorID, int killCount, bool isOver)
		{
			return null;
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x916268", Offset = "0x916268", VA = "0x916268")]
		public DeathMatchFloatingTextManager()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class DeathMatchKillsController : MonoBehaviourPun
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DeathMatchFloatingTextManager deathMatchFloatingTextManager;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x916884", Offset = "0x916884", VA = "0x916884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x916900", Offset = "0x916900", VA = "0x916900")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x91697C", Offset = "0x91697C", VA = "0x91697C")]
		private void KillPlayer(PlayerControllerCore victim, PlayerControllerCore killer)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x916CE8", Offset = "0x916CE8", VA = "0x916CE8")]
		[PunRPC]
		private void RpcPlayerKill(string victimName, int victimColorIndex)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x916BDC", Offset = "0x916BDC", VA = "0x916BDC")]
		[PunRPC]
		private void RpcPlayerDie(string killerName, int killerColorIndex)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x916DF0", Offset = "0x916DF0", VA = "0x916DF0")]
		public DeathMatchKillsController()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class DeathMatchMiniScoreboard : MonoBehaviour
	{
		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference leftHandInteractionInput;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference rightHandInteractionInput;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DeathMatchScoreboard miniScoreboard;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DeathMatchScoreboard miniScoreboardLeftHandedOculus;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text timeLeftText;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text leftHandedTimeLeftText;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool validScore;

		[Token(Token = "0x1700031A")]
		private InputActionReference InteractionInput
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x916E6C", Offset = "0x916E6C", VA = "0x916E6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		private DeathMatchScoreboard MiniScoreboard
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x916F0C", Offset = "0x916F0C", VA = "0x916F0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x916FAC", Offset = "0x916FAC", VA = "0x916FAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x91702C", Offset = "0x91702C", VA = "0x91702C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x9170AC", Offset = "0x9170AC", VA = "0x9170AC")]
		private void UpdateTimeLeftText(float time)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x91718C", Offset = "0x91718C", VA = "0x91718C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x917334", Offset = "0x917334", VA = "0x917334")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x917498", Offset = "0x917498", VA = "0x917498")]
		private void EnableScoreboardState(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x917544", Offset = "0x917544", VA = "0x917544")]
		private void DisableScoreboardState(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x9174A0", Offset = "0x9174A0", VA = "0x9174A0")]
		private void UpdateScoreboardState(bool active)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x91754C", Offset = "0x91754C", VA = "0x91754C")]
		private void InvalidateScores()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x917554", Offset = "0x917554", VA = "0x917554")]
		public void ScoresValid(bool areThey)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x917560", Offset = "0x917560", VA = "0x917560")]
		public DeathMatchMiniScoreboard()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class DeathMatchPlayerSpawnController : MonoBehaviourPun
	{
		[Token(Token = "0x4001B95")]
		private const int numberOfPlatformsForRandomization = 3;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool shouldRespawn;

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x917568", Offset = "0x917568", VA = "0x917568")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x9176A0", Offset = "0x9176A0", VA = "0x9176A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x9177D8", Offset = "0x9177D8", VA = "0x9177D8")]
		private void OnGameStarted()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x917938", Offset = "0x917938", VA = "0x917938")]
		private void OnDeathEnd()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x917808", Offset = "0x917808", VA = "0x917808")]
		private void SpawnPlayerOnNetwork(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x917A7C", Offset = "0x917A7C", VA = "0x917A7C")]
		private void DisableRespawn()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x917A84", Offset = "0x917A84", VA = "0x917A84")]
		[PunRPC]
		private void RpcRespawnPlayerOnMaster(int playerActorNumber)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x917AC4", Offset = "0x917AC4", VA = "0x917AC4")]
		[PunRPC]
		private void RpcSpawnPlayer(int playerActorNumber)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x917B28", Offset = "0x917B28", VA = "0x917B28")]
		private TeleportCollider GetAppropriateTeleportColliderForPlayer(PlayerControllerCore playerController)
		{
			return null;
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x917CE8", Offset = "0x917CE8", VA = "0x917CE8")]
		private float CalculateSumOfDistancesFromPlatformsWithPlayers(TeleportCollider sourcePlatform, List<TeleportCollider> platformsWithPlayers)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x917E58", Offset = "0x917E58", VA = "0x917E58")]
		public DeathMatchPlayerSpawnController()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class DeathMatchScoreboard : Scoreboard
	{
		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScoreboardEntryDeathMatch[] scoreboardEntries;

		[Token(Token = "0x1700031C")]
		private Action<PlayerControllerCore> RefreshScoreboardOnChangedPlayersList
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x917EC8", Offset = "0x917EC8", VA = "0x917EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x917F44", Offset = "0x917F44", VA = "0x917F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x9181A8", Offset = "0x9181A8", VA = "0x9181A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x9183FC", Offset = "0x9183FC", VA = "0x9183FC", Slot = "4")]
		public override void RefreshScoreboard()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x918424", Offset = "0x918424", VA = "0x918424")]
		public void RefreshPlayers(List<PlayerControllerCore> players)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x918868", Offset = "0x918868", VA = "0x918868")]
		public DeathMatchScoreboard()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class GeometryClippingPenalizer : MonoBehaviour
	{
		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CollisionEvents[] headTorsoColliders;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerController vivePlayerPhotonObserver;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftHand;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject rightHand;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MessageDistance;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float timeToDie;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool bodyInGeometry;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool wasInvoked;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastTextTime;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float messageTimeout;

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x91887C", Offset = "0x91887C", VA = "0x91887C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x918908", Offset = "0x918908", VA = "0x918908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x918B38", Offset = "0x918B38", VA = "0x918B38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x918CE0", Offset = "0x918CE0", VA = "0x918CE0")]
		private void TryToPenalizeForClipping(Collision collision)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x918ED4", Offset = "0x918ED4", VA = "0x918ED4")]
		private void TryToDisablePenalizingForClipping(Collision collision)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x918FFC", Offset = "0x918FFC", VA = "0x918FFC")]
		private void EnableInterior(Collision col, bool state)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x9190B8", Offset = "0x9190B8", VA = "0x9190B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x918E3C", Offset = "0x918E3C", VA = "0x918E3C")]
		private void ShowMessage()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x919100", Offset = "0x919100", VA = "0x919100")]
		public GeometryClippingPenalizer()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class PlayerDeathControllerDmPC : PlayerDeathController, IInRoomCallbacks
	{
		[Token(Token = "0x2000517")]
		[CompilerGenerated]
		private sealed class <ShowDelayedTextDeathPlayerTimeToRespawn>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathControllerDmPC <>4__this;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF2")]
				[Address(RVA = "0x919C50", Offset = "0x919C50", VA = "0x919C50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF4")]
				[Address(RVA = "0x919C98", Offset = "0x919C98", VA = "0x919C98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x9199AC", Offset = "0x9199AC", VA = "0x9199AC")]
			[DebuggerHidden]
			public <ShowDelayedTextDeathPlayerTimeToRespawn>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0x919AB4", Offset = "0x919AB4", VA = "0x919AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x919AB8", Offset = "0x919AB8", VA = "0x919AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x919C58", Offset = "0x919C58", VA = "0x919C58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000518")]
		[CompilerGenerated]
		private sealed class <DieSoundRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathControllerDmPC <>4__this;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF8")]
				[Address(RVA = "0x919D30", Offset = "0x919D30", VA = "0x919D30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFA")]
				[Address(RVA = "0x919D78", Offset = "0x919D78", VA = "0x919D78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x9199D4", Offset = "0x9199D4", VA = "0x9199D4")]
			[DebuggerHidden]
			public <DieSoundRoutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x919CA0", Offset = "0x919CA0", VA = "0x919CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x919CA4", Offset = "0x919CA4", VA = "0x919CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x919D38", Offset = "0x919D38", VA = "0x919D38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BA5")]
		private const float timeUntilRespawn = 5f;

		[Token(Token = "0x4001BA6")]
		private const float respawnTimerTextDistanceFromPlayer = 2f;

		[Token(Token = "0x4001BA7")]
		private const float timeUntilCounterToRespawnShouldBeVisible = 2f;

		[Token(Token = "0x4001BA8")]
		private const float animationOffset = 0.5f;

		[Token(Token = "0x4001BA9")]
		private const int distanceFromPlayer = 0;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip deathSound;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource deathAudioSource;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerMaterialsColorSetterPC playerMaterialsColorSetter;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds soundDelay;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds textDelay;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isDead;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentTimeToRespawn;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FloatTextCanvas canvasWithTimeToRespawn;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool deathEffectTimeFinished;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grayscale grayscaleImageEffect;

		[Token(Token = "0x1700031D")]
		public override bool IsDead
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x91911C", Offset = "0x91911C", VA = "0x91911C", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x919124", Offset = "0x919124", VA = "0x919124", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		private Grayscale GrayscaleImageEffect
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x9191E4", Offset = "0x9191E4", VA = "0x9191E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x919294", Offset = "0x919294", VA = "0x919294")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x91930C", Offset = "0x91930C", VA = "0x91930C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x919364", Offset = "0x919364", VA = "0x919364")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x9193BC", Offset = "0x9193BC", VA = "0x9193BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x9196AC", Offset = "0x9196AC", VA = "0x9196AC", Slot = "8")]
		public override void Die(PlayerKillInfo playerKillInfo)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x9191C0", Offset = "0x9191C0", VA = "0x9191C0")]
		public void EnableDeathEffects(bool isEnabled)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x919884", Offset = "0x919884", VA = "0x919884", Slot = "6")]
		public override void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x9198B8", Offset = "0x9198B8", VA = "0x9198B8", Slot = "7")]
		public override void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x9198C4", Offset = "0x9198C4", VA = "0x9198C4", Slot = "13")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x9193C0", Offset = "0x9193C0", VA = "0x9193C0")]
		private void ProcessDeathEffect()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x919810", Offset = "0x919810", VA = "0x919810")]
		[IteratorStateMachine(typeof(<ShowDelayedTextDeathPlayerTimeToRespawn>d__31))]
		private IEnumerator ShowDelayedTextDeathPlayerTimeToRespawn()
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x91979C", Offset = "0x91979C", VA = "0x91979C")]
		[IteratorStateMachine(typeof(<DieSoundRoutine>d__32))]
		private IEnumerator DieSoundRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x91919C", Offset = "0x91919C", VA = "0x91919C")]
		private void SetPlayerMaterialsToGhost(bool isGhost)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x919978", Offset = "0x919978", VA = "0x919978")]
		private bool IsWaitingForRespawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x9199FC", Offset = "0x9199FC", VA = "0x9199FC", Slot = "9")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x919A00", Offset = "0x919A00", VA = "0x919A00", Slot = "10")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x919A04", Offset = "0x919A04", VA = "0x919A04", Slot = "11")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x919A08", Offset = "0x919A08", VA = "0x919A08", Slot = "12")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x919A0C", Offset = "0x919A0C", VA = "0x919A0C")]
		public PlayerDeathControllerDmPC()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class ScoreboardEntryDeathMatch : MonoBehaviour
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VoiceChatMuteButtonController voiceChatMuteButtonController;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isMiniScorboard;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text playerName;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text hits;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text deaths;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TournamentPlayerResult tournamentPlayerResult;

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x918590", Offset = "0x918590", VA = "0x918590")]
		internal void UpdateEntry(PlayerControllerCore player)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x919D80", Offset = "0x919D80", VA = "0x919D80")]
		private void SetEntryColor(Color playerColor)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x918840", Offset = "0x918840", VA = "0x918840")]
		public void SetActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x919E94", Offset = "0x919E94", VA = "0x919E94")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x919EB4", Offset = "0x919EB4", VA = "0x919EB4")]
		public ScoreboardEntryDeathMatch()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class AxeController : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x200051B")]
		public delegate void PlayerHitState(int playerID);

		[Token(Token = "0x4001BC1")]
		public const float AxeDodgedTextDuration = 2f;

		[Token(Token = "0x4001BC2")]
		public const float AxeDodgedTextDistance = 1f;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 throwDirection;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float throwSpeed;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float StartingRotationSpeed;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationSpeed;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hitAlready;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool isPaused;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float targetScaleMultiplier;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource axeWhoosh;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource playerFlesh;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource woodHit;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource stoneHit;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer axeMeshRenderer;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material ghostMaterial;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject playerFleshSoundPrefab;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool defaultHitAlready;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool defaultIsPaused;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool defaultAxeWhooshMute;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		private bool defaultAxeWhooshLoop;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform defaultPlayerFleshParent;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool defaultAxeMeshRendererEnabled;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Material defaultAxeMeshRendererMaterial;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform defaultAxeParent;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 defaultAxeLocalPosition;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Quaternion defaultAxeLocalRotation;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private Vector3 defaultAxeLocalScale;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AxeBeingUsedController axeBeingUsedController;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private bool hasRecenltyEnabledAxe;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private PhotonPrefabPoolElement photonPrefabPoolElement;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultPreviousDistance;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float defaultLifeTime;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool defaultDestroyedAlready;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float distanceWhenThrown;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject player;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float lifeTime;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool destroyedAlready;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 axeScale;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 startingScale;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float previousDistance;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool displayedDodgeMessage;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		private bool isAxeDodgedBySpecialAbility;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		private bool isDodgeBonusSet;

		[Token(Token = "0x17000323")]
		public AxeHandle AxeHandle
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x91A1A4", Offset = "0x91A1A4", VA = "0x91A1A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x91A1AC", Offset = "0x91A1AC", VA = "0x91A1AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public bool HadHitPlayer
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x91A1BC", Offset = "0x91A1BC", VA = "0x91A1BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x91A1C4", Offset = "0x91A1C4", VA = "0x91A1C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		private bool IsAxeDodgedBySpecialAbility
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x91A1D0", Offset = "0x91A1D0", VA = "0x91A1D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x91A1D8", Offset = "0x91A1D8", VA = "0x91A1D8")]
			set
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event PlayerHitState OnPlayerGotHit
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x919EBC", Offset = "0x919EBC", VA = "0x919EBC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x919F74", Offset = "0x919F74", VA = "0x919F74")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event Action OnPlayerHitByAxe
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x91A02C", Offset = "0x91A02C", VA = "0x91A02C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x91A0E8", Offset = "0x91A0E8", VA = "0x91A0E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x91A1F8", Offset = "0x91A1F8", VA = "0x91A1F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x91A4FC", Offset = "0x91A4FC", VA = "0x91A4FC")]
		private void TryToSetAxeBeingUsed()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x91A634", Offset = "0x91A634", VA = "0x91A634")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x91AD10", Offset = "0x91AD10", VA = "0x91AD10")]
		private void TryToSetAxeIsNotBeingUsed()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x91AD7C", Offset = "0x91AD7C", VA = "0x91AD7C")]
		public void OnTriggerEnter(Collider coll)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x91B76C", Offset = "0x91B76C", VA = "0x91B76C")]
		private bool IsLocalPlayerCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x91A56C", Offset = "0x91A56C", VA = "0x91A56C")]
		public void DisableVisualsOnNetwork()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x91ACE0", Offset = "0x91ACE0", VA = "0x91ACE0")]
		public void DisableVisualsLocally()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x91B8CC", Offset = "0x91B8CC", VA = "0x91B8CC")]
		[PunRPC]
		public void RpcSetAxeParentToHead(int headPhotonViewID, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x91BB80", Offset = "0x91BB80", VA = "0x91BB80")]
		private void SetAxeMaterialToGhost()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x91BBA4", Offset = "0x91BBA4", VA = "0x91BBA4")]
		[PunRPC]
		public void RpcDisableVisuals()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x91BC2C", Offset = "0x91BC2C", VA = "0x91BC2C")]
		[PunRPC]
		public void RpcPlayPlayerFleshSound()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x91B6AC", Offset = "0x91B6AC", VA = "0x91B6AC")]
		private void PlayHitOtherSound()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x91B5EC", Offset = "0x91B5EC", VA = "0x91B5EC")]
		public void RpcPlayHitWoodSound()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x91BEDC", Offset = "0x91BEDC", VA = "0x91BEDC")]
		public void MarkAxeAsItHitSomething()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x91BF2C", Offset = "0x91BF2C", VA = "0x91BF2C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x91BF30", Offset = "0x91BF30", VA = "0x91BF30")]
		private void SetInitialState()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x91C15C", Offset = "0x91C15C", VA = "0x91C15C")]
		[ContextMenu("Collect Data")]
		public void CollectData()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x91C1CC", Offset = "0x91C1CC", VA = "0x91C1CC")]
		public AxeController()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class DragonAttackControler : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x200051D")]
		[CompilerGenerated]
		private sealed class <AttackPlatformsFromAttackColliderCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonAttackControler <>4__this;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DragonAttackCollider attackCollider;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerController <localPlayer>5__2;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D37")]
				[Address(RVA = "0x91CE94", Offset = "0x91CE94", VA = "0x91CE94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D39")]
				[Address(RVA = "0x91CEDC", Offset = "0x91CEDC", VA = "0x91CEDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x91C7E0", Offset = "0x91C7E0", VA = "0x91C7E0")]
			[DebuggerHidden]
			public <AttackPlatformsFromAttackColliderCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x91CC98", Offset = "0x91CC98", VA = "0x91CC98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x91CC9C", Offset = "0x91CC9C", VA = "0x91CC9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x91CE9C", Offset = "0x91CE9C", VA = "0x91CE9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051E")]
		[CompilerGenerated]
		private sealed class <AttackCastle>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonAttackControler <>4__this;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GateController attackedCastleController;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3D")]
				[Address(RVA = "0x91D030", Offset = "0x91D030", VA = "0x91D030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3F")]
				[Address(RVA = "0x91D078", Offset = "0x91D078", VA = "0x91D078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x91CABC", Offset = "0x91CABC", VA = "0x91CABC")]
			[DebuggerHidden]
			public <AttackCastle>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x91CEE4", Offset = "0x91CEE4", VA = "0x91CEE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x91CEE8", Offset = "0x91CEE8", VA = "0x91CEE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0x91D038", Offset = "0x91D038", VA = "0x91D038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DragonAudio audio;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] fireParticles;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canAttack;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool defaultCanAttack;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool attackedCastleLocally;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool defaultAttackedCastle;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x17000326")]
		public bool AttackedCastleSynchronized
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x91C34C", Offset = "0x91C34C", VA = "0x91C34C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0x91C354", Offset = "0x91C354", VA = "0x91C354")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x91C360", Offset = "0x91C360", VA = "0x91C360")]
		private void OnTriggerEnter(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x91C388", Offset = "0x91C388", VA = "0x91C388")]
		private void TryAttackCastle(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x91C498", Offset = "0x91C498", VA = "0x91C498")]
		private void TryStartAttackingPlayers(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x91C5DC", Offset = "0x91C5DC", VA = "0x91C5DC")]
		private void StartAttackingPlayers(DragonAttackCollider dragonAttackCollider)
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x91C750", Offset = "0x91C750", VA = "0x91C750")]
		[IteratorStateMachine(typeof(<AttackPlatformsFromAttackColliderCoroutine>d__15))]
		private IEnumerator AttackPlatformsFromAttackColliderCoroutine(DragonAttackCollider attackCollider)
		{
			return null;
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x91C808", Offset = "0x91C808", VA = "0x91C808")]
		private void KillPlayer(PlayerController playerToBeKilled)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x91C634", Offset = "0x91C634", VA = "0x91C634")]
		private bool CheckIfAnyPlayerOnAttackCollider(DragonAttackCollider attackCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x91C83C", Offset = "0x91C83C", VA = "0x91C83C")]
		private bool CheckIfPlayerOnAnyAttackColliderTargets(DragonAttackCollider attackCollider, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x91C8F0", Offset = "0x91C8F0", VA = "0x91C8F0")]
		private bool CheckIfPlayerOnAnyAttackTargetPlatforms(DragonAttackTargetInfo dragonAttackTargetInfo, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x91C99C", Offset = "0x91C99C", VA = "0x91C99C")]
		private bool CheckIfPlayerOnPlatform(TeleportCollider teleportCollider, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x91C9D8", Offset = "0x91C9D8", VA = "0x91C9D8")]
		public void PlayAttackAudioAndVisuals()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x91CA5C", Offset = "0x91CA5C", VA = "0x91CA5C")]
		private void StopAttackVisuals()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x91C54C", Offset = "0x91C54C", VA = "0x91C54C")]
		[IteratorStateMachine(typeof(<AttackCastle>d__23))]
		private IEnumerator AttackCastle(GateController attackedCastleController)
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x91CAE4", Offset = "0x91CAE4", VA = "0x91CAE4")]
		public void StopAttacking()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x91CB14", Offset = "0x91CB14", VA = "0x91CB14", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x91CB2C", Offset = "0x91CB2C", VA = "0x91CB2C", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x91CBE8", Offset = "0x91CBE8", VA = "0x91CBE8")]
		public DragonAttackControler()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class DragonKilledController : MonoBehaviourPun, IEnemyGetKilled
	{
		[Token(Token = "0x4001C02")]
		private const float slowDownSpedUpTime = 1f;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DragonAttackControler dragonAttackControler;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragonAnimatorController dragonAnimatorController;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoutePoint deathPoint;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x91D080", Offset = "0x91D080", VA = "0x91D080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x91D1D0", Offset = "0x91D1D0", VA = "0x91D1D0", Slot = "4")]
		public bool IsHandling(KillInfo killInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x91D1D8", Offset = "0x91D1D8", VA = "0x91D1D8", Slot = "5")]
		public void GetKilled(KillInfo killInfo)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x91D2E4", Offset = "0x91D2E4", VA = "0x91D2E4")]
		[PunRPC]
		private void RpcAnimateDragonDeath()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x91D3EC", Offset = "0x91D3EC", VA = "0x91D3EC")]
		public DragonKilledController()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class GiantTrollAnimatorController : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int walkingHash;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int throwingHash;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int dyingHash;

		[Token(Token = "0x4001C0D")]
		private const bool DefaultDeathAnimAdjusterEnabled = false;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DeathAnimAdjuster deathAnimAdjuster;

		[Token(Token = "0x1700032B")]
		private bool IsWalking
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x91D48C", Offset = "0x91D48C", VA = "0x91D48C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x91D4B0", Offset = "0x91D4B0", VA = "0x91D4B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		private bool IsThrowing
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x91D4DC", Offset = "0x91D4DC", VA = "0x91D4DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x91D500", Offset = "0x91D500", VA = "0x91D500")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		private bool IsDying
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x91D52C", Offset = "0x91D52C", VA = "0x91D52C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x91D550", Offset = "0x91D550", VA = "0x91D550")]
			set
			{
			}
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x91D57C", Offset = "0x91D57C", VA = "0x91D57C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x91D5D4", Offset = "0x91D5D4", VA = "0x91D5D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x91D62C", Offset = "0x91D62C", VA = "0x91D62C")]
		public void StopAnimations()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x91D64C", Offset = "0x91D64C", VA = "0x91D64C")]
		public void StartWalkAnimation()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x91D6AC", Offset = "0x91D6AC", VA = "0x91D6AC")]
		public void StartThrowAnimation()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x91D6E0", Offset = "0x91D6E0", VA = "0x91D6E0")]
		public void StartDeathAnimation()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x91D714", Offset = "0x91D714", VA = "0x91D714", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x91D760", Offset = "0x91D760", VA = "0x91D760", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x91D680", Offset = "0x91D680", VA = "0x91D680")]
		private void DisableAllStates()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x91D904", Offset = "0x91D904", VA = "0x91D904")]
		public GiantTrollAnimatorController()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class GiantTrollKillController : MonoBehaviour, IEnemyGetKilled
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GiantTrollStateController giantTrollStateController;

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x91D9AC", Offset = "0x91D9AC", VA = "0x91D9AC", Slot = "4")]
		public bool IsHandling(KillInfo killInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x91D9B4", Offset = "0x91D9B4", VA = "0x91D9B4", Slot = "5")]
		public void GetKilled(KillInfo killInfo)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x91DB04", Offset = "0x91DB04", VA = "0x91DB04")]
		public GiantTrollKillController()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public enum GiantTrollState
	{
		[Token(Token = "0x4001C15")]
		FollowingRoute,
		[Token(Token = "0x4001C16")]
		ThrowingRock,
		[Token(Token = "0x4001C17")]
		Dying
	}
	[Token(Token = "0x2000524")]
	public class GiantTrollStateController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GiantTrollAnimatorController giantTrollAnimatorController;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GiantTrollState giantTrollState;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool stateIsLocked;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isThrowTriggered;

		[Token(Token = "0x1700032E")]
		private GiantTrollState GiantTrollState
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x91DB0C", Offset = "0x91DB0C", VA = "0x91DB0C")]
			get
			{
				return default(GiantTrollState);
			}
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x91DB14", Offset = "0x91DB14", VA = "0x91DB14")]
			set
			{
			}
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x91DB18", Offset = "0x91DB18", VA = "0x91DB18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x91DB70", Offset = "0x91DB70", VA = "0x91DB70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x91DBC8", Offset = "0x91DBC8", VA = "0x91DBC8", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x91DBD4", Offset = "0x91DBD4", VA = "0x91DBD4")]
		public void OnThrowTrigger()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x91DC48", Offset = "0x91DC48", VA = "0x91DC48")]
		public void AnimationEventEndThrow()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x91DA50", Offset = "0x91DA50", VA = "0x91DA50")]
		public void SetTrollState(GiantTrollState state)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x91DC50", Offset = "0x91DC50", VA = "0x91DC50", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x91DDDC", Offset = "0x91DDDC", VA = "0x91DDDC", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x91DDEC", Offset = "0x91DDEC", VA = "0x91DDEC", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x91DDF0", Offset = "0x91DDF0", VA = "0x91DDF0", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x91DDF4", Offset = "0x91DDF4", VA = "0x91DDF4", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x91DDF8", Offset = "0x91DDF8", VA = "0x91DDF8", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x91DDFC", Offset = "0x91DDFC", VA = "0x91DDFC")]
		public GiantTrollStateController()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class GiantTrollThrowController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
	{
		[Token(Token = "0x2000528")]
		[CompilerGenerated]
		private sealed class <ThrowRock>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int playerID;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GiantTrollThrowController <>4__this;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TeleportCollider <targetTeleportCollider>5__2;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D87")]
				[Address(RVA = "0x91ECA4", Offset = "0x91ECA4", VA = "0x91ECA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D89")]
				[Address(RVA = "0x91ECEC", Offset = "0x91ECEC", VA = "0x91ECEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x91E3A0", Offset = "0x91E3A0", VA = "0x91E3A0")]
			[DebuggerHidden]
			public <ThrowRock>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x91EA84", Offset = "0x91EA84", VA = "0x91EA84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x91EA88", Offset = "0x91EA88", VA = "0x91EA88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x91ECAC", Offset = "0x91ECAC", VA = "0x91ECAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float throwArcHeight;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform throwOrigin;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject rock;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject rockFracturedPrefab;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Used only in editor to preview throw path")]
		[SerializeField]
		private Transform throwTarget;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GiantTrollRock rockFractured;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hasRock;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private System.Random platformRand;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int randomPlatformSeed;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isRandomSeedSet;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x1700032F")]
		private bool HasRock
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x91DE04", Offset = "0x91DE04", VA = "0x91DE04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x91DE0C", Offset = "0x91DE0C", VA = "0x91DE0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		private int RandomPlatformSeed
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x91DE34", Offset = "0x91DE34", VA = "0x91DE34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x91DE3C", Offset = "0x91DE3C", VA = "0x91DE3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x91DEB8", Offset = "0x91DEB8", VA = "0x91DEB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x91DF9C", Offset = "0x91DF9C", VA = "0x91DF9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x91E000", Offset = "0x91E000", VA = "0x91E000")]
		public void InitializeRock()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x91E028", Offset = "0x91E028", VA = "0x91E028")]
		public void RequestThrowRock()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x91E31C", Offset = "0x91E31C", VA = "0x91E31C")]
		[IteratorStateMachine(typeof(<ThrowRock>d__22))]
		private IEnumerator ThrowRock(int playerID)
		{
			return null;
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x91E3C8", Offset = "0x91E3C8", VA = "0x91E3C8")]
		private void InitializeThrow(Vector3 target)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x91E5B8", Offset = "0x91E5B8", VA = "0x91E5B8")]
		private void KillPlayersOnPlatform(TeleportCollider teleportCollider)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x91E6A8", Offset = "0x91E6A8", VA = "0x91E6A8", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x91DF18", Offset = "0x91DF18", VA = "0x91DF18")]
		private void SetRandomSeed()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x91E838", Offset = "0x91E838", VA = "0x91E838", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x91E848", Offset = "0x91E848", VA = "0x91E848", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x91E84C", Offset = "0x91E84C", VA = "0x91E84C", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x91E850", Offset = "0x91E850", VA = "0x91E850", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x91E854", Offset = "0x91E854", VA = "0x91E854", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x91E858", Offset = "0x91E858", VA = "0x91E858")]
		public static Vector3 GetPointQuadraticBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x91E8CC", Offset = "0x91E8CC", VA = "0x91E8CC")]
		public GiantTrollThrowController()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class ShowLegDust : MonoBehaviour
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> feet;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ParticleSystem> particles;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x91ECF4", Offset = "0x91ECF4", VA = "0x91ECF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x91EEE8", Offset = "0x91EEE8", VA = "0x91EEE8")]
		public void PlayFootstepsSound(int legNumber)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x91EEEC", Offset = "0x91EEEC", VA = "0x91EEEC")]
		private void OnLegDown(int legNumber)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x91EF50", Offset = "0x91EF50", VA = "0x91EF50")]
		public ShowLegDust()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class ThrowRockTrigger : MonoBehaviour
	{
		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x91EFD8", Offset = "0x91EFD8", VA = "0x91EFD8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x91F03C", Offset = "0x91F03C", VA = "0x91F03C")]
		public ThrowRockTrigger()
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class EnemyArrowShootController : MonoBehaviourPun, IResetable, IPunObservable, IInRoomCallbacks
	{
		[Token(Token = "0x4001C35")]
		private const int raycastLenght = 1000;

		[Token(Token = "0x4001C36")]
		private const int maxShootActionAmount = 3;

		[Token(Token = "0x4001C37")]
		private const float arrowVelocity = 60f;

		[Token(Token = "0x4001C38")]
		private const float arrowPrecisionScaler = 0.4f;

		[Token(Token = "0x4001C39")]
		private const float detectionAngle = 60f;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Common References")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform archerAimPoint;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject arrowPrefab;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Header("Child References")]
		private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandler;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OrcBowAnimatorController orcBowAnimatorController;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EnemyBowAdjuster enemyBowAdjuster;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform pivotPoint;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform arrowReference;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LayerMask layersToHit;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int targetId;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int shootActionCounter;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerController playerController;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<PlayerController, Transform> OnStartingShootAction;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerController, Transform> OnEndingShootAction;

		[Token(Token = "0x17000333")]
		public bool IsShooting
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x91F044", Offset = "0x91F044", VA = "0x91F044")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x91F04C", Offset = "0x91F04C", VA = "0x91F04C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public Vector3 PositionToShootAt
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x91F058", Offset = "0x91F058", VA = "0x91F058")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x91F064", Offset = "0x91F064", VA = "0x91F064")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public int TargetId
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x91F070", Offset = "0x91F070", VA = "0x91F070")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x91F078", Offset = "0x91F078", VA = "0x91F078")]
			set
			{
			}
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x91F17C", Offset = "0x91F17C", VA = "0x91F17C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x91F4DC", Offset = "0x91F4DC", VA = "0x91F4DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x91F83C", Offset = "0x91F83C", VA = "0x91F83C")]
		private void DrawArrow()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x91F868", Offset = "0x91F868", VA = "0x91F868")]
		public void TakeShootAction(PlayerController playerController)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x91FE24", Offset = "0x91FE24", VA = "0x91FE24")]
		private void SetNewTargetPosition()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x91FD9C", Offset = "0x91FD9C", VA = "0x91FD9C")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x920114", Offset = "0x920114", VA = "0x920114")]
		private void AttachArrowToString()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x920268", Offset = "0x920268", VA = "0x920268")]
		private void ShootArrow()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x9202EC", Offset = "0x9202EC", VA = "0x9202EC")]
		private void Shoot()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x92059C", Offset = "0x92059C", VA = "0x92059C")]
		[PunRPC]
		private void ReleaseEnemyArrow(int arrowPhotonViewID)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x920908", Offset = "0x920908", VA = "0x920908")]
		private void EndShooting(HealthStateController arg)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x92090C", Offset = "0x92090C", VA = "0x92090C")]
		private void EndShooting()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x9209D8", Offset = "0x9209D8", VA = "0x9209D8", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x920A08", Offset = "0x920A08", VA = "0x920A08", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x920C08", Offset = "0x920C08", VA = "0x920C08", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x920DC4", Offset = "0x920DC4", VA = "0x920DC4", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x920DC8", Offset = "0x920DC8", VA = "0x920DC8", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x920DCC", Offset = "0x920DCC", VA = "0x920DCC", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x920DD0", Offset = "0x920DD0", VA = "0x920DD0", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x920DD4", Offset = "0x920DD4", VA = "0x920DD4")]
		public EnemyArrowShootController()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class OrcFreezeController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
	{
		[Token(Token = "0x200052E")]
		[CompilerGenerated]
		private sealed class <FreeOrcOnPool>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcFreezeController <>4__this;

			[Token(Token = "0x17000336")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC0")]
				[Address(RVA = "0x921B2C", Offset = "0x921B2C", VA = "0x921B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC2")]
				[Address(RVA = "0x921B74", Offset = "0x921B74", VA = "0x921B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x921560", Offset = "0x921560", VA = "0x921560")]
			[DebuggerHidden]
			public <FreeOrcOnPool>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x921A20", Offset = "0x921A20", VA = "0x921A20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x921A24", Offset = "0x921A24", VA = "0x921A24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x921B34", Offset = "0x921B34", VA = "0x921B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052F")]
		[CompilerGenerated]
		private sealed class <BreakIntoIcePartsAfterTime>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcFreezeController <>4__this;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC6")]
				[Address(RVA = "0x921C88", Offset = "0x921C88", VA = "0x921C88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC8")]
				[Address(RVA = "0x921CD0", Offset = "0x921CD0", VA = "0x921CD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x921588", Offset = "0x921588", VA = "0x921588")]
			[DebuggerHidden]
			public <BreakIntoIcePartsAfterTime>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x921B7C", Offset = "0x921B7C", VA = "0x921B7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x921B80", Offset = "0x921B80", VA = "0x921B80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x921C90", Offset = "0x921C90", VA = "0x921C90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C4C")]
		private const float timeToFree = 15f;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcSoundController orcSoundController;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OrcThrowingAxeController throwingAxeController;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IceMaterialAnimator iceMaterialAnimator;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material defaultMaterial;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material iceAxeMaterial;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material iceMaterial;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer axeRenderer;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Renderer> renderers;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> objectsToDisable;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ExplodeObject iceToBeBroken;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isLocallyExploded;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action OnOrcFrozen;

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x920DDC", Offset = "0x920DDC", VA = "0x920DDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x920E34", Offset = "0x920E34", VA = "0x920E34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x920E8C", Offset = "0x920E8C", VA = "0x920E8C", Slot = "5")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x9211F4", Offset = "0x9211F4", VA = "0x9211F4", Slot = "6")]
		public void Break(Vector3 breakDirection)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x920F04", Offset = "0x920F04", VA = "0x920F04")]
		private void StartIceCreatingProcess()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x9214E4", Offset = "0x9214E4", VA = "0x9214E4")]
		[ContextMenu("Collect Renderers")]
		public void CollectRenderers()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x921470", Offset = "0x921470", VA = "0x921470")]
		[IteratorStateMachine(typeof(<FreeOrcOnPool>d__24))]
		private IEnumerator FreeOrcOnPool()
		{
			return null;
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x921180", Offset = "0x921180", VA = "0x921180")]
		[IteratorStateMachine(typeof(<BreakIntoIcePartsAfterTime>d__25))]
		private IEnumerator BreakIntoIcePartsAfterTime()
		{
			return null;
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x9215B0", Offset = "0x9215B0", VA = "0x9215B0")]
		public void SetReferences(List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Material _iceMaterial, Material _defaultMaterial, Material _iceAxeMaterial, List<GameObject> _objectsToDisable)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x921640", Offset = "0x921640", VA = "0x921640")]
		public void SetAxeReference(Renderer _axeRenderer)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x921648", Offset = "0x921648", VA = "0x921648", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x92190C", Offset = "0x92190C", VA = "0x92190C")]
		public OrcFreezeController()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class OrcThrowingAxeController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x2000531")]
		[CompilerGenerated]
		private sealed class <ThrowAxeRoutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcThrowingAxeController <>4__this;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DED")]
				[Address(RVA = "0x92379C", Offset = "0x92379C", VA = "0x92379C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEF")]
				[Address(RVA = "0x9237E4", Offset = "0x9237E4", VA = "0x9237E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x922C94", Offset = "0x922C94", VA = "0x922C94")]
			[DebuggerHidden]
			public <ThrowAxeRoutine>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x923454", Offset = "0x923454", VA = "0x923454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x923458", Offset = "0x923458", VA = "0x923458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x9237A4", Offset = "0x9237A4", VA = "0x9237A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[CompilerGenerated]
		private sealed class <ThrowingAxeRoutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcThrowingAxeController <>4__this;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int clientID;

			[Token(Token = "0x1700033E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF3")]
				[Address(RVA = "0x9238E8", Offset = "0x9238E8", VA = "0x9238E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF5")]
				[Address(RVA = "0x923930", Offset = "0x923930", VA = "0x923930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x9231C0", Offset = "0x9231C0", VA = "0x9231C0")]
			[DebuggerHidden]
			public <ThrowingAxeRoutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x9237EC", Offset = "0x9237EC", VA = "0x9237EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x9237F0", Offset = "0x9237F0", VA = "0x9237F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x9238F0", Offset = "0x9238F0", VA = "0x9238F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FreezeController freezeController;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EnemyGetHitController enemyGetHitController;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AttackController attackController;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float maxThrowingDistance;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float timeFromThrowingAnimationToGettingWeapon;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float timeFromGettingWeaponToReturningToRoute;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float timeFromOrcGotHitToThrowingAxe;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float timeToEnableDisablingAxe;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject sword;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject swordOnBack;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject axe;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform axeParentBone;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool canThrow;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool defaultCanThrow;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool defaultIsThrowing;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool defaultHasThrown;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 positionToThrowAt;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 defaultPositionToThrowAt;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject spawnedAxe;

		[Token(Token = "0x1700033A")]
		public bool IsThrowing
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x921E70", Offset = "0x921E70", VA = "0x921E70")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x921E78", Offset = "0x921E78", VA = "0x921E78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public bool HasThrown
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x921E84", Offset = "0x921E84", VA = "0x921E84")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x921E8C", Offset = "0x921E8C", VA = "0x921E8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event Action<int> AxeThrownAtPlayerEvent
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x921CD8", Offset = "0x921CD8", VA = "0x921CD8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x921DA4", Offset = "0x921DA4", VA = "0x921DA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x921E98", Offset = "0x921E98", VA = "0x921E98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x922120", Offset = "0x922120", VA = "0x922120")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x9223A8", Offset = "0x9223A8", VA = "0x9223A8", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x92255C", Offset = "0x92255C", VA = "0x92255C")]
		public void SetReferences(Transform _axeParentBone, GameObject _sword, GameObject _swordOnBack, GameObject _axe)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x9225BC", Offset = "0x9225BC", VA = "0x9225BC")]
		public bool CheckIfCanThrowAtPlayer(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x922784", Offset = "0x922784", VA = "0x922784")]
		public void ActivateSwordFromBackAfterThrowingAxe()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x9227BC", Offset = "0x9227BC", VA = "0x9227BC")]
		public void StartAxeFly()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x922A20", Offset = "0x922A20", VA = "0x922A20", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x922ABC", Offset = "0x922ABC", VA = "0x922ABC")]
		private void OnOrcGotHit(float maxHealthPoints, Player hitter)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x922C00", Offset = "0x922C00", VA = "0x922C00")]
		private void OnOrcDied(HealthStateController healthStateController)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x922C20", Offset = "0x922C20", VA = "0x922C20")]
		[IteratorStateMachine(typeof(<ThrowAxeRoutine>d__46))]
		private IEnumerator ThrowAxeRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x922CBC", Offset = "0x922CBC", VA = "0x922CBC")]
		private void TryToEnableOrcMovement()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x922CF8", Offset = "0x922CF8", VA = "0x922CF8")]
		[PunRPC]
		private void StartAxePlyRPC(int id)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x922EB4", Offset = "0x922EB4", VA = "0x922EB4")]
		private void SetAxeThrowDirection()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x923020", Offset = "0x923020", VA = "0x923020")]
		private void ThrowAxe(int clientID)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x922444", Offset = "0x922444", VA = "0x922444")]
		private void StartMove()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x9230B4", Offset = "0x9230B4", VA = "0x9230B4")]
		private void FinishAssault()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x9230BC", Offset = "0x9230BC", VA = "0x9230BC")]
		[PunRPC]
		private void RPCPlayAttackAnimation()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x9226B8", Offset = "0x9226B8", VA = "0x9226B8")]
		private Vector3 GetPositionToThrowAtPlayer(int playerId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x9230D8", Offset = "0x9230D8", VA = "0x9230D8")]
		[PunRPC]
		private void RpcStartThrowingAxeRoutineAfterOrcGotHit(int clientID)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x92313C", Offset = "0x92313C", VA = "0x92313C")]
		[IteratorStateMachine(typeof(<ThrowingAxeRoutine>d__56))]
		private IEnumerator ThrowingAxeRoutine(int clientID)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x9231E8", Offset = "0x9231E8", VA = "0x9231E8", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x923428", Offset = "0x923428", VA = "0x923428", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x92342C", Offset = "0x92342C", VA = "0x92342C", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x923430", Offset = "0x923430", VA = "0x923430", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x923434", Offset = "0x923434", VA = "0x923434", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x923438", Offset = "0x923438", VA = "0x923438")]
		public OrcThrowingAxeController()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class SimpleCatapultRockHitController : MonoBehaviourPun, IEnemyGetHit
	{
		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyGetKilledController enemyGetKilledController;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FreezeController freezeController;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FrozenEnemyBreakController frozenEnemyBreakController;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isfreezable;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x923938", Offset = "0x923938", VA = "0x923938")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x923A10", Offset = "0x923A10", VA = "0x923A10", Slot = "4")]
		public bool IsHandling(HitInfoAbstract hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x923A3C", Offset = "0x923A3C", VA = "0x923A3C", Slot = "5")]
		public void GetHit(HitInfoAbstract hitInfo)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x923C4C", Offset = "0x923C4C", VA = "0x923C4C")]
		[PunRPC]
		private void RPCGetHitCatapult(float damage, int hitterActorNumber)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x923E08", Offset = "0x923E08", VA = "0x923E08")]
		public SimpleCatapultRockHitController()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class TrollAttackController : MonoBehaviourPun, IPunObservable, IResetable, ISettable
	{
		[Token(Token = "0x4001C91")]
		private const float facingTargetAngleDifferenceToStartPunch = 5f;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrollAnimatorController trollAnimatorController;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float distanceToCheckShouldGoToAttackSquared;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float distanceToAttackFromSquared;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool wasCheckingForGoingToAttackPlace;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool wasOnAttackStandingPoint;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool wasFacingAttackTarget;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TrollAttackPlaceInfo trollAttackPlaceInfo;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrollAttackState trollAttackState;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool defaultWasCheckingForGoingToAttackPlace;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool defaultWasOnAttackStandingPoint;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool defaultWasFacingAttackTarget;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrollAttackState defaultTrollAttackState;

		[Token(Token = "0x17000340")]
		public bool CanAttack
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x923E10", Offset = "0x923E10", VA = "0x923E10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x923E18", Offset = "0x923E18", VA = "0x923E18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public TrollAttackState TrollAttackState
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x923E24", Offset = "0x923E24", VA = "0x923E24")]
			get
			{
				return default(TrollAttackState);
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x923E2C", Offset = "0x923E2C", VA = "0x923E2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x92416C", Offset = "0x92416C", VA = "0x92416C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x9241C4", Offset = "0x9241C4", VA = "0x9241C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x92481C", Offset = "0x92481C", VA = "0x92481C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x924874", Offset = "0x924874", VA = "0x924874")]
		public void AnimationEventEndShout()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x924920", Offset = "0x924920", VA = "0x924920")]
		public void AnimationEventKillPlayer()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x924A90", Offset = "0x924A90", VA = "0x924A90")]
		public void AnimationEventEndAttack()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x924138", Offset = "0x924138", VA = "0x924138")]
		private void Shout()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x924628", Offset = "0x924628", VA = "0x924628")]
		private bool IsOnAttackStandingPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x924310", Offset = "0x924310", VA = "0x924310")]
		private bool IsCloseEnoughToCheckForGoingToAttackPlace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x9246AC", Offset = "0x9246AC", VA = "0x9246AC")]
		private bool IsFacingAttackTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x924394", Offset = "0x924394", VA = "0x924394")]
		private List<PlayerController> GetPlayersOnAttackPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x924A98", Offset = "0x924A98", VA = "0x924A98", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x924B1C", Offset = "0x924B1C", VA = "0x924B1C", Slot = "6")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x924B94", Offset = "0x924B94", VA = "0x924B94", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x924DCC", Offset = "0x924DCC", VA = "0x924DCC")]
		public TrollAttackController()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class WolfBreakController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
	{
		[Token(Token = "0x2000538")]
		[CompilerGenerated]
		private sealed class <ReturnToPool>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WolfBreakController <>4__this;

			[Token(Token = "0x17000342")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E25")]
				[Address(RVA = "0x925AB8", Offset = "0x925AB8", VA = "0x925AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0x925B00", Offset = "0x925B00", VA = "0x925B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x925564", Offset = "0x925564", VA = "0x925564")]
			[DebuggerHidden]
			public <ReturnToPool>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x9259AC", Offset = "0x9259AC", VA = "0x9259AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x9259B0", Offset = "0x9259B0", VA = "0x9259B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x925AC0", Offset = "0x925AC0", VA = "0x925AC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000539")]
		[CompilerGenerated]
		private sealed class <BreakIntoIcePartsDelayed>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WolfBreakController <>4__this;

			[Token(Token = "0x17000344")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E2B")]
				[Address(RVA = "0x925C14", Offset = "0x925C14", VA = "0x925C14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2D")]
				[Address(RVA = "0x925C5C", Offset = "0x925C5C", VA = "0x925C5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x92558C", Offset = "0x92558C", VA = "0x92558C")]
			[DebuggerHidden]
			public <BreakIntoIcePartsDelayed>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x925B08", Offset = "0x925B08", VA = "0x925B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x925B0C", Offset = "0x925B0C", VA = "0x925B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x925C1C", Offset = "0x925C1C", VA = "0x925C1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CA3")]
		private const float TimeToReleaseInPool = 15f;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> renderers;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ExplodeObject iceToBeBroken;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> objectsToDisable;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IceMaterialAnimator iceMaterialAnimator;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WolfSoundController wolfSoundController;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WolfAnimatorController wolfAnimatorController;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isLocallyExploded;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material iceMaterial;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material defaultMaterial;

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x924EE0", Offset = "0x924EE0", VA = "0x924EE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x924F38", Offset = "0x924F38", VA = "0x924F38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x924F90", Offset = "0x924F90", VA = "0x924F90", Slot = "5")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x9251F8", Offset = "0x9251F8", VA = "0x9251F8", Slot = "6")]
		public void Break(Vector3 breakDirection)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x924FF0", Offset = "0x924FF0", VA = "0x924FF0")]
		private void StartIceCreatingProcess()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x9254E8", Offset = "0x9254E8", VA = "0x9254E8")]
		[ContextMenu("Collect Renderers")]
		public void CollectRenderers()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x925474", Offset = "0x925474", VA = "0x925474")]
		[IteratorStateMachine(typeof(<ReturnToPool>d__20))]
		private IEnumerator ReturnToPool()
		{
			return null;
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x925184", Offset = "0x925184", VA = "0x925184")]
		[IteratorStateMachine(typeof(<BreakIntoIcePartsDelayed>d__21))]
		private IEnumerator BreakIntoIcePartsDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x9255B4", Offset = "0x9255B4", VA = "0x9255B4")]
		public void SetReferences(List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Material _iceMaterial, Material _defaultMaterial, List<GameObject> _objectsToDisable, WolfAnimatorController _wolfAnimatorController, WolfSoundController _wolfSoundController)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x925658", Offset = "0x925658", VA = "0x925658", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x925898", Offset = "0x925898", VA = "0x925898")]
		public WolfBreakController()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class ArrowsRemover : MonoBehaviour
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ArrowsRemover instance;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxNumberOfArrows;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ArrowResetController> arrowsRemovers;

		[Token(Token = "0x17000346")]
		public static ArrowsRemover Instance
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x925C64", Offset = "0x925C64", VA = "0x925C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x925D24", Offset = "0x925D24", VA = "0x925D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x925E38", Offset = "0x925E38", VA = "0x925E38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x925EB8", Offset = "0x925EB8", VA = "0x925EB8")]
		private void SetNewArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x9260DC", Offset = "0x9260DC", VA = "0x9260DC")]
		public void RemoveExcessiveArrows()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x925FA8", Offset = "0x925FA8", VA = "0x925FA8")]
		public void AddNewArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x92624C", Offset = "0x92624C", VA = "0x92624C")]
		public void RemoveArrow(ArrowResetController arrowResetController)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x9262DC", Offset = "0x9262DC", VA = "0x9262DC")]
		public ArrowsRemover()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class ArrowColorSetter : MonoBehaviour, IResetable
	{
		[Token(Token = "0x200053D")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControllerCore playerControllerCore;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ArrowColorSetter <>4__this;

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x9265B0", Offset = "0x9265B0", VA = "0x9265B0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x9265B8", Offset = "0x9265B8", VA = "0x9265B8")]
			internal bool <SetArrowColorCoroutine>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200053E")]
		[CompilerGenerated]
		private sealed class <SetArrowColorCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowColorSetter <>4__this;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0x926850", Offset = "0x926850", VA = "0x926850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0x926898", Offset = "0x926898", VA = "0x926898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x926578", Offset = "0x926578", VA = "0x926578")]
			[DebuggerHidden]
			public <SetArrowColorCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x926698", Offset = "0x926698", VA = "0x926698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x92669C", Offset = "0x92669C", VA = "0x92669C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x926858", Offset = "0x926858", VA = "0x926858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer arrowMeshRenderer;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonView photonView;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isColorSet;

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x926438", Offset = "0x926438", VA = "0x926438")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x926504", Offset = "0x926504", VA = "0x926504")]
		[IteratorStateMachine(typeof(<SetArrowColorCoroutine>d__4))]
		private IEnumerator SetArrowColorCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x9265A0", Offset = "0x9265A0", VA = "0x9265A0", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x9265A8", Offset = "0x9265A8", VA = "0x9265A8")]
		public ArrowColorSetter()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class GameOverStats : GameOverStatsCore
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonView helmet;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int localPlayerOwnerID;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string localPlayerDisplayName;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int attacksDodgedCount;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int sniperShotCount;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int arrowsFiredCount;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int arrowsHitCount;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int closeCallKillCount;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float totalMagicDmgDealt;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float totalDmgDealt;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float totalBossDmgDealt;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int airUnitsHitCount;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool castleDied;

		[Token(Token = "0x17000349")]
		public override int LocalPlayerGameObjectID
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0x9268A0", Offset = "0x9268A0", VA = "0x9268A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034A")]
		public override string LocalPlayerDisplayName
		{
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x9268A8", Offset = "0x9268A8", VA = "0x9268A8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public override int AttacksDodgedCount
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x9268B0", Offset = "0x9268B0", VA = "0x9268B0", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034C")]
		public override int SniperShotCount
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x9268B8", Offset = "0x9268B8", VA = "0x9268B8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034D")]
		public override int ArrowsFiredCount
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x9268C0", Offset = "0x9268C0", VA = "0x9268C0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034E")]
		public override int ArrowsHitCount
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x9268C8", Offset = "0x9268C8", VA = "0x9268C8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034F")]
		public override int CloseCallKillCount
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x9268D0", Offset = "0x9268D0", VA = "0x9268D0", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000350")]
		public override float TotalMagicDmgDealt
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x9268D8", Offset = "0x9268D8", VA = "0x9268D8", Slot = "11")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000351")]
		public override float TotalDmgDealt
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x9268E0", Offset = "0x9268E0", VA = "0x9268E0", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000352")]
		public override float TotalBossDmgDealt
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x9268E8", Offset = "0x9268E8", VA = "0x9268E8", Slot = "13")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000353")]
		public override int AirUnitsHitCount
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x9268F0", Offset = "0x9268F0", VA = "0x9268F0", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x9268F8", Offset = "0x9268F8", VA = "0x9268F8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x926C7C", Offset = "0x926C7C", VA = "0x926C7C")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x92706C", Offset = "0x92706C", VA = "0x92706C")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x927078", Offset = "0x927078", VA = "0x927078")]
		private void OnEnemyHit(float maxHealth, EnemyInfo enemyInfo, HitInfoAbstract hitinfo, float damageDone)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x927164", Offset = "0x927164", VA = "0x927164")]
		private void CountAttacksIn(int playerID)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x927300", Offset = "0x927300", VA = "0x927300")]
		[PunRPC]
		public void RPCCountAttacksIn(int playerID)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x927384", Offset = "0x927384", VA = "0x927384")]
		private void PlayerGotHit(int playerID)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x927408", Offset = "0x927408", VA = "0x927408")]
		private void CountSniperShot(int playerID)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x9275A4", Offset = "0x9275A4", VA = "0x9275A4")]
		[PunRPC]
		public void RPCCountSniperShot(int playerID)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x927124", Offset = "0x927124", VA = "0x927124")]
		private void CountAirUnitHits()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x927628", Offset = "0x927628", VA = "0x927628")]
		private void CountCloseCallKills(int playerID)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x9277C4", Offset = "0x9277C4", VA = "0x9277C4")]
		[PunRPC]
		public void RPCCountCloseCallKill(int playerID)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x927144", Offset = "0x927144", VA = "0x927144")]
		private void CountMagicDamage(float damage)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x927134", Offset = "0x927134", VA = "0x927134")]
		private void CountBossDamage(float damage)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x927848", Offset = "0x927848", VA = "0x927848")]
		private void CountArrowFired(GameObject arrow)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x927154", Offset = "0x927154", VA = "0x927154")]
		private void CountArrowHit()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x927938", Offset = "0x927938", VA = "0x927938", Slot = "15")]
		public override string GetNumbers()
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x927F84", Offset = "0x927F84", VA = "0x927F84")]
		public void SendStatsToMaster()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x928498", Offset = "0x928498", VA = "0x928498")]
		[PunRPC]
		public void RPCSendStatsRequestFromMaster()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x928064", Offset = "0x928064", VA = "0x928064")]
		public void PassDataToMaster()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x92849C", Offset = "0x92849C", VA = "0x92849C")]
		[PunRPC]
		public void RPCPassDataToMaster(int localPlayerOwnerID, string localPlayerDisplayName, int attacksDodgedCount, int sniperShotCount, int arrowsFiredCount, int arrowsHitCount, int closeCallKillCount, float totalMagicDmgDealt, float totalDmgDealt, float totalBossDmgDealt, int airUnitsHitCount)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x92852C", Offset = "0x92852C", VA = "0x92852C")]
		public GameOverStats()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class MenuController : MonoBehaviourPun
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool inputEnabled;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject menuGameObject;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject startButton;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject continueButton;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject waitingForHostToStartTheGameText;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text infoText;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<GameObject> windows;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject mainWindow;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LevelUI levelUI;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected InputActionReference leftInteractionInput;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected InputActionReference rightInteractionInput;

		[Token(Token = "0x4001CE2")]
		private const string cartDeliveredText = "Cart successfully delivered!";

		[Token(Token = "0x4001CE3")]
		private const string cartDestroyedText = "Cart destroyed!";

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MenuController instance;

		[Token(Token = "0x17000354")]
		public static MenuController Instance
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x928584", Offset = "0x928584", VA = "0x928584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsMenuOpened
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x928644", Offset = "0x928644", VA = "0x928644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x928660", Offset = "0x928660", VA = "0x928660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x92871C", Offset = "0x92871C", VA = "0x92871C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x928810", Offset = "0x928810", VA = "0x928810")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x928904", Offset = "0x928904", VA = "0x928904")]
		private void TryToggleMenu(InputAction.CallbackContext callbackContext)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x928914", Offset = "0x928914", VA = "0x928914")]
		private void ToggleMenu()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x928B7C", Offset = "0x928B7C", VA = "0x928B7C")]
		public void SetMasterStartMenu()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x928BB4", Offset = "0x928BB4", VA = "0x928BB4")]
		public void SetNonMasterStartMenu()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x928BEC", Offset = "0x928BEC", VA = "0x928BEC")]
		public void SwitchToDuringGameMenu()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x9289EC", Offset = "0x9289EC", VA = "0x9289EC")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x92894C", Offset = "0x92894C", VA = "0x92894C")]
		public void HideMenu()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x928D5C", Offset = "0x928D5C", VA = "0x928D5C")]
		public void ShowDeathMenu(string deathInfo)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x928DB8", Offset = "0x928DB8", VA = "0x928DB8")]
		public void ShowCartDeliveredMenu()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x928E50", Offset = "0x928E50", VA = "0x928E50")]
		public void ShowCartDestroyedMenu()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x928EE8", Offset = "0x928EE8", VA = "0x928EE8")]
		public void SetLevelUI()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x928F04", Offset = "0x928F04", VA = "0x928F04")]
		public MenuController()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class PlayerController : PlayerControllerCore, IPunObservable
	{
		[Token(Token = "0x2000544")]
		[CompilerGenerated]
		private sealed class <DelayedPlayerObjectDisposal>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBB")]
				[Address(RVA = "0x92B1F8", Offset = "0x92B1F8", VA = "0x92B1F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0x92B240", Offset = "0x92B240", VA = "0x92B240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x92A9B8", Offset = "0x92A9B8", VA = "0x92A9B8")]
			[DebuggerHidden]
			public <DelayedPlayerObjectDisposal>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x92B098", Offset = "0x92B098", VA = "0x92B098", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x92B09C", Offset = "0x92B09C", VA = "0x92B09C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x92B200", Offset = "0x92B200", VA = "0x92B200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatTextCanvas playerNameText;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TeleportPlatformHolder teleportPlatformHolder;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform playerRig;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceChatPlayerController voiceChatPlayerController;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform headTransform;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PlayerColorSetter playerColorSetter;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer helmetMeshRenderer;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpellSelectController spellSelectController;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SpellSelectController leftHandedSpellSelectController;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private HandsDominanceSwitcher handsDominanceSwitcher;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int playerId;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string tournamentPersistentID;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string playerName;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool haveDisabledCameraForBot;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float score;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int deaths;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int kills;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int orderOfLastHit;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera cachedCamera;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool isGameOver;

		[Token(Token = "0x17000356")]
		public override bool Disposed
		{
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x9293A8", Offset = "0x9293A8", VA = "0x9293A8", Slot = "18")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x9293B0", Offset = "0x9293B0", VA = "0x9293B0", Slot = "19")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public string TournamentPersistentID
		{
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x9293BC", Offset = "0x9293BC", VA = "0x9293BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public override PlayerColorSetter PlayerColorSetter
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x9293C4", Offset = "0x9293C4", VA = "0x9293C4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x9293CC", Offset = "0x9293CC", VA = "0x9293CC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public override float Level
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x9293D4", Offset = "0x9293D4", VA = "0x9293D4", Slot = "16")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x9293DC", Offset = "0x9293DC", VA = "0x9293DC", Slot = "17")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public override Transform HeadTransform
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x9293E4", Offset = "0x9293E4", VA = "0x9293E4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public PlayerDeathController PlayerDeathController
		{
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x9293EC", Offset = "0x9293EC", VA = "0x9293EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x929464", Offset = "0x929464", VA = "0x929464")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public override int PlayerId
		{
			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x92946C", Offset = "0x92946C", VA = "0x92946C", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x929474", Offset = "0x929474", VA = "0x929474", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public override float Score
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x929520", Offset = "0x929520", VA = "0x929520", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x929528", Offset = "0x929528", VA = "0x929528", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public override int Deaths
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x929544", Offset = "0x929544", VA = "0x929544", Slot = "14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x92954C", Offset = "0x92954C", VA = "0x92954C", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public override int Hits
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x9295B0", Offset = "0x9295B0", VA = "0x9295B0", Slot = "12")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x9295B8", Offset = "0x9295B8", VA = "0x9295B8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public override int OrderOfLastHit
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x9296C0", Offset = "0x9296C0", VA = "0x9296C0", Slot = "20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x9296C8", Offset = "0x9296C8", VA = "0x9296C8", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public bool CanCastSpells
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x9296D4", Offset = "0x9296D4", VA = "0x9296D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x929758", Offset = "0x929758", VA = "0x929758")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public TeleportCollider ActualTeleportPlatform
		{
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x92979C", Offset = "0x92979C", VA = "0x92979C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public override bool IsPlayerDead
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x9297B8", Offset = "0x9297B8", VA = "0x9297B8", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		public override string Name
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x9297D8", Offset = "0x9297D8", VA = "0x9297D8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x9297E0", Offset = "0x9297E0", VA = "0x9297E0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public override VoiceChatPlayerController VoiceChatPlayerController
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x92983C", Offset = "0x92983C", VA = "0x92983C", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public override TeleportPlatformHolder TeleportPlatformHolder
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x929844", Offset = "0x929844", VA = "0x929844", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public override Transform PlayerRig
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x92984C", Offset = "0x92984C", VA = "0x92984C", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public override PlayerModelFadingController PlayerModelFadingController
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x929854", Offset = "0x929854", VA = "0x929854", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002E")]
		public override event Action OnLocalPlayerKillsNumberChange
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x928FA0", Offset = "0x928FA0", VA = "0x928FA0", Slot = "28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x92903C", Offset = "0x92903C", VA = "0x92903C", Slot = "29")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public override event Action OnLocalPlayerDeathsNumberChange
		{
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x9290D8", Offset = "0x9290D8", VA = "0x9290D8", Slot = "30")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x929174", Offset = "0x929174", VA = "0x929174", Slot = "31")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event Action<PlayerControllerCore> OnPlayerIdSet
		{
			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x929210", Offset = "0x929210", VA = "0x929210")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x9292DC", Offset = "0x9292DC", VA = "0x9292DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x92985C", Offset = "0x92985C", VA = "0x92985C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x9299C0", Offset = "0x9299C0", VA = "0x9299C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x929AB8", Offset = "0x929AB8", VA = "0x929AB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x929F08", Offset = "0x929F08", VA = "0x929F08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x92A310", Offset = "0x92A310", VA = "0x92A310")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x9260BC", Offset = "0x9260BC", VA = "0x9260BC")]
		public int GetPlayerToThrowAtObjectID()
		{
			return default(int);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x92A3D8", Offset = "0x92A3D8", VA = "0x92A3D8")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x92A438", Offset = "0x92A438", VA = "0x92A438")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x928C38", Offset = "0x928C38", VA = "0x928C38")]
		public void ActivateControllers()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x928CC0", Offset = "0x928CC0", VA = "0x928CC0")]
		public void ActivateBow()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x92A778", Offset = "0x92A778", VA = "0x92A778")]
		private void ActivateGestures()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x92A408", Offset = "0x92A408", VA = "0x92A408")]
		private void SetPlayerNameTextVisibility(bool shouldBeVisible)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x92A848", Offset = "0x92A848", VA = "0x92A848")]
		private void RespawnPlayer()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x92A884", Offset = "0x92A884", VA = "0x92A884")]
		private void SetPlayableHandsOnDeathEnd()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x92A8C8", Offset = "0x92A8C8", VA = "0x92A8C8")]
		private void SetPlayableHandsOnPauseClosed()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x929808", Offset = "0x929808", VA = "0x929808")]
		private void UpdatePlayerNameFloatingText()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x92A8FC", Offset = "0x92A8FC", VA = "0x92A8FC")]
		private void SetGameOver()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x92A908", Offset = "0x92A908", VA = "0x92A908")]
		private void RestartGame()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x92A944", Offset = "0x92A944", VA = "0x92A944")]
		[IteratorStateMachine(typeof(<DelayedPlayerObjectDisposal>d__99))]
		private IEnumerator DelayedPlayerObjectDisposal()
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x92A9E0", Offset = "0x92A9E0", VA = "0x92A9E0")]
		private void DisposeOffPlayer()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x92AA54", Offset = "0x92AA54", VA = "0x92AA54")]
		public void SetReferences(PlayerDeathController _playerDeathController)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x92AA5C", Offset = "0x92AA5C", VA = "0x92AA5C", Slot = "32")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x92AFF0", Offset = "0x92AFF0", VA = "0x92AFF0")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class PlayerInitializer : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x2000546")]
		[CompilerGenerated]
		private sealed class <InitializeRemotePlayer>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ECF")]
				[Address(RVA = "0x92BD4C", Offset = "0x92BD4C", VA = "0x92BD4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED1")]
				[Address(RVA = "0x92BD94", Offset = "0x92BD94", VA = "0x92BD94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x92BB68", Offset = "0x92BB68", VA = "0x92BB68")]
			[DebuggerHidden]
			public <InitializeRemotePlayer>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x92BC44", Offset = "0x92BC44", VA = "0x92BC44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x92BC48", Offset = "0x92BC48", VA = "0x92BC48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x92BD54", Offset = "0x92BD54", VA = "0x92BD54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000547")]
		[CompilerGenerated]
		private sealed class <ResetRecentlyConnectedStatus>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED5")]
				[Address(RVA = "0x92BE60", Offset = "0x92BE60", VA = "0x92BE60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED7")]
				[Address(RVA = "0x92BEA8", Offset = "0x92BEA8", VA = "0x92BEA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x92BB90", Offset = "0x92BB90", VA = "0x92BB90")]
			[DebuggerHidden]
			public <ResetRecentlyConnectedStatus>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x92BD9C", Offset = "0x92BD9C", VA = "0x92BD9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x92BDA0", Offset = "0x92BDA0", VA = "0x92BDA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x92BE68", Offset = "0x92BE68", VA = "0x92BE68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000548")]
		[CompilerGenerated]
		private sealed class <InitializeOculusRig>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDB")]
				[Address(RVA = "0x92BF60", Offset = "0x92BF60", VA = "0x92BF60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDD")]
				[Address(RVA = "0x92BFA8", Offset = "0x92BFA8", VA = "0x92BFA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x92BBB8", Offset = "0x92BBB8", VA = "0x92BBB8")]
			[DebuggerHidden]
			public <InitializeOculusRig>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x92BEB0", Offset = "0x92BEB0", VA = "0x92BEB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x92BEB4", Offset = "0x92BEB4", VA = "0x92BEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x92BF68", Offset = "0x92BF68", VA = "0x92BF68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<PlayerInitializer, bool> OnIsUsedChange;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OVRCameraRig;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerManager controllerManager;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioListener audioListener;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerController observer;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject helm;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isRecentlyConnected;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float delayBeforeConnected;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRSDK platformType;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RoomScaleHolder roomScaleHolder;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool hasBeenInitializedWithoutPlayerBefore;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject CamerasParent;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool isDeathMatch;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TeleportPlatformHolder teleportPlatformHolder;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameOverStats gameOverStats;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PlayerNameTextEnabler playerNameTextEnabler;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlatformTypeContainer platformTypeContainer;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HandsDominanceSwitcher handsDominanceSwitcher;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HandsController rightHandedHandsController;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HandsController leftHandedHandsController;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SpellSelectController rightHandSpellSelectController;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SpellSelectController leftHandSpellSelectController;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BowController rightHandBowController;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BowController leftHandBowController;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TorsoEnabler torsoEnabler;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private EquipmentChanger equipmentChangerRightHanded;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private EquipmentChanger equipmentChangerLeftHanded;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TorsoTracker torsoTracker;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private OffsetSetter offsetSetterRightHand;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private OffsetSetter offsetSetterLeftHand;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GesturesInputController gesturesInputControllerRightHand;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GesturesInputController gesturesInputControllerLeftHand;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private SteamVR_LaserPointer steamVR_LaserPointerRightHand;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SteamVR_LaserPointer steamVR_LaserPointerLeftHand;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private HandPickUpController leftHandPickUpController;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private HandPickUpController rightHandPickUpController;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private CameraEnabler cameraEnabler;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private VoiceChatPlayerController voiceChatController;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private PlayerJoiningScreenController loadingController;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private RainController rainController;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private PlayerDeathController playerDeathController;

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x92B248", Offset = "0x92B248", VA = "0x92B248")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x92B4F0", Offset = "0x92B4F0", VA = "0x92B4F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x92B548", Offset = "0x92B548", VA = "0x92B548")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x92B2A8", Offset = "0x92B2A8", VA = "0x92B2A8")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x92B8A0", Offset = "0x92B8A0", VA = "0x92B8A0")]
		private void InitializeComponentsWithPlayer(bool isLocalPlayer)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x92BA5C", Offset = "0x92BA5C", VA = "0x92BA5C")]
		private void InitializePlayerModelFadingController()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x92BB48", Offset = "0x92BB48", VA = "0x92BB48")]
		public void ShowWaitForMaster()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x92B82C", Offset = "0x92B82C", VA = "0x92B82C")]
		[IteratorStateMachine(typeof(<InitializeRemotePlayer>d__50))]
		private IEnumerator InitializeRemotePlayer()
		{
			return null;
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x92B738", Offset = "0x92B738", VA = "0x92B738")]
		[IteratorStateMachine(typeof(<ResetRecentlyConnectedStatus>d__51))]
		private IEnumerator ResetRecentlyConnectedStatus(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x92B7BC", Offset = "0x92B7BC", VA = "0x92B7BC")]
		[IteratorStateMachine(typeof(<InitializeOculusRig>d__52))]
		private IEnumerator InitializeOculusRig(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x92BBE0", Offset = "0x92BBE0", VA = "0x92BBE0")]
		public void SetReferences(PlayerDeathController _playerDeathController)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x92BBF0", Offset = "0x92BBF0", VA = "0x92BBF0", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x92BBF4", Offset = "0x92BBF4", VA = "0x92BBF4")]
		public PlayerInitializer()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class CarriageReferencesSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Components")]
		private CarriageCartBehaviourController carriageCartBehaviourController;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonView rootPhotonView;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Mobile References")]
		[SerializeField]
		private CarriageReferences carriageReferencesMobile;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("PC References")]
		private CarriageReferences carriageReferencesPC;

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x92BFB0", Offset = "0x92BFB0", VA = "0x92BFB0", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x92C074", Offset = "0x92C074", VA = "0x92C074")]
		private void SetReferences(CarriageReferences carriageReferences)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x92C0F0", Offset = "0x92C0F0", VA = "0x92C0F0")]
		public CarriageReferencesSetter()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class DwarfsAttackTargetController : MonoBehaviour, IAttackTarget
	{
		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PhotonView targetView;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController[] dwarfControllers;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfsSoundController dwarfsSoundController;

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x92C0F8", Offset = "0x92C0F8", VA = "0x92C0F8", Slot = "5")]
		public void GetHit(AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x92C268", Offset = "0x92C268", VA = "0x92C268", Slot = "4")]
		public int GetPhotonID()
		{
			return default(int);
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x92C18C", Offset = "0x92C18C", VA = "0x92C18C")]
		private void PlayDwarfBlockAnimation(AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x92C284", Offset = "0x92C284", VA = "0x92C284")]
		public DwarfsAttackTargetController()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class PayloadTeleportController : PayloadTeleportControllerCore, IInRoomCallbacks
	{
		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PayloadStageController payloadStageController;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int numberOfPlatforms;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TeleportCollider> currentTeleportColliders;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isWaitingForMove;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x92C28C", Offset = "0x92C28C", VA = "0x92C28C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x92C33C", Offset = "0x92C33C", VA = "0x92C33C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x92C3EC", Offset = "0x92C3EC", VA = "0x92C3EC", Slot = "4")]
		public override void MovePlayers(List<TeleportCollider> teleports)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x92C6A8", Offset = "0x92C6A8", VA = "0x92C6A8")]
		private TeleportCollider MovePlayerOnNetwork(PlayerControllerCore playerControllerCore, List<TeleportCollider> teleportColliders)
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x92CA38", Offset = "0x92CA38", VA = "0x92CA38")]
		[PunRPC]
		private void RPCMovePlayer(int teleportIndex)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x92C82C", Offset = "0x92C82C", VA = "0x92C82C")]
		private TeleportCollider GetAppropriatePlatformForPlayer(Transform playerTransform, List<TeleportCollider> teleportColliders)
		{
			return null;
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x92CAAC", Offset = "0x92CAAC", VA = "0x92CAAC")]
		private void HandleNewPlayerWhenJoin(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x92CAEC", Offset = "0x92CAEC", VA = "0x92CAEC")]
		private static bool IsInPropperState(PlayerControllerCore playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x92CB94", Offset = "0x92CB94", VA = "0x92CB94", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x92CBF8", Offset = "0x92CBF8", VA = "0x92CBF8", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x92CBFC", Offset = "0x92CBFC", VA = "0x92CBFC", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x92CC00", Offset = "0x92CC00", VA = "0x92CC00", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x92CC04", Offset = "0x92CC04", VA = "0x92CC04", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x92CC08", Offset = "0x92CC08", VA = "0x92CC08")]
		public PayloadTeleportController()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class StageTeleporter : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public delegate void PlayerTeleported();

		[Token(Token = "0x200054E")]
		[CompilerGenerated]
		private sealed class <TeleportAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StageTeleporter <>4__this;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F03")]
				[Address(RVA = "0x92D520", Offset = "0x92D520", VA = "0x92D520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F05")]
				[Address(RVA = "0x92D568", Offset = "0x92D568", VA = "0x92D568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x92CFA4", Offset = "0x92CFA4", VA = "0x92CFA4")]
			[DebuggerHidden]
			public <TeleportAfterDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x92D2C0", Offset = "0x92D2C0", VA = "0x92D2C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x92D2C4", Offset = "0x92D2C4", VA = "0x92D2C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x92D528", Offset = "0x92D528", VA = "0x92D528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054F")]
		[CompilerGenerated]
		private sealed class <TextAnimation>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int timeToTeleport;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FloatTextCanvas text;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StageTeleporter <>4__this;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <time>5__2;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F09")]
				[Address(RVA = "0x92D7A4", Offset = "0x92D7A4", VA = "0x92D7A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0B")]
				[Address(RVA = "0x92D7EC", Offset = "0x92D7EC", VA = "0x92D7EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x92D064", Offset = "0x92D064", VA = "0x92D064")]
			[DebuggerHidden]
			public <TextAnimation>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x92D570", Offset = "0x92D570", VA = "0x92D570", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x92D574", Offset = "0x92D574", VA = "0x92D574", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x92D7AC", Offset = "0x92D7AC", VA = "0x92D7AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D47")]
		private const float distanceFromPlayer = 2f;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TeleportCollider> teleports;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatTextCanvas timeToTeleportText;

		[Token(Token = "0x14000031")]
		public static event PlayerTeleported OnPlayerTeleported
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x92CC18", Offset = "0x92CC18", VA = "0x92CC18")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x92CCD0", Offset = "0x92CCD0", VA = "0x92CCD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x92CD88", Offset = "0x92CD88", VA = "0x92CD88")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x92CD8C", Offset = "0x92CD8C", VA = "0x92CD8C")]
		public void TeleportAfterDelay(float delay, List<TeleportCollider> teleports)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x92CF20", Offset = "0x92CF20", VA = "0x92CF20")]
		[IteratorStateMachine(typeof(<TeleportAfterDelay>d__9))]
		private IEnumerator TeleportAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x92CDE0", Offset = "0x92CDE0", VA = "0x92CDE0")]
		private void ShowMessage(float timeToDestroyText)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x92CFCC", Offset = "0x92CFCC", VA = "0x92CFCC")]
		[IteratorStateMachine(typeof(<TextAnimation>d__11))]
		private IEnumerator TextAnimation(FloatTextCanvas text, int timeToTeleport)
		{
			return null;
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x92D08C", Offset = "0x92D08C", VA = "0x92D08C")]
		private bool IsPlayerOnWrongPlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x92D150", Offset = "0x92D150", VA = "0x92D150")]
		public StageTeleporter()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class PlayerMaterialsColorSetterMobile : PlayerMaterialsColorSetter, IResetable
	{
		[Token(Token = "0x2000551")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldBeGhost;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x92DDFC", Offset = "0x92DDFC", VA = "0x92DDFC")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x92DE04", Offset = "0x92DE04", VA = "0x92DE04")]
			internal void <SetIsUsingGhostMaterialsAsync>b__0(Renderer item)
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x92DE44", Offset = "0x92DE44", VA = "0x92DE44")]
			internal void <SetIsUsingGhostMaterialsAsync>b__1(Renderer item)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000552")]
		[CompilerGenerated]
		private struct <SetIsUsingGhostMaterialsAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool shouldBeGhost;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x92DE84", Offset = "0x92DE84", VA = "0x92DE84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x92E294", Offset = "0x92E294", VA = "0x92E294", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000553")]
		[CompilerGenerated]
		private sealed class <Initialize>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F21")]
				[Address(RVA = "0x92E68C", Offset = "0x92E68C", VA = "0x92E68C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F23")]
				[Address(RVA = "0x92E6D4", Offset = "0x92E6D4", VA = "0x92E6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x92DBE4", Offset = "0x92DBE4", VA = "0x92DBE4")]
			[DebuggerHidden]
			public <Initialize>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x92E2A0", Offset = "0x92E2A0", VA = "0x92E2A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x92E2A4", Offset = "0x92E2A4", VA = "0x92E2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x92E694", Offset = "0x92E694", VA = "0x92E694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D55")]
		private const int helmetInitializationDelay = 10;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerController _playerController;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> gauntletRenderers;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Renderer> gauntletViveKnucklesWMRRenderers;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer torso;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material torsoInitialMaterial;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EquipmentChanger equipmentChanger;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material deathMaterial;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer helmet;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material helmetInitialMaterial;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material handInitialMaterial;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material handInitialViveOrKnucklesMaterial;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasHelmetInitialized;

		[Token(Token = "0x14000032")]
		public override event Action<bool> OnMaterialsChanged
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x92D7F4", Offset = "0x92D7F4", VA = "0x92D7F4", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x92D8A4", Offset = "0x92D8A4", VA = "0x92D8A4", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public override event Action OnMaterialsInitialized
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x92D954", Offset = "0x92D954", VA = "0x92D954", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x92D9F0", Offset = "0x92D9F0", VA = "0x92D9F0", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x92DA8C", Offset = "0x92DA8C", VA = "0x92DA8C", Slot = "8")]
		[AsyncStateMachine(typeof(<SetIsUsingGhostMaterialsAsync>d__19))]
		public override void SetIsUsingGhostMaterialsAsync(bool shouldBeGhost)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x92DB50", Offset = "0x92DB50", VA = "0x92DB50", Slot = "9")]
		public override void InitializeMaterials()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x92DB70", Offset = "0x92DB70", VA = "0x92DB70")]
		[IteratorStateMachine(typeof(<Initialize>d__21))]
		public IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x92DC0C", Offset = "0x92DC0C", VA = "0x92DC0C", Slot = "10")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x92DC14", Offset = "0x92DC14", VA = "0x92DC14")]
		[ContextMenu("Get Renders")]
		private void GetRenderers()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x92DD90", Offset = "0x92DD90", VA = "0x92DD90")]
		public PlayerMaterialsColorSetterMobile()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class PlayerMaterialsColorSetterPC : PlayerMaterialsColorSetter, IResetable
	{
		[Token(Token = "0x2000556")]
		[CompilerGenerated]
		private sealed class <Initialize>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F3A")]
				[Address(RVA = "0x92F348", Offset = "0x92F348", VA = "0x92F348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F3C")]
				[Address(RVA = "0x92F390", Offset = "0x92F390", VA = "0x92F390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x92EB3C", Offset = "0x92EB3C", VA = "0x92EB3C")]
			[DebuggerHidden]
			public <Initialize>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x92EF28", Offset = "0x92EF28", VA = "0x92EF28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x92EF2C", Offset = "0x92EF2C", VA = "0x92EF2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x92F350", Offset = "0x92F350", VA = "0x92F350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000557")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool shouldBeGhost;

			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x92F398", Offset = "0x92F398", VA = "0x92F398")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x92F3A0", Offset = "0x92F3A0", VA = "0x92F3A0")]
			internal void <SetIsUsingGhostMaterialsAsync>b__0(Renderer item)
			{
			}

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x92F3E0", Offset = "0x92F3E0", VA = "0x92F3E0")]
			internal void <SetIsUsingGhostMaterialsAsync>b__1(Renderer item)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000558")]
		[CompilerGenerated]
		private struct <SetIsUsingGhostMaterialsAsync>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool shouldBeGhost;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x92F420", Offset = "0x92F420", VA = "0x92F420", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x92F840", Offset = "0x92F840", VA = "0x92F840", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001D71")]
		private const int helmetInitializationDelay = 10;

		[Token(Token = "0x4001D72")]
		private const string nomalMapKey = "_BumpMap";

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> gauntletRenderers;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Renderer> gauntletViveKnucklesWMRRenderers;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer torso;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material torsoInitialMaterial;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material torsoDeathMaterial;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material helmetDeathMaterial;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EquipmentChanger equipmentChanger;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material gauntletGhostMaterial;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material[] gauntletGhostMaterials;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer helmet;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material helmetInitMaterial;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material gauntletInitMaterial;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material[] gauntletViveWMRInitMaterial;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool areMaterialsInitialized;

		[Token(Token = "0x14000034")]
		public override event Action<bool> OnMaterialsChanged
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x92E810", Offset = "0x92E810", VA = "0x92E810", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x92E8C0", Offset = "0x92E8C0", VA = "0x92E8C0", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public override event Action OnMaterialsInitialized
		{
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x92E970", Offset = "0x92E970", VA = "0x92E970", Slot = "6")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x92EA0C", Offset = "0x92EA0C", VA = "0x92EA0C", Slot = "7")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x92EAA8", Offset = "0x92EAA8", VA = "0x92EAA8", Slot = "9")]
		public override void InitializeMaterials()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x92EAC8", Offset = "0x92EAC8", VA = "0x92EAC8")]
		[IteratorStateMachine(typeof(<Initialize>d__24))]
		public IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x92EB64", Offset = "0x92EB64", VA = "0x92EB64", Slot = "8")]
		[AsyncStateMachine(typeof(<SetIsUsingGhostMaterialsAsync>d__25))]
		public override void SetIsUsingGhostMaterialsAsync(bool shouldBeGhost)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x92EC24", Offset = "0x92EC24", VA = "0x92EC24")]
		private void SetGhostMaterialNormals()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x92ED00", Offset = "0x92ED00", VA = "0x92ED00")]
		private void SetGauntletGhostMaterial(Renderer renderer, Material material)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x92ED1C", Offset = "0x92ED1C", VA = "0x92ED1C")]
		private void SetMultipleGauntletMaterials(Renderer render, Material[] materials)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x92ED38", Offset = "0x92ED38", VA = "0x92ED38", Slot = "10")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x92ED40", Offset = "0x92ED40", VA = "0x92ED40")]
		[ContextMenu("Get Renders")]
		private void GetRenderers()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x92EEBC", Offset = "0x92EEBC", VA = "0x92EEBC")]
		public PlayerMaterialsColorSetterPC()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class PlayerTargetAlertController : MonoBehaviour
	{
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioItem enemyAlertSound;

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x92F980", Offset = "0x92F980", VA = "0x92F980")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x92FA9C", Offset = "0x92FA9C", VA = "0x92FA9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x92FBB8", Offset = "0x92FBB8", VA = "0x92FBB8")]
		public void PlayAlert(PlayerController playerController, Transform transform)
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x92FC00", Offset = "0x92FC00", VA = "0x92FC00")]
		public PlayerTargetAlertController()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class AxeReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Componenets")]
		[SerializeField]
		private OrcThrowingAxeController orcThrowingAxeController;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Mobile References")]
		private AxeReferences axeReferencesMOBILE;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("PC References")]
		private AxeReferences axeReferencesPC;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x92FC08", Offset = "0x92FC08", VA = "0x92FC08", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x92FD2C", Offset = "0x92FD2C", VA = "0x92FD2C")]
		public AxeReferenceSetter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055C")]
	public class GiantTrollReferences
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Slowing Controller")]
		public BodyFreezeEffect SlowingEffect;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("GameObject BodyMesh:")]
		public Material BodyMaterial;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinQuality SkinQuality;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Body Dissapear Controller")]
		public EnemyRenderers EnemyRenderers;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowCastingMode ShadowCastingMode;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x92FD34", Offset = "0x92FD34", VA = "0x92FD34")]
		public GiantTrollReferences()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class GiantTrollReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Components")]
		private SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Mobile References")]
		[SerializeField]
		private GiantTrollReferences trollReferencesMobile;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("PC References")]
		private GiantTrollReferences trollReferencesMobilePC;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x92FD3C", Offset = "0x92FD3C", VA = "0x92FD3C", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x92FE00", Offset = "0x92FE00", VA = "0x92FE00")]
		private void SetReferences(GiantTrollReferences references)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x92FED8", Offset = "0x92FED8", VA = "0x92FED8")]
		public GiantTrollReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class OrcReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Components")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FrozenEnemyBreakOnCollisionController frozenEnemyBreakOnCollisionController;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Mobile References")]
		[SerializeField]
		private OrcReferences orcReferencesMobile;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("PC References")]
		[SerializeField]
		private OrcReferences orcReferencesPC;

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x92FEE0", Offset = "0x92FEE0", VA = "0x92FEE0", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x92FFA4", Offset = "0x92FFA4", VA = "0x92FFA4")]
		private void SetReferences(OrcReferences orcReferences)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x930068", Offset = "0x930068", VA = "0x930068")]
		public OrcReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class PlayerReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Components")]
		[SerializeField]
		private PlayerDeathControllerNetwork playerDeathControllerNetwork;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DeathIndicatorEffectController deathIndicatorEffectController;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerInitializer playerInitializer;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerColorSetter playerCollorSetter;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<BowToPlatformAdjuster> bowAdjusters;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlovesFader glovesFader;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PlayerDeathUIWave playerDeathUIWave;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Header("Mobile")]
		private PlayerReferences playerReferencesMobile;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("PC")]
		[SerializeField]
		private PlayerReferences playerReferencesPC;

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x930070", Offset = "0x930070", VA = "0x930070", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x930134", Offset = "0x930134", VA = "0x930134")]
		private void SetReferences(PlayerReferences playerReferences)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x9303E4", Offset = "0x9303E4", VA = "0x9303E4")]
		public PlayerReferenceSetter()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class WolfReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Components")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WolfBreakController wolfBreakController;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WolfAnimatorController wolfAnimatorController;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WolfSoundController wolfSoundController;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FrozenEnemyBreakOnCollisionController frozenEnemyBreakOnCollisionController;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Mobile References")]
		[SerializeField]
		private WolfReferences wolfMobileReferences;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("PC References")]
		[SerializeField]
		private WolfReferences wolfPCReferences;

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x93047C", Offset = "0x93047C", VA = "0x93047C", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x930540", Offset = "0x930540", VA = "0x930540")]
		private void SetReferences(WolfReferences wolfReferences)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x9305EC", Offset = "0x9305EC", VA = "0x9305EC")]
		public WolfReferenceSetter()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class ShowDust : MonoBehaviour
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBePlayed;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider fallTrigger;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IsInWaterDetector isInWaterDetector;

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x9305F4", Offset = "0x9305F4", VA = "0x9305F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x9306DC", Offset = "0x9306DC", VA = "0x9306DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x9307CC", Offset = "0x9307CC", VA = "0x9307CC")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x93089C", Offset = "0x93089C", VA = "0x93089C")]
		private static bool HasCollidedWithDustyObject(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x9308F8", Offset = "0x9308F8", VA = "0x9308F8")]
		public void SetActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x930918", Offset = "0x930918", VA = "0x930918")]
		private void OnHealthPointsChanged(float healthPoints)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x93093C", Offset = "0x93093C", VA = "0x93093C")]
		public ShowDust()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class KillNotificationSoundController : MonoBehaviourPun
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource killNotifiactionSource;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource beingKilledNotificationSource;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentSoundPitch;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float initialSoundPitch;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float maxSoundPitch;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int killingStreakCount;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pitchKillingStreakGain;

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x93094C", Offset = "0x93094C", VA = "0x93094C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x9309CC", Offset = "0x9309CC", VA = "0x9309CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x930A4C", Offset = "0x930A4C", VA = "0x930A4C")]
		public void SetKillNotificationSound(PlayerControllerCore victim, PlayerControllerCore killer)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x930BF4", Offset = "0x930BF4", VA = "0x930BF4")]
		[PunRPC]
		public void RpcResetKillNotificationSound()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x930C18", Offset = "0x930C18", VA = "0x930C18")]
		[PunRPC]
		public void RpcPlayKillNotifiactionSound()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x930C7C", Offset = "0x930C7C", VA = "0x930C7C")]
		public KillNotificationSoundController()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class TournamentLeaderboardController : MonoBehaviourPun, IInRoomCallbacks
	{
		[Token(Token = "0x4001DCB")]
		private const int asciiIndexOfALetter = 65;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string id;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int nextId;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TournamentPlayer> allEnrolledPlayers;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TournamentPlayer> qualifiedPlayers;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TournamentPlayer> unqualifiedPlayers;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TournamentLeaderboardGUIController finalLeaderboardGUI;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TournamentProgressController progressController;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TournamentInfoWindowController tournamentInfoWindowController;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TournamentRejoin tournamentRejoin;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int playerCountThatQualifiesForNextRound;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int semiFinalId;

		[Token(Token = "0x17000379")]
		public string Id
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x930CA8", Offset = "0x930CA8", VA = "0x930CA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public List<TournamentPlayer> AllPlayersSorted
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x930EC0", Offset = "0x930EC0", VA = "0x930EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x931058", Offset = "0x931058", VA = "0x931058")]
		private static int GetNewId()
		{
			return default(int);
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x9310B8", Offset = "0x9310B8", VA = "0x9310B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x93141C", Offset = "0x93141C", VA = "0x93141C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x931474", Offset = "0x931474", VA = "0x931474")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x9314CC", Offset = "0x9314CC", VA = "0x9314CC")]
		public static void ResetID()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x931548", Offset = "0x931548", VA = "0x931548")]
		[PunRPC]
		public void RPCAddNewPlayer(Player newPlayer, string playerID)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x932864", Offset = "0x932864", VA = "0x932864")]
		internal void UnqualifyPlayersNotReturnedfromLastRound()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x931204", Offset = "0x931204", VA = "0x931204")]
		public static string GetPlayerID()
		{
			return null;
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x931DE8", Offset = "0x931DE8", VA = "0x931DE8")]
		private void SynchronizeLeaderboardsWithOtherPlayers()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x931910", Offset = "0x931910", VA = "0x931910")]
		public void AddQualifiedPlayer(TournamentPlayer player)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x9329AC", Offset = "0x9329AC", VA = "0x9329AC")]
		public void AddUnqualifiedPlayer(TournamentPlayer player)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x93298C", Offset = "0x93298C", VA = "0x93298C")]
		private void ChangePlayerInfoPanelColor(string id, bool qualified)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x932C14", Offset = "0x932C14", VA = "0x932C14")]
		public void AddMatchResult(List<TournamentPlayerResult> playerResultsFromMatch)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x933148", Offset = "0x933148", VA = "0x933148")]
		[PunRPC]
		private void RpcShowLeaderboard(string[] playersNames, int[] playersHits, int[] playersDeaths, int[] playersOrdersOfHits, int[] stagesThatPlayersGotTo, bool[] playersIsQualifieds, bool[] playersIsFinals, string[] playersIds, int[] playersTotalHits, int[] playersTotalDeaths)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x930F70", Offset = "0x930F70", VA = "0x930F70")]
		private void SortTournamentPlayerLists()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x93374C", Offset = "0x93374C", VA = "0x93374C")]
		private int CompareTournamentPlayers(TournamentPlayer playerOne, TournamentPlayer playerTwo)
		{
			return default(int);
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x933830", Offset = "0x933830", VA = "0x933830", Slot = "4")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x93389C", Offset = "0x93389C", VA = "0x93389C", Slot = "5")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x933CC4", Offset = "0x933CC4", VA = "0x933CC4", Slot = "6")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x933CC8", Offset = "0x933CC8", VA = "0x933CC8", Slot = "7")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x933CCC", Offset = "0x933CCC", VA = "0x933CCC", Slot = "8")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x933CD0", Offset = "0x933CD0", VA = "0x933CD0")]
		public TournamentLeaderboardController()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class EnemyIndicatorsController : MonoBehaviour
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnemyIndicator enemyIndicatorPrefab;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform holder;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform player;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Transform, EnemyIndicator> indicators;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x934230", Offset = "0x934230", VA = "0x934230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x9344E4", Offset = "0x9344E4", VA = "0x9344E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x934798", Offset = "0x934798", VA = "0x934798")]
		public void Create(PlayerController playerControler, Transform target)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x9348C0", Offset = "0x9348C0", VA = "0x9348C0")]
		public void Destroy(PlayerController playerControler, Transform target)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x9349B4", Offset = "0x9349B4", VA = "0x9349B4")]
		private void RemoveAllIndicators(int arg)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x934B3C", Offset = "0x934B3C", VA = "0x934B3C")]
		public EnemyIndicatorsController()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class InteractableItemIcon : MonoBehaviour
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float distanceModifier;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float positionOffset;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animTime;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float animSizeMultiplier;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[RequireInterface(typeof(IWithIcon))]
		[SerializeField]
		private UnityEngine.Object _connectedObject;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform myRectTransform;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image image;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distanceFromCamera;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 defaultScale;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timer;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool IsRising;

		[Token(Token = "0x1700037B")]
		private IWithIcon connectedObject
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x934BC4", Offset = "0x934BC4", VA = "0x934BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x934C0C", Offset = "0x934C0C", VA = "0x934C0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x934CB8", Offset = "0x934CB8", VA = "0x934CB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x934D08", Offset = "0x934D08", VA = "0x934D08")]
		private void HandleActivation()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x934E7C", Offset = "0x934E7C", VA = "0x934E7C")]
		private void SetTimer()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x934EFC", Offset = "0x934EFC", VA = "0x934EFC")]
		private void SetSize()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x935058", Offset = "0x935058", VA = "0x935058")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x9350C8", Offset = "0x9350C8", VA = "0x9350C8")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x935150", Offset = "0x935150", VA = "0x935150")]
		public InteractableItemIcon()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class SpellsGiver : MonoBehaviour
	{
		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpellsMenuController spellController;

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x935164", Offset = "0x935164", VA = "0x935164")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x9351EC", Offset = "0x9351EC", VA = "0x9351EC")]
		public void UnlockAllSpells()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x935208", Offset = "0x935208", VA = "0x935208")]
		public SpellsGiver()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class TournamentMasterQuitController : MonoBehaviourPun, IInRoomCallbacks
	{
		[Token(Token = "0x2000570")]
		[CompilerGenerated]
		private sealed class <TryToClearBrokenMasterExitCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TournamentMasterQuitController <>4__this;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FBF")]
				[Address(RVA = "0x935C54", Offset = "0x935C54", VA = "0x935C54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FC1")]
				[Address(RVA = "0x935C9C", Offset = "0x935C9C", VA = "0x935C9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x935334", Offset = "0x935334", VA = "0x935334")]
			[DebuggerHidden]
			public <TryToClearBrokenMasterExitCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x93589C", Offset = "0x93589C", VA = "0x93589C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x9358A0", Offset = "0x9358A0", VA = "0x9358A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x935C5C", Offset = "0x935C5C", VA = "0x935C5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DFB")]
		private const int wrongPlayersCount = 2;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayersManager playersManager;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float retryTime;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool hasTriedMoreThanOnce;

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x935210", Offset = "0x935210", VA = "0x935210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x935268", Offset = "0x935268", VA = "0x935268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x9352C0", Offset = "0x9352C0", VA = "0x9352C0")]
		[IteratorStateMachine(typeof(<TryToClearBrokenMasterExitCoroutine>d__6))]
		private IEnumerator TryToClearBrokenMasterExitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x93535C", Offset = "0x93535C", VA = "0x93535C")]
		private PlayerController TryToGetRepeatedPlayerWithNegativeIndex()
		{
			return null;
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x9355C0", Offset = "0x9355C0", VA = "0x9355C0", Slot = "8")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x935668", Offset = "0x935668", VA = "0x935668", Slot = "4")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x93566C", Offset = "0x93566C", VA = "0x93566C", Slot = "5")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x935714", Offset = "0x935714", VA = "0x935714", Slot = "6")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x935718", Offset = "0x935718", VA = "0x935718", Slot = "7")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x93571C", Offset = "0x93571C", VA = "0x93571C")]
		public TournamentMasterQuitController()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class TrailRendererEnabler : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrailColorSetter trailColorSetter;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArrowFlyController _arrowFlyController;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TrailRenderer trailOnArrow;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool shouldBeDisabledOnCollision;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x935F40", Offset = "0x935F40", VA = "0x935F40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x936018", Offset = "0x936018", VA = "0x936018")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x936140", Offset = "0x936140", VA = "0x936140")]
		public void InitializeTrail()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x93627C", Offset = "0x93627C", VA = "0x93627C")]
		public void TurnOffTrailRenderer()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x936290", Offset = "0x936290", VA = "0x936290")]
		public void EnableTrailRenderer(bool isEnabled)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x9362E4", Offset = "0x9362E4", VA = "0x9362E4")]
		private void SetTrailColorForPlayer(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x93638C", Offset = "0x93638C", VA = "0x93638C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x936414", Offset = "0x936414", VA = "0x936414")]
		public TrailRendererEnabler()
		{
		}
	}
}
namespace WenklyStudio.Payload
{
	[Token(Token = "0x2000574")]
	public class DwarfOffsetSetter : MonoBehaviour
	{
		[Token(Token = "0x4001E0B")]
		private const float offsetMin = -0.8f;

		[Token(Token = "0x4001E0C")]
		private const float offsetMax = 0.8f;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform offsetTransform;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool reachedPosition;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 offset;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DwarfFormationState lastState;

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x936424", Offset = "0x936424", VA = "0x936424")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x936484", Offset = "0x936484", VA = "0x936484")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x936594", Offset = "0x936594", VA = "0x936594")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x93667C", Offset = "0x93667C", VA = "0x93667C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x936454", Offset = "0x936454", VA = "0x936454")]
		private void SetNewOffset()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x93657C", Offset = "0x93657C", VA = "0x93657C")]
		private void ResetTimer(DwarfFormationState lastState)
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x9367A4", Offset = "0x9367A4", VA = "0x9367A4")]
		public DwarfOffsetSetter()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class AttackTargetTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[RequireInterface(typeof(IAttackTarget))]
		private UnityEngine.Object attackTargetObject;

		[Token(Token = "0x1700037E")]
		public IAttackTarget AttackTarget
		{
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x936808", Offset = "0x936808", VA = "0x936808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x936804", Offset = "0x936804", VA = "0x936804")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x936850", Offset = "0x936850", VA = "0x936850")]
		public AttackTargetTrigger()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class CartWithDwarfsBehaviourController : MonoBehaviour, ICartBehaviour
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> dwarfsGameObjects;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemiesSlotsController enemiesSlotsController;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfsColumnSpeedChanger dwarfsColumnSpeedChanger;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CartController cartController;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DwarfsSoundController dwarfsSoundController;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RouteController frontDwarfRouteController;

		[Token(Token = "0x1700037F")]
		public float ReachedDistance
		{
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x936858", Offset = "0x936858", VA = "0x936858", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x936874", Offset = "0x936874", VA = "0x936874", Slot = "5")]
		public void Initialize(RoutePoint spawnRoutePoint, List<RoutePoint> additionalSpawnRoutePoints)
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x9369C8", Offset = "0x9369C8", VA = "0x9369C8")]
		private RoutePoint GetMachedRoutepoint(DwarfController dwarf, List<RoutePoint> routePoints)
		{
			return null;
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x936C5C", Offset = "0x936C5C", VA = "0x936C5C", Slot = "7")]
		public void StartCart()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x936DD8", Offset = "0x936DD8", VA = "0x936DD8", Slot = "6")]
		public void GroundCart()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x936DF4", Offset = "0x936DF4", VA = "0x936DF4", Slot = "8")]
		public void OnFinishedRoute()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x936AD0", Offset = "0x936AD0", VA = "0x936AD0")]
		private void EnableDwarf(DwarfController dwarfController, RoutePoint dwarfSpawnPoint, float distanceInColumn)
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x936EAC", Offset = "0x936EAC", VA = "0x936EAC")]
		public CartWithDwarfsBehaviourController()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class DwarfController : MonoBehaviour
	{
		[Token(Token = "0x4001E1D")]
		private const float modelOffsetMin = -0.5f;

		[Token(Token = "0x4001E1E")]
		private const float modelOffsetMax = 0.5f;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 FormationOffset;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyMovementController dwarfMovementController;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RandomDwarfWeaponController randomDwarfWeaponController;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FormationColumnTag formationColumnTag;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform dwarfTransformInDefenseFormation;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DwarfReferencesSetter referenceSetter;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[RequireInterface(typeof(IMovementProcessor))]
		[SerializeField]
		private UnityEngine.Object movementProcessor;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool isSettingOffset;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform modelTransform;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float randomMin;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float randomMax;

		[Token(Token = "0x17000380")]
		public IMovementProcessor MovementProcessor
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x936F28", Offset = "0x936F28", VA = "0x936F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		public ColumnTag _ColumnTag
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x936F70", Offset = "0x936F70", VA = "0x936F70")]
			get
			{
				return default(ColumnTag);
			}
		}

		[Token(Token = "0x17000382")]
		public RouteController RouteController
		{
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x936F8C", Offset = "0x936F8C", VA = "0x936F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public DwarfAnimatorController DwarfAnimatorController
		{
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x936F94", Offset = "0x936F94", VA = "0x936F94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public Transform ModelTransform
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x936F9C", Offset = "0x936F9C", VA = "0x936F9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public bool CanChangeSpeed
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x936FA4", Offset = "0x936FA4", VA = "0x936FA4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x936FAC", Offset = "0x936FAC", VA = "0x936FAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public float SpeedFactorOvertime
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x936FB8", Offset = "0x936FB8", VA = "0x936FB8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x936FC0", Offset = "0x936FC0", VA = "0x936FC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public Vector3 ModelOffset
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x936FC8", Offset = "0x936FC8", VA = "0x936FC8")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x936FD4", Offset = "0x936FD4", VA = "0x936FD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x936FE0", Offset = "0x936FE0", VA = "0x936FE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x937054", Offset = "0x937054", VA = "0x937054")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x936DF8", Offset = "0x936DF8", VA = "0x936DF8")]
		public void Initialize(RoutePoint routePoint)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x9371AC", Offset = "0x9371AC", VA = "0x9371AC")]
		public void EnableMovement()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x9371C8", Offset = "0x9371C8", VA = "0x9371C8")]
		public void DisableMovement()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x9371E4", Offset = "0x9371E4", VA = "0x9371E4")]
		public void RunRuningAnim()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x937200", Offset = "0x937200", VA = "0x937200")]
		public void RunShieldAnim()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x93721C", Offset = "0x93721C", VA = "0x93721C")]
		public void ResetSpeed()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x9370B0", Offset = "0x9370B0", VA = "0x9370B0")]
		private void SetDwarfSpeed(float speed)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x937238", Offset = "0x937238", VA = "0x937238")]
		public void ChangeDwarfSpeedOverTime(float speedFactorOvertime)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x937248", Offset = "0x937248", VA = "0x937248")]
		public void SetReferences(Transform modelTransform)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x937250", Offset = "0x937250", VA = "0x937250")]
		public DwarfController()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class DwarfFormationController : MonoBehaviour, IResetable
	{
		[Token(Token = "0x200057A")]
		[CompilerGenerated]
		private sealed class <GoToFormationCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DwarfFormationController <>4__this;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IDwarfFormationTransitionState targetState;

			[Token(Token = "0x1700038E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002013")]
				[Address(RVA = "0x937AD0", Offset = "0x937AD0", VA = "0x937AD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002015")]
				[Address(RVA = "0x937B18", Offset = "0x937B18", VA = "0x937B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0x93797C", Offset = "0x93797C", VA = "0x93797C")]
			[DebuggerHidden]
			public <GoToFormationCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0x937A04", Offset = "0x937A04", VA = "0x937A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002012")]
			[Address(RVA = "0x937A08", Offset = "0x937A08", VA = "0x937A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002014")]
			[Address(RVA = "0x937AD8", Offset = "0x937AD8", VA = "0x937AD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057B")]
		[CompilerGenerated]
		private sealed class <RunCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DwarfFormationController <>4__this;

			[Token(Token = "0x17000390")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002019")]
				[Address(RVA = "0x937BDC", Offset = "0x937BDC", VA = "0x937BDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000391")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600201B")]
				[Address(RVA = "0x937C24", Offset = "0x937C24", VA = "0x937C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002016")]
			[Address(RVA = "0x9379A4", Offset = "0x9379A4", VA = "0x9379A4")]
			[DebuggerHidden]
			public <RunCoroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x937B20", Offset = "0x937B20", VA = "0x937B20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x937B24", Offset = "0x937B24", VA = "0x937B24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x937BE4", Offset = "0x937BE4", VA = "0x937BE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float movementSpeed;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyMovementController dwarfMovementController;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[RequireInterface(typeof(IDwarfFormationTransitionState))]
		private UnityEngine.Object defensiveDwarfFormationState;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[RequireInterface(typeof(IDwarfFormationTransitionState))]
		private UnityEngine.Object runningDwarfFormationState;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DwarfFormationState formationState;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDwarfFormationTransitionState formationTransitionState;

		[Token(Token = "0x17000388")]
		public float RotationSpeed
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x9374DC", Offset = "0x9374DC", VA = "0x9374DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000389")]
		public float MovementSpeed
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x9374E4", Offset = "0x9374E4", VA = "0x9374E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038A")]
		private IDwarfFormationTransitionState DefensiveDwarfFormationState
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0x9374EC", Offset = "0x9374EC", VA = "0x9374EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		private IDwarfFormationTransitionState RunningDwarfFormationState
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x937534", Offset = "0x937534", VA = "0x937534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public DwarfFormationState FormationState
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x93757C", Offset = "0x93757C", VA = "0x93757C")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x937584", Offset = "0x937584", VA = "0x937584")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public IDwarfFormationTransitionState FormationTransitionState
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0x9375C8", Offset = "0x9375C8", VA = "0x9375C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x9375D0", Offset = "0x9375D0", VA = "0x9375D0")]
			set
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OnGotToRunningFormation
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x93726C", Offset = "0x93726C", VA = "0x93726C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x937308", Offset = "0x937308", VA = "0x937308")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action OnGotToDefensiveFormation
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x9373A4", Offset = "0x9373A4", VA = "0x9373A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x937440", Offset = "0x937440", VA = "0x937440")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x93769C", Offset = "0x93769C", VA = "0x93769C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x937754", Offset = "0x937754", VA = "0x937754")]
		public void GoToRunningFormation(float delay)
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x9377CC", Offset = "0x9377CC", VA = "0x9377CC")]
		public void GoToDefensiveFormation(float delay)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x9377F8", Offset = "0x9377F8", VA = "0x9377F8")]
		public void Run(float delay)
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x93789C", Offset = "0x93789C", VA = "0x93789C")]
		public void TryEnableRun()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x937780", Offset = "0x937780", VA = "0x937780")]
		private void GoToFormation(IDwarfFormationTransitionState transitionState, float delay)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x9378DC", Offset = "0x9378DC", VA = "0x9378DC")]
		[IteratorStateMachine(typeof(<GoToFormationCoroutine>d__34))]
		private IEnumerator GoToFormationCoroutine(IDwarfFormationTransitionState targetState, float delay)
		{
			return null;
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x937818", Offset = "0x937818", VA = "0x937818")]
		[IteratorStateMachine(typeof(<RunCoroutine>d__35))]
		private IEnumerator RunCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x9379CC", Offset = "0x9379CC", VA = "0x9379CC", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x9379FC", Offset = "0x9379FC", VA = "0x9379FC")]
		public DwarfFormationController()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public enum DwarfFormationState
	{
		[Token(Token = "0x4001E44")]
		DuringTransition,
		[Token(Token = "0x4001E45")]
		Running,
		[Token(Token = "0x4001E46")]
		Defensive
	}
	[Token(Token = "0x200057D")]
	public class DwarfReferencesSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Components")]
		private RandomDwarfWeaponController randomDwarfWeaponController;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Mobile References")]
		[SerializeField]
		private DwarfReferences dwarfReferencesMobile;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("PC References")]
		[SerializeField]
		private DwarfReferences dwarfReferencesPC;

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x9370E8", Offset = "0x9370E8", VA = "0x9370E8", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x937C2C", Offset = "0x937C2C", VA = "0x937C2C")]
		private void SetReferences(DwarfReferences dwarfReferences)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x937C88", Offset = "0x937C88", VA = "0x937C88")]
		public DwarfReferencesSetter()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class DwarfsColumnSpeedChanger : MonoBehaviour
	{
		[Token(Token = "0x200057F")]
		private struct dwarf
		{
			[Token(Token = "0x17000392")]
			public readonly Transform Transform
			{
				[Token(Token = "0x6002025")]
				[Address(RVA = "0x9380B8", Offset = "0x9380B8", VA = "0x9380B8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			public readonly EnemyMovementController EnemyMovementController
			{
				[Token(Token = "0x6002026")]
				[Address(RVA = "0x9380C0", Offset = "0x9380C0", VA = "0x9380C0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			public readonly FormationColumnTag formationColumnTag
			{
				[Token(Token = "0x6002027")]
				[Address(RVA = "0x9380C8", Offset = "0x9380C8", VA = "0x9380C8")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000395")]
			public readonly DwarfController DwarfController
			{
				[Token(Token = "0x6002028")]
				[Address(RVA = "0x9380D0", Offset = "0x9380D0", VA = "0x9380D0")]
				[CompilerGenerated]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			public readonly Vector3 DefaultVectorToTarget
			{
				[Token(Token = "0x6002029")]
				[Address(RVA = "0x9380D8", Offset = "0x9380D8", VA = "0x9380D8")]
				[CompilerGenerated]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x937EDC", Offset = "0x937EDC", VA = "0x937EDC")]
			public dwarf(DwarfController newDwarf)
			{
			}
		}

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CartWithDwarfsBehaviourController cartWithDwarfsBehaviourController;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speedFactorOvertime;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxDistanceFormCeneterOffset;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController[] _dwarfs;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private dwarf[] dwarfs;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localVectorFromDwarfToTarget;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float directionSign;

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x937C90", Offset = "0x937C90", VA = "0x937C90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x937E5C", Offset = "0x937E5C", VA = "0x937E5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x936B38", Offset = "0x936B38", VA = "0x936B38")]
		public void InitDwarfes()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x937C94", Offset = "0x937C94", VA = "0x937C94")]
		private void AdjustDwarfesSpeed()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x938048", Offset = "0x938048", VA = "0x938048")]
		private bool ShouldResetSpeed(dwarf dwarf)
		{
			return default(bool);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x9380B0", Offset = "0x9380B0", VA = "0x9380B0")]
		public DwarfsColumnSpeedChanger()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class DwarfsFormationController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int dwarfsInColumnCount;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float distanceInColumn;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfFormationController middleDwarfInFormation;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfFormationController[] sideDwarfsInFormation;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DwarfsColumnSpeedChanger dwarfsColumnSpeedChanger;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float maxGoingToFormationDelay;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private DwarfFormationState formationState;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DwarfFormationState targetFormationState;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<DwarfFormationState> OnFormationStateChange;

		[Token(Token = "0x17000397")]
		public int DwarfsInColumnCount
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x9380E4", Offset = "0x9380E4", VA = "0x9380E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000398")]
		public float DistanceInColumn
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x9380EC", Offset = "0x9380EC", VA = "0x9380EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000399")]
		public DwarfFormationState FormationState
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x9380F4", Offset = "0x9380F4", VA = "0x9380F4")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x9380FC", Offset = "0x9380FC", VA = "0x9380FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public DwarfFormationState TargetFormationState
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x93822C", Offset = "0x93822C", VA = "0x93822C")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x936C78", Offset = "0x936C78", VA = "0x936C78")]
			set
			{
			}
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x938234", Offset = "0x938234", VA = "0x938234")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x93828C", Offset = "0x93828C", VA = "0x93828C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x9382E4", Offset = "0x9382E4", VA = "0x9382E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x9382E8", Offset = "0x9382E8", VA = "0x9382E8")]
		private void SetCorrectState()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x93834C", Offset = "0x93834C", VA = "0x93834C", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x938358", Offset = "0x938358", VA = "0x938358", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x938410", Offset = "0x938410", VA = "0x938410", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x9384D8", Offset = "0x9384D8", VA = "0x9384D8", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x9384DC", Offset = "0x9384DC", VA = "0x9384DC", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x9384E0", Offset = "0x9384E0", VA = "0x9384E0", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x9384E4", Offset = "0x9384E4", VA = "0x9384E4", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x9384E8", Offset = "0x9384E8", VA = "0x9384E8")]
		public DwarfsFormationController()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public interface IDwarfFormationTransitionState
	{
		[Token(Token = "0x600203D")]
		void Initialize();

		[Token(Token = "0x600203E")]
		void HandleUpdate();
	}
	[Token(Token = "0x2000582")]
	public class MiddleDwarfDefensiveFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x9384F0", Offset = "0x9384F0", VA = "0x9384F0", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x938564", Offset = "0x938564", VA = "0x938564", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x938568", Offset = "0x938568", VA = "0x938568")]
		public MiddleDwarfDefensiveFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class MiddleDwarfRunningFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x938570", Offset = "0x938570", VA = "0x938570", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x938574", Offset = "0x938574", VA = "0x938574", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x9385D0", Offset = "0x9385D0", VA = "0x9385D0")]
		public MiddleDwarfRunningFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class SideDwarfDefensiveFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform defensiveSpot;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float formationChangeMovingProgress;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float formationChangeRotatingProgress;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startingPosition;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion startingRotation;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float distanceToMove;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float angleToRotate;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isRotatingRight;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float scaleMultiplier;

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x9385D8", Offset = "0x9385D8", VA = "0x9385D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x93862C", Offset = "0x93862C", VA = "0x93862C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x9386AC", Offset = "0x9386AC", VA = "0x9386AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x93872C", Offset = "0x93872C", VA = "0x93872C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x938B40", Offset = "0x938B40", VA = "0x938B40", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x938AB8", Offset = "0x938AB8", VA = "0x938AB8")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x938D60", Offset = "0x938D60", VA = "0x938D60")]
		private void UpdateStartingOrientation()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x938DBC", Offset = "0x938DBC", VA = "0x938DBC")]
		public SideDwarfDefensiveFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class SideDwarfRunningFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float formationChangeMovingProgress;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float formationChangeRotatingProgress;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startingPosition;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion startingRotation;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float distanceToMove;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float angleToRotate;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isRotatingRight;

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x938DC4", Offset = "0x938DC4", VA = "0x938DC4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x93913C", Offset = "0x93913C", VA = "0x93913C", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x939334", Offset = "0x939334", VA = "0x939334")]
		public SideDwarfRunningFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class CartDirectionIndicatorsSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float spawningFrequencyHz;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SplineCreator splineCreator;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float alphaGrowth;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxAlpha;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float distanceBetweenIndicators;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject indicatorPrefab;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ICartBehaviour cartBehaviour;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentDistance;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float currentAlpha;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CartDirectionIndicator cartDirectionIndicator;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x93933C", Offset = "0x93933C", VA = "0x93933C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x9394CC", Offset = "0x9394CC", VA = "0x9394CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x93965C", Offset = "0x93965C", VA = "0x93965C")]
		private void StartSpawning()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x93970C", Offset = "0x93970C", VA = "0x93970C")]
		private void StopSpawning()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x939758", Offset = "0x939758", VA = "0x939758")]
		private void SpawnVizualizer()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x939868", Offset = "0x939868", VA = "0x939868")]
		private void SpawnIndicator()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x93995C", Offset = "0x93995C", VA = "0x93995C")]
		public CartDirectionIndicatorsSpawner()
		{
		}
	}
}
namespace AmazingAssets.TerrainToMesh.Example
{
	[Token(Token = "0x2000587")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportDetailMesh : MonoBehaviour
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x939964", Offset = "0x939964", VA = "0x939964")]
		private void Start()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x939CB8", Offset = "0x939CB8", VA = "0x939CB8")]
		public ExportDetailMesh()
		{
		}
	}
	[Token(Token = "0x2000588")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportGrass : MonoBehaviour
	{
		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x939CC8", Offset = "0x939CC8", VA = "0x939CC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x93A204", Offset = "0x93A204", VA = "0x93A204")]
		public ExportGrass()
		{
		}
	}
	[Token(Token = "0x2000589")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMesh : MonoBehaviour
	{
		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x93A214", Offset = "0x93A214", VA = "0x93A214")]
		private void Start()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x93A388", Offset = "0x93A388", VA = "0x93A388")]
		public ExportMesh()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndBasemap : MonoBehaviour
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mapsResolution;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool exportHoles;

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x93A398", Offset = "0x93A398", VA = "0x93A398")]
		private void Start()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x93A6C8", Offset = "0x93A6C8", VA = "0x93A6C8")]
		private void InitializeMaterial(Material material)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x93AA10", Offset = "0x93AA10", VA = "0x93AA10")]
		private void SetupAlphaTest(Material material)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x93AB98", Offset = "0x93AB98", VA = "0x93AB98")]
		public ExportMeshAndBasemap()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndBasemapByPositionIndex : MonoBehaviour
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mapsResolution;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool exportHoles;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int chunkCountHorizontal;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int chunkCountVertical;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Chunk count is 4x4")]
		[Range(0f, 3f)]
		public int positionX;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 3f)]
		public int positionY;

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x93ABB0", Offset = "0x93ABB0", VA = "0x93ABB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x93AF10", Offset = "0x93AF10", VA = "0x93AF10")]
		private void InitializeMaterial(Material material)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x93B258", Offset = "0x93B258", VA = "0x93B258")]
		private void SetupAlphaTest(Material material)
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x93B3E0", Offset = "0x93B3E0", VA = "0x93B3E0")]
		public ExportMeshAndBasemapByPositionIndex()
		{
		}
	}
	[Token(Token = "0x200058C")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndSplatmap : MonoBehaviour
	{
		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool terrainHasHoles;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool createFallbackTextures;

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x9541CC", Offset = "0x9541CC", VA = "0x9541CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x9543A4", Offset = "0x9543A4", VA = "0x9543A4")]
		public ExportMeshAndSplatmap()
		{
		}
	}
	[Token(Token = "0x200058D")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshWithEdgeFall : MonoBehaviour
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeFall edgeFall;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D edgeFallTexture;

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x9543B4", Offset = "0x9543B4", VA = "0x9543B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x95462C", Offset = "0x95462C", VA = "0x95462C")]
		public ExportMeshWithEdgeFall()
		{
		}
	}
	[Token(Token = "0x200058E")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportTrees : MonoBehaviour
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x9546B0", Offset = "0x9546B0", VA = "0x9546B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x9549E8", Offset = "0x9549E8", VA = "0x9549E8")]
		public ExportTrees()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x200058F")]
	public class CameraFly : MonoBehaviour
	{
		[Token(Token = "0x2000590")]
		private class CameraState
		{
			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x954A4C", Offset = "0x954A4C", VA = "0x954A4C")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x954FA4", Offset = "0x954FA4", VA = "0x954FA4")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0x955024", Offset = "0x955024", VA = "0x955024")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x9550AC", Offset = "0x9550AC", VA = "0x9550AC")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x9552D0", Offset = "0x9552D0", VA = "0x9552D0")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		[Header("Rotation Settings")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		public float rotationLerpTime;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x9549F8", Offset = "0x9549F8", VA = "0x9549F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x954AD0", Offset = "0x954AD0", VA = "0x954AD0")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x954D00", Offset = "0x954D00", VA = "0x954D00")]
		private void Update()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x9550F4", Offset = "0x9550F4", VA = "0x9550F4")]
		public CameraFly()
		{
		}
	}
}
